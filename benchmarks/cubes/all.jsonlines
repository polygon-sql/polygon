{"id": "textbook/16", "sql1": "\nSELECT `p_name`\nFROM\n  (SELECT `p_name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `16_2` AS `LHS`\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM\n                (SELECT `LHS`.`s_key` AS `s_key`,\n                        `LHS`.`p_id` AS `p_id`,\n                        `RHS`.`s_name` AS `s_name`\n                 FROM `16_1` AS `LHS`\n                 INNER JOIN `16_3` AS `RHS` ON (`LHS`.`s_key` = `RHS`.`s_key`))\n              WHERE (`s_name` != 'AWS')) AS RHS\n           WHERE (LHS.p_id = RHS.p_id) ))\n   GROUP BY p_name)\nORDER BY p_name\n", "sql2": "SELECT DISTINCT P.P_name\nFROM '16-2' AS P JOIN '16-1' AS C JOIN '16-3' AS S\nWHERE P.P_id = C.P_id\n  AND C.S_key = S.S_key\n  AND S.S_name LIKE 'AWS'\n  AND NOT EXISTS(SELECT *\n                 FROM '16-1' AS C1 JOIN '16-3' AS S1\n                 WHERE P.P_id = C1.P_id\n                   AND C1.S_key = S1.S_key\n                   AND S1.S_name NOT LIKE 'AWS')\n", "schema": "textbook/tables/16.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/6", "sql1": "\nSELECT f_name\nFROM\n  (SELECT f_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.s_key AS s_key,\n             LHS.c_name AS c_name,\n             LHS.f_key AS f_key,\n             RHS.f_name AS f_name\n      FROM\n        (SELECT LHS.s_key AS s_key,\n                LHS.c_name AS c_name,\n                RHS.f_key AS f_key\n         FROM 6_1 AS LHS\n         INNER JOIN 6_2 AS RHS ON (LHS.c_name = RHS.c_name)) AS LHS\n      INNER JOIN 6_3 AS RHS ON (LHS.f_key = RHS.f_key))\n   GROUP BY f_name)\nWHERE (n <= 5)\nORDER BY f_name\n", "sql2": "SELECT DISTINCT F.F_name\nFROM '6-3' AS F\nWHERE 5 >= (SELECT COUNT(E.S_key)\n           FROM '6-2' AS C JOIN '6-1' AS E\n           WHERE C.C_name = E.C_name\n             AND C.F_key = F.F_key)\n", "schema": "textbook/tables/6.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/7", "sql1": "\nSELECT LEVEL,\n       meanage\nFROM\n  (SELECT LEVEL,\n          AVG(age) AS meanage\n   FROM 7_1\n   GROUP BY LEVEL)\nORDER BY LEVEL\n", "sql2": "SELECT S.level, AVG(S.age)\nFROM '7-1' AS S\nGROUP BY S.level\n", "schema": "textbook/tables/7.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/21", "sql1": "\nSELECT DISTINCT `s_name`\nFROM\n  (SELECT `LHS`.`s_key` AS `s_key`,\n          `LHS`.`p_id` AS `p_id`,\n          `LHS`.`color` AS `color`,\n          `RHS`.`s_name` AS `s_name`\n   FROM\n     (SELECT `LHS`.`s_key` AS `s_key`,\n             `LHS`.`p_id` AS `p_id`,\n             `RHS`.`color` AS `color`\n      FROM `21_1` AS `LHS`\n      INNER JOIN `21_2` AS `RHS` ON (`LHS`.`p_id` = `RHS`.`p_id`)) AS `LHS`\n   INNER JOIN `21_3` AS `RHS` ON (`LHS`.`s_key` = `RHS`.`s_key`))\nWHERE (`color` = 'red'\n       OR `color` = 'green')\nORDER BY s_name\n", "sql2": "SELECT DISTINCT S.S_name\nFROM '21-1' AS C JOIN '21-2' AS P JOIN '21-3' AS S\nWHERE C.P_id = P.P_id\n  AND C.S_key = S.S_key\n  AND P.color = 'red'\nUNION\nSELECT DISTINCT S1.S_name\nFROM '21-1' AS C1 JOIN '21-2' AS P1 JOIN '21-3' AS S1\nWHERE C1.P_id = P1.P_id\n  AND C1.S_key = S1.S_key\n  AND P1.color = 'green'\n", "schema": "textbook/tables/21.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/10", "sql1": "\nSELECT s_name\nFROM\n  (SELECT s_key,\n          n,\n          s_name\n   FROM\n     (SELECT s_key,\n             n,\n             s_name,\n             MAX(n) OVER () AS zzz3\n      FROM\n        (SELECT LHS.s_key AS s_key,\n                LHS.n AS n,\n                RHS.s_name AS s_name\n         FROM\n           (SELECT s_key,\n                   COUNT(*) AS n\n            FROM 10_1\n            GROUP BY s_key) AS LHS\n         INNER JOIN 10_2 AS RHS ON (LHS.s_key = RHS.s_key)))\n   WHERE (n = zzz3))\nORDER BY s_name\n", "sql2": "SELECT DISTINCT S.S_name\nFROM '10-2' AS S\nWHERE S.S_key IN (SELECT E.S_key\n                  FROM '10-1' AS E\n                  GROUP BY E.S_key\n                  HAVING COUNT(*) >= ALL (SELECT COUNT (*)\n                      FROM '10-1' AS E2\n                      GROUP BY E2.S_key ))\n", "schema": "textbook/tables/10.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/1", "sql1": "\nSELECT `s_name`\nFROM\n  (SELECT `LHS`.`c_name` AS `c_name`,\n          `LHS`.`f_key` AS `f_key`,\n          `LHS`.`s_key` AS `s_key`,\n          `LHS`.`f_name` AS `f_name`,\n          `RHS`.`s_name` AS `s_name`,\n          `RHS`.`level` AS `level`\n   FROM\n     (SELECT `LHS`.`c_name` AS `c_name`,\n             `LHS`.`f_key` AS `f_key`,\n             `LHS`.`s_key` AS `s_key`,\n             `RHS`.`f_name` AS `f_name`\n      FROM\n        (SELECT `LHS`.`c_name` AS `c_name`,\n                `LHS`.`f_key` AS `f_key`,\n                `RHS`.`s_key` AS `s_key`\n         FROM `1_1` AS `LHS`\n         INNER JOIN `1_2` AS `RHS` ON (`LHS`.`c_name` = `RHS`.`c_name`)) AS `LHS`\n      INNER JOIN `1_3` AS `RHS` ON (`LHS`.`f_key` = `RHS`.`f_key`)) AS `LHS`\n   INNER JOIN `1_4` AS `RHS` ON (`LHS`.`s_key` = `RHS`.`s_key`))\nWHERE (`f_name` = 'faculty1'\n       AND `level` = 'JR')\nORDER BY s_name\n", "sql2": "SELECT DISTINCT S.S_name\nFROM '1-4' AS S JOIN '1-1' AS C JOIN '1-2' AS E JOIN '1-3' AS F\nWHERE S.s_key = E.s_key AND E.c_name = C.c_name AND C.f_key = F.f_key AND\nF.f_name = 'faculty1' AND S.level = 'JR'\n", "schema": "textbook/tables/1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/11", "sql1": "\nSELECT s_name\nFROM\n  (SELECT *\n   FROM 11_1 AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM 11_2 AS RHS\n        WHERE (LHS.s_key = RHS.s_key) ))\nORDER BY s_name\n", "sql2": "SELECT DISTINCT S.s_name\nFROM '11-1' AS S\nWHERE S.s_key NOT IN (SELECT E.s_key\n                      FROM '11-2' AS E)\n", "schema": "textbook/tables/11.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/24", "sql1": "\nSELECT DISTINCT aname\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.aname AS aname,\n          LHS.crusingrange AS crusingrange,\n          LHS.eid AS eid,\n          LHS.ename AS ename,\n          LHS.salary AS salary\n   FROM\n     (SELECT LHS.aid AS aid,\n             LHS.aname AS aname,\n             LHS.crusingrange AS crusingrange,\n             RHS.eid AS eid,\n             RHS.ename AS ename,\n             RHS.salary AS salary\n      FROM aircraft AS LHS\n      CROSS JOIN employees AS RHS) AS LHS\n   INNER JOIN certified AS RHS ON (LHS.aid = RHS.aid\n                                      AND LHS.eid = RHS.eid))\nWHERE (salary > 80000.0)\nORDER BY aname\n", "sql2": "SELECT DISTINCT A.aname\nFROM aircraft AS A\nWHERE A.Aid IN (SELECT C.aid\n                FROM certified AS C JOIN\n                     employees AS E\n                WHERE C.eid = E.eid\n                  AND NOT EXISTS (SELECT *\n                                  FROM employees AS E1\n                                  WHERE E1.eid = E.eid\n                                    AND E1.salary < 80000))\n", "schema": "textbook/tables/24.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/13", "sql1": "\nSELECT p_name\nFROM\n  (SELECT LHS.s_key AS s_key,\n          LHS.p_id AS p_id,\n          RHS.p_name AS p_name\n   FROM 13_1 AS LHS\n   INNER JOIN 13_2 AS RHS ON (LHS.p_id = RHS.p_id))\nORDER BY p_name\n", "sql2": "SELECT DISTINCT P.P_name\nFROM '13-2' AS P JOIN '13-1' AS C\nWHERE P.P_id = C.P_id\n", "schema": "textbook/tables/13.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/3", "sql1": "\nSELECT `id_key`\nFROM\n  (SELECT `LHS`.`id_key` AS `id_key`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`room` AS `room`\n   FROM\n     (SELECT `id_key`,\n             COUNT(*) AS `n`\n      FROM `3_2`\n      GROUP BY `id_key`) AS `LHS`\n   LEFT JOIN `3_1` AS `RHS` ON (`LHS`.`id_key` = `RHS`.`id_key`))\nWHERE (`room` = 'R128'\n       OR n > 4)\nORDER BY id_key\n", "sql2": "SELECT C.ID_key\nFROM '3-1' AS C\nWHERE C.room = 'R128'\nOR C.ID_key IN (SELECT E.ID_key\nFROM '3-2' AS E\nGROUP BY E.ID_key\nHAVING COUNT (*) >= 5)\n", "schema": "textbook/tables/3.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/8", "sql1": "\nSELECT `level`,\n       `meanage`\nFROM\n  (SELECT `level`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT *\n      FROM `8_1`\n      WHERE (`level` != 'JR'))\n   GROUP BY LEVEL)\nORDER BY LEVEL\n", "sql2": "SELECT S.level, AVG(S.age)\nFROM '8-1' AS S\nWHERE S.level != 'JR'\nGROUP BY S.level\n", "schema": "textbook/tables/8.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/18", "sql1": "\nSELECT p_id,\n       s_name\nFROM\n  (SELECT LHS.s_key AS s_key,\n          LHS.p_id AS p_id,\n          LHS.cost AS cost,\n          LHS.s_name AS s_name\n   FROM\n     (SELECT LHS.s_key AS s_key,\n             LHS.p_id AS p_id,\n             LHS.cost AS cost,\n             RHS.s_name AS s_name\n      FROM 18_1 AS LHS\n      INNER JOIN 18_3 AS RHS ON (LHS.s_key = RHS.s_key)) AS LHS\n   INNER JOIN\n     (SELECT p_id,\n             MAX(cost) AS cost\n      FROM 18_1\n      GROUP BY p_id) AS RHS ON (LHS.p_id = RHS.p_id\n                                AND LHS.cost = RHS.cost))\nORDER BY p_id\n", "sql2": "SELECT C.P_id, S.S_name\nFROM '18-3' AS S JOIN '18-1' AS C\nWHERE C.S_key = S.S_key\n  AND C.cost = (SELECT MAX(C1.cost)\n                FROM '18-1' AS C1\n                WHERE C1.P_id = C.P_id)\n", "schema": "textbook/tables/18.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/14", "sql1": "\nSELECT DISTINCT s_name\nFROM\n  (SELECT s_key,\n          p_id,\n          color,\n          s_name,\n          n\n   FROM\n     (SELECT s_key,\n             p_id,\n             color,\n             s_name,\n             n,\n             MAX(n) OVER () AS zzz4\n      FROM\n        (SELECT LHS.s_key AS s_key,\n                LHS.p_id AS p_id,\n                LHS.color AS color,\n                LHS.s_name AS s_name,\n                RHS.n AS n\n         FROM\n           (SELECT LHS.s_key AS s_key,\n                   LHS.p_id AS p_id,\n                   LHS.color AS color,\n                   RHS.s_name AS s_name\n            FROM\n              (SELECT LHS.s_key AS s_key,\n                      LHS.p_id AS p_id,\n                      RHS.color AS color\n               FROM 14_1 AS LHS\n               INNER JOIN 14_2 AS RHS ON (LHS.p_id = RHS.p_id)) AS LHS\n            INNER JOIN 14_3 AS RHS ON (LHS.s_key = RHS.s_key)) AS LHS\n         INNER JOIN\n           (SELECT s_key,\n                   COUNT(*) AS n\n            FROM 14_1\n            GROUP BY s_key) AS RHS ON (LHS.s_key = RHS.s_key)))\n   WHERE (n = zzz4))\nORDER BY s_name\n", "sql2": "SELECT S.S_name\nFROM '14-3' AS S\nWHERE NOT EXISTS(SELECT P.P_id\n                 FROM '14-2' AS P\n                 EXCEPT\n                 SELECT C.P_id\n                 FROM '14-1' AS C\n                 WHERE C.S_key = S.S_key)\n", "schema": "textbook/tables/14.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/15", "sql1": "\nSELECT `s_name`\nFROM\n  (SELECT `color`,\n          `s_name`,\n          `n`\n   FROM\n     (SELECT `color`,\n             `s_name`,\n             `n`,\n             MAX(`n`) OVER () AS `zzz4`\n      FROM\n        (SELECT `color`,\n                `s_name`,\n                COUNT(*) AS `n`\n         FROM\n           (SELECT `LHS`.`s_key` AS `s_key`,\n                   `LHS`.`p_id` AS `p_id`,\n                   `LHS`.`color` AS `color`,\n                   `RHS`.`s_name` AS `s_name`\n            FROM\n              (SELECT `LHS`.`s_key` AS `s_key`,\n                      `LHS`.`p_id` AS `p_id`,\n                      `RHS`.`color` AS `color`\n               FROM `15_1` AS `LHS`\n               INNER JOIN `15_2` AS `RHS` ON (`LHS`.`p_id` = `RHS`.`p_id`)) AS `LHS`\n            INNER JOIN `15_3` AS `RHS` ON (`LHS`.`s_key` = `RHS`.`s_key`))\n         GROUP BY `color`,\n                  `s_name`))\n   WHERE (`color` = 'red'\n          AND n = zzz4))\nORDER BY s_name\n", "sql2": "SELECT S.S_name\nFROM '15-3' AS S\nWHERE NOT EXISTS(SELECT P.P_id\n                 FROM '15-2' AS P\n                 WHERE P.color = 'red'\n                 EXCEPT\n                 SELECT C.P_id\n                 FROM '15-1' AS C JOIN '15-2' AS P\n                 WHERE C.S_key = S.S_key\n                   AND C.P_id = P.P_id\n                   AND P.color = 'red')\n", "schema": "textbook/tables/15.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "textbook/5", "sql1": "\nSELECT f_name\nFROM\n  (SELECT f_name,\n          n\n   FROM\n     (SELECT f_name,\n             n,\n             MAX(n) OVER () AS zzz3\n      FROM\n        (SELECT f_name,\n                COUNT(*) AS n\n         FROM\n           (SELECT LHS.f_key AS f_key,\n                   LHS.f_name AS f_name,\n                   RHS.c_name AS c_name,\n                   RHS.room AS room\n            FROM 5_2 AS LHS\n            LEFT JOIN 5_1 AS RHS ON (LHS.f_key = RHS.f_key))\n         GROUP BY f_name))\n   WHERE (n = zzz3))\nORDER BY f_name\n", "sql2": "SELECT DISTINCT F.F_name\nFROM '5-2' AS F\nWHERE NOT EXISTS(SELECT C.room\n                 FROM AS '5-1' AS C\n                 EXCEPT\n                 SELECT C1.room\n                 FROM AS '5-1' AS C1\n                 WHERE C1.F_key = F.F_key)\n", "schema": "textbook/tables/5.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "kaggle/1_2_T_2", "sql1": "\nSELECT `city`,\n       `country`\nFROM `global_air_quality`\nWHERE (`country` = 'US')\nORDER BY city\n", "sql2": "SELECT city, country FROM global_air_quality WHERE country = 'US'", "schema": "kaggle/tables/1_2_T_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "kaggle/1_2_X_2", "sql1": "\nSELECT DISTINCT `country`\nFROM `global_air_quality_2`\nWHERE (`unit` = 'ppm')\nORDER BY country\n", "sql2": "SELECT DISTINCT country FROM global_air_quality_2 WHERE unit = 'ppm'", "schema": "kaggle/tables/1_2_X_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "kaggle/1_2_X_3", "sql1": "\nSELECT LOCATION,\n       city,\n       country,\n       pollutant,\n       value,\n       TIMESTAMP,\n       unit,\n       source_name,\n       latitude,\n       longitude,\n       averaged_over_in_hours\nFROM global_air_quality_3\nWHERE (value = 0.0)\nORDER BY LOCATION\n", "sql2": "SELECT * FROM global_air_quality_3 WHERE value = 0", "schema": "kaggle/tables/1_2_X_3.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "kaggle/1_2_T_4", "sql1": "\nSELECT `score`,\n       `title`\nFROM `hacker_news_full`\nWHERE (`type` = 'job')\nORDER BY score\n", "sql2": "SELECT score, title FROM hacker_news_full WHERE (type = 'job') ORDER BY score", "schema": "kaggle/tables/1_2_T_4.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "kaggle/1_2_T_1", "sql1": "\nSELECT `city`\nFROM `global_air_quality`\nWHERE (`country` = 'US')\nORDER BY city\n", "sql2": "SELECT city FROM global_air_quality WHERE country = 'US'", "schema": "kaggle/tables/1_2_T_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "kaggle/1_2_X_1", "sql1": "\nSELECT `country`\nFROM `global_air_quality_2`\nWHERE (`unit` = 'ppm')\nORDER BY country\n", "sql2": "SELECT country FROM global_air_quality_2 WHERE unit = 'ppm'", "schema": "kaggle/tables/1_2_X_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/050", "sql1": "\nSELECT id,\n       col1,\n       col2,\n       col3,\n       MIN(col1, col2, col3) AS themin\nFROM i050\nORDER BY id\n", "sql2": "SELECT ID, Col1, Col2, Col3, MinValue\nFROM i050\nCROSS APPLY (SELECT MIN(d) MinValue FROM (VALUES (Col1), (Col2), (Col3)) AS a(d)) A;\n", "schema": "scythe/top_rated_posts/tables/050.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/011", "sql1": "\nSELECT `vehicleid`,\n       `name`,\n       `concatcity`\nFROM\n  (SELECT `LHS`.`vehicleid` AS `vehicleid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`concatcity` AS `concatcity`\n   FROM `i011_1` AS `LHS`\n   INNER JOIN\n     (SELECT `vehicleid`,\n             string_agg(`city`, ', ') AS concatcity\n      FROM i011_2\n      GROUP BY vehicleid) AS RHS ON (LHS.vehicleid = RHS.vehicleid))\nORDER BY vehicleid\n", "sql2": "select i011_1.VehicleID, i011_1.Name, t.concatLocations\nfrom (select VehicleID, concat(City) As concatLocations\n      from i011_2\n      group by VehicleID) t\n         join i011_1\n              on i011_1.VehicleID = t.VehicleID\n", "schema": "scythe/top_rated_posts/tables/011.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/027", "sql1": "\nSELECT DISTINCT cname,\n                wmname,\n                avg_other AS maxavg\nFROM\n  (SELECT LHS.avg AS AVG,\n          LHS.maxavg AS maxavg,\n          RHS.cname AS cname,\n          RHS.wmname AS wmname,\n          RHS.avg AS avg_other\n   FROM\n     (SELECT AVG,\n             MAX(AVG) AS maxavg\n      FROM i027\n      GROUP BY AVG) AS LHS\n   CROSS JOIN i027 AS RHS)\nWHERE (AVG <= avg_other\n       AND maxavg != avg_other)\nORDER BY cname\n", "sql2": "SELECT m.cname, m.wmname, t.mx\nFROM (\n    SELECT cname, MAX(avg) AS mx\n    FROM i027\n    GROUP BY cname\n    ) AS t JOIN i027 AS m ON m.cname = t.cname AND t.mx = m.avg;\n", "schema": "scythe/top_rated_posts/tables/027.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/010", "sql1": "\nSELECT DISTINCT id, date, phone_number\nFROM i010_2\nORDER BY id\n", "sql2": "SELECT *\nFROM i010_2\nWHERE NOT EXISTS\n    (SELECT *\n     FROM i010_1\n     WHERE i010_1.phone_number = i010_2.phone_number)\n", "schema": "scythe/top_rated_posts/tables/010.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/006", "sql1": "\nSELECT id,\n       name,\n       other_columns\nFROM\n  (SELECT LHS.name AS name,\n          LHS.id AS id,\n          RHS.other_columns AS other_columns\n   FROM\n     (SELECT name,\n             MAX(id) AS id\n      FROM i006\n      GROUP BY name) AS LHS\n   LEFT JOIN i006 AS RHS ON (LHS.name = RHS.name\n                                AND LHS.id = RHS.id))\nORDER BY id\n", "sql2": "SELECT\n    a.*\nFROM i006 AS a\nJOIN (SELECT name, MAX(id) as maxid\n            FROM i006\n            GROUP BY name) AS b\nON a.id = b.maxid\n", "schema": "scythe/top_rated_posts/tables/006.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/051", "sql1": "\nSELECT id,\n       category,\n       maxdate AS date\nFROM\n  (SELECT LHS.id AS id,\n          LHS.category AS category,\n          LHS.date AS date,\n          LHS.maxdate AS maxdate,\n          RHS.category AS category_other\n   FROM\n     (SELECT id,\n             category, date, MAX(date) OVER () AS maxdate\n      FROM i051) AS LHS\n   INNER JOIN i051 AS RHS ON (LHS.id = RHS.id\n                                 AND LHS.maxdate = RHS.date))\nORDER BY id\n", "sql2": "SELECT t1.*\nFROM i051 AS t1\n         JOIN\n     (\n         SELECT category, MAX(date) AS MAXDATE\n         FROM i051\n         GROUP BY category\n     ) AS t2\n     ON T1.category = t2.category\n         AND t1.date = t2.MAXDATE\n", "schema": "scythe/top_rated_posts/tables/051.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/037", "sql1": "\nSELECT c1,\n       c2,\n       c3\nFROM\n  (SELECT LHS.c2 AS c2,\n          LHS.c1 AS c1,\n          RHS.c3 AS c3\n   FROM\n     (SELECT c2,\n             MIN(c1) AS c1\n      FROM i037\n      GROUP BY c2) AS LHS\n   LEFT JOIN i037 AS RHS ON (LHS.c2 = RHS.c2\n                                AND LHS.c1 = RHS.c1))\nORDER BY c1\n", "sql2": "select t1.*, i037.c3\nfrom (select c2, min(c1) minc1\n      from i037\n      group by c2) t1\n         join i037\n              on t1.minc1 = i037.c1\n", "schema": "scythe/top_rated_posts/tables/037.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/021", "sql1": "\nSELECT chargeid,\n       chargetype,\n       maxservicemonth\nFROM\n  (SELECT chargeid,\n          chargetype,\n          MAX(servicemonth) AS maxservicemonth\n   FROM i021\n   GROUP BY chargeid,\n            chargetype)\nORDER BY chargeid\n", "sql2": "SELECT\n  CHARGEID,\n  CHARGETYPE,\n  MAX(SERVICEMONTH) AS 'MostRecentServiceMonth'\nFROM i021\nGROUP BY CHARGEID, CHARGETYPE\n", "schema": "scythe/top_rated_posts/tables/021.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/001", "sql1": "\nSELECT `subjectid`,\n       `concatstudentname`\nFROM\n  (SELECT `subjectid`,\n          string_agg(`studentname`, ', ') AS concatstudentname\n   FROM i001\n   GROUP BY subjectid)\nORDER BY subjectid\n", "sql2": "SELECT SubjectID, CONCAT(StudentName)\nFROM i001\nGROUP BY SubjectID\n", "schema": "scythe/top_rated_posts/tables/001.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/040", "sql1": "\nSELECT GROUP,\n       subgroup,\n       n\nFROM\n  (SELECT GROUP,\n          subgroup,\n          COUNT(*) AS n\n   FROM i040\n   GROUP BY GROUP,\n            subgroup)\nORDER BY GROUP\n", "sql2": "SELECT group, subGroup, COUNT(group)\nFROM i040\nGROUP BY group, subGroup\n", "schema": "scythe/top_rated_posts/tables/040.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/016", "sql1": "\nSELECT `company_id`,\n       `concatemployee`\nFROM\n  (SELECT `company_id`,\n          string_agg(`employee`, ', ') AS concatemployee\n   FROM i016\n   GROUP BY company_id)\nORDER BY company_id\n", "sql2": "SELECT company_id, array_to_string(array_agg(employee), ', ')\nFROM i016\nGROUP BY company_id\n", "schema": "scythe/top_rated_posts/tables/016.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/023", "sql1": "\nSELECT ROW_NUMBER() OVER () AS rank,\n                         itemid,\n                         ordercount\nFROM i023\nORDER BY rank\n", "sql2": "SELECT @rank:=@rank+1 AS rank, itemID, COUNT(*) as ordercount\n  FROM i023\n  GROUP BY itemID\n  ORDER BY ordercount DESC;\n", "schema": "scythe/top_rated_posts/tables/023.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/019", "sql1": "\nSELECT id,\n       age,\n       n\nFROM\n  (SELECT LHS.id AS id,\n          LHS.age AS age,\n          RHS.n AS n\n   FROM i019 AS LHS\n   INNER JOIN\n     (SELECT age,\n             COUNT(*) AS n\n      FROM i019\n      GROUP BY age) AS RHS ON (LHS.age = RHS.age))\nORDER BY id\n", "sql2": "SELECT S.id, S.age, C.cnt\n  FROM i019 AS S\n       JOIN (SELECT age, count(age) as cnt\n                     FROM i019\n                    GROUP BY age) C ON S.age = C.age\n", "schema": "scythe/top_rated_posts/tables/019.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/039", "sql1": "\nSELECT c\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT c,\n                MAX(n) AS maxn\n         FROM\n           (SELECT c,\n                   COUNT(*) AS n\n            FROM i039\n            GROUP BY c)\n         GROUP BY c)\n      ORDER BY maxn DESC)\n   LIMIT 1)\n", "sql2": "select t2.c\nfrom (select max(cnt) as maxcnt\n      from (select c, count(*) cnt\n            from i039\n            group by c) t3) t1\n         join (select c, count(*) cnt\n               from i039\n               group by c) t2\n              on t1.maxcnt = t2.cnt\n", "schema": "scythe/top_rated_posts/tables/039.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/003", "sql1": "\nSELECT DISTINCT string_agg(`c`, ', ') AS concatc\nFROM i003\nORDER BY concatc\n", "sql2": "SELECT CONCAT(c)\nFROM i003 AS t\n", "schema": "scythe/top_rated_posts/tables/003.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/054", "sql1": "\nSELECT created_at,\n       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS COUNT\nFROM i054\nORDER BY created_at\n", "sql2": "SELECT s1.created_at,\n       SUM(s2.count) AS cumul_count\nFROM i054 AS s1\n         JOIN i054 AS s2 ON s1.created_at >= s2.created_at\nGROUP BY s1.created_at\n", "schema": "scythe/top_rated_posts/tables/054.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/055", "sql1": "\nSELECT `user`,\n       `activity`,\n       `concatpageurl`\nFROM\n  (SELECT `activity`,\n          `user`,\n          string_agg(`pageurl`, ' ') AS concatpageurl\n   FROM i055\n   GROUP BY activity,\n            USER)\nORDER BY USER\n", "sql2": "select User, Activity, concat(PageURL)\nfrom i055\ngroup by User, Activity\n", "schema": "scythe/top_rated_posts/tables/055.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/002", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.email AS email,\n          RHS.id AS id_other,\n          RHS.email AS email_other\n   FROM i002 AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             email,\n             COUNT(*) OVER () AS n\n      FROM i002) AS RHS ON (LHS.id = RHS.n\n                               AND LHS.name = RHS.name))\nORDER BY name\n", "sql2": "SELECT NAME\nFROM\n  (SELECT EMAIL, NAME, COUNT(*) AS n\n   FROM i002\n   GROUP BY EMAIL, NAME) AS t\nWHERE n > 1.0\n", "schema": "scythe/top_rated_posts/tables/002.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/014", "sql1": "\nSELECT `id`,\n       `concatstring`\nFROM\n  (SELECT `id`,\n          string_agg(`string`, ', ') AS concatstring\n   FROM i014\n   GROUP BY id)\nORDER BY id\n", "sql2": "SELECT id, GROUP_CONCAT(string SEPARATOR ' ')\nFROM i014\nGROUP BY id\n", "schema": "scythe/top_rated_posts/tables/014.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/043", "sql1": "\nSELECT customername,\n       emailaddress\nFROM\n  (SELECT customername,\n          emailaddress,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.customername AS customername,\n             LHS.emailaddress AS emailaddress,\n             RHS.customername AS customername_other\n      FROM i043 AS LHS\n      INNER JOIN i043 AS RHS ON (LHS.emailaddress = RHS.emailaddress))\n   GROUP BY customername,\n            emailaddress)\nWHERE (n > 1)\nORDER BY customername\n", "sql2": "SELECT EmailAddress, CustomerName\nFROM i043\nWHERE EmailAddress IN\n(SELECT EmailAddress\n FROM i043\n GROUP BY EmailAddress\n HAVING COUNT(*) > 1)\n", "schema": "scythe/top_rated_posts/tables/043.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/038", "sql1": "\nSELECT id,\n       name,\n       city\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.city AS city,\n          RHS.n AS n\n   FROM i038 AS LHS\n   LEFT JOIN\n     (SELECT city,\n             name,\n             COUNT(*) AS n\n      FROM i038\n      GROUP BY city,\n               name) AS RHS ON (LHS.name = RHS.name\n                                AND LHS.city = RHS.city))\nWHERE (n > 1)\nORDER BY id\n", "sql2": "select s.id, t.name, t.city\nfrom i038 AS s\n         join (\n    select name, city, count(*) as qty\n    from i038\n    group by name, city\n    having count(*) > 1\n) t on s.name = t.name and s.city = t.city\n", "schema": "scythe/top_rated_posts/tables/038.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/022", "sql1": "\nSELECT medianval AS median\nFROM\n  (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (\n                                             ORDER BY val) AS medianval\n   FROM i022)\nORDER BY median\n", "sql2": "SELECT AVG(dd.val) as median_val\nFROM (\nSELECT d.val, @rownum:=@rownum+1 as `row_number`, @total_rows:=@rownum\n  FROM i022 AS d JOIN (SELECT @rownum:=0) r\n  WHERE d.val is NOT NULL\n  -- put some where clause here\n  ORDER BY d.val\n) as dd\nWHERE dd.row_number IN ( FLOOR((@total_rows+1)/2), FLOOR((@total_rows+2)/2) );\n", "schema": "scythe/top_rated_posts/tables/022.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/029", "sql1": "\nSELECT `ticketid`,\n       `concatperson`\nFROM\n  (SELECT `ticketid`,\n          string_agg(`person`, ' ') AS concatperson\n   FROM i029\n   GROUP BY ticketid)\nORDER BY ticketid\n", "sql2": "select TicketId, listagg(Person, ', ') AS People\nfrom i029\ngroup by TicketId\n", "schema": "scythe/top_rated_posts/tables/029.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/044", "sql1": "\nSELECT id,\n       COUNT,\n       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS sumcount\nFROM i044\nORDER BY id\n", "sql2": "SELECT t.id,\n       t.count,\n       (SELECT SUM(x.count)\n          FROM i044 AS x\n         WHERE x.id <= t.id) AS cumulative_sum\nFROM i044 AS t\nORDER BY t.id\n", "schema": "scythe/top_rated_posts/tables/044.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/013", "sql1": "\nSELECT orgname,\n       n,\n       id\nFROM\n  (SELECT LHS.orgname AS orgname,\n          LHS.n AS n,\n          RHS.id AS id\n   FROM\n     (SELECT *\n      FROM\n        (SELECT orgname,\n                COUNT(*) AS n\n         FROM i013\n         GROUP BY orgname)\n      WHERE (n != 1)) AS LHS\n   INNER JOIN i013 AS RHS ON (LHS.orgname = RHS.orgname))\nORDER BY orgname\n", "sql2": "SELECT o.orgName, oc.dupeCount, o.id\nFROM i013 AS o\nJOIN (\n    SELECT orgName, COUNT(*) AS dupeCount\n    FROM i013\n    GROUP BY orgName\n    HAVING COUNT(*) > 1\n) oc ON o.orgName = oc.orgName\n", "schema": "scythe/top_rated_posts/tables/013.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/025", "sql1": "\nSELECT id,\n       value\nFROM\n  (SELECT id,\n          value,\n          ROW_NUMBER() OVER () AS row_number_\n   FROM i025)\nWHERE (row_number_ >= 3\n       AND row_number_ < 5)\nORDER BY id\n", "sql2": "WITH NumberedMyTable AS\n         (\n             SELECT Id, Value, ROW_NUMBER() OVER (ORDER BY Id) AS RowNumber\n             FROM i025\n         )\nSELECT Id, Value\nFROM NumberedMyTable\nWHERE RowNumber BETWEEN 3 AND 4\n", "schema": "scythe/top_rated_posts/tables/025.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/048", "sql1": "\nSELECT cname,\n       addressid AS minaddressid,\n       addressline\nFROM\n  (SELECT LHS.cname AS cname,\n          LHS.addressid AS addressid,\n          LHS.addressline AS addressline,\n          RHS.cname AS cname_other\n   FROM i048 AS LHS\n   INNER JOIN\n     (SELECT cname,\n             MIN(addressid) AS minaddressid\n      FROM i048\n      GROUP BY cname) AS RHS ON (LHS.addressid = RHS.minaddressid))\nORDER BY cname\n", "sql2": "SELECT M.CName,\n       first,\n       M.AddressLine\nFROM (\n         SELECT CName,\n                MIN(AddressID) AS First\n         FROM i048\n         GROUP BY CName\n     ) foo\n         JOIN i048 M\n              ON foo.CName = M.CName AND foo.First = M.AddressID\n", "schema": "scythe/top_rated_posts/tables/048.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/009", "sql1": "\nSELECT username,\n       ip,\n       time_stamp\nFROM\n  (SELECT LHS.username AS username,\n          LHS.time_stamp AS time_stamp,\n          RHS.ip AS ip\n   FROM\n     (SELECT username,\n             MAX(time_stamp) AS time_stamp\n      FROM i009\n      GROUP BY username) AS LHS\n   LEFT JOIN i009 AS RHS ON (LHS.username = RHS.username\n                                AND LHS.time_stamp = RHS.time_stamp))\nORDER BY username\n", "sql2": "SELECT u.username\n      ,u.ip\n      ,q.time_stamp\nFROM i009 AS u\nJOIN (\n    SELECT username\n          ,MAX(time_stamp) AS time_stamp\n    FROM i009\n    GROUP BY username) AS q\nON u.username = q.username\nAND u.time_stamp = q.time_stamp\n", "schema": "scythe/top_rated_posts/tables/009.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/049", "sql1": "\nSELECT `userid`,\n       `concatalias`\nFROM\n  (SELECT `userid`,\n          string_agg(`alias`, ', ') AS concatalias\n   FROM i049\n   GROUP BY userid)\nORDER BY userid\n", "sql2": "SELECT UserId, string_agg(Alias, ', ') AS concatAlias\n   FROM i049\n   GROUP BY UserId\n", "schema": "scythe/top_rated_posts/tables/049.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/045", "sql1": "\nSELECT user_id,\n       user_id_other AS n\nFROM\n  (SELECT LHS.date AS date,\n          LHS.user_id AS user_id,\n          LHS.n AS n,\n          RHS.date AS date_other,\n          RHS.user_id AS user_id_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT date, user_id,\n                   COUNT(*) AS n\n      FROM i045\n      GROUP BY date, user_id) AS LHS\n   CROSS JOIN\n     (SELECT date, user_id,\n                   COUNT(*) AS n\n      FROM i045\n      GROUP BY date, user_id) AS RHS)\nWHERE (n < n_other)\nORDER BY user_id\n", "sql2": "SELECT user_id,\n       COUNT(*)\nFROM (SELECT DISTINCT user_id,\n                      account_no,\n                      zip,\n                      date\n      FROM i045\n     ) AS payment\nGROUP BY user_id,\n         account_no,\n         date\nHAVING COUNT(*) > 1\n", "schema": "scythe/top_rated_posts/tables/045.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/top_rated_posts/028", "sql1": "\nSELECT `pid`,\n       `concatdesc`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`concatdesc` AS `concatdesc`\n   FROM\n     (SELECT `pid`,\n             string_agg(`desc`, ' ') AS concatdesc\n      FROM i028_2\n      GROUP BY pid) AS LHS\n   LEFT JOIN i028_1 AS RHS ON (LHS.pid = RHS.pid))\nORDER BY pid\n", "sql2": "SELECT pid, LISTAGG(Desc, ' ') WITHIN GROUP (ORDER BY seq) AS concatDesc\nFROM   i028_2\nGROUP BY pid;\n", "schema": "scythe/top_rated_posts/tables/028.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/011", "sql1": "\nSELECT `id`,\n       `concatvalue` AS `value`\nFROM\n  (SELECT `id`,\n          string_agg(`value`, ', ') AS concatvalue\n   FROM 011\n   GROUP BY id)\nORDER BY id\n", "sql2": "select ID, Name, concat(Value)\nfrom '011'\ngroup by ID\n", "schema": "scythe/recent_posts/tables/011.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/031", "sql1": "\nSELECT `channelid` AS `c1`,\n       `accountid` AS `c2`,\n       `role` AS `c3`\nFROM\n  (SELECT `LHS`.`channelid` AS `channelid`,\n          `LHS`.`accountid` AS `accountid`,\n          `LHS`.`role` AS `role`,\n          `RHS`.`channelname` AS `channelname`,\n          `RHS`.`type` AS `type`\n   FROM `031_1` AS `LHS`\n   INNER JOIN `031_2` AS `RHS` ON (`LHS`.`channelid` = `RHS`.`channelid`))\nWHERE (`type` = 'public'\n       AND `accountid` = 'Dave')\nORDER BY c1\n", "sql2": "Select '031_2'.channelID, accountID, role\nFrom '031_2'\n         JOIN '031_1'\n                    On '031_2'.channelID = '031_1'.channelID\nWhere AccountID = 'Dave' AND type = 'public'\n", "schema": "scythe/recent_posts/tables/031.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/036", "sql1": "\nSELECT account_other AS account,\n       name\nFROM\n  (SELECT LHS.account AS account,\n          LHS.sen1 AS sen1,\n          LHS.sen2 AS sen2,\n          RHS.account AS account_other,\n          RHS.sen1 AS sen1_other,\n          RHS.sen2 AS sen2_other,\n          RHS.name AS name\n   FROM 036_1 AS LHS\n   INNER JOIN\n     (SELECT LHS.account AS account,\n             LHS.sen1 AS sen1,\n             LHS.sen2 AS sen2,\n             RHS.id AS id,\n             RHS.name AS name\n      FROM 036_1 AS LHS\n      CROSS JOIN 036_2 AS RHS) AS RHS ON (LHS.sen2 = RHS.id))\nORDER BY account\n", "sql2": "SELECT m.Account, k.Name FROM '036_1' AS m\nJOIN '036_2' AS k ON k.ID = m.Sen1 OR k.ID = m.Sen2\n", "schema": "scythe/recent_posts/tables/036.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/042", "sql1": "\nSELECT id,\n       name\nFROM 042\nORDER BY id\n", "sql2": "SELECT id, name\nFROM '042'\nORDER BY school ASC, id ASC\n", "schema": "scythe/recent_posts/tables/042.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/003", "sql1": "\nSELECT id,\n       f1 AS item\nFROM\n  (SELECT LHS.id AS id,\n          LHS.item AS item,\n          RHS.f1 AS f1\n   FROM 003_1 AS LHS\n   INNER JOIN 003_2 AS RHS ON (LHS.item = RHS.f2))\nORDER BY id\n", "sql2": "select a.id, b.f1\nfrom '003_1' as a join\n     '003_2' as b\n     on b.f2 = a.item\norder by a.id;\n", "schema": "scythe/recent_posts/tables/003.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/038", "sql1": "\nSELECT date, tapped,\n             sold\nFROM\n  (SELECT LHS.date AS date,\n          LHS.tapped AS tapped,\n          RHS.sold AS sold\n   FROM 038_2 AS LHS\n   LEFT JOIN 038_1 AS RHS ON (LHS.date = RHS.date))\nORDER BY date\n", "sql2": "SELECT t2.Date,t2.Tapped,t1.sold sold\nFROM '038_2' AS t2\n LEFT JOIN '038_1' AS t1\n   ON t1.Date=t2.Date\n", "schema": "scythe/recent_posts/tables/038.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/034", "sql1": "\nSELECT DISTINCT material AS c1,\n                disco_date AS c2,\n                date_update AS c3\nFROM\n  (SELECT LHS.material AS material,\n          LHS.disco_date AS disco_date,\n          LHS.date_update AS date_update,\n          LHS.maxdate_update AS maxdate_update,\n          RHS.material AS material_other,\n          RHS.disco_date AS disco_date_other,\n          RHS.date_update AS date_update_other,\n          RHS.maxdate_update AS maxdate_update_other\n   FROM\n     (SELECT material,\n             disco_date,\n             date_update,\n             MAX(date_update) OVER () AS maxdate_update\n      FROM 034) AS LHS\n   CROSS JOIN\n     (SELECT material,\n             disco_date,\n             date_update,\n             MAX(date_update) OVER () AS maxdate_update\n      FROM 034) AS RHS)\nWHERE (date_update = maxdate_update\n       AND date_update <= maxdate_update_other)\nORDER BY c1\n", "sql2": "select *\nfrom (SELECT MATERIAL,\n             t2.DISCO_DATE,\n             DATE_UPDATE\n      FROM '034' AS t2\n     ) AS t1\n         NATURAL JOIN (SELECT MAX(DATE_UPDATE) AS DATE_UPDATE FROM '034') t3\n", "schema": "scythe/recent_posts/tables/034.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/044", "sql1": "\nSELECT originalid,\n       area\nFROM\n  (SELECT *\n   FROM 044_1 AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT part,\n                  originalid,\n                  part AS area\n           FROM\n             (SELECT LHS.part AS part,\n                     LHS.originalid AS originalid\n              FROM 044_2 AS LHS\n              INNER JOIN 044_1 AS RHS ON (LHS.originalid = RHS.originalid\n                                             AND LHS.part = RHS.area))) AS RHS\n        WHERE (LHS.area = RHS.area\n               AND LHS.originalid = RHS.originalid) ))\nORDER BY originalid\n", "sql2": "SELECT a.originalID, a.area\nfrom '044_1' AS a\nwhere not exists (select * from '044_2' c where c.originalID = a.originalID and c.part = a.area)", "schema": "scythe/recent_posts/tables/044.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/009", "sql1": "\nSELECT c2 AS c1,\n       c4 AS c2,\n       n AS c3\nFROM\n  (SELECT c2,\n          c4,\n          COUNT(*) AS n\n   FROM 009\n   GROUP BY c2,\n            c4)\nORDER BY c1\n", "sql2": "SELECT c2, c4, COUNT(*) AS dup_count\nFROM '009'\nGROUP BY c2, c4\n", "schema": "scythe/recent_posts/tables/009.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/032", "sql1": "\nSELECT crit1,\n       crit2,\n       value\nFROM\n  (SELECT LHS.id AS id,\n          LHS.crit1 AS crit1,\n          LHS.crit2 AS crit2,\n          LHS.value AS value,\n          RHS.crit1 AS crit1_other\n   FROM 032 AS LHS\n   INNER JOIN\n     (SELECT crit1,\n             crit2,\n             MAX(id) AS id\n      FROM 032\n      GROUP BY crit1,\n               crit2) AS RHS ON (LHS.crit2 = RHS.crit2\n                                 AND LHS.id = RHS.id))\nORDER BY crit1\n", "sql2": "select e.crit1, e.crit2, e.value\nfrom '032' AS e\nwhere e.id in (select max(sub.id) from '032' sub group by sub.crit1, sub.crit2)\norder by e.crit1, e.crit2\n", "schema": "scythe/recent_posts/tables/032.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "scythe/recent_posts/045", "sql1": "\nSELECT name AS menuname,\n       sumquantity AS quantity\nFROM\n  (SELECT LHS.menu_id AS menu_id,\n          LHS.name AS name,\n          RHS.sumquantity AS sumquantity\n   FROM 045_1 AS LHS\n   LEFT JOIN\n     (SELECT menu_id,\n             SUM(quantity) AS sumquantity\n      FROM 045_2\n      GROUP BY menu_id) AS RHS ON (LHS.menu_id = RHS.menu_id))\nORDER BY menuname\n", "sql2": "SELECT menu.name, sum(orderregel.quantity)    as quantity\n  FROM '045_1' AS menu\n  LEFT JOIN '045_2' orderregel\n  on menu.menu_id = orderregel.menu_id\n  group by menu.menu_id\n", "schema": "scythe/recent_posts/tables/045.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0005_dev", "sql1": "\nSELECT `created` AS `max_created_`\nFROM\n  (SELECT `created`,\n          `vote_id`,\n          MAX(`state`) AS `state`\n   FROM `votes`\n   GROUP BY `created`,\n            `vote_id`)\nWHERE (`state` = 'CA')\nORDER BY max_created_\n", "sql2": "SELECT max(created)\nFROM votes\nWHERE state = 'CA'", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0004_dev", "sql1": "\nSELECT DISTINCT MAX(area_code) OVER () AS max_area_code_,\n                                    minarea_code AS min_area_code_\nFROM\n  (SELECT area_code,\n          state,\n          MIN(area_code) OVER () AS minarea_code\n   FROM area_code_state)\nORDER BY max_area_code_\n", "sql2": "SELECT max(area_code),\n       min(area_code)\nFROM area_code_state", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0013_dev", "sql1": "\nSELECT `created`,\n       `state`,\n       `phone_number`\nFROM\n  (SELECT `LHS`.`contestant_number` AS `contestant_number`,\n          `LHS`.`contestant_name` AS `contestant_name`,\n          `RHS`.`vote_id` AS `vote_id`,\n          `RHS`.`phone_number` AS `phone_number`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`created` AS `created`\n   FROM\n     (SELECT *\n      FROM `contestants`\n      WHERE (`contestant_name` = 'Tabatha Gehling')) AS LHS\n   INNER JOIN votes AS RHS ON (LHS.contestant_number = RHS.contestant_number))\nORDER BY created\n", "sql2": "SELECT T2.created,\n       T2.state,\n       T2.phone_number\nFROM contestants AS T1\nJOIN votes AS T2 ON T1.contestant_number = T2.contestant_number\nWHERE T1.contestant_name = 'Tabatha Gehling'", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0014_dev", "sql1": "\nSELECT `area_code`\nFROM\n  (SELECT `LHS`.`vote_id` AS `vote_id`,\n          `LHS`.`phone_number` AS `phone_number`,\n          `LHS`.`state` AS `state`,\n          `LHS`.`contestant_number` AS `contestant_number`,\n          `LHS`.`created` AS `created`,\n          `LHS`.`area_code` AS `area_code`,\n          `LHS`.`contestant_name` AS `contestant_name`\n   FROM\n     (SELECT `LHS`.`vote_id` AS `vote_id`,\n             `LHS`.`phone_number` AS `phone_number`,\n             `LHS`.`state` AS `state`,\n             `LHS`.`contestant_number` AS `contestant_number`,\n             `LHS`.`created` AS `created`,\n             `LHS`.`area_code` AS `area_code`,\n             `RHS`.`contestant_name` AS `contestant_name`\n      FROM\n        (SELECT `LHS`.`vote_id` AS `vote_id`,\n                `LHS`.`phone_number` AS `phone_number`,\n                `LHS`.`state` AS `state`,\n                `LHS`.`contestant_number` AS `contestant_number`,\n                `LHS`.`created` AS `created`,\n                `RHS`.`area_code` AS `area_code`\n         FROM `votes` AS `LHS`\n         INNER JOIN `area_code_state` AS `RHS` ON (`LHS`.`state` = `RHS`.`state`)) AS `LHS`\n      INNER JOIN `contestants` AS `RHS` ON (`LHS`.`contestant_number` = `RHS`.`contestant_number`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `contestants`\n      WHERE (`contestant_name` = 'Tabatha Gehling'\n             AND `contestant_name` != 'Kelly Clauss')) AS RHS ON (LHS.contestant_number = RHS.contestant_number\n                                                                  AND LHS.contestant_name = RHS.contestant_name))\nORDER BY area_code\n", "sql2": "SELECT T3.area_code\nFROM contestants AS T1\nJOIN votes AS T2 ON T1.contestant_number = T2.contestant_number\nJOIN area_code_state AS T3 ON T2.state = T3.state\nWHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT\n  SELECT T3.area_code\n  FROM contestants AS T1\n  JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number\n  JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0008_dev", "sql1": "\nSELECT contestant_number,\n       contestant_name\nFROM\n  (SELECT LHS.contestant_number AS contestant_number,\n          LHS.contestant_name AS contestant_name,\n          RHS.n AS n\n   FROM contestants AS LHS\n   INNER JOIN\n     (SELECT contestant_number,\n             COUNT(*) AS n\n      FROM votes\n      GROUP BY contestant_number) AS RHS ON (LHS.contestant_number = RHS.contestant_number))\nWHERE (n >= 2)\nORDER BY contestant_number\n", "sql2": "SELECT T1.contestant_number,\n       T1.contestant_name\nFROM contestants AS T1\nJOIN votes AS T2 ON T1.contestant_number = T2.contestant_number\nGROUP BY T1.contestant_number\nHAVING count(*) >= 2", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0002_dev", "sql1": "\nSELECT contestant_number,\n       contestant_name\nFROM contestants\nORDER BY contestant_number\n", "sql2": "SELECT contestant_number,\n       contestant_name\nFROM contestants\nORDER BY contestant_name DESC", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0003_dev", "sql1": "\nSELECT vote_id,\n       phone_number,\n       state\nFROM votes\nORDER BY vote_id\n", "sql2": "SELECT vote_id,\n       phone_number,\n       state\nFROM votes", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0011_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM contestants AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM votes AS RHS\n        WHERE (LHS.contestant_number = RHS.contestant_number) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM contestants\nWHERE contestant_number NOT IN\n    (SELECT contestant_number\n     FROM votes)", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0010_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `state`) OVER () AS `count___`\nFROM `votes`\nWHERE (`state` != 'NY'\n       OR `state` != 'CA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM votes\nWHERE state = 'NY'\n  OR state = 'CA'", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0006_dev", "sql1": "\nSELECT `contestant_name`\nFROM `contestants`\nWHERE (`contestant_name` != 'Jessie Alloway')\nORDER BY contestant_name\n", "sql2": "SELECT contestant_name\nFROM contestants\nWHERE contestant_name != 'Jessie Alloway'", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0007_dev", "sql1": "\nSELECT state,\n       created\nFROM votes\nORDER BY state\n", "sql2": "SELECT DISTINCT state,\n                created\nFROM votes", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/voter_1/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM area_code_state\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM area_code_state", "schema": "db2csv/voter_1/tables/voter_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/voter_1/tables/voter_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0005_dev", "sql1": "\nSELECT museum_id,\n       name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM museum\n      ORDER BY num_of_staff DESC)\n   LIMIT 1)\n", "sql2": "SELECT museum_id,\n       name\nFROM museum\nORDER BY num_of_staff DESC\nLIMIT 1", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0004_dev", "sql1": "\nSELECT name,\n       level_of_membership\nFROM visitor\nWHERE (level_of_membership > 4)\nORDER BY name\n", "sql2": "SELECT name,\n       Level_of_membership\nFROM visitor\nWHERE Level_of_membership > 4\nORDER BY age DESC", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0018_dev", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT museum_id,\n          open_year,\n          COUNT(*) AS n\n   FROM museum\n   GROUP BY museum_id,\n            open_year)\nWHERE (open_year <= 2013\n       OR n != 2008)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM museum\nWHERE open_year > 2013\n  OR open_year < 2008", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0012_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM museum AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM visit AS RHS\n        WHERE (LHS.museum_id = RHS.museum_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM museum\nWHERE Museum_ID NOT IN\n    (SELECT museum_id\n     FROM visit)", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0014_dev", "sql1": "\nSELECT DISTINCT AVG(num_of_ticket) OVER () AS avg_num_of_ticket_,\n                                        maxnum_of_ticket AS max_num_of_ticket_\nFROM\n  (SELECT museum_id,\n          visitor_id,\n          num_of_ticket,\n          total_spent,\n          MAX(num_of_ticket) OVER () AS maxnum_of_ticket\n   FROM visit)\nORDER BY avg_num_of_ticket_\n", "sql2": "SELECT avg(num_of_ticket),\n       max(num_of_ticket)\nFROM visit", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0009_dev", "sql1": "\nSELECT DISTINCT id,\n                name,\n                age\nFROM\n  (SELECT id,\n          name,\n          level_of_membership,\n          age,\n          museum_id,\n          num_of_ticket,\n          total_spent,\n          visitor_id,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT id,\n             name,\n             level_of_membership,\n             age,\n             museum_id,\n             num_of_ticket,\n             total_spent,\n             id AS visitor_id\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.name AS name,\n                LHS.level_of_membership AS level_of_membership,\n                LHS.age AS age,\n                RHS.museum_id AS museum_id,\n                RHS.num_of_ticket AS num_of_ticket,\n                RHS.total_spent AS total_spent\n         FROM visitor AS LHS\n         INNER JOIN visit AS RHS ON (LHS.id = RHS.visitor_id))))\nWHERE (n != 1)\nORDER BY id\n", "sql2": "SELECT t1.id,\n       t1.name,\n       t1.age\nFROM visitor AS t1\nJOIN visit AS t2 ON t1.id = t2.visitor_id\nGROUP BY t1.id\nHAVING count(*) > 1", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0002_dev", "sql1": "\nSELECT name\nFROM visitor\nWHERE (level_of_membership > 4)\nORDER BY name\n", "sql2": "SELECT name\nFROM visitor\nWHERE Level_of_membership > 4\nORDER BY Level_of_membership DESC", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0006_dev", "sql1": "\nSELECT DISTINCT AVG(num_of_staff) OVER () AS avg_num_of_staff_\nFROM museum\nWHERE (num_of_staff = 2009\n       OR open_year < 2009)\nORDER BY avg_num_of_staff_\n", "sql2": "SELECT avg(num_of_staff)\nFROM museum\nWHERE open_year < 2009", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0007_dev", "sql1": "\nSELECT `num_of_staff`,\n       `open_year`\nFROM `museum`\nWHERE (`name` = 'Plaza Museum')\nORDER BY num_of_staff\n", "sql2": "SELECT Num_of_Staff,\n       Open_Year\nFROM museum\nWHERE name = 'Plaza Museum'", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/museum_visit/0001_dev", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT age) AS n_distinct\n   FROM\n     (SELECT *\n      FROM visitor\n      WHERE (age >= 30)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM visitor\nWHERE age < 30", "schema": "db2csv/museum_visit/tables/museum_visit.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0047_dev", "sql1": "\nSELECT DISTINCT pixel_aspect_ratio_par AS package_option,\n                pixel_aspect_ratio_par_other AS series_name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.series_name AS series_name,\n          LHS.country AS country,\n          LHS.language AS LANGUAGE,\n          LHS.content AS content,\n          LHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par,\n          LHS.hight_definition_tv AS hight_definition_tv,\n          LHS.pay_per_view_ppv AS pay_per_view_ppv,\n          LHS.package_option AS package_option,\n          RHS.id AS id_other,\n          RHS.series_name AS series_name_other,\n          RHS.country AS country_other,\n          RHS.language AS language_other,\n          RHS.content AS content_other,\n          RHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par_other,\n          RHS.hight_definition_tv AS hight_definition_tv_other,\n          RHS.pay_per_view_ppv AS pay_per_view_ppv_other,\n          RHS.package_option AS package_option_other\n   FROM tv_channel AS LHS\n   CROSS JOIN tv_channel AS RHS)\nWHERE (hight_definition_tv = hight_definition_tv_other)\nORDER BY package_option\n", "sql2": "SELECT package_option,\n       series_name\nFROM TV_Channel\nWHERE hight_definition_TV = 'yes'", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0031_dev", "sql1": "\nSELECT episode,\n       rating\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM tv_series\n      ORDER BY SHARE DESC)\n   LIMIT 3)\n", "sql2": "SELECT Episode,\n       Rating\nFROM TV_series\nORDER BY Rating DESC\nLIMIT 3;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0030_dev", "sql1": "\nSELECT episode\nFROM tv_series\nORDER BY episode\n", "sql2": "SELECT Episode\nFROM TV_series\nORDER BY rating", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0005_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `written_by`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `cartoon`\n      WHERE (`written_by` = 'Joseph Kuhr'))\n   GROUP BY written_by)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Cartoon\nWHERE Written_by = 'Joseph Kuhr';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0004_dev", "sql1": "\nSELECT `title`\nFROM `cartoon`\nWHERE (`directed_by` = 'Ben Jones')\nORDER BY title\n", "sql2": "SELECT Title\nFROM Cartoon\nWHERE Directed_by = 'Ben Jones';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0018_dev", "sql1": "\nSELECT DISTINCT `pixel_aspect_ratio_par` AS `package_option`\nFROM `tv_channel`\nWHERE (`series_name` != 'Sky Radio')\nORDER BY package_option\n", "sql2": "SELECT Package_Option\nFROM TV_Channel\nWHERE series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0019_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `tv_channel`\nWHERE (`language` = 'English')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM TV_Channel\nWHERE LANGUAGE = 'English';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0050_dev", "sql1": "\nSELECT DISTINCT `country`\nFROM\n  (SELECT `id`,\n          `series_name`,\n          `country`,\n          `language`,\n          `content`,\n          `pixel_aspect_ratio_par`,\n          `hight_definition_tv`,\n          `pay_per_view_ppv`,\n          `package_option`,\n          `id_other`,\n          `title`,\n          `directed_by`,\n          `written_by`,\n          `original_air_date`,\n          `production_code`,\n          `id` AS `channel`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`series_name` AS `series_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`content` AS `content`,\n             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,\n             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,\n             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,\n             `LHS`.`package_option` AS `package_option`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`title` AS `title`,\n             `RHS`.`directed_by` AS `directed_by`,\n             `RHS`.`written_by` AS `written_by`,\n             `RHS`.`original_air_date` AS `original_air_date`,\n             `RHS`.`production_code` AS `production_code`\n      FROM `tv_channel` AS `LHS`\n      INNER JOIN `cartoon` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))\nWHERE (`written_by` != 'Todd Casey')\nORDER BY country\n", "sql2": "SELECT T1.country\nFROM TV_Channel AS T1\nJOIN cartoon AS T2 ON T1.id = T2.Channel\nWHERE T2.written_by = 'Todd Casey'", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0027_dev", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`series_name` AS `series_name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`language` AS `language`,\n          `LHS`.`content` AS `content`,\n          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,\n          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,\n          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,\n          `LHS`.`package_option` AS `package_option`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`title` AS `title`,\n          `RHS`.`directed_by` AS `directed_by`,\n          `RHS`.`written_by` AS `written_by`,\n          `RHS`.`original_air_date` AS `original_air_date`,\n          `RHS`.`production_code` AS `production_code`\n   FROM\n     (SELECT *\n      FROM `tv_channel`\n      WHERE (`series_name` = 'Sky Radio')) AS LHS\n   INNER JOIN cartoon AS RHS ON (LHS.id = RHS.channel))\nORDER BY title\n", "sql2": "SELECT T2.Title\nFROM TV_Channel AS T1\nJOIN Cartoon AS T2 ON T1.id = T2.Channel\nWHERE T1.series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0012_dev", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT country,\n                COUNT(*) AS n\n         FROM tv_channel\n         GROUP BY country)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Country,\n       count(*)\nFROM TV_Channel\nGROUP BY Country\nORDER BY count(*) DESC\nLIMIT 1;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0056_dev", "sql1": "\nSELECT `country` AS `pixel_aspect_ratio_par`,\n       `pixel_aspect_ratio_par` AS `country`\nFROM `tv_channel`\nWHERE (`language` != 'English')\nORDER BY pixel_aspect_ratio_par\n", "sql2": "SELECT Pixel_aspect_ratio_PAR,\n       country\nFROM tv_channel\nWHERE LANGUAGE != 'English'", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0021_dev", "sql1": "\nSELECT language_other AS LANGUAGE,\n       n_other AS count___\nFROM\n  (SELECT LHS.language AS LANGUAGE,\n          LHS.n AS n,\n          RHS.language AS language_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT LANGUAGE,\n             COUNT(*) AS n\n      FROM tv_channel\n      GROUP BY LANGUAGE) AS LHS\n   CROSS JOIN\n     (SELECT LANGUAGE,\n             COUNT(*) AS n\n      FROM tv_channel\n      GROUP BY LANGUAGE) AS RHS)\nWHERE (n > n_other)\nORDER BY LANGUAGE\n", "sql2": "SELECT LANGUAGE,\n       count(*)\nFROM TV_Channel\nGROUP BY LANGUAGE\nORDER BY count(*) ASC\nLIMIT 1;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0020_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `tv_channel`\nWHERE (`language` = 'English')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM TV_Channel\nWHERE LANGUAGE = 'English';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0015_dev", "sql1": "\nSELECT DISTINCT `content`\nFROM `tv_channel`\nWHERE (`series_name` != 'Sky Radio')\nORDER BY content\n", "sql2": "SELECT Content\nFROM TV_Channel\nWHERE series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0041_dev", "sql1": "\nSELECT `episode`\nFROM\n  (SELECT `id`,\n          `series_name`,\n          `country`,\n          `language`,\n          `content`,\n          `pixel_aspect_ratio_par`,\n          `hight_definition_tv`,\n          `pay_per_view_ppv`,\n          `package_option`,\n          `id_other`,\n          `episode`,\n          `air_date`,\n          `rating`,\n          `share`,\n          `col_18_49_rating_share`,\n          `viewers_m`,\n          `weekly_rank`,\n          `id` AS `channel`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`series_name` AS `series_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`content` AS `content`,\n             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,\n             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,\n             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,\n             `LHS`.`package_option` AS `package_option`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`episode` AS `episode`,\n             `RHS`.`air_date` AS `air_date`,\n             `RHS`.`rating` AS `rating`,\n             `RHS`.`share` AS `share`,\n             `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,\n             `RHS`.`viewers_m` AS `viewers_m`,\n             `RHS`.`weekly_rank` AS `weekly_rank`\n      FROM `tv_channel` AS `LHS`\n      INNER JOIN `tv_series` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))\nWHERE (`series_name` = 'Sky Radio')\nORDER BY episode\n", "sql2": "SELECT T2.Episode\nFROM TV_Channel AS T1\nJOIN TV_series AS T2 ON T1.id = T2.Channel\nWHERE T1.series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0008_dev", "sql1": "\nSELECT title,\n       directed_by\nFROM cartoon\nORDER BY title\n", "sql2": "SELECT title,\n       Directed_by\nFROM Cartoon\nORDER BY Original_air_date", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0009_dev", "sql1": "\nSELECT `title`\nFROM `cartoon`\nWHERE (`directed_by` = 'Brandon Vietti'\n       OR `directed_by` = 'Ben Jones')\nORDER BY title\n", "sql2": "SELECT Title\nFROM Cartoon\nWHERE Directed_by = 'Ben Jones'\n  OR Directed_by = 'Brandon Vietti';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0036_dev", "sql1": "\nSELECT `air_date`\nFROM `tv_series`\nWHERE (`episode` = 'A Love of a Lifetime')\nORDER BY air_date\n", "sql2": "SELECT Air_Date\nFROM TV_series\nWHERE Episode = 'A Love of a Lifetime';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0037_dev", "sql1": "\nSELECT `weekly_rank`\nFROM `tv_series`\nWHERE (`episode` = 'A Love of a Lifetime')\nORDER BY weekly_rank\n", "sql2": "SELECT Weekly_Rank\nFROM TV_series\nWHERE Episode = 'A Love of a Lifetime';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0002_dev", "sql1": "\nSELECT title\nFROM cartoon\nORDER BY title\n", "sql2": "SELECT Title\nFROM Cartoon\nORDER BY title", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0003_dev", "sql1": "\nSELECT `title`\nFROM `cartoon`\nWHERE (`directed_by` = 'Ben Jones')\nORDER BY title\n", "sql2": "SELECT Title\nFROM Cartoon\nWHERE Directed_by = 'Ben Jones';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0011_dev", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT country,\n                COUNT(*) AS n\n         FROM tv_channel\n         GROUP BY country)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Country,\n       count(*)\nFROM TV_Channel\nGROUP BY Country\nORDER BY count(*) DESC\nLIMIT 1;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0010_dev", "sql1": "\nSELECT `title`\nFROM `cartoon`\nWHERE (`directed_by` = 'Brandon Vietti'\n       OR `directed_by` = 'Ben Jones')\nORDER BY title\n", "sql2": "SELECT Title\nFROM Cartoon\nWHERE Directed_by = 'Ben Jones'\n  OR Directed_by = 'Brandon Vietti';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0024_dev", "sql1": "\nSELECT LANGUAGE,\n       n AS count___\nFROM\n  (SELECT LANGUAGE,\n          COUNT(*) AS n\n   FROM tv_channel\n   GROUP BY LANGUAGE)\nORDER BY LANGUAGE\n", "sql2": "SELECT LANGUAGE,\n       count(*)\nFROM TV_Channel\nGROUP BY LANGUAGE", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0006_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `written_by`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `cartoon`\n      WHERE (`written_by` = 'Joseph Kuhr'))\n   GROUP BY written_by)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Cartoon\nWHERE Written_by = 'Joseph Kuhr';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0007_dev", "sql1": "\nSELECT title,\n       directed_by\nFROM cartoon\nORDER BY title\n", "sql2": "SELECT title,\n       Directed_by\nFROM Cartoon\nORDER BY Original_air_date", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0038_dev", "sql1": "\nSELECT `weekly_rank`\nFROM `tv_series`\nWHERE (`episode` = 'A Love of a Lifetime')\nORDER BY weekly_rank\n", "sql2": "SELECT Weekly_Rank\nFROM TV_series\nWHERE Episode = 'A Love of a Lifetime';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0044_dev", "sql1": "\nSELECT n AS count___,\n       directed_by\nFROM\n  (SELECT directed_by,\n          COUNT(*) AS n\n   FROM cartoon\n   GROUP BY directed_by)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       Directed_by\nFROM cartoon\nGROUP BY Directed_by", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0032_dev", "sql1": "\nSELECT episode,\n       rating\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM tv_series\n      ORDER BY SHARE DESC)\n   LIMIT 3)\n", "sql2": "SELECT Episode,\n       Rating\nFROM TV_series\nORDER BY Rating DESC\nLIMIT 3;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0033_dev", "sql1": "\nSELECT DISTINCT maxshare AS max_share_,\n                MIN(SHARE) OVER () AS min_share_\nFROM\n  (SELECT id,\n          episode,\n          air_date,\n          rating,\n          SHARE,\n          col_18_49_rating_share,\n          viewers_m,\n          weekly_rank,\n          channel,\n          MAX(SHARE) OVER () AS maxshare\n   FROM tv_series)\nORDER BY max_share_\n", "sql2": "SELECT max(SHARE),\n       min(SHARE)\nFROM TV_series;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0001_dev", "sql1": "\nSELECT title\nFROM cartoon\nORDER BY title\n", "sql2": "SELECT Title\nFROM Cartoon\nORDER BY title", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0048_dev", "sql1": "\nSELECT DISTINCT pixel_aspect_ratio_par AS package_option,\n                pixel_aspect_ratio_par_other AS series_name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.series_name AS series_name,\n          LHS.country AS country,\n          LHS.language AS LANGUAGE,\n          LHS.content AS content,\n          LHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par,\n          LHS.hight_definition_tv AS hight_definition_tv,\n          LHS.pay_per_view_ppv AS pay_per_view_ppv,\n          LHS.package_option AS package_option,\n          RHS.id AS id_other,\n          RHS.series_name AS series_name_other,\n          RHS.country AS country_other,\n          RHS.language AS language_other,\n          RHS.content AS content_other,\n          RHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par_other,\n          RHS.hight_definition_tv AS hight_definition_tv_other,\n          RHS.pay_per_view_ppv AS pay_per_view_ppv_other,\n          RHS.package_option AS package_option_other\n   FROM tv_channel AS LHS\n   CROSS JOIN tv_channel AS RHS)\nWHERE (hight_definition_tv = hight_definition_tv_other)\nORDER BY package_option\n", "sql2": "SELECT package_option,\n       series_name\nFROM TV_Channel\nWHERE hight_definition_TV = 'yes'", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0049_dev", "sql1": "\nSELECT DISTINCT `country`\nFROM\n  (SELECT `id`,\n          `series_name`,\n          `country`,\n          `language`,\n          `content`,\n          `pixel_aspect_ratio_par`,\n          `hight_definition_tv`,\n          `pay_per_view_ppv`,\n          `package_option`,\n          `id_other`,\n          `title`,\n          `directed_by`,\n          `written_by`,\n          `original_air_date`,\n          `production_code`,\n          `id` AS `channel`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`series_name` AS `series_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`content` AS `content`,\n             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,\n             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,\n             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,\n             `LHS`.`package_option` AS `package_option`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`title` AS `title`,\n             `RHS`.`directed_by` AS `directed_by`,\n             `RHS`.`written_by` AS `written_by`,\n             `RHS`.`original_air_date` AS `original_air_date`,\n             `RHS`.`production_code` AS `production_code`\n      FROM `tv_channel` AS `LHS`\n      INNER JOIN `cartoon` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))\nWHERE (`written_by` != 'Todd Casey')\nORDER BY country\n", "sql2": "SELECT T1.country\nFROM TV_Channel AS T1\nJOIN cartoon AS T2 ON T1.id = T2.Channel\nWHERE T2.written_by = 'Todd Casey'", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0042_dev", "sql1": "\nSELECT `episode`\nFROM\n  (SELECT `id`,\n          `series_name`,\n          `country`,\n          `language`,\n          `content`,\n          `pixel_aspect_ratio_par`,\n          `hight_definition_tv`,\n          `pay_per_view_ppv`,\n          `package_option`,\n          `id_other`,\n          `episode`,\n          `air_date`,\n          `rating`,\n          `share`,\n          `col_18_49_rating_share`,\n          `viewers_m`,\n          `weekly_rank`,\n          `id` AS `channel`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`series_name` AS `series_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`content` AS `content`,\n             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,\n             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,\n             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,\n             `LHS`.`package_option` AS `package_option`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`episode` AS `episode`,\n             `RHS`.`air_date` AS `air_date`,\n             `RHS`.`rating` AS `rating`,\n             `RHS`.`share` AS `share`,\n             `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,\n             `RHS`.`viewers_m` AS `viewers_m`,\n             `RHS`.`weekly_rank` AS `weekly_rank`\n      FROM `tv_channel` AS `LHS`\n      INNER JOIN `tv_series` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))\nWHERE (`series_name` = 'Sky Radio')\nORDER BY episode\n", "sql2": "SELECT T2.Episode\nFROM TV_Channel AS T1\nJOIN TV_series AS T2 ON T1.id = T2.Channel\nWHERE T1.series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0043_dev", "sql1": "\nSELECT n AS count___,\n       directed_by\nFROM\n  (SELECT directed_by,\n          COUNT(*) AS n\n   FROM cartoon\n   GROUP BY directed_by)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       Directed_by\nFROM cartoon\nGROUP BY Directed_by", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0035_dev", "sql1": "\nSELECT `air_date`\nFROM `tv_series`\nWHERE (`episode` = 'A Love of a Lifetime')\nORDER BY air_date\n", "sql2": "SELECT Air_Date\nFROM TV_series\nWHERE Episode = 'A Love of a Lifetime';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0034_dev", "sql1": "\nSELECT DISTINCT maxshare AS max_share_,\n                MIN(SHARE) OVER () AS min_share_\nFROM\n  (SELECT id,\n          episode,\n          air_date,\n          rating,\n          SHARE,\n          col_18_49_rating_share,\n          viewers_m,\n          weekly_rank,\n          channel,\n          MAX(SHARE) OVER () AS maxshare\n   FROM tv_series)\nORDER BY max_share_\n", "sql2": "SELECT max(SHARE),\n       min(SHARE)\nFROM TV_series;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0016_dev", "sql1": "\nSELECT DISTINCT `content`\nFROM `tv_channel`\nWHERE (`series_name` != 'Sky Radio')\nORDER BY content\n", "sql2": "SELECT Content\nFROM TV_Channel\nWHERE series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0017_dev", "sql1": "\nSELECT DISTINCT `pixel_aspect_ratio_par` AS `package_option`\nFROM `tv_channel`\nWHERE (`series_name` != 'Sky Radio')\nORDER BY package_option\n", "sql2": "SELECT Package_Option\nFROM TV_Channel\nWHERE series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0028_dev", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`series_name` AS `series_name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`language` AS `language`,\n          `LHS`.`content` AS `content`,\n          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,\n          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,\n          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,\n          `LHS`.`package_option` AS `package_option`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`title` AS `title`,\n          `RHS`.`directed_by` AS `directed_by`,\n          `RHS`.`written_by` AS `written_by`,\n          `RHS`.`original_air_date` AS `original_air_date`,\n          `RHS`.`production_code` AS `production_code`\n   FROM\n     (SELECT *\n      FROM `tv_channel`\n      WHERE (`series_name` = 'Sky Radio')) AS LHS\n   INNER JOIN cartoon AS RHS ON (LHS.id = RHS.channel))\nORDER BY title\n", "sql2": "SELECT T2.Title\nFROM TV_Channel AS T1\nJOIN Cartoon AS T2 ON T1.id = T2.Channel\nWHERE T1.series_name = 'Sky Radio';", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0029_dev", "sql1": "\nSELECT episode\nFROM tv_series\nORDER BY episode\n", "sql2": "SELECT Episode\nFROM TV_series\nORDER BY rating", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0055_dev", "sql1": "\nSELECT `country` AS `pixel_aspect_ratio_par`,\n       `pixel_aspect_ratio_par` AS `country`\nFROM `tv_channel`\nWHERE (`language` != 'English')\nORDER BY pixel_aspect_ratio_par\n", "sql2": "SELECT Pixel_aspect_ratio_PAR,\n       country\nFROM tv_channel\nWHERE LANGUAGE != 'English'", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0022_dev", "sql1": "\nSELECT language_other AS LANGUAGE,\n       n_other AS count___\nFROM\n  (SELECT LHS.language AS LANGUAGE,\n          LHS.n AS n,\n          RHS.language AS language_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT LANGUAGE,\n             COUNT(*) AS n\n      FROM tv_channel\n      GROUP BY LANGUAGE) AS LHS\n   CROSS JOIN\n     (SELECT LANGUAGE,\n             COUNT(*) AS n\n      FROM tv_channel\n      GROUP BY LANGUAGE) AS RHS)\nWHERE (n > n_other)\nORDER BY LANGUAGE\n", "sql2": "SELECT LANGUAGE,\n       count(*)\nFROM TV_Channel\nGROUP BY LANGUAGE\nORDER BY count(*) ASC\nLIMIT 1;", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/tvshow/0023_dev", "sql1": "\nSELECT LANGUAGE,\n       n AS count___\nFROM\n  (SELECT LANGUAGE,\n          COUNT(*) AS n\n   FROM tv_channel\n   GROUP BY LANGUAGE)\nORDER BY LANGUAGE\n", "sql2": "SELECT LANGUAGE,\n       count(*)\nFROM TV_Channel\nGROUP BY LANGUAGE", "schema": "db2csv/tvshow/tables/tvshow.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0046_dev", "sql1": "\nSELECT `email_address`\nFROM `professionals`\nWHERE (`state` = 'Hawaii'\n       OR `state` = 'Wisconsin')\nORDER BY email_address\n", "sql2": "SELECT email_address\nFROM Professionals\nWHERE state = 'Hawaii'\n  OR state = 'Wisconsin'", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0047_dev", "sql1": "\nSELECT date_arrived,\n       date_departed\nFROM dogs\nORDER BY date_arrived\n", "sql2": "SELECT date_arrived,\n       date_departed\nFROM Dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0078_dev", "sql1": "\nSELECT email_address,\n       cell_number,\n       home_phone\nFROM professionals\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       cell_number,\n       home_phone\nFROM professionals", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0079_dev", "sql1": "\nSELECT DISTINCT breed_code,\n                size_code\nFROM dogs\nORDER BY breed_code\n", "sql2": "SELECT DISTINCT breed_code,\n                size_code\nFROM dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0031_dev", "sql1": "\nSELECT cost_of_treatment,\n       treatment_type_description\nFROM\n  (SELECT LHS.treatment_type_code AS treatment_type_code,\n          LHS.treatment_type_description AS treatment_type_description,\n          RHS.treatment_id AS treatment_id,\n          RHS.dog_id AS dog_id,\n          RHS.professional_id AS professional_id,\n          RHS.date_of_treatment AS date_of_treatment,\n          RHS.cost_of_treatment AS cost_of_treatment\n   FROM treatment_types AS LHS\n   INNER JOIN treatments AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code))\nORDER BY cost_of_treatment\n", "sql2": "SELECT T1.cost_of_treatment,\n       T2.treatment_type_description\nFROM Treatments AS T1\nJOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0030_dev", "sql1": "\nSELECT date_of_treatment,\n       first_name\nFROM\n  (SELECT LHS.treatment_id AS treatment_id,\n          LHS.dog_id AS dog_id,\n          LHS.professional_id AS professional_id,\n          LHS.treatment_type_code AS treatment_type_code,\n          LHS.date_of_treatment AS date_of_treatment,\n          LHS.cost_of_treatment AS cost_of_treatment,\n          RHS.role_code AS role_code,\n          RHS.first_name AS first_name,\n          RHS.street AS street,\n          RHS.city AS city,\n          RHS.state AS state,\n          RHS.zip_code AS zip_code,\n          RHS.last_name AS last_name,\n          RHS.email_address AS email_address,\n          RHS.home_phone AS home_phone,\n          RHS.cell_number AS cell_number\n   FROM treatments AS LHS\n   INNER JOIN professionals AS RHS ON (LHS.professional_id = RHS.professional_id))\nORDER BY date_of_treatment\n", "sql2": "SELECT T1.date_of_treatment,\n       T2.first_name\nFROM Treatments AS T1\nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0072_dev", "sql1": "\nSELECT age AS max_age_\nFROM\n  (SELECT MAX(age) AS age\n   FROM dogs)\nORDER BY max_age_\n", "sql2": "SELECT max(age)\nFROM Dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0073_dev", "sql1": "\nSELECT charge_type,\n       charge_amount\nFROM charges\nORDER BY charge_type\n", "sql2": "SELECT charge_type,\n       charge_amount\nFROM Charges", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0018_dev", "sql1": "\nSELECT breed_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.dog_id AS dog_id,\n                LHS.owner_id AS owner_id,\n                LHS.abandoned_yn AS abandoned_yn,\n                LHS.breed_code AS breed_code,\n                LHS.size_code AS size_code,\n                LHS.name AS name,\n                LHS.age AS age,\n                LHS.date_of_birth AS date_of_birth,\n                LHS.gender AS gender,\n                LHS.weight AS weight,\n                LHS.date_arrived AS date_arrived,\n                LHS.date_adopted AS date_adopted,\n                LHS.date_departed AS date_departed,\n                LHS.breed_name AS breed_name,\n                RHS.n AS n\n         FROM\n           (SELECT LHS.dog_id AS dog_id,\n                   LHS.owner_id AS owner_id,\n                   LHS.abandoned_yn AS abandoned_yn,\n                   LHS.breed_code AS breed_code,\n                   LHS.size_code AS size_code,\n                   LHS.name AS name,\n                   LHS.age AS age,\n                   LHS.date_of_birth AS date_of_birth,\n                   LHS.gender AS gender,\n                   LHS.weight AS weight,\n                   LHS.date_arrived AS date_arrived,\n                   LHS.date_adopted AS date_adopted,\n                   LHS.date_departed AS date_departed,\n                   RHS.breed_name AS breed_name\n            FROM dogs AS LHS\n            INNER JOIN breeds AS RHS ON (LHS.breed_code = RHS.breed_code)) AS LHS\n         INNER JOIN\n           (SELECT breed_code,\n                   breed_name,\n                   COUNT(*) OVER () AS n\n            FROM breeds) AS RHS ON (LHS.breed_code = RHS.breed_code\n                                       AND LHS.breed_name = RHS.breed_name))\n      ORDER BY date_adopted)\n   LIMIT 1)\n", "sql2": "SELECT T1.breed_name\nFROM Breeds AS T1\nJOIN Dogs AS T2 ON T1.breed_code = T2.breed_code\nGROUP BY T1.breed_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0051_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT professional_id) OVER () AS count_distinct_professional_id_\nFROM treatments\nORDER BY count_distinct_professional_id_\n", "sql2": "SELECT count(DISTINCT professional_id)\nFROM Treatments", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0050_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count_distinct_dog_id_\nFROM treatments\nORDER BY count_distinct_dog_id_\n", "sql2": "SELECT count(DISTINCT dog_id)\nFROM Treatments", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0027_dev", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT LHS.professional_id AS professional_id,\n          LHS.role_code AS role_code,\n          LHS.first_name AS first_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.last_name AS last_name,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number,\n          RHS.dog_id AS dog_id,\n          RHS.professional_id AS professional_id_other,\n          RHS.treatment_type_code AS treatment_type_code,\n          RHS.date_of_treatment AS date_of_treatment,\n          RHS.cost_of_treatment AS cost_of_treatment,\n          RHS.meancost_of_treatment AS meancost_of_treatment\n   FROM professionals AS LHS\n   INNER JOIN\n     (SELECT treatment_id,\n             dog_id,\n             professional_id,\n             treatment_type_code,\n             date_of_treatment,\n             cost_of_treatment,\n             AVG(cost_of_treatment) OVER () AS meancost_of_treatment\n      FROM treatments) AS RHS ON (LHS.professional_id = RHS.treatment_id))\nORDER BY first_name\n", "sql2": "SELECT DISTINCT T1.first_name,\n                T1.last_name\nFROM Professionals AS T1\nJOIN Treatments AS T2\nWHERE cost_of_treatment <\n    (SELECT avg(cost_of_treatment)\n     FROM Treatments)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0080_dev", "sql1": "\nSELECT DISTINCT breed_code,\n                size_code\nFROM dogs\nORDER BY breed_code\n", "sql2": "SELECT DISTINCT breed_code,\n                size_code\nFROM dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0081_dev", "sql1": "\nSELECT DISTINCT first_name,\n                treatment_type_description\nFROM\n  (SELECT LHS.treatment_type_code AS treatment_type_code,\n          LHS.treatment_type_description AS treatment_type_description,\n          LHS.professional_id AS professional_id,\n          LHS.role_code AS role_code,\n          LHS.first_name AS first_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.last_name AS last_name,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number,\n          RHS.treatment_id AS treatment_id,\n          RHS.dog_id AS dog_id,\n          RHS.date_of_treatment AS date_of_treatment,\n          RHS.cost_of_treatment AS cost_of_treatment\n   FROM\n     (SELECT LHS.treatment_type_code AS treatment_type_code,\n             LHS.treatment_type_description AS treatment_type_description,\n             RHS.professional_id AS professional_id,\n             RHS.role_code AS role_code,\n             RHS.first_name AS first_name,\n             RHS.street AS street,\n             RHS.city AS city,\n             RHS.state AS state,\n             RHS.zip_code AS zip_code,\n             RHS.last_name AS last_name,\n             RHS.email_address AS email_address,\n             RHS.home_phone AS home_phone,\n             RHS.cell_number AS cell_number\n      FROM treatment_types AS LHS\n      CROSS JOIN professionals AS RHS) AS LHS\n   INNER JOIN treatments AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code\n                                       AND LHS.professional_id = RHS.professional_id))\nORDER BY first_name\n", "sql2": "SELECT DISTINCT T1.first_name,\n                T3.treatment_type_description\nFROM professionals AS T1\nJOIN Treatments AS T2 ON T1.professional_id = T2.professional_id\nJOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0064_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM owners AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM dogs AS RHS\n        WHERE (LHS.owner_id = RHS.owner_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Owners\nWHERE owner_id NOT IN\n    (SELECT owner_id\n     FROM Dogs)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0068_dev", "sql1": "\nSELECT name,\n       age,\n       weight\nFROM dogs\nWHERE (abandoned_yn = 1)\nORDER BY name\n", "sql2": "SELECT name,\n       age,\n       weight\nFROM Dogs\nWHERE abandoned_yn = 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0069_dev", "sql1": "\nSELECT meanage AS avg_age_\nFROM\n  (SELECT AVG(age) AS meanage\n   FROM dogs)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age)\nFROM Dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0062_dev", "sql1": "\nSELECT professional_id AS count___\nFROM\n  (SELECT LHS.treatment_id AS treatment_id,\n          LHS.dog_id AS dog_id,\n          LHS.professional_id AS professional_id,\n          LHS.treatment_type_code AS treatment_type_code,\n          LHS.date_of_treatment AS date_of_treatment,\n          LHS.cost_of_treatment AS cost_of_treatment,\n          RHS.owner_id AS owner_id,\n          RHS.abandoned_yn AS abandoned_yn,\n          RHS.breed_code AS breed_code,\n          RHS.size_code AS size_code,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.date_of_birth AS date_of_birth,\n          RHS.gender AS gender,\n          RHS.weight AS weight,\n          RHS.date_arrived AS date_arrived,\n          RHS.date_adopted AS date_adopted,\n          RHS.date_departed AS date_departed\n   FROM treatments AS LHS\n   INNER JOIN\n     (SELECT dog_id,\n             owner_id,\n             abandoned_yn,\n             breed_code,\n             size_code,\n             name,\n             age,\n             date_of_birth,\n             gender,\n             weight,\n             date_arrived,\n             date_adopted,\n             date_departed,\n             COUNT(*) OVER () AS n\n      FROM dogs) AS RHS ON (LHS.treatment_id = RHS.n\n                               AND LHS.dog_id = RHS.dog_id))\nORDER BY count___\n", "sql2": "select count(*)\nfrom dogs\nwhere dog_id not in\n    (select dog_id\n     from treatments)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0063_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM owners AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM dogs AS RHS\n        WHERE (LHS.owner_id = RHS.owner_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Owners\nWHERE owner_id NOT IN\n    (SELECT owner_id\n     FROM Dogs)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0041_dev", "sql1": "\nSELECT DISTINCT date_arrived,\n                date_departed\nFROM\n  (SELECT LHS.treatment_id AS treatment_id,\n          LHS.dog_id AS dog_id,\n          LHS.professional_id AS professional_id,\n          LHS.treatment_type_code AS treatment_type_code,\n          LHS.date_of_treatment AS date_of_treatment,\n          LHS.cost_of_treatment AS cost_of_treatment,\n          RHS.owner_id AS owner_id,\n          RHS.abandoned_yn AS abandoned_yn,\n          RHS.breed_code AS breed_code,\n          RHS.size_code AS size_code,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.date_of_birth AS date_of_birth,\n          RHS.gender AS gender,\n          RHS.weight AS weight,\n          RHS.date_arrived AS date_arrived,\n          RHS.date_adopted AS date_adopted,\n          RHS.date_departed AS date_departed\n   FROM treatments AS LHS\n   INNER JOIN dogs AS RHS ON (LHS.dog_id = RHS.dog_id))\nORDER BY date_arrived\n", "sql2": "SELECT DISTINCT T1.date_arrived,\n                T1.date_departed\nFROM Dogs AS T1\nJOIN Treatments AS T2 ON T1.dog_id = T2.dog_id", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0040_dev", "sql1": "\nSELECT `first_name`,\n       `name`\nFROM\n  (SELECT `LHS`.`dog_id` AS `dog_id`,\n          `LHS`.`owner_id` AS `owner_id`,\n          `LHS`.`abandoned_yn` AS `abandoned_yn`,\n          `LHS`.`breed_code` AS `breed_code`,\n          `LHS`.`size_code` AS `size_code`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`date_arrived` AS `date_arrived`,\n          `LHS`.`date_adopted` AS `date_adopted`,\n          `LHS`.`date_departed` AS `date_departed`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`street` AS `street`,\n          `RHS`.`city` AS `city`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`zip_code` AS `zip_code`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`home_phone` AS `home_phone`,\n          `RHS`.`cell_number` AS `cell_number`\n   FROM `dogs` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `owners`\n      WHERE (`state` = 'Virginia')) AS RHS ON (LHS.owner_id = RHS.owner_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T2.name\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\nWHERE T1.state = 'Virginia'", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0036_dev", "sql1": "\nSELECT first_name,\n       name\nFROM\n  (SELECT LHS.dog_id AS dog_id,\n          LHS.owner_id AS owner_id,\n          LHS.abandoned_yn AS abandoned_yn,\n          LHS.breed_code AS breed_code,\n          LHS.size_code AS size_code,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.gender AS gender,\n          LHS.weight AS weight,\n          LHS.date_arrived AS date_arrived,\n          LHS.date_adopted AS date_adopted,\n          LHS.date_departed AS date_departed,\n          RHS.first_name AS first_name,\n          RHS.last_name AS last_name,\n          RHS.street AS street,\n          RHS.city AS city,\n          RHS.state AS state,\n          RHS.zip_code AS zip_code,\n          RHS.email_address AS email_address,\n          RHS.home_phone AS home_phone,\n          RHS.cell_number AS cell_number\n   FROM dogs AS LHS\n   INNER JOIN owners AS RHS ON (LHS.owner_id = RHS.owner_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T2.name\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0002_dev", "sql1": "\nSELECT DISTINCT state\nFROM\n  (SELECT LHS.professional_id AS professional_id,\n          LHS.role_code AS role_code,\n          LHS.first_name AS first_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.last_name AS last_name,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number,\n          RHS.owner_id AS owner_id,\n          RHS.first_name AS first_name_other,\n          RHS.last_name AS last_name_other,\n          RHS.street AS street_other,\n          RHS.city AS city_other,\n          RHS.zip_code AS zip_code_other,\n          RHS.email_address AS email_address_other,\n          RHS.home_phone AS home_phone_other,\n          RHS.cell_number AS cell_number_other\n   FROM professionals AS LHS\n   INNER JOIN owners AS RHS ON (LHS.state = RHS.state))\nORDER BY state\n", "sql2": "SELECT state\nFROM Owners INTERSECT\nSELECT state\nFROM Professionals", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0075_dev", "sql1": "\nSELECT charge_amount AS max_charge_amount_\nFROM\n  (SELECT MAX(charge_amount) AS charge_amount\n   FROM charges)\nORDER BY max_charge_amount_\n", "sql2": "SELECT max(charge_amount)\nFROM Charges", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0074_dev", "sql1": "\nSELECT charge_type,\n       charge_amount\nFROM charges\nORDER BY charge_type\n", "sql2": "SELECT charge_type,\n       charge_amount\nFROM Charges", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0059_dev", "sql1": "\nSELECT cost_of_treatment\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM treatments\n      ORDER BY date_of_treatment DESC)\n   LIMIT 1)\n", "sql2": "SELECT cost_of_treatment\nFROM Treatments\nORDER BY date_of_treatment DESC\nLIMIT 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0082_dev", "sql1": "\nSELECT DISTINCT first_name,\n                treatment_type_description\nFROM\n  (SELECT LHS.treatment_type_code AS treatment_type_code,\n          LHS.treatment_type_description AS treatment_type_description,\n          LHS.professional_id AS professional_id,\n          LHS.role_code AS role_code,\n          LHS.first_name AS first_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.last_name AS last_name,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number,\n          RHS.treatment_id AS treatment_id,\n          RHS.dog_id AS dog_id,\n          RHS.date_of_treatment AS date_of_treatment,\n          RHS.cost_of_treatment AS cost_of_treatment\n   FROM\n     (SELECT LHS.treatment_type_code AS treatment_type_code,\n             LHS.treatment_type_description AS treatment_type_description,\n             RHS.professional_id AS professional_id,\n             RHS.role_code AS role_code,\n             RHS.first_name AS first_name,\n             RHS.street AS street,\n             RHS.city AS city,\n             RHS.state AS state,\n             RHS.zip_code AS zip_code,\n             RHS.last_name AS last_name,\n             RHS.email_address AS email_address,\n             RHS.home_phone AS home_phone,\n             RHS.cell_number AS cell_number\n      FROM treatment_types AS LHS\n      CROSS JOIN professionals AS RHS) AS LHS\n   INNER JOIN treatments AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code\n                                       AND LHS.professional_id = RHS.professional_id))\nORDER BY first_name\n", "sql2": "SELECT DISTINCT T1.first_name,\n                T3.treatment_type_description\nFROM professionals AS T1\nJOIN Treatments AS T2 ON T1.professional_id = T2.professional_id\nJOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0067_dev", "sql1": "\nSELECT name,\n       age,\n       weight\nFROM dogs\nWHERE (abandoned_yn = 1)\nORDER BY name\n", "sql2": "SELECT name,\n       age,\n       weight\nFROM Dogs\nWHERE abandoned_yn = 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0052_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT professional_id) OVER () AS count_distinct_professional_id_\nFROM treatments\nORDER BY count_distinct_professional_id_\n", "sql2": "SELECT count(DISTINCT professional_id)\nFROM Treatments", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0024_dev", "sql1": "\nSELECT owner_id,\n       zip_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT treatment_id,\n                dog_id,\n                professional_id,\n                treatment_type_code,\n                date_of_treatment,\n                cost_of_treatment,\n                owner_id,\n                abandoned_yn,\n                breed_code,\n                size_code,\n                name,\n                age,\n                date_of_birth,\n                gender,\n                weight,\n                date_arrived,\n                date_adopted,\n                date_departed,\n                first_name,\n                last_name,\n                street,\n                city,\n                state,\n                zip_code,\n                email_address,\n                home_phone,\n                cell_number,\n                SUM(cost_of_treatment) OVER () AS sumcost_of_treatment\n         FROM\n           (SELECT LHS.treatment_id AS treatment_id,\n                   LHS.dog_id AS dog_id,\n                   LHS.professional_id AS professional_id,\n                   LHS.treatment_type_code AS treatment_type_code,\n                   LHS.date_of_treatment AS date_of_treatment,\n                   LHS.cost_of_treatment AS cost_of_treatment,\n                   LHS.owner_id AS owner_id,\n                   LHS.abandoned_yn AS abandoned_yn,\n                   LHS.breed_code AS breed_code,\n                   LHS.size_code AS size_code,\n                   LHS.name AS name,\n                   LHS.age AS age,\n                   LHS.date_of_birth AS date_of_birth,\n                   LHS.gender AS gender,\n                   LHS.weight AS weight,\n                   LHS.date_arrived AS date_arrived,\n                   LHS.date_adopted AS date_adopted,\n                   LHS.date_departed AS date_departed,\n                   RHS.first_name AS first_name,\n                   RHS.last_name AS last_name,\n                   RHS.street AS street,\n                   RHS.city AS city,\n                   RHS.state AS state,\n                   RHS.zip_code AS zip_code,\n                   RHS.email_address AS email_address,\n                   RHS.home_phone AS home_phone,\n                   RHS.cell_number AS cell_number\n            FROM\n              (SELECT LHS.treatment_id AS treatment_id,\n                      LHS.dog_id AS dog_id,\n                      LHS.professional_id AS professional_id,\n                      LHS.treatment_type_code AS treatment_type_code,\n                      LHS.date_of_treatment AS date_of_treatment,\n                      LHS.cost_of_treatment AS cost_of_treatment,\n                      RHS.owner_id AS owner_id,\n                      RHS.abandoned_yn AS abandoned_yn,\n                      RHS.breed_code AS breed_code,\n                      RHS.size_code AS size_code,\n                      RHS.name AS name,\n                      RHS.age AS age,\n                      RHS.date_of_birth AS date_of_birth,\n                      RHS.gender AS gender,\n                      RHS.weight AS weight,\n                      RHS.date_arrived AS date_arrived,\n                      RHS.date_adopted AS date_adopted,\n                      RHS.date_departed AS date_departed\n               FROM treatments AS LHS\n               INNER JOIN dogs AS RHS ON (LHS.dog_id = RHS.dog_id)) AS LHS\n            INNER JOIN owners AS RHS ON (LHS.owner_id = RHS.owner_id)))\n      ORDER BY weight DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.owner_id,\n       T1.zip_code\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\nJOIN Treatments AS T3 ON T2.dog_id = T3.dog_id\nGROUP BY T1.owner_id\nORDER BY sum(T3.cost_of_treatment) DESC\nLIMIT 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0039_dev", "sql1": "\nSELECT `first_name`,\n       `name`\nFROM\n  (SELECT `LHS`.`dog_id` AS `dog_id`,\n          `LHS`.`owner_id` AS `owner_id`,\n          `LHS`.`abandoned_yn` AS `abandoned_yn`,\n          `LHS`.`breed_code` AS `breed_code`,\n          `LHS`.`size_code` AS `size_code`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`date_arrived` AS `date_arrived`,\n          `LHS`.`date_adopted` AS `date_adopted`,\n          `LHS`.`date_departed` AS `date_departed`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`street` AS `street`,\n          `RHS`.`city` AS `city`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`zip_code` AS `zip_code`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`home_phone` AS `home_phone`,\n          `RHS`.`cell_number` AS `cell_number`\n   FROM `dogs` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `owners`\n      WHERE (`state` = 'Virginia')) AS RHS ON (LHS.owner_id = RHS.owner_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T2.name\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\nWHERE T1.state = 'Virginia'", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0071_dev", "sql1": "\nSELECT age AS max_age_\nFROM\n  (SELECT MAX(age) AS age\n   FROM dogs)\nORDER BY max_age_\n", "sql2": "SELECT max(age)\nFROM Dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0070_dev", "sql1": "\nSELECT meanage AS avg_age_\nFROM\n  (SELECT AVG(age) AS meanage\n   FROM dogs)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age)\nFROM Dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0045_dev", "sql1": "\nSELECT `email_address`\nFROM `professionals`\nWHERE (`state` = 'Hawaii'\n       OR `state` = 'Wisconsin')\nORDER BY email_address\n", "sql2": "SELECT email_address\nFROM Professionals\nWHERE state = 'Hawaii'\n  OR state = 'Wisconsin'", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0044_dev", "sql1": "\nSELECT last_name\nFROM\n  (SELECT LHS.dog_id AS dog_id,\n          LHS.owner_id AS owner_id,\n          LHS.abandoned_yn AS abandoned_yn,\n          LHS.breed_code AS breed_code,\n          LHS.size_code AS size_code,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.gender AS gender,\n          LHS.weight AS weight,\n          LHS.date_arrived AS date_arrived,\n          LHS.date_adopted AS date_adopted,\n          LHS.date_departed AS date_departed,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number\n   FROM\n     (SELECT LHS.dog_id AS dog_id,\n             LHS.owner_id AS owner_id,\n             LHS.abandoned_yn AS abandoned_yn,\n             LHS.breed_code AS breed_code,\n             LHS.size_code AS size_code,\n             LHS.name AS name,\n             LHS.age AS age,\n             LHS.date_of_birth AS date_of_birth,\n             LHS.gender AS gender,\n             LHS.weight AS weight,\n             LHS.date_arrived AS date_arrived,\n             LHS.date_adopted AS date_adopted,\n             LHS.date_departed AS date_departed,\n             RHS.first_name AS first_name,\n             RHS.last_name AS last_name,\n             RHS.street AS street,\n             RHS.city AS city,\n             RHS.state AS state,\n             RHS.zip_code AS zip_code,\n             RHS.email_address AS email_address,\n             RHS.home_phone AS home_phone,\n             RHS.cell_number AS cell_number\n      FROM dogs AS LHS\n      INNER JOIN owners AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS\n   INNER JOIN\n     (SELECT gender,\n             MAX(age) AS age\n      FROM dogs\n      GROUP BY gender) AS RHS ON (LHS.age = RHS.age\n                                  AND LHS.gender = RHS.gender))\nORDER BY last_name\n", "sql2": "SELECT T1.last_name\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\nWHERE T2.age =\n    (SELECT max(age)\n     FROM Dogs)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0032_dev", "sql1": "\nSELECT cost_of_treatment,\n       treatment_type_description\nFROM\n  (SELECT LHS.treatment_type_code AS treatment_type_code,\n          LHS.treatment_type_description AS treatment_type_description,\n          RHS.treatment_id AS treatment_id,\n          RHS.dog_id AS dog_id,\n          RHS.professional_id AS professional_id,\n          RHS.date_of_treatment AS date_of_treatment,\n          RHS.cost_of_treatment AS cost_of_treatment\n   FROM treatment_types AS LHS\n   INNER JOIN treatments AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code))\nORDER BY cost_of_treatment\n", "sql2": "SELECT T1.cost_of_treatment,\n       T2.treatment_type_description\nFROM Treatments AS T1\nJOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0001_dev", "sql1": "\nSELECT DISTINCT state\nFROM\n  (SELECT LHS.professional_id AS professional_id,\n          LHS.role_code AS role_code,\n          LHS.first_name AS first_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.last_name AS last_name,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number,\n          RHS.owner_id AS owner_id,\n          RHS.first_name AS first_name_other,\n          RHS.last_name AS last_name_other,\n          RHS.street AS street_other,\n          RHS.city AS city_other,\n          RHS.zip_code AS zip_code_other,\n          RHS.email_address AS email_address_other,\n          RHS.home_phone AS home_phone_other,\n          RHS.cell_number AS cell_number_other\n   FROM professionals AS LHS\n   INNER JOIN owners AS RHS ON (LHS.state = RHS.state))\nORDER BY state\n", "sql2": "SELECT state\nFROM Owners INTERSECT\nSELECT state\nFROM Professionals", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0048_dev", "sql1": "\nSELECT date_arrived,\n       date_departed\nFROM dogs\nORDER BY date_arrived\n", "sql2": "SELECT date_arrived,\n       date_departed\nFROM Dogs", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0049_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count_distinct_dog_id_\nFROM treatments\nORDER BY count_distinct_dog_id_\n", "sql2": "SELECT count(DISTINCT dog_id)\nFROM Treatments", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0076_dev", "sql1": "\nSELECT charge_amount AS max_charge_amount_\nFROM\n  (SELECT MAX(charge_amount) AS charge_amount\n   FROM charges)\nORDER BY max_charge_amount_\n", "sql2": "SELECT max(charge_amount)\nFROM Charges", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0077_dev", "sql1": "\nSELECT email_address,\n       cell_number,\n       home_phone\nFROM professionals\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       cell_number,\n       home_phone\nFROM professionals", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0042_dev", "sql1": "\nSELECT DISTINCT date_arrived,\n                date_departed\nFROM\n  (SELECT LHS.treatment_id AS treatment_id,\n          LHS.dog_id AS dog_id,\n          LHS.professional_id AS professional_id,\n          LHS.treatment_type_code AS treatment_type_code,\n          LHS.date_of_treatment AS date_of_treatment,\n          LHS.cost_of_treatment AS cost_of_treatment,\n          RHS.owner_id AS owner_id,\n          RHS.abandoned_yn AS abandoned_yn,\n          RHS.breed_code AS breed_code,\n          RHS.size_code AS size_code,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.date_of_birth AS date_of_birth,\n          RHS.gender AS gender,\n          RHS.weight AS weight,\n          RHS.date_arrived AS date_arrived,\n          RHS.date_adopted AS date_adopted,\n          RHS.date_departed AS date_departed\n   FROM treatments AS LHS\n   INNER JOIN dogs AS RHS ON (LHS.dog_id = RHS.dog_id))\nORDER BY date_arrived\n", "sql2": "SELECT DISTINCT T1.date_arrived,\n                T1.date_departed\nFROM Dogs AS T1\nJOIN Treatments AS T2 ON T1.dog_id = T2.dog_id", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0043_dev", "sql1": "\nSELECT last_name\nFROM\n  (SELECT LHS.dog_id AS dog_id,\n          LHS.owner_id AS owner_id,\n          LHS.abandoned_yn AS abandoned_yn,\n          LHS.breed_code AS breed_code,\n          LHS.size_code AS size_code,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.gender AS gender,\n          LHS.weight AS weight,\n          LHS.date_arrived AS date_arrived,\n          LHS.date_adopted AS date_adopted,\n          LHS.date_departed AS date_departed,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number\n   FROM\n     (SELECT LHS.dog_id AS dog_id,\n             LHS.owner_id AS owner_id,\n             LHS.abandoned_yn AS abandoned_yn,\n             LHS.breed_code AS breed_code,\n             LHS.size_code AS size_code,\n             LHS.name AS name,\n             LHS.age AS age,\n             LHS.date_of_birth AS date_of_birth,\n             LHS.gender AS gender,\n             LHS.weight AS weight,\n             LHS.date_arrived AS date_arrived,\n             LHS.date_adopted AS date_adopted,\n             LHS.date_departed AS date_departed,\n             RHS.first_name AS first_name,\n             RHS.last_name AS last_name,\n             RHS.street AS street,\n             RHS.city AS city,\n             RHS.state AS state,\n             RHS.zip_code AS zip_code,\n             RHS.email_address AS email_address,\n             RHS.home_phone AS home_phone,\n             RHS.cell_number AS cell_number\n      FROM dogs AS LHS\n      INNER JOIN owners AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS\n   INNER JOIN\n     (SELECT gender,\n             MAX(age) AS age\n      FROM dogs\n      GROUP BY gender) AS RHS ON (LHS.age = RHS.age\n                                  AND LHS.gender = RHS.gender))\nORDER BY last_name\n", "sql2": "SELECT T1.last_name\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\nWHERE T2.age =\n    (SELECT max(age)\n     FROM Dogs)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0035_dev", "sql1": "\nSELECT first_name,\n       name\nFROM\n  (SELECT LHS.dog_id AS dog_id,\n          LHS.owner_id AS owner_id,\n          LHS.abandoned_yn AS abandoned_yn,\n          LHS.breed_code AS breed_code,\n          LHS.size_code AS size_code,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.gender AS gender,\n          LHS.weight AS weight,\n          LHS.date_arrived AS date_arrived,\n          LHS.date_adopted AS date_adopted,\n          LHS.date_departed AS date_departed,\n          RHS.first_name AS first_name,\n          RHS.last_name AS last_name,\n          RHS.street AS street,\n          RHS.city AS city,\n          RHS.state AS state,\n          RHS.zip_code AS zip_code,\n          RHS.email_address AS email_address,\n          RHS.home_phone AS home_phone,\n          RHS.cell_number AS cell_number\n   FROM dogs AS LHS\n   INNER JOIN owners AS RHS ON (LHS.owner_id = RHS.owner_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T2.name\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0017_dev", "sql1": "\nSELECT breed_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.dog_id AS dog_id,\n                LHS.owner_id AS owner_id,\n                LHS.abandoned_yn AS abandoned_yn,\n                LHS.breed_code AS breed_code,\n                LHS.size_code AS size_code,\n                LHS.name AS name,\n                LHS.age AS age,\n                LHS.date_of_birth AS date_of_birth,\n                LHS.gender AS gender,\n                LHS.weight AS weight,\n                LHS.date_arrived AS date_arrived,\n                LHS.date_adopted AS date_adopted,\n                LHS.date_departed AS date_departed,\n                LHS.breed_name AS breed_name,\n                RHS.n AS n\n         FROM\n           (SELECT LHS.dog_id AS dog_id,\n                   LHS.owner_id AS owner_id,\n                   LHS.abandoned_yn AS abandoned_yn,\n                   LHS.breed_code AS breed_code,\n                   LHS.size_code AS size_code,\n                   LHS.name AS name,\n                   LHS.age AS age,\n                   LHS.date_of_birth AS date_of_birth,\n                   LHS.gender AS gender,\n                   LHS.weight AS weight,\n                   LHS.date_arrived AS date_arrived,\n                   LHS.date_adopted AS date_adopted,\n                   LHS.date_departed AS date_departed,\n                   RHS.breed_name AS breed_name\n            FROM dogs AS LHS\n            INNER JOIN breeds AS RHS ON (LHS.breed_code = RHS.breed_code)) AS LHS\n         INNER JOIN\n           (SELECT breed_code,\n                   breed_name,\n                   COUNT(*) OVER () AS n\n            FROM breeds) AS RHS ON (LHS.breed_code = RHS.breed_code\n                                       AND LHS.breed_name = RHS.breed_name))\n      ORDER BY date_adopted)\n   LIMIT 1)\n", "sql2": "SELECT T1.breed_name\nFROM Breeds AS T1\nJOIN Dogs AS T2 ON T1.breed_code = T2.breed_code\nGROUP BY T1.breed_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0061_dev", "sql1": "\nSELECT professional_id AS count___\nFROM\n  (SELECT LHS.treatment_id AS treatment_id,\n          LHS.dog_id AS dog_id,\n          LHS.professional_id AS professional_id,\n          LHS.treatment_type_code AS treatment_type_code,\n          LHS.date_of_treatment AS date_of_treatment,\n          LHS.cost_of_treatment AS cost_of_treatment,\n          RHS.owner_id AS owner_id,\n          RHS.abandoned_yn AS abandoned_yn,\n          RHS.breed_code AS breed_code,\n          RHS.size_code AS size_code,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.date_of_birth AS date_of_birth,\n          RHS.gender AS gender,\n          RHS.weight AS weight,\n          RHS.date_arrived AS date_arrived,\n          RHS.date_adopted AS date_adopted,\n          RHS.date_departed AS date_departed\n   FROM treatments AS LHS\n   INNER JOIN\n     (SELECT dog_id,\n             owner_id,\n             abandoned_yn,\n             breed_code,\n             size_code,\n             name,\n             age,\n             date_of_birth,\n             gender,\n             weight,\n             date_arrived,\n             date_adopted,\n             date_departed,\n             COUNT(*) OVER () AS n\n      FROM dogs) AS RHS ON (LHS.treatment_id = RHS.n\n                               AND LHS.dog_id = RHS.dog_id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Dogs\nWHERE dog_id NOT IN\n    (SELECT dog_id\n     FROM Treatments)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0060_dev", "sql1": "\nSELECT cost_of_treatment\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM treatments\n      ORDER BY date_of_treatment DESC)\n   LIMIT 1)\n", "sql2": "SELECT cost_of_treatment\nFROM Treatments\nORDER BY date_of_treatment DESC\nLIMIT 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0028_dev", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT LHS.professional_id AS professional_id,\n          LHS.role_code AS role_code,\n          LHS.first_name AS first_name,\n          LHS.street AS street,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.zip_code AS zip_code,\n          LHS.last_name AS last_name,\n          LHS.email_address AS email_address,\n          LHS.home_phone AS home_phone,\n          LHS.cell_number AS cell_number,\n          RHS.dog_id AS dog_id,\n          RHS.professional_id AS professional_id_other,\n          RHS.treatment_type_code AS treatment_type_code,\n          RHS.date_of_treatment AS date_of_treatment,\n          RHS.cost_of_treatment AS cost_of_treatment,\n          RHS.meancost_of_treatment AS meancost_of_treatment\n   FROM professionals AS LHS\n   INNER JOIN\n     (SELECT treatment_id,\n             dog_id,\n             professional_id,\n             treatment_type_code,\n             date_of_treatment,\n             cost_of_treatment,\n             AVG(cost_of_treatment) OVER () AS meancost_of_treatment\n      FROM treatments) AS RHS ON (LHS.professional_id = RHS.treatment_id))\nORDER BY first_name\n", "sql2": "SELECT DISTINCT T1.first_name,\n                T1.last_name\nFROM Professionals AS T1\nJOIN Treatments AS T2\nWHERE cost_of_treatment <\n    (SELECT avg(cost_of_treatment)\n     FROM Treatments)", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0029_dev", "sql1": "\nSELECT date_of_treatment,\n       first_name\nFROM\n  (SELECT LHS.treatment_id AS treatment_id,\n          LHS.dog_id AS dog_id,\n          LHS.professional_id AS professional_id,\n          LHS.treatment_type_code AS treatment_type_code,\n          LHS.date_of_treatment AS date_of_treatment,\n          LHS.cost_of_treatment AS cost_of_treatment,\n          RHS.role_code AS role_code,\n          RHS.first_name AS first_name,\n          RHS.street AS street,\n          RHS.city AS city,\n          RHS.state AS state,\n          RHS.zip_code AS zip_code,\n          RHS.last_name AS last_name,\n          RHS.email_address AS email_address,\n          RHS.home_phone AS home_phone,\n          RHS.cell_number AS cell_number\n   FROM treatments AS LHS\n   INNER JOIN professionals AS RHS ON (LHS.professional_id = RHS.professional_id))\nORDER BY date_of_treatment\n", "sql2": "SELECT T1.date_of_treatment,\n       T2.first_name\nFROM Treatments AS T1\nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/dog_kennels/0023_dev", "sql1": "\nSELECT owner_id,\n       zip_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT treatment_id,\n                dog_id,\n                professional_id,\n                treatment_type_code,\n                date_of_treatment,\n                cost_of_treatment,\n                owner_id,\n                abandoned_yn,\n                breed_code,\n                size_code,\n                name,\n                age,\n                date_of_birth,\n                gender,\n                weight,\n                date_arrived,\n                date_adopted,\n                date_departed,\n                first_name,\n                last_name,\n                street,\n                city,\n                state,\n                zip_code,\n                email_address,\n                home_phone,\n                cell_number,\n                SUM(cost_of_treatment) OVER () AS sumcost_of_treatment\n         FROM\n           (SELECT LHS.treatment_id AS treatment_id,\n                   LHS.dog_id AS dog_id,\n                   LHS.professional_id AS professional_id,\n                   LHS.treatment_type_code AS treatment_type_code,\n                   LHS.date_of_treatment AS date_of_treatment,\n                   LHS.cost_of_treatment AS cost_of_treatment,\n                   LHS.owner_id AS owner_id,\n                   LHS.abandoned_yn AS abandoned_yn,\n                   LHS.breed_code AS breed_code,\n                   LHS.size_code AS size_code,\n                   LHS.name AS name,\n                   LHS.age AS age,\n                   LHS.date_of_birth AS date_of_birth,\n                   LHS.gender AS gender,\n                   LHS.weight AS weight,\n                   LHS.date_arrived AS date_arrived,\n                   LHS.date_adopted AS date_adopted,\n                   LHS.date_departed AS date_departed,\n                   RHS.first_name AS first_name,\n                   RHS.last_name AS last_name,\n                   RHS.street AS street,\n                   RHS.city AS city,\n                   RHS.state AS state,\n                   RHS.zip_code AS zip_code,\n                   RHS.email_address AS email_address,\n                   RHS.home_phone AS home_phone,\n                   RHS.cell_number AS cell_number\n            FROM\n              (SELECT LHS.treatment_id AS treatment_id,\n                      LHS.dog_id AS dog_id,\n                      LHS.professional_id AS professional_id,\n                      LHS.treatment_type_code AS treatment_type_code,\n                      LHS.date_of_treatment AS date_of_treatment,\n                      LHS.cost_of_treatment AS cost_of_treatment,\n                      RHS.owner_id AS owner_id,\n                      RHS.abandoned_yn AS abandoned_yn,\n                      RHS.breed_code AS breed_code,\n                      RHS.size_code AS size_code,\n                      RHS.name AS name,\n                      RHS.age AS age,\n                      RHS.date_of_birth AS date_of_birth,\n                      RHS.gender AS gender,\n                      RHS.weight AS weight,\n                      RHS.date_arrived AS date_arrived,\n                      RHS.date_adopted AS date_adopted,\n                      RHS.date_departed AS date_departed\n               FROM treatments AS LHS\n               INNER JOIN dogs AS RHS ON (LHS.dog_id = RHS.dog_id)) AS LHS\n            INNER JOIN owners AS RHS ON (LHS.owner_id = RHS.owner_id)))\n      ORDER BY weight DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.owner_id,\n       T1.zip_code\nFROM Owners AS T1\nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\nJOIN Treatments AS T3 ON T2.dog_id = T3.dog_id\nGROUP BY T1.owner_id\nORDER BY sum(T3.cost_of_treatment) DESC\nLIMIT 1", "schema": "db2csv/dog_kennels/tables/dog_kennels.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/dog_kennels/tables/dog_kennels.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0046_dev", "sql1": "\nSELECT n AS count___,\n       country_code\nFROM\n  (SELECT country_code,\n          COUNT(*) AS n\n   FROM players\n   GROUP BY country_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       country_code\nFROM players\nGROUP BY country_code", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0030_dev", "sql1": "\nSELECT `first_name`,\n       `last_name`\nFROM `players`\nWHERE (`hand` = 'L')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM players\nWHERE hand = 'L'\nORDER BY birth_date", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0005_dev", "sql1": "\nSELECT `first_name`,\n       `birth_date`\nFROM `players`\nWHERE (`country_code` = 'USA')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       birth_date\nFROM players\nWHERE country_code = 'USA'", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0004_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM matches)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0018_dev", "sql1": "\nSELECT tourney_name\nFROM\n  (SELECT tourney_name,\n          COUNT(*) AS n\n   FROM matches\n   GROUP BY tourney_name)\nWHERE (n > 10)\nORDER BY tourney_name\n", "sql2": "SELECT tourney_name\nFROM matches\nGROUP BY tourney_name\nHAVING count(*) > 10", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0051_dev", "sql1": "\nSELECT sumtours AS sum_tours_,\n       ranking_date\nFROM\n  (SELECT ranking_date,\n          SUM(tours) AS sumtours\n   FROM rankings\n   GROUP BY ranking_date)\nORDER BY sum_tours_\n", "sql2": "SELECT sum(tours),\n       ranking_date\nFROM rankings\nGROUP BY ranking_date", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0050_dev", "sql1": "\nSELECT country_code\nFROM\n  (SELECT country_code,\n          COUNT(*) AS n\n   FROM players\n   GROUP BY country_code)\nWHERE (n >= 50)\nORDER BY country_code\n", "sql2": "SELECT country_code\nFROM players\nGROUP BY country_code\nHAVING count(*) > 50", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0026_dev", "sql1": "\nSELECT first_name,\n       country_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM players\n      ORDER BY birth_date)\n   LIMIT 1)\n", "sql2": "SELECT first_name,\n       country_code\nFROM players\nORDER BY birth_date\nLIMIT 1", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0027_dev", "sql1": "\nSELECT first_name,\n       last_name\nFROM players\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM players\nORDER BY birth_date", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0012_dev", "sql1": "\nSELECT DISTINCT MIN(loser_rank) OVER () AS min_loser_rank_\nFROM matches\nORDER BY min_loser_rank_\n", "sql2": "SELECT min(loser_rank)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0013_dev", "sql1": "\nSELECT n_distinct AS count_distinct_country_code_\nFROM\n  (SELECT COUNT(DISTINCT country_code) AS n_distinct\n   FROM players)\nORDER BY count_distinct_country_code_\n", "sql2": "SELECT count(DISTINCT country_code)\nFROM players", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0015_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT loser_name) OVER () AS count_distinct_loser_name_\nFROM matches\nORDER BY count_distinct_loser_name_\n", "sql2": "SELECT count(DISTINCT loser_name)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0014_dev", "sql1": "\nSELECT n_distinct AS count_distinct_country_code_\nFROM\n  (SELECT COUNT(DISTINCT country_code) AS n_distinct\n   FROM players)\nORDER BY count_distinct_country_code_\n", "sql2": "SELECT count(DISTINCT country_code)\nFROM players", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0062_dev", "sql1": "\nSELECT n AS count___,\n       hand\nFROM\n  (SELECT hand,\n          COUNT(*) AS n\n   FROM players\n   GROUP BY hand)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       hand\nFROM players\nGROUP BY hand", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0041_dev", "sql1": "\nSELECT meanranking AS avg_ranking_,\n       first_name\nFROM\n  (SELECT first_name,\n          AVG(ranking) AS meanranking\n   FROM\n     (SELECT LHS.ranking_date AS ranking_date,\n             LHS.ranking AS ranking,\n             LHS.player_id AS player_id,\n             LHS.ranking_points AS ranking_points,\n             LHS.tours AS tours,\n             RHS.first_name AS first_name,\n             RHS.last_name AS last_name,\n             RHS.hand AS hand,\n             RHS.birth_date AS birth_date,\n             RHS.country_code AS country_code\n      FROM rankings AS LHS\n      INNER JOIN players AS RHS ON (LHS.player_id = RHS.player_id))\n   GROUP BY first_name)\nORDER BY avg_ranking_\n", "sql2": "SELECT avg(ranking),\n       T1.first_name\nFROM players AS T1\nJOIN rankings AS T2 ON T1.player_id = T2.player_id\nGROUP BY T1.first_name", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0009_dev", "sql1": "\nSELECT DISTINCT AVG(winner_rank) OVER () AS avg_winner_rank_\nFROM matches\nORDER BY avg_winner_rank_\n", "sql2": "SELECT avg(winner_rank)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0002_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM players)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM players", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0003_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM matches)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0011_dev", "sql1": "\nSELECT DISTINCT MIN(loser_rank) OVER () AS min_loser_rank_\nFROM matches\nORDER BY min_loser_rank_\n", "sql2": "SELECT min(loser_rank)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0010_dev", "sql1": "\nSELECT DISTINCT AVG(winner_rank) OVER () AS avg_winner_rank_\nFROM matches\nORDER BY avg_winner_rank_\n", "sql2": "SELECT avg(winner_rank)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0052_dev", "sql1": "\nSELECT sumtours AS sum_tours_,\n       ranking_date\nFROM\n  (SELECT ranking_date,\n          SUM(tours) AS sumtours\n   FROM rankings\n   GROUP BY ranking_date)\nORDER BY sum_tours_\n", "sql2": "SELECT sum(tours),\n       ranking_date\nFROM rankings\nGROUP BY ranking_date", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0053_dev", "sql1": "\nSELECT n AS count___,\n       YEAR\nFROM\n  (SELECT YEAR,\n          COUNT(*) AS n\n   FROM matches\n   GROUP BY YEAR)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       YEAR\nFROM matches\nGROUP BY YEAR", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0025_dev", "sql1": "\nSELECT first_name,\n       country_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM players\n      ORDER BY birth_date)\n   LIMIT 1)\n", "sql2": "SELECT first_name,\n       country_code\nFROM players\nORDER BY birth_date\nLIMIT 1", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0006_dev", "sql1": "\nSELECT `first_name`,\n       `birth_date`\nFROM `players`\nWHERE (`country_code` = 'USA')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       birth_date\nFROM players\nWHERE country_code = 'USA'", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0045_dev", "sql1": "\nSELECT n AS count___,\n       country_code\nFROM\n  (SELECT country_code,\n          COUNT(*) AS n\n   FROM players\n   GROUP BY country_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       country_code\nFROM players\nGROUP BY country_code", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0044_dev", "sql1": "\nSELECT sumranking_points AS sum_ranking_points_,\n       first_name\nFROM\n  (SELECT first_name,\n          SUM(ranking_points) AS sumranking_points\n   FROM\n     (SELECT LHS.player_id AS player_id,\n             LHS.first_name AS first_name,\n             LHS.last_name AS last_name,\n             LHS.hand AS hand,\n             LHS.birth_date AS birth_date,\n             LHS.country_code AS country_code,\n             RHS.ranking_date AS ranking_date,\n             RHS.ranking AS ranking,\n             RHS.ranking_points AS ranking_points,\n             RHS.tours AS tours\n      FROM players AS LHS\n      INNER JOIN rankings AS RHS ON (LHS.player_id = RHS.player_id))\n   GROUP BY first_name)\nORDER BY sum_ranking_points_\n", "sql2": "SELECT sum(ranking_points),\n       T1.first_name\nFROM players AS T1\nJOIN rankings AS T2 ON T1.player_id = T2.player_id\nGROUP BY T1.first_name", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0001_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM players)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM players", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0049_dev", "sql1": "\nSELECT country_code\nFROM\n  (SELECT country_code,\n          COUNT(*) AS n\n   FROM players\n   GROUP BY country_code)\nWHERE (n >= 50)\nORDER BY country_code\n", "sql2": "SELECT country_code\nFROM players\nGROUP BY country_code\nHAVING count(*) > 50", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0042_dev", "sql1": "\nSELECT meanranking AS avg_ranking_,\n       first_name\nFROM\n  (SELECT first_name,\n          AVG(ranking) AS meanranking\n   FROM\n     (SELECT LHS.ranking_date AS ranking_date,\n             LHS.ranking AS ranking,\n             LHS.player_id AS player_id,\n             LHS.ranking_points AS ranking_points,\n             LHS.tours AS tours,\n             RHS.first_name AS first_name,\n             RHS.last_name AS last_name,\n             RHS.hand AS hand,\n             RHS.birth_date AS birth_date,\n             RHS.country_code AS country_code\n      FROM rankings AS LHS\n      INNER JOIN players AS RHS ON (LHS.player_id = RHS.player_id))\n   GROUP BY first_name)\nORDER BY avg_ranking_\n", "sql2": "SELECT avg(ranking),\n       T1.first_name\nFROM players AS T1\nJOIN rankings AS T2 ON T1.player_id = T2.player_id\nGROUP BY T1.first_name", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0043_dev", "sql1": "\nSELECT sumranking_points AS sum_ranking_points_,\n       first_name\nFROM\n  (SELECT first_name,\n          SUM(ranking_points) AS sumranking_points\n   FROM\n     (SELECT LHS.player_id AS player_id,\n             LHS.first_name AS first_name,\n             LHS.last_name AS last_name,\n             LHS.hand AS hand,\n             LHS.birth_date AS birth_date,\n             LHS.country_code AS country_code,\n             RHS.ranking_date AS ranking_date,\n             RHS.ranking AS ranking,\n             RHS.ranking_points AS ranking_points,\n             RHS.tours AS tours\n      FROM players AS LHS\n      INNER JOIN rankings AS RHS ON (LHS.player_id = RHS.player_id))\n   GROUP BY first_name)\nORDER BY sum_ranking_points_\n", "sql2": "SELECT sum(ranking_points),\n       T1.first_name\nFROM players AS T1\nJOIN rankings AS T2 ON T1.player_id = T2.player_id\nGROUP BY T1.first_name", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0016_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT loser_name) OVER () AS count_distinct_loser_name_\nFROM matches\nORDER BY count_distinct_loser_name_\n", "sql2": "SELECT count(DISTINCT loser_name)\nFROM matches", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0061_dev", "sql1": "\nSELECT n AS count___,\n       hand\nFROM\n  (SELECT hand,\n          COUNT(*) AS n\n   FROM players\n   GROUP BY hand)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       hand\nFROM players\nGROUP BY hand", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0028_dev", "sql1": "\nSELECT first_name,\n       last_name\nFROM players\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM players\nORDER BY birth_date", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0029_dev", "sql1": "\nSELECT `first_name`,\n       `last_name`\nFROM `players`\nWHERE (`hand` = 'L')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM players\nWHERE hand = 'L'\nORDER BY birth_date", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/wta_1/0054_dev", "sql1": "\nSELECT n AS count___,\n       YEAR\nFROM\n  (SELECT YEAR,\n          COUNT(*) AS n\n   FROM matches\n   GROUP BY YEAR)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       YEAR\nFROM matches\nGROUP BY YEAR", "schema": "db2csv/wta_1/tables/wta_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0031_dev", "sql1": "\nSELECT DISTINCT fname,\n                age\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.petid AS petid,\n          RHS.lname AS lname,\n          RHS.fname AS fname,\n          RHS.age AS age,\n          RHS.sex AS sex,\n          RHS.major AS major,\n          RHS.advisor AS advisor,\n          RHS.city_code AS city_code\n   FROM has_pet AS LHS\n   INNER JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.fname,\n                T1.age\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0030_dev", "sql1": "\nSELECT meanweight AS avg_weight_,\n       pettype\nFROM\n  (SELECT pettype,\n          AVG(weight) AS meanweight\n   FROM pets\n   GROUP BY pettype)\nORDER BY avg_weight_\n", "sql2": "SELECT avg(weight),\n       pettype\nFROM pets\nGROUP BY pettype", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0005_dev", "sql1": "\nSELECT weight AS max_weight_,\n       pettype\nFROM\n  (SELECT pettype,\n          MAX(weight) AS weight\n   FROM pets\n   GROUP BY pettype)\nORDER BY max_weight_\n", "sql2": "SELECT max(weight),\n       petType\nFROM pets\nGROUP BY petType", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0004_dev", "sql1": "\nSELECT weight\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM pets\n      ORDER BY pet_age)\n   LIMIT 1)\n", "sql2": "SELECT weight\nFROM pets\nORDER BY pet_age\nLIMIT 1", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0018_dev", "sql1": "\nSELECT `major`,\n       `age`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`stuid` AS `stuid_other`,\n             `RHS`.`petid` AS `petid`,\n             `RHS`.`lname` AS `lname_other`,\n             `RHS`.`fname` AS `fname_other`,\n             `RHS`.`age` AS `age_other`,\n             `RHS`.`sex` AS `sex_other`,\n             `RHS`.`major` AS `major_other`,\n             `RHS`.`advisor` AS `advisor_other`,\n             `RHS`.`city_code` AS `city_code_other`,\n             `RHS`.`pettype` AS `pettype`,\n             `RHS`.`pet_age` AS `pet_age`,\n             `RHS`.`weight` AS `weight`\n      FROM `student` AS `LHS`\n      CROSS JOIN\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`petid` AS `petid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`pettype` AS `pettype`,\n                `RHS`.`pet_age` AS `pet_age`,\n                `RHS`.`weight` AS `weight`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`petid` AS `petid`,\n                   `RHS`.`lname` AS `lname`,\n                   `RHS`.`fname` AS `fname`,\n                   `RHS`.`age` AS `age`,\n                   `RHS`.`sex` AS `sex`,\n                   `RHS`.`major` AS `major`,\n                   `RHS`.`advisor` AS `advisor`,\n                   `RHS`.`city_code` AS `city_code`\n            FROM `has_pet` AS `LHS`\n            INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n         INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `RHS`)\n   WHERE (`stuid` != `stuid_other`))\nWHERE (`pettype` = 'cat')\nORDER BY major\n", "sql2": "SELECT major,\n       age\nFROM student\nWHERE stuid NOT IN\n    (SELECT T1.stuid\n     FROM student AS T1\n     JOIN has_pet AS T2 ON T1.stuid = T2.stuid\n     JOIN pets AS T3 ON T3.petid = T2.petid\n     WHERE T3.pettype = 'cat')", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0019_dev", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT *\n   FROM `student` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `LHS`.`petid` AS `petid`,\n                     `LHS`.`pettype` AS `pettype`,\n                     `LHS`.`pet_age` AS `pet_age`,\n                     `LHS`.`weight` AS `weight`,\n                     `RHS`.`stuid` AS `stuid`\n              FROM `pets` AS `LHS`\n              INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))\n           WHERE (`pettype` = 'cat')) AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT stuid\nFROM student\nEXCEPT\nSELECT T1.stuid\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pettype = 'cat'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0026_dev", "sql1": "\nSELECT petid,\n       weight\nFROM pets\nWHERE (pet_age > 1)\nORDER BY petid\n", "sql2": "SELECT petid,\n       weight\nFROM pets\nWHERE pet_age > 1", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0027_dev", "sql1": "\nSELECT meanpet_age AS avg_pet_age_,\n       maxpet_age AS max_pet_age_,\n       pettype\nFROM\n  (SELECT LHS.pettype AS pettype,\n          LHS.meanpet_age AS meanpet_age,\n          RHS.maxpet_age AS maxpet_age\n   FROM\n     (SELECT pettype,\n             AVG(pet_age) AS meanpet_age\n      FROM pets\n      GROUP BY pettype) AS LHS\n   LEFT JOIN\n     (SELECT pettype,\n             MAX(pet_age) AS maxpet_age\n      FROM pets\n      GROUP BY pettype) AS RHS ON (LHS.pettype = RHS.pettype))\nORDER BY avg_pet_age_\n", "sql2": "SELECT avg(pet_age),\n       max(pet_age),\n       pettype\nFROM pets\nGROUP BY pettype", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0012_dev", "sql1": "\nSELECT n_distinct AS count_distinct_pettype_\nFROM\n  (SELECT COUNT(DISTINCT pettype) AS n_distinct\n   FROM pets)\nORDER BY count_distinct_pettype_\n", "sql2": "SELECT count(DISTINCT pettype)\nFROM pets", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0013_dev", "sql1": "\nSELECT DISTINCT `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`pettype` AS `pettype`,\n          `RHS`.`pet_age` AS `pet_age`,\n          `RHS`.`weight` AS `weight`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM `has_pet` AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n   INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))\nWHERE (`pettype` = 'dog'\n       OR `pettype` = 'cat')\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pettype = 'cat'\n  OR T3.pettype = 'dog'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0021_dev", "sql1": "\nSELECT `fname`,\n       `age`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`pettype` AS `pettype`,\n          `RHS`.`pet_age` AS `pet_age`,\n          `RHS`.`weight` AS `weight`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM `has_pet` AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `pets`\n      WHERE (`pettype` = 'dog'\n             OR `pettype` != 'cat')) AS RHS ON (LHS.petid = RHS.petid))\nORDER BY fname\n", "sql2": "SELECT T1.fname,\n       T1.age\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pettype = 'dog'\n  AND T1.stuid NOT IN\n    (SELECT T1.stuid\n     FROM student AS T1\n     JOIN has_pet AS T2 ON T1.stuid = T2.stuid\n     JOIN pets AS T3 ON T3.petid = T2.petid\n     WHERE T3.pettype = 'cat')", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0020_dev", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT *\n   FROM `student` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `LHS`.`petid` AS `petid`,\n                     `LHS`.`pettype` AS `pettype`,\n                     `LHS`.`pet_age` AS `pet_age`,\n                     `LHS`.`weight` AS `weight`,\n                     `RHS`.`stuid` AS `stuid`\n              FROM `pets` AS `LHS`\n              INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))\n           WHERE (`pettype` = 'cat')) AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT stuid\nFROM student\nEXCEPT\nSELECT T1.stuid\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pettype = 'cat'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0014_dev", "sql1": "\nSELECT DISTINCT `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`pettype` AS `pettype`,\n          `RHS`.`pet_age` AS `pet_age`,\n          `RHS`.`weight` AS `weight`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM `has_pet` AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n   INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))\nWHERE (`pettype` = 'dog'\n       OR `pettype` = 'cat')\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pettype = 'cat'\n  OR T3.pettype = 'dog'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0040_dev", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`pettype` AS `pettype`,\n          `LHS`.`pet_age` AS `pet_age`,\n          `LHS`.`weight` AS `weight`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`pettype` AS `pettype`,\n             `RHS`.`pet_age` AS `pet_age`,\n             `RHS`.`weight` AS `weight`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`petid` AS `petid`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`,\n                `RHS`.`age` AS `age`,\n                `RHS`.`sex` AS `sex`,\n                `RHS`.`major` AS `major`,\n                `RHS`.`advisor` AS `advisor`,\n                `RHS`.`city_code` AS `city_code`\n         FROM `has_pet` AS `LHS`\n         INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `pets`\n      WHERE (`pettype` = 'cat'\n             AND pet_age >= 3)) AS RHS ON (LHS.petid = RHS.petid\n                                           AND LHS.pettype = RHS.pettype\n                                           AND LHS.pet_age = RHS.pet_age\n                                           AND LHS.weight = RHS.weight))\nORDER BY lname\n", "sql2": "SELECT T1.lname\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pet_age = 3\n  AND T3.pettype = 'cat'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0008_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT stuid\n      FROM student\n      WHERE (age = 20) INTERSECT\n        SELECT stuid\n        FROM has_pet))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nWHERE T1.age > 20", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0009_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `pettype`,\n          `sex`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`pettype` AS `pettype`,\n             `RHS`.`pet_age` AS `pet_age`,\n             `RHS`.`weight` AS `weight`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`petid` AS `petid`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`,\n                `RHS`.`age` AS `age`,\n                `RHS`.`sex` AS `sex`,\n                `RHS`.`major` AS `major`,\n                `RHS`.`advisor` AS `advisor`,\n                `RHS`.`city_code` AS `city_code`\n         FROM `has_pet` AS `LHS`\n         INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))\n   GROUP BY `pettype`,\n            `sex`)\nWHERE (`pettype` = 'dog'\n       AND `sex` = 'F')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T2.petid = T3.petid\nWHERE T1.sex = 'F'\n  AND T3.pettype = 'dog'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0036_dev", "sql1": "\nSELECT n AS count___,\n       stuid\nFROM\n  (SELECT stuid,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.petid AS petid,\n             RHS.lname AS lname,\n             RHS.fname AS fname,\n             RHS.age AS age,\n             RHS.sex AS sex,\n             RHS.major AS major,\n             RHS.advisor AS advisor,\n             RHS.city_code AS city_code\n      FROM has_pet AS LHS\n      LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\n   GROUP BY stuid)\nORDER BY count___\n", "sql2": "select count(*),\n       t1.stuid\nfrom student as t1\njoin has_pet as t2 on t1.stuid = t2.stuid\ngroup by t1.stuid", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0003_dev", "sql1": "\nSELECT weight\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM pets\n      ORDER BY pet_age)\n   LIMIT 1)\n", "sql2": "SELECT weight\nFROM pets\nORDER BY pet_age\nLIMIT 1", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0011_dev", "sql1": "\nSELECT n_distinct AS count_distinct_pettype_\nFROM\n  (SELECT COUNT(DISTINCT pettype) AS n_distinct\n   FROM pets)\nORDER BY count_distinct_pettype_\n", "sql2": "SELECT count(DISTINCT pettype)\nFROM pets", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0010_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `pettype`,\n          `sex`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`pettype` AS `pettype`,\n             `RHS`.`pet_age` AS `pet_age`,\n             `RHS`.`weight` AS `weight`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`petid` AS `petid`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`,\n                `RHS`.`age` AS `age`,\n                `RHS`.`sex` AS `sex`,\n                `RHS`.`major` AS `major`,\n                `RHS`.`advisor` AS `advisor`,\n                `RHS`.`city_code` AS `city_code`\n         FROM `has_pet` AS `LHS`\n         INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))\n   GROUP BY `pettype`,\n            `sex`)\nWHERE (`pettype` = 'dog'\n       AND `sex` = 'F')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T2.petid = T3.petid\nWHERE T1.sex = 'F'\n  AND T3.pettype = 'dog'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0025_dev", "sql1": "\nSELECT petid,\n       weight\nFROM pets\nWHERE (pet_age > 1)\nORDER BY petid\n", "sql2": "SELECT petid,\n       weight\nFROM pets\nWHERE pet_age > 1", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0024_dev", "sql1": "\nSELECT pettype,\n       weight\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM pets\n      ORDER BY pet_age)\n   LIMIT 1)\n", "sql2": "SELECT pettype,\n       weight\nFROM pets\nORDER BY pet_age\nLIMIT 1", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0006_dev", "sql1": "\nSELECT weight AS max_weight_,\n       pettype\nFROM\n  (SELECT pettype,\n          MAX(weight) AS weight\n   FROM pets\n   GROUP BY pettype)\nORDER BY max_weight_\n", "sql2": "SELECT max(weight),\n       petType\nFROM pets\nGROUP BY petType", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0007_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT stuid\n      FROM student\n      WHERE (age = 20) INTERSECT\n        SELECT stuid\n        FROM has_pet))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nWHERE T1.age > 20", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0039_dev", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`pettype` AS `pettype`,\n          `LHS`.`pet_age` AS `pet_age`,\n          `LHS`.`weight` AS `weight`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`pettype` AS `pettype`,\n             `RHS`.`pet_age` AS `pet_age`,\n             `RHS`.`weight` AS `weight`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`petid` AS `petid`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`,\n                `RHS`.`age` AS `age`,\n                `RHS`.`sex` AS `sex`,\n                `RHS`.`major` AS `major`,\n                `RHS`.`advisor` AS `advisor`,\n                `RHS`.`city_code` AS `city_code`\n         FROM `has_pet` AS `LHS`\n         INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `pets`\n      WHERE (`pettype` = 'cat'\n             AND pet_age >= 3)) AS RHS ON (LHS.petid = RHS.petid\n                                           AND LHS.pettype = RHS.pettype\n                                           AND LHS.pet_age = RHS.pet_age\n                                           AND LHS.weight = RHS.weight))\nORDER BY lname\n", "sql2": "SELECT T1.lname\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pet_age = 3\n  AND T3.pettype = 'cat'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0032_dev", "sql1": "\nSELECT DISTINCT fname,\n                age\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.petid AS petid,\n          RHS.lname AS lname,\n          RHS.fname AS fname,\n          RHS.age AS age,\n          RHS.sex AS sex,\n          RHS.major AS major,\n          RHS.advisor AS advisor,\n          RHS.city_code AS city_code\n   FROM has_pet AS LHS\n   INNER JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.fname,\n                T1.age\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0033_dev", "sql1": "\nSELECT `petid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM `has_pet` AS `LHS`\n   INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\nWHERE (`lname` = 'Smith')\nORDER BY petid\n", "sql2": "SELECT T2.petid\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nWHERE T1.Lname = 'Smith'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0035_dev", "sql1": "\nSELECT n AS count___,\n       stuid\nFROM\n  (SELECT stuid,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.petid AS petid,\n             RHS.lname AS lname,\n             RHS.fname AS fname,\n             RHS.age AS age,\n             RHS.sex AS sex,\n             RHS.major AS major,\n             RHS.advisor AS advisor,\n             RHS.city_code AS city_code\n      FROM has_pet AS LHS\n      LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\n   GROUP BY stuid)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.stuid\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nGROUP BY T1.stuid", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0034_dev", "sql1": "\nSELECT `petid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM `has_pet` AS `LHS`\n   INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\nWHERE (`lname` = 'Smith')\nORDER BY petid\n", "sql2": "SELECT T2.petid\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nWHERE T1.Lname = 'Smith'", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0017_dev", "sql1": "\nSELECT `major`,\n       `age`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`stuid` AS `stuid_other`,\n             `RHS`.`petid` AS `petid`,\n             `RHS`.`lname` AS `lname_other`,\n             `RHS`.`fname` AS `fname_other`,\n             `RHS`.`age` AS `age_other`,\n             `RHS`.`sex` AS `sex_other`,\n             `RHS`.`major` AS `major_other`,\n             `RHS`.`advisor` AS `advisor_other`,\n             `RHS`.`city_code` AS `city_code_other`,\n             `RHS`.`pettype` AS `pettype`,\n             `RHS`.`pet_age` AS `pet_age`,\n             `RHS`.`weight` AS `weight`\n      FROM `student` AS `LHS`\n      CROSS JOIN\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`petid` AS `petid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`pettype` AS `pettype`,\n                `RHS`.`pet_age` AS `pet_age`,\n                `RHS`.`weight` AS `weight`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`petid` AS `petid`,\n                   `RHS`.`lname` AS `lname`,\n                   `RHS`.`fname` AS `fname`,\n                   `RHS`.`age` AS `age`,\n                   `RHS`.`sex` AS `sex`,\n                   `RHS`.`major` AS `major`,\n                   `RHS`.`advisor` AS `advisor`,\n                   `RHS`.`city_code` AS `city_code`\n            FROM `has_pet` AS `LHS`\n            INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n         INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `RHS`)\n   WHERE (`stuid` != `stuid_other`))\nWHERE (`pettype` = 'cat')\nORDER BY major\n", "sql2": "SELECT major,\n       age\nFROM student\nWHERE stuid NOT IN\n    (SELECT T1.stuid\n     FROM student AS T1\n     JOIN has_pet AS T2 ON T1.stuid = T2.stuid\n     JOIN pets AS T3 ON T3.petid = T2.petid\n     WHERE T3.pettype = 'cat')", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0029_dev", "sql1": "\nSELECT meanweight AS avg_weight_,\n       pettype\nFROM\n  (SELECT pettype,\n          AVG(weight) AS meanweight\n   FROM pets\n   GROUP BY pettype)\nORDER BY avg_weight_\n", "sql2": "SELECT avg(weight),\n       pettype\nFROM pets\nGROUP BY pettype", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0022_dev", "sql1": "\nSELECT `fname`,\n       `age`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`petid` AS `petid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`pettype` AS `pettype`,\n          `RHS`.`pet_age` AS `pet_age`,\n          `RHS`.`weight` AS `weight`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`petid` AS `petid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM `has_pet` AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `pets`\n      WHERE (`pettype` = 'dog'\n             OR `pettype` != 'cat')) AS RHS ON (LHS.petid = RHS.petid))\nORDER BY fname\n", "sql2": "SELECT T1.fname,\n       T1.age\nFROM student AS T1\nJOIN has_pet AS T2 ON T1.stuid = T2.stuid\nJOIN pets AS T3 ON T3.petid = T2.petid\nWHERE T3.pettype = 'dog'\n  AND T1.stuid NOT IN\n    (SELECT T1.stuid\n     FROM student AS T1\n     JOIN has_pet AS T2 ON T1.stuid = T2.stuid\n     JOIN pets AS T3 ON T3.petid = T2.petid\n     WHERE T3.pettype = 'cat')", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/pets_1/0023_dev", "sql1": "\nSELECT pettype,\n       weight\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM pets\n      ORDER BY pet_age)\n   LIMIT 1)\n", "sql2": "SELECT pettype,\n       weight\nFROM pets\nORDER BY pet_age\nLIMIT 1", "schema": "db2csv/pets_1/tables/pets_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0046_dev", "sql1": "\nSELECT template_type_code,\n       n AS count___\nFROM\n  (SELECT template_type_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.template_id AS template_id,\n             LHS.version_number AS version_number,\n             LHS.template_type_code AS template_type_code,\n             LHS.date_effective_from AS date_effective_from,\n             LHS.date_effective_to AS date_effective_to,\n             LHS.template_details AS template_details,\n             RHS.document_id AS document_id,\n             RHS.document_name AS document_name,\n             RHS.document_description AS document_description,\n             RHS.other_details AS other_details\n      FROM templates AS LHS\n      INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id))\n   GROUP BY template_type_code)\nORDER BY template_type_code\n", "sql2": "SELECT T1.template_type_code,\n       count(*)\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nGROUP BY T1.template_type_code", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0047_dev", "sql1": "\nSELECT template_type_code\nFROM\n  (SELECT LHS.template_id AS template_id,\n          LHS.version_number AS version_number,\n          LHS.template_type_code AS template_type_code,\n          LHS.date_effective_from AS date_effective_from,\n          LHS.date_effective_to AS date_effective_to,\n          LHS.template_details AS template_details,\n          LHS.n AS n,\n          RHS.document_id AS document_id,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT template_id,\n             version_number,\n             template_type_code,\n             date_effective_from,\n             date_effective_to,\n             template_details,\n             template_id AS n\n      FROM\n        (SELECT LHS.template_id AS template_id,\n                LHS.version_number AS version_number,\n                LHS.template_type_code AS template_type_code,\n                LHS.date_effective_from AS date_effective_from,\n                LHS.date_effective_to AS date_effective_to,\n                LHS.template_details AS template_details\n         FROM templates AS LHS\n         INNER JOIN\n           (SELECT COUNT(*) AS n\n            FROM templates) AS RHS ON (LHS.template_id = RHS.n))) AS LHS\n   INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id))\nORDER BY template_type_code\n", "sql2": "SELECT T1.template_type_code\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nGROUP BY T1.template_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0079_dev", "sql1": "\nSELECT document_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT paragraph_id,\n                document_id,\n                paragraph_text,\n                other_details,\n                COUNT(*) OVER () AS n\n         FROM paragraphs)\n      ORDER BY document_id)\n   LIMIT 1)\n", "sql2": "SELECT document_id\nFROM Paragraphs\nGROUP BY document_id\nORDER BY count(*) ASC\nLIMIT 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0031_dev", "sql1": "\nSELECT version_number,\n       template_type_code\nFROM templates\nWHERE (version_number > 5)\nORDER BY version_number\n", "sql2": "SELECT version_number,\n       template_type_code\nFROM Templates\nWHERE version_number > 5", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0030_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `template_type_code`,\n          COUNT(*) AS `n`\n   FROM `templates`\n   GROUP BY `template_type_code`)\nWHERE (`template_type_code` = 'CV')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Templates\nWHERE template_type_code = 'CV'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0005_dev", "sql1": "\nSELECT `document_name`,\n       `template_id`\nFROM `documents`\nWHERE (`document_description` = 'w')\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       template_id\nFROM Documents\nWHERE Document_Description LIKE '%w%'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0004_dev", "sql1": "\nSELECT document_id,\n       document_name,\n       document_description\nFROM documents\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       document_name,\n       document_description\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0072_dev", "sql1": "\nSELECT document_id,\n       n AS count___\nFROM\n  (SELECT document_id,\n          COUNT(*) AS n\n   FROM paragraphs\n   GROUP BY document_id)\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       count(*)\nFROM Paragraphs\nGROUP BY document_id\nORDER BY document_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0073_dev", "sql1": "\nSELECT document_id,\n       document_name,\n       n AS count___\nFROM\n  (SELECT LHS.document_id AS document_id,\n          LHS.n AS n,\n          RHS.template_id AS template_id,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT document_id,\n             COUNT(*) AS n\n      FROM paragraphs\n      GROUP BY document_id) AS LHS\n   LEFT JOIN documents AS RHS ON (LHS.document_id = RHS.document_id))\nORDER BY document_id\n", "sql2": "SELECT T1.document_id,\n       T2.document_name,\n       count(*)\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_id = T2.document_id\nGROUP BY T1.document_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0018_dev", "sql1": "\nSELECT template_id\nFROM\n  (SELECT template_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY template_id)\nWHERE (n != 1)\nORDER BY template_id\n", "sql2": "SELECT template_id\nFROM Documents\nGROUP BY template_id\nHAVING count(*) > 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0019_dev", "sql1": "\nSELECT template_id\nFROM\n  (SELECT *\n   FROM templates AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM documents AS RHS\n        WHERE (LHS.template_id = RHS.template_id) ))\nORDER BY template_id\n", "sql2": "SELECT template_id\nFROM Templates\nEXCEPT\nSELECT template_id\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0051_dev", "sql1": "\nSELECT template_type_code,\n       template_type_description\nFROM ref_template_types\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code,\n       template_type_description\nFROM Ref_template_types", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0050_dev", "sql1": "\nSELECT template_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM templates AS LHS\n         WHERE NOT EXISTS\n             (SELECT 1\n              FROM documents AS RHS\n              WHERE (LHS.template_id = RHS.template_id) ))\n      ORDER BY date_effective_from DESC)\n   LIMIT 1)\n", "sql2": "SELECT template_type_code\nFROM Templates\nEXCEPT\nSELECT template_type_code\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0026_dev", "sql1": "\nSELECT DISTINCT template_type_code\nFROM templates\nORDER BY template_type_code\n", "sql2": "SELECT DISTINCT template_type_code\nFROM Templates", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0027_dev", "sql1": "\nSELECT `template_id`\nFROM `templates`\nWHERE (`template_type_code` = 'PPT'\n       OR `template_type_code` = 'PP')\nORDER BY template_id\n", "sql2": "SELECT template_id\nFROM Templates\nWHERE template_type_code = 'PP'\n  OR template_type_code = 'PPT'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0080_dev", "sql1": "\nSELECT document_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT paragraph_id,\n                document_id,\n                paragraph_text,\n                other_details,\n                COUNT(*) OVER () AS n\n         FROM paragraphs)\n      ORDER BY document_id)\n   LIMIT 1)\n", "sql2": "SELECT document_id\nFROM Paragraphs\nGROUP BY document_id\nORDER BY count(*) ASC\nLIMIT 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0081_dev", "sql1": "\nSELECT document_id\nFROM\n  (SELECT document_id,\n          COUNT(*) AS n\n   FROM paragraphs\n   GROUP BY document_id)\nWHERE (n = 1\n       OR n <= 2)\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Paragraphs\nGROUP BY document_id\nHAVING count(*) BETWEEN 1 AND 2", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0013_dev", "sql1": "\nSELECT template_id,\n       n AS count___\nFROM\n  (SELECT template_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY template_id)\nORDER BY template_id\n", "sql2": "SELECT template_id,\n       count(*)\nFROM Documents\nGROUP BY template_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0064_dev", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`paragraph_id` AS `paragraph_id`,\n          `LHS`.`document_id` AS `document_id`,\n          `LHS`.`paragraph_text` AS `paragraph_text`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`document_name` AS `document_name`,\n          `RHS`.`n` AS `n`\n   FROM `paragraphs` AS `LHS`\n   LEFT JOIN\n     (SELECT `document_id`,\n             `document_name`,\n             COUNT(*) AS `n`\n      FROM `documents`\n      GROUP BY `document_id`,\n               `document_name`) AS `RHS` ON (`LHS`.`document_id` = `RHS`.`document_id`))\nWHERE (`document_name` != 'Summer Show')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_ID = T2.document_ID\nWHERE T2.document_name = 'Summer Show'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0056_dev", "sql1": "\nSELECT `template_type_code`\nFROM `ref_template_types`\nWHERE (`template_type_description` = 'Book')\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code\nFROM Ref_template_types\nWHERE template_type_description = 'Book'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0057_dev", "sql1": "\nSELECT DISTINCT template_type_description\nFROM\n  (SELECT LHS.template_id AS template_id,\n          LHS.version_number AS version_number,\n          LHS.template_type_code AS template_type_code,\n          LHS.date_effective_from AS date_effective_from,\n          LHS.date_effective_to AS date_effective_to,\n          LHS.template_details AS template_details,\n          LHS.document_id AS document_id,\n          LHS.document_name AS document_name,\n          LHS.document_description AS document_description,\n          LHS.other_details AS other_details,\n          RHS.template_type_description AS template_type_description\n   FROM\n     (SELECT LHS.template_id AS template_id,\n             LHS.version_number AS version_number,\n             LHS.template_type_code AS template_type_code,\n             LHS.date_effective_from AS date_effective_from,\n             LHS.date_effective_to AS date_effective_to,\n             LHS.template_details AS template_details,\n             RHS.document_id AS document_id,\n             RHS.document_name AS document_name,\n             RHS.document_description AS document_description,\n             RHS.other_details AS other_details\n      FROM templates AS LHS\n      INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id)) AS LHS\n   INNER JOIN ref_template_types AS RHS ON (LHS.template_type_code = RHS.template_type_code))\nORDER BY template_type_description\n", "sql2": "SELECT DISTINCT T1.template_type_description\nFROM Ref_template_types AS T1\nJOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code\nJOIN Documents AS T3 ON T2.Template_ID = T3.template_ID", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0021_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM templates\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Templates", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0020_dev", "sql1": "\nSELECT template_id\nFROM\n  (SELECT *\n   FROM templates AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM documents AS RHS\n        WHERE (LHS.template_id = RHS.template_id) ))\nORDER BY template_id\n", "sql2": "SELECT template_id\nFROM Templates\nEXCEPT\nSELECT template_id\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0068_dev", "sql1": "\nSELECT `paragraph_id`,\n       `paragraph_text`\nFROM\n  (SELECT *\n   FROM `paragraphs` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` != 'Welcome to NY')) AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY paragraph_id\n", "sql2": "SELECT T1.paragraph_id,\n       T1.paragraph_text\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_id = T2.document_id\nWHERE T2.Document_Name = 'Welcome to NY'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0069_dev", "sql1": "\nSELECT `paragraph_text`\nFROM\n  (SELECT *\n   FROM `paragraphs` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` != 'Customer reviews')) AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY paragraph_text\n", "sql2": "SELECT T1.paragraph_text\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_id = T2.document_id\nWHERE T2.document_name = 'Customer reviews'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0014_dev", "sql1": "\nSELECT template_id,\n       n AS count___\nFROM\n  (SELECT template_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY template_id)\nORDER BY template_id\n", "sql2": "SELECT template_id,\n       count(*)\nFROM Documents\nGROUP BY template_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0062_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM paragraphs\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Paragraphs", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0063_dev", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`paragraph_id` AS `paragraph_id`,\n          `LHS`.`document_id` AS `document_id`,\n          `LHS`.`paragraph_text` AS `paragraph_text`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`document_name` AS `document_name`,\n          `RHS`.`n` AS `n`\n   FROM `paragraphs` AS `LHS`\n   LEFT JOIN\n     (SELECT `document_id`,\n             `document_name`,\n             COUNT(*) AS `n`\n      FROM `documents`\n      GROUP BY `document_id`,\n               `document_name`) AS `RHS` ON (`LHS`.`document_id` = `RHS`.`document_id`))\nWHERE (`document_name` != 'Summer Show')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_ID = T2.document_ID\nWHERE T2.document_name = 'Summer Show'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0041_dev", "sql1": "\nSELECT `template_type_code`\nFROM\n  (SELECT *\n   FROM `templates` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` = 'Data base')) AS RHS\n        WHERE (LHS.template_id = RHS.template_id) ))\nORDER BY template_type_code\n", "sql2": "SELECT T1.template_type_code\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nWHERE T2.document_name = 'Data base'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0008_dev", "sql1": "\nSELECT `document_id`,\n       `template_id`,\n       `document_description`\nFROM `documents`\nWHERE (`document_name` = 'Robbin CV')\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       template_id,\n       Document_Description\nFROM Documents\nWHERE document_name = 'Robbin CV'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0009_dev", "sql1": "\nSELECT n_distinct AS count_distinct_template_id_\nFROM\n  (SELECT other_details,\n          COUNT(DISTINCT template_id) AS n_distinct\n   FROM documents\n   GROUP BY other_details)\nORDER BY count_distinct_template_id_\n", "sql2": "SELECT count(DISTINCT template_id)\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0036_dev", "sql1": "\nSELECT DISTINCT template_type_code\nFROM\n  (SELECT LHS.template_id AS template_id,\n          LHS.version_number AS version_number,\n          LHS.template_type_code AS template_type_code,\n          LHS.date_effective_from AS date_effective_from,\n          LHS.date_effective_to AS date_effective_to,\n          LHS.template_details AS template_details\n   FROM templates AS LHS\n   INNER JOIN\n     (SELECT template_type_code,\n             COUNT(*) AS n\n      FROM templates\n      GROUP BY template_type_code) AS RHS ON (LHS.version_number = RHS.n\n                                              AND LHS.template_type_code = RHS.template_type_code))\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code\nFROM Templates\nGROUP BY template_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0037_dev", "sql1": "\nSELECT template_type_code\nFROM\n  (SELECT template_type_code,\n          COUNT(*) AS n\n   FROM templates\n   GROUP BY template_type_code)\nWHERE (n < 3)\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code\nFROM Templates\nGROUP BY template_type_code\nHAVING count(*) < 3", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM documents\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0003_dev", "sql1": "\nSELECT document_id,\n       document_name,\n       document_description\nFROM documents\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       document_name,\n       document_description\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0075_dev", "sql1": "\nSELECT document_id\nFROM\n  (SELECT document_id,\n          COUNT(*) AS n\n   FROM paragraphs\n   GROUP BY document_id)\nWHERE (n >= 2)\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Paragraphs\nGROUP BY document_id\nHAVING count(*) >= 2", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0074_dev", "sql1": "\nSELECT document_id,\n       document_name,\n       n AS count___\nFROM\n  (SELECT LHS.document_id AS document_id,\n          LHS.n AS n,\n          RHS.template_id AS template_id,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT document_id,\n             COUNT(*) AS n\n      FROM paragraphs\n      GROUP BY document_id) AS LHS\n   LEFT JOIN documents AS RHS ON (LHS.document_id = RHS.document_id))\nORDER BY document_id\n", "sql2": "SELECT T1.document_id,\n       T2.document_name,\n       count(*)\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_id = T2.document_id\nGROUP BY T1.document_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0058_dev", "sql1": "\nSELECT DISTINCT template_type_description\nFROM\n  (SELECT LHS.template_id AS template_id,\n          LHS.version_number AS version_number,\n          LHS.template_type_code AS template_type_code,\n          LHS.date_effective_from AS date_effective_from,\n          LHS.date_effective_to AS date_effective_to,\n          LHS.template_details AS template_details,\n          LHS.document_id AS document_id,\n          LHS.document_name AS document_name,\n          LHS.document_description AS document_description,\n          LHS.other_details AS other_details,\n          RHS.template_type_description AS template_type_description\n   FROM\n     (SELECT LHS.template_id AS template_id,\n             LHS.version_number AS version_number,\n             LHS.template_type_code AS template_type_code,\n             LHS.date_effective_from AS date_effective_from,\n             LHS.date_effective_to AS date_effective_to,\n             LHS.template_details AS template_details,\n             RHS.document_id AS document_id,\n             RHS.document_name AS document_name,\n             RHS.document_description AS document_description,\n             RHS.other_details AS other_details\n      FROM templates AS LHS\n      INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id)) AS LHS\n   INNER JOIN ref_template_types AS RHS ON (LHS.template_type_code = RHS.template_type_code))\nORDER BY template_type_description\n", "sql2": "SELECT DISTINCT T1.template_type_description\nFROM Ref_template_types AS T1\nJOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code\nJOIN Documents AS T3 ON T2.Template_ID = T3.template_ID", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0059_dev", "sql1": "\nSELECT `template_id`\nFROM\n  (SELECT `LHS`.`template_id` AS `template_id`,\n          `LHS`.`version_number` AS `version_number`,\n          `LHS`.`template_type_code` AS `template_type_code`,\n          `LHS`.`date_effective_from` AS `date_effective_from`,\n          `LHS`.`date_effective_to` AS `date_effective_to`,\n          `LHS`.`template_details` AS `template_details`,\n          `RHS`.`template_type_description` AS `template_type_description`\n   FROM `templates` AS `LHS`\n   LEFT JOIN `ref_template_types` AS `RHS` ON (`LHS`.`template_type_code` = `RHS`.`template_type_code`))\nWHERE (`template_type_description` = 'Presentation')\nORDER BY template_id\n", "sql2": "SELECT T2.template_id\nFROM Ref_template_types AS T1\nJOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code\nWHERE T1.template_type_description = 'Presentation'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0083_dev", "sql1": "\nSELECT `document_id`\nFROM `paragraphs`\nWHERE (`paragraph_text` != 'Ireland'\n       AND `paragraph_text` = 'Brazil')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Paragraphs\nWHERE paragraph_text = 'Brazil' INTERSECT\n  SELECT document_id\n  FROM Paragraphs WHERE paragraph_text = 'Ireland'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0082_dev", "sql1": "\nSELECT document_id\nFROM\n  (SELECT document_id,\n          COUNT(*) AS n\n   FROM paragraphs\n   GROUP BY document_id)\nWHERE (n = 1\n       OR n <= 2)\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Paragraphs\nGROUP BY document_id\nHAVING count(*) BETWEEN 1 AND 2", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0010_dev", "sql1": "\nSELECT n_distinct AS count_distinct_template_id_\nFROM\n  (SELECT other_details,\n          COUNT(DISTINCT template_id) AS n_distinct\n   FROM documents\n   GROUP BY other_details)\nORDER BY count_distinct_template_id_\n", "sql2": "SELECT count(DISTINCT template_id)\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0067_dev", "sql1": "\nSELECT `paragraph_id`,\n       `paragraph_text`\nFROM\n  (SELECT *\n   FROM `paragraphs` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` != 'Welcome to NY')) AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY paragraph_id\n", "sql2": "SELECT T1.paragraph_id,\n       T1.paragraph_text\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_id = T2.document_id\nWHERE T2.Document_Name = 'Welcome to NY'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0052_dev", "sql1": "\nSELECT template_type_code,\n       template_type_description\nFROM ref_template_types\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code,\n       template_type_description\nFROM Ref_template_types", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0053_dev", "sql1": "\nSELECT `template_type_description`\nFROM `ref_template_types`\nWHERE (`template_type_code` = 'AD')\nORDER BY template_type_description\n", "sql2": "SELECT template_type_description\nFROM Ref_template_types\nWHERE template_type_code = 'AD'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0025_dev", "sql1": "\nSELECT DISTINCT template_type_code\nFROM templates\nORDER BY template_type_code\n", "sql2": "SELECT DISTINCT template_type_code\nFROM Templates", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0024_dev", "sql1": "\nSELECT template_id,\n       version_number,\n       template_type_code\nFROM templates\nORDER BY template_id\n", "sql2": "SELECT template_id,\n       version_number,\n       template_type_code\nFROM Templates", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0006_dev", "sql1": "\nSELECT `document_name`,\n       `template_id`\nFROM `documents`\nWHERE (`document_description` = 'w')\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       template_id\nFROM Documents\nWHERE Document_Description LIKE '%w%'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0007_dev", "sql1": "\nSELECT `document_id`,\n       `template_id`,\n       `document_description`\nFROM `documents`\nWHERE (`document_name` = 'Robbin CV')\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       template_id,\n       Document_Description\nFROM Documents\nWHERE document_name = 'Robbin CV'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0038_dev", "sql1": "\nSELECT template_type_code\nFROM\n  (SELECT template_type_code,\n          COUNT(*) AS n\n   FROM templates\n   GROUP BY template_type_code)\nWHERE (n < 3)\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code\nFROM Templates\nGROUP BY template_type_code\nHAVING count(*) < 3", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0071_dev", "sql1": "\nSELECT document_id,\n       n AS count___\nFROM\n  (SELECT document_id,\n          COUNT(*) AS n\n   FROM paragraphs\n   GROUP BY document_id)\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       count(*)\nFROM Paragraphs\nGROUP BY document_id\nORDER BY document_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0070_dev", "sql1": "\nSELECT `paragraph_text`\nFROM\n  (SELECT *\n   FROM `paragraphs` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` != 'Customer reviews')) AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY paragraph_text\n", "sql2": "SELECT T1.paragraph_text\nFROM Paragraphs AS T1\nJOIN Documents AS T2 ON T1.document_id = T2.document_id\nWHERE T2.document_name = 'Customer reviews'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0045_dev", "sql1": "\nSELECT template_type_code,\n       n AS count___\nFROM\n  (SELECT template_type_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.template_id AS template_id,\n             LHS.version_number AS version_number,\n             LHS.template_type_code AS template_type_code,\n             LHS.date_effective_from AS date_effective_from,\n             LHS.date_effective_to AS date_effective_to,\n             LHS.template_details AS template_details,\n             RHS.document_id AS document_id,\n             RHS.document_name AS document_name,\n             RHS.document_description AS document_description,\n             RHS.other_details AS other_details\n      FROM templates AS LHS\n      INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id))\n   GROUP BY template_type_code)\nORDER BY template_type_code\n", "sql2": "SELECT T1.template_type_code,\n       count(*)\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nGROUP BY T1.template_type_code", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0044_dev", "sql1": "\nSELECT `document_name`\nFROM\n  (SELECT *\n   FROM `documents` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `templates`\n           WHERE (`template_type_code` != 'BK')) AS RHS\n        WHERE (LHS.template_id = RHS.template_id) ))\nORDER BY document_name\n", "sql2": "SELECT T2.document_name\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nWHERE T1.template_type_code = 'BK'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0032_dev", "sql1": "\nSELECT version_number,\n       template_type_code\nFROM templates\nWHERE (version_number > 5)\nORDER BY version_number\n", "sql2": "SELECT version_number,\n       template_type_code\nFROM Templates\nWHERE version_number > 5", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0033_dev", "sql1": "\nSELECT template_type_code,\n       n AS count___\nFROM\n  (SELECT template_type_code,\n          COUNT(*) AS n\n   FROM templates\n   GROUP BY template_type_code)\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code,\n       count(*)\nFROM Templates\nGROUP BY template_type_code", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM documents\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0048_dev", "sql1": "\nSELECT template_type_code\nFROM\n  (SELECT LHS.template_id AS template_id,\n          LHS.version_number AS version_number,\n          LHS.template_type_code AS template_type_code,\n          LHS.date_effective_from AS date_effective_from,\n          LHS.date_effective_to AS date_effective_to,\n          LHS.template_details AS template_details,\n          LHS.n AS n,\n          RHS.document_id AS document_id,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT template_id,\n             version_number,\n             template_type_code,\n             date_effective_from,\n             date_effective_to,\n             template_details,\n             template_id AS n\n      FROM\n        (SELECT LHS.template_id AS template_id,\n                LHS.version_number AS version_number,\n                LHS.template_type_code AS template_type_code,\n                LHS.date_effective_from AS date_effective_from,\n                LHS.date_effective_to AS date_effective_to,\n                LHS.template_details AS template_details\n         FROM templates AS LHS\n         INNER JOIN\n           (SELECT COUNT(*) AS n\n            FROM templates) AS RHS ON (LHS.template_id = RHS.n))) AS LHS\n   INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id))\nORDER BY template_type_code\n", "sql2": "SELECT T1.template_type_code\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nGROUP BY T1.template_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0049_dev", "sql1": "\nSELECT template_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM templates AS LHS\n         WHERE NOT EXISTS\n             (SELECT 1\n              FROM documents AS RHS\n              WHERE (LHS.template_id = RHS.template_id) ))\n      ORDER BY date_effective_from DESC)\n   LIMIT 1)\n", "sql2": "SELECT template_type_code\nFROM Templates\nEXCEPT\nSELECT template_type_code\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0076_dev", "sql1": "\nSELECT document_id\nFROM\n  (SELECT document_id,\n          COUNT(*) AS n\n   FROM paragraphs\n   GROUP BY document_id)\nWHERE (n >= 2)\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Paragraphs\nGROUP BY document_id\nHAVING count(*) >= 2", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0042_dev", "sql1": "\nSELECT `template_type_code`\nFROM\n  (SELECT *\n   FROM `templates` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` = 'Data base')) AS RHS\n        WHERE (LHS.template_id = RHS.template_id) ))\nORDER BY template_type_code\n", "sql2": "SELECT T1.template_type_code\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nWHERE T2.document_name = 'Data base'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0043_dev", "sql1": "\nSELECT `document_name`\nFROM\n  (SELECT *\n   FROM `documents` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `templates`\n           WHERE (`template_type_code` != 'BK')) AS RHS\n        WHERE (LHS.template_id = RHS.template_id) ))\nORDER BY document_name\n", "sql2": "SELECT T2.document_name\nFROM Templates AS T1\nJOIN Documents AS T2 ON T1.template_id = T2.template_id\nWHERE T1.template_type_code = 'BK'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0035_dev", "sql1": "\nSELECT DISTINCT template_type_code\nFROM\n  (SELECT LHS.template_id AS template_id,\n          LHS.version_number AS version_number,\n          LHS.template_type_code AS template_type_code,\n          LHS.date_effective_from AS date_effective_from,\n          LHS.date_effective_to AS date_effective_to,\n          LHS.template_details AS template_details\n   FROM templates AS LHS\n   INNER JOIN\n     (SELECT template_type_code,\n             COUNT(*) AS n\n      FROM templates\n      GROUP BY template_type_code) AS RHS ON (LHS.version_number = RHS.n\n                                              AND LHS.template_type_code = RHS.template_type_code))\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code\nFROM Templates\nGROUP BY template_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0034_dev", "sql1": "\nSELECT template_type_code,\n       n AS count___\nFROM\n  (SELECT template_type_code,\n          COUNT(*) AS n\n   FROM templates\n   GROUP BY template_type_code)\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code,\n       count(*)\nFROM Templates\nGROUP BY template_type_code", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0017_dev", "sql1": "\nSELECT template_id\nFROM\n  (SELECT template_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY template_id)\nWHERE (n != 1)\nORDER BY template_id\n", "sql2": "SELECT template_id\nFROM Documents\nGROUP BY template_id\nHAVING count(*) > 1", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0084_dev", "sql1": "\nSELECT `document_id`\nFROM `paragraphs`\nWHERE (`paragraph_text` != 'Ireland'\n       AND `paragraph_text` = 'Brazil')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Paragraphs\nWHERE paragraph_text = 'Brazil' INTERSECT\n  SELECT document_id\n  FROM Paragraphs WHERE paragraph_text = 'Ireland'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0061_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM paragraphs\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Paragraphs", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0060_dev", "sql1": "\nSELECT `template_id`\nFROM\n  (SELECT `LHS`.`template_id` AS `template_id`,\n          `LHS`.`version_number` AS `version_number`,\n          `LHS`.`template_type_code` AS `template_type_code`,\n          `LHS`.`date_effective_from` AS `date_effective_from`,\n          `LHS`.`date_effective_to` AS `date_effective_to`,\n          `LHS`.`template_details` AS `template_details`,\n          `RHS`.`template_type_description` AS `template_type_description`\n   FROM `templates` AS `LHS`\n   LEFT JOIN `ref_template_types` AS `RHS` ON (`LHS`.`template_type_code` = `RHS`.`template_type_code`))\nWHERE (`template_type_description` = 'Presentation')\nORDER BY template_id\n", "sql2": "SELECT T2.template_id\nFROM Ref_template_types AS T1\nJOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code\nWHERE T1.template_type_description = 'Presentation'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0028_dev", "sql1": "\nSELECT `template_id`\nFROM `templates`\nWHERE (`template_type_code` = 'PPT'\n       OR `template_type_code` = 'PP')\nORDER BY template_id\n", "sql2": "SELECT template_id\nFROM Templates\nWHERE template_type_code = 'PP'\n  OR template_type_code = 'PPT'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0029_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `template_type_code`,\n          COUNT(*) AS `n`\n   FROM `templates`\n   GROUP BY `template_type_code`)\nWHERE (`template_type_code` = 'CV')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Templates\nWHERE template_type_code = 'CV'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0055_dev", "sql1": "\nSELECT `template_type_code`\nFROM `ref_template_types`\nWHERE (`template_type_description` = 'Book')\nORDER BY template_type_code\n", "sql2": "SELECT template_type_code\nFROM Ref_template_types\nWHERE template_type_description = 'Book'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0054_dev", "sql1": "\nSELECT `template_type_description`\nFROM `ref_template_types`\nWHERE (`template_type_code` = 'AD')\nORDER BY template_type_description\n", "sql2": "SELECT template_type_description\nFROM Ref_template_types\nWHERE template_type_code = 'AD'", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0022_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM templates\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Templates", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/cre_Doc_Template_Mgt/0023_dev", "sql1": "\nSELECT template_id,\n       version_number,\n       template_type_code\nFROM templates\nORDER BY template_id\n", "sql2": "SELECT template_id,\n       version_number,\n       template_type_code\nFROM Templates", "schema": "db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/cre_Doc_Template_Mgt/tables/cre_Doc_Template_Mgt.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0030_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM teacher AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM course_arrange AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM teacher\nWHERE Teacher_id NOT IN\n    (SELECT Teacher_id\n     FROM course_arrange)", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0005_dev", "sql1": "\nSELECT age,\n       hometown\nFROM teacher\nORDER BY age\n", "sql2": "SELECT Age,\n       Hometown\nFROM teacher", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0004_dev", "sql1": "\nSELECT name\nFROM teacher\nORDER BY name\n", "sql2": "SELECT Name\nFROM teacher\nORDER BY Age ASC", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0019_dev", "sql1": "\nSELECT name,\n       course\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.teacher_id AS teacher_id,\n          LHS.grade AS grade,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.hometown AS hometown,\n          RHS.staring_date AS staring_date,\n          RHS.course AS course\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.teacher_id AS teacher_id,\n             LHS.grade AS grade,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.hometown AS hometown\n      FROM course_arrange AS LHS\n      INNER JOIN teacher AS RHS ON (LHS.teacher_id = RHS.teacher_id)) AS LHS\n   INNER JOIN course AS RHS ON (LHS.course_id = RHS.course_id))\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       T2.Course\nFROM course_arrange AS T1\nJOIN course AS T2 ON T1.Course_ID = T2.Course_ID\nJOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0026_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.teacher_id AS teacher_id,\n             LHS.grade AS grade,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.hometown AS hometown\n      FROM course_arrange AS LHS\n      INNER JOIN teacher AS RHS ON (LHS.teacher_id = RHS.teacher_id))\n   GROUP BY name)\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       COUNT(*)\nFROM course_arrange AS T1\nJOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID\nGROUP BY T2.Name", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0027_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT teacher_id,\n          name,\n          age,\n          hometown,\n          course_id,\n          teacher_id_other,\n          grade,\n          teacher_id AS n\n   FROM\n     (SELECT LHS.teacher_id AS teacher_id,\n             LHS.name AS name,\n             LHS.age AS age,\n             LHS.hometown AS hometown,\n             RHS.course_id AS course_id,\n             RHS.teacher_id AS teacher_id_other,\n             RHS.grade AS grade\n      FROM teacher AS LHS\n      INNER JOIN\n        (SELECT course_id,\n                teacher_id,\n                grade,\n                COUNT(*) OVER () AS n\n         FROM course_arrange) AS RHS ON (LHS.teacher_id = RHS.n)))\nWHERE (n > 2)\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM course_arrange AS T1\nJOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID\nGROUP BY T2.Name\nHAVING COUNT(*) >= 2", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0012_dev", "sql1": "\nSELECT hometown\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM teacher\n      ORDER BY age)\n   LIMIT 1)\n", "sql2": "SELECT Hometown\nFROM teacher\nORDER BY Age ASC\nLIMIT 1", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0013_dev", "sql1": "\nSELECT hometown,\n       n AS count___\nFROM\n  (SELECT hometown,\n          COUNT(*) AS n\n   FROM teacher\n   GROUP BY hometown)\nORDER BY hometown\n", "sql2": "SELECT Hometown,\n       COUNT(*)\nFROM teacher\nGROUP BY Hometown", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0021_dev", "sql1": "\nSELECT name,\n       course\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.teacher_id AS teacher_id,\n          LHS.grade AS grade,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.hometown AS hometown,\n          RHS.staring_date AS staring_date,\n          RHS.course AS course\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.teacher_id AS teacher_id,\n             LHS.grade AS grade,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.hometown AS hometown\n      FROM course_arrange AS LHS\n      INNER JOIN teacher AS RHS ON (LHS.teacher_id = RHS.teacher_id)) AS LHS\n   INNER JOIN course AS RHS ON (LHS.course_id = RHS.course_id))\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       T2.Course\nFROM course_arrange AS T1\nJOIN course AS T2 ON T1.Course_ID = T2.Course_ID\nJOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID\nORDER BY T3.Name", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0020_dev", "sql1": "\nSELECT name,\n       course\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.teacher_id AS teacher_id,\n          LHS.grade AS grade,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.hometown AS hometown,\n          RHS.staring_date AS staring_date,\n          RHS.course AS course\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.teacher_id AS teacher_id,\n             LHS.grade AS grade,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.hometown AS hometown\n      FROM course_arrange AS LHS\n      INNER JOIN teacher AS RHS ON (LHS.teacher_id = RHS.teacher_id)) AS LHS\n   INNER JOIN course AS RHS ON (LHS.course_id = RHS.course_id))\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       T2.Course\nFROM course_arrange AS T1\nJOIN course AS T2 ON T1.Course_ID = T2.Course_ID\nJOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0015_dev", "sql1": "\nSELECT hometown\nFROM\n  (SELECT LHS.hometown AS hometown,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.age AS age\n   FROM\n     (SELECT hometown,\n             COUNT(*) AS n\n      FROM teacher\n      GROUP BY hometown) AS LHS\n   INNER JOIN teacher AS RHS ON (LHS.n = RHS.teacher_id\n                                    AND LHS.hometown = RHS.hometown))\nORDER BY hometown\n", "sql2": "SELECT Hometown\nFROM teacher\nGROUP BY Hometown\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0014_dev", "sql1": "\nSELECT hometown,\n       n AS count___\nFROM\n  (SELECT hometown,\n          COUNT(*) AS n\n   FROM teacher\n   GROUP BY hometown)\nORDER BY hometown\n", "sql2": "SELECT Hometown,\n       COUNT(*)\nFROM teacher\nGROUP BY Hometown", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0008_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT name\n   FROM teacher INTERSECT SELECT name\n   FROM teacher)\nORDER BY name\n", "sql2": "select name\nfrom teacher\nwhere hometown != 'little lever urban district'", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0009_dev", "sql1": "\nSELECT name\nFROM teacher\nWHERE (age = 33\n       OR age = 32)\nORDER BY name\n", "sql2": "SELECT Name\nFROM teacher\nWHERE Age = 32\n  OR Age = 33", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM teacher\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM teacher", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0003_dev", "sql1": "\nSELECT name\nFROM teacher\nORDER BY name\n", "sql2": "SELECT Name\nFROM teacher\nORDER BY Age ASC", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0011_dev", "sql1": "\nSELECT hometown\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM teacher\n      ORDER BY age)\n   LIMIT 1)\n", "sql2": "SELECT Hometown\nFROM teacher\nORDER BY Age ASC\nLIMIT 1", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0010_dev", "sql1": "\nSELECT name\nFROM teacher\nWHERE (age = 33\n       OR age = 32)\nORDER BY name\n", "sql2": "SELECT Name\nFROM teacher\nWHERE Age = 32\n  OR Age = 33", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0025_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.teacher_id AS teacher_id,\n             LHS.grade AS grade,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.hometown AS hometown\n      FROM course_arrange AS LHS\n      INNER JOIN teacher AS RHS ON (LHS.teacher_id = RHS.teacher_id))\n   GROUP BY name)\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       COUNT(*)\nFROM course_arrange AS T1\nJOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID\nGROUP BY T2.Name", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0024_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`teacher_id` AS `teacher_id`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`hometown` AS `hometown`,\n          `RHS`.`staring_date` AS `staring_date`,\n          `RHS`.`course` AS `course`\n   FROM\n     (SELECT `LHS`.`course_id` AS `course_id`,\n             `LHS`.`teacher_id` AS `teacher_id`,\n             `LHS`.`grade` AS `grade`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`hometown` AS `hometown`\n      FROM `course_arrange` AS `LHS`\n      INNER JOIN `teacher` AS `RHS` ON (`LHS`.`teacher_id` = `RHS`.`teacher_id`)) AS `LHS`\n   INNER JOIN `course` AS `RHS` ON (`LHS`.`course_id` = `RHS`.`course_id`))\nWHERE (`course` = 'Math')\nORDER BY name\n", "sql2": "SELECT T3.Name\nFROM course_arrange AS T1\nJOIN course AS T2 ON T1.Course_ID = T2.Course_ID\nJOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID\nWHERE T2.Course = 'Math'", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0006_dev", "sql1": "\nSELECT age,\n       hometown\nFROM teacher\nORDER BY age\n", "sql2": "SELECT Age,\n       Hometown\nFROM teacher", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0007_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT name\n   FROM teacher INTERSECT SELECT name\n   FROM teacher)\nORDER BY name\n", "sql2": "select name\nfrom teacher\nwhere hometown != 'little lever urban district'", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM teacher\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM teacher", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0016_dev", "sql1": "\nSELECT hometown\nFROM\n  (SELECT LHS.hometown AS hometown,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.age AS age\n   FROM\n     (SELECT hometown,\n             COUNT(*) AS n\n      FROM teacher\n      GROUP BY hometown) AS LHS\n   INNER JOIN teacher AS RHS ON (LHS.n = RHS.teacher_id\n                                    AND LHS.hometown = RHS.hometown))\nORDER BY hometown\n", "sql2": "SELECT Hometown\nFROM teacher\nGROUP BY Hometown\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0028_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT teacher_id,\n          name,\n          age,\n          hometown,\n          course_id,\n          teacher_id_other,\n          grade,\n          teacher_id AS n\n   FROM\n     (SELECT LHS.teacher_id AS teacher_id,\n             LHS.name AS name,\n             LHS.age AS age,\n             LHS.hometown AS hometown,\n             RHS.course_id AS course_id,\n             RHS.teacher_id AS teacher_id_other,\n             RHS.grade AS grade\n      FROM teacher AS LHS\n      INNER JOIN\n        (SELECT course_id,\n                teacher_id,\n                grade,\n                COUNT(*) OVER () AS n\n         FROM course_arrange) AS RHS ON (LHS.teacher_id = RHS.n)))\nWHERE (n > 2)\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM course_arrange AS T1\nJOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID\nGROUP BY T2.Name\nHAVING COUNT(*) >= 2", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0029_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM teacher AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM course_arrange AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM teacher\nWHERE Teacher_id NOT IN\n    (SELECT Teacher_id\n     FROM course_arrange)", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0022_dev", "sql1": "\nSELECT name,\n       course\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.teacher_id AS teacher_id,\n          LHS.grade AS grade,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.hometown AS hometown,\n          RHS.staring_date AS staring_date,\n          RHS.course AS course\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.teacher_id AS teacher_id,\n             LHS.grade AS grade,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.hometown AS hometown\n      FROM course_arrange AS LHS\n      INNER JOIN teacher AS RHS ON (LHS.teacher_id = RHS.teacher_id)) AS LHS\n   INNER JOIN course AS RHS ON (LHS.course_id = RHS.course_id))\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       T2.Course\nFROM course_arrange AS T1\nJOIN course AS T2 ON T1.Course_ID = T2.Course_ID\nJOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID\nORDER BY T3.Name", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/course_teach/0023_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`teacher_id` AS `teacher_id`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`hometown` AS `hometown`,\n          `RHS`.`staring_date` AS `staring_date`,\n          `RHS`.`course` AS `course`\n   FROM\n     (SELECT `LHS`.`course_id` AS `course_id`,\n             `LHS`.`teacher_id` AS `teacher_id`,\n             `LHS`.`grade` AS `grade`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`hometown` AS `hometown`\n      FROM `course_arrange` AS `LHS`\n      INNER JOIN `teacher` AS `RHS` ON (`LHS`.`teacher_id` = `RHS`.`teacher_id`)) AS `LHS`\n   INNER JOIN `course` AS `RHS` ON (`LHS`.`course_id` = `RHS`.`course_id`))\nWHERE (`course` = 'Math')\nORDER BY name\n", "sql2": "SELECT T3.Name\nFROM course_arrange AS T1\nJOIN course AS T2 ON T1.Course_ID = T2.Course_ID\nJOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID\nWHERE T2.Course = 'Math'", "schema": "db2csv/course_teach/tables/course_teach.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0031_dev", "sql1": "\nSELECT DISTINCT record_company_other AS record_company\nFROM\n  (SELECT LHS.record_company AS record_company,\n          LHS.n AS n,\n          RHS.record_company AS record_company_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT record_company,\n             COUNT(*) AS n\n      FROM orchestra\n      GROUP BY record_company) AS LHS\n   CROSS JOIN\n     (SELECT record_company,\n             COUNT(*) AS n\n      FROM orchestra\n      GROUP BY record_company) AS RHS)\nWHERE (n < n_other)\nORDER BY record_company\n", "sql2": "SELECT Record_Company\nFROM orchestra\nGROUP BY Record_Company\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0030_dev", "sql1": "\nSELECT major_record_format\nFROM\n  (SELECT major_record_format,\n          COUNT(*) AS n\n   FROM orchestra\n   GROUP BY major_record_format)\nORDER BY major_record_format\n", "sql2": "SELECT Major_Record_Format\nFROM orchestra\nGROUP BY Major_Record_Format\nORDER BY COUNT(*) ASC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0005_dev", "sql1": "\nSELECT `name`\nFROM `conductor`\nWHERE (`nationality` != 'USA')\nORDER BY name\n", "sql2": "SELECT Name\nFROM conductor\nWHERE Nationality != 'USA'", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0004_dev", "sql1": "\nSELECT name\nFROM conductor\nORDER BY name\n", "sql2": "SELECT Name\nFROM conductor\nORDER BY Age ASC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0018_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM conductor\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM conductor\nORDER BY Year_of_Work DESC\nLIMIT 1", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0019_dev", "sql1": "\nSELECT name,\n       orchestra\nFROM\n  (SELECT LHS.orchestra_id AS orchestra_id,\n          LHS.orchestra AS orchestra,\n          LHS.conductor_id AS conductor_id,\n          LHS.record_company AS record_company,\n          LHS.year_of_founded AS year_of_founded,\n          LHS.major_record_format AS major_record_format,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.year_of_work AS year_of_work\n   FROM orchestra AS LHS\n   INNER JOIN conductor AS RHS ON (LHS.conductor_id = RHS.conductor_id))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T2.Orchestra\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0026_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.conductor_id AS conductor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.year_of_work AS year_of_work,\n          RHS.orchestra_id AS orchestra_id,\n          RHS.orchestra AS orchestra,\n          RHS.record_company AS record_company,\n          RHS.year_of_founded AS year_of_founded,\n          RHS.major_record_format AS major_record_format\n   FROM conductor AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM orchestra\n      WHERE (year_of_founded > 2008.0)) AS RHS ON (LHS.conductor_id = RHS.conductor_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\nWHERE Year_of_Founded > 2008", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0027_dev", "sql1": "\nSELECT record_company,\n       n AS count___\nFROM\n  (SELECT record_company,\n          COUNT(*) AS n\n   FROM orchestra\n   GROUP BY record_company)\nORDER BY record_company\n", "sql2": "SELECT Record_Company,\n       COUNT(*)\nFROM orchestra\nGROUP BY Record_Company", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0013_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_\nFROM conductor\nORDER BY count_distinct_nationality_\n", "sql2": "SELECT count(DISTINCT Nationality)\nFROM conductor", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0020_dev", "sql1": "\nSELECT name,\n       orchestra\nFROM\n  (SELECT LHS.orchestra_id AS orchestra_id,\n          LHS.orchestra AS orchestra,\n          LHS.conductor_id AS conductor_id,\n          LHS.record_company AS record_company,\n          LHS.year_of_founded AS year_of_founded,\n          LHS.major_record_format AS major_record_format,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.year_of_work AS year_of_work\n   FROM orchestra AS LHS\n   INNER JOIN conductor AS RHS ON (LHS.conductor_id = RHS.conductor_id))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T2.Orchestra\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0015_dev", "sql1": "\nSELECT name\nFROM conductor\nORDER BY name\n", "sql2": "SELECT Name\nFROM conductor\nORDER BY Year_of_Work DESC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0014_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_\nFROM conductor\nORDER BY count_distinct_nationality_\n", "sql2": "SELECT count(DISTINCT Nationality)\nFROM conductor", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0008_dev", "sql1": "\nSELECT record_company\nFROM orchestra\nORDER BY record_company\n", "sql2": "SELECT Record_Company\nFROM orchestra\nORDER BY Year_of_Founded DESC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0009_dev", "sql1": "\nSELECT DISTINCT AVG(attendance) OVER () AS avg_attendance_\nFROM show\nORDER BY avg_attendance_\n", "sql2": "SELECT avg(Attendance)\nFROM SHOW", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0037_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `orchestra`\nWHERE (`major_record_format` = 'CD'\n       OR `major_record_format` = 'DVD')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM orchestra\nWHERE Major_Record_Format = 'CD'\n  OR Major_Record_Format = 'DVD'", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM conductor\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM conductor", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0003_dev", "sql1": "\nSELECT name\nFROM conductor\nORDER BY name\n", "sql2": "SELECT Name\nFROM conductor\nORDER BY Age ASC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0010_dev", "sql1": "\nSELECT DISTINCT AVG(attendance) OVER () AS avg_attendance_\nFROM show\nORDER BY avg_attendance_\n", "sql2": "SELECT avg(Attendance)\nFROM SHOW", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0025_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.conductor_id AS conductor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.year_of_work AS year_of_work,\n          RHS.orchestra_id AS orchestra_id,\n          RHS.orchestra AS orchestra,\n          RHS.record_company AS record_company,\n          RHS.year_of_founded AS year_of_founded,\n          RHS.major_record_format AS major_record_format\n   FROM conductor AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM orchestra\n      WHERE (year_of_founded > 2008.0)) AS RHS ON (LHS.conductor_id = RHS.conductor_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\nWHERE Year_of_Founded > 2008", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0024_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.conductor_id AS conductor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.year_of_work AS year_of_work,\n          RHS.conductor_id AS conductor_id_other\n   FROM conductor AS LHS\n   INNER JOIN\n     (SELECT conductor_id,\n             COUNT(*) AS n\n      FROM orchestra\n      GROUP BY conductor_id) AS RHS ON (LHS.conductor_id = RHS.n))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\nGROUP BY T2.Conductor_ID\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0006_dev", "sql1": "\nSELECT `name`\nFROM `conductor`\nWHERE (`nationality` != 'USA')\nORDER BY name\n", "sql2": "SELECT Name\nFROM conductor\nWHERE Nationality != 'USA'", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0007_dev", "sql1": "\nSELECT record_company\nFROM orchestra\nORDER BY record_company\n", "sql2": "SELECT Record_Company\nFROM orchestra\nORDER BY Year_of_Founded DESC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0038_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `orchestra`\nWHERE (`major_record_format` = 'CD'\n       OR `major_record_format` = 'DVD')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM orchestra\nWHERE Major_Record_Format = 'CD'\n  OR Major_Record_Format = 'DVD'", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0032_dev", "sql1": "\nSELECT DISTINCT record_company_other AS record_company\nFROM\n  (SELECT LHS.record_company AS record_company,\n          LHS.n AS n,\n          RHS.record_company AS record_company_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT record_company,\n             COUNT(*) AS n\n      FROM orchestra\n      GROUP BY record_company) AS LHS\n   CROSS JOIN\n     (SELECT record_company,\n             COUNT(*) AS n\n      FROM orchestra\n      GROUP BY record_company) AS RHS)\nWHERE (n < n_other)\nORDER BY record_company\n", "sql2": "SELECT Record_Company\nFROM orchestra\nGROUP BY Record_Company\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0033_dev", "sql1": "\nSELECT DISTINCT date AS orchestra\nFROM\n  (SELECT LHS.orchestra_id AS orchestra_id,\n          LHS.orchestra AS orchestra,\n          LHS.conductor_id AS conductor_id,\n          LHS.record_company AS record_company,\n          LHS.year_of_founded AS year_of_founded,\n          LHS.major_record_format AS major_record_format,\n          RHS.performance_id AS performance_id,\n          RHS.orchestra_id AS orchestra_id_other,\n          RHS.type AS TYPE,\n          RHS.date AS date,\n          RHS.official_ratings__millions_ AS official_ratings__millions_,\n          RHS.weekly_rank AS weekly_rank,\n          RHS.share AS SHARE\n   FROM orchestra AS LHS\n   CROSS JOIN performance AS RHS)\nWHERE (orchestra_id >= orchestra_id_other)\nORDER BY orchestra\n", "sql2": "SELECT Orchestra\nFROM orchestra\nWHERE Orchestra_ID NOT IN\n    (SELECT Orchestra_ID\n     FROM performance)", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM conductor\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM conductor", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0034_dev", "sql1": "\nSELECT DISTINCT date AS orchestra\nFROM\n  (SELECT LHS.orchestra_id AS orchestra_id,\n          LHS.orchestra AS orchestra,\n          LHS.conductor_id AS conductor_id,\n          LHS.record_company AS record_company,\n          LHS.year_of_founded AS year_of_founded,\n          LHS.major_record_format AS major_record_format,\n          RHS.performance_id AS performance_id,\n          RHS.orchestra_id AS orchestra_id_other,\n          RHS.type AS TYPE,\n          RHS.date AS date,\n          RHS.official_ratings__millions_ AS official_ratings__millions_,\n          RHS.weekly_rank AS weekly_rank,\n          RHS.share AS SHARE\n   FROM orchestra AS LHS\n   CROSS JOIN performance AS RHS)\nWHERE (orchestra_id >= orchestra_id_other)\nORDER BY orchestra\n", "sql2": "SELECT Orchestra\nFROM orchestra\nWHERE Orchestra_ID NOT IN\n    (SELECT Orchestra_ID\n     FROM performance)", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0016_dev", "sql1": "\nSELECT name\nFROM conductor\nORDER BY name\n", "sql2": "SELECT Name\nFROM conductor\nORDER BY Year_of_Work DESC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0017_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM conductor\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM conductor\nORDER BY Year_of_Work DESC\nLIMIT 1", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0028_dev", "sql1": "\nSELECT record_company,\n       n AS count___\nFROM\n  (SELECT record_company,\n          COUNT(*) AS n\n   FROM orchestra\n   GROUP BY record_company)\nORDER BY record_company\n", "sql2": "SELECT Record_Company,\n       COUNT(*)\nFROM orchestra\nGROUP BY Record_Company", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0029_dev", "sql1": "\nSELECT major_record_format\nFROM\n  (SELECT major_record_format,\n          COUNT(*) AS n\n   FROM orchestra\n   GROUP BY major_record_format)\nORDER BY major_record_format\n", "sql2": "SELECT Major_Record_Format\nFROM orchestra\nGROUP BY Major_Record_Format\nORDER BY COUNT(*) ASC", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/orchestra/0023_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.conductor_id AS conductor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.year_of_work AS year_of_work,\n          RHS.conductor_id AS conductor_id_other\n   FROM conductor AS LHS\n   INNER JOIN\n     (SELECT conductor_id,\n             COUNT(*) AS n\n      FROM orchestra\n      GROUP BY conductor_id) AS RHS ON (LHS.conductor_id = RHS.n))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\nGROUP BY T2.Conductor_ID\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/orchestra/tables/orchestra.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0078_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT cylinders,\n          COUNT(*) AS n\n   FROM cars_data\n   GROUP BY cylinders)\nWHERE (cylinders > 6\n       OR n = 6)\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM CARS_DATA\nWHERE Cylinders > 6;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0005_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM countries\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COUNTRIES;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0051_dev", "sql1": "\nSELECT `meanedispl` AS `avg_t2_edispl_`\nFROM\n  (SELECT AVG(`edispl`) AS `meanedispl`\n   FROM\n     (SELECT `makeid`,\n             `model`,\n             `make`,\n             `mpg`,\n             `cylinders`,\n             `edispl`,\n             `horsepower`,\n             `weight`,\n             `accelerate`,\n             `year`,\n             `makeid` AS `id`\n      FROM\n        (SELECT `LHS`.`makeid` AS `makeid`,\n                `LHS`.`model` AS `model`,\n                `LHS`.`make` AS `make`,\n                `RHS`.`mpg` AS `mpg`,\n                `RHS`.`cylinders` AS `cylinders`,\n                `RHS`.`edispl` AS `edispl`,\n                `RHS`.`horsepower` AS `horsepower`,\n                `RHS`.`weight` AS `weight`,\n                `RHS`.`accelerate` AS `accelerate`,\n                `RHS`.`year` AS `year`\n         FROM\n           (SELECT *\n            FROM `car_names`\n            WHERE (`model` = 'volvo')) AS LHS\n         INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id))))\nORDER BY avg_t2_edispl_\n", "sql2": "SELECT avg(T2.edispl)\nFROM CAR_NAMES AS T1\nJOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id\nWHERE T1.Model = 'volvo';", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0026_dev", "sql1": "\nSELECT `accelerate`\nFROM\n  (SELECT `LHS`.`makeid` AS `makeid`,\n          `LHS`.`model` AS `model`,\n          `LHS`.`make` AS `make`,\n          `RHS`.`mpg` AS `mpg`,\n          `RHS`.`cylinders` AS `cylinders`,\n          `RHS`.`edispl` AS `edispl`,\n          `RHS`.`horsepower` AS `horsepower`,\n          `RHS`.`weight` AS `weight`,\n          `RHS`.`accelerate` AS `accelerate`,\n          `RHS`.`year` AS `year`\n   FROM\n     (SELECT *\n      FROM `car_names`\n      WHERE (`make` = 'amc hornet sportabout (sw)')) AS LHS\n   INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id))\nORDER BY accelerate\n", "sql2": "SELECT T1.Accelerate\nFROM CARS_DATA AS T1\nJOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId\nWHERE T2.Make = 'amc hornet sportabout (sw)';", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0056_dev", "sql1": "\nSELECT model\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT model,\n                COUNT(*) AS n\n         FROM car_names\n         GROUP BY model)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Model\nFROM CAR_NAMES\nGROUP BY Model\nORDER BY count(*) DESC\nLIMIT 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0021_dev", "sql1": "\nSELECT countryname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT id,\n                maker,\n                fullname,\n                country,\n                countryname,\n                continent,\n                countryid,\n                COUNT(*) OVER () AS n\n         FROM\n           (SELECT id,\n                   maker,\n                   fullname,\n                   country,\n                   countryname,\n                   continent,\n                   country AS countryid\n            FROM\n              (SELECT LHS.id AS id,\n                      LHS.maker AS maker,\n                      LHS.fullname AS fullname,\n                      LHS.country AS country,\n                      RHS.countryname AS countryname,\n                      RHS.continent AS continent\n               FROM car_makers AS LHS\n               INNER JOIN countries AS RHS ON (LHS.country = RHS.countryid))))\n      ORDER BY continent DESC)\n   LIMIT 1)\n", "sql2": "SELECT T2.CountryName\nFROM CAR_MAKERS AS T1\nJOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId\nGROUP BY T1.Country\nORDER BY Count(*) DESC\nLIMIT 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0068_dev", "sql1": "\nSELECT DISTINCT YEAR\nFROM cars_data\nWHERE (weight != 3000\n       AND weight != 4000)\nORDER BY YEAR\n", "sql2": "select distinct year\nfrom cars_data\nwhere weight between 3000 and 4000;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0069_dev", "sql1": "\nSELECT horsepower\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM cars_data\n      ORDER BY accelerate DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.horsepower\nFROM CARS_DATA AS T1\nORDER BY T1.accelerate DESC\nLIMIT 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0062_dev", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`modelid` AS `modelid`,\n          `LHS`.`maker` AS `maker`,\n          `LHS`.`model` AS `model`,\n          `RHS`.`fullname` AS `fullname`,\n          `RHS`.`id` AS `id`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM `model_list` AS `LHS`\n   CROSS JOIN\n     (SELECT `fullname`,\n             `id`,\n             COUNT(DISTINCT `fullname`) AS `n_distinct`\n      FROM `car_makers`\n      WHERE (`fullname` != 'American Motor Company')\n      GROUP BY fullname,\n               id) AS RHS)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CAR_MAKERS AS T1\nJOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker\nWHERE T1.FullName = 'American Motor Company';", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0041_dev", "sql1": "\nSELECT meanweight AS avg_weight_,\n       YEAR\nFROM\n  (SELECT YEAR,\n          AVG(weight) AS meanweight\n   FROM cars_data\n   GROUP BY YEAR)\nORDER BY avg_weight_\n", "sql2": "SELECT avg(Weight),\n       YEAR\nFROM CARS_DATA\nGROUP BY YEAR;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0036_dev", "sql1": "\nSELECT maker,\n       model\nFROM model_list\nORDER BY maker\n", "sql2": "SELECT Maker,\n       Model\nFROM MODEL_LIST;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0037_dev", "sql1": "\nSELECT DISTINCT countryname,\n                country AS countryid\nFROM\n  (SELECT id,\n          maker,\n          fullname,\n          country,\n          countryname,\n          continent,\n          n,\n          country AS countryid\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.maker AS maker,\n             LHS.fullname AS fullname,\n             LHS.country AS country,\n             RHS.countryname AS countryname,\n             RHS.continent AS continent,\n             RHS.n AS n\n      FROM car_makers AS LHS\n      INNER JOIN\n        (SELECT countryid,\n                countryname,\n                continent,\n                COUNT(*) OVER () AS n\n         FROM countries) AS RHS ON (LHS.country = RHS.countryid)))\nWHERE (n >= 1)\nORDER BY countryname\n", "sql2": "SELECT T1.CountryName,\n       T1.CountryId\nFROM COUNTRIES AS T1\nJOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country\nGROUP BY T1.CountryId\nHAVING count(*) >= 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM continents\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CONTINENTS;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0075_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT countryid,\n          COUNT(*) AS n\n   FROM\n     (SELECT id,\n             maker,\n             fullname,\n             country,\n             countryname,\n             continent,\n             country AS countryid\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.maker AS maker,\n                LHS.fullname AS fullname,\n                LHS.country AS country,\n                RHS.countryname AS countryname,\n                RHS.continent AS continent\n         FROM car_makers AS LHS\n         INNER JOIN countries AS RHS ON (LHS.country = RHS.countryid)))\n   GROUP BY countryid)\nWHERE (n > 2)\nORDER BY count___\n", "sql2": "select count(*)\nfrom countries as t1\njoin car_makers as t2 on t1.countryid = t2.country\ngroup by t1.countryid\nhaving count(*) > 2", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0059_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT YEAR,\n          COUNT(*) AS n\n   FROM cars_data\n   GROUP BY YEAR)\nWHERE (YEAR = 1980\n       AND n <= 1980)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CARS_DATA\nWHERE YEAR = 1980;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0067_dev", "sql1": "\nSELECT DISTINCT YEAR\nFROM cars_data\nWHERE (weight != 3000\n       AND weight != 4000)\nORDER BY YEAR\n", "sql2": "select distinct year\nfrom cars_data\nwhere weight between 3000 and 4000;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0052_dev", "sql1": "\nSELECT `meanedispl` AS `avg_t2_edispl_`\nFROM\n  (SELECT AVG(`edispl`) AS `meanedispl`\n   FROM\n     (SELECT `makeid`,\n             `model`,\n             `make`,\n             `mpg`,\n             `cylinders`,\n             `edispl`,\n             `horsepower`,\n             `weight`,\n             `accelerate`,\n             `year`,\n             `makeid` AS `id`\n      FROM\n        (SELECT `LHS`.`makeid` AS `makeid`,\n                `LHS`.`model` AS `model`,\n                `LHS`.`make` AS `make`,\n                `RHS`.`mpg` AS `mpg`,\n                `RHS`.`cylinders` AS `cylinders`,\n                `RHS`.`edispl` AS `edispl`,\n                `RHS`.`horsepower` AS `horsepower`,\n                `RHS`.`weight` AS `weight`,\n                `RHS`.`accelerate` AS `accelerate`,\n                `RHS`.`year` AS `year`\n         FROM\n           (SELECT *\n            FROM `car_names`\n            WHERE (`model` = 'volvo')) AS LHS\n         INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id))))\nORDER BY avg_t2_edispl_\n", "sql2": "SELECT avg(T2.edispl)\nFROM CAR_NAMES AS T1\nJOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id\nWHERE T1.Model = 'volvo';", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0053_dev", "sql1": "\nSELECT maxaccelerate AS max_accelerate_,\n       cylinders\nFROM\n  (SELECT cylinders,\n          MAX(accelerate) AS maxaccelerate\n   FROM cars_data\n   GROUP BY cylinders)\nORDER BY max_accelerate_\n", "sql2": "SELECT max(Accelerate),\n       Cylinders\nFROM CARS_DATA\nGROUP BY Cylinders;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0025_dev", "sql1": "\nSELECT `accelerate`\nFROM\n  (SELECT `LHS`.`makeid` AS `makeid`,\n          `LHS`.`model` AS `model`,\n          `LHS`.`make` AS `make`,\n          `RHS`.`mpg` AS `mpg`,\n          `RHS`.`cylinders` AS `cylinders`,\n          `RHS`.`edispl` AS `edispl`,\n          `RHS`.`horsepower` AS `horsepower`,\n          `RHS`.`weight` AS `weight`,\n          `RHS`.`accelerate` AS `accelerate`,\n          `RHS`.`year` AS `year`\n   FROM\n     (SELECT *\n      FROM `car_names`\n      WHERE (`make` = 'amc hornet sportabout (sw)')) AS LHS\n   INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id))\nORDER BY accelerate\n", "sql2": "SELECT T1.Accelerate\nFROM CARS_DATA AS T1\nJOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId\nWHERE T2.Make = 'amc hornet sportabout (sw)';", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0006_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM countries\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COUNTRIES;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0038_dev", "sql1": "\nSELECT DISTINCT countryname,\n                country AS countryid\nFROM\n  (SELECT id,\n          maker,\n          fullname,\n          country,\n          countryname,\n          continent,\n          n,\n          country AS countryid\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.maker AS maker,\n             LHS.fullname AS fullname,\n             LHS.country AS country,\n             RHS.countryname AS countryname,\n             RHS.continent AS continent,\n             RHS.n AS n\n      FROM car_makers AS LHS\n      INNER JOIN\n        (SELECT countryid,\n                countryname,\n                continent,\n                COUNT(*) OVER () AS n\n         FROM countries) AS RHS ON (LHS.country = RHS.countryid)))\nWHERE (n >= 1)\nORDER BY countryname\n", "sql2": "SELECT T1.CountryName,\n       T1.CountryId\nFROM COUNTRIES AS T1\nJOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country\nGROUP BY T1.CountryId\nHAVING count(*) >= 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0070_dev", "sql1": "\nSELECT horsepower\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM cars_data\n      ORDER BY accelerate DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.horsepower\nFROM CARS_DATA AS T1\nORDER BY T1.accelerate DESC\nLIMIT 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM continents\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CONTINENTS;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0076_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT countryid,\n          COUNT(*) AS n\n   FROM\n     (SELECT id,\n             maker,\n             fullname,\n             country,\n             countryname,\n             continent,\n             country AS countryid\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.maker AS maker,\n                LHS.fullname AS fullname,\n                LHS.country AS country,\n                RHS.countryname AS countryname,\n                RHS.continent AS continent\n         FROM car_makers AS LHS\n         INNER JOIN countries AS RHS ON (LHS.country = RHS.countryid)))\n   GROUP BY countryid)\nWHERE (n > 2)\nORDER BY count___\n", "sql2": "select count(*)\nfrom countries as t1\njoin car_makers as t2 on t1.countryid = t2.country\ngroup by t1.countryid\nhaving count(*) > 2", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0077_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT cylinders,\n          COUNT(*) AS n\n   FROM cars_data\n   GROUP BY cylinders)\nWHERE (cylinders > 6\n       OR n = 6)\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM CARS_DATA\nWHERE Cylinders > 6;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0042_dev", "sql1": "\nSELECT meanweight AS avg_weight_,\n       YEAR\nFROM\n  (SELECT YEAR,\n          AVG(weight) AS meanweight\n   FROM cars_data\n   GROUP BY YEAR)\nORDER BY avg_weight_\n", "sql2": "SELECT avg(Weight),\n       YEAR\nFROM CARS_DATA\nGROUP BY YEAR;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0035_dev", "sql1": "\nSELECT maker,\n       model\nFROM model_list\nORDER BY maker\n", "sql2": "SELECT Maker,\n       Model\nFROM MODEL_LIST;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0061_dev", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`modelid` AS `modelid`,\n          `LHS`.`maker` AS `maker`,\n          `LHS`.`model` AS `model`,\n          `RHS`.`fullname` AS `fullname`,\n          `RHS`.`id` AS `id`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM `model_list` AS `LHS`\n   CROSS JOIN\n     (SELECT `fullname`,\n             `id`,\n             COUNT(DISTINCT `fullname`) AS `n_distinct`\n      FROM `car_makers`\n      WHERE (`fullname` != 'American Motor Company')\n      GROUP BY fullname,\n               id) AS RHS)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CAR_MAKERS AS T1\nJOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker\nWHERE T1.FullName = 'American Motor Company';", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0060_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT YEAR,\n          COUNT(*) AS n\n   FROM cars_data\n   GROUP BY YEAR)\nWHERE (YEAR = 1980\n       AND n <= 1980)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CARS_DATA\nWHERE YEAR = 1980;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0055_dev", "sql1": "\nSELECT model\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT model,\n                COUNT(*) AS n\n         FROM car_names\n         GROUP BY model)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Model\nFROM CAR_NAMES\nGROUP BY Model\nORDER BY count(*) DESC\nLIMIT 1;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/car_1/0054_dev", "sql1": "\nSELECT maxaccelerate AS max_accelerate_,\n       cylinders\nFROM\n  (SELECT cylinders,\n          MAX(accelerate) AS maxaccelerate\n   FROM cars_data\n   GROUP BY cylinders)\nORDER BY max_accelerate_\n", "sql2": "SELECT max(Accelerate),\n       Cylinders\nFROM CARS_DATA\nGROUP BY Cylinders;", "schema": "db2csv/car_1/tables/car_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/car_1/tables/car_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0079_dev", "sql1": "\nSELECT airportname\nFROM airports\nORDER BY airportname\n", "sql2": "SELECT AirportName\nFROM Airports\nWHERE AirportCode NOT IN\n    (SELECT SourceAirport\n     FROM Flights\n     UNION SELECT DestAirport\n     FROM Flights)", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0005_dev", "sql1": "\nSELECT `airline`,\n       `abbreviation`\nFROM `airlines`\nWHERE (`country` = 'USA')\nORDER BY airline\n", "sql2": "SELECT Airline,\n       Abbreviation\nFROM AIRLINES\nWHERE Country = 'USA'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0004_dev", "sql1": "\nSELECT `abbreviation`\nFROM `airlines`\nWHERE (`airline` = 'JetBlue Airways')\nORDER BY abbreviation\n", "sql2": "SELECT Abbreviation\nFROM AIRLINES\nWHERE Airline = 'JetBlue Airways'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0018_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `airlines`\n      WHERE (`country` = 'USA')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM AIRLINES\nWHERE Country = 'USA'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0051_dev", "sql1": "\nSELECT airline_other AS airline\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT airline,\n                flightno,\n                sourceairport,\n                destairport,\n                airline_other,\n                airline AS n\n         FROM\n           (SELECT LHS.airline AS airline,\n                   LHS.flightno AS flightno,\n                   LHS.sourceairport AS sourceairport,\n                   LHS.destairport AS destairport,\n                   RHS.airline AS airline_other\n            FROM flights AS LHS\n            INNER JOIN\n              (SELECT airline,\n                      COUNT(*) AS n\n               FROM airlines\n               GROUP BY airline) AS RHS ON (LHS.airline = RHS.n)))\n      ORDER BY flightno)\n   LIMIT 1)\n", "sql2": "SELECT T1.Airline\nFROM AIRLINES AS T1\nJOIN FLIGHTS AS T2 ON T1.uid = T2.Airline\nGROUP BY T1.Airline\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0080_dev", "sql1": "\nSELECT airportname\nFROM airports\nORDER BY airportname\n", "sql2": "SELECT AirportName\nFROM Airports\nWHERE AirportCode NOT IN\n    (SELECT SourceAirport\n     FROM Flights\n     UNION SELECT DestAirport\n     FROM Flights)", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0012_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM airports\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM AIRPORTS", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0013_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM flights\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM FLIGHTS", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0021_dev", "sql1": "\nSELECT `airportname`\nFROM `airports`\nWHERE (`airportcode` = 'AKO')\nORDER BY airportname\n", "sql2": "SELECT AirportName\nFROM AIRPORTS\nWHERE AirportCode = 'AKO'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0068_dev", "sql1": "\nSELECT `flightno`\nFROM\n  (SELECT `LHS`.`uid` AS `uid`,\n          `LHS`.`airline` AS `airline`,\n          `LHS`.`abbreviation` AS `abbreviation`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`flightno` AS `flightno`,\n          `RHS`.`sourceairport` AS `sourceairport`,\n          `RHS`.`destairport` AS `destairport`\n   FROM\n     (SELECT *\n      FROM `airlines`\n      WHERE (`airline` = 'United Airlines')) AS LHS\n   INNER JOIN flights AS RHS ON (LHS.uid = RHS.airline))\nORDER BY flightno\n", "sql2": "SELECT T1.FlightNo\nFROM FLIGHTS AS T1\nJOIN AIRLINES AS T2 ON T2.uid = T1.Airline\nWHERE T2.Airline = 'United Airlines'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0015_dev", "sql1": "\nSELECT `airline`\nFROM `airlines`\nWHERE (`abbreviation` = 'UAL')\nORDER BY airline\n", "sql2": "SELECT Airline\nFROM AIRLINES\nWHERE Abbreviation = 'UAL'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0014_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM flights\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM FLIGHTS", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0009_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM airlines\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM AIRLINES", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0002_dev", "sql1": "\nSELECT `country`\nFROM `airlines`\nWHERE (`airline` = 'JetBlue Airways')\nORDER BY country\n", "sql2": "SELECT Country\nFROM AIRLINES\nWHERE Airline = 'JetBlue Airways'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0003_dev", "sql1": "\nSELECT `abbreviation`\nFROM `airlines`\nWHERE (`airline` = 'JetBlue Airways')\nORDER BY abbreviation\n", "sql2": "SELECT Abbreviation\nFROM AIRLINES\nWHERE Airline = 'JetBlue Airways'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0011_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM airports\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM AIRPORTS", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0010_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM airlines\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM AIRLINES", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0067_dev", "sql1": "\nSELECT `flightno`\nFROM\n  (SELECT `LHS`.`uid` AS `uid`,\n          `LHS`.`airline` AS `airline`,\n          `LHS`.`abbreviation` AS `abbreviation`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`flightno` AS `flightno`,\n          `RHS`.`sourceairport` AS `sourceairport`,\n          `RHS`.`destairport` AS `destairport`\n   FROM\n     (SELECT *\n      FROM `airlines`\n      WHERE (`airline` = 'United Airlines')) AS LHS\n   INNER JOIN flights AS RHS ON (LHS.uid = RHS.airline))\nORDER BY flightno\n", "sql2": "SELECT T1.FlightNo\nFROM FLIGHTS AS T1\nJOIN AIRLINES AS T2 ON T2.uid = T1.Airline\nWHERE T2.Airline = 'United Airlines'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0052_dev", "sql1": "\nSELECT airline_other AS airline\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT airline,\n                flightno,\n                sourceairport,\n                destairport,\n                airline_other,\n                airline AS n\n         FROM\n           (SELECT LHS.airline AS airline,\n                   LHS.flightno AS flightno,\n                   LHS.sourceairport AS sourceairport,\n                   LHS.destairport AS destairport,\n                   RHS.airline AS airline_other\n            FROM flights AS LHS\n            INNER JOIN\n              (SELECT airline,\n                      COUNT(*) AS n\n               FROM airlines\n               GROUP BY airline) AS RHS ON (LHS.airline = RHS.n)))\n      ORDER BY flightno)\n   LIMIT 1)\n", "sql2": "SELECT T1.Airline\nFROM AIRLINES AS T1\nJOIN FLIGHTS AS T2 ON T1.uid = T2.Airline\nGROUP BY T1.Airline\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0006_dev", "sql1": "\nSELECT `airline`,\n       `abbreviation`\nFROM `airlines`\nWHERE (`country` = 'USA')\nORDER BY airline\n", "sql2": "SELECT Airline,\n       Abbreviation\nFROM AIRLINES\nWHERE Country = 'USA'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0001_dev", "sql1": "\nSELECT `country`\nFROM `airlines`\nWHERE (`airline` = 'JetBlue Airways')\nORDER BY country\n", "sql2": "SELECT Country\nFROM AIRLINES\nWHERE Airline = 'JetBlue Airways'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0016_dev", "sql1": "\nSELECT `airline`\nFROM `airlines`\nWHERE (`abbreviation` = 'UAL')\nORDER BY airline\n", "sql2": "SELECT Airline\nFROM AIRLINES\nWHERE Abbreviation = 'UAL'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0017_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `airlines`\n      WHERE (`country` = 'USA')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM AIRLINES\nWHERE Country = 'USA'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/flight_2/0022_dev", "sql1": "\nSELECT `airportname`\nFROM `airports`\nWHERE (`airportcode` = 'AKO')\nORDER BY airportname\n", "sql2": "SELECT AirportName\nFROM AIRPORTS\nWHERE AirportCode = 'AKO'", "schema": "db2csv/flight_2/tables/flight_2.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0031_dev", "sql1": "\nSELECT nationality\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY nationality)\nWHERE (n > 2)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM people\nGROUP BY Nationality\nHAVING COUNT(*) >= 2", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0030_dev", "sql1": "\nSELECT nationality\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT nationality,\n                COUNT(*) AS n\n         FROM people\n         GROUP BY nationality)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Nationality\nFROM people\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0005_dev", "sql1": "\nSELECT final_table_made,\n       best_finish\nFROM poker_player\nORDER BY final_table_made\n", "sql2": "SELECT Final_Table_Made,\n       Best_Finish\nFROM poker_player", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0004_dev", "sql1": "\nSELECT earnings\nFROM poker_player\nORDER BY earnings\n", "sql2": "SELECT Earnings\nFROM poker_player\nORDER BY Earnings DESC", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0018_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Final_Table_Made", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0019_dev", "sql1": "\nSELECT DISTINCT birth_date\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY birth_date\n", "sql2": "SELECT T1.Birth_Date\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Earnings ASC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0026_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Earnings DESC", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0027_dev", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM people\nGROUP BY Nationality", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0012_dev", "sql1": "\nSELECT DISTINCT MAX(final_table_made) OVER () AS max_final_table_made_\nFROM poker_player\nWHERE (earnings < 200000.0\n       OR earnings = final_table_made)\nORDER BY max_final_table_made_\n", "sql2": "SELECT max(Final_Table_Made)\nFROM poker_player\nWHERE Earnings < 200000", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0013_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0021_dev", "sql1": "\nSELECT money_rank\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.poker_player_id AS poker_player_id,\n                LHS.people_id AS people_id,\n                LHS.final_table_made AS final_table_made,\n                LHS.best_finish AS best_finish,\n                LHS.money_rank AS money_rank,\n                LHS.earnings AS earnings,\n                RHS.nationality AS nationality,\n                RHS.name AS name,\n                RHS.birth_date AS birth_date,\n                RHS.height AS height\n         FROM poker_player AS LHS\n         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\n      ORDER BY poker_player_id)\n   LIMIT 1)\n", "sql2": "SELECT T2.Money_Rank\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Height DESC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0020_dev", "sql1": "\nSELECT DISTINCT birth_date\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY birth_date\n", "sql2": "SELECT T1.Birth_Date\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Earnings ASC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0015_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.nationality AS nationality,\n          LHS.name AS name,\n          LHS.birth_date AS birth_date,\n          LHS.height AS height,\n          RHS.poker_player_id AS poker_player_id,\n          RHS.final_table_made AS final_table_made,\n          RHS.best_finish AS best_finish,\n          RHS.money_rank AS money_rank,\n          RHS.earnings AS earnings\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM poker_player\n      WHERE (earnings >= 300000.0)) AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nWHERE T2.Earnings > 300000", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0014_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0040_dev", "sql1": "\nSELECT n_distinct AS count_distinct_nationality_\nFROM\n  (SELECT COUNT(DISTINCT nationality) AS n_distinct\n   FROM people)\nORDER BY count_distinct_nationality_\n", "sql2": "SELECT count(DISTINCT Nationality)\nFROM people", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0008_dev", "sql1": "\nSELECT meanearnings AS avg_earnings_\nFROM\n  (SELECT AVG(earnings) AS meanearnings\n   FROM poker_player)\nORDER BY avg_earnings_\n", "sql2": "SELECT avg(Earnings)\nFROM poker_player", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0009_dev", "sql1": "\nSELECT money_rank\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM poker_player\n      ORDER BY money_rank)\n   LIMIT 1)\n", "sql2": "SELECT Money_Rank\nFROM poker_player\nORDER BY Earnings DESC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0036_dev", "sql1": "\nSELECT `name`\nFROM `people`\nWHERE (`nationality` != 'Russia')\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE Nationality != 'Russia'", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0037_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM poker_player)", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0002_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM poker_player)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM poker_player", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0003_dev", "sql1": "\nSELECT earnings\nFROM poker_player\nORDER BY earnings\n", "sql2": "SELECT Earnings\nFROM poker_player\nORDER BY Earnings DESC", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0011_dev", "sql1": "\nSELECT DISTINCT MAX(final_table_made) OVER () AS max_final_table_made_\nFROM poker_player\nWHERE (earnings < 200000.0\n       OR earnings = final_table_made)\nORDER BY max_final_table_made_\n", "sql2": "SELECT max(Final_Table_Made)\nFROM poker_player\nWHERE Earnings < 200000", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0010_dev", "sql1": "\nSELECT money_rank\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM poker_player\n      ORDER BY money_rank)\n   LIMIT 1)\n", "sql2": "SELECT Money_Rank\nFROM poker_player\nORDER BY Earnings DESC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0025_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Earnings DESC", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0006_dev", "sql1": "\nSELECT final_table_made,\n       best_finish\nFROM poker_player\nORDER BY final_table_made\n", "sql2": "SELECT Final_Table_Made,\n       Best_Finish\nFROM poker_player", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0007_dev", "sql1": "\nSELECT meanearnings AS avg_earnings_\nFROM\n  (SELECT AVG(earnings) AS meanearnings\n   FROM poker_player)\nORDER BY avg_earnings_\n", "sql2": "SELECT avg(Earnings)\nFROM poker_player", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0038_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM poker_player)", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0039_dev", "sql1": "\nSELECT n_distinct AS count_distinct_nationality_\nFROM\n  (SELECT COUNT(DISTINCT nationality) AS n_distinct\n   FROM people)\nORDER BY count_distinct_nationality_\n", "sql2": "SELECT count(DISTINCT Nationality)\nFROM people", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0032_dev", "sql1": "\nSELECT nationality\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY nationality)\nWHERE (n > 2)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM people\nGROUP BY Nationality\nHAVING COUNT(*) >= 2", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0033_dev", "sql1": "\nSELECT name,\n       birth_date\nFROM people\nORDER BY name\n", "sql2": "SELECT Name,\n       Birth_Date\nFROM people\nORDER BY Name ASC", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0001_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM poker_player)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM poker_player", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0035_dev", "sql1": "\nSELECT `name`\nFROM `people`\nWHERE (`nationality` != 'Russia')\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE Nationality != 'Russia'", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0034_dev", "sql1": "\nSELECT name,\n       birth_date\nFROM people\nORDER BY name\n", "sql2": "SELECT Name,\n       Birth_Date\nFROM people\nORDER BY Name ASC", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0016_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.nationality AS nationality,\n          LHS.name AS name,\n          LHS.birth_date AS birth_date,\n          LHS.height AS height,\n          RHS.poker_player_id AS poker_player_id,\n          RHS.final_table_made AS final_table_made,\n          RHS.best_finish AS best_finish,\n          RHS.money_rank AS money_rank,\n          RHS.earnings AS earnings\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM poker_player\n      WHERE (earnings >= 300000.0)) AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nWHERE T2.Earnings > 300000", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0017_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM poker_player AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Final_Table_Made", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0028_dev", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM people\nGROUP BY Nationality", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0029_dev", "sql1": "\nSELECT nationality\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT nationality,\n                COUNT(*) AS n\n         FROM people\n         GROUP BY nationality)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Nationality\nFROM people\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/poker_player/0022_dev", "sql1": "\nSELECT money_rank\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.poker_player_id AS poker_player_id,\n                LHS.people_id AS people_id,\n                LHS.final_table_made AS final_table_made,\n                LHS.best_finish AS best_finish,\n                LHS.money_rank AS money_rank,\n                LHS.earnings AS earnings,\n                RHS.nationality AS nationality,\n                RHS.name AS name,\n                RHS.birth_date AS birth_date,\n                RHS.height AS height\n         FROM poker_player AS LHS\n         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\n      ORDER BY poker_player_id)\n   LIMIT 1)\n", "sql2": "SELECT T2.Money_Rank\nFROM people AS T1\nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Height DESC\nLIMIT 1", "schema": "db2csv/poker_player/tables/poker_player.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0031_dev", "sql1": "\nSELECT DISTINCT country\nFROM singer\nWHERE (age = 40\n       OR age < 30)\nORDER BY country\n", "sql2": "SELECT country\nFROM singer\nWHERE age > 40 INTERSECT\n  SELECT country\n  FROM singer WHERE age < 30", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0030_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM concert AS RHS\n        WHERE (LHS.stadium_id = RHS.stadium_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nWHERE stadium_id NOT IN\n    (SELECT stadium_id\n     FROM concert)", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0004_dev", "sql1": "\nSELECT name,\n       country,\n       age\nFROM singer\nORDER BY name\n", "sql2": "SELECT name,\n       country,\n       age\nFROM singer\nORDER BY age DESC", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0018_dev", "sql1": "\nSELECT DISTINCT meancapacity AS avg_capacity_,\n                MAX(capacity) OVER () AS max_capacity_\nFROM\n  (SELECT stadium_id,\n          LOCATION,\n          name,\n          capacity,\n          highest,\n          lowest,\n          average,\n          AVG(capacity) OVER () AS meancapacity\n   FROM stadium)\nORDER BY avg_capacity_\n", "sql2": "select avg(capacity),\n       max(capacity)\nfrom stadium", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0019_dev", "sql1": "\nSELECT name,\n       capacity\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM stadium\n      ORDER BY average DESC)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       capacity\nFROM stadium\nORDER BY average DESC\nLIMIT 1", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0027_dev", "sql1": "\nSELECT DISTINCT YEAR\nFROM\n  (SELECT LHS.concert_id AS concert_id,\n          LHS.concert_name AS concert_name,\n          LHS.theme AS theme,\n          LHS.stadium_id AS stadium_id,\n          LHS.year AS YEAR,\n          RHS.concert_id AS concert_id_other,\n          RHS.concert_name AS concert_name_other,\n          RHS.theme AS theme_other,\n          RHS.year AS year_other,\n          RHS.n AS n\n   FROM concert AS LHS\n   INNER JOIN\n     (SELECT concert_id,\n             concert_name,\n             theme,\n             stadium_id,\n             YEAR,\n             COUNT(*) OVER () AS n\n      FROM concert) AS RHS ON (LHS.concert_id = RHS.stadium_id))\nORDER BY YEAR\n", "sql2": "SELECT YEAR\nFROM concert\nGROUP BY YEAR\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0012_dev", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM singer\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT country,\n       count(*)\nFROM singer\nGROUP BY country", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0021_dev", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT concert_id,\n          concert_name,\n          theme,\n          stadium_id,\n          YEAR,\n          COUNT(*) OVER () AS n\n   FROM concert)\nWHERE (n != 2014\n       OR YEAR <= 2015)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM concert\nWHERE YEAR = 2014\n  OR YEAR = 2015", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0020_dev", "sql1": "\nSELECT name,\n       capacity\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM stadium\n      ORDER BY average DESC)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       capacity\nFROM stadium\nORDER BY average DESC\nLIMIT 1", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0008_dev", "sql1": "\nSELECT song_name,\n       song_release_year\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM singer\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT song_name,\n       song_release_year\nFROM singer\nORDER BY age\nLIMIT 1", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0009_dev", "sql1": "\nSELECT DISTINCT country\nFROM singer\nWHERE (age >= 20)\nORDER BY country\n", "sql2": "SELECT DISTINCT country\nFROM singer\nWHERE age > 20", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0036_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.song_name AS song_name,\n          LHS.song_release_year AS song_release_year,\n          LHS.age AS age,\n          LHS.is_male AS is_male,\n          RHS.n AS n\n   FROM singer AS LHS\n   INNER JOIN\n     (SELECT singer_id,\n             COUNT(*) AS n\n      FROM singer_in_concert\n      GROUP BY singer_id) AS RHS ON (LHS.singer_id = RHS.singer_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM singer_in_concert AS T1\nJOIN singer AS T2 ON T1.singer_id = T2.singer_id\nGROUP BY T2.singer_id", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0037_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.song_name AS song_name,\n          LHS.song_release_year AS song_release_year,\n          LHS.age AS age,\n          LHS.is_male AS is_male,\n          RHS.n AS n\n   FROM singer AS LHS\n   INNER JOIN\n     (SELECT singer_id,\n             COUNT(*) AS n\n      FROM singer_in_concert\n      GROUP BY singer_id) AS RHS ON (LHS.singer_id = RHS.singer_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM singer_in_concert AS T1\nJOIN singer AS T2 ON T1.singer_id = T2.singer_id\nGROUP BY T2.singer_id", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0002_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM singer)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM singer", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0003_dev", "sql1": "\nSELECT name,\n       country,\n       age\nFROM singer\nORDER BY name\n", "sql2": "SELECT name,\n       country,\n       age\nFROM singer\nORDER BY age DESC", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0011_dev", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM singer\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT country,\n       count(*)\nFROM singer\nGROUP BY country", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0010_dev", "sql1": "\nSELECT DISTINCT country\nFROM singer\nWHERE (age >= 20)\nORDER BY country\n", "sql2": "SELECT DISTINCT country\nFROM singer\nWHERE age > 20", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0024_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.stadium_id AS stadium_id,\n          LHS.location AS LOCATION,\n          LHS.name AS name,\n          LHS.capacity AS capacity,\n          LHS.highest AS highest,\n          LHS.lowest AS lowest,\n          LHS.average AS average,\n          RHS.n AS n\n   FROM stadium AS LHS\n   INNER JOIN\n     (SELECT stadium_id,\n             COUNT(*) AS n\n      FROM concert\n      GROUP BY stadium_id) AS RHS ON (LHS.stadium_id = RHS.stadium_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM concert AS T1\nJOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id\nGROUP BY T1.stadium_id", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0007_dev", "sql1": "\nSELECT song_name,\n       song_release_year\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM singer\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT song_name,\n       song_release_year\nFROM singer\nORDER BY age\nLIMIT 1", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0038_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.song_name AS song_name,\n          LHS.song_release_year AS song_release_year,\n          LHS.age AS age,\n          LHS.is_male AS is_male,\n          LHS.concert_id AS concert_id,\n          LHS.concert_name AS concert_name,\n          LHS.theme AS theme,\n          LHS.stadium_id AS stadium_id,\n          LHS.year AS YEAR\n   FROM\n     (SELECT LHS.singer_id AS singer_id,\n             LHS.name AS name,\n             LHS.country AS country,\n             LHS.song_name AS song_name,\n             LHS.song_release_year AS song_release_year,\n             LHS.age AS age,\n             LHS.is_male AS is_male,\n             LHS.concert_id AS concert_id,\n             RHS.concert_name AS concert_name,\n             RHS.theme AS theme,\n             RHS.stadium_id AS stadium_id,\n             RHS.year AS YEAR\n      FROM\n        (SELECT LHS.singer_id AS singer_id,\n                LHS.name AS name,\n                LHS.country AS country,\n                LHS.song_name AS song_name,\n                LHS.song_release_year AS song_release_year,\n                LHS.age AS age,\n                LHS.is_male AS is_male,\n                RHS.concert_id AS concert_id\n         FROM singer AS LHS\n         INNER JOIN singer_in_concert AS RHS ON (LHS.singer_id = RHS.singer_id)) AS LHS\n      INNER JOIN concert AS RHS ON (LHS.concert_id = RHS.concert_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM concert\n      WHERE (YEAR = 2014)) AS RHS ON (LHS.concert_id = RHS.concert_id\n                                      AND LHS.concert_name = RHS.concert_name\n                                      AND LHS.theme = RHS.theme\n                                      AND LHS.stadium_id = RHS.stadium_id\n                                      AND LHS.year = RHS.year))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM singer_in_concert AS T1\nJOIN singer AS T2 ON T1.singer_id = T2.singer_id\nJOIN concert AS T3 ON T1.concert_id = T3.concert_id\nWHERE T3.year = 2014", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0039_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.song_name AS song_name,\n          LHS.song_release_year AS song_release_year,\n          LHS.age AS age,\n          LHS.is_male AS is_male,\n          LHS.concert_id AS concert_id,\n          LHS.concert_name AS concert_name,\n          LHS.theme AS theme,\n          LHS.stadium_id AS stadium_id,\n          LHS.year AS YEAR\n   FROM\n     (SELECT LHS.singer_id AS singer_id,\n             LHS.name AS name,\n             LHS.country AS country,\n             LHS.song_name AS song_name,\n             LHS.song_release_year AS song_release_year,\n             LHS.age AS age,\n             LHS.is_male AS is_male,\n             LHS.concert_id AS concert_id,\n             RHS.concert_name AS concert_name,\n             RHS.theme AS theme,\n             RHS.stadium_id AS stadium_id,\n             RHS.year AS YEAR\n      FROM\n        (SELECT LHS.singer_id AS singer_id,\n                LHS.name AS name,\n                LHS.country AS country,\n                LHS.song_name AS song_name,\n                LHS.song_release_year AS song_release_year,\n                LHS.age AS age,\n                LHS.is_male AS is_male,\n                RHS.concert_id AS concert_id\n         FROM singer AS LHS\n         INNER JOIN singer_in_concert AS RHS ON (LHS.singer_id = RHS.singer_id)) AS LHS\n      INNER JOIN concert AS RHS ON (LHS.concert_id = RHS.concert_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM concert\n      WHERE (YEAR = 2014)) AS RHS ON (LHS.concert_id = RHS.concert_id\n                                      AND LHS.concert_name = RHS.concert_name\n                                      AND LHS.theme = RHS.theme\n                                      AND LHS.stadium_id = RHS.stadium_id\n                                      AND LHS.year = RHS.year))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM singer_in_concert AS T1\nJOIN singer AS T2 ON T1.singer_id = T2.singer_id\nJOIN concert AS T3 ON T1.concert_id = T3.concert_id\nWHERE T3.year = 2014", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0045_dev", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT stadium_id) AS n_distinct\n   FROM\n     (SELECT concert_id,\n             concert_name,\n             theme,\n             stadium_id,\n             YEAR,\n             stadium_id_other,\n             LOCATION,\n             name,\n             lowest,\n             average,\n             highest,\n             stadium_id AS capacity\n      FROM\n        (SELECT concert_id,\n                concert_name,\n                theme,\n                stadium_id,\n                YEAR,\n                stadium_id_other,\n                LOCATION,\n                name,\n                lowest,\n                average,\n                concert_id AS highest\n         FROM\n           (SELECT LHS.concert_id AS concert_id,\n                   LHS.concert_name AS concert_name,\n                   LHS.theme AS theme,\n                   LHS.stadium_id AS stadium_id,\n                   LHS.year AS YEAR,\n                   RHS.stadium_id AS stadium_id_other,\n                   RHS.location AS LOCATION,\n                   RHS.name AS name,\n                   RHS.lowest AS lowest,\n                   RHS.average AS average\n            FROM concert AS LHS\n            INNER JOIN stadium AS RHS ON (LHS.concert_id = RHS.highest\n                                             AND LHS.stadium_id = RHS.capacity)))))\nORDER BY count___\n", "sql2": "select count(*)\nfrom concert\nwhere stadium_id =\n    (select stadium_id\n     from stadium\n     order by capacity desc\n     limit 1)", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0044_dev", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT stadium_id) AS n_distinct\n   FROM\n     (SELECT concert_id,\n             concert_name,\n             theme,\n             stadium_id,\n             YEAR,\n             stadium_id_other,\n             LOCATION,\n             name,\n             lowest,\n             average,\n             highest,\n             stadium_id AS capacity\n      FROM\n        (SELECT concert_id,\n                concert_name,\n                theme,\n                stadium_id,\n                YEAR,\n                stadium_id_other,\n                LOCATION,\n                name,\n                lowest,\n                average,\n                concert_id AS highest\n         FROM\n           (SELECT LHS.concert_id AS concert_id,\n                   LHS.concert_name AS concert_name,\n                   LHS.theme AS theme,\n                   LHS.stadium_id AS stadium_id,\n                   LHS.year AS YEAR,\n                   RHS.stadium_id AS stadium_id_other,\n                   RHS.location AS LOCATION,\n                   RHS.name AS name,\n                   RHS.lowest AS lowest,\n                   RHS.average AS average\n            FROM concert AS LHS\n            INNER JOIN stadium AS RHS ON (LHS.concert_id = RHS.highest\n                                             AND LHS.stadium_id = RHS.capacity)))))\nORDER BY count___\n", "sql2": "select count(*)\nfrom concert\nwhere stadium_id =\n    (select stadium_id\n     from stadium\n     order by capacity desc\n     limit 1)", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0032_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM concert\n           WHERE (YEAR <= 2014)) AS RHS\n        WHERE (LHS.stadium_id = RHS.stadium_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nEXCEPT\nSELECT T2.name\nFROM concert AS T1\nJOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id\nWHERE T1.year = 2014", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0033_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM concert\n           WHERE (YEAR <= 2014)) AS RHS\n        WHERE (LHS.stadium_id = RHS.stadium_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nEXCEPT\nSELECT T2.name\nFROM concert AS T1\nJOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id\nWHERE T1.year = 2014", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0001_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM singer)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM singer", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0035_dev", "sql1": "\nSELECT concert_name,\n       theme,\n       n AS count___\nFROM\n  (SELECT LHS.concert_id AS concert_id,\n          LHS.n AS n,\n          RHS.concert_name AS concert_name,\n          RHS.theme AS theme,\n          RHS.stadium_id AS stadium_id,\n          RHS.year AS YEAR\n   FROM\n     (SELECT concert_id,\n             COUNT(*) AS n\n      FROM singer_in_concert\n      GROUP BY concert_id) AS LHS\n   LEFT JOIN concert AS RHS ON (LHS.concert_id = RHS.concert_id))\nORDER BY concert_name\n", "sql2": "select t2.concert_name,\n       t2.theme,\n       count(*)\nfrom singer_in_concert as t1\njoin concert as t2 on t1.concert_id = t2.concert_id\ngroup by t2.concert_id", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0034_dev", "sql1": "\nSELECT concert_name,\n       theme,\n       n AS count___\nFROM\n  (SELECT LHS.concert_id AS concert_id,\n          LHS.n AS n,\n          RHS.concert_name AS concert_name,\n          RHS.theme AS theme,\n          RHS.stadium_id AS stadium_id,\n          RHS.year AS YEAR\n   FROM\n     (SELECT concert_id,\n             COUNT(*) AS n\n      FROM singer_in_concert\n      GROUP BY concert_id) AS LHS\n   LEFT JOIN concert AS RHS ON (LHS.concert_id = RHS.concert_id))\nORDER BY concert_name\n", "sql2": "SELECT T2.concert_name,\n       T2.theme,\n       count(*)\nFROM singer_in_concert AS T1\nJOIN concert AS T2 ON T1.concert_id = T2.concert_id\nGROUP BY T2.concert_id", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0028_dev", "sql1": "\nSELECT DISTINCT YEAR\nFROM\n  (SELECT LHS.concert_id AS concert_id,\n          LHS.concert_name AS concert_name,\n          LHS.theme AS theme,\n          LHS.stadium_id AS stadium_id,\n          LHS.year AS YEAR,\n          RHS.concert_id AS concert_id_other,\n          RHS.concert_name AS concert_name_other,\n          RHS.theme AS theme_other,\n          RHS.year AS year_other,\n          RHS.n AS n\n   FROM concert AS LHS\n   INNER JOIN\n     (SELECT concert_id,\n             concert_name,\n             theme,\n             stadium_id,\n             YEAR,\n             COUNT(*) OVER () AS n\n      FROM concert) AS RHS ON (LHS.concert_id = RHS.stadium_id))\nORDER BY YEAR\n", "sql2": "SELECT YEAR\nFROM concert\nGROUP BY YEAR\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0029_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM concert AS RHS\n        WHERE (LHS.stadium_id = RHS.stadium_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nWHERE stadium_id NOT IN\n    (SELECT stadium_id\n     FROM concert)", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0022_dev", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT concert_id,\n          concert_name,\n          theme,\n          stadium_id,\n          YEAR,\n          COUNT(*) OVER () AS n\n   FROM concert)\nWHERE (n != 2014\n       OR YEAR <= 2015)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM concert\nWHERE YEAR = 2014\n  OR YEAR = 2015", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/concert_singer/0023_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.stadium_id AS stadium_id,\n          LHS.location AS LOCATION,\n          LHS.name AS name,\n          LHS.capacity AS capacity,\n          LHS.highest AS highest,\n          LHS.lowest AS lowest,\n          LHS.average AS average,\n          RHS.n AS n\n   FROM stadium AS LHS\n   INNER JOIN\n     (SELECT stadium_id,\n             COUNT(*) AS n\n      FROM concert\n      GROUP BY stadium_id) AS RHS ON (LHS.stadium_id = RHS.stadium_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM concert AS T1\nJOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id\nGROUP BY T1.stadium_id", "schema": "db2csv/concert_singer/tables/concert_singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0031_dev", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`friend_id` AS `friend_id`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`grade` AS `grade`,\n             `LHS`.`student_id` AS `student_id`,\n             `LHS`.`friend_id` AS `friend_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`grade` AS `grade`,\n                `RHS`.`student_id` AS `student_id`,\n                `RHS`.`friend_id` AS `friend_id`\n         FROM `highschooler` AS `LHS`\n         CROSS JOIN `friend` AS `RHS`) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `highschooler`\n         WHERE (`name` = 'Kyle')) AS `RHS` ON (`LHS`.`id` = `RHS`.`id`\n                                               AND `LHS`.`name` = `RHS`.`name`\n                                               AND `LHS`.`grade` = `RHS`.`grade`)) AS `LHS`\n   INNER JOIN\n     (SELECT `id`,\n             `name`,\n             `grade`,\n             COUNT(DISTINCT `name`) OVER () AS `n_distinct`\n      FROM `highschooler`\n      WHERE (`name` = 'Kyle')) AS RHS ON (LHS.id = RHS.id\n                                          AND LHS.name = RHS.name\n                                          AND LHS.grade = RHS.grade))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nWHERE T2.name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0030_dev", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`friend_id` AS `friend_id`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`grade` AS `grade_other`,\n          `RHS`.`student_id` AS `student_id_other`\n   FROM\n     (SELECT `id`,\n             `name`,\n             `grade`,\n             `student_id`,\n             `id` AS `friend_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`grade` AS `grade`,\n                `RHS`.`student_id` AS `student_id`\n         FROM `highschooler` AS `LHS`\n         INNER JOIN `friend` AS `RHS` ON (`LHS`.`id` = `RHS`.`friend_id`))) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `id`,\n                `name`,\n                `grade`,\n                `student_id`,\n                `id` AS `friend_id`\n         FROM\n           (SELECT `LHS`.`id` AS `id`,\n                   `LHS`.`name` AS `name`,\n                   `LHS`.`grade` AS `grade`,\n                   `RHS`.`student_id` AS `student_id`\n            FROM `highschooler` AS `LHS`\n            INNER JOIN `friend` AS `RHS` ON (`LHS`.`id` = `RHS`.`friend_id`)))\n      WHERE (`name` = 'Kyle')) AS RHS ON (LHS.student_id = RHS.friend_id))\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nJOIN Highschooler AS T3 ON T1.friend_id = T3.id\nWHERE T2.name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0005_dev", "sql1": "\nSELECT grade\nFROM highschooler\nORDER BY grade\n", "sql2": "SELECT grade\nFROM Highschooler", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0004_dev", "sql1": "\nSELECT name,\n       grade\nFROM highschooler\nORDER BY name\n", "sql2": "SELECT name,\n       grade\nFROM Highschooler", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0018_dev", "sql1": "\nSELECT grade\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT id,\n                name,\n                grade,\n                COUNT(*) OVER () AS n\n         FROM highschooler)\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT grade\nFROM Highschooler\nGROUP BY grade\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0019_dev", "sql1": "\nSELECT DISTINCT grade\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   LEFT JOIN\n     (SELECT grade,\n             COUNT(*) AS n\n      FROM highschooler\n      GROUP BY grade) AS RHS ON (LHS.grade = RHS.grade))\nORDER BY grade\n", "sql2": "SELECT grade\nFROM Highschooler\nGROUP BY grade\nHAVING count(*) >= 4", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0051_dev", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `liked_id`,\n          `name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `id`,\n             `name`,\n             `grade`,\n             `liked_id`,\n             `id` AS `student_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`grade` AS `grade`,\n                `RHS`.`liked_id` AS `liked_id`\n         FROM `highschooler` AS `LHS`\n         INNER JOIN `likes` AS `RHS` ON (`LHS`.`id` = `RHS`.`student_id`)))\n   GROUP BY `liked_id`,\n            `name`)\nWHERE (`name` != 'Kyle')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nWHERE T2.name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0050_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT id,\n          name,\n          grade,\n          n,\n          id AS student_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.grade AS grade,\n             RHS.n AS n\n      FROM highschooler AS LHS\n      INNER JOIN\n        (SELECT student_id,\n                COUNT(*) AS n\n         FROM friend\n         GROUP BY student_id) AS RHS ON (LHS.id = RHS.student_id)))\nWHERE (n >= 2)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nWHERE T2.grade > 5\nGROUP BY T1.student_id\nHAVING count(*) >= 2", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0027_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT student_id,\n                COUNT(*) AS n\n         FROM friend\n         GROUP BY student_id)\n      WHERE (n >= 3)) AS RHS ON (LHS.id = RHS.student_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nGROUP BY T1.student_id\nHAVING count(*) >= 3", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0012_dev", "sql1": "\nSELECT `id`\nFROM `highschooler`\nWHERE (`name` = 'Kyle')\nORDER BY id\n", "sql2": "SELECT ID\nFROM Highschooler\nWHERE name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0013_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM highschooler\n      WHERE (grade > 9\n             AND grade != 10)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Highschooler\nWHERE grade = 9\n  OR grade = 10", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0021_dev", "sql1": "\nSELECT student_id,\n       n AS count___\nFROM\n  (SELECT student_id,\n          COUNT(*) AS n\n   FROM friend\n   GROUP BY student_id)\nORDER BY student_id\n", "sql2": "SELECT student_id,\n       count(*)\nFROM Friend\nGROUP BY student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0020_dev", "sql1": "\nSELECT DISTINCT grade\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   LEFT JOIN\n     (SELECT grade,\n             COUNT(*) AS n\n      FROM highschooler\n      GROUP BY grade) AS RHS ON (LHS.grade = RHS.grade))\nORDER BY grade\n", "sql2": "SELECT grade\nFROM Highschooler\nGROUP BY grade\nHAVING count(*) >= 4", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0015_dev", "sql1": "\nSELECT grade,\n       n AS count___\nFROM\n  (SELECT grade,\n          COUNT(*) AS n\n   FROM highschooler\n   GROUP BY grade)\nORDER BY grade\n", "sql2": "SELECT grade,\n       count(*)\nFROM Highschooler\nGROUP BY grade", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0014_dev", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM highschooler\n      WHERE (grade > 9\n             AND grade != 10)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Highschooler\nWHERE grade = 9\n  OR grade = 10", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0041_dev", "sql1": "\nSELECT student_id,\n       n AS count___\nFROM\n  (SELECT student_id,\n          COUNT(*) AS n\n   FROM likes\n   GROUP BY student_id)\nORDER BY student_id\n", "sql2": "SELECT student_id,\n       count(*)\nFROM Likes\nGROUP BY student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0040_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          LHS.student_id AS student_id,\n          LHS.friend_id AS friend_id,\n          RHS.student_id AS student_id_other\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.grade AS grade,\n             RHS.student_id AS student_id,\n             RHS.friend_id AS friend_id\n      FROM highschooler AS LHS\n      CROSS JOIN friend AS RHS) AS LHS\n   INNER JOIN likes AS RHS ON (LHS.id = RHS.liked_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT\nSELECT T2.name\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.liked_id = T2.id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0008_dev", "sql1": "\nSELECT `grade`\nFROM `highschooler`\nWHERE (`name` = 'Kyle')\nORDER BY grade\n", "sql2": "SELECT grade\nFROM Highschooler\nWHERE name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0009_dev", "sql1": "\nSELECT name\nFROM highschooler\nWHERE (grade = 10)\nORDER BY name\n", "sql2": "SELECT name\nFROM Highschooler\nWHERE grade = 10", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0036_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM highschooler AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT id,\n                  name,\n                  grade,\n                  friend_id,\n                  id AS student_id\n           FROM\n             (SELECT LHS.id AS id,\n                     LHS.name AS name,\n                     LHS.grade AS grade,\n                     RHS.friend_id AS friend_id\n              FROM highschooler AS LHS\n              INNER JOIN friend AS RHS ON (LHS.id = RHS.student_id))) AS RHS\n        WHERE (LHS.id = RHS.id\n               AND LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM Highschooler\nEXCEPT\nSELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0037_dev", "sql1": "\nSELECT DISTINCT liked_id AS student_id\nFROM likes\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM Friend INTERSECT\nSELECT liked_id\nFROM Likes", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM highschooler\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Highschooler", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0003_dev", "sql1": "\nSELECT name,\n       grade\nFROM highschooler\nORDER BY name\n", "sql2": "SELECT name,\n       grade\nFROM Highschooler", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0011_dev", "sql1": "\nSELECT `id`\nFROM `highschooler`\nWHERE (`name` = 'Kyle')\nORDER BY id\n", "sql2": "SELECT ID\nFROM Highschooler\nWHERE name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0010_dev", "sql1": "\nSELECT name\nFROM highschooler\nWHERE (grade = 10)\nORDER BY name\n", "sql2": "SELECT name\nFROM Highschooler\nWHERE grade = 10", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0052_dev", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `liked_id`,\n          `name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `id`,\n             `name`,\n             `grade`,\n             `liked_id`,\n             `id` AS `student_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`grade` AS `grade`,\n                `RHS`.`liked_id` AS `liked_id`\n         FROM `highschooler` AS `LHS`\n         INNER JOIN `likes` AS `RHS` ON (`LHS`.`id` = `RHS`.`student_id`)))\n   GROUP BY `liked_id`,\n            `name`)\nWHERE (`name` != 'Kyle')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nWHERE T2.name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0024_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             COUNT(*) AS n\n      FROM friend\n      GROUP BY student_id) AS RHS ON (LHS.id = RHS.student_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nGROUP BY T1.student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0006_dev", "sql1": "\nSELECT grade\nFROM highschooler\nORDER BY grade\n", "sql2": "SELECT grade\nFROM Highschooler", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0007_dev", "sql1": "\nSELECT `grade`\nFROM `highschooler`\nWHERE (`name` = 'Kyle')\nORDER BY grade\n", "sql2": "SELECT grade\nFROM Highschooler\nWHERE name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0038_dev", "sql1": "\nSELECT DISTINCT liked_id AS student_id\nFROM likes\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM Friend INTERSECT\nSELECT liked_id\nFROM Likes", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0039_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          LHS.student_id AS student_id,\n          LHS.friend_id AS friend_id,\n          RHS.student_id AS student_id_other\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.grade AS grade,\n             RHS.student_id AS student_id,\n             RHS.friend_id AS friend_id\n      FROM highschooler AS LHS\n      CROSS JOIN friend AS RHS) AS LHS\n   INNER JOIN likes AS RHS ON (LHS.id = RHS.liked_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT\nSELECT T2.name\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.liked_id = T2.id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0044_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             COUNT(*) AS n\n      FROM likes\n      GROUP BY student_id) AS RHS ON (LHS.id = RHS.student_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nGROUP BY T1.student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0032_dev", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`friend_id` AS `friend_id`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`grade` AS `grade`,\n             `LHS`.`student_id` AS `student_id`,\n             `LHS`.`friend_id` AS `friend_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`grade` AS `grade`,\n                `RHS`.`student_id` AS `student_id`,\n                `RHS`.`friend_id` AS `friend_id`\n         FROM `highschooler` AS `LHS`\n         CROSS JOIN `friend` AS `RHS`) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `highschooler`\n         WHERE (`name` = 'Kyle')) AS `RHS` ON (`LHS`.`id` = `RHS`.`id`\n                                               AND `LHS`.`name` = `RHS`.`name`\n                                               AND `LHS`.`grade` = `RHS`.`grade`)) AS `LHS`\n   INNER JOIN\n     (SELECT `id`,\n             `name`,\n             `grade`,\n             COUNT(DISTINCT `name`) OVER () AS `n_distinct`\n      FROM `highschooler`\n      WHERE (`name` = 'Kyle')) AS RHS ON (LHS.id = RHS.id\n                                          AND LHS.name = RHS.name\n                                          AND LHS.grade = RHS.grade))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nWHERE T2.name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM highschooler\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Highschooler", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0049_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT id,\n          name,\n          grade,\n          n,\n          id AS student_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.grade AS grade,\n             RHS.n AS n\n      FROM highschooler AS LHS\n      INNER JOIN\n        (SELECT student_id,\n                COUNT(*) AS n\n         FROM friend\n         GROUP BY student_id) AS RHS ON (LHS.id = RHS.student_id)))\nWHERE (n >= 2)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nWHERE T2.grade > 5\nGROUP BY T1.student_id\nHAVING count(*) >= 2", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0042_dev", "sql1": "\nSELECT student_id,\n       n AS count___\nFROM\n  (SELECT student_id,\n          COUNT(*) AS n\n   FROM likes\n   GROUP BY student_id)\nORDER BY student_id\n", "sql2": "SELECT student_id,\n       count(*)\nFROM Likes\nGROUP BY student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0043_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             COUNT(*) AS n\n      FROM likes\n      GROUP BY student_id) AS RHS ON (LHS.id = RHS.student_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nGROUP BY T1.student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0035_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM highschooler AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT id,\n                  name,\n                  grade,\n                  friend_id,\n                  id AS student_id\n           FROM\n             (SELECT LHS.id AS id,\n                     LHS.name AS name,\n                     LHS.grade AS grade,\n                     RHS.friend_id AS friend_id\n              FROM highschooler AS LHS\n              INNER JOIN friend AS RHS ON (LHS.id = RHS.student_id))) AS RHS\n        WHERE (LHS.id = RHS.id\n               AND LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM Highschooler\nEXCEPT\nSELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0016_dev", "sql1": "\nSELECT grade,\n       n AS count___\nFROM\n  (SELECT grade,\n          COUNT(*) AS n\n   FROM highschooler\n   GROUP BY grade)\nORDER BY grade\n", "sql2": "SELECT grade,\n       count(*)\nFROM Highschooler\nGROUP BY grade", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0017_dev", "sql1": "\nSELECT grade\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT id,\n                name,\n                grade,\n                COUNT(*) OVER () AS n\n         FROM highschooler)\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT grade\nFROM Highschooler\nGROUP BY grade\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0028_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT student_id,\n                COUNT(*) AS n\n         FROM friend\n         GROUP BY student_id)\n      WHERE (n >= 3)) AS RHS ON (LHS.id = RHS.student_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nGROUP BY T1.student_id\nHAVING count(*) >= 3", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0029_dev", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`friend_id` AS `friend_id`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`grade` AS `grade_other`,\n          `RHS`.`student_id` AS `student_id_other`\n   FROM\n     (SELECT `id`,\n             `name`,\n             `grade`,\n             `student_id`,\n             `id` AS `friend_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`grade` AS `grade`,\n                `RHS`.`student_id` AS `student_id`\n         FROM `highschooler` AS `LHS`\n         INNER JOIN `friend` AS `RHS` ON (`LHS`.`id` = `RHS`.`friend_id`))) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `id`,\n                `name`,\n                `grade`,\n                `student_id`,\n                `id` AS `friend_id`\n         FROM\n           (SELECT `LHS`.`id` AS `id`,\n                   `LHS`.`name` AS `name`,\n                   `LHS`.`grade` AS `grade`,\n                   `RHS`.`student_id` AS `student_id`\n            FROM `highschooler` AS `LHS`\n            INNER JOIN `friend` AS `RHS` ON (`LHS`.`id` = `RHS`.`friend_id`)))\n      WHERE (`name` = 'Kyle')) AS RHS ON (LHS.student_id = RHS.friend_id))\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nJOIN Highschooler AS T3 ON T1.friend_id = T3.id\nWHERE T2.name = 'Kyle'", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0022_dev", "sql1": "\nSELECT student_id,\n       n AS count___\nFROM\n  (SELECT student_id,\n          COUNT(*) AS n\n   FROM friend\n   GROUP BY student_id)\nORDER BY student_id\n", "sql2": "SELECT student_id,\n       count(*)\nFROM Friend\nGROUP BY student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/network_1/0023_dev", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.grade AS grade,\n          RHS.n AS n\n   FROM highschooler AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             COUNT(*) AS n\n      FROM friend\n      GROUP BY student_id) AS RHS ON (LHS.id = RHS.student_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.id\nGROUP BY T1.student_id", "schema": "db2csv/network_1/tables/network_1.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0031_dev", "sql1": "\nSELECT DISTINCT SUM(bonus) OVER () AS sum_bonus_\nFROM evaluation\nORDER BY sum_bonus_\n", "sql2": "SELECT sum(bonus)\nFROM evaluation", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0030_dev", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.shop_id AS shop_id,\n             LHS.employee_id AS employee_id,\n             LHS.start_from AS start_from,\n             LHS.is_full_time AS is_full_time,\n             RHS.name AS name,\n             RHS.location AS LOCATION,\n             RHS.district AS district,\n             RHS.number_products AS number_products,\n             RHS.manager_name AS manager_name\n      FROM hiring AS LHS\n      INNER JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id))\n   GROUP BY name)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       t2.name\nFROM hiring AS t1\nJOIN shop AS t2 ON t1.shop_id = t2.shop_id\nGROUP BY t2.name", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0005_dev", "sql1": "\nSELECT n AS count___,\n       city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM employee\n   GROUP BY city)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       city\nFROM employee\nGROUP BY city", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0004_dev", "sql1": "\nSELECT name\nFROM employee\nORDER BY name\n", "sql2": "SELECT name\nFROM employee\nORDER BY age", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0018_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT shop_id,\n                name,\n                LOCATION,\n                district,\n                number_products,\n                manager_name,\n                AVG(number_products) OVER () AS meannumber_products\n         FROM shop)\n      ORDER BY number_products DESC)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM shop\nWHERE number_products >\n    (SELECT avg(number_products)\n     FROM shop)", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0019_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.n AS n,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          RHS.employee_id AS employee_id_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT LHS.employee_id AS employee_id,\n             LHS.n AS n,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.city AS city\n      FROM\n        (SELECT employee_id,\n                COUNT(*) AS n\n         FROM evaluation\n         GROUP BY employee_id) AS LHS\n      INNER JOIN employee AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS\n   CROSS JOIN\n     (SELECT employee_id,\n             COUNT(*) AS n\n      FROM evaluation\n      GROUP BY employee_id) AS RHS)\nWHERE (n > n_other)\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM employee AS t1\nJOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID\nGROUP BY t2.Employee_ID\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0026_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.shop_id AS shop_id,\n          LHS.name AS name,\n          LHS.location AS LOCATION,\n          LHS.district AS district,\n          LHS.number_products AS number_products,\n          LHS.manager_name AS manager_name,\n          RHS.employee_id AS employee_id,\n          RHS.start_from AS start_from,\n          RHS.is_full_time AS is_full_time,\n          RHS.shop_id_other AS shop_id_other,\n          RHS.n AS n\n   FROM shop AS LHS\n   INNER JOIN\n     (SELECT shop_id,\n             employee_id,\n             start_from,\n             is_full_time,\n             shop_id_other,\n             shop_id AS n\n      FROM\n        (SELECT LHS.shop_id AS shop_id,\n                LHS.employee_id AS employee_id,\n                LHS.start_from AS start_from,\n                LHS.is_full_time AS is_full_time,\n                RHS.shop_id AS shop_id_other\n         FROM hiring AS LHS\n         INNER JOIN\n           (SELECT shop_id,\n                   COUNT(*) AS n\n            FROM shop\n            GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.n))) AS RHS ON (LHS.shop_id = RHS.shop_id))\nORDER BY name\n", "sql2": "SELECT t2.name\nFROM hiring AS t1\nJOIN shop AS t2 ON t1.shop_id = t2.shop_id\nGROUP BY t1.shop_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0027_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM shop AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM hiring AS RHS\n        WHERE (LHS.shop_id = RHS.shop_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM shop\nWHERE shop_id NOT IN\n    (SELECT shop_id\n     FROM hiring)", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0012_dev", "sql1": "\nSELECT manager_name,\n       district\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM shop\n      ORDER BY number_products DESC)\n   LIMIT 1)\n", "sql2": "SELECT manager_name,\n       district\nFROM shop\nORDER BY number_products DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0013_dev", "sql1": "\nSELECT DISTINCT minnumber_products AS min_number_products_,\n                MAX(number_products) OVER () AS max_number_products_\nFROM\n  (SELECT shop_id,\n          name,\n          LOCATION,\n          district,\n          number_products,\n          manager_name,\n          MIN(number_products) OVER () AS minnumber_products\n   FROM shop)\nORDER BY min_number_products_\n", "sql2": "SELECT min(Number_products),\n       max(Number_products)\nFROM shop", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0021_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.employee_id AS employee_id,\n                LHS.name AS name,\n                LHS.age AS age,\n                LHS.city AS city,\n                RHS.year_awarded AS year_awarded,\n                RHS.bonus AS bonus\n         FROM employee AS LHS\n         INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id))\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT t1.name\nFROM employee AS t1\nJOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID\nORDER BY t2.bonus DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0020_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.n AS n,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          RHS.employee_id AS employee_id_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT LHS.employee_id AS employee_id,\n             LHS.n AS n,\n             RHS.name AS name,\n             RHS.age AS age,\n             RHS.city AS city\n      FROM\n        (SELECT employee_id,\n                COUNT(*) AS n\n         FROM evaluation\n         GROUP BY employee_id) AS LHS\n      INNER JOIN employee AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS\n   CROSS JOIN\n     (SELECT employee_id,\n             COUNT(*) AS n\n      FROM evaluation\n      GROUP BY employee_id) AS RHS)\nWHERE (n > n_other)\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM employee AS t1\nJOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID\nGROUP BY t2.Employee_ID\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0015_dev", "sql1": "\nSELECT name,\n       LOCATION,\n       district\nFROM shop\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION,\n       district\nFROM shop\nORDER BY number_products DESC", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0014_dev", "sql1": "\nSELECT DISTINCT minnumber_products AS min_number_products_,\n                MAX(number_products) OVER () AS max_number_products_\nFROM\n  (SELECT shop_id,\n          name,\n          LOCATION,\n          district,\n          number_products,\n          manager_name,\n          MIN(number_products) OVER () AS minnumber_products\n   FROM shop)\nORDER BY min_number_products_\n", "sql2": "SELECT min(Number_products),\n       max(Number_products)\nFROM shop", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0009_dev", "sql1": "\nSELECT n AS count___,\n       LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM shop\n   GROUP BY LOCATION)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       LOCATION\nFROM shop\nGROUP BY LOCATION", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0037_dev", "sql1": "\nSELECT n AS count_distinct_location_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM shop)\nORDER BY count_distinct_location_\n", "sql2": "SELECT count(DISTINCT LOCATION)\nFROM shop", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employee\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employee", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0003_dev", "sql1": "\nSELECT name\nFROM employee\nORDER BY name\n", "sql2": "SELECT name\nFROM employee\nORDER BY age", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0011_dev", "sql1": "\nSELECT manager_name,\n       district\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM shop\n      ORDER BY number_products DESC)\n   LIMIT 1)\n", "sql2": "SELECT manager_name,\n       district\nFROM shop\nORDER BY number_products DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0010_dev", "sql1": "\nSELECT n AS count___,\n       LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM shop\n   GROUP BY LOCATION)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       LOCATION\nFROM shop\nGROUP BY LOCATION", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0025_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.shop_id AS shop_id,\n          LHS.name AS name,\n          LHS.location AS LOCATION,\n          LHS.district AS district,\n          LHS.number_products AS number_products,\n          LHS.manager_name AS manager_name,\n          RHS.employee_id AS employee_id,\n          RHS.start_from AS start_from,\n          RHS.is_full_time AS is_full_time,\n          RHS.shop_id_other AS shop_id_other,\n          RHS.n AS n\n   FROM shop AS LHS\n   INNER JOIN\n     (SELECT shop_id,\n             employee_id,\n             start_from,\n             is_full_time,\n             shop_id_other,\n             shop_id AS n\n      FROM\n        (SELECT LHS.shop_id AS shop_id,\n                LHS.employee_id AS employee_id,\n                LHS.start_from AS start_from,\n                LHS.is_full_time AS is_full_time,\n                RHS.shop_id AS shop_id_other\n         FROM hiring AS LHS\n         INNER JOIN\n           (SELECT shop_id,\n                   COUNT(*) AS n\n            FROM shop\n            GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.n))) AS RHS ON (LHS.shop_id = RHS.shop_id))\nORDER BY name\n", "sql2": "SELECT t2.name\nFROM hiring AS t1\nJOIN shop AS t2 ON t1.shop_id = t2.shop_id\nGROUP BY t1.shop_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0024_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM employee AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM evaluation AS RHS\n        WHERE (LHS.employee_id = RHS.employee_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM employee\nWHERE Employee_ID NOT IN\n    (SELECT Employee_ID\n     FROM evaluation)", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0006_dev", "sql1": "\nSELECT n AS count___,\n       city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM employee\n   GROUP BY city)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       city\nFROM employee\nGROUP BY city", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0038_dev", "sql1": "\nSELECT n AS count_distinct_location_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM shop)\nORDER BY count_distinct_location_\n", "sql2": "SELECT count(DISTINCT LOCATION)\nFROM shop", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0032_dev", "sql1": "\nSELECT DISTINCT SUM(bonus) OVER () AS sum_bonus_\nFROM evaluation\nORDER BY sum_bonus_\n", "sql2": "SELECT sum(bonus)\nFROM evaluation", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0033_dev", "sql1": "\nSELECT shop_id,\n       employee_id,\n       start_from,\n       is_full_time\nFROM hiring\nORDER BY shop_id\n", "sql2": "SELECT *\nFROM hiring", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employee\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employee", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0034_dev", "sql1": "\nSELECT shop_id,\n       employee_id,\n       start_from,\n       is_full_time\nFROM hiring\nORDER BY shop_id\n", "sql2": "SELECT *\nFROM hiring", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0016_dev", "sql1": "\nSELECT name,\n       LOCATION,\n       district\nFROM shop\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION,\n       district\nFROM shop\nORDER BY number_products DESC", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0017_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT shop_id,\n                name,\n                LOCATION,\n                district,\n                number_products,\n                manager_name,\n                AVG(number_products) OVER () AS meannumber_products\n         FROM shop)\n      ORDER BY number_products DESC)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM shop\nWHERE number_products >\n    (SELECT avg(number_products)\n     FROM shop)", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0028_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM shop AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM hiring AS RHS\n        WHERE (LHS.shop_id = RHS.shop_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM shop\nWHERE shop_id NOT IN\n    (SELECT shop_id\n     FROM hiring)", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0029_dev", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.shop_id AS shop_id,\n             LHS.employee_id AS employee_id,\n             LHS.start_from AS start_from,\n             LHS.is_full_time AS is_full_time,\n             RHS.name AS name,\n             RHS.location AS LOCATION,\n             RHS.district AS district,\n             RHS.number_products AS number_products,\n             RHS.manager_name AS manager_name\n      FROM hiring AS LHS\n      INNER JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id))\n   GROUP BY name)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       t2.name\nFROM hiring AS t1\nJOIN shop AS t2 ON t1.shop_id = t2.shop_id\nGROUP BY t2.name", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0022_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.employee_id AS employee_id,\n                LHS.name AS name,\n                LHS.age AS age,\n                LHS.city AS city,\n                RHS.year_awarded AS year_awarded,\n                RHS.bonus AS bonus\n         FROM employee AS LHS\n         INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id))\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT t1.name\nFROM employee AS t1\nJOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID\nORDER BY t2.bonus DESC\nLIMIT 1", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/employee_hire_evaluation/0023_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM employee AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM evaluation AS RHS\n        WHERE (LHS.employee_id = RHS.employee_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM employee\nWHERE Employee_ID NOT IN\n    (SELECT Employee_ID\n     FROM evaluation)", "schema": "db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0005_dev", "sql1": "\nSELECT DISTINCT AVG(injured) OVER () AS avg_injured_\nFROM death\nORDER BY avg_injured_\n", "sql2": "SELECT avg(injured)\nFROM death", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0012_dev", "sql1": "\nSELECT n_distinct AS count_distinct_result_\nFROM\n  (SELECT COUNT(DISTINCT RESULT) AS n_distinct\n   FROM battle)\nORDER BY count_distinct_result_\n", "sql2": "SELECT count(DISTINCT RESULT)\nFROM battle", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0008_dev", "sql1": "\nSELECT `lost_in_battle` AS `id`,\n       `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`lost_in_battle` AS `lost_in_battle`,\n          `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`tonnage` AS `tonnage`,\n          `LHS`.`ship_type` AS `ship_type`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`disposition_of_ship` AS `disposition_of_ship`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`bulgarian_commander` AS `bulgarian_commander`,\n          `RHS`.`latin_commander` AS `latin_commander`,\n          `RHS`.`result` AS `result`\n   FROM\n     (SELECT *\n      FROM `ship`\n      WHERE (`ship_type` = 'Brig')) AS LHS\n   INNER JOIN battle AS RHS ON (LHS.lost_in_battle = RHS.id))\nORDER BY id\n", "sql2": "SELECT DISTINCT T1.id,\n                T1.name\nFROM battle AS T1\nJOIN ship AS T2 ON T1.id = T2.lost_in_battle\nWHERE T2.ship_type = 'Brig'", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0002_dev", "sql1": "\nSELECT name,\n       tonnage\nFROM ship\nORDER BY name\n", "sql2": "SELECT name,\n       tonnage\nFROM ship\nORDER BY name DESC", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0003_dev", "sql1": "\nSELECT name, date\nFROM battle\nORDER BY name\n", "sql2": "SELECT name , date\nFROM battle", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0011_dev", "sql1": "\nSELECT `name`\nFROM `battle`\nWHERE (`bulgarian_commander` = 'Kaloyan'\n       AND `latin_commander` = 'Baldwin I')\nORDER BY name\n", "sql2": "SELECT name\nFROM battle\nWHERE bulgarian_commander = 'Kaloyan'\n  AND latin_commander = 'Baldwin I'", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0006_dev", "sql1": "\nSELECT `killed`,\n       `injured`\nFROM\n  (SELECT `LHS`.`caused_by_ship_id` AS `caused_by_ship_id`,\n          `LHS`.`id` AS `id`,\n          `LHS`.`note` AS `note`,\n          `LHS`.`killed` AS `killed`,\n          `LHS`.`injured` AS `injured`,\n          `RHS`.`lost_in_battle` AS `lost_in_battle`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`tonnage` AS `tonnage`,\n          `RHS`.`ship_type` AS `ship_type`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`disposition_of_ship` AS `disposition_of_ship`\n   FROM `death` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `ship`\n      WHERE (`tonnage` = 't')) AS RHS ON (LHS.caused_by_ship_id = RHS.id))\nORDER BY killed\n", "sql2": "SELECT T1.killed,\n       T1.injured\nFROM death AS T1\nJOIN ship AS t2 ON T1.caused_by_ship_id = T2.id\nWHERE T2.tonnage = 't'", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0007_dev", "sql1": "\nSELECT `name`,\n       `result`\nFROM `battle`\nWHERE (`bulgarian_commander` != 'Boril')\nORDER BY name\n", "sql2": "SELECT name,\n       RESULT\nFROM battle\nWHERE bulgarian_commander != 'Boril'", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/battle_death/0001_dev", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `ship`\n      WHERE (`disposition_of_ship` = 'Captured')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ship\nWHERE disposition_of_ship = 'Captured'", "schema": "db2csv/battle_death/tables/battle_death.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0005_dev", "sql1": "\nSELECT birth_year,\n       citizenship\nFROM singer\nORDER BY birth_year\n", "sql2": "SELECT Birth_Year,\n       Citizenship\nFROM singer", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0004_dev", "sql1": "\nSELECT name\nFROM singer\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nORDER BY Net_Worth_Millions ASC", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0018_dev", "sql1": "\nSELECT citizenship,\n       maxnet_worth_millions AS max_net_worth_millions_\nFROM\n  (SELECT citizenship,\n          MAX(net_worth_millions) AS maxnet_worth_millions\n   FROM singer\n   GROUP BY citizenship)\nORDER BY citizenship\n", "sql2": "SELECT Citizenship,\n       max(Net_Worth_Millions)\nFROM singer\nGROUP BY Citizenship", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0019_dev", "sql1": "\nSELECT title,\n       name\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.birth_year AS birth_year,\n          LHS.net_worth_millions AS net_worth_millions,\n          LHS.citizenship AS citizenship,\n          RHS.song_id AS song_id,\n          RHS.title AS title,\n          RHS.sales AS sales,\n          RHS.highest_position AS highest_position\n   FROM singer AS LHS\n   INNER JOIN song AS RHS ON (LHS.singer_id = RHS.singer_id))\nORDER BY title\n", "sql2": "SELECT T2.Title,\n       T1.Name\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0026_dev", "sql1": "\nSELECT name,\n       sumsales AS sum_t2_sales_\nFROM\n  (SELECT name,\n          SUM(sales) AS sumsales\n   FROM\n     (SELECT LHS.song_id AS song_id,\n             LHS.title AS title,\n             LHS.singer_id AS singer_id,\n             LHS.sales AS sales,\n             LHS.highest_position AS highest_position,\n             RHS.name AS name,\n             RHS.birth_year AS birth_year,\n             RHS.net_worth_millions AS net_worth_millions,\n             RHS.citizenship AS citizenship\n      FROM song AS LHS\n      INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))\n   GROUP BY name)\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       sum(T2.Sales)\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nGROUP BY T1.Name", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0027_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM singer AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM song AS RHS\n        WHERE (LHS.singer_id = RHS.singer_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nWHERE Singer_ID NOT IN\n    (SELECT Singer_ID\n     FROM song)", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0012_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM singer\n      ORDER BY net_worth_millions DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM singer\nORDER BY Net_Worth_Millions DESC\nLIMIT 1", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0013_dev", "sql1": "\nSELECT citizenship,\n       n AS count___\nFROM\n  (SELECT citizenship,\n          COUNT(*) AS n\n   FROM singer\n   GROUP BY citizenship)\nORDER BY citizenship\n", "sql2": "SELECT Citizenship,\n       COUNT(*)\nFROM singer\nGROUP BY Citizenship", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0021_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.song_id AS song_id,\n          LHS.title AS title,\n          LHS.singer_id AS singer_id,\n          LHS.sales AS sales,\n          LHS.highest_position AS highest_position,\n          RHS.name AS name,\n          RHS.birth_year AS birth_year,\n          RHS.net_worth_millions AS net_worth_millions,\n          RHS.citizenship AS citizenship\n   FROM song AS LHS\n   LEFT JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))\nWHERE (sales >= 300000.0)\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.Name\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nWHERE T2.Sales > 300000", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0020_dev", "sql1": "\nSELECT title,\n       name\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.birth_year AS birth_year,\n          LHS.net_worth_millions AS net_worth_millions,\n          LHS.citizenship AS citizenship,\n          RHS.song_id AS song_id,\n          RHS.title AS title,\n          RHS.sales AS sales,\n          RHS.highest_position AS highest_position\n   FROM singer AS LHS\n   INNER JOIN song AS RHS ON (LHS.singer_id = RHS.singer_id))\nORDER BY title\n", "sql2": "SELECT T2.Title,\n       T1.Name\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0015_dev", "sql1": "\nSELECT DISTINCT citizenship\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.birth_year AS birth_year,\n          LHS.net_worth_millions AS net_worth_millions,\n          LHS.citizenship AS citizenship,\n          LHS.n AS n,\n          RHS.name AS name_other,\n          RHS.birth_year AS birth_year_other,\n          RHS.net_worth_millions AS net_worth_millions_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT singer_id,\n             name,\n             birth_year,\n             net_worth_millions,\n             citizenship,\n             COUNT(*) OVER () AS n\n      FROM singer) AS LHS\n   INNER JOIN\n     (SELECT singer_id,\n             name,\n             birth_year,\n             net_worth_millions,\n             citizenship,\n             COUNT(*) OVER () AS n\n      FROM singer) AS RHS ON (LHS.n = RHS.singer_id\n                                 AND LHS.citizenship = RHS.citizenship))\nORDER BY citizenship\n", "sql2": "SELECT Citizenship\nFROM singer\nGROUP BY Citizenship\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0014_dev", "sql1": "\nSELECT citizenship,\n       n AS count___\nFROM\n  (SELECT citizenship,\n          COUNT(*) AS n\n   FROM singer\n   GROUP BY citizenship)\nORDER BY citizenship\n", "sql2": "SELECT Citizenship,\n       COUNT(*)\nFROM singer\nGROUP BY Citizenship", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0008_dev", "sql1": "\nSELECT `name`\nFROM `singer`\nWHERE (`citizenship` != 'France')\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nWHERE Citizenship != 'France'", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0009_dev", "sql1": "\nSELECT name\nFROM singer\nWHERE (birth_year >= 1948.0\n       AND birth_year <= 1949.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nWHERE Birth_Year = 1948\n  OR Birth_Year = 1949", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0002_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM singer\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM singer", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0003_dev", "sql1": "\nSELECT name\nFROM singer\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nORDER BY Net_Worth_Millions ASC", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0011_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM singer\n      ORDER BY net_worth_millions DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM singer\nORDER BY Net_Worth_Millions DESC\nLIMIT 1", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0010_dev", "sql1": "\nSELECT name\nFROM singer\nWHERE (birth_year >= 1948.0\n       AND birth_year <= 1949.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nWHERE Birth_Year = 1948\n  OR Birth_Year = 1949", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0025_dev", "sql1": "\nSELECT name,\n       sumsales AS sum_t2_sales_\nFROM\n  (SELECT name,\n          SUM(sales) AS sumsales\n   FROM\n     (SELECT LHS.song_id AS song_id,\n             LHS.title AS title,\n             LHS.singer_id AS singer_id,\n             LHS.sales AS sales,\n             LHS.highest_position AS highest_position,\n             RHS.name AS name,\n             RHS.birth_year AS birth_year,\n             RHS.net_worth_millions AS net_worth_millions,\n             RHS.citizenship AS citizenship\n      FROM song AS LHS\n      INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))\n   GROUP BY name)\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       sum(T2.Sales)\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nGROUP BY T1.Name", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0024_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.singer_id AS singer_id,\n             LHS.name AS name,\n             LHS.birth_year AS birth_year,\n             LHS.net_worth_millions AS net_worth_millions,\n             LHS.citizenship AS citizenship,\n             RHS.song_id AS song_id,\n             RHS.title AS title,\n             RHS.sales AS sales,\n             RHS.highest_position AS highest_position\n      FROM singer AS LHS\n      INNER JOIN song AS RHS ON (LHS.singer_id = RHS.singer_id))\n   GROUP BY name)\nWHERE (n != 1)\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nGROUP BY T1.Name\nHAVING COUNT(*) > 1", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0006_dev", "sql1": "\nSELECT birth_year,\n       citizenship\nFROM singer\nORDER BY birth_year\n", "sql2": "SELECT Birth_Year,\n       Citizenship\nFROM singer", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0007_dev", "sql1": "\nSELECT `name`\nFROM `singer`\nWHERE (`citizenship` != 'France')\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nWHERE Citizenship != 'France'", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM singer\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM singer", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0016_dev", "sql1": "\nSELECT DISTINCT citizenship\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.birth_year AS birth_year,\n          LHS.net_worth_millions AS net_worth_millions,\n          LHS.citizenship AS citizenship,\n          LHS.n AS n,\n          RHS.name AS name_other,\n          RHS.birth_year AS birth_year_other,\n          RHS.net_worth_millions AS net_worth_millions_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT singer_id,\n             name,\n             birth_year,\n             net_worth_millions,\n             citizenship,\n             COUNT(*) OVER () AS n\n      FROM singer) AS LHS\n   INNER JOIN\n     (SELECT singer_id,\n             name,\n             birth_year,\n             net_worth_millions,\n             citizenship,\n             COUNT(*) OVER () AS n\n      FROM singer) AS RHS ON (LHS.n = RHS.singer_id\n                                 AND LHS.citizenship = RHS.citizenship))\nORDER BY citizenship\n", "sql2": "select citizenship\nfrom singer\ngroup by citizenship\norder by count(*) desc\nlimit 1", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0017_dev", "sql1": "\nSELECT citizenship,\n       maxnet_worth_millions AS max_net_worth_millions_\nFROM\n  (SELECT citizenship,\n          MAX(net_worth_millions) AS maxnet_worth_millions\n   FROM singer\n   GROUP BY citizenship)\nORDER BY citizenship\n", "sql2": "SELECT Citizenship,\n       max(Net_Worth_Millions)\nFROM singer\nGROUP BY Citizenship", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0028_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM singer AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM song AS RHS\n        WHERE (LHS.singer_id = RHS.singer_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM singer\nWHERE Singer_ID NOT IN\n    (SELECT Singer_ID\n     FROM song)", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0029_dev", "sql1": "\nSELECT citizenship_other AS citizenship\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.birth_year AS birth_year,\n          LHS.net_worth_millions AS net_worth_millions,\n          LHS.citizenship AS citizenship,\n          RHS.singer_id AS singer_id_other,\n          RHS.name AS name_other,\n          RHS.birth_year AS birth_year_other,\n          RHS.net_worth_millions AS net_worth_millions_other,\n          RHS.citizenship AS citizenship_other\n   FROM\n     (SELECT *\n      FROM singer\n      WHERE (birth_year = 1945.0\n             OR birth_year >= 1955.0)) AS LHS\n   CROSS JOIN\n     (SELECT *\n      FROM singer\n      WHERE (birth_year = 1945.0\n             OR birth_year >= 1955.0)) AS RHS)\nWHERE (birth_year > birth_year_other)\nORDER BY citizenship\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\nsinger <- read_csv(\"tests-examples/db2csv/singer/tables/singer.csv\", skip=1, col_names=c('singer_id','name','birth_year','net_worth_millions','citizenship'), col_types=cols(col_integer(),col_character(),col_double(),col_double(),col_character()))\nsinger <- copy_to(con, singer)\nexpected_output <- read_csv(\"tests-examples/db2csv/singer/tables/0029_dev.csv\", skip=1, col_names=c('citizenship'), col_types=cols(col_character()))\n\ndf1 <- singer %>% filter(birth_year == 1945 | birth_year >= 1955)\ndf2 <- full_join(df1, df1, by=character(), suffix = c(\"\", \".other\"), na_matches=\"never\") %>% filter(birth_year > birth_year.other)\nout <- df2 %>% select(citizenship = citizenship.other) %>% arrange(citizenship)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT citizenship_other AS citizenship\nFROM\n  (SELECT LHS.singer_id AS singer_id,\n          LHS.name AS name,\n          LHS.birth_year AS birth_year,\n          LHS.net_worth_millions AS net_worth_millions,\n          LHS.citizenship AS citizenship,\n          RHS.singer_id AS singer_id_other,\n          RHS.name AS name_other,\n          RHS.birth_year AS birth_year_other,\n          RHS.net_worth_millions AS net_worth_millions_other,\n          RHS.citizenship AS citizenship_other\n   FROM\n     (SELECT *\n      FROM singer\n      WHERE (birth_year = 1945.0\n             OR birth_year >= 1955.0)) AS LHS\n   CROSS JOIN\n     (SELECT *\n      FROM singer\n      WHERE (birth_year = 1945.0\n             OR birth_year >= 1955.0)) AS RHS)\nWHERE (birth_year > birth_year_other)\nORDER BY citizenship\n", "sql2": "SELECT Citizenship\nFROM singer\nWHERE Birth_Year < 1945 INTERSECT\n  SELECT Citizenship\n  FROM singer WHERE Birth_Year > 1955", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0022_dev", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.song_id AS song_id,\n          LHS.title AS title,\n          LHS.singer_id AS singer_id,\n          LHS.sales AS sales,\n          LHS.highest_position AS highest_position,\n          RHS.name AS name,\n          RHS.birth_year AS birth_year,\n          RHS.net_worth_millions AS net_worth_millions,\n          RHS.citizenship AS citizenship\n   FROM song AS LHS\n   LEFT JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))\nWHERE (sales >= 300000.0)\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.Name\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nWHERE T2.Sales > 300000", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/singer/0023_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.singer_id AS singer_id,\n             LHS.name AS name,\n             LHS.birth_year AS birth_year,\n             LHS.net_worth_millions AS net_worth_millions,\n             LHS.citizenship AS citizenship,\n             RHS.song_id AS song_id,\n             RHS.title AS title,\n             RHS.sales AS sales,\n             RHS.highest_position AS highest_position\n      FROM singer AS LHS\n      INNER JOIN song AS RHS ON (LHS.singer_id = RHS.singer_id))\n   GROUP BY name)\nWHERE (n != 1)\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM singer AS T1\nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nGROUP BY T1.Name\nHAVING COUNT(*) > 1", "schema": "db2csv/singer/tables/singer.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0106_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `country`\nWHERE (`continent` = 'Asia')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country\nWHERE continent = 'Asia'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0078_dev", "sql1": "\nSELECT DISTINCT `countrycode`\nFROM\n  (SELECT *\n   FROM `countrylanguage` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `countrylanguage`\n           WHERE (`language` = 'English')) AS RHS\n        WHERE (LHS.countrycode = RHS.countrycode) ))\nORDER BY countrycode\n", "sql2": "SELECT CountryCode\nFROM countrylanguage\nEXCEPT\nSELECT CountryCode\nFROM countrylanguage\nWHERE LANGUAGE = 'English'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0079_dev", "sql1": "\nSELECT DISTINCT `countrycode`\nFROM `countrylanguage`\nWHERE (`language` != 'English')\nORDER BY countrycode\n", "sql2": "SELECT DISTINCT CountryCode\nFROM countrylanguage\nWHERE LANGUAGE != 'English'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0031_dev", "sql1": "\nSELECT n_distinct AS count_distinct_language_\nFROM\n  (SELECT COUNT(DISTINCT LANGUAGE) AS n_distinct\n   FROM countrylanguage)\nORDER BY count_distinct_language_\n", "sql2": "SELECT count(DISTINCT LANGUAGE)\nFROM countrylanguage", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0005_dev", "sql1": "\nSELECT `sumsurfacearea` AS `sum_surfacearea_`\nFROM\n  (SELECT `region`,\n          SUM(`surfacearea`) AS `sumsurfacearea`\n   FROM `country`\n   GROUP BY `region`)\nWHERE (`region` = 'Caribbean')\nORDER BY sum_surfacearea_\n", "sql2": "SELECT sum(SurfaceArea)\nFROM country\nWHERE Region = 'Caribbean'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0004_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `country`\nWHERE (`governmentform` = 'Republic')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country\nWHERE GovernmentForm = 'Republic'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0072_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `code`,\n          `name`,\n          `continent`,\n          `region`,\n          `surfacearea`,\n          `indepyear`,\n          `population`,\n          `lifeexpectancy`,\n          `gnp`,\n          `gnpold`,\n          `localname`,\n          `governmentform`,\n          `headofstate`,\n          `capital`,\n          `code2`,\n          MIN(`surfacearea`) OVER () AS `minsurfacearea`\n   FROM `country`)\nWHERE (`continent` != 'Europe'\n       OR minsurfacearea < surfacearea)\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE SurfaceArea >\n    (SELECT min(SurfaceArea)\n     FROM country\n     WHERE Continent = 'Europe')", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0073_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `gnpold`,\n          `name`,\n          MAX(`population`) AS `population`\n   FROM\n     (SELECT *\n      FROM `country`\n      WHERE (`continent` != 'Asia'\n             AND `continent` = 'Africa'))\n   GROUP BY gnpold,\n            name)\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE Continent = 'Africa'\n  AND population <\n    (SELECT max(population)\n     FROM country\n     WHERE Continent = 'Asia')", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0018_dev", "sql1": "\nSELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`\nFROM\n  (SELECT `continent`,\n          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`\n   FROM\n     (SELECT *\n      FROM `country`\n      WHERE (`region` = 'Central Africa'))\n   GROUP BY continent)\nORDER BY avg_lifeexpectancy_\n", "sql2": "SELECT avg(LifeExpectancy)\nFROM country\nWHERE Region = 'Central Africa'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0019_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `country`\n         WHERE (`continent` = 'Asia'))\n      ORDER BY name)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM country\nWHERE Continent = 'Asia'\nORDER BY LifeExpectancy\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0111_dev", "sql1": "\nSELECT name\nFROM city\nWHERE (population < 900000\n       AND population >= 160000)\nORDER BY name\n", "sql2": "SELECT name\nFROM city\nWHERE Population BETWEEN 160000 AND 900000", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0051_dev", "sql1": "\nSELECT DISTINCT `region`\nFROM\n  (SELECT `LHS`.`countrycode` AS `countrycode`,\n          `LHS`.`language` AS `language`,\n          `LHS`.`isofficial` AS `isofficial`,\n          `LHS`.`percentage` AS `percentage`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`continent` AS `continent`,\n          `RHS`.`region` AS `region`,\n          `RHS`.`surfacearea` AS `surfacearea`,\n          `RHS`.`indepyear` AS `indepyear`,\n          `RHS`.`population` AS `population`,\n          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n          `RHS`.`gnp` AS `gnp`,\n          `RHS`.`gnpold` AS `gnpold`,\n          `RHS`.`localname` AS `localname`,\n          `RHS`.`governmentform` AS `governmentform`,\n          `RHS`.`headofstate` AS `headofstate`,\n          `RHS`.`capital` AS `capital`,\n          `RHS`.`code2` AS `code2`\n   FROM\n     (SELECT *\n      FROM `countrylanguage`\n      WHERE (`language` = 'Dutch'\n             OR `language` = 'English')) AS LHS\n   INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))\nORDER BY region\n", "sql2": "SELECT DISTINCT T1.Region\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Language = 'English'\n  OR T2.Language = 'Dutch'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0026_dev", "sql1": "\nSELECT `sumsurfacearea` AS `sum_surfacearea_`\nFROM\n  (SELECT SUM(`surfacearea`) AS `sumsurfacearea`\n   FROM\n     (SELECT *\n      FROM `country`\n      WHERE (`continent` = 'Europe'\n             OR `continent` = 'Asia')))\nORDER BY sum_surfacearea_\n", "sql2": "SELECT sum(SurfaceArea)\nFROM country\nWHERE Continent = 'Asia'\n  OR Continent = 'Europe'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0027_dev", "sql1": "\nSELECT `sumpopulation` AS `sum_population_`\nFROM\n  (SELECT `countrycode`,\n          `district`,\n          SUM(`population`) AS `sumpopulation`\n   FROM `city`\n   GROUP BY `countrycode`,\n            `district`)\nWHERE (`district` = 'Gelderland')\nORDER BY sum_population_\n", "sql2": "SELECT sum(Population)\nFROM city\nWHERE District = 'Gelderland'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0080_dev", "sql1": "\nSELECT DISTINCT `countrycode`\nFROM `countrylanguage`\nWHERE (`language` != 'English')\nORDER BY countrycode\n", "sql2": "SELECT DISTINCT CountryCode\nFROM countrylanguage\nWHERE LANGUAGE != 'English'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0013_dev", "sql1": "\nSELECT `population`,\n       `lifeexpectancy`\nFROM `country`\nWHERE (`name` = 'Brazil')\nORDER BY population\n", "sql2": "SELECT Population,\n       LifeExpectancy\nFROM country\nWHERE Name = 'Brazil'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0020_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `country`\n         WHERE (`continent` = 'Asia'))\n      ORDER BY name)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM country\nWHERE Continent = 'Asia'\nORDER BY LifeExpectancy\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0068_dev", "sql1": "\nSELECT `language`\nFROM\n  (SELECT `countrycode`,\n          `language`,\n          `isofficial`,\n          `percentage`,\n          `name`,\n          `continent`,\n          `region`,\n          `surfacearea`,\n          `indepyear`,\n          `population`,\n          `lifeexpectancy`,\n          `gnp`,\n          `gnpold`,\n          `localname`,\n          `governmentform`,\n          `headofstate`,\n          `capital`,\n          `code2`,\n          `countrycode` AS `code`\n   FROM\n     (SELECT `LHS`.`countrycode` AS `countrycode`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`isofficial` AS `isofficial`,\n             `LHS`.`percentage` AS `percentage`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`continent` AS `continent`,\n             `RHS`.`region` AS `region`,\n             `RHS`.`surfacearea` AS `surfacearea`,\n             `RHS`.`indepyear` AS `indepyear`,\n             `RHS`.`population` AS `population`,\n             `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n             `RHS`.`gnp` AS `gnp`,\n             `RHS`.`gnpold` AS `gnpold`,\n             `RHS`.`localname` AS `localname`,\n             `RHS`.`governmentform` AS `governmentform`,\n             `RHS`.`headofstate` AS `headofstate`,\n             `RHS`.`capital` AS `capital`,\n             `RHS`.`code2` AS `code2`\n      FROM `countrylanguage` AS `LHS`\n      INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\nWHERE (`isofficial` = 'T'\n       AND `headofstate` = 'Beatrix')\nORDER BY LANGUAGE\n", "sql2": "SELECT T2.Language\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.HeadOfState = 'Beatrix'\n  AND T2.IsOfficial = 'T'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0015_dev", "sql1": "\nSELECT `population`,\n       `region`\nFROM `country`\nWHERE (`name` = 'Angola')\nORDER BY population\n", "sql2": "SELECT Population,\n       Region\nFROM country\nWHERE Name = 'Angola'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0014_dev", "sql1": "\nSELECT `population`,\n       `lifeexpectancy`\nFROM `country`\nWHERE (`name` = 'Brazil')\nORDER BY population\n", "sql2": "SELECT Population,\n       LifeExpectancy\nFROM country\nWHERE Name = 'Brazil'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0087_dev", "sql1": "\nSELECT name,\n       surfacearea,\n       indepyear\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY population)\n   LIMIT 1)\n", "sql2": "SELECT Name,\n       SurfaceArea,\n       IndepYear\nFROM country\nORDER BY Population\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0086_dev", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `countrycode`,\n             `language`,\n             `isofficial`,\n             `percentage`,\n             `id`,\n             `name`,\n             `district`,\n             `population`,\n             `name_other`,\n             `continent`,\n             `region`,\n             `surfacearea`,\n             `indepyear`,\n             `population_other`,\n             `lifeexpectancy`,\n             `gnp`,\n             `gnpold`,\n             `localname`,\n             `governmentform`,\n             `headofstate`,\n             `capital`,\n             `code2`,\n             `countrycode` AS `code`\n      FROM\n        (SELECT `LHS`.`countrycode` AS `countrycode`,\n                `LHS`.`language` AS `language`,\n                `LHS`.`isofficial` AS `isofficial`,\n                `LHS`.`percentage` AS `percentage`,\n                `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`district` AS `district`,\n                `LHS`.`population` AS `population`,\n                `RHS`.`name` AS `name_other`,\n                `RHS`.`continent` AS `continent`,\n                `RHS`.`region` AS `region`,\n                `RHS`.`surfacearea` AS `surfacearea`,\n                `RHS`.`indepyear` AS `indepyear`,\n                `RHS`.`population` AS `population_other`,\n                `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n                `RHS`.`gnp` AS `gnp`,\n                `RHS`.`gnpold` AS `gnpold`,\n                `RHS`.`localname` AS `localname`,\n                `RHS`.`governmentform` AS `governmentform`,\n                `RHS`.`headofstate` AS `headofstate`,\n                `RHS`.`capital` AS `capital`,\n                `RHS`.`code2` AS `code2`\n         FROM\n           (SELECT `LHS`.`countrycode` AS `countrycode`,\n                   `LHS`.`language` AS `language`,\n                   `LHS`.`isofficial` AS `isofficial`,\n                   `LHS`.`percentage` AS `percentage`,\n                   `RHS`.`id` AS `id`,\n                   `RHS`.`name` AS `name`,\n                   `RHS`.`district` AS `district`,\n                   `RHS`.`population` AS `population`\n            FROM `countrylanguage` AS `LHS`\n            LEFT JOIN `city` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`countrycode`)) AS `LHS`\n         INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\n   WHERE (`continent` = 'Asia'\n          AND `isofficial` = 'T'))\nWHERE (`continent` = 'Asia'\n       AND `language` = 'Chinese')\nORDER BY name\n", "sql2": "SELECT DISTINCT T3.Name\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nJOIN city AS T3 ON T1.Code = T3.CountryCode\nWHERE T2.IsOfficial = 'T'\n  AND T2.Language = 'Chinese'\n  AND T1.Continent = 'Asia'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0008_dev", "sql1": "\nSELECT `continent`\nFROM `country`\nWHERE (`name` = 'Anguilla')\nORDER BY continent\n", "sql2": "SELECT Continent\nFROM country\nWHERE Name = 'Anguilla'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0009_dev", "sql1": "\nSELECT `region`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`countrycode` AS `countrycode`,\n          `LHS`.`district` AS `district`,\n          `LHS`.`population` AS `population`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`continent` AS `continent`,\n          `RHS`.`region` AS `region`,\n          `RHS`.`surfacearea` AS `surfacearea`,\n          `RHS`.`indepyear` AS `indepyear`,\n          `RHS`.`population` AS `population_other`,\n          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n          `RHS`.`gnp` AS `gnp`,\n          `RHS`.`gnpold` AS `gnpold`,\n          `RHS`.`localname` AS `localname`,\n          `RHS`.`governmentform` AS `governmentform`,\n          `RHS`.`headofstate` AS `headofstate`,\n          `RHS`.`capital` AS `capital`,\n          `RHS`.`code2` AS `code2`\n   FROM\n     (SELECT *\n      FROM `city`\n      WHERE (`name` = 'Kabul')) AS LHS\n   INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))\nORDER BY region\n", "sql2": "SELECT Region\nFROM country AS T1\nJOIN city AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Name = 'Kabul'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0100_dev", "sql1": "\nSELECT name,\n       surfacearea\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY surfacearea DESC)\n   LIMIT 5)\n", "sql2": "SELECT Name,\n       SurfaceArea\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 5", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0101_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY population DESC)\n   LIMIT 3)\n", "sql2": "SELECT Name\nFROM country\nORDER BY Population DESC\nLIMIT 3", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0036_dev", "sql1": "\nSELECT `n` AS `count_t2_language_`\nFROM\n  (SELECT `countrycode`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `countrycode`,\n                `language`,\n                `isofficial`,\n                `percentage`,\n                `name`,\n                `continent`,\n                `region`,\n                `surfacearea`,\n                `indepyear`,\n                `population`,\n                `lifeexpectancy`,\n                `gnp`,\n                `gnpold`,\n                `localname`,\n                `governmentform`,\n                `headofstate`,\n                `capital`,\n                `code2`,\n                `countrycode` AS `code`\n         FROM\n           (SELECT `LHS`.`countrycode` AS `countrycode`,\n                   `LHS`.`language` AS `language`,\n                   `LHS`.`isofficial` AS `isofficial`,\n                   `LHS`.`percentage` AS `percentage`,\n                   `RHS`.`name` AS `name`,\n                   `RHS`.`continent` AS `continent`,\n                   `RHS`.`region` AS `region`,\n                   `RHS`.`surfacearea` AS `surfacearea`,\n                   `RHS`.`indepyear` AS `indepyear`,\n                   `RHS`.`population` AS `population`,\n                   `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n                   `RHS`.`gnp` AS `gnp`,\n                   `RHS`.`gnpold` AS `gnpold`,\n                   `RHS`.`localname` AS `localname`,\n                   `RHS`.`governmentform` AS `governmentform`,\n                   `RHS`.`headofstate` AS `headofstate`,\n                   `RHS`.`capital` AS `capital`,\n                   `RHS`.`code2` AS `code2`\n            FROM `countrylanguage` AS `LHS`\n            INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\n      WHERE (`name` = 'Aruba'))\n   GROUP BY countrycode)\nORDER BY count_t2_language_\n", "sql2": "SELECT COUNT(T2.Language)\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.Name = 'Aruba'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0037_dev", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `countrycode`,\n          `language`,\n          `isofficial`,\n          `percentage`,\n          `n_distinct`,\n          `name`,\n          `continent`,\n          `region`,\n          `surfacearea`,\n          `indepyear`,\n          `population`,\n          `lifeexpectancy`,\n          `gnp`,\n          `gnpold`,\n          `localname`,\n          `governmentform`,\n          `headofstate`,\n          `capital`,\n          `code2`,\n          `countrycode` AS `code`\n   FROM\n     (SELECT `LHS`.`countrycode` AS `countrycode`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`isofficial` AS `isofficial`,\n             `LHS`.`percentage` AS `percentage`,\n             `LHS`.`n_distinct` AS `n_distinct`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`continent` AS `continent`,\n             `RHS`.`region` AS `region`,\n             `RHS`.`surfacearea` AS `surfacearea`,\n             `RHS`.`indepyear` AS `indepyear`,\n             `RHS`.`population` AS `population`,\n             `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n             `RHS`.`gnp` AS `gnp`,\n             `RHS`.`gnpold` AS `gnpold`,\n             `RHS`.`localname` AS `localname`,\n             `RHS`.`governmentform` AS `governmentform`,\n             `RHS`.`headofstate` AS `headofstate`,\n             `RHS`.`capital` AS `capital`,\n             `RHS`.`code2` AS `code2`\n      FROM\n        (SELECT `countrycode`,\n                `language`,\n                `isofficial`,\n                `percentage`,\n                COUNT(DISTINCT `isofficial`) OVER () AS `n_distinct`\n         FROM `countrylanguage`) AS `LHS`\n      INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\nWHERE (`name` = 'Afghanistan'\n       AND `isofficial` = 'T')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.Name = 'Afghanistan'\n  AND IsOfficial = 'T'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0090_dev", "sql1": "\nSELECT name,\n       population,\n       headofstate\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY surfacearea DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name,\n       population,\n       HeadOfState\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0091_dev", "sql1": "\nSELECT n_distinct AS count_t2_language_,\n       name\nFROM\n  (SELECT name,\n          COUNT(DISTINCT LANGUAGE) AS n_distinct\n   FROM\n     (SELECT countrycode,\n             LANGUAGE,\n             isofficial,\n             percentage,\n             name,\n             continent,\n             region,\n             surfacearea,\n             indepyear,\n             population,\n             lifeexpectancy,\n             gnp,\n             gnpold,\n             localname,\n             governmentform,\n             headofstate,\n             capital,\n             code2,\n             countrycode AS code\n      FROM\n        (SELECT LHS.countrycode AS countrycode,\n                LHS.language AS LANGUAGE,\n                LHS.isofficial AS isofficial,\n                LHS.percentage AS percentage,\n                RHS.name AS name,\n                RHS.continent AS continent,\n                RHS.region AS region,\n                RHS.surfacearea AS surfacearea,\n                RHS.indepyear AS indepyear,\n                RHS.population AS population,\n                RHS.lifeexpectancy AS lifeexpectancy,\n                RHS.gnp AS gnp,\n                RHS.gnpold AS gnpold,\n                RHS.localname AS localname,\n                RHS.governmentform AS governmentform,\n                RHS.headofstate AS headofstate,\n                RHS.capital AS capital,\n                RHS.code2 AS code2\n         FROM countrylanguage AS LHS\n         INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code)))\n   GROUP BY name)\nWHERE (n_distinct > 2)\nORDER BY count_t2_language_\n", "sql2": "SELECT COUNT(T2.Language),\n       T1.Name\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nGROUP BY T1.Name\nHAVING COUNT(*) > 2", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0002_dev", "sql1": "\nSELECT name\nFROM country\nWHERE (indepyear > 1950.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE IndepYear > 1950", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0003_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `country`\nWHERE (`governmentform` = 'Republic')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country\nWHERE GovernmentForm = 'Republic'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0119_dev", "sql1": "\nSELECT `countrycode`,\n       `percentage` AS `max_percentage_`\nFROM\n  (SELECT `countrycode`,\n          `language`,\n          `isofficial`,\n          `percentage`,\n          MAX(`percentage`) OVER () AS `maxpercentage`\n   FROM `countrylanguage`)\nWHERE (`language` = 'Spanish')\nORDER BY countrycode\n", "sql2": "SELECT CountryCode,\n       max(Percentage)\nFROM countrylanguage\nWHERE LANGUAGE = 'Spanish'\nGROUP BY CountryCode", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0010_dev", "sql1": "\nSELECT `region`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`countrycode` AS `countrycode`,\n          `LHS`.`district` AS `district`,\n          `LHS`.`population` AS `population`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`continent` AS `continent`,\n          `RHS`.`region` AS `region`,\n          `RHS`.`surfacearea` AS `surfacearea`,\n          `RHS`.`indepyear` AS `indepyear`,\n          `RHS`.`population` AS `population_other`,\n          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n          `RHS`.`gnp` AS `gnp`,\n          `RHS`.`gnpold` AS `gnpold`,\n          `RHS`.`localname` AS `localname`,\n          `RHS`.`governmentform` AS `governmentform`,\n          `RHS`.`headofstate` AS `headofstate`,\n          `RHS`.`capital` AS `capital`,\n          `RHS`.`code2` AS `code2`\n   FROM\n     (SELECT *\n      FROM `city`\n      WHERE (`name` = 'Kabul')) AS LHS\n   INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))\nORDER BY region\n", "sql2": "SELECT Region\nFROM country AS T1\nJOIN city AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Name = 'Kabul'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0067_dev", "sql1": "\nSELECT `language`\nFROM\n  (SELECT `countrycode`,\n          `language`,\n          `isofficial`,\n          `percentage`,\n          `name`,\n          `continent`,\n          `region`,\n          `surfacearea`,\n          `indepyear`,\n          `population`,\n          `lifeexpectancy`,\n          `gnp`,\n          `gnpold`,\n          `localname`,\n          `governmentform`,\n          `headofstate`,\n          `capital`,\n          `code2`,\n          `countrycode` AS `code`\n   FROM\n     (SELECT `LHS`.`countrycode` AS `countrycode`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`isofficial` AS `isofficial`,\n             `LHS`.`percentage` AS `percentage`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`continent` AS `continent`,\n             `RHS`.`region` AS `region`,\n             `RHS`.`surfacearea` AS `surfacearea`,\n             `RHS`.`indepyear` AS `indepyear`,\n             `RHS`.`population` AS `population`,\n             `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n             `RHS`.`gnp` AS `gnp`,\n             `RHS`.`gnpold` AS `gnpold`,\n             `RHS`.`localname` AS `localname`,\n             `RHS`.`governmentform` AS `governmentform`,\n             `RHS`.`headofstate` AS `headofstate`,\n             `RHS`.`capital` AS `capital`,\n             `RHS`.`code2` AS `code2`\n      FROM `countrylanguage` AS `LHS`\n      INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\nWHERE (`isofficial` = 'T'\n       AND `headofstate` = 'Beatrix')\nORDER BY LANGUAGE\n", "sql2": "SELECT T2.Language\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.HeadOfState = 'Beatrix'\n  AND T2.IsOfficial = 'T'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0113_dev", "sql1": "\nSELECT LANGUAGE\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LANGUAGE,\n                COUNT(*) AS n\n         FROM countrylanguage\n         GROUP BY LANGUAGE)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT LANGUAGE\nFROM countrylanguage\nGROUP BY LANGUAGE\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0112_dev", "sql1": "\nSELECT name\nFROM city\nWHERE (population < 900000\n       AND population >= 160000)\nORDER BY name\n", "sql2": "select name\nfrom city\nwhere population between 160000 and 900000", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0089_dev", "sql1": "\nSELECT name,\n       population,\n       headofstate\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY surfacearea DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name,\n       population,\n       HeadOfState\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0088_dev", "sql1": "\nSELECT name,\n       surfacearea,\n       indepyear\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY population)\n   LIMIT 1)\n", "sql2": "SELECT Name,\n       SurfaceArea,\n       IndepYear\nFROM country\nORDER BY Population\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0052_dev", "sql1": "\nSELECT DISTINCT `region`\nFROM\n  (SELECT `LHS`.`countrycode` AS `countrycode`,\n          `LHS`.`language` AS `language`,\n          `LHS`.`isofficial` AS `isofficial`,\n          `LHS`.`percentage` AS `percentage`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`continent` AS `continent`,\n          `RHS`.`region` AS `region`,\n          `RHS`.`surfacearea` AS `surfacearea`,\n          `RHS`.`indepyear` AS `indepyear`,\n          `RHS`.`population` AS `population`,\n          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n          `RHS`.`gnp` AS `gnp`,\n          `RHS`.`gnpold` AS `gnpold`,\n          `RHS`.`localname` AS `localname`,\n          `RHS`.`governmentform` AS `governmentform`,\n          `RHS`.`headofstate` AS `headofstate`,\n          `RHS`.`capital` AS `capital`,\n          `RHS`.`code2` AS `code2`\n   FROM\n     (SELECT *\n      FROM `countrylanguage`\n      WHERE (`language` = 'Dutch'\n             OR `language` = 'English')) AS LHS\n   INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))\nORDER BY region\n", "sql2": "SELECT DISTINCT T1.Region\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Language = 'English'\n  OR T2.Language = 'Dutch'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0025_dev", "sql1": "\nSELECT `sumsurfacearea` AS `sum_surfacearea_`\nFROM\n  (SELECT SUM(`surfacearea`) AS `sumsurfacearea`\n   FROM\n     (SELECT *\n      FROM `country`\n      WHERE (`continent` = 'Europe'\n             OR `continent` = 'Asia')))\nORDER BY sum_surfacearea_\n", "sql2": "SELECT sum(SurfaceArea)\nFROM country\nWHERE Continent = 'Asia'\n  OR Continent = 'Europe'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0024_dev", "sql1": "\nSELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`\nFROM\n  (SELECT `continent`,\n          `governmentform`,\n          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`\n   FROM `country`\n   GROUP BY `continent`,\n            `governmentform`)\nWHERE (`governmentform` = 'Republic'\n       AND `continent` = 'Africa')\nORDER BY avg_lifeexpectancy_\n", "sql2": "SELECT avg(LifeExpectancy)\nFROM country\nWHERE Continent = 'Africa'\n  AND GovernmentForm = 'Republic'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0006_dev", "sql1": "\nSELECT `sumsurfacearea` AS `sum_surfacearea_`\nFROM\n  (SELECT `region`,\n          SUM(`surfacearea`) AS `sumsurfacearea`\n   FROM `country`\n   GROUP BY `region`)\nWHERE (`region` = 'Caribbean')\nORDER BY sum_surfacearea_\n", "sql2": "SELECT sum(SurfaceArea)\nFROM country\nWHERE Region = 'Caribbean'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0007_dev", "sql1": "\nSELECT `continent`\nFROM `country`\nWHERE (`name` = 'Anguilla')\nORDER BY continent\n", "sql2": "SELECT Continent\nFROM country\nWHERE Name = 'Anguilla'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0038_dev", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `countrycode`,\n          `language`,\n          `isofficial`,\n          `percentage`,\n          `n_distinct`,\n          `name`,\n          `continent`,\n          `region`,\n          `surfacearea`,\n          `indepyear`,\n          `population`,\n          `lifeexpectancy`,\n          `gnp`,\n          `gnpold`,\n          `localname`,\n          `governmentform`,\n          `headofstate`,\n          `capital`,\n          `code2`,\n          `countrycode` AS `code`\n   FROM\n     (SELECT `LHS`.`countrycode` AS `countrycode`,\n             `LHS`.`language` AS `language`,\n             `LHS`.`isofficial` AS `isofficial`,\n             `LHS`.`percentage` AS `percentage`,\n             `LHS`.`n_distinct` AS `n_distinct`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`continent` AS `continent`,\n             `RHS`.`region` AS `region`,\n             `RHS`.`surfacearea` AS `surfacearea`,\n             `RHS`.`indepyear` AS `indepyear`,\n             `RHS`.`population` AS `population`,\n             `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n             `RHS`.`gnp` AS `gnp`,\n             `RHS`.`gnpold` AS `gnpold`,\n             `RHS`.`localname` AS `localname`,\n             `RHS`.`governmentform` AS `governmentform`,\n             `RHS`.`headofstate` AS `headofstate`,\n             `RHS`.`capital` AS `capital`,\n             `RHS`.`code2` AS `code2`\n      FROM\n        (SELECT `countrycode`,\n                `language`,\n                `isofficial`,\n                `percentage`,\n                COUNT(DISTINCT `isofficial`) OVER () AS `n_distinct`\n         FROM `countrylanguage`) AS `LHS`\n      INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\nWHERE (`name` = 'Afghanistan'\n       AND `isofficial` = 'T')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.Name = 'Afghanistan'\n  AND IsOfficial = 'T'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0071_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `code`,\n          `name`,\n          `continent`,\n          `region`,\n          `surfacearea`,\n          `indepyear`,\n          `population`,\n          `lifeexpectancy`,\n          `gnp`,\n          `gnpold`,\n          `localname`,\n          `governmentform`,\n          `headofstate`,\n          `capital`,\n          `code2`,\n          MIN(`surfacearea`) OVER () AS `minsurfacearea`\n   FROM `country`)\nWHERE (`continent` != 'Europe'\n       OR minsurfacearea < surfacearea)\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE SurfaceArea >\n    (SELECT min(SurfaceArea)\n     FROM country\n     WHERE Continent = 'Europe')", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0104_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY population)\n   LIMIT 3)\n", "sql2": "SELECT Name\nFROM country\nORDER BY Population ASC\nLIMIT 3", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0105_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `country`\nWHERE (`continent` = 'Asia')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country\nWHERE continent = 'Asia'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0032_dev", "sql1": "\nSELECT n_distinct AS count_distinct_language_\nFROM\n  (SELECT COUNT(DISTINCT LANGUAGE) AS n_distinct\n   FROM countrylanguage)\nORDER BY count_distinct_language_\n", "sql2": "SELECT count(DISTINCT LANGUAGE)\nFROM countrylanguage", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0033_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `governmentform`) OVER () AS `count_distinct_governmentform_`\nFROM `country`\nWHERE (`continent` = 'Africa')\nORDER BY count_distinct_governmentform_\n", "sql2": "SELECT count(DISTINCT GovernmentForm)\nFROM country\nWHERE Continent = 'Africa'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0001_dev", "sql1": "\nSELECT name\nFROM country\nWHERE (indepyear > 1950.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE IndepYear > 1950", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0076_dev", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `governmentform`,\n          `name`,\n          MIN(`continent`) AS `mincontinent`\n   FROM\n     (SELECT *\n      FROM `country`\n      WHERE (`continent` = 'Asia'\n             AND `continent` != 'Africa'))\n   GROUP BY governmentform,\n            name)\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE Continent = 'Asia'\n  AND population >\n    (SELECT min(population)\n     FROM country\n     WHERE Continent = 'Africa')", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0077_dev", "sql1": "\nSELECT DISTINCT `countrycode`\nFROM\n  (SELECT *\n   FROM `countrylanguage` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `countrylanguage`\n           WHERE (`language` = 'English')) AS RHS\n        WHERE (LHS.countrycode = RHS.countrycode) ))\nORDER BY countrycode\n", "sql2": "SELECT CountryCode\nFROM countrylanguage\nEXCEPT\nSELECT CountryCode\nFROM countrylanguage\nWHERE LANGUAGE = 'English'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0103_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY population)\n   LIMIT 3)\n", "sql2": "SELECT Name\nFROM country\nORDER BY Population ASC\nLIMIT 3", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0102_dev", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY population DESC)\n   LIMIT 3)\n", "sql2": "SELECT Name\nFROM country\nORDER BY Population DESC\nLIMIT 3", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0099_dev", "sql1": "\nSELECT name,\n       surfacearea\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM country\n      ORDER BY surfacearea DESC)\n   LIMIT 5)\n", "sql2": "SELECT Name,\n       SurfaceArea\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 5", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0035_dev", "sql1": "\nSELECT `n` AS `count_t2_language_`\nFROM\n  (SELECT `countrycode`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `countrycode`,\n                `language`,\n                `isofficial`,\n                `percentage`,\n                `name`,\n                `continent`,\n                `region`,\n                `surfacearea`,\n                `indepyear`,\n                `population`,\n                `lifeexpectancy`,\n                `gnp`,\n                `gnpold`,\n                `localname`,\n                `governmentform`,\n                `headofstate`,\n                `capital`,\n                `code2`,\n                `countrycode` AS `code`\n         FROM\n           (SELECT `LHS`.`countrycode` AS `countrycode`,\n                   `LHS`.`language` AS `language`,\n                   `LHS`.`isofficial` AS `isofficial`,\n                   `LHS`.`percentage` AS `percentage`,\n                   `RHS`.`name` AS `name`,\n                   `RHS`.`continent` AS `continent`,\n                   `RHS`.`region` AS `region`,\n                   `RHS`.`surfacearea` AS `surfacearea`,\n                   `RHS`.`indepyear` AS `indepyear`,\n                   `RHS`.`population` AS `population`,\n                   `RHS`.`lifeexpectancy` AS `lifeexpectancy`,\n                   `RHS`.`gnp` AS `gnp`,\n                   `RHS`.`gnpold` AS `gnpold`,\n                   `RHS`.`localname` AS `localname`,\n                   `RHS`.`governmentform` AS `governmentform`,\n                   `RHS`.`headofstate` AS `headofstate`,\n                   `RHS`.`capital` AS `capital`,\n                   `RHS`.`code2` AS `code2`\n            FROM `countrylanguage` AS `LHS`\n            INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))\n      WHERE (`name` = 'Aruba'))\n   GROUP BY countrycode)\nORDER BY count_t2_language_\n", "sql2": "SELECT COUNT(T2.Language)\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.Name = 'Aruba'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0034_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `governmentform`) OVER () AS `count_distinct_governmentform_`\nFROM `country`\nWHERE (`continent` = 'Africa')\nORDER BY count_distinct_governmentform_\n", "sql2": "SELECT count(DISTINCT GovernmentForm)\nFROM country\nWHERE Continent = 'Africa'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0016_dev", "sql1": "\nSELECT `population`,\n       `region`\nFROM `country`\nWHERE (`name` = 'Angola')\nORDER BY population\n", "sql2": "SELECT Population,\n       Region\nFROM country\nWHERE Name = 'Angola'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0017_dev", "sql1": "\nSELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`\nFROM\n  (SELECT `continent`,\n          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`\n   FROM\n     (SELECT *\n      FROM `country`\n      WHERE (`region` = 'Central Africa'))\n   GROUP BY continent)\nORDER BY avg_lifeexpectancy_\n", "sql2": "SELECT avg(LifeExpectancy)\nFROM country\nWHERE Region = 'Central Africa'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0028_dev", "sql1": "\nSELECT `sumpopulation` AS `sum_population_`\nFROM\n  (SELECT `countrycode`,\n          `district`,\n          SUM(`population`) AS `sumpopulation`\n   FROM `city`\n   GROUP BY `countrycode`,\n            `district`)\nWHERE (`district` = 'Gelderland')\nORDER BY sum_population_\n", "sql2": "SELECT sum(Population)\nFROM city\nWHERE District = 'Gelderland'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0120_dev", "sql1": "\nSELECT `countrycode`,\n       `percentage` AS `max_percentage_`\nFROM\n  (SELECT `countrycode`,\n          `language`,\n          `isofficial`,\n          `percentage`,\n          MAX(`percentage`) OVER () AS `maxpercentage`\n   FROM `countrylanguage`)\nWHERE (`language` = 'Spanish')\nORDER BY countrycode\n", "sql2": "SELECT CountryCode,\n       max(Percentage)\nFROM countrylanguage\nWHERE LANGUAGE = 'Spanish'\nGROUP BY CountryCode", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0114_dev", "sql1": "\nSELECT LANGUAGE\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LANGUAGE,\n                COUNT(*) AS n\n         FROM countrylanguage\n         GROUP BY LANGUAGE)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT LANGUAGE\nFROM countrylanguage\nGROUP BY LANGUAGE\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/world_1/0023_dev", "sql1": "\nSELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`\nFROM\n  (SELECT `continent`,\n          `governmentform`,\n          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`\n   FROM `country`\n   GROUP BY `continent`,\n            `governmentform`)\nWHERE (`governmentform` = 'Republic'\n       AND `continent` = 'Africa')\nORDER BY avg_lifeexpectancy_\n", "sql2": "SELECT avg(LifeExpectancy)\nFROM country\nWHERE Continent = 'Africa'\n  AND GovernmentForm = 'Republic'", "schema": "db2csv/world_1/tables/world_1.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/world_1/tables/world_1.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/real_estate_properties/0004_dev", "sql1": "\nSELECT `property_name`\nFROM\n  (SELECT *\n   FROM `properties`\n   WHERE (`room_count` >= 1))\nWHERE (`property_type_code` = 'House'\n       OR `property_type_code` = 'Apartment')\nORDER BY property_name\n", "sql2": "SELECT property_name\nFROM Properties\nWHERE property_type_code = 'House'\nUNION\nSELECT property_name\nFROM Properties\nWHERE property_type_code = 'Apartment'\n  AND room_count > 1", "schema": "db2csv/real_estate_properties/tables/real_estate_properties.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/real_estate_properties/tables/real_estate_properties.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/real_estate_properties/0002_dev", "sql1": "\nSELECT `feature_type_name`\nFROM\n  (SELECT `LHS`.`feature_type_code` AS `feature_type_code`,\n          `LHS`.`feature_type_name` AS `feature_type_name`,\n          `RHS`.`feature_id` AS `feature_id`,\n          `RHS`.`feature_name` AS `feature_name`,\n          `RHS`.`feature_description` AS `feature_description`\n   FROM `ref_feature_types` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `other_available_features`\n      WHERE (`feature_name` = 'AirCon')) AS RHS ON (LHS.feature_type_code = RHS.feature_type_code))\nORDER BY feature_type_name\n", "sql2": "SELECT T2.feature_type_name\nFROM Other_Available_Features AS T1\nJOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code\nWHERE T1.feature_name = 'AirCon'", "schema": "db2csv/real_estate_properties/tables/real_estate_properties.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/real_estate_properties/tables/real_estate_properties.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/real_estate_properties/0003_dev", "sql1": "\nSELECT property_type_description\nFROM ref_property_types\nORDER BY property_type_description\n", "sql2": "SELECT T2.property_type_description\nFROM Properties AS T1\nJOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code\nGROUP BY T1.property_type_code", "schema": "db2csv/real_estate_properties/tables/real_estate_properties.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/real_estate_properties/tables/real_estate_properties.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/real_estate_properties/0001_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM other_available_features\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Other_Available_Features", "schema": "db2csv/real_estate_properties/tables/real_estate_properties.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/real_estate_properties/tables/real_estate_properties.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0046_dev", "sql1": "\nSELECT transcript_date,\n       transcript_id\nFROM\n  (SELECT LHS.transcript_id AS transcript_id,\n          LHS.transcript_date AS transcript_date,\n          LHS.other_details AS other_details,\n          RHS.n AS n\n   FROM transcripts AS LHS\n   INNER JOIN\n     (SELECT transcript_id,\n             COUNT(*) AS n\n      FROM transcript_contents\n      GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.transcript_id))\nWHERE (n >= 2)\nORDER BY transcript_date\n", "sql2": "SELECT T2.transcript_date,\n       T1.transcript_id\nFROM Transcript_Contents AS T1\nJOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id\nGROUP BY T1.transcript_id\nHAVING count(*) >= 2", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0047_dev", "sql1": "\nSELECT `cell_mobile_number`\nFROM `students`\nWHERE (`first_name` = 'Timmothy'\n       OR `last_name` = 'Ward')\nORDER BY cell_mobile_number\n", "sql2": "SELECT cell_mobile_number\nFROM Students\nWHERE first_name = 'Timmothy'\n  AND last_name = 'Ward'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0031_dev", "sql1": "\nSELECT degree_summary_name\nFROM\n  (SELECT LHS.degree_program_id AS degree_program_id,\n          LHS.department_id AS department_id,\n          LHS.degree_summary_name AS degree_summary_name,\n          LHS.degree_summary_description AS degree_summary_description,\n          LHS.other_details AS other_details\n   FROM degree_programs AS LHS\n   INNER JOIN\n     (SELECT COUNT(*) AS n\n      FROM\n        (SELECT semester_id\n         FROM student_enrolment INTERSECT SELECT semester_id\n         FROM student_enrolment)) AS RHS ON (LHS.degree_program_id = RHS.n))\nORDER BY degree_summary_name\n", "sql2": "SELECT T1.degree_summary_name\nFROM Degree_Programs AS T1\nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id\nGROUP BY T1.degree_summary_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0005_dev", "sql1": "\nSELECT `course_description`\nFROM `courses`\nWHERE (`course_name` = 'math')\nORDER BY course_description\n", "sql2": "SELECT course_description\nFROM Courses\nWHERE course_name = 'math'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0004_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM courses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Courses", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0072_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT current_address_id) OVER () AS count_distinct_current_address_id_\nFROM students\nORDER BY count_distinct_current_address_id_\n", "sql2": "SELECT count(DISTINCT current_address_id)\nFROM Students", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0073_dev", "sql1": "\nSELECT other_student_details\nFROM students\nORDER BY other_student_details\n", "sql2": "SELECT other_student_details\nFROM Students\nORDER BY other_student_details DESC", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0018_dev", "sql1": "\nSELECT section_name,\n       section_description\nFROM sections\nORDER BY section_name\n", "sql2": "SELECT section_name,\n       section_description\nFROM Sections", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0019_dev", "sql1": "\nSELECT DISTINCT course_name,\n                course_id\nFROM\n  (SELECT course_id,\n          course_name,\n          course_description,\n          other_details,\n          section_id,\n          section_name,\n          section_description,\n          other_details_other,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.course_name AS course_name,\n             LHS.course_description AS course_description,\n             LHS.other_details AS other_details,\n             RHS.section_id AS section_id,\n             RHS.section_name AS section_name,\n             RHS.section_description AS section_description,\n             RHS.other_details AS other_details_other\n      FROM courses AS LHS\n      INNER JOIN sections AS RHS ON (LHS.course_id = RHS.course_id)))\nWHERE (n >= 2)\nORDER BY course_name\n", "sql2": "SELECT T1.course_name,\n       T1.course_id\nFROM Courses AS T1\nJOIN Sections AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_id\nHAVING count(*) <= 2", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0012_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT department_id) OVER () AS count_distinct_department_id_\nFROM degree_programs\nORDER BY count_distinct_department_id_\n", "sql2": "SELECT count(DISTINCT department_id)\nFROM Degree_Programs", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0013_dev", "sql1": "\nSELECT n_distinct AS count_distinct_degree_summary_name_\nFROM\n  (SELECT other_details,\n          COUNT(DISTINCT degree_summary_name) AS n_distinct\n   FROM degree_programs\n   GROUP BY other_details)\nORDER BY count_distinct_degree_summary_name_\n", "sql2": "SELECT count(DISTINCT degree_summary_name)\nFROM Degree_Programs", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0065_dev", "sql1": "\nSELECT n AS count___,\n       student_course_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT student_course_id,\n                COUNT(*) AS n\n         FROM transcript_contents\n         GROUP BY student_course_id)\n      ORDER BY student_course_id)\n   LIMIT 1)\n", "sql2": "SELECT count(*),\n       student_course_id\nFROM Transcript_Contents\nGROUP BY student_course_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0064_dev", "sql1": "\nSELECT transcript_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM transcripts\n      ORDER BY transcript_date DESC)\n   LIMIT 1)\n", "sql2": "SELECT transcript_date\nFROM Transcripts\nORDER BY transcript_date DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0021_dev", "sql1": "\nSELECT section_name\nFROM sections\nORDER BY section_name\n", "sql2": "SELECT section_name\nFROM Sections\nORDER BY section_name DESC", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0020_dev", "sql1": "\nSELECT DISTINCT course_name,\n                course_id\nFROM\n  (SELECT course_id,\n          course_name,\n          course_description,\n          other_details,\n          section_id,\n          section_name,\n          section_description,\n          other_details_other,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.course_name AS course_name,\n             LHS.course_description AS course_description,\n             LHS.other_details AS other_details,\n             RHS.section_id AS section_id,\n             RHS.section_name AS section_name,\n             RHS.section_description AS section_description,\n             RHS.other_details AS other_details_other\n      FROM courses AS LHS\n      INNER JOIN sections AS RHS ON (LHS.course_id = RHS.course_id)))\nWHERE (n >= 2)\nORDER BY course_name\n", "sql2": "SELECT T1.course_name,\n       T1.course_id\nFROM Courses AS T1\nJOIN Sections AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_id\nHAVING count(*) <= 2", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0068_dev", "sql1": "\nSELECT transcript_date,\n       n AS transcript_id\nFROM\n  (SELECT transcript_id,\n          transcript_date,\n          other_details,\n          transcript_id AS n\n   FROM\n     (SELECT LHS.transcript_id AS transcript_id,\n             LHS.transcript_date AS transcript_date,\n             LHS.other_details AS other_details,\n             LHS.n AS n\n      FROM\n        (SELECT transcript_id,\n                transcript_date,\n                other_details,\n                COUNT(*) OVER () AS n\n         FROM transcripts) AS LHS\n      INNER JOIN\n        (SELECT transcript_id,\n                COUNT(*) AS n\n         FROM transcript_contents\n         GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.n\n                                            AND LHS.n = RHS.transcript_id)))\nORDER BY transcript_date\n", "sql2": "SELECT T2.transcript_date,\n       T1.transcript_id\nFROM Transcript_Contents AS T1\nJOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id\nGROUP BY T1.transcript_id\nORDER BY count(*) ASC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0069_dev", "sql1": "\nSELECT `department_id` AS `semester_id`\nFROM\n  (SELECT *\n   FROM `degree_programs` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM `student_enrolment` AS `RHS`\n        WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) ))\nWHERE (`degree_summary_name` != 'Bachelor'\n       AND `degree_summary_name` = 'Master')\nORDER BY semester_id\n", "sql2": "SELECT DISTINCT T2.semester_id\nFROM Degree_Programs AS T1\nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id\nWHERE degree_summary_name = 'Master' INTERSECT\n  SELECT DISTINCT T2.semester_id\n  FROM Degree_Programs AS T1\n  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0015_dev", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `department_name`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`degree_program_id` AS `degree_program_id`,\n                `LHS`.`department_id` AS `department_id`,\n                `LHS`.`degree_summary_name` AS `degree_summary_name`,\n                `LHS`.`degree_summary_description` AS `degree_summary_description`,\n                `LHS`.`other_details` AS `other_details`,\n                `RHS`.`department_name` AS `department_name`,\n                `RHS`.`department_description` AS `department_description`,\n                `RHS`.`other_details` AS `other_details_other`\n         FROM `degree_programs` AS `LHS`\n         INNER JOIN `departments` AS `RHS` ON (`LHS`.`department_id` = `RHS`.`department_id`))\n      WHERE (`department_name` = 'engineer')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Departments AS T1\nJOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id\nWHERE T1.department_name = 'engineer'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0014_dev", "sql1": "\nSELECT n_distinct AS count_distinct_degree_summary_name_\nFROM\n  (SELECT other_details,\n          COUNT(DISTINCT degree_summary_name) AS n_distinct\n   FROM degree_programs\n   GROUP BY other_details)\nORDER BY count_distinct_degree_summary_name_\n", "sql2": "SELECT count(DISTINCT degree_summary_name)\nFROM Degree_Programs", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0062_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM transcripts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Transcripts", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0063_dev", "sql1": "\nSELECT transcript_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM transcripts\n      ORDER BY transcript_date DESC)\n   LIMIT 1)\n", "sql2": "SELECT transcript_date\nFROM Transcripts\nORDER BY transcript_date DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0041_dev", "sql1": "\nSELECT course_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT course_name,\n                COUNT(*) AS n\n         FROM\n           (SELECT LHS.student_course_id AS student_course_id,\n                   LHS.course_id AS course_id,\n                   LHS.student_enrolment_id AS student_enrolment_id,\n                   RHS.course_name AS course_name,\n                   RHS.course_description AS course_description,\n                   RHS.other_details AS other_details\n            FROM student_enrolment_courses AS LHS\n            INNER JOIN courses AS RHS ON (LHS.course_id = RHS.course_id))\n         GROUP BY course_name)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.course_name\nFROM Courses AS T1\nJOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0040_dev", "sql1": "\nSELECT course_name\nFROM\n  (SELECT *\n   FROM courses AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM student_enrolment_courses AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY course_name\n", "sql2": "SELECT DISTINCT T1.course_name\nFROM Courses AS T1\nJOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0008_dev", "sql1": "\nSELECT `zip_postcode`\nFROM `addresses`\nWHERE (`city` = 'Port Chelsea')\nORDER BY zip_postcode\n", "sql2": "SELECT zip_postcode\nFROM Addresses\nWHERE city = 'Port Chelsea'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0037_dev", "sql1": "\nSELECT semester_name\nFROM\n  (SELECT *\n   FROM semesters AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_enrolment AS RHS\n        WHERE (LHS.semester_id = RHS.semester_id) ))\nORDER BY semester_name\n", "sql2": "SELECT semester_name\nFROM Semesters\nWHERE semester_id NOT IN\n    (SELECT semester_id\n     FROM Student_Enrolment)", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0002_dev", "sql1": "\nSELECT line_1,\n       line_2\nFROM addresses\nORDER BY line_1\n", "sql2": "SELECT line_1,\n       line_2\nFROM addresses", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0003_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM courses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Courses", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0075_dev", "sql1": "\nSELECT `section_description`\nFROM `sections`\nWHERE (`section_name` = 'h')\nORDER BY section_description\n", "sql2": "SELECT section_description\nFROM Sections\nWHERE section_name = 'h'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0074_dev", "sql1": "\nSELECT other_student_details\nFROM students\nORDER BY other_student_details\n", "sql2": "SELECT other_student_details\nFROM Students\nORDER BY other_student_details DESC", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0059_dev", "sql1": "\nSELECT transcript_date,\n       other_details\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM transcripts\n      ORDER BY transcript_date)\n   LIMIT 1)\n", "sql2": "SELECT transcript_date,\n       other_details\nFROM Transcripts\nORDER BY transcript_date ASC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0011_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT department_id) OVER () AS count_distinct_department_id_\nFROM degree_programs\nORDER BY count_distinct_department_id_\n", "sql2": "SELECT count(DISTINCT department_id)\nFROM Degree_Programs", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0066_dev", "sql1": "\nSELECT n AS count___,\n       student_course_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT student_course_id,\n                COUNT(*) AS n\n         FROM transcript_contents\n         GROUP BY student_course_id)\n      ORDER BY student_course_id)\n   LIMIT 1)\n", "sql2": "SELECT count(*),\n       student_course_id\nFROM Transcript_Contents\nGROUP BY student_course_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0067_dev", "sql1": "\nSELECT transcript_date,\n       n AS transcript_id\nFROM\n  (SELECT transcript_id,\n          transcript_date,\n          other_details,\n          transcript_id AS n\n   FROM\n     (SELECT LHS.transcript_id AS transcript_id,\n             LHS.transcript_date AS transcript_date,\n             LHS.other_details AS other_details,\n             LHS.n AS n\n      FROM\n        (SELECT transcript_id,\n                transcript_date,\n                other_details,\n                COUNT(*) OVER () AS n\n         FROM transcripts) AS LHS\n      INNER JOIN\n        (SELECT transcript_id,\n                COUNT(*) AS n\n         FROM transcript_contents\n         GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.n\n                                            AND LHS.n = RHS.transcript_id)))\nORDER BY transcript_date\n", "sql2": "SELECT T2.transcript_date,\n       T1.transcript_id\nFROM Transcript_Contents AS T1\nJOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id\nGROUP BY T1.transcript_id\nORDER BY count(*) ASC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0053_dev", "sql1": "\nSELECT first_name\nFROM\n  (SELECT LHS.student_id AS student_id,\n          LHS.current_address_id AS current_address_id,\n          LHS.permanent_address_id AS permanent_address_id,\n          LHS.first_name AS first_name,\n          LHS.middle_name AS middle_name,\n          LHS.last_name AS last_name,\n          LHS.cell_mobile_number AS cell_mobile_number,\n          LHS.email_address AS email_address,\n          LHS.ssn AS ssn,\n          LHS.date_first_registered AS date_first_registered,\n          LHS.date_left AS date_left,\n          LHS.other_student_details AS other_student_details,\n          RHS.student_id AS student_id_other,\n          RHS.current_address_id AS current_address_id_other,\n          RHS.permanent_address_id AS permanent_address_id_other,\n          RHS.middle_name AS middle_name_other,\n          RHS.last_name AS last_name_other,\n          RHS.cell_mobile_number AS cell_mobile_number_other,\n          RHS.email_address AS email_address_other,\n          RHS.date_first_registered AS date_first_registered_other,\n          RHS.date_left AS date_left_other,\n          RHS.other_student_details AS other_student_details_other\n   FROM students AS LHS\n   INNER JOIN students AS RHS ON (LHS.first_name = RHS.first_name\n                                     AND LHS.ssn = RHS.ssn))\nORDER BY first_name\n", "sql2": "SELECT first_name\nFROM Students\nWHERE current_address_id != permanent_address_id", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0006_dev", "sql1": "\nSELECT `course_description`\nFROM `courses`\nWHERE (`course_name` = 'math')\nORDER BY course_description\n", "sql2": "SELECT course_description\nFROM Courses\nWHERE course_name = 'math'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0007_dev", "sql1": "\nSELECT `zip_postcode`\nFROM `addresses`\nWHERE (`city` = 'Port Chelsea')\nORDER BY zip_postcode\n", "sql2": "SELECT zip_postcode\nFROM Addresses\nWHERE city = 'Port Chelsea'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0038_dev", "sql1": "\nSELECT semester_name\nFROM\n  (SELECT *\n   FROM semesters AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_enrolment AS RHS\n        WHERE (LHS.semester_id = RHS.semester_id) ))\nORDER BY semester_name\n", "sql2": "SELECT semester_name\nFROM Semesters\nWHERE semester_id NOT IN\n    (SELECT semester_id\n     FROM Student_Enrolment)", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0039_dev", "sql1": "\nSELECT course_name\nFROM\n  (SELECT *\n   FROM courses AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM student_enrolment_courses AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY course_name\n", "sql2": "SELECT DISTINCT T1.course_name\nFROM Courses AS T1\nJOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0071_dev", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT current_address_id) OVER () AS count_distinct_current_address_id_\nFROM students\nORDER BY count_distinct_current_address_id_\n", "sql2": "SELECT count(DISTINCT current_address_id)\nFROM Students", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0070_dev", "sql1": "\nSELECT `department_id` AS `semester_id`\nFROM\n  (SELECT *\n   FROM `degree_programs` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM `student_enrolment` AS `RHS`\n        WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) ))\nWHERE (`degree_summary_name` != 'Bachelor'\n       AND `degree_summary_name` = 'Master')\nORDER BY semester_id\n", "sql2": "SELECT DISTINCT T2.semester_id\nFROM Degree_Programs AS T1\nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id\nWHERE degree_summary_name = 'Master' INTERSECT\n  SELECT DISTINCT T2.semester_id\n  FROM Degree_Programs AS T1\n  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0045_dev", "sql1": "\nSELECT transcript_date,\n       transcript_id\nFROM\n  (SELECT LHS.transcript_id AS transcript_id,\n          LHS.transcript_date AS transcript_date,\n          LHS.other_details AS other_details,\n          RHS.n AS n\n   FROM transcripts AS LHS\n   INNER JOIN\n     (SELECT transcript_id,\n             COUNT(*) AS n\n      FROM transcript_contents\n      GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.transcript_id))\nWHERE (n >= 2)\nORDER BY transcript_date\n", "sql2": "SELECT T2.transcript_date,\n       T1.transcript_id\nFROM Transcript_Contents AS T1\nJOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id\nGROUP BY T1.transcript_id\nHAVING count(*) >= 2", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0044_dev", "sql1": "\nSELECT `last_name`\nFROM\n  (SELECT `student_id`,\n          `current_address_id`,\n          `permanent_address_id`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `cell_mobile_number`,\n          `email_address`,\n          `ssn`,\n          `date_first_registered`,\n          `date_left`,\n          `other_student_details`,\n          `line_1`,\n          `line_2`,\n          `line_3`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `other_address_details`,\n          `current_address_id` AS `address_id`\n   FROM\n     (SELECT `LHS`.`student_id` AS `student_id`,\n             `LHS`.`current_address_id` AS `current_address_id`,\n             `LHS`.`permanent_address_id` AS `permanent_address_id`,\n             `LHS`.`first_name` AS `first_name`,\n             `LHS`.`middle_name` AS `middle_name`,\n             `LHS`.`last_name` AS `last_name`,\n             `LHS`.`cell_mobile_number` AS `cell_mobile_number`,\n             `LHS`.`email_address` AS `email_address`,\n             `LHS`.`ssn` AS `ssn`,\n             `LHS`.`date_first_registered` AS `date_first_registered`,\n             `LHS`.`date_left` AS `date_left`,\n             `LHS`.`other_student_details` AS `other_student_details`,\n             `RHS`.`line_1` AS `line_1`,\n             `RHS`.`line_2` AS `line_2`,\n             `RHS`.`line_3` AS `line_3`,\n             `RHS`.`city` AS `city`,\n             `RHS`.`zip_postcode` AS `zip_postcode`,\n             `RHS`.`state_province_county` AS `state_province_county`,\n             `RHS`.`country` AS `country`,\n             `RHS`.`other_address_details` AS `other_address_details`\n      FROM\n        (SELECT *\n         FROM `students` AS `LHS`\n         WHERE NOT EXISTS\n             (SELECT 1\n              FROM `student_enrolment` AS `RHS`\n              WHERE (`LHS`.`student_id` = `RHS`.`student_id`) )) AS `LHS`\n      INNER JOIN `addresses` AS `RHS` ON (`LHS`.`current_address_id` = `RHS`.`address_id`)))\nWHERE (`state_province_county` = 'NorthCarolina')\nORDER BY last_name\n", "sql2": "SELECT T1.last_name\nFROM Students AS T1\nJOIN Addresses AS T2 ON T1.current_address_id = T2.address_id\nWHERE T2.state_province_county = 'NorthCarolina'\nEXCEPT\nSELECT DISTINCT T3.last_name\nFROM Students AS T3\nJOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0032_dev", "sql1": "\nSELECT degree_summary_name\nFROM\n  (SELECT LHS.degree_program_id AS degree_program_id,\n          LHS.department_id AS department_id,\n          LHS.degree_summary_name AS degree_summary_name,\n          LHS.degree_summary_description AS degree_summary_description,\n          LHS.other_details AS other_details\n   FROM degree_programs AS LHS\n   INNER JOIN\n     (SELECT COUNT(*) AS n\n      FROM\n        (SELECT semester_id\n         FROM student_enrolment INTERSECT SELECT semester_id\n         FROM student_enrolment)) AS RHS ON (LHS.degree_program_id = RHS.n))\nORDER BY degree_summary_name\n", "sql2": "SELECT T1.degree_summary_name\nFROM Degree_Programs AS T1\nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id\nGROUP BY T1.degree_summary_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0001_dev", "sql1": "\nSELECT line_1,\n       line_2\nFROM addresses\nORDER BY line_1\n", "sql2": "SELECT line_1,\n       line_2\nFROM addresses", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0076_dev", "sql1": "\nSELECT `section_description`\nFROM `sections`\nWHERE (`section_name` = 'h')\nORDER BY section_description\n", "sql2": "SELECT section_description\nFROM Sections\nWHERE section_name = 'h'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0042_dev", "sql1": "\nSELECT course_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT course_name,\n                COUNT(*) AS n\n         FROM\n           (SELECT LHS.student_course_id AS student_course_id,\n                   LHS.course_id AS course_id,\n                   LHS.student_enrolment_id AS student_enrolment_id,\n                   RHS.course_name AS course_name,\n                   RHS.course_description AS course_description,\n                   RHS.other_details AS other_details\n            FROM student_enrolment_courses AS LHS\n            INNER JOIN courses AS RHS ON (LHS.course_id = RHS.course_id))\n         GROUP BY course_name)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.course_name\nFROM Courses AS T1\nJOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0043_dev", "sql1": "\nSELECT `last_name`\nFROM\n  (SELECT `student_id`,\n          `current_address_id`,\n          `permanent_address_id`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `cell_mobile_number`,\n          `email_address`,\n          `ssn`,\n          `date_first_registered`,\n          `date_left`,\n          `other_student_details`,\n          `line_1`,\n          `line_2`,\n          `line_3`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `other_address_details`,\n          `current_address_id` AS `address_id`\n   FROM\n     (SELECT `LHS`.`student_id` AS `student_id`,\n             `LHS`.`current_address_id` AS `current_address_id`,\n             `LHS`.`permanent_address_id` AS `permanent_address_id`,\n             `LHS`.`first_name` AS `first_name`,\n             `LHS`.`middle_name` AS `middle_name`,\n             `LHS`.`last_name` AS `last_name`,\n             `LHS`.`cell_mobile_number` AS `cell_mobile_number`,\n             `LHS`.`email_address` AS `email_address`,\n             `LHS`.`ssn` AS `ssn`,\n             `LHS`.`date_first_registered` AS `date_first_registered`,\n             `LHS`.`date_left` AS `date_left`,\n             `LHS`.`other_student_details` AS `other_student_details`,\n             `RHS`.`line_1` AS `line_1`,\n             `RHS`.`line_2` AS `line_2`,\n             `RHS`.`line_3` AS `line_3`,\n             `RHS`.`city` AS `city`,\n             `RHS`.`zip_postcode` AS `zip_postcode`,\n             `RHS`.`state_province_county` AS `state_province_county`,\n             `RHS`.`country` AS `country`,\n             `RHS`.`other_address_details` AS `other_address_details`\n      FROM\n        (SELECT *\n         FROM `students` AS `LHS`\n         WHERE NOT EXISTS\n             (SELECT 1\n              FROM `student_enrolment` AS `RHS`\n              WHERE (`LHS`.`student_id` = `RHS`.`student_id`) )) AS `LHS`\n      INNER JOIN `addresses` AS `RHS` ON (`LHS`.`current_address_id` = `RHS`.`address_id`)))\nWHERE (`state_province_county` = 'NorthCarolina')\nORDER BY last_name\n", "sql2": "SELECT T1.last_name\nFROM Students AS T1\nJOIN Addresses AS T2 ON T1.current_address_id = T2.address_id\nWHERE T2.state_province_county = 'NorthCarolina'\nEXCEPT\nSELECT DISTINCT T3.last_name\nFROM Students AS T3\nJOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0016_dev", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `department_name`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`degree_program_id` AS `degree_program_id`,\n                `LHS`.`department_id` AS `department_id`,\n                `LHS`.`degree_summary_name` AS `degree_summary_name`,\n                `LHS`.`degree_summary_description` AS `degree_summary_description`,\n                `LHS`.`other_details` AS `other_details`,\n                `RHS`.`department_name` AS `department_name`,\n                `RHS`.`department_description` AS `department_description`,\n                `RHS`.`other_details` AS `other_details_other`\n         FROM `degree_programs` AS `LHS`\n         INNER JOIN `departments` AS `RHS` ON (`LHS`.`department_id` = `RHS`.`department_id`))\n      WHERE (`department_name` = 'engineer')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Departments AS T1\nJOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id\nWHERE T1.department_name = 'engineer'", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0017_dev", "sql1": "\nSELECT section_name,\n       section_description\nFROM sections\nORDER BY section_name\n", "sql2": "SELECT section_name,\n       section_description\nFROM Sections", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0061_dev", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM transcripts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Transcripts", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0060_dev", "sql1": "\nSELECT transcript_date,\n       other_details\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM transcripts\n      ORDER BY transcript_date)\n   LIMIT 1)\n", "sql2": "SELECT transcript_date,\n       other_details\nFROM Transcripts\nORDER BY transcript_date ASC\nLIMIT 1", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0054_dev", "sql1": "\nSELECT first_name\nFROM\n  (SELECT LHS.student_id AS student_id,\n          LHS.current_address_id AS current_address_id,\n          LHS.permanent_address_id AS permanent_address_id,\n          LHS.first_name AS first_name,\n          LHS.middle_name AS middle_name,\n          LHS.last_name AS last_name,\n          LHS.cell_mobile_number AS cell_mobile_number,\n          LHS.email_address AS email_address,\n          LHS.ssn AS ssn,\n          LHS.date_first_registered AS date_first_registered,\n          LHS.date_left AS date_left,\n          LHS.other_student_details AS other_student_details,\n          RHS.student_id AS student_id_other,\n          RHS.current_address_id AS current_address_id_other,\n          RHS.permanent_address_id AS permanent_address_id_other,\n          RHS.middle_name AS middle_name_other,\n          RHS.last_name AS last_name_other,\n          RHS.cell_mobile_number AS cell_mobile_number_other,\n          RHS.email_address AS email_address_other,\n          RHS.date_first_registered AS date_first_registered_other,\n          RHS.date_left AS date_left_other,\n          RHS.other_student_details AS other_student_details_other\n   FROM students AS LHS\n   INNER JOIN students AS RHS ON (LHS.first_name = RHS.first_name\n                                     AND LHS.ssn = RHS.ssn))\nORDER BY first_name\n", "sql2": "SELECT first_name\nFROM Students\nWHERE current_address_id != permanent_address_id", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "db2csv/student_transcripts_tracking/0022_dev", "sql1": "\nSELECT section_name\nFROM sections\nORDER BY section_name\n", "sql2": "SELECT section_name\nFROM Sections\nORDER BY section_name DESC", "schema": "db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/db2csv/student_transcripts_tracking/tables/student_transcripts_tracking.yaml", "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0009", "sql1": "\nSELECT DISTINCT id,\n                name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.market_share AS market_share,\n          RHS.accelerator_id AS accelerator_id,\n          RHS.browser_id AS browser_id\n   FROM browser AS LHS\n   INNER JOIN\n     (SELECT accelerator_id,\n             browser_id,\n             COUNT(*) AS n\n      FROM accelerator_compatible_browser\n      GROUP BY accelerator_id,\n               browser_id) AS RHS ON (LHS.id = RHS.n))\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.name\nFROM browser AS T1\nJOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id\nGROUP BY T1.id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0005", "sql1": "\nSELECT `id`,\n       `market_share`\nFROM `browser`\nWHERE (`name` = 'Safari')\nORDER BY id\n", "sql2": "SELECT id,\n       market_share\nFROM browser\nWHERE name = 'Safari'", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0008", "sql1": "\nSELECT accelerator_id AS id,\n       name\nFROM\n  (SELECT accelerator_id,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT id,\n             name,\n             operating_system,\n             client,\n             CONNECTION,\n             browser_id,\n             compatible_since_year,\n             id AS accelerator_id\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.name AS name,\n                LHS.operating_system AS operating_system,\n                LHS.client AS client,\n                LHS.connection AS CONNECTION,\n                RHS.browser_id AS browser_id,\n                RHS.compatible_since_year AS compatible_since_year\n         FROM web_client_accelerator AS LHS\n         INNER JOIN accelerator_compatible_browser AS RHS ON (LHS.id = RHS.accelerator_id)))\n   GROUP BY accelerator_id,\n            name)\nWHERE (n >= 2)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.Name\nFROM web_client_accelerator AS T1\nJOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id\nGROUP BY T1.id\nHAVING count(*) >= 2", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0003", "sql1": "\nSELECT id,\n       name,\n       market_share\nFROM browser\nORDER BY id\n", "sql2": "SELECT id,\n       name,\n       market_share\nFROM browser", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0018", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.market_share AS market_share,\n          RHS.id AS id_other,\n          RHS.name AS name_other,\n          RHS.operating_system AS operating_system,\n          RHS.client AS client,\n          RHS.connection AS CONNECTION,\n          RHS.compatible_since_year AS compatible_since_year,\n          RHS.accelerator_id AS accelerator_id\n   FROM browser AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             operating_system,\n             client,\n             CONNECTION,\n             browser_id,\n             compatible_since_year,\n             id AS accelerator_id\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.name AS name,\n                LHS.operating_system AS operating_system,\n                LHS.client AS client,\n                LHS.connection AS CONNECTION,\n                RHS.browser_id AS browser_id,\n                RHS.compatible_since_year AS compatible_since_year\n         FROM web_client_accelerator AS LHS\n         INNER JOIN accelerator_compatible_browser AS RHS ON (LHS.id = RHS.accelerator_id))) AS RHS ON (LHS.id = RHS.browser_id))\nORDER BY name___1\n", "sql2": "SELECT T2.name,\n       T3.name\nFROM accelerator_compatible_browser AS T1\nJOIN browser AS T2 ON T1.browser_id = T2.id\nJOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id\nORDER BY T1.compatible_since_year DESC", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0002", "sql1": "\nSELECT name\nFROM browser\nORDER BY name\n", "sql2": "SELECT name\nFROM browser\nORDER BY market_share DESC", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0001", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT market_share) AS n_distinct\n   FROM\n     (SELECT *\n      FROM browser\n      WHERE (market_share >= 5.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM browser\nWHERE market_share >= 5", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0017", "sql1": "\nSELECT operating_system,\n       n AS count___\nFROM\n  (SELECT operating_system,\n          COUNT(*) AS n\n   FROM web_client_accelerator\n   GROUP BY operating_system)\nORDER BY operating_system\n", "sql2": "SELECT Operating_system,\n       count(*)\nFROM web_client_accelerator\nGROUP BY Operating_system", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT client) OVER () AS count_distinct_client_\nFROM web_client_accelerator\nORDER BY count_distinct_client_\n", "sql2": "SELECT count(DISTINCT client)\nFROM web_client_accelerator", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/browser_web/0006", "sql1": "\nSELECT `name`,\n       `operating_system`\nFROM `web_client_accelerator`\nWHERE (`connection` != 'Broadband')\nORDER BY name\n", "sql2": "SELECT name,\n       operating_system\nFROM web_client_accelerator\nWHERE CONNECTION != 'Broadband'", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0009", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.actor_id AS actor_id,\n          LHS.name AS name,\n          LHS.musical_id AS musical_id,\n          LHS.character AS CHARACTER,\n          LHS.duration AS duration,\n          LHS.age AS age,\n          RHS.name AS name_other,\n          RHS.year AS YEAR,\n          RHS.award AS award,\n          RHS.category AS category,\n          RHS.nominee AS nominee,\n          RHS.result AS RESULT\n   FROM actor AS LHS\n   INNER JOIN musical AS RHS ON (LHS.musical_id = RHS.musical_id))\nORDER BY name___1\n", "sql2": "SELECT T1.Name,\n       T2.Name\nFROM actor AS T1\nJOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0005", "sql1": "\nSELECT CHARACTER\nFROM actor\nORDER BY CHARACTER\n", "sql2": "SELECT CHARACTER\nFROM actor\nORDER BY age DESC", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0004", "sql1": "\nSELECT name\nFROM actor\nWHERE (age != 20)\nORDER BY name\n", "sql2": "SELECT Name\nFROM actor\nWHERE Age != 20", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0008", "sql1": "\nSELECT DISTINCT `nominee`\nFROM `musical`\nWHERE (`award` = 'Tony Award')\nORDER BY nominee\n", "sql2": "SELECT DISTINCT Nominee\nFROM musical\nWHERE Award != 'Tony Award'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0003", "sql1": "\nSELECT CHARACTER,\n       duration\nFROM actor\nORDER BY CHARACTER\n", "sql2": "SELECT CHARACTER,\n       Duration\nFROM actor", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0019", "sql1": "\nSELECT DISTINCT `nominee`\nFROM `musical`\nWHERE (`award` != 'Tony Award'\n       OR `award` != 'Drama Desk Award')\nORDER BY nominee\n", "sql2": "SELECT Nominee\nFROM musical\nWHERE Award = 'Tony Award' INTERSECT\n  SELECT Nominee\n  FROM musical WHERE Award = 'Drama Desk Award'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM musical AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM actor AS RHS\n        WHERE (LHS.musical_id = RHS.musical_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM musical\nWHERE Musical_ID NOT IN\n    (SELECT Musical_ID\n     FROM actor)", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0002", "sql1": "\nSELECT name\nFROM actor\nORDER BY name\n", "sql2": "SELECT Name\nFROM actor\nORDER BY Name ASC", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0014", "sql1": "\nSELECT nominee,\n       n AS count___\nFROM\n  (SELECT nominee,\n          YEAR,\n          COUNT(*) AS n\n   FROM musical\n   GROUP BY nominee,\n            YEAR)\nORDER BY nominee\n", "sql2": "SELECT Nominee,\n       COUNT(*)\nFROM musical\nGROUP BY Nominee", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM actor)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM actor", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0017", "sql1": "\nSELECT nominee\nFROM\n  (SELECT nominee,\n          COUNT(*) AS n\n   FROM musical\n   GROUP BY nominee)\nWHERE (n > 2)\nORDER BY nominee\n", "sql2": "SELECT Nominee\nFROM musical\nGROUP BY Nominee\nHAVING COUNT(*) > 2", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0020", "sql1": "\nSELECT `nominee`\nFROM `musical`\nWHERE (`award` = 'Tony Award')\nORDER BY nominee\n", "sql2": "SELECT Nominee\nFROM musical\nWHERE Award = 'Tony Award'\n  OR Award = 'Cleavant Derricks'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0007", "sql1": "\nSELECT `name`\nFROM `musical`\nWHERE (`nominee` = 'Bob Fosse')\nORDER BY name\n", "sql2": "SELECT Name\nFROM musical\nWHERE Nominee = 'Bob Fosse'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0011", "sql1": "\nSELECT name\nFROM actor\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM actor AS T1\nJOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID\nORDER BY T2.Year DESC", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0010", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `actor` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `musical`\n           WHERE (`name` != 'The Phantom of the Opera')) AS RHS\n        WHERE (LHS.musical_id = RHS.musical_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM actor AS T1\nJOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID\nWHERE T2.Name = 'The Phantom of the Opera'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/musical/0006", "sql1": "\nSELECT duration\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM actor\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Duration\nFROM actor\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0009", "sql1": "\nSELECT official_name,\n       status\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM city\n      ORDER BY area_km_2 DESC)\n   LIMIT 1)\n", "sql2": "SELECT Official_Name,\n       Status\nFROM city\nORDER BY Population DESC\nLIMIT 1", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0013", "sql1": "\nSELECT theme\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.official_name AS official_name,\n          LHS.status AS status,\n          LHS.area_km_2 AS area_km_2,\n          LHS.population AS population,\n          LHS.census_ranking AS census_ranking,\n          RHS.year AS YEAR,\n          RHS.theme AS theme,\n          RHS.host_city_id AS host_city_id,\n          RHS.hosts AS hosts\n   FROM\n     (SELECT *\n      FROM city\n      WHERE (population > 1000.0)) AS LHS\n   INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.competition_id))\nORDER BY theme\n", "sql2": "SELECT T2.Theme\nFROM city AS T1\nJOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID\nWHERE T1.Population > 1000", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0004", "sql1": "\nSELECT theme\nFROM farm_competition\nORDER BY theme\n", "sql2": "SELECT Theme\nFROM farm_competition\nORDER BY YEAR ASC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0008", "sql1": "\nSELECT official_name\nFROM city\nORDER BY official_name\n", "sql2": "SELECT Official_Name\nFROM city\nORDER BY Population DESC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0015", "sql1": "\nSELECT DISTINCT status\nFROM city\nORDER BY status\n", "sql2": "SELECT Status\nFROM city\nGROUP BY Status\nORDER BY COUNT(*) ASC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0003", "sql1": "\nSELECT `hosts`\nFROM `farm_competition`\nWHERE (`theme` != 'Aliens')\nORDER BY hosts\n", "sql2": "SELECT Hosts\nFROM farm_competition\nWHERE Theme != 'Aliens'", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0019", "sql1": "\nSELECT official_name\nFROM city\nWHERE (population >= 1500.0\n       OR population < 500.0)\nORDER BY official_name\n", "sql2": "SELECT Official_Name\nFROM city\nWHERE Population > 1500\n  OR Population < 500", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0018", "sql1": "\nSELECT DISTINCT status\nFROM city\nWHERE (population < 1500.0\n       OR population <= 500.0)\nORDER BY status\n", "sql2": "SELECT Status\nFROM city\nWHERE Population > 1500 INTERSECT\n  SELECT Status\n  FROM city WHERE Population < 500", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0002", "sql1": "\nSELECT total_horses\nFROM farm\nORDER BY total_horses\n", "sql2": "SELECT Total_Horses\nFROM farm\nORDER BY Total_Horses ASC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0014", "sql1": "\nSELECT status,\n       meanpopulation AS avg_population_\nFROM\n  (SELECT status,\n          AVG(population) AS meanpopulation\n   FROM city\n   GROUP BY status)\nORDER BY status\n", "sql2": "SELECT Status,\n       avg(Population)\nFROM city\nGROUP BY Status", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM farm\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM farm", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0020", "sql1": "\nSELECT `census_ranking`\nFROM `city`\nWHERE (`status` != 'Village')\nORDER BY census_ranking\n", "sql2": "SELECT Census_Ranking\nFROM city\nWHERE Status != 'Village'", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0016", "sql1": "\nSELECT status\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.official_name AS official_name,\n          LHS.status AS status,\n          LHS.area_km_2 AS area_km_2,\n          LHS.population AS population,\n          LHS.census_ranking AS census_ranking\n   FROM city AS LHS\n   INNER JOIN\n     (SELECT COUNT(*) AS n\n      FROM city) AS RHS ON (LHS.city_id = RHS.n))\nORDER BY status\n", "sql2": "SELECT Status\nFROM city\nGROUP BY Status\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0007", "sql1": "\nSELECT n_distinct AS count_distinct_status_\nFROM\n  (SELECT COUNT(DISTINCT status) AS n_distinct\n   FROM city)\nORDER BY count_distinct_status_\n", "sql2": "SELECT count(DISTINCT Status)\nFROM city", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0010", "sql1": "\nSELECT YEAR,\n       official_name\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.official_name AS official_name,\n          LHS.status AS status,\n          LHS.area_km_2 AS area_km_2,\n          LHS.population AS population,\n          LHS.census_ranking AS census_ranking,\n          RHS.competition_id AS competition_id,\n          RHS.year AS YEAR,\n          RHS.theme AS theme,\n          RHS.hosts AS hosts\n   FROM city AS LHS\n   INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.host_city_id))\nORDER BY YEAR\n", "sql2": "SELECT T2.Year,\n       T1.Official_Name\nFROM city AS T1\nJOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/farm/0006", "sql1": "\nSELECT DISTINCT MAX(cows) OVER () AS max_cows_,\n                               mincows AS min_cows_\nFROM\n  (SELECT farm_id,\n          YEAR,\n          total_horses,\n          working_horses,\n          total_cattle,\n          oxen,\n          bulls,\n          cows,\n          pigs,\n          sheep_and_goats,\n          MIN(cows) OVER () AS mincows\n   FROM farm)\nORDER BY max_cows_\n", "sql2": "SELECT max(Cows),\n       min(Cows)\nFROM farm", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0013", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_t1_injury_\nFROM\n  (SELECT injury,\n          COUNT(DISTINCT injury) AS n_distinct\n   FROM\n     (SELECT *\n      FROM injury_accident AS LHS\n      WHERE EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM game\n              WHERE (season > 2010)) AS RHS\n           WHERE (LHS.id = RHS.id) ))\n   GROUP BY injury)\nORDER BY count_distinct_t1_injury_\n", "sql2": "SELECT count(DISTINCT T1.injury)\nFROM injury_accident AS T1\nJOIN game AS T2 ON T1.game_id = T2.id\nWHERE T2.season > 2010", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0005", "sql1": "\nSELECT average_attendance\nFROM stadium\nWHERE (capacity_percentage > 100.0)\nORDER BY average_attendance\n", "sql2": "SELECT average_attendance\nFROM stadium\nWHERE capacity_percentage > 100", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0004", "sql1": "\nSELECT DISTINCT home_games AS max_home_games_,\n                minhome_games AS min_home_games_,\n                AVG(home_games) OVER () AS avg_home_games_\nFROM\n  (SELECT capacity_percentage,\n          MAX(home_games) OVER () AS home_games,\n                               minhome_games\n   FROM\n     (SELECT capacity_percentage,\n             home_games,\n             MIN(home_games) AS minhome_games\n      FROM stadium\n      GROUP BY capacity_percentage,\n               home_games))\nORDER BY max_home_games_\n", "sql2": "SELECT max(home_games),\n       min(home_games),\n       avg(home_games)\nFROM stadium", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0003", "sql1": "\nSELECT season,\n       home_team,\n       away_team\nFROM game\nORDER BY season\n", "sql2": "SELECT season,\n       home_team,\n       away_team\nFROM game", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0018", "sql1": "\nSELECT date, player\nFROM\n  (SELECT LHS.stadium_id AS stadium_id,\n          LHS.id AS id,\n          LHS.season AS season,\n          LHS.date AS date,\n          LHS.home_team AS home_team,\n          LHS.away_team AS away_team,\n          LHS.score AS score,\n          LHS.competition AS competition,\n          RHS.id AS id_other,\n          RHS.player AS player,\n          RHS.injury AS injury,\n          RHS.number_of_matches AS number_of_matches,\n          RHS.source AS SOURCE\n   FROM game AS LHS\n   INNER JOIN injury_accident AS RHS ON (LHS.id = RHS.game_id))\nORDER BY date\n", "sql2": "SELECT T1.date,\n       T2.player\nFROM game AS T1\nJOIN injury_accident AS T2 ON T1.id = T2.game_id\nORDER BY T1.season DESC", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0002", "sql1": "\nSELECT date\nFROM game\nORDER BY date\n", "sql2": "SELECT Date\nFROM game\nORDER BY home_team DESC", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0007", "sql1": "\nSELECT `season`\nFROM\n  (SELECT `stadium_id`,\n          `id`,\n          `season`,\n          `date`,\n          `home_team`,\n          `away_team`,\n          `score`,\n          `competition`,\n          `id_other`,\n          `player`,\n          `injury`,\n          `number_of_matches`,\n          `source`,\n          `id` AS `game_id`\n   FROM\n     (SELECT `LHS`.`stadium_id` AS `stadium_id`,\n             `LHS`.`id` AS `id`,\n             `LHS`.`season` AS `season`,\n             `LHS`.`date` AS `date`,\n             `LHS`.`home_team` AS `home_team`,\n             `LHS`.`away_team` AS `away_team`,\n             `LHS`.`score` AS `score`,\n             `LHS`.`competition` AS `competition`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`player` AS `player`,\n             `RHS`.`injury` AS `injury`,\n             `RHS`.`number_of_matches` AS `number_of_matches`,\n             `RHS`.`source` AS `source`\n      FROM `game` AS `LHS`\n      INNER JOIN `injury_accident` AS `RHS` ON (`LHS`.`id` = `RHS`.`game_id`)))\nWHERE (`player` = 'Walter Samuel')\nORDER BY season\n", "sql2": "SELECT T1.season\nFROM game AS T1\nJOIN injury_accident AS T2 ON T1.id = T2.game_id\nWHERE T2.player = 'Walter Samuel'", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0011", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_source_\nFROM\n  (SELECT number_of_matches,\n          COUNT(DISTINCT SOURCE) AS n_distinct\n   FROM injury_accident\n   GROUP BY number_of_matches)\nORDER BY count_distinct_source_\n", "sql2": "SELECT count(DISTINCT SOURCE)\nFROM injury_accident", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_injury/0006", "sql1": "\nSELECT `player`,\n       `number_of_matches`,\n       `source`\nFROM `injury_accident`\nWHERE (`injury` != 'Knee problem')\nORDER BY player\n", "sql2": "SELECT player,\n       number_of_matches,\n       SOURCE\nFROM injury_accident\nWHERE injury != 'Knee problem'", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0009", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          RHS.departmentid AS departmentid,\n          RHS.name AS name_other,\n          RHS.head AS head,\n          RHS.primaryaffiliation AS primaryaffiliation,\n          RHS.department AS department\n   FROM physician AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT departmentid,\n                name,\n                head,\n                physician,\n                primaryaffiliation,\n                departmentid AS department\n         FROM\n           (SELECT LHS.departmentid AS departmentid,\n                   LHS.name AS name,\n                   LHS.head AS head,\n                   RHS.physician AS physician,\n                   RHS.primaryaffiliation AS primaryaffiliation\n            FROM department AS LHS\n            INNER JOIN affiliated_with AS RHS ON (LHS.departmentid = RHS.department)))\n      WHERE (primaryaffiliation = 1)) AS RHS ON (LHS.employeeid = RHS.physician))\nORDER BY name___1\n", "sql2": "SELECT T1.name,\n       T3.name\nFROM physician AS T1\nJOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician\nJOIN department AS T3 ON T2.department = T3.DepartmentID\nWHERE T2.PrimaryAffiliation = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0033", "sql1": "\nSELECT name\nFROM\n  (SELECT departmentid,\n          name,\n          head,\n          department,\n          primaryaffiliation,\n          departmentid AS physician\n   FROM\n     (SELECT LHS.departmentid AS departmentid,\n             LHS.name AS name,\n             LHS.head AS head,\n             RHS.department AS department,\n             RHS.primaryaffiliation AS primaryaffiliation\n      FROM department AS LHS\n      INNER JOIN affiliated_with AS RHS ON (LHS.departmentid = RHS.physician)))\nWHERE (primaryaffiliation = 1)\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.name\nFROM affiliated_with AS T1\nJOIN department AS T2 ON T1.department = T2.departmentid\nWHERE PrimaryAffiliation = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0029", "sql1": "\nSELECT name\nFROM nurse\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.name\nFROM undergoes AS T1\nJOIN nurse AS T2 ON T1.AssistingNurse = T2.EmployeeID", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0028", "sql1": "\nSELECT name\nFROM nurse\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM nurse\nORDER BY name", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0004", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.address AS address,\n          LHS.phone AS phone,\n          LHS.insuranceid AS insuranceid,\n          LHS.pcp AS pcp,\n          RHS.appointmentid AS appointmentid,\n          RHS.prepnurse AS prepnurse,\n          RHS.physician AS physician,\n          RHS.start AS START, RHS.end AS END,\n                              RHS.examinationroom AS examinationroom\n   FROM patient AS LHS\n   INNER JOIN appointment AS RHS ON (LHS.ssn = RHS.patient))\nORDER BY name\n", "sql2": "SELECT name\nFROM appointment AS T1\nJOIN patient AS T2 ON T1.patient = T2.ssn", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0032", "sql1": "\nSELECT physician,\n       department\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          LHS.departmentid AS departmentid,\n          LHS.head AS head,\n          RHS.physician AS physician,\n          RHS.department AS department,\n          RHS.primaryaffiliation AS primaryaffiliation\n   FROM\n     (SELECT LHS.employeeid AS employeeid,\n             LHS.name AS name,\n             LHS.position AS POSITION,\n             LHS.ssn AS ssn,\n             RHS.departmentid AS departmentid,\n             RHS.head AS head\n      FROM physician AS LHS\n      INNER JOIN department AS RHS ON (LHS.name = RHS.name)) AS LHS\n   CROSS JOIN\n     (SELECT *\n      FROM affiliated_with\n      WHERE (primaryaffiliation = 1)) AS RHS)\nORDER BY physician\n", "sql2": "SELECT physician,\n       department\nFROM affiliated_with\nWHERE primaryaffiliation = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0024", "sql1": "\nSELECT DISTINCT code AS count___,\n                name\nFROM\n  (SELECT LHS.code AS code,\n          LHS.name AS name,\n          LHS.brand AS brand,\n          LHS.description AS description,\n          RHS.appointment AS appointment,\n          RHS.n AS n\n   FROM medication AS LHS\n   INNER JOIN\n     (SELECT appointment,\n             medication,\n             COUNT(*) AS n\n      FROM prescribes\n      GROUP BY appointment,\n               medication) AS RHS ON (LHS.code = RHS.medication))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM medication AS T1\nJOIN prescribes AS T2 ON T1.code = T2.medication\nGROUP BY T1.brand", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0049", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM appointment)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM appointment", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0019", "sql1": "\nSELECT DISTINCT n AS count___,\n                blockcode\nFROM\n  (SELECT LHS.blockfloor AS blockfloor,\n          LHS.blockcode AS blockcode,\n          LHS.roomnumber AS roomnumber,\n          LHS.roomtype AS roomtype,\n          LHS.unavailable AS unavailable,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.blockfloor AS blockfloor,\n             LHS.blockcode AS blockcode,\n             RHS.roomnumber AS roomnumber,\n             RHS.roomtype AS roomtype,\n             RHS.unavailable AS unavailable\n      FROM block AS LHS\n      INNER JOIN room AS RHS ON (LHS.blockfloor = RHS.blockfloor\n                                    AND LHS.blockcode = RHS.blockcode)) AS LHS\n   CROSS JOIN\n     (SELECT COUNT(*) AS n\n      FROM block) AS RHS)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.blockcode\nFROM BLOCK AS T1\nJOIN room AS T2 ON T1.blockfloor = T2.blockfloor\nAND T1.blockcode = T2.blockcode\nGROUP BY T1.blockcode", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0034", "sql1": "\nSELECT employeeid AS nurse\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.registered AS registered,\n          LHS.ssn AS ssn,\n          RHS.blockfloor AS blockfloor,\n          RHS.blockcode AS blockcode,\n          RHS.oncallstart AS oncallstart,\n          RHS.oncallend AS oncallend\n   FROM nurse AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM on_call\n      WHERE (blockcode < 1\n             OR blockcode = blockfloor)) AS RHS ON (LHS.employeeid = RHS.nurse))\nORDER BY nurse\n", "sql2": "SELECT nurse\nFROM on_call\nWHERE blockfloor = 1\n  AND blockcode = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0022", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT `physician`,\n          `patient`,\n          `medication`,\n          `date`,\n          `appointment`,\n          `dose`,\n          `name`,\n          `brand`,\n          `description`,\n          `name_other`,\n          `position`,\n          `ssn`,\n          `physician` AS `employeeid`\n   FROM\n     (SELECT `LHS`.`physician` AS `physician`,\n             `LHS`.`patient` AS `patient`,\n             `LHS`.`medication` AS `medication`,\n             `LHS`.`date` AS `date`,\n             `LHS`.`appointment` AS `appointment`,\n             `LHS`.`dose` AS `dose`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`brand` AS `brand`,\n             `RHS`.`description` AS `description`,\n             `RHS`.`name_other` AS `name_other`,\n             `RHS`.`position` AS `position`,\n             `RHS`.`ssn` AS `ssn`\n      FROM `prescribes` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM\n           (SELECT *\n            FROM\n              (SELECT `LHS`.`code` AS `code`,\n                      `LHS`.`name` AS `name`,\n                      `LHS`.`brand` AS `brand`,\n                      `LHS`.`description` AS `description`,\n                      `RHS`.`employeeid` AS `employeeid`,\n                      `RHS`.`name` AS `name_other`,\n                      `RHS`.`position` AS `position`,\n                      `RHS`.`ssn` AS `ssn`\n               FROM `medication` AS `LHS`\n               CROSS JOIN `physician` AS `RHS`)\n            WHERE (`name` != `name_other`))\n         WHERE (`name` = 'Thesisin')) AS RHS ON (LHS.physician = RHS.employeeid\n                                                 AND LHS.medication = RHS.code)))\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name\nFROM physician AS T1\nJOIN prescribes AS T2 ON T1.employeeid = T2.physician\nJOIN medication AS T3 ON T3.code = T2.medication\nWHERE T3.name = 'Thesisin'", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0018", "sql1": "\nSELECT DISTINCT n AS count___,\n                blockfloor\nFROM\n  (SELECT LHS.blockfloor AS blockfloor,\n          LHS.blockcode AS blockcode,\n          LHS.roomnumber AS roomnumber,\n          LHS.roomtype AS roomtype,\n          LHS.unavailable AS unavailable,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.blockfloor AS blockfloor,\n             LHS.blockcode AS blockcode,\n             RHS.roomnumber AS roomnumber,\n             RHS.roomtype AS roomtype,\n             RHS.unavailable AS unavailable\n      FROM block AS LHS\n      INNER JOIN room AS RHS ON (LHS.blockfloor = RHS.blockfloor\n                                    AND LHS.blockcode = RHS.blockcode)) AS LHS\n   INNER JOIN\n     (SELECT blockfloor,\n             COUNT(*) AS n\n      FROM room\n      GROUP BY blockfloor) AS RHS ON (LHS.blockfloor = RHS.blockfloor))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.blockfloor\nFROM BLOCK AS T1\nJOIN room AS T2 ON T1.blockfloor = T2.blockfloor\nAND T1.blockcode = T2.blockcode\nGROUP BY T1.blockfloor", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0002", "sql1": "\nSELECT DISTINCT head\nFROM\n  (SELECT LHS.departmentid AS departmentid,\n          LHS.name AS name,\n          LHS.head AS head,\n          RHS.departmentid AS departmentid_other\n   FROM department AS LHS\n   INNER JOIN\n     (SELECT departmentid,\n             COUNT(DISTINCT departmentid) AS n_distinct\n      FROM department\n      GROUP BY departmentid) AS RHS ON (LHS.departmentid = RHS.n_distinct))\nORDER BY head\n", "sql2": "SELECT head\nFROM department\nGROUP BY departmentID\nORDER BY count(departmentID)\nLIMIT 1;", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0014", "sql1": "\nSELECT ssn AS patient\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.address AS address,\n          LHS.phone AS phone,\n          LHS.insuranceid AS insuranceid,\n          LHS.pcp AS pcp,\n          RHS.stayid AS stayid,\n          RHS.room AS room,\n          RHS.staystart AS staystart,\n          RHS.stayend AS stayend\n   FROM patient AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM stay\n      WHERE (room = 111)) AS RHS ON (LHS.ssn = RHS.patient))\nORDER BY patient\n", "sql2": "SELECT patient\nFROM stay\nWHERE room = 111\nORDER BY staystart DESC\nLIMIT 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0001", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.departmentid AS departmentid,\n          LHS.name AS name,\n          LHS.head AS head,\n          RHS.departmentid AS departmentid_other\n   FROM department AS LHS\n   INNER JOIN\n     (SELECT departmentid,\n             COUNT(DISTINCT departmentid) AS n_distinct\n      FROM department\n      GROUP BY departmentid) AS RHS ON (LHS.departmentid = RHS.n_distinct))\nORDER BY name\n", "sql2": "SELECT name\nFROM department\nGROUP BY departmentID\nORDER BY count(departmentID) DESC\nLIMIT 1;", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0040", "sql1": "\nSELECT DISTINCT `meancost` AS `avg_t3_cost_`\nFROM\n  (SELECT `LHS`.`physician` AS `physician`,\n          `LHS`.`treatment` AS `treatment`,\n          `LHS`.`certificationdate` AS `certificationdate`,\n          `LHS`.`certificationexpires` AS `certificationexpires`,\n          `LHS`.`meancost` AS `meancost`,\n          `RHS`.`employeeid` AS `employeeid`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`ssn` AS `ssn`\n   FROM\n     (SELECT `LHS`.`physician` AS `physician`,\n             `LHS`.`treatment` AS `treatment`,\n             `LHS`.`certificationdate` AS `certificationdate`,\n             `LHS`.`certificationexpires` AS `certificationexpires`,\n             `RHS`.`meancost` AS `meancost`\n      FROM `trained_in` AS `LHS`\n      CROSS JOIN\n        (SELECT AVG(`cost`) AS `meancost`\n         FROM `procedures`) AS `RHS`) AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `physician`\n      WHERE (`name` != 'John Wen')) AS RHS)\nORDER BY avg_t3_cost_\n", "sql2": "SELECT avg(T3.cost)\nFROM physician AS T1\nJOIN trained_in AS T2 ON T1.employeeid = T2.physician\nJOIN procedures AS T3 ON T3.code = T2.treatment\nWHERE T1.name = 'John Wen'", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0037", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM procedures\n      ORDER BY cost)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM procedures\nORDER BY cost\nLIMIT 3", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0021", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT roomtype) OVER () AS count_distinct_roomtype_\nFROM room\nORDER BY count_distinct_roomtype_\n", "sql2": "SELECT count(DISTINCT roomtype)\nFROM room", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0020", "sql1": "\nSELECT DISTINCT blockcode\nFROM room\nWHERE (unavailable != 1)\nORDER BY blockcode\n", "sql2": "SELECT DISTINCT blockcode\nFROM room\nWHERE unavailable = 0", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0036", "sql1": "\nSELECT name,\n       cost\nFROM procedures\nORDER BY name\n", "sql2": "SELECT name,\n       cost\nFROM procedures\nORDER BY cost DESC", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0016", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          RHS.n AS n\n   FROM physician AS LHS\n   INNER JOIN\n     (SELECT pcp,\n             COUNT(*) AS n\n      FROM patient\n      GROUP BY pcp) AS RHS ON (LHS.employeeid = RHS.pcp))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM physician AS T1\nJOIN patient AS T2 ON T1.employeeid = T2.PCP\nGROUP BY T1.employeeid", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0031", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT employeeid,\n                name,\n                POSITION,\n                ssn,\n                physician,\n                patient, date, appointment,\n                               dose,\n                               employeeid AS medication\n         FROM\n           (SELECT LHS.employeeid AS employeeid,\n                   LHS.name AS name,\n                   LHS.position AS POSITION,\n                   LHS.ssn AS ssn,\n                   RHS.physician AS physician,\n                   RHS.patient AS patient,\n                   RHS.date AS date,\n                   RHS.appointment AS appointment,\n                   RHS.dose AS dose\n            FROM physician AS LHS\n            INNER JOIN prescribes AS RHS ON (LHS.employeeid = RHS.medication)))\n      ORDER BY physician)\n   LIMIT 1)\n", "sql2": "SELECT T1.name\nFROM physician AS T1\nJOIN prescribes AS T2 ON T1.employeeid = T2.physician\nORDER BY T2.dose DESC\nLIMIT 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0050", "sql1": "\nSELECT name\nFROM nurse\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name\nFROM nurse AS T1\nJOIN on_call AS T2 ON T1.EmployeeID = T2.nurse", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          RHS.appointmentid AS appointmentid,\n          RHS.patient AS patient,\n          RHS.prepnurse AS prepnurse,\n          RHS.start AS START, RHS.end AS END,\n                              RHS.examinationroom AS examinationroom\n   FROM physician AS LHS\n   INNER JOIN appointment AS RHS ON (LHS.employeeid = RHS.physician))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM appointment AS T1\nJOIN physician AS T2 ON T1.Physician = T2.EmployeeID", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0011", "sql1": "\nSELECT DISTINCT n AS count_patient_\nFROM\n  (SELECT patient,\n          room,\n          COUNT(*) AS n\n   FROM stay\n   GROUP BY patient,\n            room)\nWHERE (room > 112\n       OR room <= patient)\nORDER BY count_patient_\n", "sql2": "SELECT count(patient)\nFROM stay\nWHERE room = 112", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.ssn AS ssn,\n                LHS.name AS name,\n                LHS.address AS address,\n                LHS.phone AS phone,\n                LHS.insuranceid AS insuranceid,\n                LHS.pcp AS pcp,\n                RHS.appointmentid AS appointmentid,\n                RHS.patient AS patient,\n                RHS.prepnurse AS prepnurse,\n                RHS.physician AS physician,\n                RHS.start AS START, RHS.end AS END,\n                                    RHS.examinationroom AS examinationroom\n         FROM patient AS LHS\n         CROSS JOIN appointment AS RHS)\n      ORDER BY phone DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.name\nFROM patient AS T1\nJOIN appointment AS T2 ON T1.ssn = T2.patient\nORDER BY T2.start DESC\nLIMIT 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0006", "sql1": "\nSELECT appointmentid\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM appointment\n      ORDER BY END)\n   LIMIT 1)\n", "sql2": "SELECT appointmentid\nFROM appointment\nORDER BY\nSTART DESC\nLIMIT 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0026", "sql1": "\nSELECT DISTINCT patient\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.address AS address,\n          LHS.phone AS phone,\n          LHS.insuranceid AS insuranceid,\n          LHS.pcp AS pcp,\n          LHS.patient AS patient,\n          LHS.procedures AS procedures,\n          LHS.stay AS stay,\n          LHS.dateundergoes AS dateundergoes,\n          LHS.physician AS physician,\n          LHS.assistingnurse AS assistingnurse,\n          RHS.procedures_other AS procedures_other,\n          RHS.stay_other AS stay_other,\n          RHS.dateundergoes_other AS dateundergoes_other,\n          RHS.assistingnurse_other AS assistingnurse_other\n   FROM\n     (SELECT LHS.ssn AS ssn,\n             LHS.name AS name,\n             LHS.address AS address,\n             LHS.phone AS phone,\n             LHS.insuranceid AS insuranceid,\n             LHS.pcp AS pcp,\n             RHS.patient AS patient,\n             RHS.procedures AS procedures,\n             RHS.stay AS stay,\n             RHS.dateundergoes AS dateundergoes,\n             RHS.physician AS physician,\n             RHS.assistingnurse AS assistingnurse\n      FROM patient AS LHS\n      CROSS JOIN undergoes AS RHS) AS LHS\n   INNER JOIN\n     (SELECT patient,\n             procedures,\n             stay,\n             dateundergoes,\n             procedures AS physician,\n             assistingnurse,\n             procedures_other,\n             stay_other,\n             dateundergoes_other,\n             assistingnurse_other\n      FROM\n        (SELECT LHS.patient AS patient,\n                LHS.procedures AS procedures,\n                LHS.stay AS stay,\n                LHS.dateundergoes AS dateundergoes,\n                LHS.physician AS physician,\n                LHS.assistingnurse AS assistingnurse,\n                RHS.procedures AS procedures_other,\n                RHS.stay AS stay_other,\n                RHS.dateundergoes AS dateundergoes_other,\n                RHS.assistingnurse AS assistingnurse_other\n         FROM undergoes AS LHS\n         INNER JOIN undergoes AS RHS ON (LHS.patient = RHS.patient\n                                            AND LHS.procedures = RHS.physician))) AS RHS ON (LHS.patient = RHS.patient\n                                                                                             AND LHS.procedures = RHS.procedures\n                                                                                             AND LHS.stay = RHS.stay\n                                                                                             AND LHS.dateundergoes = RHS.dateundergoes\n                                                                                             AND LHS.physician = RHS.physician\n                                                                                             AND LHS.assistingnurse = RHS.assistingnurse))\nORDER BY patient\n", "sql2": "SELECT patient\nFROM undergoes\nORDER BY dateundergoes\nLIMIT 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hospital_1/0030", "sql1": "\nSELECT name\nFROM medication\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM medication\nORDER BY name", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0009", "sql1": "\nSELECT name,\n       manufacturer_id\nFROM manufacturer\nORDER BY name\n", "sql2": "SELECT name,\n       manufacturer_id\nFROM manufacturer\nORDER BY open_year", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0013", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.manufacturer_id AS manufacturer_id,\n          LHS.n AS n,\n          RHS.open_year AS open_year,\n          RHS.name AS name,\n          RHS.num_of_factories AS num_of_factories,\n          RHS.num_of_shops AS num_of_shops\n   FROM\n     (SELECT manufacturer_id,\n             COUNT(*) AS n\n      FROM furniture_manufacte\n      GROUP BY manufacturer_id) AS LHS\n   INNER JOIN manufacturer AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       t1.name\nFROM manufacturer AS t1\nJOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id\nGROUP BY t1.manufacturer_id", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0005", "sql1": "\nSELECT name,\n       num_of_component\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM furniture\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       Num_of_Component\nFROM furniture\nORDER BY market_rate\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0004", "sql1": "\nSELECT num_of_component,\n       name\nFROM furniture\nWHERE (num_of_component > 10)\nORDER BY num_of_component\n", "sql2": "SELECT Num_of_Component,\n       name\nFROM furniture\nWHERE Num_of_Component > 10", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0012", "sql1": "\nSELECT manufacturer_id,\n       num_of_shops\nFROM\n  (SELECT LHS.manufacturer_id AS manufacturer_id,\n          LHS.open_year AS open_year,\n          LHS.name AS name,\n          LHS.num_of_factories AS num_of_factories,\n          LHS.num_of_shops AS num_of_shops,\n          RHS.price_in_dollar AS price_in_dollar\n   FROM manufacturer AS LHS\n   INNER JOIN furniture_manufacte AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id\n                                                AND LHS.num_of_shops = RHS.furniture_id))\nORDER BY manufacturer_id\n", "sql2": "SELECT t1.manufacturer_id,\n       t1.num_of_shops\nFROM manufacturer AS t1\nJOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id\nORDER BY t2.Price_in_Dollar DESC\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0008", "sql1": "\nSELECT DISTINCT AVG(num_of_factories) OVER () AS avg_num_of_factories_\nFROM manufacturer\nWHERE (num_of_factories = 20\n       OR num_of_shops > 20)\nORDER BY avg_num_of_factories_\n", "sql2": "SELECT avg(Num_of_Factories)\nFROM manufacturer\nWHERE num_of_shops > 20", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0015", "sql1": "\nSELECT market_rate,\n       name\nFROM\n  (SELECT *\n   FROM furniture AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM furniture_manufacte AS RHS\n        WHERE (LHS.furniture_id = RHS.furniture_id) ))\nORDER BY market_rate\n", "sql2": "SELECT Market_Rate,\n       name\nFROM furniture\nWHERE Furniture_ID NOT IN\n    (SELECT Furniture_ID\n     FROM furniture_manufacte)", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0003", "sql1": "\nSELECT DISTINCT summarket_rate AS sum_market_rate_\nFROM\n  (SELECT furniture_id,\n          name,\n          num_of_component,\n          market_rate,\n          SUM(market_rate) OVER () AS summarket_rate\n   FROM furniture)\nWHERE (market_rate = 2.0\n       OR summarket_rate >= 2.0)\nORDER BY sum_market_rate_\n", "sql2": "SELECT sum(market_rate)\nFROM furniture\nORDER BY market_rate DESC\nLIMIT 2", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0002", "sql1": "\nSELECT name,\n       furniture_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM furniture\n      ORDER BY furniture_id)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       furniture_id\nFROM furniture\nORDER BY market_rate DESC\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0014", "sql1": "\nSELECT name,\n       price_in_dollar\nFROM\n  (SELECT LHS.manufacturer_id AS manufacturer_id,\n          LHS.furniture_id AS furniture_id,\n          LHS.price_in_dollar AS price_in_dollar,\n          RHS.name AS name,\n          RHS.num_of_component AS num_of_component,\n          RHS.market_rate AS market_rate\n   FROM furniture_manufacte AS LHS\n   LEFT JOIN furniture AS RHS ON (LHS.furniture_id = RHS.furniture_id))\nORDER BY name\n", "sql2": "SELECT t1.name,\n       t2.price_in_dollar\nFROM furniture AS t1\nJOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0001", "sql1": "\nSELECT sumnum_of_component AS sum_num_of_component_\nFROM\n  (SELECT SUM(num_of_component) AS sumnum_of_component\n   FROM furniture)\nORDER BY sum_num_of_component_\n", "sql2": "SELECT sum(num_of_component)\nFROM furniture", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0007", "sql1": "\nSELECT open_year,\n       name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM manufacturer\n      ORDER BY num_of_shops DESC)\n   LIMIT 1)\n", "sql2": "SELECT open_year,\n       name\nFROM manufacturer\nORDER BY num_of_shops DESC\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufacturer/0010", "sql1": "\nSELECT name,\n       open_year\nFROM manufacturer\nWHERE (num_of_shops >= 10\n       OR num_of_shops > num_of_factories)\nORDER BY name\n", "sql2": "SELECT name,\n       open_year\nFROM manufacturer\nWHERE num_of_shops > 10\n  OR Num_of_Factories < 10", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0009", "sql1": "\nSELECT meanhigh_temperature AS avg_high_temperature_,\n       day_of_week\nFROM\n  (SELECT day_of_week,\n          AVG(high_temperature) AS meanhigh_temperature\n   FROM weekly_weather\n   GROUP BY day_of_week)\nORDER BY avg_high_temperature_\n", "sql2": "SELECT avg(high_temperature),\n       day_of_week\nFROM weekly_weather\nGROUP BY day_of_week", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0005", "sql1": "\nSELECT `train_number`,\n       `time`\nFROM `train`\nWHERE (`origin` = 'Chennai'\n       AND `destination` = 'Guruvayur')\nORDER BY train_number\n", "sql2": "SELECT train_number,\n       TIME\nFROM train\nWHERE origin = 'Chennai'\n  AND destination = 'Guruvayur'", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0012", "sql1": "\nSELECT n_distinct AS count_distinct_services_\nFROM\n  (SELECT COUNT(DISTINCT services) AS n_distinct\n   FROM station)\nORDER BY count_distinct_services_\n", "sql2": "SELECT count(DISTINCT services)\nFROM station", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0003", "sql1": "\nSELECT `time`,\n       `train_number`\nFROM `train`\nWHERE (`destination` = 'Chennai')\nORDER BY TIME\n", "sql2": "SELECT TIME,\n       train_number\nFROM train\nWHERE destination = 'Chennai'\nORDER BY TIME", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0002", "sql1": "\nSELECT train_number,\n       name\nFROM train\nORDER BY train_number\n", "sql2": "SELECT train_number,\n       name\nFROM train\nORDER BY TIME", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0001", "sql1": "\nSELECT local_authority,\n       services\nFROM station\nORDER BY local_authority\n", "sql2": "SELECT local_authority,\n       services\nFROM station", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0016", "sql1": "\nSELECT origin\nFROM\n  (SELECT interval, origin,\n                    COUNT(*) AS n\n   FROM train\n   GROUP BY interval, origin)\nWHERE (n != 1)\nORDER BY origin\n", "sql2": "SELECT origin\nFROM train\nGROUP BY origin\nHAVING count(*) > 1", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0007", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.train_number AS train_number,\n          LHS.name AS name,\n          LHS.origin AS origin,\n          LHS.destination AS destination,\n          LHS.time AS TIME,\n          LHS.interval AS interval,\n          RHS.station_id AS station_id,\n          RHS.train_id AS train_id\n   FROM train AS LHS\n   INNER JOIN\n     (SELECT station_id,\n             train_id,\n             COUNT(*) AS n\n      FROM route\n      GROUP BY station_id,\n               train_id) AS RHS ON (LHS.id = RHS.n))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM train AS t1\nJOIN route AS t2 ON t1.id = t2.train_id\nGROUP BY t2.train_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/station_weather/0006", "sql1": "\nSELECT origin,\n       n AS count___\nFROM\n  (SELECT origin,\n          COUNT(*) AS n\n   FROM train\n   GROUP BY origin)\nORDER BY origin\n", "sql2": "SELECT origin,\n       count(*)\nFROM train\nGROUP BY origin", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          LHS.home_town AS home_town,\n          RHS.perpetrator_id AS perpetrator_id,\n          RHS.people_id AS people_id_other,\n          RHS.date AS date,\n          RHS.year AS YEAR,\n          RHS.location AS LOCATION,\n          RHS.country AS country,\n          RHS.killed AS killed\n   FROM people AS LHS\n   INNER JOIN perpetrator AS RHS ON (LHS.people_id = RHS.injured))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Weight DESC\nLIMIT 1", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0013", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM perpetrator\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM perpetrator\nGROUP BY Country", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0005", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.perpetrator_id AS perpetrator_id,\n          LHS.people_id AS people_id,\n          LHS.date AS date,\n          LHS.year AS YEAR,\n          LHS.location AS LOCATION,\n          LHS.country AS country,\n          LHS.killed AS killed,\n          LHS.injured AS injured,\n          RHS.people_id AS people_id_other,\n          RHS.date AS date_other,\n          RHS.year AS year_other,\n          RHS.country AS country_other,\n          RHS.killed AS killed_other,\n          RHS.injured AS injured_other\n   FROM perpetrator AS LHS\n   INNER JOIN perpetrator AS RHS ON (LHS.people_id = RHS.perpetrator_id\n                                        AND LHS.location = RHS.location))\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM perpetrator\nORDER BY Killed DESC\nLIMIT 1", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0004", "sql1": "\nSELECT DISTINCT AVG(injured) OVER () AS avg_injured_\nFROM perpetrator\nORDER BY avg_injured_\n", "sql2": "SELECT avg(Injured)\nFROM perpetrator", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0012", "sql1": "\nSELECT height\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY height\n", "sql2": "SELECT T1.Height\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Injured DESC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0008", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`people_id` AS `people_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`home_town` AS `home_town`,\n          `RHS`.`perpetrator_id` AS `perpetrator_id`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`killed` AS `killed`,\n          `RHS`.`injured` AS `injured`\n   FROM `people` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `perpetrator`\n      WHERE (`country` != 'China')) AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nWHERE T2.Country != 'China'", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0015", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM perpetrator\n   GROUP BY country)\nWHERE (n >= 2)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM perpetrator\nGROUP BY Country\nHAVING COUNT(*) >= 2", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0003", "sql1": "\nSELECT injured\nFROM perpetrator\nORDER BY injured\n", "sql2": "SELECT Injured\nFROM perpetrator\nORDER BY Injured ASC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0019", "sql1": "\nSELECT n_distinct AS count_distinct_location_\nFROM\n  (SELECT COUNT(DISTINCT LOCATION) AS n_distinct\n   FROM perpetrator)\nORDER BY count_distinct_location_\n", "sql2": "SELECT count(DISTINCT LOCATION)\nFROM perpetrator", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0018", "sql1": "\nSELECT country\nFROM perpetrator\nWHERE (injured >= 50\n       AND injured > 20)\nORDER BY country\n", "sql2": "SELECT Country\nFROM perpetrator\nWHERE Injured > 50 INTERSECT\n  SELECT Country\n  FROM perpetrator WHERE Injured < 20", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0002", "sql1": "\nSELECT date\nFROM perpetrator\nORDER BY date\n", "sql2": "SELECT Date\nFROM perpetrator\nORDER BY Killed DESC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM perpetrator\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM perpetrator", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM perpetrator)", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0021", "sql1": "\nSELECT DISTINCT MAX(YEAR) OVER () AS max_year_\nFROM perpetrator\nORDER BY max_year_\n", "sql2": "SELECT max(YEAR)\nFROM perpetrator;", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0020", "sql1": "\nSELECT date\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          LHS.home_town AS home_town,\n          RHS.perpetrator_id AS perpetrator_id,\n          RHS.people_id AS people_id_other,\n          RHS.date AS date,\n          RHS.year AS YEAR,\n          RHS.location AS LOCATION,\n          RHS.country AS country,\n          RHS.killed AS killed\n   FROM people AS LHS\n   INNER JOIN perpetrator AS RHS ON (LHS.people_id = RHS.injured))\nORDER BY date\n", "sql2": "SELECT T2.Date\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Height DESC\nLIMIT 1", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0016", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Year DESC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0011", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`people_id` AS `people_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`home_town` AS `home_town`,\n          `RHS`.`perpetrator_id` AS `perpetrator_id`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`killed` AS `killed`,\n          `RHS`.`injured` AS `injured`\n   FROM `people` AS `LHS`\n   LEFT JOIN `perpetrator` AS `RHS` ON (`LHS`.`people_id` = `RHS`.`people_id`))\nWHERE (`country` = 'China'\n       OR `country` = 'Japan')\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nWHERE T2.Country = 'China'\n  OR T2.Country = 'Japan'", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/perpetrator/0006", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT Name\nFROM People\nORDER BY Height ASC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0009", "sql1": "\nSELECT name,\n       damage_millions_usd\nFROM storm\nORDER BY name\n", "sql2": "SELECT name,\n       damage_millions_USD\nFROM storm\nORDER BY max_speed DESC", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0013", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.storm_id AS storm_id,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.dates_active AS dates_active,\n          RHS.max_speed AS max_speed,\n          RHS.damage_millions_usd AS damage_millions_usd,\n          RHS.number_deaths AS number_deaths\n   FROM\n     (SELECT storm_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY storm_id) AS LHS\n   INNER JOIN storm AS RHS ON (LHS.storm_id = RHS.storm_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM storm AS T1\nJOIN affected_region AS T2 ON T1.storm_id = T2.storm_id\nGROUP BY T1.storm_id", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0005", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM storm\n      WHERE (number_deaths != 0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM storm\nWHERE Number_Deaths > 0", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0004", "sql1": "\nSELECT `region_name`\nFROM `region`\nWHERE (`region_name` != 'Denmark')\nORDER BY region_name\n", "sql2": "SELECT region_name\nFROM region\nWHERE region_name != 'Denmark'", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0012", "sql1": "\nSELECT DISTINCT region_name,\n                n AS count___\nFROM\n  (SELECT LHS.region_id AS region_id,\n          LHS.region_code AS region_code,\n          LHS.region_name AS region_name,\n          LHS.storm_id AS storm_id,\n          LHS.number_city_affected AS number_city_affected,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.region_id AS region_id,\n             LHS.region_code AS region_code,\n             LHS.region_name AS region_name,\n             RHS.storm_id AS storm_id,\n             RHS.number_city_affected AS number_city_affected\n      FROM region AS LHS\n      INNER JOIN affected_region AS RHS ON (LHS.region_id = RHS.region_id)) AS LHS\n   INNER JOIN\n     (SELECT region_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY region_id) AS RHS ON (LHS.region_id = RHS.region_id))\nORDER BY region_name\n", "sql2": "SELECT T1.region_name,\n       count(*)\nFROM region AS T1\nJOIN affected_region AS T2 ON T1.region_id = T2.region_id\nGROUP BY T1.region_id", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM storm AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM affected_region AS RHS\n        WHERE (LHS.storm_id = RHS.storm_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM storm\nWHERE storm_id NOT IN\n    (SELECT storm_id\n     FROM affected_region)", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0003", "sql1": "\nSELECT region_name\nFROM region\nORDER BY region_name\n", "sql2": "SELECT region_name\nFROM region\nORDER BY region_name", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0019", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`storm_id` AS `storm_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`dates_active` AS `dates_active`,\n          `LHS`.`max_speed` AS `max_speed`,\n          `LHS`.`damage_millions_usd` AS `damage_millions_usd`,\n          `LHS`.`number_deaths` AS `number_deaths`,\n          `LHS`.`region_id` AS `region_id`,\n          `LHS`.`region_code` AS `region_code`,\n          `LHS`.`region_name` AS `region_name`,\n          `RHS`.`number_city_affected` AS `number_city_affected`\n   FROM\n     (SELECT `LHS`.`storm_id` AS `storm_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`dates_active` AS `dates_active`,\n             `LHS`.`max_speed` AS `max_speed`,\n             `LHS`.`damage_millions_usd` AS `damage_millions_usd`,\n             `LHS`.`number_deaths` AS `number_deaths`,\n             `RHS`.`region_id` AS `region_id`,\n             `RHS`.`region_code` AS `region_code`,\n             `RHS`.`region_name` AS `region_name`\n      FROM `storm` AS `LHS`\n      CROSS JOIN `region` AS `RHS`) AS `LHS`\n   INNER JOIN `affected_region` AS `RHS` ON (`LHS`.`storm_id` = `RHS`.`storm_id`\n                                                AND `LHS`.`region_id` = `RHS`.`region_id`))\nWHERE (`region_name` = 'Denmark')\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM affected_region AS T1\nJOIN region AS T2 ON T1.region_id = T2.region_id\nJOIN storm AS T3 ON T1.storm_id = T3.storm_id\nWHERE T2.region_name = 'Denmark'", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0018", "sql1": "\nSELECT region_name\nFROM\n  (SELECT LHS.storm_id AS storm_id,\n          LHS.name AS name,\n          LHS.dates_active AS dates_active,\n          LHS.max_speed AS max_speed,\n          LHS.damage_millions_usd AS damage_millions_usd,\n          LHS.number_deaths AS number_deaths,\n          LHS.region_id AS region_id,\n          LHS.region_code AS region_code,\n          LHS.region_name AS region_name,\n          RHS.number_city_affected AS number_city_affected\n   FROM\n     (SELECT LHS.storm_id AS storm_id,\n             LHS.name AS name,\n             LHS.dates_active AS dates_active,\n             LHS.max_speed AS max_speed,\n             LHS.damage_millions_usd AS damage_millions_usd,\n             LHS.number_deaths AS number_deaths,\n             RHS.region_id AS region_id,\n             RHS.region_code AS region_code,\n             RHS.region_name AS region_name\n      FROM storm AS LHS\n      CROSS JOIN region AS RHS) AS LHS\n   INNER JOIN affected_region AS RHS ON (LHS.storm_id = RHS.storm_id\n                                            AND LHS.region_id = RHS.region_id))\nWHERE (number_deaths > 10)\nORDER BY region_name\n", "sql2": "SELECT T2.region_name\nFROM affected_region AS T1\nJOIN region AS T2 ON T1.region_id = T2.region_id\nJOIN storm AS T3 ON T1.storm_id = T3.storm_id\nWHERE T3.number_deaths >= 10", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0002", "sql1": "\nSELECT region_code,\n       region_name\nFROM region\nORDER BY region_code\n", "sql2": "SELECT region_code,\n       region_name\nFROM region\nORDER BY region_code", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0014", "sql1": "\nSELECT name,\n       max_speed\nFROM\n  (SELECT LHS.number_city_affected AS number_city_affected,\n          LHS.storm_id AS storm_id,\n          LHS.n AS n,\n          RHS.storm_id AS storm_id_other,\n          RHS.name AS name,\n          RHS.dates_active AS dates_active,\n          RHS.max_speed AS max_speed,\n          RHS.damage_millions_usd AS damage_millions_usd\n   FROM\n     (SELECT number_city_affected,\n             storm_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY number_city_affected,\n               storm_id) AS LHS\n   INNER JOIN storm AS RHS ON (LHS.storm_id = RHS.number_deaths))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.max_speed\nFROM storm AS T1\nJOIN affected_region AS T2 ON T1.storm_id = T2.storm_id\nGROUP BY T1.storm_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM region\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM region", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0021", "sql1": "\nSELECT region_name\nFROM\n  (SELECT LHS.region_id AS region_id,\n          LHS.storm_id AS storm_id,\n          LHS.number_city_affected AS number_city_affected,\n          RHS.storm_id AS storm_id_other,\n          RHS.name AS name,\n          RHS.dates_active AS dates_active,\n          RHS.max_speed AS max_speed,\n          RHS.damage_millions_usd AS damage_millions_usd,\n          RHS.region_code AS region_code,\n          RHS.region_name AS region_name\n   FROM affected_region AS LHS\n   INNER JOIN\n     (SELECT storm_id,\n             name,\n             dates_active,\n             max_speed,\n             damage_millions_usd,\n             number_deaths,\n             region_code,\n             region_name,\n             number_deaths AS region_id\n      FROM\n        (SELECT LHS.storm_id AS storm_id,\n                LHS.name AS name,\n                LHS.dates_active AS dates_active,\n                LHS.max_speed AS max_speed,\n                LHS.damage_millions_usd AS damage_millions_usd,\n                LHS.number_deaths AS number_deaths,\n                RHS.region_code AS region_code,\n                RHS.region_name AS region_name\n         FROM storm AS LHS\n         INNER JOIN region AS RHS ON (LHS.number_deaths = RHS.region_id))) AS RHS ON (LHS.storm_id = RHS.number_deaths\n                                                                                         AND LHS.region_id = RHS.region_id))\nORDER BY region_name\n", "sql2": "SELECT T2.region_name\nFROM affected_region AS T1\nJOIN region AS T2 ON T1.region_id = T2.region_id\nJOIN storm AS T3 ON T1.storm_id = T3.storm_id\nORDER BY T3.Number_Deaths DESC\nLIMIT 1", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0020", "sql1": "\nSELECT DISTINCT region_name\nFROM\n  (SELECT LHS.region_id AS region_id,\n          LHS.region_code AS region_code,\n          LHS.region_name AS region_name,\n          RHS.storm_id AS storm_id\n   FROM region AS LHS\n   INNER JOIN\n     (SELECT storm_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY storm_id) AS RHS ON (LHS.region_id = RHS.n))\nORDER BY region_name\n", "sql2": "SELECT T1.region_name\nFROM region AS T1\nJOIN affected_region AS T2 ON T1.region_id = T2.region_id\nGROUP BY T1.region_id\nHAVING count(*) >= 2", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0011", "sql1": "\nSELECT region_name\nFROM\n  (SELECT *\n   FROM region AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM affected_region AS RHS\n        WHERE (LHS.region_id = RHS.region_id) ))\nORDER BY region_name\n", "sql2": "SELECT region_name\nFROM region\nWHERE region_id NOT IN\n    (SELECT region_id\n     FROM affected_region)", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0010", "sql1": "\nSELECT n_distinct AS count_distinct_region_id_\nFROM\n  (SELECT COUNT(DISTINCT region_id) AS n_distinct\n   FROM affected_region)\nORDER BY count_distinct_region_id_\n", "sql2": "SELECT count(DISTINCT region_id)\nFROM affected_region", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/storm_record/0006", "sql1": "\nSELECT name,\n       dates_active,\n       number_deaths\nFROM storm\nWHERE (number_deaths > 1)\nORDER BY name\n", "sql2": "SELECT name,\n       dates_active,\n       number_deaths\nFROM storm\nWHERE number_deaths >= 1", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT aid,\n                name,\n                AVG(distance) AS meandistance\n         FROM aircraft\n         GROUP BY aid,\n                  name)\n      ORDER BY meandistance DESC)\n   LIMIT 7)\n", "sql2": "SELECT name\nFROM Aircraft\nWHERE distance >\n    (SELECT avg(distance)\n     FROM Aircraft)", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0025", "sql1": "\nSELECT flno\nFROM flight\nWHERE (distance > 2000.0)\nORDER BY flno\n", "sql2": "SELECT flno\nFROM Flight\nWHERE distance > 2000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0033", "sql1": "\nSELECT origin_other AS origin\nFROM\n  (SELECT LHS.departure_date AS departure_date,\n          LHS.origin AS origin,\n          LHS.n AS n,\n          RHS.departure_date AS departure_date_other,\n          RHS.origin AS origin_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT departure_date,\n             origin,\n             COUNT(*) AS n\n      FROM flight\n      GROUP BY departure_date,\n               origin) AS LHS\n   CROSS JOIN\n     (SELECT departure_date,\n             origin,\n             COUNT(*) AS n\n      FROM flight\n      GROUP BY departure_date,\n               origin) AS RHS)\nWHERE (n < n_other)\nORDER BY origin\n", "sql2": "SELECT origin\nFROM Flight\nGROUP BY origin\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0044", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`aid` AS `aid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`distance` AS `distance`,\n                `RHS`.`eid` AS `eid`,\n                `RHS`.`name` AS `name_other`,\n                `RHS`.`salary` AS `salary`\n         FROM\n           (SELECT *\n            FROM `aircraft`\n            WHERE (`name` = 'Boeing 737-800')) AS LHS\n         CROSS JOIN employee AS RHS)\n      WHERE (name != name_other)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM certificate AS RHS\n        WHERE (LHS.aid = RHS.aid\n               AND LHS.eid = RHS.eid) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM Employee\nEXCEPT\nSELECT T1.name\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nJOIN Aircraft AS T3 ON T3.aid = T2.aid\nWHERE T3.name = 'Boeing 737-800'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0013", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT salary) AS n_distinct\n   FROM\n     (SELECT *\n      FROM employee\n      WHERE (salary > 100000.0\n             AND salary < 200000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employee\nWHERE salary BETWEEN 100000 AND 200000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0005", "sql1": "\nSELECT name,\n       distance\nFROM aircraft\nWHERE (aid = 12.0)\nORDER BY name\n", "sql2": "SELECT name,\n       distance\nFROM Aircraft\nWHERE aid = 12", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0029", "sql1": "\nSELECT flno\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM flight\n      ORDER BY price)\n   LIMIT 3)\n", "sql2": "SELECT flno\nFROM Flight\nORDER BY distance ASC\nLIMIT 3", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0028", "sql1": "\nSELECT flno,\n       distance\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM flight\n      ORDER BY price DESC)\n   LIMIT 1)\n", "sql2": "SELECT flno,\n       distance\nFROM Flight\nORDER BY price DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0004", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT distance) AS n_distinct\n   FROM\n     (SELECT *\n      FROM aircraft\n      WHERE (distance > 1000.0\n             AND distance < 5000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Aircraft\nWHERE distance BETWEEN 1000 AND 5000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0012", "sql1": "\nSELECT eid\nFROM employee\nWHERE (salary >= 100000.0)\nORDER BY eid\n", "sql2": "SELECT eid\nFROM Employee\nWHERE salary > 100000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0032", "sql1": "\nSELECT destination,\n       n AS count___\nFROM\n  (SELECT destination,\n          COUNT(*) AS n\n   FROM flight\n   GROUP BY destination)\nORDER BY destination\n", "sql2": "SELECT destination,\n       count(*)\nFROM Flight\nGROUP BY destination", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0024", "sql1": "\nSELECT `departure_date`,\n       `arrival_date`\nFROM `flight`\nWHERE (`origin` = 'Los Angeles'\n       AND `destination` = 'Honolulu')\nORDER BY departure_date\n", "sql2": "SELECT departure_date,\n       arrival_date\nFROM Flight\nWHERE origin = 'Los Angeles'\n  AND destination = 'Honolulu'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM aircraft\n      ORDER BY distance)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM Aircraft\nORDER BY distance\nLIMIT 3", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0042", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`eid` AS `eid`,\n          `LHS`.`aid` AS `aid`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`salary` AS `salary`\n   FROM\n     (SELECT *\n      FROM `certificate` AS `LHS`\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM `aircraft`\n              WHERE (`name` != 'Boeing 737-800')) AS RHS\n           WHERE (LHS.aid = RHS.aid) )) AS LHS\n   INNER JOIN employee AS RHS ON (LHS.eid = RHS.eid))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nJOIN Aircraft AS T3 ON T3.aid = T2.aid\nWHERE T3.name = 'Boeing 737-800'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0015", "sql1": "\nSELECT DISTINCT meansalary AS avg_salary_,\n                MAX(salary) OVER () AS max_salary_\nFROM\n  (SELECT eid,\n          name,\n          salary,\n          AVG(salary) OVER () AS meansalary\n   FROM employee)\nORDER BY avg_salary_\n", "sql2": "SELECT avg(salary),\n       max(salary)\nFROM Employee", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0003", "sql1": "\nSELECT aid\nFROM aircraft\nWHERE (distance >= 1000.0)\nORDER BY aid\n", "sql2": "SELECT aid\nFROM Aircraft\nWHERE distance > 1000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0039", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT eid) OVER () AS count_distinct_eid_\nFROM certificate\nORDER BY count_distinct_eid_\n", "sql2": "SELECT count(DISTINCT eid)\nFROM Certificate", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0019", "sql1": "\nSELECT `eid`,\n       `salary`\nFROM `employee`\nWHERE (`name` = 'Mark Young')\nORDER BY eid\n", "sql2": "SELECT eid,\n       salary\nFROM Employee\nWHERE name = 'Mark Young'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0023", "sql1": "\nSELECT `origin`\nFROM `flight`\nWHERE (`destination` = 'Honolulu')\nORDER BY origin\n", "sql2": "SELECT origin\nFROM Flight\nWHERE destination = 'Honolulu'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0035", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.name AS name,\n          LHS.distance AS distance,\n          RHS.flno AS flno,\n          RHS.origin AS origin,\n          RHS.destination AS destination,\n          RHS.distance AS distance_other,\n          RHS.departure_date AS departure_date,\n          RHS.arrival_date AS arrival_date,\n          RHS.price AS price\n   FROM aircraft AS LHS\n   INNER JOIN flight AS RHS ON (LHS.aid = RHS.aid))\nWHERE (flno = 99.0)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nWHERE T1.flno = 99", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0034", "sql1": "\nSELECT destination\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT destination,\n                flno,\n                COUNT(*) AS n\n         FROM flight\n         GROUP BY destination,\n                  flno)\n      ORDER BY flno DESC)\n   LIMIT 1)\n", "sql2": "SELECT destination\nFROM Flight\nGROUP BY destination\nORDER BY count(*)\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0022", "sql1": "\nSELECT `flno`\nFROM `flight`\nWHERE (`origin` = 'Los Angeles')\nORDER BY flno\n", "sql2": "SELECT flno\nFROM Flight\nWHERE origin = 'Los Angeles'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT eid,\n                name,\n                salary,\n                AVG(salary) OVER () AS meansalary\n         FROM employee)\n      ORDER BY salary DESC)\n   LIMIT 13)\n", "sql2": "SELECT name\nFROM Employee\nWHERE salary >\n    (SELECT avg(salary)\n     FROM Employee)", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0002", "sql1": "\nSELECT name,\n       distance\nFROM aircraft\nORDER BY name\n", "sql2": "SELECT name,\n       distance\nFROM Aircraft", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0014", "sql1": "\nSELECT name,\n       salary\nFROM employee\nWHERE (eid = 242518965.0)\nORDER BY name\n", "sql2": "SELECT name,\n       salary\nFROM Employee\nWHERE eid = 242518965", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM aircraft\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Aircraft", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employee\n      ORDER BY salary)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM Employee\nORDER BY salary ASC\nLIMIT 3", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0040", "sql1": "\nSELECT eid\nFROM\n  (SELECT *\n   FROM employee AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM certificate AS RHS\n        WHERE (LHS.eid = RHS.eid) ))\nORDER BY eid\n", "sql2": "SELECT eid\nFROM Employee\nEXCEPT\nSELECT eid\nFROM Certificate", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0037", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.departure_date AS departure_date,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.distance AS distance\n   FROM\n     (SELECT aid,\n             departure_date,\n             COUNT(*) AS n\n      FROM flight\n      GROUP BY aid,\n               departure_date) AS LHS\n   INNER JOIN aircraft AS RHS ON (LHS.aid = RHS.aid))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nGROUP BY T1.aid", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0021", "sql1": "\nSELECT flno,\n       origin,\n       destination\nFROM flight\nORDER BY flno\n", "sql2": "SELECT flno,\n       origin,\n       destination\nFROM Flight\nORDER BY origin", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0020", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM flight\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Flight", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0036", "sql1": "\nSELECT `flno`\nFROM\n  (SELECT `LHS`.`flno` AS `flno`,\n          `LHS`.`origin` AS `origin`,\n          `LHS`.`destination` AS `destination`,\n          `LHS`.`distance` AS `distance`,\n          `LHS`.`departure_date` AS `departure_date`,\n          `LHS`.`arrival_date` AS `arrival_date`,\n          `LHS`.`price` AS `price`,\n          `LHS`.`aid` AS `aid`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`distance` AS `distance_other`\n   FROM `flight` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `aircraft`\n      WHERE (`name` = 'Airbus A340-300')) AS RHS ON (LHS.aid = RHS.aid))\nORDER BY flno\n", "sql2": "SELECT T1.flno\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nWHERE T2.name = 'Airbus A340-300'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0041", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`aid` AS `aid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`distance` AS `distance`,\n             `RHS`.`eid` AS `eid`\n      FROM `aircraft` AS `LHS`\n      INNER JOIN `certificate` AS `RHS` ON (`LHS`.`aid` = `RHS`.`aid`)) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `employee`\n           WHERE (`name` != 'John Williams')) AS RHS\n        WHERE (LHS.eid = RHS.eid) ))\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nJOIN Aircraft AS T3 ON T3.aid = T2.aid\nWHERE T1.name = 'John Williams'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0016", "sql1": "\nSELECT eid,\n       name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employee\n      ORDER BY salary DESC)\n   LIMIT 1)\n", "sql2": "SELECT eid,\n       name\nFROM Employee\nORDER BY salary DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0031", "sql1": "\nSELECT origin,\n       n AS count___\nFROM\n  (SELECT arrival_date,\n          origin,\n          COUNT(*) AS n\n   FROM flight\n   GROUP BY arrival_date,\n            origin)\nORDER BY origin\n", "sql2": "SELECT origin,\n       count(*)\nFROM Flight\nGROUP BY origin", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0027", "sql1": "\nSELECT origin,\n       destination\nFROM flight\nWHERE (price > 300.0)\nORDER BY origin\n", "sql2": "SELECT origin,\n       destination\nFROM Flight\nWHERE price > 300", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0007", "sql1": "\nSELECT aid,\n       name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM aircraft\n      ORDER BY aid)\n   LIMIT 1)\n", "sql2": "SELECT aid,\n       name\nFROM Aircraft\nORDER BY distance DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0011", "sql1": "\nSELECT name,\n       salary\nFROM employee\nORDER BY name\n", "sql2": "SELECT name,\n       salary\nFROM Employee\nORDER BY salary", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0046", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.name AS name,\n          LHS.distance AS distance,\n          RHS.eid AS eid,\n          RHS.n AS n\n   FROM aircraft AS LHS\n   INNER JOIN\n     (SELECT eid,\n             aid,\n             COUNT(*) OVER () AS n\n      FROM certificate) AS RHS ON (LHS.aid = RHS.aid))\nWHERE (distance >= 5000.0\n       OR n <= 5)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Certificate AS T1\nJOIN Aircraft AS T2 ON T2.aid = T1.aid\nWHERE T2.distance > 5000\nGROUP BY T1.aid\nORDER BY count(*) >= 5", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employee\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employee", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_1/0026", "sql1": "\nSELECT `meanprice` AS `avg_price_`\nFROM\n  (SELECT `destination`,\n          `origin`,\n          AVG(`price`) AS `meanprice`\n   FROM\n     (SELECT *\n      FROM `flight`\n      WHERE (`origin` = 'Los Angeles'\n             AND `destination` = 'Honolulu'))\n   GROUP BY destination,\n            origin)\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM Flight\nWHERE origin = 'Los Angeles'\n  AND destination = 'Honolulu'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0025", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT manufacturer,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT code,\n             name,\n             headquarter,\n             founder,\n             revenue,\n             code_other,\n             name_other,\n             price,\n             code AS manufacturer\n      FROM\n        (SELECT LHS.code AS code,\n                LHS.name AS name,\n                LHS.headquarter AS headquarter,\n                LHS.founder AS founder,\n                LHS.revenue AS revenue,\n                RHS.code AS code_other,\n                RHS.name AS name_other,\n                RHS.price AS price\n         FROM manufacturers AS LHS\n         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))\n   GROUP BY manufacturer,\n            name)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T2.name\nFROM products AS T1\nJOIN manufacturers AS T2 ON T1.Manufacturer = T2.code\nGROUP BY T2.name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0033", "sql1": "\nSELECT name,\n       price\nFROM products\nWHERE (price >= 180.0)\nORDER BY name\n", "sql2": "SELECT name,\n       price\nFROM products\nWHERE price >= 180\nORDER BY price DESC,\n         name ASC", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0005", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `headquarter`,\n          COUNT(DISTINCT `founder`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `manufacturers`\n      WHERE (`founder` = 'Andy'))\n   GROUP BY headquarter)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM manufacturers\nWHERE founder = 'Andy'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0029", "sql1": "\nSELECT code,\n       name,\n       price,\n       manufacturer\nFROM products\nWHERE (price > 60.0\n       AND price <= 120.0)\nORDER BY code\n", "sql2": "SELECT *\nFROM products\nWHERE price BETWEEN 60 AND 120", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0028", "sql1": "\nSELECT name\nFROM products\nWHERE (price < 200.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM products\nWHERE price <= 200", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0032", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM products\nWHERE (price >= 180.0)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products\nWHERE price >= 180", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0008", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `headquarter`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `manufacturers`\n      WHERE (`headquarter` = 'Tokyo'\n             OR `headquarter` = 'Beijing')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM manufacturers\nWHERE headquarter = 'Tokyo'\n  OR headquarter = 'Beijing'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT code,\n                name,\n                headquarter,\n                founder,\n                revenue,\n                AVG(revenue) OVER () AS meanrevenue\n         FROM manufacturers)\n      ORDER BY revenue DESC)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM manufacturers\nWHERE revenue >\n    (SELECT avg(revenue)\n     FROM manufacturers)", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0003", "sql1": "\nSELECT name,\n       headquarter\nFROM manufacturers\nORDER BY name\n", "sql2": "SELECT name,\n       headquarter\nFROM manufacturers\nORDER BY revenue DESC", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0019", "sql1": "\nSELECT name,\n       revenue AS max_revenue_,\n       headquarter\nFROM\n  (SELECT headquarter,\n          name,\n          MAX(revenue) AS revenue\n   FROM manufacturers\n   GROUP BY headquarter,\n            name)\nORDER BY name\n", "sql2": "SELECT name,\n       max(revenue),\n       Headquarter\nFROM manufacturers\nGROUP BY Headquarter", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0035", "sql1": "\nSELECT meanprice AS avg_price_,\n       manufacturer\nFROM\n  (SELECT manufacturer,\n          AVG(price) AS meanprice\n   FROM products\n   GROUP BY manufacturer)\nORDER BY avg_price_\n", "sql2": "SELECT AVG(Price),\n       Manufacturer\nFROM Products\nGROUP BY Manufacturer", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0018", "sql1": "\nSELECT sumrevenue AS sum_revenue_,\n       founder\nFROM\n  (SELECT founder,\n          SUM(revenue) AS sumrevenue\n   FROM manufacturers\n   GROUP BY founder)\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue),\n       founder\nFROM manufacturers\nGROUP BY founder", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0038", "sql1": "\nSELECT name,\n       price\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM products\n      ORDER BY price)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       price\nFROM Products\nORDER BY price ASC\nLIMIT 1", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0002", "sql1": "\nSELECT `headquarter`\nFROM `manufacturers`\nWHERE (`founder` = 'James')\nORDER BY headquarter\n", "sql2": "SELECT headquarter\nFROM manufacturers\nWHERE founder = 'James'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0014", "sql1": "\nSELECT name,\n       headquarter,\n       revenue\nFROM manufacturers\nORDER BY name\n", "sql2": "SELECT name,\n       headquarter,\n       revenue\nFROM manufacturers\nORDER BY revenue DESC", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0001", "sql1": "\nSELECT `founder`\nFROM `manufacturers`\nWHERE (`name` = 'Sony')\nORDER BY founder\n", "sql2": "SELECT founder\nFROM manufacturers\nWHERE name = 'Sony'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0040", "sql1": "\nSELECT code,\n       name,\n       price AS min_price_\nFROM\n  (SELECT LHS.name AS name,\n          LHS.price AS price,\n          RHS.code AS code,\n          RHS.manufacturer AS manufacturer\n   FROM\n     (SELECT name,\n             MIN(price) AS price\n      FROM products\n      GROUP BY name) AS LHS\n   LEFT JOIN products AS RHS ON (LHS.name = RHS.name\n                                    AND LHS.price = RHS.price))\nORDER BY code\n", "sql2": "SELECT code,\n       name,\n       min(price)\nFROM products\nGROUP BY name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0021", "sql1": "\nSELECT meanprice AS avg_t1_price_,\n       name\nFROM\n  (SELECT code,\n          name,\n          AVG(price) AS meanprice\n   FROM\n     (SELECT code,\n             name,\n             headquarter,\n             founder,\n             revenue,\n             code_other,\n             name_other,\n             price,\n             code AS manufacturer\n      FROM\n        (SELECT LHS.code AS code,\n                LHS.name AS name,\n                LHS.headquarter AS headquarter,\n                LHS.founder AS founder,\n                LHS.revenue AS revenue,\n                RHS.code AS code_other,\n                RHS.name AS name_other,\n                RHS.price AS price\n         FROM manufacturers AS LHS\n         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))\n   GROUP BY code,\n            name)\nORDER BY avg_t1_price_\n", "sql2": "SELECT avg(T1.price),\n       T2.name\nFROM products AS T1\nJOIN manufacturers AS T2 ON T1.Manufacturer = T2.code\nGROUP BY T2.name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0020", "sql1": "\nSELECT sumrevenue AS sum_revenue_,\n       name\nFROM\n  (SELECT name,\n          SUM(revenue) AS sumrevenue\n   FROM manufacturers\n   GROUP BY name)\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue),\n       name\nFROM manufacturers\nGROUP BY name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0036", "sql1": "\nSELECT meanprice AS avg_t1_price_,\n       name\nFROM\n  (SELECT code,\n          name,\n          AVG(price) AS meanprice\n   FROM\n     (SELECT code,\n             name,\n             headquarter,\n             founder,\n             revenue,\n             code_other,\n             name_other,\n             price,\n             code AS manufacturer\n      FROM\n        (SELECT LHS.code AS code,\n                LHS.name AS name,\n                LHS.headquarter AS headquarter,\n                LHS.founder AS founder,\n                LHS.revenue AS revenue,\n                RHS.code AS code_other,\n                RHS.name AS name_other,\n                RHS.price AS price\n         FROM manufacturers AS LHS\n         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))\n   GROUP BY code,\n            name)\nORDER BY avg_t1_price_\n", "sql2": "SELECT avg(T1.Price),\n       T2.name\nFROM products AS T1\nJOIN Manufacturers AS T2 ON T1.manufacturer = T2.code\nGROUP BY T2.name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0031", "sql1": "\nSELECT DISTINCT AVG(price) OVER () AS avg_price_\nFROM products\nWHERE (manufacturer = 2\n       OR price <= 2.0)\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM products\nWHERE Manufacturer = 2", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0027", "sql1": "\nSELECT name,\n       price\nFROM products\nORDER BY name\n", "sql2": "SELECT name,\n       price\nFROM products", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0007", "sql1": "\nSELECT headquarter\nFROM manufacturers\nORDER BY headquarter\n", "sql2": "SELECT DISTINCT headquarter\nFROM manufacturers", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0011", "sql1": "\nSELECT DISTINCT SUM(`revenue`) OVER () AS `sum_revenue_`\nFROM `manufacturers`\nWHERE (`headquarter` = 'Tokyo'\n       OR `headquarter` = 'Taiwan')\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue)\nFROM manufacturers\nWHERE Headquarter = 'Tokyo'\n  OR Headquarter = 'Taiwan'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0010", "sql1": "\nSELECT name\nFROM manufacturers\nWHERE (revenue >= 100.0\n       AND revenue < 150.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM manufacturers\nWHERE revenue BETWEEN 100 AND 150", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0006", "sql1": "\nSELECT `revenue` AS `sum_revenue_`\nFROM\n  (SELECT `code`,\n          `name`,\n          `headquarter`,\n          `founder`,\n          `revenue`,\n          SUM(`revenue`) OVER () AS `sumrevenue`\n   FROM `manufacturers`)\nWHERE (`headquarter` = 'Austin'\n       OR sumrevenue <= revenue)\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue)\nFROM manufacturers\nWHERE headquarter = 'Austin'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0026", "sql1": "\nSELECT name\nFROM products\nORDER BY name\n", "sql2": "SELECT Name\nFROM Products", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/manufactory_1/0030", "sql1": "\nSELECT meanprice AS avg_price_\nFROM\n  (SELECT AVG(price) AS meanprice\n   FROM products)\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM products", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0009", "sql1": "\nSELECT `other_details`\nFROM `locations`\nWHERE (`location_name` = 'UK Gallery')\nORDER BY other_details\n", "sql2": "SELECT Other_Details\nFROM LOCATIONS\nWHERE Location_Name = 'UK Gallery'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0025", "sql1": "\nSELECT `name`,\n       `visit_date`\nFROM\n  (SELECT `LHS`.`tourist_id` AS `tourist_id`,\n          `LHS`.`tourist_details` AS `tourist_details`,\n          `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`visit_id` AS `visit_id`,\n          `RHS`.`visit_date` AS `visit_date`,\n          `RHS`.`visit_details` AS `visit_details`\n   FROM\n     (SELECT `LHS`.`tourist_id` AS `tourist_id`,\n             `LHS`.`tourist_details` AS `tourist_details`,\n             `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n             `RHS`.`attraction_type_code` AS `attraction_type_code`,\n             `RHS`.`location_id` AS `location_id`,\n             `RHS`.`how_to_get_there` AS `how_to_get_there`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`description` AS `description`,\n             `RHS`.`opening_hours` AS `opening_hours`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `visitors` AS `LHS`\n      CROSS JOIN `tourist_attractions` AS `RHS`) AS `LHS`\n   INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_id` = `RHS`.`tourist_id`\n                                       AND `LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`))\nWHERE (`tourist_details` = 'Vincent'\n       OR `tourist_details` = 'Vivian')\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T3.Visit_Date\nFROM Tourist_Attractions AS T1\nJOIN VISITORS AS T2\nJOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID\nAND T2.Tourist_ID = T3.Tourist_ID\nWHERE T2.Tourist_Details = 'Vincent'\n  OR T2.Tourist_Details = 'Vivian'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0033", "sql1": "\nSELECT how_to_get_there,\n       n AS count___\nFROM\n  (SELECT how_to_get_there,\n          COUNT(*) AS n\n   FROM tourist_attractions\n   GROUP BY how_to_get_there)\nORDER BY how_to_get_there\n", "sql2": "SELECT How_to_Get_There,\n       COUNT(*)\nFROM Tourist_Attractions\nGROUP BY How_to_Get_There", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0013", "sql1": "\nSELECT `name`\nFROM `tourist_attractions`\nWHERE (`how_to_get_there` = 'bus')\nORDER BY name\n", "sql2": "SELECT Name\nFROM TOURIST_ATTRACTIONS\nWHERE How_to_Get_There = 'bus'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0005", "sql1": "\nSELECT tourist_details\nFROM visitors\nORDER BY tourist_details\n", "sql2": "SELECT Tourist_Details\nFROM VISITORS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0029", "sql1": "\nSELECT other_hotel_details\nFROM\n  (SELECT LHS.hotel_id AS hotel_id,\n          LHS.star_rating_code AS star_rating_code,\n          LHS.pets_allowed_yn AS pets_allowed_yn,\n          LHS.price_range AS price_range,\n          LHS.other_hotel_details AS other_hotel_details,\n          RHS.star_rating_code AS star_rating_code_other,\n          RHS.price_range AS price_range_other,\n          RHS.other_hotel_details AS other_hotel_details_other\n   FROM hotels AS LHS\n   INNER JOIN hotels AS RHS ON (LHS.hotel_id = RHS.hotel_id\n                                   AND LHS.star_rating_code = RHS.pets_allowed_yn))\nORDER BY other_hotel_details\n", "sql2": "SELECT other_hotel_details\nFROM HOTELS\nORDER BY price_range DESC\nLIMIT 3", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0028", "sql1": "\nSELECT hotel_id,\n       star_rating_code\nFROM hotels\nORDER BY hotel_id\n", "sql2": "SELECT hotel_id,\n       star_rating_code\nFROM HOTELS\nORDER BY price_range ASC", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0004", "sql1": "\nSELECT name,\n       other_details\nFROM staff\nORDER BY name\n", "sql2": "SELECT Name,\n       Other_Details\nFROM Staff", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0012", "sql1": "\nSELECT visit_date\nFROM visits\nORDER BY visit_date\n", "sql2": "SELECT DISTINCT Visit_Date\nFROM VISITS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0024", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `LHS`.`visit_id` AS `visit_id`,\n          `LHS`.`tourist_id` AS `tourist_id`,\n          `LHS`.`visit_date` AS `visit_date`,\n          `LHS`.`visit_details` AS `visit_details`,\n          `RHS`.`tourist_details` AS `tourist_details`\n   FROM\n     (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n             `LHS`.`attraction_type_code` AS `attraction_type_code`,\n             `LHS`.`location_id` AS `location_id`,\n             `LHS`.`how_to_get_there` AS `how_to_get_there`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`description` AS `description`,\n             `LHS`.`opening_hours` AS `opening_hours`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`visit_id` AS `visit_id`,\n             `RHS`.`tourist_id` AS `tourist_id`,\n             `RHS`.`visit_date` AS `visit_date`,\n             `RHS`.`visit_details` AS `visit_details`\n      FROM `tourist_attractions` AS `LHS`\n      INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `visitors`\n      WHERE (`tourist_details` = 'Vincent')) AS RHS ON (LHS.tourist_id = RHS.tourist_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nJOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID\nWHERE T3.Tourist_Details = 'Vincent'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0008", "sql1": "\nSELECT `address`\nFROM `locations`\nWHERE (`location_name` = 'UK Gallery')\nORDER BY address\n", "sql2": "SELECT Address\nFROM LOCATIONS\nWHERE Location_Name = 'UK Gallery'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0042", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM visitors AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM visits AS RHS\n        WHERE (LHS.tourist_id = RHS.tourist_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Visitors\nWHERE Tourist_ID NOT IN\n    (SELECT Tourist_ID\n     FROM Visits)", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0015", "sql1": "\nSELECT star_rating_description\nFROM\n  (SELECT *\n   FROM\n     (SELECT LHS.hotel_id AS hotel_id,\n             LHS.star_rating_code AS star_rating_code,\n             LHS.pets_allowed_yn AS pets_allowed_yn,\n             LHS.price_range AS price_range,\n             LHS.other_hotel_details AS other_hotel_details,\n             RHS.star_rating_description AS star_rating_description\n      FROM hotels AS LHS\n      LEFT JOIN ref_hotel_star_ratings AS RHS ON (LHS.star_rating_code = RHS.star_rating_code)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM hotels\n           WHERE (price_range <= 10000.0)) AS RHS\n        WHERE (LHS.price_range = RHS.price_range\n               AND LHS.star_rating_code = RHS.star_rating_code) ))\nORDER BY star_rating_description\n", "sql2": "SELECT T2.star_rating_description\nFROM HOTELS AS T1\nJOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code\nWHERE T1.price_range > 10000", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0003", "sql1": "\nSELECT location_name\nFROM locations\nORDER BY location_name\n", "sql2": "SELECT DISTINCT Location_Name\nFROM LOCATIONS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0039", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`location_name` AS `location_name`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN `locations` AS `RHS` ON (`LHS`.`location_id` = `RHS`.`location_id`))\nWHERE (`address` = '254 Ottilie Junction'\n       OR `how_to_get_there` = 'bus')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM Locations AS T1\nJOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID\nWHERE T1.Address = '254 Ottilie Junction'\n  OR T2.How_to_Get_There = 'bus'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0019", "sql1": "\nSELECT description AS royal_family_details,\n       how_to_get_there\nFROM\n  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,\n          LHS.attraction_type_code AS attraction_type_code,\n          LHS.location_id AS location_id,\n          LHS.how_to_get_there AS how_to_get_there,\n          LHS.name AS name,\n          LHS.description AS description,\n          LHS.opening_hours AS opening_hours,\n          LHS.other_details AS other_details,\n          RHS.royal_family_details AS royal_family_details\n   FROM tourist_attractions AS LHS\n   INNER JOIN royal_family AS RHS ON (LHS.tourist_attraction_id = RHS.royal_family_id))\nORDER BY royal_family_details\n", "sql2": "SELECT T1.Royal_Family_Details,\n       T2.How_to_Get_There\nFROM ROYAL_FAMILY AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0023", "sql1": "\nSELECT `visit_date`,\n       `visit_details`\nFROM\n  (SELECT `LHS`.`tourist_id` AS `tourist_id`,\n          `LHS`.`tourist_details` AS `tourist_details`,\n          `RHS`.`visit_id` AS `visit_id`,\n          `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `RHS`.`visit_date` AS `visit_date`,\n          `RHS`.`visit_details` AS `visit_details`\n   FROM `visitors` AS `LHS`\n   INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_id` = `RHS`.`tourist_id`))\nWHERE (`tourist_details` = 'Vincent')\nORDER BY visit_date\n", "sql2": "SELECT T2.Visit_Date,\n       T2.Visit_Details\nFROM VISITORS AS T1\nJOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID\nWHERE T1.Tourist_Details = 'Vincent'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0034", "sql1": "\nSELECT name,\n       tourist_attraction_id,\n       n AS count___\nFROM\n  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,\n          LHS.n AS n,\n          RHS.attraction_type_code AS attraction_type_code,\n          RHS.location_id AS location_id,\n          RHS.how_to_get_there AS how_to_get_there,\n          RHS.name AS name,\n          RHS.description AS description,\n          RHS.opening_hours AS opening_hours,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT tourist_attraction_id,\n             COUNT(*) AS n\n      FROM visits\n      GROUP BY tourist_attraction_id) AS LHS\n   LEFT JOIN tourist_attractions AS RHS ON (LHS.tourist_attraction_id = RHS.tourist_attraction_id))\nORDER BY name\n\n[   639.246][MainProcess][INFO] Statistics:\n[   639.246][MainProcess][INFO] \tAttempted programs: 63 (approx)\n[   639.247][MainProcess][INFO] \t\tRejected: 62 (approx)\n[   639.247][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   639.247][MainProcess][INFO] \t\tEmpty outputs: 23 (36.5%) (approx)\n[   639.247][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   639.247][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   639.247][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   639.247][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   639.247][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   639.247][MainProcess][INFO] \tTotal time spent in enumerator: 2.967804 (approx)\n[   639.247][MainProcess][INFO] \t\tEnumerated 21.227814 programs/s avg. (just enumeration time)\n[   639.247][MainProcess][INFO] \t\tEnumerated 0.098868 programs/s avg. (overall)\n[   639.247][MainProcess][INFO] \tTotal time spent in evaluation & testing: 312.999381 (approx)\n[   639.247][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 7.642901 (approx)\n[   639.248][MainProcess][INFO] Solution found: [summarise(input1, 'n = n()', \"'tourist_attraction_id'\"), left_join(line0, input0)]\n[   639.248][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 164, in endr\n    rlib.Rf_endEmbeddedR(fatal)\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT T1.Name,\n       T2.Tourist_Attraction_ID,\n       COUNT(*)\nFROM Tourist_Attractions AS T1\nJOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nGROUP BY T2.Tourist_Attraction_ID", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0022", "sql1": "\nSELECT DISTINCT `market_details`\nFROM\n  (SELECT `LHS`.`market_id` AS `market_id`,\n          `LHS`.`market_details` AS `market_details`,\n          `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `RHS`.`attraction_type_code` AS `attraction_type_code`,\n          `RHS`.`location_id` AS `location_id`,\n          `RHS`.`how_to_get_there` AS `how_to_get_there`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`description` AS `description`,\n          `RHS`.`opening_hours` AS `opening_hours`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `street_markets` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `tourist_attractions`\n      WHERE (`how_to_get_there` != 'walk'\n             AND `how_to_get_there` = 'bus')) AS RHS)\nORDER BY market_details\n", "sql2": "SELECT T1.Market_Details\nFROM Street_Markets AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID\nWHERE T2.How_to_Get_There = 'walk'\n  OR T2.How_to_Get_There = 'bus'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0018", "sql1": "\nSELECT `name`,\n       `description`\nFROM\n  (SELECT *\n   FROM `photos` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `tourist_attractions`\n           WHERE (`name` != 'film festival')) AS RHS\n        WHERE (LHS.tourist_attraction_id = RHS.tourist_attraction_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T1.Description\nFROM PHOTOS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nWHERE T2.Name = 'film festival'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0038", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `LHS`.`feature_id` AS `feature_id`,\n          `RHS`.`feature_details` AS `feature_details`\n   FROM\n     (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n             `LHS`.`attraction_type_code` AS `attraction_type_code`,\n             `LHS`.`location_id` AS `location_id`,\n             `LHS`.`how_to_get_there` AS `how_to_get_there`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`description` AS `description`,\n             `LHS`.`opening_hours` AS `opening_hours`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`feature_id` AS `feature_id`\n      FROM `tourist_attractions` AS `LHS`\n      INNER JOIN `tourist_attraction_features` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `features`\n      WHERE (`feature_details` = 'park'\n             OR `feature_details` = 'shopping')) AS RHS ON (LHS.feature_id = RHS.feature_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id\nJOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID\nWHERE T3.feature_Details = 'park'\nUNION\nSELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id\nJOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID\nWHERE T3.feature_Details = 'shopping'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0002", "sql1": "\nSELECT price_range\nFROM hotels\nORDER BY price_range\n", "sql2": "SELECT price_range\nFROM HOTELS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0014", "sql1": "\nSELECT `name`,\n       `description` AS `opening_hours`\nFROM `tourist_attractions`\nWHERE (`how_to_get_there` = 'bus'\n       OR `how_to_get_there` = 'walk')\nORDER BY name\n", "sql2": "SELECT Name,\n       Opening_Hours\nFROM TOURIST_ATTRACTIONS\nWHERE How_to_Get_There = 'bus'\n  OR How_to_Get_There = 'walk'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM hotels\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM HOTELS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0017", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`photo_id` AS `photo_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`description` AS `description_other`,\n          `RHS`.`filename` AS `filename`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `photos`\n      WHERE (`name` = 'game1')) AS RHS ON (LHS.tourist_attraction_id = RHS.tourist_attraction_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM PHOTOS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nWHERE T1.Name = 'game1'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0037", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`location_name` AS `location_name`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN `locations` AS `RHS` ON (`LHS`.`location_id` = `RHS`.`location_id`))\nWHERE (`address` = '660 Shea Crescent'\n       OR `how_to_get_there` = 'walk')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM Locations AS T1\nJOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID\nWHERE T1.Address = '660 Shea Crescent'\n  OR T2.How_to_Get_There = 'walk'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0021", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`staff_id` AS `staff_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN `staff` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`))\nWHERE (`name` = 'US museum')\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM STAFF AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nWHERE T2.Name = 'US museum'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0020", "sql1": "\nSELECT `shop_details`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`shop_details` AS `shop_details`\n   FROM\n     (SELECT *\n      FROM `tourist_attractions`\n      WHERE (`how_to_get_there` = 'walk')) AS LHS\n   INNER JOIN shops AS RHS ON (LHS.tourist_attraction_id = RHS.shop_id))\nORDER BY shop_details\n", "sql2": "SELECT T1.Shop_Details\nFROM SHOPS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID\nWHERE T2.How_to_Get_There = 'walk'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0041", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_id` AS `tourist_id`,\n          `LHS`.`tourist_details` AS `tourist_details`,\n          `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`visit_id` AS `visit_id`,\n          `RHS`.`visit_date` AS `visit_date`,\n          `RHS`.`visit_details` AS `visit_details`\n   FROM\n     (SELECT `LHS`.`tourist_id` AS `tourist_id`,\n             `LHS`.`tourist_details` AS `tourist_details`,\n             `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n             `RHS`.`attraction_type_code` AS `attraction_type_code`,\n             `RHS`.`location_id` AS `location_id`,\n             `RHS`.`how_to_get_there` AS `how_to_get_there`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`description` AS `description`,\n             `RHS`.`opening_hours` AS `opening_hours`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `visitors` AS `LHS`\n      CROSS JOIN `tourist_attractions` AS `RHS`) AS `LHS`\n   INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_id` = `RHS`.`tourist_id`\n                                       AND `LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`))\nWHERE (`tourist_details` = 'Alison'\n       AND `tourist_details` != 'Rosalind')\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN VISITORS AS T2\nJOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID\nAND T2.Tourist_ID = T3.Tourist_ID\nWHERE T2.Tourist_Details = 'Alison'\nEXCEPT\nSELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN VISITORS AS T2\nJOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID\nAND T2.Tourist_ID = T3.Tourist_ID\nWHERE T2.Tourist_Details = 'Rosalind'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0016", "sql1": "\nSELECT DISTINCT museum_details,\n                description AS opening_hours\nFROM\n  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,\n          LHS.attraction_type_code AS attraction_type_code,\n          LHS.location_id AS location_id,\n          LHS.how_to_get_there AS how_to_get_there,\n          LHS.name AS name,\n          LHS.description AS description,\n          LHS.opening_hours AS opening_hours,\n          LHS.other_details AS other_details,\n          RHS.museum_id AS museum_id,\n          RHS.museum_details AS museum_details\n   FROM tourist_attractions AS LHS\n   CROSS JOIN museums AS RHS)\nORDER BY museum_details\n", "sql2": "SELECT T1.Museum_Details,\n       T2.Opening_Hours\nFROM MUSEUMS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0031", "sql1": "\nSELECT how_to_get_there\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT how_to_get_there,\n                opening_hours,\n                COUNT(*) AS n\n         FROM tourist_attractions\n         GROUP BY how_to_get_there,\n                  opening_hours)\n      ORDER BY opening_hours DESC)\n   LIMIT 1)\n\n[   718.542][MainProcess][INFO] Statistics:\n[   718.543][MainProcess][INFO] \tAttempted programs: 1434 (approx)\n[   718.543][MainProcess][INFO] \t\tRejected: 1433 (approx)\n[   718.543][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   718.543][MainProcess][INFO] \t\tEmpty outputs: 1188 (82.8%) (approx)\n[   718.543][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   718.543][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   718.543][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   718.543][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   718.543][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   718.543][MainProcess][INFO] \tTotal time spent in enumerator: 242.453890 (approx)\n[   718.543][MainProcess][INFO] \t\tEnumerated 5.914527 programs/s avg. (just enumeration time)\n[   718.543][MainProcess][INFO] \t\tEnumerated 2.002775 programs/s avg. (overall)\n[   718.543][MainProcess][INFO] \tTotal time spent in evaluation & testing: 317.009702 (approx)\n[   718.543][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 44.429086 (approx)\n[   718.543][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', \"'how_to_get_there','opening_hours'\"), limit(line0, 'desc(opening_hours)')]\n[   718.543][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 162, in endr\n    rlib.R_CleanTempDir()\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT How_to_Get_There\nFROM Tourist_Attractions\nGROUP BY How_to_Get_There\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT name) OVER () AS count_distinct_name_\nFROM photos\nORDER BY count_distinct_name_\n", "sql2": "SELECT count(DISTINCT Name)\nFROM PHOTOS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0006", "sql1": "\nSELECT price_range\nFROM hotels\nWHERE (star_rating_code = 5)\nORDER BY price_range\n", "sql2": "SELECT price_range\nFROM HOTELS\nWHERE star_rating_code = '5'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Theme_park/0030", "sql1": "\nSELECT other_hotel_details,\n       star_rating_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM hotels\n      ORDER BY price_range)\n   LIMIT 3)\n", "sql2": "SELECT other_hotel_details,\n       star_rating_code\nFROM HOTELS\nORDER BY price_range ASC\nLIMIT 3", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/race_track/0009", "sql1": "\nSELECT DISTINCT CLASS\nFROM race\nORDER BY CLASS\n", "sql2": "SELECT DISTINCT CLASS\nFROM race", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0004", "sql1": "\nSELECT name,\n       LOCATION,\n       seating\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM track\n      ORDER BY year_opened DESC)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       LOCATION,\n       seating\nFROM track\nORDER BY year_opened DESC\nLIMIT 1", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0012", "sql1": "\nSELECT DISTINCT CLASS\nFROM\n  (SELECT LHS.class AS CLASS,\n          LHS.track_id AS track_id,\n          LHS.n AS n,\n          RHS.class AS class_other,\n          RHS.track_id AS track_id_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT CLASS,\n             track_id,\n             COUNT(*) AS n\n      FROM race\n      GROUP BY CLASS,\n               track_id) AS LHS\n   CROSS JOIN\n     (SELECT CLASS,\n             track_id,\n             COUNT(*) AS n\n      FROM race\n      GROUP BY CLASS,\n               track_id) AS RHS)\nWHERE (n > n_other)\nORDER BY CLASS\n", "sql2": "SELECT CLASS\nFROM race\nGROUP BY CLASS\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM race\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM race", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0003", "sql1": "\nSELECT name,\n       seating\nFROM track\nWHERE (year_opened >= 2000.0)\nORDER BY name\n", "sql2": "SELECT name,\n       seating\nFROM track\nWHERE year_opened > 2000\nORDER BY seating", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0002", "sql1": "\nSELECT name,\n       LOCATION\nFROM track\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION\nFROM track", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM track\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM track", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0007", "sql1": "\nSELECT LOCATION\nFROM track\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM track", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0011", "sql1": "\nSELECT CLASS,\n       n AS count___\nFROM\n  (SELECT CLASS,\n          COUNT(*) AS n\n   FROM race\n   GROUP BY CLASS)\nORDER BY CLASS\n", "sql2": "SELECT CLASS,\n       count(*)\nFROM race\nGROUP BY CLASS", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/race_track/0010", "sql1": "\nSELECT name,\n       CLASS, date\nFROM race\nORDER BY name\n", "sql2": "SELECT name,\n       CLASS , date\nFROM race", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0048", "sql1": "\nSELECT state\nFROM\n  (SELECT cname,\n          state,\n          enr,\n          MAX(enr) OVER () AS maxenr\n   FROM college)\nWHERE (maxenr > enr)\nORDER BY state\n", "sql2": "SELECT DISTINCT state\nFROM college\nWHERE enr <\n    (SELECT max(enr)\n     FROM college)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0009", "sql1": "\nSELECT n_distinct AS count_distinct_ppos_\nFROM\n  (SELECT COUNT(DISTINCT ppos) AS n_distinct\n   FROM tryout)\nORDER BY count_distinct_ppos_\n", "sql2": "SELECT count(DISTINCT pPos)\nFROM tryout", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0025", "sql1": "\nSELECT cname,\n       state,\n       enr AS min_enr_\nFROM\n  (SELECT cname,\n          state,\n          MIN(enr) AS enr\n   FROM college\n   GROUP BY cname,\n            state)\nORDER BY cname\n", "sql2": "SELECT cName,\n       state,\n       min(enr)\nFROM college\nGROUP BY state", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0033", "sql1": "\nSELECT `state`\nFROM\n  (SELECT `LHS`.`cname` AS `cname`,\n          `LHS`.`state` AS `state`,\n          `LHS`.`enr` AS `enr`,\n          `LHS`.`pid` AS `pid`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`pname` AS `pname`,\n          `RHS`.`ycard` AS `ycard`,\n          `RHS`.`hs` AS `hs`\n   FROM\n     (SELECT `LHS`.`cname` AS `cname`,\n             `LHS`.`state` AS `state`,\n             `LHS`.`enr` AS `enr`,\n             `RHS`.`pid` AS `pid`,\n             `RHS`.`ppos` AS `ppos`,\n             `RHS`.`decision` AS `decision`\n      FROM `college` AS `LHS`\n      INNER JOIN `tryout` AS `RHS` ON (`LHS`.`cname` = `RHS`.`cname`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `player`\n      WHERE (`pname` = 'Charles')) AS RHS ON (LHS.pid = RHS.pid))\nORDER BY state\n", "sql2": "SELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nJOIN player AS T3 ON T2.pID = T3.pID\nWHERE T3.pName = 'Charles'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0044", "sql1": "\nSELECT COUNT(*) OVER () AS `count___`\nFROM `tryout`\nWHERE (`ppos` != 'goalie'\n       AND `ppos` != 'mid')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM\n  (SELECT cName\n   FROM tryout\n   WHERE pPos = 'goalie' INTERSECT\n     SELECT cName\n     FROM tryout WHERE pPos = 'mid')", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0013", "sql1": "\nSELECT `enr` AS `avg_enr_`\nFROM `college`\nWHERE (`state` = 'FL')\nORDER BY avg_enr_\n", "sql2": "SELECT avg(enr)\nFROM College\nWHERE state = 'FL'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0005", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM college\n      WHERE (enr >= 15000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM College\nWHERE enr > 15000", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0052", "sql1": "\nSELECT n_distinct AS count_distinct_state_\nFROM\n  (SELECT COUNT(DISTINCT enr) AS n_distinct\n   FROM\n     (SELECT cname,\n             state,\n             enr,\n             cname_other,\n             state_other,\n             enr_other,\n             AVG(enr) OVER () AS meanenr\n      FROM\n        (SELECT *\n         FROM\n           (SELECT LHS.cname AS cname,\n                   LHS.state AS state,\n                   LHS.enr AS enr,\n                   RHS.cname AS cname_other,\n                   RHS.state AS state_other,\n                   RHS.enr AS enr_other\n            FROM college AS LHS\n            CROSS JOIN college AS RHS)\n         WHERE (state != state_other\n                AND enr > enr_other))))\nORDER BY count_distinct_state_\n", "sql2": "SELECT count(DISTINCT state)\nFROM college\nWHERE enr >\n    (SELECT avg(enr)\n     FROM college)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0028", "sql1": "\nSELECT `pname`,\n       `cname`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`pname` AS `pname`,\n          `RHS`.`ycard` AS `ycard`,\n          `RHS`.`hs` AS `hs`\n   FROM `tryout` AS `LHS`\n   INNER JOIN `player` AS `RHS` ON (`LHS`.`pid` = `RHS`.`pid`))\nWHERE (`decision` = 'yes')\nORDER BY pname\n", "sql2": "SELECT T1.pName,\n       T2.cName\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0053", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_state_\nFROM\n  (SELECT cname,\n          COUNT(DISTINCT state) AS n_distinct\n   FROM\n     (SELECT cname,\n             state,\n             enr,\n             AVG(enr) OVER () AS meanenr\n      FROM college)\n   GROUP BY cname)\nORDER BY count_distinct_state_\n", "sql2": "SELECT count(DISTINCT state)\nFROM college\nWHERE enr <\n    (SELECT avg(enr)\n     FROM college)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0004", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM player\n      WHERE (hs > 1000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Player\nWHERE HS > 1000", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0045", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `tryout`\n         WHERE (`ppos` = 'mid'\n                OR `ppos` = 'goalie'))\n      ORDER BY cname DESC)\n   LIMIT 1)\n", "sql2": "SELECT cName\nFROM tryout\nWHERE pPos = 'mid'\nEXCEPT\nSELECT cName\nFROM tryout\nWHERE pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0032", "sql1": "\nSELECT `pname`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`pname` AS `pname`,\n          `LHS`.`ycard` AS `ycard`,\n          `LHS`.`hs` AS `hs`,\n          `RHS`.`cname` AS `cname`,\n          `RHS`.`ppos` AS `ppos`,\n          `RHS`.`decision` AS `decision`\n   FROM `player` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `tryout`\n      WHERE (`decision` = 'yes'\n             AND `ppos` = 'striker')) AS RHS ON (LHS.pid = RHS.pid))\nORDER BY pname\n", "sql2": "SELECT T1.pName\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T2.decision = 'yes'\n  AND T2.pPos = 'striker'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0024", "sql1": "\nSELECT cname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM college\n      ORDER BY enr DESC)\n   LIMIT 3)\n", "sql2": "SELECT cName\nFROM college\nORDER BY enr DESC\nLIMIT 3", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0008", "sql1": "\nSELECT n_distinct AS count_distinct_cname_\nFROM\n  (SELECT COUNT(DISTINCT cname) AS n_distinct\n   FROM tryout)\nORDER BY count_distinct_cname_\n", "sql2": "SELECT count(DISTINCT cName)\nFROM tryout", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0049", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM\n           (SELECT `cname`,\n                   `state`,\n                   `enr`,\n                   MIN(`enr`) OVER () AS `minenr`\n            FROM `college`)\n         WHERE (`state` != 'FL'\n                OR minenr = enr))\n      ORDER BY enr DESC)\n   LIMIT 1)\n", "sql2": "SELECT DISTINCT cName\nFROM college\nWHERE enr >\n    (SELECT min(enr)\n     FROM college\n     WHERE state = 'FL')", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0042", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `tryout`\n         WHERE (`ppos` = 'goalie'\n                OR `ppos` = 'mid'))\n      ORDER BY decision)\n   LIMIT 1)\n", "sql2": "SELECT cName\nFROM tryout\nWHERE pPos = 'goalie' INTERSECT\n  SELECT cName\n  FROM tryout WHERE pPos = 'mid'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM college\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM College", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0019", "sql1": "\nSELECT `pname`\nFROM `player`\nWHERE (`ycard` = 'yes')\nORDER BY pname\n", "sql2": "SELECT pName\nFROM Player\nWHERE yCard = 'yes'\nORDER BY HS DESC", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0023", "sql1": "\nSELECT hs AS min_t2_hs_,\n       ppos\nFROM\n  (SELECT ppos,\n          MIN(hs) AS hs\n   FROM\n     (SELECT LHS.pid AS pid,\n             LHS.pname AS pname,\n             LHS.ycard AS ycard,\n             LHS.hs AS hs,\n             RHS.cname AS cname,\n             RHS.ppos AS ppos,\n             RHS.decision AS decision\n      FROM player AS LHS\n      INNER JOIN tryout AS RHS ON (LHS.pid = RHS.pid))\n   GROUP BY ppos)\nORDER BY min_t2_hs_\n", "sql2": "SELECT min(T2.HS),\n       T1.pPos\nFROM tryout AS T1\nJOIN player AS T2 ON T1.pID = T2.pID\nGROUP BY T1.pPos", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0022", "sql1": "\nSELECT n AS count___,\n       cname\nFROM\n  (SELECT cname,\n          COUNT(*) AS n\n   FROM tryout\n   GROUP BY cname)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       cName\nFROM tryout\nGROUP BY cName\nORDER BY count(*) DESC", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0018", "sql1": "\nSELECT cname\nFROM college\nWHERE (enr > 18000.0)\nORDER BY cname\n", "sql2": "SELECT cName\nFROM College\nWHERE enr > 18000\nORDER BY cName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0038", "sql1": "\nSELECT `cname`\nFROM `tryout`\nWHERE (`decision` = 'yes'\n       AND `ppos` = 'goalie')\nORDER BY cname\n", "sql2": "SELECT cName\nFROM tryout\nWHERE decision = 'yes'\n  AND pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0002", "sql1": "\nSELECT DISTINCT AVG(enr) OVER () AS avg_enr_\nFROM college\nORDER BY avg_enr_\n", "sql2": "SELECT avg(enr)\nFROM College", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0014", "sql1": "\nSELECT pname\nFROM player\nWHERE (hs >= 500.0\n       AND hs < 1500.0)\nORDER BY pname\n", "sql2": "SELECT pName\nFROM Player\nWHERE HS BETWEEN 500 AND 1500", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0001", "sql1": "\nSELECT DISTINCT SUM(enr) OVER () AS sum_enr_\nFROM college\nORDER BY sum_enr_\n", "sql2": "SELECT sum(enr)\nFROM College", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0017", "sql1": "\nSELECT cname,\n       state,\n       enr\nFROM college\nORDER BY cname\n", "sql2": "SELECT *\nFROM College\nORDER BY enr", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0040", "sql1": "\nSELECT `state`,\n       `enr`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`enr` AS `enr`\n   FROM\n     (SELECT *\n      FROM `tryout`\n      WHERE (`decision` = 'yes')) AS LHS\n   INNER JOIN college AS RHS ON (LHS.cname = RHS.cname))\nORDER BY state\n", "sql2": "SELECT DISTINCT T1.state,\n                T1.enr\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0021", "sql1": "\nSELECT DISTINCT ppos\nFROM\n  (SELECT LHS.pid AS pid,\n          LHS.ppos AS ppos,\n          LHS.n AS n,\n          RHS.pid AS pid_other,\n          RHS.ppos AS ppos_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT pid,\n             ppos,\n             COUNT(*) AS n\n      FROM tryout\n      GROUP BY pid,\n               ppos) AS LHS\n   CROSS JOIN\n     (SELECT pid,\n             ppos,\n             COUNT(*) AS n\n      FROM tryout\n      GROUP BY pid,\n               ppos) AS RHS)\nWHERE (n > n_other)\nORDER BY ppos\n", "sql2": "SELECT pPos\nFROM tryout\nGROUP BY pPos\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0020", "sql1": "\nSELECT DISTINCT cname\nFROM tryout\nORDER BY cname\n", "sql2": "SELECT DISTINCT cName\nFROM tryout\nORDER BY cName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0036", "sql1": "\nSELECT DISTINCT MAX(hs) OVER () AS max_t1_hs_,\n                             ppos\nFROM\n  (SELECT LHS.pid AS pid,\n          LHS.cname AS cname,\n          LHS.ppos AS ppos,\n          LHS.decision AS decision,\n          RHS.pname AS pname,\n          RHS.ycard AS ycard,\n          RHS.hs AS hs\n   FROM tryout AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM player\n      WHERE (hs >= 1000.0)) AS RHS ON (LHS.pid = RHS.pid))\nORDER BY max_t1_hs_\n", "sql2": "SELECT max(T1.HS),\n       pPos\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T1.HS > 1000\nGROUP BY T2.pPos", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0041", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM `college`\n   WHERE (`enr` > 13000.0\n          OR `enr` < 15000.0))\nWHERE (`state` = 'AZ'\n       OR `state` = 'LA')\nORDER BY cname\n", "sql2": "SELECT cName\nFROM College\nWHERE enr < 13000\n  AND state = 'AZ'\nUNION\nSELECT cName\nFROM College\nWHERE enr > 15000\n  AND state = 'LA'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0016", "sql1": "\nSELECT `cname`,\n       `enr`\nFROM `college`\nWHERE (`state` = 'LA'\n       AND enr != 10000.0)\nORDER BY cname\n", "sql2": "SELECT cName,\n       enr\nFROM College\nWHERE enr > 10000\n  AND state = 'LA'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0031", "sql1": "\nSELECT `state`\nFROM\n  (SELECT *\n   FROM `college` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `tryout`\n           WHERE (`ppos` != 'striker')) AS RHS\n        WHERE (LHS.cname = RHS.cname) ))\nORDER BY state\n", "sql2": "SELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.pPos = 'striker'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0027", "sql1": "\nSELECT `state`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`enr` AS `enr`\n   FROM\n     (SELECT *\n      FROM `tryout`\n      WHERE (`decision` = 'yes')) AS LHS\n   INNER JOIN college AS RHS ON (LHS.cname = RHS.cname))\nORDER BY state\n", "sql2": "SELECT DISTINCT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0050", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT `cname`,\n          `state`,\n          `enr`,\n          MAX(`enr`) OVER () AS `maxenr`\n   FROM `college`)\nWHERE (`state` != 'FL'\n       AND maxenr = enr)\nORDER BY cname\n", "sql2": "SELECT cName\nFROM college\nWHERE enr >\n    (SELECT max(enr)\n     FROM college\n     WHERE state = 'FL')", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0007", "sql1": "\nSELECT pname,\n       hs\nFROM player\nWHERE (hs < 1500.0)\nORDER BY pname\n", "sql2": "SELECT pName,\n       HS\nFROM Player\nWHERE HS < 1500", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0011", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `pid`,\n          `cname`,\n          `ppos`,\n          `decision`,\n          COUNT(DISTINCT `ppos`) OVER () AS `n_distinct`\n   FROM `tryout`)\nWHERE (`ppos` = 'goalie')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM tryout\nWHERE pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0046", "sql1": "\nSELECT `state`\nFROM\n  (SELECT *\n   FROM `college` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `tryout`\n           WHERE (`ppos` != 'mid'\n                  OR `ppos` = 'goalie')) AS RHS\n        WHERE (LHS.cname = RHS.cname) ))\nORDER BY state\n", "sql2": "SELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.pPos = 'mid'\nEXCEPT\nSELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0047", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`enr` AS `enr`,\n          `RHS`.`n` AS `n`\n   FROM `tryout` AS `LHS`\n   INNER JOIN\n     (SELECT `cname`,\n             `enr`,\n             COUNT(*) AS `n`\n      FROM `college`\n      GROUP BY `cname`,\n               `enr`) AS `RHS` ON (`LHS`.`cname` = `RHS`.`cname`))\nWHERE (`ppos` = 'mid'\n       OR `ppos` != 'goalie')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM\n  (SELECT T1.state\n   FROM college AS T1\n   JOIN tryout AS T2 ON T1.cName = T2.cName\n   WHERE T2.pPos = 'mid'\n   EXCEPT SELECT T1.state\n   FROM college AS T1\n   JOIN tryout AS T2 ON T1.cName = T2.cName\n   WHERE T2.pPos = 'goalie')", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0010", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `decision`,\n          COUNT(*) AS `n`\n   FROM `tryout`\n   GROUP BY `decision`)\nWHERE (`decision` = 'yes')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM tryout\nWHERE decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0006", "sql1": "\nSELECT meanhs AS avg_hs_\nFROM\n  (SELECT AVG(hs) AS meanhs\n   FROM player)\nORDER BY avg_hs_\n", "sql2": "SELECT avg(HS)\nFROM Player", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0026", "sql1": "\nSELECT state\nFROM college\nORDER BY state\n", "sql2": "SELECT DISTINCT state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/soccer_2/0030", "sql1": "\nSELECT `pname`,\n       `hs`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`pname` AS `pname`,\n          `RHS`.`ycard` AS `ycard`,\n          `RHS`.`hs` AS `hs`\n   FROM `tryout` AS `LHS`\n   INNER JOIN `player` AS `RHS` ON (`LHS`.`pid` = `RHS`.`pid`))\nWHERE (`decision` = 'yes')\nORDER BY pname\n", "sql2": "SELECT T1.pName,\n       T1.HS\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0048", "sql1": "\nSELECT DISTINCT id,\n                name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.lat AS lat,\n          LHS.long AS long,\n          LHS.dock_count AS dock_count,\n          LHS.city AS city,\n          LHS.installation_date AS installation_date,\n          RHS.bikes_available AS bikes_available,\n          RHS.docks_available AS docks_available,\n          RHS.time AS TIME\n   FROM station AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM status\n      WHERE (bikes_available > 12)) AS RHS ON (LHS.id = RHS.station_id))\nORDER BY id\n", "sql2": "SELECT DISTINCT T1.id,\n                T1.name\nFROM station AS T1\nJOIN status AS T2 ON T1.id = T2.station_id\nWHERE T2.bikes_available > 12", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0009", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT bike_id) OVER () AS count_distinct_bike_id_\nFROM trip\nORDER BY count_distinct_bike_id_\n", "sql2": "SELECT count(DISTINCT bike_id)\nFROM trip", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0033", "sql1": "\nSELECT name,\n       lat,\n       city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM station\n      ORDER BY id)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       lat,\n       city\nFROM station\nORDER BY lat\nLIMIT 1", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0012", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.lat AS lat,\n          LHS.long AS long,\n          LHS.dock_count AS dock_count,\n          LHS.city AS city,\n          LHS.installation_date AS installation_date,\n          RHS.bikes_available AS bikes_available,\n          RHS.docks_available AS docks_available,\n          RHS.time AS TIME\n   FROM station AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM status\n      WHERE (bikes_available = 7)) AS RHS ON (LHS.id = RHS.station_id))\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name\nFROM station AS T1\nJOIN status AS T2 ON T1.id = T2.station_id\nWHERE T2.bikes_available = 7", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0003", "sql1": "\nSELECT city,\n       lat AS max_lat_\nFROM\n  (SELECT city,\n          MAX(lat) AS lat\n   FROM station\n   GROUP BY city)\nORDER BY city\n", "sql2": "SELECT city,\n       max(lat)\nFROM station\nGROUP BY city", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0035", "sql1": "\nSELECT city,\n       n AS count___\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM station\n   GROUP BY city)\nWHERE (n > 15)\nORDER BY city\n", "sql2": "SELECT city,\n       COUNT(*)\nFROM station\nGROUP BY city\nHAVING COUNT(*) >= 15", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0038", "sql1": "\nSELECT DISTINCT city\nFROM\n  (SELECT city,\n          lat,\n          MAX(lat) AS maxlat\n   FROM station\n   GROUP BY city,\n            lat)\nORDER BY city\n", "sql2": "SELECT city\nFROM station\nGROUP BY city\nORDER BY max(lat) DESC", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0002", "sql1": "\nSELECT `name`\nFROM `station`\nWHERE (`lat` < '37.5')\nORDER BY name\n", "sql2": "SELECT name\nFROM station\nWHERE lat < 37.5", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0043", "sql1": "\nSELECT DISTINCT start_station_name\nFROM trip\nWHERE (duration <= 100)\nORDER BY start_station_name\n", "sql2": "SELECT DISTINCT start_station_name\nFROM trip\nWHERE duration < 100", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0017", "sql1": "\nSELECT `station_id` AS `id`\nFROM\n  (SELECT `city`,\n          `station_id`,\n          AVG(`bikes_available`) AS `meanbikes_available`\n   FROM\n     (SELECT `id`,\n             `name`,\n             `lat`,\n             `long`,\n             `dock_count`,\n             `city`,\n             `installation_date`,\n             `bikes_available`,\n             `docks_available`,\n             `time`,\n             `id` AS `station_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`lat` AS `lat`,\n                `LHS`.`long` AS `long`,\n                `LHS`.`dock_count` AS `dock_count`,\n                `LHS`.`city` AS `city`,\n                `LHS`.`installation_date` AS `installation_date`,\n                `RHS`.`bikes_available` AS `bikes_available`,\n                `RHS`.`docks_available` AS `docks_available`,\n                `RHS`.`time` AS `time`\n         FROM `station` AS `LHS`\n         INNER JOIN `status` AS `RHS` ON (`LHS`.`id` = `RHS`.`station_id`)))\n   GROUP BY `city`,\n            `station_id`)\nWHERE (`city` = 'San Francisco'\n       AND meanbikes_available > 10.0)\nORDER BY id\n", "sql2": "SELECT id\nFROM station\nWHERE city = 'San Francisco' INTERSECT\n  SELECT station_id\n  FROM status\nGROUP BY station_id\nHAVING avg(bikes_available) > 10", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0036", "sql1": "\nSELECT start_station_id,\n       start_station_name\nFROM\n  (SELECT start_station_id,\n          start_station_name,\n          COUNT(*) AS n\n   FROM trip\n   GROUP BY start_station_id,\n            start_station_name)\nWHERE (n >= 200)\nORDER BY start_station_id\n", "sql2": "SELECT start_station_id,\n       start_station_name\nFROM trip\nGROUP BY start_station_name\nHAVING COUNT(*) >= 200", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0027", "sql1": "\nSELECT id_other AS id,\n       installation_date\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.lat AS lat,\n          LHS.long AS long,\n          LHS.dock_count AS dock_count,\n          LHS.city AS city,\n          LHS.installation_date AS installation_date,\n          RHS.id AS id_other,\n          RHS.duration AS duration,\n          RHS.start_date AS start_date,\n          RHS.start_station_name AS start_station_name,\n          RHS.start_station_id AS start_station_id,\n          RHS.end_date AS end_date,\n          RHS.end_station_name AS end_station_name,\n          RHS.bike_id AS bike_id,\n          RHS.subscription_type AS subscription_type,\n          RHS.zip_code AS zip_code\n   FROM station AS LHS\n   INNER JOIN trip AS RHS ON (LHS.id = RHS.end_station_id))\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T2.installation_date\nFROM trip AS T1\nJOIN station AS T2 ON T1.end_station_id = T2.id", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0050", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`lat` AS `lat`,\n          `LHS`.`long` AS `long`,\n          `LHS`.`dock_count` AS `dock_count`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`installation_date` AS `installation_date`,\n          `RHS`.`bike_id` AS `bike_id`,\n          `RHS`.`end_station_id` AS `end_station_id`,\n          `RHS`.`n` AS `n`\n   FROM `station` AS `LHS`\n   CROSS JOIN\n     (SELECT `bike_id`,\n             `end_station_id`,\n             COUNT(*) AS `n`\n      FROM `trip`\n      GROUP BY `bike_id`,\n               `end_station_id`) AS `RHS`)\nWHERE (`city` = 'Palo Alto'\n       OR n = 100)\nORDER BY name\n", "sql2": "SELECT name\nFROM station\nWHERE city = 'Palo Alto'\nEXCEPT\nSELECT end_station_name\nFROM trip\nGROUP BY end_station_name\nHAVING count(*) > 100", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0011", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `city`,\n          COUNT(*) AS `n`\n   FROM `station`\n   GROUP BY `city`)\nWHERE (`city` = 'Mountain View')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM station\nWHERE city = 'Mountain View'", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0046", "sql1": "\nSELECT `date`\nFROM `weather`\nWHERE (`mean_sea_level_pressure_inches` <= 31.0\n       AND `mean_sea_level_pressure_inches` >= '30.3')\nORDER BY date\n", "sql2": "SELECT date\nFROM weather\nWHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/bike_1/0010", "sql1": "\nSELECT n_distinct AS count_distinct_city_\nFROM\n  (SELECT COUNT(DISTINCT city) AS n_distinct\n   FROM station)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM station", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0009", "sql1": "\nSELECT POSITION\nFROM pilot\nWHERE (join_year < 2000\n       AND join_year < 2005)\nORDER BY POSITION\n", "sql2": "SELECT POSITION\nFROM pilot\nWHERE Join_Year < 2000 INTERSECT\n  SELECT POSITION\n  FROM pilot WHERE Join_Year > 2005", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0013", "sql1": "\nSELECT pilot_name,\n       n AS count___\nFROM\n  (SELECT pilot_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.pilot_id AS pilot_id,\n             LHS.pilot_name AS pilot_name,\n             LHS.rank AS rank,\n             LHS.age AS age,\n             LHS.nationality AS nationality,\n             LHS.position AS POSITION,\n             LHS.join_year AS join_year,\n             LHS.team AS team,\n             RHS.record_id AS record_id,\n             RHS.aircraft_id AS aircraft_id,\n             RHS.date AS date\n      FROM pilot AS LHS\n      INNER JOIN pilot_record AS RHS ON (LHS.pilot_id = RHS.pilot_id))\n   GROUP BY pilot_name)\nORDER BY pilot_name\n", "sql2": "SELECT T2.Pilot_name,\n       COUNT(*)\nFROM pilot_record AS T1\nJOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID\nGROUP BY T2.Pilot_name", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0005", "sql1": "\nSELECT `pilot_name`\nFROM `pilot`\nWHERE (`team` = 'Bradley'\n       OR `team` = 'Fordham')\nORDER BY pilot_name\n", "sql2": "SELECT Pilot_name\nFROM pilot\nWHERE Team = 'Bradley'\n  OR Team = 'Fordham'", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0004", "sql1": "\nSELECT DISTINCT POSITION\nFROM pilot\nWHERE (age > 30)\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT POSITION\nFROM pilot\nWHERE Age > 30", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0012", "sql1": "\nSELECT fleet_series\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.order_year AS order_year,\n          LHS.manufacturer AS manufacturer,\n          LHS.model AS model,\n          LHS.fleet_series AS fleet_series,\n          LHS.powertrain AS powertrain,\n          LHS.fuel_propulsion AS fuel_propulsion,\n          LHS.record_id AS record_id,\n          LHS.pilot_id AS pilot_id,\n          LHS.date AS date,\n          RHS.pilot_name AS pilot_name,\n          RHS.rank AS rank,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.position AS POSITION,\n          RHS.join_year AS join_year,\n          RHS.team AS team\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.order_year AS order_year,\n             LHS.manufacturer AS manufacturer,\n             LHS.model AS model,\n             LHS.fleet_series AS fleet_series,\n             LHS.powertrain AS powertrain,\n             LHS.fuel_propulsion AS fuel_propulsion,\n             RHS.record_id AS record_id,\n             RHS.pilot_id AS pilot_id,\n             RHS.date AS date\n      FROM aircraft AS LHS\n      INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM pilot\n      WHERE (age < 34)) AS RHS ON (LHS.pilot_id = RHS.pilot_id))\nORDER BY fleet_series\nFrom cffi callback <function _processevents at 0x7f63d54a4790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\naircraft <- read_csv(\"tests-examples/spider/pilot_record/tables/aircraft.csv\", skip=1, col_names=c('aircraft_id','order_year','manufacturer','model','fleet_series','powertrain','fuel_propulsion'), col_types=cols(col_integer(),col_integer(),col_character(),col_character(),col_character(),col_character(),col_character()))\naircraft <- copy_to(con, aircraft)\npilot <- read_csv(\"tests-examples/spider/pilot_record/tables/pilot.csv\", skip=1, col_names=c('pilot_id','pilot_name','rank','age','nationality','position','join_year','team'), col_types=cols(col_integer(),col_character(),col_integer(),col_integer(),col_character(),col_character(),col_integer(),col_character()))\npilot <- copy_to(con, pilot)\npilot_record <- read_csv(\"tests-examples/spider/pilot_record/tables/pilot_record.csv\", skip=1, col_names=c('record_id','pilot_id','aircraft_id','date'), col_types=cols(col_integer(),col_integer(),col_integer(),col_character()))\npilot_record <- copy_to(con, pilot_record)\nexpected_output <- read_csv(\"tests-examples/spider/pilot_record/tables/0012.csv\", skip=1, col_names=c('fleet_series'), col_types=cols(col_character()))\n\ndf1 <- pilot %>% filter(age < 34L)\ndf2 <- inner_join(aircraft, pilot_record, na_matches=\"never\") %>% inner_join(df1, na_matches=\"never\")\nout <- df2 %>% select(fleet_series) %>% arrange(fleet_series)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT fleet_series\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.order_year AS order_year,\n          LHS.manufacturer AS manufacturer,\n          LHS.model AS model,\n          LHS.fleet_series AS fleet_series,\n          LHS.powertrain AS powertrain,\n          LHS.fuel_propulsion AS fuel_propulsion,\n          LHS.record_id AS record_id,\n          LHS.pilot_id AS pilot_id,\n          LHS.date AS date,\n          RHS.pilot_name AS pilot_name,\n          RHS.rank AS rank,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.position AS POSITION,\n          RHS.join_year AS join_year,\n          RHS.team AS team\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.order_year AS order_year,\n             LHS.manufacturer AS manufacturer,\n             LHS.model AS model,\n             LHS.fleet_series AS fleet_series,\n             LHS.powertrain AS powertrain,\n             LHS.fuel_propulsion AS fuel_propulsion,\n             RHS.record_id AS record_id,\n             RHS.pilot_id AS pilot_id,\n             RHS.date AS date\n      FROM aircraft AS LHS\n      INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM pilot\n      WHERE (age < 34)) AS RHS ON (LHS.pilot_id = RHS.pilot_id))\nORDER BY fleet_series\n", "sql2": "SELECT T2.Fleet_Series\nFROM pilot_record AS T1\nJOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID\nWHERE T3.Age < 34", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0008", "sql1": "\nSELECT nationality\nFROM\n  (SELECT LHS.join_year AS join_year,\n          LHS.nationality AS nationality,\n          LHS.n AS n,\n          RHS.pilot_name AS pilot_name,\n          RHS.rank AS rank,\n          RHS.age AS age,\n          RHS.nationality AS nationality_other,\n          RHS.position AS POSITION,\n          RHS.team AS team\n   FROM\n     (SELECT join_year,\n             nationality,\n             COUNT(*) AS n\n      FROM pilot\n      GROUP BY join_year,\n               nationality) AS LHS\n   INNER JOIN pilot AS RHS ON (LHS.join_year = RHS.join_year\n                                  AND LHS.n = RHS.pilot_id))\nORDER BY nationality\n\n[   737.718][MainProcess][INFO] Statistics:\n[   737.719][MainProcess][INFO] \tAttempted programs: 242 (approx)\n[   737.719][MainProcess][INFO] \t\tRejected: 241 (approx)\n[   737.719][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   737.719][MainProcess][INFO] \t\tEmpty outputs: 77 (31.8%) (approx)\n[   737.719][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   737.719][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   737.719][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   737.719][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   737.719][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   737.719][MainProcess][INFO] \tTotal time spent in enumerator: 68.258260 (approx)\n[   737.719][MainProcess][INFO] \t\tEnumerated 3.545358 programs/s avg. (just enumeration time)\n[   737.720][MainProcess][INFO] \t\tEnumerated 0.374993 programs/s avg. (overall)\n[   737.720][MainProcess][INFO] \tTotal time spent in evaluation & testing: 193.653562 (approx)\n[   737.720][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 11.461161 (approx)\n[   737.720][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', \"'join_year','nationality'\"), inner_join(line0, input0, \"'join_year' = 'join_year','n' = 'pilot_id'\")]\n[   737.720][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 164, in endr\n    rlib.Rf_endEmbeddedR(fatal)\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT Nationality\nFROM pilot\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0015", "sql1": "\nSELECT pilot_name\nFROM\n  (SELECT *\n   FROM pilot AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM pilot_record AS RHS\n        WHERE (LHS.pilot_id = RHS.pilot_id) ))\nORDER BY pilot_name\n", "sql2": "SELECT Pilot_name\nFROM pilot\nWHERE Pilot_ID NOT IN\n    (SELECT Pilot_ID\n     FROM pilot_record)", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0003", "sql1": "\nSELECT POSITION,\n       team\nFROM pilot\nORDER BY POSITION\n", "sql2": "SELECT POSITION,\n       Team\nFROM pilot", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0002", "sql1": "\nSELECT pilot_name\nFROM pilot\nORDER BY pilot_name\n", "sql2": "SELECT Pilot_name\nFROM pilot\nORDER BY Rank ASC", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM pilot\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM pilot", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0007", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM pilot\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM pilot\nGROUP BY Nationality", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/pilot_record/0006", "sql1": "\nSELECT join_year\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM pilot\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Join_Year\nFROM pilot\nORDER BY Rank ASC\nLIMIT 1", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0009", "sql1": "\nSELECT customer_id\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM accounts AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_id\n", "sql2": "SELECT customer_id\nFROM Customers\nEXCEPT\nSELECT customer_id\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0025", "sql1": "\nSELECT DISTINCT product_size\nFROM products\nORDER BY product_size\n", "sql2": "SELECT DISTINCT product_size\nFROM Products", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0005", "sql1": "\nSELECT `account_name`,\n       `other_account_details`\nFROM\n  (SELECT *\n   FROM `accounts` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`customer_first_name` != 'Meaghan'\n                  OR `customer_last_name` != 'Keeling')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY account_name\n", "sql2": "SELECT T1.account_name,\n       T1.other_account_details\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.customer_first_name = 'Meaghan'\n  AND T2.customer_last_name = 'Keeling'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0029", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM invoices\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Invoices", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0004", "sql1": "\nSELECT `account_id`,\n       `date_account_opened`,\n       `account_name`,\n       `other_account_details`\nFROM\n  (SELECT `LHS`.`account_id` AS `account_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`date_account_opened` AS `date_account_opened`,\n          `LHS`.`account_name` AS `account_name`,\n          `LHS`.`other_account_details` AS `other_account_details`,\n          `RHS`.`customer_first_name` AS `customer_first_name`,\n          `RHS`.`customer_middle_initial` AS `customer_middle_initial`,\n          `RHS`.`customer_last_name` AS `customer_last_name`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`login_password` AS `login_password`,\n          `RHS`.`phone_number` AS `phone_number`,\n          `RHS`.`town_city` AS `town_city`,\n          `RHS`.`state_county_province` AS `state_county_province`,\n          `RHS`.`country` AS `country`\n   FROM `accounts` AS `LHS`\n   LEFT JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_first_name` = 'Meaghan')\nORDER BY account_id\n", "sql2": "SELECT T1.account_id,\n       T1.date_account_opened,\n       T1.account_name,\n       T1.other_account_details\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.customer_first_name = 'Meaghan'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0012", "sql1": "\nSELECT customer_id,\n       customer_first_name,\n       customer_last_name,\n       n AS count___\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.n AS n,\n          RHS.customer_first_name AS customer_first_name,\n          RHS.customer_middle_initial AS customer_middle_initial,\n          RHS.customer_last_name AS customer_last_name,\n          RHS.gender AS gender,\n          RHS.email_address AS email_address,\n          RHS.login_name AS login_name,\n          RHS.login_password AS login_password,\n          RHS.phone_number AS phone_number,\n          RHS.town_city AS town_city,\n          RHS.state_county_province AS state_county_province,\n          RHS.country AS country\n   FROM\n     (SELECT customer_id,\n             COUNT(*) AS n\n      FROM accounts\n      GROUP BY customer_id) AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_id\n", "sql2": "SELECT T1.customer_id,\n       T2.customer_first_name,\n       T2.customer_last_name,\n       count(*)\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0024", "sql1": "\nSELECT account_id,\n       account_name\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.customer_id AS customer_id,\n          LHS.date_account_opened AS date_account_opened,\n          LHS.account_name AS account_name,\n          LHS.other_account_details AS other_account_details,\n          RHS.n AS n\n   FROM accounts AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT account_id,\n                COUNT(*) AS n\n         FROM financial_transactions\n         GROUP BY account_id)\n      WHERE (n = 4)) AS RHS ON (LHS.account_id = RHS.account_id))\nORDER BY account_id\n", "sql2": "SELECT T1.account_id,\n       T2.account_name\nFROM Financial_transactions AS T1\nJOIN Accounts AS T2 ON T1.account_id = T2.account_id\nGROUP BY T1.account_id\nHAVING count(*) >= 4", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0008", "sql1": "\nSELECT DISTINCT customer_first_name,\n                customer_last_name,\n                phone_number\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_first_name AS customer_first_name,\n          LHS.customer_middle_initial AS customer_middle_initial,\n          LHS.customer_last_name AS customer_last_name,\n          LHS.gender AS gender,\n          LHS.email_address AS email_address,\n          LHS.login_name AS login_name,\n          LHS.login_password AS login_password,\n          LHS.phone_number AS phone_number,\n          LHS.town_city AS town_city,\n          LHS.state_county_province AS state_county_province,\n          LHS.country AS country,\n          RHS.account_id AS account_id,\n          RHS.date_account_opened AS date_account_opened,\n          RHS.account_name AS account_name,\n          RHS.other_account_details AS other_account_details\n   FROM customers AS LHS\n   INNER JOIN accounts AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_first_name\n", "sql2": "SELECT DISTINCT T1.customer_first_name,\n                T1.customer_last_name,\n                T1.phone_number\nFROM Customers AS T1\nJOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0015", "sql1": "\nSELECT gender,\n       n AS count___\nFROM\n  (SELECT gender,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY gender)\nORDER BY gender\n", "sql2": "SELECT gender,\n       count(*)\nFROM Customers\nGROUP BY gender", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0003", "sql1": "\nSELECT account_id,\n       date_account_opened,\n       account_name,\n       other_account_details\nFROM accounts\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       date_account_opened,\n       account_name,\n       other_account_details\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0039", "sql1": "\nSELECT order_id,\n       n_distinct AS count_distinct_product_id_\nFROM\n  (SELECT order_id,\n          other_order_item_details,\n          COUNT(DISTINCT product_id) AS n_distinct\n   FROM order_items\n   GROUP BY order_id,\n            other_order_item_details)\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       count(DISTINCT product_id)\nFROM Order_items\nGROUP BY order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0023", "sql1": "\nSELECT n AS account_id\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT invoice_number,\n             COUNT(*) AS n\n      FROM financial_transactions\n      GROUP BY invoice_number))\nORDER BY account_id\n", "sql2": "SELECT account_id\nFROM Financial_transactions\nGROUP BY account_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0034", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM products AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM order_items AS RHS\n        WHERE (LHS.product_id = RHS.product_id) ))\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM Products\nEXCEPT\nSELECT T1.product_name\nFROM Products AS T1\nJOIN Order_items AS T2 ON T1.product_id = T2.product_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0022", "sql1": "\nSELECT account_name,\n       account_id,\n       n AS count___\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.n AS n,\n          RHS.customer_id AS customer_id,\n          RHS.date_account_opened AS date_account_opened,\n          RHS.account_name AS account_name,\n          RHS.other_account_details AS other_account_details\n   FROM\n     (SELECT account_id,\n             COUNT(*) AS n\n      FROM financial_transactions\n      GROUP BY account_id) AS LHS\n   INNER JOIN accounts AS RHS ON (LHS.account_id = RHS.account_id))\nORDER BY account_name\n", "sql2": "SELECT T2.account_name,\n       T1.account_id,\n       count(*)\nFROM Financial_transactions AS T1\nJOIN Accounts AS T2 ON T1.account_id = T2.account_id\nGROUP BY T1.account_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0018", "sql1": "\nSELECT account_id AS count___\nFROM\n  (SELECT transaction_id,\n          account_id,\n          invoice_number,\n          transaction_type,\n          transaction_date,\n          transaction_amount,\n          transaction_comment,\n          other_transaction_details,\n          customer_id,\n          date_account_opened,\n          account_name,\n          other_account_details,\n          transaction_id AS n_distinct\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.account_id AS account_id,\n             LHS.invoice_number AS invoice_number,\n             LHS.transaction_type AS transaction_type,\n             LHS.transaction_date AS transaction_date,\n             LHS.transaction_amount AS transaction_amount,\n             LHS.transaction_comment AS transaction_comment,\n             LHS.other_transaction_details AS other_transaction_details,\n             RHS.customer_id AS customer_id,\n             RHS.date_account_opened AS date_account_opened,\n             RHS.account_name AS account_name,\n             RHS.other_account_details AS other_account_details\n      FROM financial_transactions AS LHS\n      INNER JOIN\n        (SELECT account_id,\n                customer_id,\n                date_account_opened,\n                account_name,\n                other_account_details,\n                COUNT(DISTINCT account_name) OVER () AS n_distinct\n         FROM accounts) AS RHS ON (LHS.account_id = RHS.account_id\n                                      AND LHS.transaction_id = RHS.n_distinct)))\nWHERE (account_name != 337\n       OR n_distinct < 337)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Financial_transactions AS T1\nJOIN Accounts AS T2 ON T1.account_id = T2.account_id\nWHERE T2.account_name = '337'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0038", "sql1": "\nSELECT DISTINCT product_name,\n                n AS count___\nFROM\n  (SELECT LHS.order_id AS order_id,\n          LHS.customer_id AS customer_id,\n          LHS.date_order_placed AS date_order_placed,\n          LHS.order_details AS order_details,\n          LHS.product_id AS product_id,\n          LHS.parent_product_id AS parent_product_id,\n          LHS.production_type_code AS production_type_code,\n          LHS.unit_price AS unit_price,\n          LHS.product_name AS product_name,\n          LHS.product_color AS product_color,\n          LHS.product_size AS product_size,\n          RHS.other_order_item_details AS other_order_item_details,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.date_order_placed AS date_order_placed,\n             LHS.order_details AS order_details,\n             RHS.product_id AS product_id,\n             RHS.parent_product_id AS parent_product_id,\n             RHS.production_type_code AS production_type_code,\n             RHS.unit_price AS unit_price,\n             RHS.product_name AS product_name,\n             RHS.product_color AS product_color,\n             RHS.product_size AS product_size\n      FROM orders AS LHS\n      CROSS JOIN products AS RHS) AS LHS\n   INNER JOIN\n     (SELECT other_order_item_details,\n             product_id,\n             COUNT(*) AS n\n      FROM order_items\n      GROUP BY other_order_item_details,\n               product_id) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY product_name\n", "sql2": "SELECT T2.product_name,\n       count(*)\nFROM Order_items AS T1\nJOIN Products AS T2 ON T1.product_id = T2.product_id\nJOIN Orders AS T3 ON T3.order_id = T1.order_id\nGROUP BY T2.product_name", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0002", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT customer_id) OVER () AS count_distinct_customer_id_\nFROM accounts\nORDER BY count_distinct_customer_id_\n", "sql2": "SELECT count(DISTINCT customer_id)\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0014", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0037", "sql1": "\nSELECT product_id,\n       n_distinct AS count_distinct_order_id_\nFROM\n  (SELECT other_order_item_details,\n          product_id,\n          COUNT(DISTINCT order_id) AS n_distinct\n   FROM order_items\n   GROUP BY other_order_item_details,\n            product_id)\nORDER BY product_id\n", "sql2": "SELECT product_id,\n       count(DISTINCT order_id)\nFROM Order_items\nGROUP BY product_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0021", "sql1": "\nSELECT transaction_type,\n       sumtransaction_amount AS sum_transaction_amount_\nFROM\n  (SELECT other_transaction_details,\n          transaction_type,\n          SUM(transaction_amount) AS sumtransaction_amount\n   FROM financial_transactions\n   GROUP BY other_transaction_details,\n            transaction_type)\nORDER BY transaction_type\n", "sql2": "SELECT transaction_type,\n       sum(transaction_amount)\nFROM Financial_transactions\nGROUP BY transaction_type", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0020", "sql1": "\nSELECT DISTINCT transaction_id_other AS transaction_id\nFROM\n  (SELECT LHS.transaction_id AS transaction_id,\n          LHS.account_id AS account_id,\n          LHS.invoice_number AS invoice_number,\n          LHS.transaction_type AS transaction_type,\n          LHS.transaction_date AS transaction_date,\n          LHS.transaction_amount AS transaction_amount,\n          LHS.transaction_comment AS transaction_comment,\n          LHS.other_transaction_details AS other_transaction_details,\n          LHS.meantransaction_amount AS meantransaction_amount,\n          RHS.transaction_id AS transaction_id_other,\n          RHS.account_id AS account_id_other,\n          RHS.invoice_number AS invoice_number_other,\n          RHS.transaction_type AS transaction_type_other,\n          RHS.transaction_date AS transaction_date_other,\n          RHS.transaction_amount AS transaction_amount_other,\n          RHS.transaction_comment AS transaction_comment_other,\n          RHS.other_transaction_details AS other_transaction_details_other\n   FROM\n     (SELECT transaction_id,\n             account_id,\n             invoice_number,\n             transaction_type,\n             transaction_date,\n             transaction_amount,\n             transaction_comment,\n             other_transaction_details,\n             AVG(transaction_amount) OVER () AS meantransaction_amount\n      FROM financial_transactions) AS LHS\n   CROSS JOIN financial_transactions AS RHS)\nWHERE (transaction_amount < transaction_amount_other\n       AND meantransaction_amount <= transaction_amount_other)\nORDER BY transaction_id\n", "sql2": "SELECT transaction_id\nFROM Financial_transactions\nWHERE transaction_amount >\n    (SELECT avg(transaction_amount)\n     FROM Financial_transactions)", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0036", "sql1": "\nSELECT order_id,\n       n AS count___\nFROM\n  (SELECT order_id,\n          COUNT(*) AS n\n   FROM order_items\n   GROUP BY order_id)\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       count(*)\nFROM Order_items\nGROUP BY order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM financial_transactions\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Financial_transactions", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0031", "sql1": "\nSELECT order_id,\n       n AS count___\nFROM\n  (SELECT order_id,\n          COUNT(*) AS n\n   FROM invoices\n   GROUP BY order_id)\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       count(*)\nFROM Invoices\nGROUP BY order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0027", "sql1": "\nSELECT invoice_number,\n       n AS count___\nFROM\n  (SELECT invoice_number,\n          transaction_comment,\n          COUNT(*) AS n\n   FROM financial_transactions\n   GROUP BY invoice_number,\n            transaction_comment)\nORDER BY invoice_number\n", "sql2": "SELECT invoice_number,\n       count(*)\nFROM Financial_transactions\nGROUP BY invoice_number", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0010", "sql1": "\nSELECT n AS count___,\n       customer_id\nFROM\n  (SELECT customer_id,\n          COUNT(*) AS n\n   FROM accounts\n   GROUP BY customer_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       customer_id\nFROM Accounts\nGROUP BY customer_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0006", "sql1": "\nSELECT customer_first_name,\n       customer_last_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_first_name AS customer_first_name,\n          LHS.customer_middle_initial AS customer_middle_initial,\n          LHS.customer_last_name AS customer_last_name,\n          LHS.gender AS gender,\n          LHS.email_address AS email_address,\n          LHS.login_name AS login_name,\n          LHS.login_password AS login_password,\n          LHS.phone_number AS phone_number,\n          LHS.town_city AS town_city,\n          LHS.state_county_province AS state_county_province,\n          LHS.country AS country,\n          RHS.account_id AS account_id,\n          RHS.date_account_opened AS date_account_opened,\n          RHS.account_name AS account_name,\n          RHS.other_account_details AS other_account_details\n   FROM customers AS LHS\n   LEFT JOIN accounts AS RHS ON (LHS.customer_id = RHS.customer_id))\nWHERE (account_name = 900)\nORDER BY customer_first_name\n", "sql2": "SELECT T2.customer_first_name,\n       T2.customer_last_name\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.account_name = '900'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0026", "sql1": "\nSELECT DISTINCT product_color\nFROM products\nORDER BY product_color\n", "sql2": "SELECT DISTINCT product_color\nFROM Products", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_invoices/0030", "sql1": "\nSELECT invoice_date,\n       order_id,\n       order_details\nFROM\n  (SELECT LHS.invoice_number AS invoice_number,\n          LHS.order_id AS order_id,\n          LHS.invoice_date AS invoice_date,\n          RHS.customer_id AS customer_id,\n          RHS.date_order_placed AS date_order_placed,\n          RHS.order_details AS order_details\n   FROM invoices AS LHS\n   LEFT JOIN orders AS RHS ON (LHS.order_id = RHS.order_id))\nORDER BY invoice_date\n", "sql2": "SELECT T1.invoice_date,\n       T1.order_id,\n       T2.order_details\nFROM Invoices AS T1\nJOIN Orders AS T2 ON T1.order_id = T2.order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_management/0009", "sql1": "\nSELECT creation\nFROM\n  (SELECT creation,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY creation)\nWHERE (n != 1)\nORDER BY creation\n", "sql2": "SELECT creation\nFROM department\nGROUP BY creation\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0013", "sql1": "\nSELECT `age`\nFROM\n  (SELECT `LHS`.`head_id` AS `head_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`born_state` AS `born_state`,\n          `LHS`.`age` AS `age`,\n          `RHS`.`department_id` AS `department_id`,\n          `RHS`.`temporary_acting` AS `temporary_acting`\n   FROM `head` AS `LHS`\n   INNER JOIN `management` AS `RHS` ON (`LHS`.`head_id` = `RHS`.`head_id`))\nWHERE (`temporary_acting` = 'Yes')\nORDER BY age\n", "sql2": "SELECT DISTINCT T1.age\nFROM management AS T2\nJOIN head AS T1 ON T1.head_id = T2.head_id\nWHERE T2.temporary_acting = 'Yes'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0008", "sql1": "\nSELECT born_state\nFROM\n  (SELECT born_state,\n          COUNT(*) AS n\n   FROM head\n   GROUP BY born_state)\nWHERE (n >= 3)\nORDER BY born_state\n", "sql2": "SELECT born_state\nFROM head\nGROUP BY born_state\nHAVING count(*) >= 3", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0003", "sql1": "\nSELECT creation,\n       name,\n       budget_in_billions\nFROM department\nORDER BY creation\n", "sql2": "SELECT creation,\n       name,\n       budget_in_billions\nFROM department", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0002", "sql1": "\nSELECT name,\n       born_state,\n       age\nFROM head\nORDER BY name\n", "sql2": "SELECT name,\n       born_state,\n       age\nFROM head\nORDER BY age", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0014", "sql1": "\nSELECT `born_state`\nFROM\n  (SELECT `LHS`.`department_id` AS `department_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`creation` AS `creation`,\n          `LHS`.`ranking` AS `ranking`,\n          `LHS`.`budget_in_billions` AS `budget_in_billions`,\n          `LHS`.`num_employees` AS `num_employees`,\n          `LHS`.`head_id` AS `head_id`,\n          `LHS`.`temporary_acting` AS `temporary_acting`,\n          `RHS`.`name_other` AS `name_other`,\n          `RHS`.`born_state` AS `born_state`,\n          `RHS`.`age` AS `age`\n   FROM\n     (SELECT `LHS`.`department_id` AS `department_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`creation` AS `creation`,\n             `LHS`.`ranking` AS `ranking`,\n             `LHS`.`budget_in_billions` AS `budget_in_billions`,\n             `LHS`.`num_employees` AS `num_employees`,\n             `RHS`.`head_id` AS `head_id`,\n             `RHS`.`temporary_acting` AS `temporary_acting`\n      FROM `department` AS `LHS`\n      INNER JOIN `management` AS `RHS` ON (`LHS`.`department_id` = `RHS`.`department_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`department_id` AS `department_id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`creation` AS `creation`,\n                `LHS`.`ranking` AS `ranking`,\n                `LHS`.`budget_in_billions` AS `budget_in_billions`,\n                `LHS`.`num_employees` AS `num_employees`,\n                `RHS`.`head_id` AS `head_id`,\n                `RHS`.`name` AS `name_other`,\n                `RHS`.`born_state` AS `born_state`,\n                `RHS`.`age` AS `age`\n         FROM\n           (SELECT *\n            FROM `department`\n            WHERE (`name` != 'Treasury'\n                   AND `name` = 'Homeland Security')) AS LHS\n         CROSS JOIN head AS RHS)\n      WHERE (name != name_other)) AS RHS ON (LHS.department_id = RHS.department_id\n                                             AND LHS.name = RHS.name\n                                             AND LHS.creation = RHS.creation\n                                             AND LHS.ranking = RHS.ranking\n                                             AND LHS.budget_in_billions = RHS.budget_in_billions\n                                             AND LHS.num_employees = RHS.num_employees\n                                             AND LHS.head_id = RHS.head_id))\nORDER BY born_state\n", "sql2": "SELECT T3.born_state\nFROM department AS T1\nJOIN management AS T2 ON T1.department_id = T2.department_id\nJOIN head AS T3 ON T2.head_id = T3.head_id\nWHERE T1.name = 'Treasury' INTERSECT\n  SELECT T3.born_state\n  FROM department AS T1\n  JOIN management AS T2 ON T1.department_id = T2.department_id\n  JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0001", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT age) AS n_distinct\n   FROM\n     (SELECT *\n      FROM head\n      WHERE (age <= 56.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM head\nWHERE age > 56", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0007", "sql1": "\nSELECT `creation`\nFROM\n  (SELECT `LHS`.`department_id` AS `department_id`,\n          `LHS`.`head_id` AS `head_id`,\n          `LHS`.`temporary_acting` AS `temporary_acting`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`creation` AS `creation`,\n          `RHS`.`ranking` AS `ranking`,\n          `RHS`.`budget_in_billions` AS `budget_in_billions`,\n          `RHS`.`num_employees` AS `num_employees`\n   FROM\n     (SELECT *\n      FROM `management` AS `LHS`\n      WHERE EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM `head`\n              WHERE (`born_state` = 'Alabama')) AS RHS\n           WHERE (LHS.head_id = RHS.head_id) )) AS LHS\n   LEFT JOIN department AS RHS ON (LHS.department_id = RHS.department_id))\nORDER BY creation\n", "sql2": "SELECT DISTINCT T1.creation\nFROM department AS T1\nJOIN management AS T2 ON T1.department_id = T2.department_id\nJOIN head AS T3 ON T2.head_id = T3.head_id\nWHERE T3.born_state = 'Alabama'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT temporary_acting) OVER () AS count_distinct_temporary_acting_\nFROM management\nORDER BY count_distinct_temporary_acting_\n", "sql2": "SELECT count(DISTINCT temporary_acting)\nFROM management", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0010", "sql1": "\nSELECT `name`,\n       `num_employees`\nFROM\n  (SELECT `LHS`.`department_id` AS `department_id`,\n          `LHS`.`head_id` AS `head_id`,\n          `LHS`.`temporary_acting` AS `temporary_acting`,\n          `RHS`.`department_id` AS `department_id_other`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`creation` AS `creation`,\n          `RHS`.`budget_in_billions` AS `budget_in_billions`,\n          `RHS`.`num_employees` AS `num_employees`\n   FROM\n     (SELECT *\n      FROM `management`\n      WHERE (`temporary_acting` = 'Yes')) AS LHS\n   INNER JOIN department AS RHS ON (LHS.department_id = RHS.ranking))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.num_employees\nFROM department AS T1\nJOIN management AS T2 ON T1.department_id = T2.department_id\nWHERE T2.temporary_acting = 'Yes'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_management/0006", "sql1": "\nSELECT `name`\nFROM `head`\nWHERE (`born_state` != 'California')\nORDER BY name\n", "sql2": "SELECT name\nFROM head\nWHERE born_state != 'California'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0009", "sql1": "\nSELECT DISTINCT nationality\nFROM journalist\nWHERE (years_working > 10\n       OR years_working < 3)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM journalist\nWHERE Years_working > 10 INTERSECT\n  SELECT Nationality\n  FROM journalist WHERE Years_working < 3", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0005", "sql1": "\nSELECT meanyears_working AS avg_years_working_\nFROM\n  (SELECT AVG(years_working) AS meanyears_working\n   FROM journalist)\nORDER BY avg_years_working_\n", "sql2": "SELECT avg(Years_working)\nFROM journalist", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0004", "sql1": "\nSELECT `name`\nFROM `journalist`\nWHERE (`nationality` = 'England'\n       OR `nationality` = 'Wales')\nORDER BY name\n", "sql2": "SELECT Name\nFROM journalist\nWHERE Nationality = 'England'\n  OR Nationality = 'Wales'", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0008", "sql1": "\nSELECT nationality\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT journalist_id,\n                nationality,\n                COUNT(*) AS n\n         FROM journalist\n         GROUP BY journalist_id,\n                  nationality)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Nationality\nFROM journalist\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM journalist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM news_report AS RHS\n        WHERE (LHS.journalist_id = RHS.journalist_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM journalist\nWHERE journalist_ID NOT IN\n    (SELECT journalist_ID\n     FROM news_report)", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0003", "sql1": "\nSELECT nationality,\n       age\nFROM journalist\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       Age\nFROM journalist", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0018", "sql1": "\nSELECT venue,\n       name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM event\n      ORDER BY event_attendance DESC)\n   LIMIT 2)\n", "sql2": "SELECT venue,\n       name\nFROM event\nORDER BY Event_Attendance DESC\nLIMIT 2", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0002", "sql1": "\nSELECT name\nFROM journalist\nORDER BY name\n", "sql2": "SELECT Name\nFROM journalist\nORDER BY Years_working ASC", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM journalist\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM journalist", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0016", "sql1": "\nSELECT DISTINCT AVG(event_attendance) OVER () AS avg_event_attendance_,\n                                           maxevent_attendance AS max_event_attendance_\nFROM\n  (SELECT event_id, date, venue,\n                          name,\n                          event_attendance,\n                          MAX(event_attendance) OVER () AS maxevent_attendance\n   FROM event)\nORDER BY avg_event_attendance_\n", "sql2": "SELECT avg(Event_Attendance),\n       max(Event_Attendance)\nFROM event", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0007", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM journalist\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM journalist\nGROUP BY Nationality", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0010", "sql1": "\nSELECT date, name,\n             venue\nFROM event\nORDER BY date\n", "sql2": "SELECT Date , Name,\n              venue\nFROM event\nORDER BY Event_Attendance DESC", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/news_report/0006", "sql1": "\nSELECT DISTINCT nationality\nFROM\n  (SELECT LHS.journalist_id AS journalist_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          LHS.years_working AS years_working,\n          RHS.name AS name_other,\n          RHS.age AS age_other,\n          RHS.years_working AS years_working_other\n   FROM journalist AS LHS\n   INNER JOIN journalist AS RHS ON (LHS.years_working = RHS.journalist_id\n                                       AND LHS.nationality = RHS.nationality))\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM journalist\nORDER BY Years_working DESC\nLIMIT 1", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_1/0025", "sql1": "\nSELECT g_name,\n       rating\nFROM genre\nORDER BY g_name\n", "sql2": "SELECT g_name,\n       rating\nFROM genre\nORDER BY g_name", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0033", "sql1": "\nSELECT `song_name`\nFROM\n  (SELECT `LHS`.`f_id` AS `f_id`,\n          `LHS`.`artist_name` AS `artist_name`,\n          `LHS`.`file_size` AS `file_size`,\n          `LHS`.`duration` AS `duration`,\n          `LHS`.`formats` AS `formats`,\n          `RHS`.`song_name` AS `song_name`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`genre_is` AS `genre_is`,\n          `RHS`.`rating` AS `rating`,\n          `RHS`.`languages` AS `languages`,\n          `RHS`.`releasedate` AS `releasedate`,\n          `RHS`.`resolution` AS `resolution`\n   FROM `files` AS `LHS`\n   INNER JOIN `song` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`\n                                     AND `LHS`.`f_id` = `RHS`.`f_id`))\nWHERE (`formats` = 'mp3'\n       OR resolution = 1000.0)\nORDER BY song_name\n", "sql2": "SELECT T2.song_name\nFROM files AS T1\nJOIN song AS T2 ON T1.f_id = T2.f_id\nWHERE T1.formats = 'mp3' INTERSECT\n  SELECT song_name\n  FROM song WHERE resolution < 1000", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0013", "sql1": "\nSELECT DISTINCT `artist_name`\nFROM\n  (SELECT `LHS`.`song_name` AS `song_name`,\n          `LHS`.`artist_name` AS `artist_name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`f_id` AS `f_id`,\n          `LHS`.`genre_is` AS `genre_is`,\n          `LHS`.`rating` AS `rating`,\n          `LHS`.`languages` AS `languages`,\n          `LHS`.`releasedate` AS `releasedate`,\n          `LHS`.`resolution` AS `resolution`,\n          `RHS`.`artist_name` AS `artist_name_other`,\n          `RHS`.`country` AS `country_other`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`preferred_genre` AS `preferred_genre`\n   FROM\n     (SELECT *\n      FROM `song`\n      WHERE (`country` = 'UK'\n             AND `languages` = 'english')) AS LHS\n   CROSS JOIN artist AS RHS)\nWHERE (country != country_other\n       OR languages != country_other)\nORDER BY artist_name\n", "sql2": "SELECT artist_name\nFROM artist\nWHERE country = 'UK' INTERSECT\n  SELECT artist_name\n  FROM song WHERE languages = 'english'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0005", "sql1": "\nSELECT artist_name,\n       country\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM song\n           WHERE (rating >= 9.0)) AS RHS\n        WHERE (LHS.artist_name = RHS.artist_name\n               AND LHS.country = RHS.country) ))\nORDER BY artist_name\n", "sql2": "SELECT DISTINCT T1.artist_name,\n                T1.country\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T2.rating > 9", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0029", "sql1": "\nSELECT languages\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT artist_name,\n                languages,\n                COUNT(*) AS n\n         FROM song\n         GROUP BY artist_name,\n                  languages)\n      ORDER BY artist_name DESC)\n   LIMIT 1)\n", "sql2": "SELECT languages\nFROM song\nGROUP BY languages\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0004", "sql1": "\nSELECT `f_id`\nFROM `files`\nWHERE (`formats` = 'mp3')\nORDER BY f_id\n", "sql2": "SELECT f_id\nFROM files\nWHERE formats = 'mp3'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0012", "sql1": "\nSELECT formats\nFROM\n  (SELECT LHS.formats AS formats,\n          LHS.n AS n,\n          RHS.formats AS formats_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT formats,\n             COUNT(*) AS n\n      FROM files\n      GROUP BY formats) AS LHS\n   CROSS JOIN\n     (SELECT formats,\n             COUNT(*) AS n\n      FROM files\n      GROUP BY formats) AS RHS)\nWHERE (n > n_other)\nORDER BY formats\n", "sql2": "SELECT formats\nFROM files\nGROUP BY formats\nORDER BY COUNT (*) DESC\nLIMIT 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0032", "sql1": "\nSELECT `song_name`\nFROM `song`\nWHERE (`genre_is` = 'modern'\n       OR `languages` = 'english')\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nWHERE genre_is = 'modern'\n  OR languages = 'english'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0049", "sql1": "\nSELECT `artist_name`\nFROM `song`\nWHERE (`languages` = 'english'\n       AND rating <= 8.0)\nORDER BY artist_name\n", "sql2": "SELECT DISTINCT artist_name\nFROM song\nWHERE languages = 'english'\nEXCEPT\nSELECT DISTINCT artist_name\nFROM song\nWHERE rating > 8", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0015", "sql1": "\nSELECT `country`\nFROM\n  (SELECT `song_name`,\n          `artist_name`,\n          `country`,\n          `f_id`,\n          `genre_is`,\n          `rating`,\n          `languages`,\n          `releasedate`,\n          `resolution`,\n          `country_other`,\n          `gender`,\n          `genre_is` AS `preferred_genre`\n   FROM\n     (SELECT `LHS`.`song_name` AS `song_name`,\n             `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`f_id` AS `f_id`,\n             `LHS`.`genre_is` AS `genre_is`,\n             `LHS`.`rating` AS `rating`,\n             `LHS`.`languages` AS `languages`,\n             `LHS`.`releasedate` AS `releasedate`,\n             `LHS`.`resolution` AS `resolution`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`gender` AS `gender`\n      FROM `song` AS `LHS`\n      INNER JOIN `artist` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`\n                                          AND `LHS`.`genre_is` = `RHS`.`preferred_genre`)))\nWHERE (`gender` = 'Female'\n       AND `languages` = 'bangla')\nORDER BY country\n", "sql2": "SELECT T1.country\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T1.gender = 'Female'\n  AND T2.languages = 'bangla'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0003", "sql1": "\nSELECT `song_name`\nFROM `song`\nWHERE (`languages` = 'english')\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nWHERE languages = 'english'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0039", "sql1": "\nSELECT `artist_name`,\n       `n` AS `count___`\nFROM\n  (SELECT `LHS`.`country` AS `country`,\n          `LHS`.`languages` AS `languages`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`artist_name` AS `artist_name`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`preferred_genre` AS `preferred_genre`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `country`,\n                `languages`,\n                COUNT(*) AS `n`\n         FROM `song`\n         GROUP BY `country`,\n                  `languages`)\n      WHERE (`languages` = 'english'\n             OR n < 1)) AS LHS\n   LEFT JOIN artist AS RHS ON (LHS.country = RHS.country))\nORDER BY artist_name\n", "sql2": "SELECT T1.artist_name,\n       count(*)\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T2.languages = 'english'\nGROUP BY T2.artist_name\nHAVING count(*) >= 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0034", "sql1": "\nSELECT DISTINCT `artist_name`\nFROM\n  (SELECT `LHS`.`song_name` AS `song_name`,\n          `LHS`.`artist_name` AS `artist_name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`f_id` AS `f_id`,\n          `LHS`.`genre_is` AS `genre_is`,\n          `LHS`.`rating` AS `rating`,\n          `LHS`.`languages` AS `languages`,\n          `LHS`.`releasedate` AS `releasedate`,\n          `LHS`.`resolution` AS `resolution`,\n          `RHS`.`artist_name` AS `artist_name_other`,\n          `RHS`.`country` AS `country_other`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`preferred_genre` AS `preferred_genre`\n   FROM\n     (SELECT *\n      FROM `song`\n      WHERE (`country` = 'UK'\n             AND `languages` = 'english')) AS LHS\n   CROSS JOIN artist AS RHS)\nWHERE (country != country_other\n       OR languages != country_other)\nORDER BY artist_name\n", "sql2": "SELECT artist_name\nFROM artist\nWHERE country = 'UK' INTERSECT\n  SELECT T1.artist_name\n  FROM artist AS T1\n  JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0022", "sql1": "\nSELECT `song_name_other` AS `song_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`song_name` AS `song_name`,\n             `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`f_id` AS `f_id`,\n             `LHS`.`genre_is` AS `genre_is`,\n             `LHS`.`rating` AS `rating`,\n             `LHS`.`languages` AS `languages`,\n             `LHS`.`releasedate` AS `releasedate`,\n             `LHS`.`resolution` AS `resolution`,\n             `RHS`.`song_name` AS `song_name_other`,\n             `RHS`.`artist_name` AS `artist_name_other`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`f_id` AS `f_id_other`,\n             `RHS`.`genre_is` AS `genre_is_other`,\n             `RHS`.`rating` AS `rating_other`,\n             `RHS`.`languages` AS `languages_other`,\n             `RHS`.`releasedate` AS `releasedate_other`,\n             `RHS`.`resolution` AS `resolution_other`\n      FROM `song` AS `LHS`\n      CROSS JOIN `song` AS `RHS`)\n   WHERE (`genre_is` != `genre_is_other`\n          AND `rating` >= `rating_other`))\nWHERE (`genre_is` = 'blues')\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nWHERE rating <\n    (SELECT max(rating)\n     FROM song\n     WHERE genre_is = 'blues')", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0018", "sql1": "\nSELECT meanrating AS avg_rating_,\n       languages\nFROM\n  (SELECT languages,\n          releasedate,\n          AVG(rating) AS meanrating\n   FROM song\n   GROUP BY languages,\n            releasedate)\nORDER BY avg_rating_\n", "sql2": "SELECT avg(rating),\n       languages\nFROM song\nGROUP BY languages", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0002", "sql1": "\nSELECT f_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM files\n      ORDER BY duration DESC)\n   LIMIT 1)\n", "sql2": "SELECT f_id\nFROM files\nORDER BY duration DESC\nLIMIT 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0043", "sql1": "\nSELECT `song_name`\nFROM\n  (SELECT `song_name`,\n          `artist_name`,\n          `country`,\n          `f_id`,\n          `genre_is`,\n          `rating`,\n          `languages`,\n          `releasedate`,\n          `resolution`,\n          MIN(`rating`) OVER () AS `minrating`\n   FROM `song`)\nWHERE (`languages` != 'english'\n       AND minrating = rating)\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nWHERE rating <\n    (SELECT min(rating)\n     FROM song\n     WHERE languages = 'english')", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0017", "sql1": "\nSELECT n AS count___,\n       gender\nFROM\n  (SELECT gender,\n          COUNT(*) AS n\n   FROM artist\n   GROUP BY gender)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       gender\nFROM artist\nGROUP BY gender", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0040", "sql1": "\nSELECT artist_name,\n       country\nFROM\n  (SELECT song_name,\n          artist_name,\n          country,\n          f_id,\n          genre_is,\n          rating,\n          languages,\n          releasedate,\n          resolution,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT *\n      FROM song AS LHS\n      WHERE EXISTS\n          (SELECT 1\n           FROM artist AS RHS\n           WHERE (LHS.artist_name = RHS.artist_name\n                  AND LHS.country = RHS.country) )))\nWHERE (resolution > 900.0\n       OR n < 1)\nORDER BY artist_name\n", "sql2": "SELECT T1.artist_name,\n       T1.country\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T2.resolution > 900\nGROUP BY T2.artist_name\nHAVING count(*) >= 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0020", "sql1": "\nSELECT n AS count___,\n       formats\nFROM\n  (SELECT formats,\n          COUNT(*) AS n\n   FROM files\n   GROUP BY formats)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       formats\nFROM files\nGROUP BY formats", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0031", "sql1": "\nSELECT `artist_name`\nFROM `artist`\nWHERE (`country` = 'UK'\n       AND `gender` = 'Male')\nORDER BY artist_name\n", "sql2": "SELECT artist_name\nFROM artist\nWHERE country = 'UK'\n  AND gender = 'Male'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0027", "sql1": "\nSELECT `f_id`\nFROM\n  (SELECT `LHS`.`f_id` AS `f_id`,\n          `LHS`.`artist_name` AS `artist_name`,\n          `LHS`.`file_size` AS `file_size`,\n          `LHS`.`duration` AS `duration`,\n          `LHS`.`formats` AS `formats`,\n          `RHS`.`song_name` AS `song_name`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`genre_is` AS `genre_is`,\n          `RHS`.`rating` AS `rating`,\n          `RHS`.`languages` AS `languages`,\n          `RHS`.`releasedate` AS `releasedate`,\n          `RHS`.`resolution` AS `resolution`\n   FROM `files` AS `LHS`\n   INNER JOIN `song` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`\n                                     AND `LHS`.`f_id` = `RHS`.`f_id`))\nWHERE (`formats` = 'mp4'\n       OR resolution > 720.0)\nORDER BY f_id\n", "sql2": "SELECT f_id\nFROM files\nWHERE formats = 'mp4'\nUNION\nSELECT f_id\nFROM song\nWHERE resolution > 720", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0050", "sql1": "\nSELECT DISTINCT `artist_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`gender` AS `gender`,\n             `LHS`.`preferred_genre` AS `preferred_genre`,\n             `RHS`.`song_name` AS `song_name`,\n             `RHS`.`artist_name` AS `artist_name_other`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`f_id` AS `f_id`,\n             `RHS`.`genre_is` AS `genre_is`,\n             `RHS`.`rating` AS `rating`,\n             `RHS`.`languages` AS `languages`,\n             `RHS`.`releasedate` AS `releasedate`,\n             `RHS`.`resolution` AS `resolution`\n      FROM `artist` AS `LHS`\n      CROSS JOIN `song` AS `RHS`)\n   WHERE (`country` != `country_other`))\nWHERE (`country` = 'Bangladesh'\n       AND rating > 7.0)\nORDER BY artist_name\n", "sql2": "SELECT DISTINCT artist_name\nFROM artist\nWHERE country = 'Bangladesh'\nEXCEPT\nSELECT DISTINCT artist_name\nFROM song\nWHERE rating > 7", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0011", "sql1": "\nSELECT `meanrating` AS `avg_t2_rating_`\nFROM\n  (SELECT `gender`,\n          `languages`,\n          AVG(`rating`) AS `meanrating`\n   FROM\n     (SELECT `LHS`.`song_name` AS `song_name`,\n             `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`f_id` AS `f_id`,\n             `LHS`.`genre_is` AS `genre_is`,\n             `LHS`.`rating` AS `rating`,\n             `LHS`.`languages` AS `languages`,\n             `LHS`.`releasedate` AS `releasedate`,\n             `LHS`.`resolution` AS `resolution`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`gender` AS `gender`,\n             `RHS`.`preferred_genre` AS `preferred_genre`\n      FROM `song` AS `LHS`\n      INNER JOIN `artist` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`))\n   GROUP BY `gender`,\n            `languages`)\nWHERE (`gender` = 'Female')\nORDER BY avg_t2_rating_\n", "sql2": "SELECT avg(T2.rating)\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T1.gender = 'Female'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0047", "sql1": "\nSELECT `f_id`,\n       `genre_is`,\n       `artist_name`\nFROM `song`\nWHERE (`languages` = 'english')\nORDER BY f_id\n", "sql2": "SELECT f_id,\n       genre_is,\n       artist_name\nFROM song\nWHERE languages = 'english'\nORDER BY rating", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0010", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `artist`\n      WHERE (`country` = 'Bangladesh')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artist\nWHERE country = 'Bangladesh'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0006", "sql1": "\nSELECT file_size,\n       formats\nFROM\n  (SELECT LHS.song_name AS song_name,\n          LHS.artist_name AS artist_name,\n          LHS.country AS country,\n          LHS.f_id AS f_id,\n          LHS.genre_is AS genre_is,\n          LHS.rating AS rating,\n          LHS.languages AS languages,\n          LHS.releasedate AS releasedate,\n          LHS.resolution AS resolution,\n          RHS.f_id AS f_id_other,\n          RHS.file_size AS file_size,\n          RHS.duration AS duration,\n          RHS.formats AS formats\n   FROM\n     (SELECT *\n      FROM song\n      WHERE (resolution < 800.0)) AS LHS\n   INNER JOIN files AS RHS ON (LHS.artist_name = RHS.artist_name))\nORDER BY file_size\n", "sql2": "SELECT DISTINCT T1.file_size,\n                T1.formats\nFROM files AS T1\nJOIN song AS T2 ON T1.f_id = T2.f_id\nWHERE T2.resolution < 800", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/music_1/0026", "sql1": "\nSELECT song_name\nFROM song\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nORDER BY resolution", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_product/0009", "sql1": "\nSELECT `store_name`\nFROM\n  (SELECT `LHS`.`store_id` AS `store_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`area_size` AS `area_size`,\n          `LHS`.`number_of_product_category` AS `number_of_product_category`,\n          `LHS`.`ranking` AS `ranking`,\n          `LHS`.`district_id` AS `district_id`,\n          `LHS`.`district_name` AS `district_name`,\n          `LHS`.`headquartered_city` AS `headquartered_city`,\n          `LHS`.`city_population` AS `city_population`,\n          `LHS`.`city_area` AS `city_area`\n   FROM\n     (SELECT `LHS`.`store_id` AS `store_id`,\n             `LHS`.`store_name` AS `store_name`,\n             `LHS`.`type` AS `type`,\n             `LHS`.`area_size` AS `area_size`,\n             `LHS`.`number_of_product_category` AS `number_of_product_category`,\n             `LHS`.`ranking` AS `ranking`,\n             `RHS`.`district_id` AS `district_id`,\n             `RHS`.`district_name` AS `district_name`,\n             `RHS`.`headquartered_city` AS `headquartered_city`,\n             `RHS`.`city_population` AS `city_population`,\n             `RHS`.`city_area` AS `city_area`\n      FROM `store` AS `LHS`\n      CROSS JOIN `district` AS `RHS`) AS `LHS`\n   INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`\n                                               AND `LHS`.`district_id` = `RHS`.`district_id`))\nWHERE (`district_name` = 'Khanewal District')\nORDER BY store_name\n", "sql2": "SELECT t1.store_name\nFROM store AS t1\nJOIN store_district AS t2 ON t1.store_id = t2.store_id\nJOIN district AS t3 ON t2.district_id = t3.district_id\nWHERE t3.district_name = 'Khanewal District'", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0005", "sql1": "\nSELECT district_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM district\n      ORDER BY city_population DESC)\n   LIMIT 1)\n", "sql2": "SELECT district_name\nFROM district\nORDER BY city_population DESC\nLIMIT 1", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0004", "sql1": "\nSELECT district_name\nFROM district\nWHERE (city_area >= 10.0\n       OR city_population <= 100000.0)\nORDER BY district_name\n", "sql2": "SELECT district_name\nFROM district\nWHERE city_area > 10\n  OR City_Population > 100000", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0008", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM store\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       count(*)\nFROM store\nGROUP BY TYPE", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0015", "sql1": "\nSELECT DISTINCT `product`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`product` AS `product`,\n          `LHS`.`dimensions` AS `dimensions`,\n          `LHS`.`dpi` AS `dpi`,\n          `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,\n          `LHS`.`max_page_size` AS `max_page_size`,\n          `LHS`.`interface` AS `interface`,\n          `LHS`.`store_id` AS `store_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`area_size` AS `area_size`,\n          `LHS`.`number_of_product_category` AS `number_of_product_category`,\n          `LHS`.`ranking` AS `ranking`\n   FROM\n     (SELECT `LHS`.`product_id` AS `product_id`,\n             `LHS`.`product` AS `product`,\n             `LHS`.`dimensions` AS `dimensions`,\n             `LHS`.`dpi` AS `dpi`,\n             `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,\n             `LHS`.`max_page_size` AS `max_page_size`,\n             `LHS`.`interface` AS `interface`,\n             `RHS`.`store_id` AS `store_id`,\n             `RHS`.`store_name` AS `store_name`,\n             `RHS`.`type` AS `type`,\n             `RHS`.`area_size` AS `area_size`,\n             `RHS`.`number_of_product_category` AS `number_of_product_category`,\n             `RHS`.`ranking` AS `ranking`\n      FROM `product` AS `LHS`\n      CROSS JOIN `store` AS `RHS`) AS `LHS`\n   INNER JOIN `store_product` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`\n                                              AND `LHS`.`store_id` = `RHS`.`store_id`))\nWHERE (`store_name` != 'Miramichi')\nORDER BY product\n", "sql2": "SELECT t1.product\nFROM product AS t1\nJOIN store_product AS t2 ON t1.product_id = t2.product_id\nJOIN store AS t3 ON t2.store_id = t3.store_id\nWHERE t3.store_name = 'Miramichi'", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0003", "sql1": "\nSELECT district_name,\n       city_population\nFROM district\nWHERE (city_population >= 200000.0\n       AND city_population <= 2000000.0)\nORDER BY district_name\n", "sql2": "SELECT District_name,\n       City_Population\nFROM district\nWHERE City_Population BETWEEN 200000 AND 2000000", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0019", "sql1": "\nSELECT max_page_size\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product AS product,\n          LHS.dimensions AS dimensions,\n          LHS.dpi AS dpi,\n          LHS.pages_per_minute_color AS pages_per_minute_color,\n          LHS.max_page_size AS max_page_size,\n          LHS.interface AS interface\n   FROM product AS LHS\n   INNER JOIN\n     (SELECT product,\n             COUNT(*) AS n\n      FROM product\n      GROUP BY product) AS RHS ON (LHS.product_id = RHS.n\n                                   AND LHS.product = RHS.product))\nORDER BY max_page_size\n", "sql2": "SELECT max_page_size\nFROM product\nGROUP BY max_page_size\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0002", "sql1": "\nSELECT max_page_size\nFROM\n  (SELECT dpi,\n          max_page_size,\n          COUNT(*) AS n\n   FROM product\n   GROUP BY dpi,\n            max_page_size)\nWHERE (n >= 3)\nORDER BY max_page_size\n", "sql2": "SELECT max_page_size\nFROM product\nGROUP BY max_page_size\nHAVING count(*) > 3", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0014", "sql1": "\nSELECT meanpages_per_minute_color AS avg_pages_per_minute_color_\nFROM\n  (SELECT dpi,\n          interface,\n          AVG(pages_per_minute_color) AS meanpages_per_minute_color\n   FROM product\n   GROUP BY dpi,\n            interface)\nORDER BY avg_pages_per_minute_color_\n", "sql2": "SELECT avg(pages_per_minute_color)\nFROM product", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0001", "sql1": "\nSELECT district_name\nFROM district\nORDER BY district_name\n", "sql2": "SELECT DISTINCT District_name\nFROM district\nORDER BY city_area DESC", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0017", "sql1": "\nSELECT `product`\nFROM `product`\nWHERE (`max_page_size` = 'A4'\n       OR pages_per_minute_color = 5.0)\nORDER BY product\n", "sql2": "SELECT product\nFROM product\nWHERE max_page_size = 'A4'\n  OR pages_per_minute_color < 5", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0020", "sql1": "\nSELECT product\nFROM\n  (SELECT interface,\n          product,\n          COUNT(*) AS n\n   FROM product\n   GROUP BY interface,\n            product)\nWHERE (n <= 1)\nORDER BY product\n", "sql2": "SELECT product\nFROM product\nWHERE product !=\n    (SELECT max_page_size\n     FROM product\n     GROUP BY max_page_size\n     ORDER BY count(*) DESC\n     LIMIT 1)", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0016", "sql1": "\nSELECT `product`\nFROM `product`\nWHERE (`max_page_size` = 'A4'\n       AND pages_per_minute_color < 5.0)\nORDER BY product\n", "sql2": "SELECT product\nFROM product\nWHERE max_page_size = 'A4'\n  AND pages_per_minute_color < 5", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0007", "sql1": "\nSELECT sumcity_population AS sum_city_population_\nFROM\n  (SELECT SUM(city_population) AS sumcity_population\n   FROM\n     (SELECT *\n      FROM district\n      WHERE (city_population > 3.0)))\nORDER BY sum_city_population_\n", "sql2": "SELECT sum(city_population)\nFROM district\nORDER BY city_area DESC\nLIMIT 3", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0011", "sql1": "\nSELECT `headquartered_city`\nFROM\n  (SELECT `LHS`.`store_id` AS `store_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`area_size` AS `area_size`,\n          `LHS`.`number_of_product_category` AS `number_of_product_category`,\n          `LHS`.`ranking` AS `ranking`,\n          `LHS`.`district_id` AS `district_id`,\n          `LHS`.`district_name` AS `district_name`,\n          `LHS`.`headquartered_city` AS `headquartered_city`,\n          `LHS`.`city_population` AS `city_population`,\n          `LHS`.`city_area` AS `city_area`\n   FROM\n     (SELECT `LHS`.`store_id` AS `store_id`,\n             `LHS`.`store_name` AS `store_name`,\n             `LHS`.`type` AS `type`,\n             `LHS`.`area_size` AS `area_size`,\n             `LHS`.`number_of_product_category` AS `number_of_product_category`,\n             `LHS`.`ranking` AS `ranking`,\n             `RHS`.`district_id` AS `district_id`,\n             `RHS`.`district_name` AS `district_name`,\n             `RHS`.`headquartered_city` AS `headquartered_city`,\n             `RHS`.`city_population` AS `city_population`,\n             `RHS`.`city_area` AS `city_area`\n      FROM `store` AS `LHS`\n      CROSS JOIN `district` AS `RHS`) AS `LHS`\n   INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`\n                                               AND `LHS`.`district_id` = `RHS`.`district_id`))\nWHERE (`store_name` = 'Blackville')\nORDER BY headquartered_city\n", "sql2": "SELECT t3.headquartered_city\nFROM store AS t1\nJOIN store_district AS t2 ON t1.store_id = t2.store_id\nJOIN district AS t3 ON t2.district_id = t3.district_id\nWHERE t1.store_name = 'Blackville'", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_product/0006", "sql1": "\nSELECT district_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM district\n      ORDER BY city_area)\n   LIMIT 1)\n", "sql2": "SELECT district_name\nFROM district\nORDER BY city_area ASC\nLIMIT 1", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0009", "sql1": "\nSELECT nationality\nFROM host\nWHERE (age = 45)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM HOST\nWHERE Age > 45 INTERSECT\n  SELECT Nationality\n  FROM HOST WHERE Age < 35", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.party_id AS party_id,\n          LHS.party_theme AS party_theme,\n          LHS.location AS LOCATION,\n          LHS.first_year AS first_year,\n          LHS.last_year AS last_year,\n          LHS.number_of_hosts AS number_of_hosts,\n          LHS.host_id AS host_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          LHS.is_main_in_charge AS is_main_in_charge\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.party_theme AS party_theme,\n             LHS.location AS LOCATION,\n             LHS.first_year AS first_year,\n             LHS.last_year AS last_year,\n             LHS.number_of_hosts AS number_of_hosts,\n             LHS.host_id AS host_id,\n             LHS.name AS name,\n             LHS.nationality AS nationality,\n             LHS.age AS age,\n             RHS.is_main_in_charge AS is_main_in_charge\n      FROM\n        (SELECT LHS.party_id AS party_id,\n                LHS.party_theme AS party_theme,\n                LHS.location AS LOCATION,\n                LHS.first_year AS first_year,\n                LHS.last_year AS last_year,\n                LHS.number_of_hosts AS number_of_hosts,\n                RHS.host_id AS host_id,\n                RHS.name AS name,\n                RHS.nationality AS nationality,\n                RHS.age AS age\n         FROM party AS LHS\n         CROSS JOIN host AS RHS) AS LHS\n      INNER JOIN party_host AS RHS ON (LHS.party_id = RHS.party_id\n                                          AND LHS.host_id = RHS.host_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM party\n      WHERE (number_of_hosts >= 20)) AS RHS ON (LHS.party_id = RHS.party_id\n                                                AND LHS.party_theme = RHS.party_theme\n                                                AND LHS.location = RHS.location\n                                                AND LHS.first_year = RHS.first_year\n                                                AND LHS.last_year = RHS.last_year\n                                                AND LHS.number_of_hosts = RHS.number_of_hosts))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM party_host AS T1\nJOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID\nJOIN party AS T3 ON T1.Party_ID = T3.Party_ID\nWHERE T3.Number_of_hosts > 20", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0005", "sql1": "\nSELECT DISTINCT AVG(number_of_hosts) OVER () AS avg_number_of_hosts_\nFROM party\nORDER BY avg_number_of_hosts_\n", "sql2": "SELECT avg(Number_of_hosts)\nFROM party", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0004", "sql1": "\nSELECT `first_year`,\n       `last_year`\nFROM `party`\nWHERE (`party_theme` = 'Spring'\n       OR `party_theme` = 'Teqnology')\nORDER BY first_year\n", "sql2": "SELECT First_year,\n       Last_year\nFROM party\nWHERE Party_Theme = 'Spring'\n  OR Party_Theme = 'Teqnology'", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0012", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.host_id AS host_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          LHS.party_id AS party_id,\n          LHS.is_main_in_charge AS is_main_in_charge,\n          RHS.party_theme AS party_theme,\n          RHS.location AS LOCATION,\n          RHS.first_year AS first_year,\n          RHS.last_year AS last_year,\n          RHS.number_of_hosts AS number_of_hosts,\n          RHS.party_theme_other AS party_theme_other,\n          RHS.location_other AS location_other,\n          RHS.first_year_other AS first_year_other,\n          RHS.number_of_hosts_other AS number_of_hosts_other\n   FROM\n     (SELECT LHS.host_id AS host_id,\n             LHS.name AS name,\n             LHS.nationality AS nationality,\n             LHS.age AS age,\n             RHS.party_id AS party_id,\n             RHS.is_main_in_charge AS is_main_in_charge\n      FROM host AS LHS\n      INNER JOIN party_host AS RHS ON (LHS.host_id = RHS.host_id)) AS LHS\n   INNER JOIN\n     (SELECT party_id,\n             party_theme,\n             LOCATION,\n             first_year,\n             first_year AS last_year,\n             number_of_hosts,\n             party_theme_other,\n             location_other,\n             first_year_other,\n             number_of_hosts_other\n      FROM\n        (SELECT number_of_hosts AS party_id,\n                party_theme,\n                LOCATION,\n                first_year,\n                last_year,\n                number_of_hosts,\n                party_theme_other,\n                location_other,\n                first_year_other,\n                number_of_hosts_other\n         FROM\n           (SELECT LHS.party_id AS party_id,\n                   LHS.party_theme AS party_theme,\n                   LHS.location AS LOCATION,\n                   LHS.first_year AS first_year,\n                   LHS.last_year AS last_year,\n                   LHS.number_of_hosts AS number_of_hosts,\n                   RHS.party_theme AS party_theme_other,\n                   RHS.location AS location_other,\n                   RHS.first_year AS first_year_other,\n                   RHS.number_of_hosts AS number_of_hosts_other\n            FROM party AS LHS\n            INNER JOIN party AS RHS ON (LHS.number_of_hosts = RHS.party_id\n                                           AND LHS.first_year = RHS.last_year)))) AS RHS ON (LHS.party_id = RHS.party_id))\nORDER BY LOCATION\n", "sql2": "SELECT T3.Location\nFROM party_host AS T1\nJOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID\nJOIN party AS T3 ON T1.Party_ID = T3.Party_ID\nWHERE T2.Age > 50", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0008", "sql1": "\nSELECT nationality\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT name,\n                nationality,\n                COUNT(*) AS n\n         FROM host\n         GROUP BY name,\n                  nationality)\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT Nationality\nFROM HOST\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM host AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM party_host AS RHS\n        WHERE (LHS.host_id = RHS.host_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM HOST\nWHERE Host_ID NOT IN\n    (SELECT Host_ID\n     FROM party_host)", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0003", "sql1": "\nSELECT party_theme,\n       LOCATION\nFROM party\nORDER BY party_theme\n", "sql2": "SELECT Party_Theme,\n       LOCATION\nFROM party", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0002", "sql1": "\nSELECT party_theme\nFROM party\nORDER BY party_theme\n", "sql2": "SELECT Party_Theme\nFROM party\nORDER BY Number_of_hosts ASC", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0014", "sql1": "\nSELECT name,\n       nationality\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM host\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name,\n       Nationality\nFROM HOST\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM party)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM party", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0007", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM host\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM HOST\nGROUP BY Nationality", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0010", "sql1": "\nSELECT party_theme,\n       name\nFROM\n  (SELECT LHS.party_id AS party_id,\n          LHS.party_theme AS party_theme,\n          LHS.location AS LOCATION,\n          LHS.first_year AS first_year,\n          LHS.last_year AS last_year,\n          LHS.number_of_hosts AS number_of_hosts,\n          LHS.host_id AS host_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          RHS.is_main_in_charge AS is_main_in_charge\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.party_theme AS party_theme,\n             LHS.location AS LOCATION,\n             LHS.first_year AS first_year,\n             LHS.last_year AS last_year,\n             LHS.number_of_hosts AS number_of_hosts,\n             RHS.host_id AS host_id,\n             RHS.name AS name,\n             RHS.nationality AS nationality,\n             RHS.age AS age\n      FROM party AS LHS\n      CROSS JOIN host AS RHS) AS LHS\n   INNER JOIN party_host AS RHS ON (LHS.party_id = RHS.party_id\n                                       AND LHS.host_id = RHS.host_id))\nORDER BY party_theme\n", "sql2": "SELECT T3.Party_Theme,\n       T2.Name\nFROM party_host AS T1\nJOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID\nJOIN party AS T3 ON T1.Party_ID = T3.Party_ID", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_host/0006", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM party\n      ORDER BY number_of_hosts DESC)\n   LIMIT 1)\n", "sql2": "SELECT LOCATION\nFROM party\nORDER BY Number_of_hosts DESC\nLIMIT 1", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0013", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM ship)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ship", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0005", "sql1": "\nSELECT name,\n       CLASS,\n       rank\nFROM captain\nORDER BY name\n", "sql2": "SELECT name,\n       CLASS,\n       rank\nFROM captain", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0004", "sql1": "\nSELECT name\nFROM captain\nORDER BY name\n", "sql2": "SELECT name\nFROM captain\nORDER BY age DESC", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM captain\n      ORDER BY ship_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM captain\nORDER BY age\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0008", "sql1": "\nSELECT `name`\nFROM `captain`\nWHERE (`rank` = 'Midshipman'\n       OR `rank` = 'Lieutenant')\nORDER BY name\n", "sql2": "SELECT name\nFROM captain\nWHERE rank = 'Midshipman'\n  OR rank = 'Lieutenant'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0015", "sql1": "\nSELECT n AS count___,\n       flag\nFROM\n  (SELECT flag,\n          COUNT(*) AS n\n   FROM ship\n   GROUP BY flag)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       flag\nFROM ship\nGROUP BY flag", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0019", "sql1": "\nSELECT built_year\nFROM\n  (SELECT LHS.ship_id AS ship_id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.built_year AS built_year,\n          LHS.class AS CLASS,\n          LHS.flag AS flag,\n          RHS.flag AS flag_other\n   FROM ship AS LHS\n   INNER JOIN\n     (SELECT CLASS,\n             flag,\n             COUNT(*) AS n\n      FROM ship\n      GROUP BY CLASS,\n               flag) AS RHS ON (LHS.ship_id = RHS.n\n                                AND LHS.class = RHS.class))\nORDER BY built_year\n", "sql2": "SELECT built_year\nFROM ship\nGROUP BY built_year\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0023", "sql1": "\nSELECT `name`,\n       `flag`\nFROM\n  (SELECT *\n   FROM `ship` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `captain`\n           WHERE (`rank` = 'Midshipman')) AS RHS\n        WHERE (LHS.ship_id = RHS.ship_id) ))\nORDER BY name\n", "sql2": "SELECT name,\n       flag\nFROM ship\nWHERE ship_id NOT IN\n    (SELECT ship_id\n     FROM captain\n     WHERE rank = 'Midshipman')", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0018", "sql1": "\nSELECT `type`\nFROM `ship`\nWHERE (`flag` != 'Panama'\n       OR `flag` = 'Malta')\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM ship\nWHERE flag = 'Panama' INTERSECT\n  SELECT TYPE\n  FROM ship WHERE flag = 'Malta'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0002", "sql1": "\nSELECT n AS count___,\n       rank\nFROM\n  (SELECT rank,\n          COUNT(*) AS n\n   FROM captain\n   GROUP BY rank)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       rank\nFROM captain\nGROUP BY rank", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0014", "sql1": "\nSELECT name,\n       TYPE,\n       flag\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM ship\n      ORDER BY built_year DESC)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       TYPE,\n       flag\nFROM ship\nORDER BY built_year DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0001", "sql1": "\nSELECT n_distinct AS count_distinct_rank_\nFROM\n  (SELECT COUNT(DISTINCT rank) AS n_distinct\n   FROM captain)\nORDER BY count_distinct_rank_\n", "sql2": "SELECT count(DISTINCT rank)\nFROM captain", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0017", "sql1": "\nSELECT name\nFROM ship\nORDER BY name\n", "sql2": "SELECT name\nFROM ship\nORDER BY built_year,\n         CLASS", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0021", "sql1": "\nSELECT name,\n       CLASS\nFROM\n  (SELECT *\n   FROM ship AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM captain AS RHS\n        WHERE (LHS.ship_id = RHS.ship_id) ))\nORDER BY name\n", "sql2": "SELECT name,\n       CLASS\nFROM ship\nWHERE ship_id NOT IN\n    (SELECT ship_id\n     FROM captain)", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.ship_id AS ship_id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.built_year AS built_year,\n          LHS.class AS CLASS,\n          LHS.flag AS flag,\n          RHS.n AS n\n   FROM ship AS LHS\n   INNER JOIN\n     (SELECT ship_id,\n             COUNT(*) AS n\n      FROM captain\n      GROUP BY ship_id) AS RHS ON (LHS.ship_id = RHS.ship_id))\nWHERE (n > 1)\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM ship AS t1\nJOIN captain AS t2 ON t1.ship_id = t2.ship_id\nGROUP BY t2.ship_id\nHAVING count(*) > 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0016", "sql1": "\nSELECT DISTINCT flag\nFROM\n  (SELECT LHS.ship_id AS ship_id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.built_year AS built_year,\n          LHS.class AS CLASS,\n          LHS.flag AS flag,\n          RHS.built_year AS built_year_other\n   FROM ship AS LHS\n   INNER JOIN\n     (SELECT built_year,\n             CLASS,\n             COUNT(*) AS n\n      FROM ship\n      GROUP BY built_year,\n               CLASS) AS RHS ON (LHS.ship_id = RHS.n\n                                 AND LHS.class = RHS.class))\nORDER BY flag\n", "sql2": "SELECT flag\nFROM ship\nGROUP BY flag\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0007", "sql1": "\nSELECT CLASS\nFROM\n  (SELECT CLASS,\n          COUNT(*) AS n\n   FROM captain\n   GROUP BY CLASS)\nWHERE (n >= 2)\nORDER BY CLASS\n", "sql2": "SELECT CLASS\nFROM captain\nGROUP BY CLASS\nHAVING count(*) > 2", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0011", "sql1": "\nSELECT `rank`\nFROM\n  (SELECT *\n   FROM `captain` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `captain`\n           WHERE (`class` = 'Third-rate ship of the line')) AS RHS\n        WHERE (LHS.rank = RHS.rank) ))\nORDER BY rank\n", "sql2": "SELECT rank\nFROM captain\nEXCEPT\nSELECT rank\nFROM captain\nWHERE CLASS = 'Third-rate ship of the line'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0010", "sql1": "\nSELECT DISTINCT `rank`\nFROM `captain`\nWHERE (`class` = 'Cutter'\n       OR `class` = 'Armed schooner')\nORDER BY rank\n", "sql2": "SELECT rank\nFROM captain\nWHERE CLASS = 'Cutter' INTERSECT\n  SELECT rank\n  FROM captain WHERE CLASS = 'Armed schooner'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_1/0006", "sql1": "\nSELECT rank\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT rank,\n                COUNT(*) AS n\n         FROM captain\n         GROUP BY rank)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT rank\nFROM captain\nGROUP BY rank\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0009", "sql1": "\nSELECT DISTINCT product_type_code\nFROM\n  (SELECT product_id,\n          product_type_code,\n          product_name,\n          product_price,\n          COUNT(*) OVER () AS n\n   FROM products)\nWHERE (n >= 2)\nORDER BY product_type_code\n", "sql2": "SELECT Product_Type_Code\nFROM Products\nGROUP BY Product_Type_Code\nHAVING COUNT(*) >= 2", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0013", "sql1": "\nSELECT product_name\nFROM\n  (SELECT event_id,\n          product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_type_code AS product_type_code,\n             LHS.product_name AS product_name,\n             LHS.product_price AS product_price,\n             RHS.product_in_event_id AS product_in_event_id,\n             RHS.event_id AS event_id\n      FROM products AS LHS\n      INNER JOIN products_in_events AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY event_id,\n            product_name)\nWHERE (n = 2)\nORDER BY product_name\n", "sql2": "SELECT T1.Product_Name\nFROM Products AS T1\nJOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID\nGROUP BY T1.Product_Name\nHAVING COUNT(*) >= 2", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0005", "sql1": "\nSELECT meanproduct_price AS avg_product_price_\nFROM\n  (SELECT AVG(product_price) AS meanproduct_price\n   FROM products)\nORDER BY avg_product_price_\n", "sql2": "SELECT avg(Product_Price)\nFROM Products", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0004", "sql1": "\nSELECT `product_price`\nFROM `products`\nWHERE (`product_name` = 'Trading Policy')\nORDER BY product_price\n", "sql2": "SELECT Product_Price\nFROM Products\nWHERE Product_Name = 'Dining'\n  OR Product_Name = 'Trading Policy'", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0012", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_in_event_id AS product_in_event_id,\n             LHS.event_id AS event_id,\n             LHS.product_id AS product_id,\n             RHS.product_type_code AS product_type_code,\n             RHS.product_name AS product_name,\n             RHS.product_price AS product_price\n      FROM products_in_events AS LHS\n      INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY product_name)\nORDER BY product_name\n", "sql2": "SELECT T1.Product_Name,\n       COUNT(*)\nFROM Products AS T1\nJOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID\nGROUP BY T1.Product_Name\nORDER BY COUNT(*) DESC", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0008", "sql1": "\nSELECT product_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT product_id,\n                product_type_code,\n                COUNT(*) AS n\n         FROM products\n         GROUP BY product_id,\n                  product_type_code)\n      ORDER BY product_type_code DESC)\n   LIMIT 1)\n", "sql2": "SELECT Product_Type_Code\nFROM Products\nGROUP BY Product_Type_Code\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0015", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM products AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM products_in_events AS RHS\n        WHERE (LHS.product_id = RHS.product_id) ))\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nWHERE Product_ID NOT IN\n    (SELECT Product_ID\n     FROM Products_in_Events)", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0003", "sql1": "\nSELECT product_name,\n       product_type_code\nFROM products\nORDER BY product_name\n", "sql2": "SELECT Product_Name,\n       Product_Type_Code\nFROM Products", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0002", "sql1": "\nSELECT product_name\nFROM products\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nORDER BY Product_Price ASC", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM products\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Products", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0007", "sql1": "\nSELECT product_type_code,\n       n AS count___\nFROM\n  (SELECT product_type_code,\n          COUNT(*) AS n\n   FROM products\n   GROUP BY product_type_code)\nORDER BY product_type_code\n", "sql2": "SELECT Product_Type_Code,\n       COUNT(*)\nFROM Products\nGROUP BY Product_Type_Code", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0011", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_in_event_id AS product_in_event_id,\n             LHS.event_id AS event_id,\n             LHS.product_id AS product_id,\n             RHS.product_type_code AS product_type_code,\n             RHS.product_name AS product_name,\n             RHS.product_price AS product_price\n      FROM products_in_events AS LHS\n      INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY product_name)\nORDER BY product_name\n", "sql2": "SELECT T1.Product_Name,\n       COUNT(*)\nFROM Products AS T1\nJOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID\nGROUP BY T1.Product_Name", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0010", "sql1": "\nSELECT product_type_code\nFROM products\nWHERE (product_price > 4500.0\n       AND product_price > 3000.0)\nORDER BY product_type_code\n", "sql2": "SELECT Product_Type_Code\nFROM Products\nWHERE Product_Price > 4500 INTERSECT\n  SELECT Product_Type_Code\n  FROM Products WHERE Product_Price < 3000", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/solvency_ii/0006", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM products\n      ORDER BY product_price DESC)\n   LIMIT 1)\n", "sql2": "SELECT Product_Name\nFROM Products\nORDER BY Product_Price DESC\nLIMIT 1", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0009", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `product_category_code`,\n          COUNT(*) AS `n`\n   FROM `products`\n   GROUP BY `product_category_code`)\nWHERE (`product_category_code` = 'Seeds')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products\nWHERE product_category_code = 'Seeds'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0025", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `product_name`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `LHS`.`product_id` AS `product_id`,\n             `LHS`.`product_characteristic_value` AS `product_characteristic_value`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM\n        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n                `LHS`.`characteristic_name` AS `characteristic_name`,\n                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n                `RHS`.`product_id` AS `product_id`,\n                `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n         FROM `characteristics` AS `LHS`\n         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `products`\n         WHERE (`product_name` = 'laurel')) AS RHS ON (LHS.product_id = RHS.product_id)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t1.product_name = 'laurel'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0033", "sql1": "\nSELECT `product_category_code` AS `product_category_description`\nFROM `ref_product_categories`\nWHERE (`product_category_code` = 'Spices')\nORDER BY product_category_description\n", "sql2": "SELECT product_category_description\nFROM ref_product_categories\nWHERE product_category_code = 'Spices'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0013", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`color_description` = 'yellow')\nORDER BY product_name\n", "sql2": "SELECT T1.product_name\nFROM products AS T1\nJOIN ref_colors AS T2 ON T1.color_code = T2.color_code\nWHERE T2.color_description = 'yellow'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0005", "sql1": "\nSELECT color_description\nFROM ref_colors\nORDER BY color_description\n", "sql2": "SELECT color_description\nFROM ref_colors", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0029", "sql1": "\nSELECT DISTINCT `product_name`\nFROM\n  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM `characteristics` AS `LHS`\n      CROSS JOIN `products` AS `RHS`) AS `LHS`\n   INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                        AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`characteristic_name` = 'warm')\nORDER BY product_name\n", "sql2": "SELECT DISTINCT t1.product_name\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t3.characteristic_name = 'warm'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0028", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `LHS`.`product_characteristic_value` AS `product_characteristic_value`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `LHS`.`product_id` AS `product_id`,\n             `LHS`.`color_code` AS `color_code`,\n             `LHS`.`product_category_code` AS `product_category_code`,\n             `LHS`.`product_name` AS `product_name`,\n             `LHS`.`typical_buying_price` AS `typical_buying_price`,\n             `LHS`.`typical_selling_price` AS `typical_selling_price`,\n             `LHS`.`product_description` AS `product_description`,\n             `LHS`.`other_product_details` AS `other_product_details`,\n             `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n      FROM\n        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n                `LHS`.`characteristic_name` AS `characteristic_name`,\n                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n                `RHS`.`product_id` AS `product_id`,\n                `RHS`.`color_code` AS `color_code`,\n                `RHS`.`product_category_code` AS `product_category_code`,\n                `RHS`.`product_name` AS `product_name`,\n                `RHS`.`typical_buying_price` AS `typical_buying_price`,\n                `RHS`.`typical_selling_price` AS `typical_selling_price`,\n                `RHS`.`product_description` AS `product_description`,\n                `RHS`.`other_product_details` AS `other_product_details`\n         FROM `characteristics` AS `LHS`\n         CROSS JOIN `products` AS `RHS`) AS `LHS`\n      INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                           AND `LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT `characteristic_data_type`,\n             `characteristic_id`,\n             COUNT(DISTINCT `characteristic_name`) AS `n_distinct`\n      FROM `characteristics`\n      GROUP BY `characteristic_data_type`,\n               `characteristic_id`) AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                 AND `LHS`.`characteristic_data_type` = `RHS`.`characteristic_data_type`))\nWHERE (`characteristic_name` = 'hot')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t3.characteristic_name = 'hot'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0004", "sql1": "\nSELECT product_name,\n       typical_buying_price\nFROM products\nORDER BY product_name\n", "sql2": "SELECT product_name,\n       typical_buying_price\nFROM products", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0012", "sql1": "\nSELECT `product_category_code`\nFROM `products`\nWHERE (`product_name` = 'flax')\nORDER BY product_category_code\n", "sql2": "SELECT product_category_code\nFROM products\nWHERE product_name = 'flax'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0032", "sql1": "\nSELECT `unit_of_measure`\nFROM `ref_product_categories`\nWHERE (`product_category_code` = 'Herbs')\nORDER BY unit_of_measure\n", "sql2": "SELECT unit_of_measure\nFROM ref_product_categories\nWHERE product_category_code = 'Herbs'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0024", "sql1": "\nSELECT `characteristic_name`\nFROM\n  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM `characteristics` AS `LHS`\n      CROSS JOIN `products` AS `RHS`) AS `LHS`\n   INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                        AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`product_name` = 'sesame'\n       AND `characteristic_type_code` = 'Grade')\nORDER BY characteristic_name\n", "sql2": "SELECT t3.characteristic_name\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t1.product_name = 'sesame'\n  AND t3.characteristic_type_code = 'Grade'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0008", "sql1": "\nSELECT `product_name`,\n       `color_description`,\n       `product_description`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products`\n      WHERE (`product_category_code` = 'Herbs')) AS RHS ON (LHS.color_code = RHS.color_code))\nORDER BY product_name\n", "sql2": "SELECT T1.product_name,\n       T2.color_description,\n       T1.product_description\nFROM products AS T1\nJOIN Ref_colors AS T2 ON T1.color_code = T2.color_code\nWHERE product_category_code = 'Herbs'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0015", "sql1": "\nSELECT `color_description`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`color_description` AS `color_description`\n   FROM `products` AS `LHS`\n   LEFT JOIN `ref_colors` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`product_name` = 'catnip')\nORDER BY color_description\n", "sql2": "SELECT t2.color_description\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t1.product_name = 'catnip'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM characteristics\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CHARACTERISTICS", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0019", "sql1": "\nSELECT `product_name`,\n       `typical_buying_price`,\n       `typical_selling_price`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`color_description` = 'yellow')\nORDER BY product_name\n", "sql2": "SELECT t1.product_name,\n       t1.typical_buying_price,\n       t1.typical_selling_price\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t2.color_description = 'yellow'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0023", "sql1": "\nSELECT `characteristic_name`,\n       `characteristic_data_type`\nFROM\n  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM `characteristics` AS `LHS`\n      CROSS JOIN `products` AS `RHS`) AS `LHS`\n   INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                        AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`product_name` = 'cumin')\nORDER BY characteristic_name\n", "sql2": "SELECT t3.characteristic_name,\n       t3.characteristic_data_type\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t1.product_name = 'cumin'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0035", "sql1": "\nSELECT `unit_of_measure`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_category_description` AS `product_category_description`,\n          `RHS`.`unit_of_measure` AS `unit_of_measure`\n   FROM\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'cumin')) AS LHS\n   LEFT JOIN ref_product_categories AS RHS ON (LHS.product_category_code = RHS.product_category_code))\nORDER BY unit_of_measure\n", "sql2": "SELECT t2.unit_of_measure\nFROM products AS t1\nJOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code\nWHERE t1.product_name = 'cumin'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0034", "sql1": "\nSELECT `product_category_code` AS `product_category_description`,\n       `unit_of_measure`\nFROM `ref_product_categories`\nWHERE (`product_category_code` = 'Herbs')\nORDER BY product_category_description\n", "sql2": "SELECT product_category_description,\n       unit_of_measure\nFROM ref_product_categories\nWHERE product_category_code = 'Herbs'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0022", "sql1": "\nSELECT `characteristic_name`\nFROM\n  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM `characteristics` AS `LHS`\n      CROSS JOIN `products` AS `RHS`) AS `LHS`\n   INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                        AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`product_name` = 'sesame')\nORDER BY characteristic_name\n", "sql2": "SELECT t3.characteristic_name\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t1.product_name = 'sesame'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0018", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`color_description` = 'white')\nORDER BY product_name\n", "sql2": "SELECT t1.product_name\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t2.color_description = 'white'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0038", "sql1": "\nSELECT color_description\nFROM\n  (SELECT LHS.color_code AS color_code,\n          LHS.color_description AS color_description,\n          LHS.n AS n,\n          RHS.product_category_code AS product_category_code,\n          RHS.product_name AS product_name,\n          RHS.typical_buying_price AS typical_buying_price,\n          RHS.typical_selling_price AS typical_selling_price,\n          RHS.product_description AS product_description,\n          RHS.other_product_details AS other_product_details\n   FROM\n     (SELECT color_code,\n             color_description,\n             COUNT(*) AS n\n      FROM ref_colors\n      GROUP BY color_code,\n               color_description) AS LHS\n   INNER JOIN products AS RHS ON (LHS.n = RHS.product_id\n                                     AND LHS.color_code = RHS.color_code))\nORDER BY color_description\n", "sql2": "SELECT t2.color_description\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nGROUP BY t2.color_description\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0002", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM ref_colors)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ref_colors", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0043", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM ref_colors AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM products AS RHS\n        WHERE (LHS.color_code = RHS.color_code) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_colors\nWHERE color_code NOT IN\n    (SELECT color_code\n     FROM products)", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM products\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0037", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_category_description` AS `product_category_description`,\n          `LHS`.`unit_of_measure` AS `unit_of_measure`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`\n   FROM\n     (SELECT `LHS`.`color_code` AS `color_code`,\n             `LHS`.`color_description` AS `color_description`,\n             `LHS`.`product_category_code` AS `product_category_code`,\n             `LHS`.`product_category_description` AS `product_category_description`,\n             `LHS`.`unit_of_measure` AS `unit_of_measure`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM\n        (SELECT `LHS`.`color_code` AS `color_code`,\n                `LHS`.`color_description` AS `color_description`,\n                `RHS`.`product_category_code` AS `product_category_code`,\n                `RHS`.`product_category_description` AS `product_category_description`,\n                `RHS`.`unit_of_measure` AS `unit_of_measure`\n         FROM `ref_colors` AS `LHS`\n         CROSS JOIN `ref_product_categories` AS `RHS`) AS `LHS`\n      INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`\n                                            AND `LHS`.`product_category_code` = `RHS`.`product_category_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `ref_colors`\n      WHERE (`color_description` = 'white')) AS RHS ON (LHS.color_code = RHS.color_code\n                                                        AND LHS.color_description = RHS.color_description))\nORDER BY product_name\n", "sql2": "SELECT t1.product_name\nFROM products AS t1\nJOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code\nJOIN ref_colors AS t3 ON t1.color_code = t3.color_code\nWHERE t3.color_description = 'white'\n  AND t2.unit_of_measure != 'Handful'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0020", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `product_id`,\n             COUNT(*) AS `n`\n      FROM `product_characteristics`\n      GROUP BY `product_id`) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `products`\n           WHERE (`product_name` != 'sesame')) AS RHS\n        WHERE (LHS.product_id = RHS.product_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nWHERE t1.product_name = 'sesame'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0036", "sql1": "\nSELECT `unit_of_measure`,\n       `product_category_code`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_category_description` AS `product_category_description`,\n          `RHS`.`unit_of_measure` AS `unit_of_measure`\n   FROM\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'chervil')) AS LHS\n   LEFT JOIN ref_product_categories AS RHS ON (LHS.product_category_code = RHS.product_category_code))\nORDER BY unit_of_measure\n", "sql2": "SELECT t2.unit_of_measure,\n       t2.product_category_code\nFROM products AS t1\nJOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code\nWHERE t1.product_name = 'chervil'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0041", "sql1": "\nSELECT characteristic_name,\n       other_characteristic_details,\n       characteristic_data_type\nFROM\n  (SELECT *\n   FROM characteristics AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM product_characteristics AS RHS\n        WHERE (LHS.characteristic_id = RHS.characteristic_id) ))\nORDER BY characteristic_name\n", "sql2": "SELECT characteristic_name,\n       other_characteristic_details,\n       characteristic_data_type\nFROM CHARACTERISTICS\nEXCEPT\nSELECT t1.characteristic_name,\n       t1.other_characteristic_details,\n       t1.characteristic_data_type\nFROM CHARACTERISTICS AS t1\nJOIN product_characteristics AS t2 ON t1.characteristic_id = t2.characteristic_id", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0016", "sql1": "\nSELECT `color_code`,\n       `color_description`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`color_description` AS `color_description`\n   FROM `products` AS `LHS`\n   LEFT JOIN `ref_colors` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`product_name` = 'chervil')\nORDER BY color_code\n", "sql2": "SELECT t1.color_code,\n       t2.color_description\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t1.product_name = 'chervil'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0027", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n   FROM\n     (SELECT `LHS`.`color_code` AS `color_code`,\n             `LHS`.`color_description` AS `color_description`,\n             `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM\n        (SELECT `LHS`.`color_code` AS `color_code`,\n                `LHS`.`color_description` AS `color_description`,\n                `RHS`.`characteristic_id` AS `characteristic_id`,\n                `RHS`.`characteristic_type_code` AS `characteristic_type_code`,\n                `RHS`.`characteristic_data_type` AS `characteristic_data_type`,\n                `RHS`.`characteristic_name` AS `characteristic_name`,\n                `RHS`.`other_characteristic_details` AS `other_characteristic_details`\n         FROM `ref_colors` AS `LHS`\n         CROSS JOIN `characteristics` AS `RHS`) AS `LHS`\n      INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`)) AS `LHS`\n   INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                        AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`color_description` = 'red'\n       AND `characteristic_name` = 'fast')\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nJOIN ref_colors AS t4 ON t1.color_code = t4.color_code\nWHERE t4.color_description = 'red'\n  AND t3.characteristic_name = 'fast'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0007", "sql1": "\nSELECT `product_name`\nFROM `products`\nWHERE (`product_category_code` = 'Spices')\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM products\nWHERE product_category_code = 'Spices'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0011", "sql1": "\nSELECT `product_category_code`,\n       `typical_buying_price`\nFROM `products`\nWHERE (`product_name` = 'cumin')\nORDER BY product_category_code\n", "sql2": "SELECT product_category_code,\n       typical_buying_price\nFROM products\nWHERE product_name = 'cumin'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0006", "sql1": "\nSELECT DISTINCT characteristic_name\nFROM characteristics\nORDER BY characteristic_name\n", "sql2": "SELECT DISTINCT characteristic_name\nFROM CHARACTERISTICS", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_gen_characteristics/0026", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `product_name`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `LHS`.`product_id` AS `product_id`,\n             `LHS`.`product_characteristic_value` AS `product_characteristic_value`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM\n        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n                `LHS`.`characteristic_name` AS `characteristic_name`,\n                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n                `RHS`.`product_id` AS `product_id`,\n                `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n         FROM `characteristics` AS `LHS`\n         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `products`\n         WHERE (`product_name` = 'flax')) AS RHS ON (LHS.product_id = RHS.product_id)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t1.product_name = 'flax'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0009", "sql1": "\nSELECT DISTINCT `thing_id`,\n                `type_of_thing_code`\nFROM\n  (SELECT `LHS`.`thing_id` AS `thing_id`,\n          `LHS`.`organization_id` AS `organization_id`,\n          `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `LHS`.`service_details` AS `service_details`,\n          `RHS`.`date_and_date` AS `date_and_date`,\n          `RHS`.`status_of_thing_code` AS `status_of_thing_code`\n   FROM `things` AS `LHS`\n   INNER JOIN `timed_status_of_things` AS `RHS` ON (`LHS`.`thing_id` = `RHS`.`thing_id`))\nWHERE (`status_of_thing_code` = 'Close'\n       OR `date_and_date` < parse_datetime('2017-06-19 02:59:21'))\nORDER BY thing_id\n", "sql2": "SELECT DISTINCT T2.thing_id,\n                T2.Type_of_Thing_Code\nFROM Timed_Status_of_Things AS T1\nJOIN Things AS T2 ON T1.thing_id = T2.thing_id\nWHERE T1.Status_of_Thing_Code = 'Close'\n  OR T1.Date_and_Date < '2017-06-19 02:59:21'", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0013", "sql1": "\nSELECT DISTINCT MAX(date_moved_in) OVER () AS max_date_moved_in_\nFROM residents\nORDER BY max_date_moved_in_\n", "sql2": "SELECT max(date_moved_in)\nFROM Residents", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0005", "sql1": "\nSELECT thing_id,\n       type_of_thing_code,\n       organization_details\nFROM\n  (SELECT LHS.organization_id AS organization_id,\n          LHS.parent_organization_id AS parent_organization_id,\n          LHS.organization_details AS organization_details,\n          RHS.thing_id AS thing_id,\n          RHS.type_of_thing_code AS type_of_thing_code,\n          RHS.service_type_code AS service_type_code,\n          RHS.service_details AS service_details\n   FROM organizations AS LHS\n   INNER JOIN things AS RHS ON (LHS.organization_id = RHS.organization_id))\nORDER BY thing_id\n", "sql2": "SELECT T1.thing_id,\n       T1.type_of_Thing_Code,\n       T2.organization_details\nFROM Things AS T1\nJOIN Organizations AS T2 ON T1.organization_id = T2.organization_id", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0012", "sql1": "\nSELECT organization_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM organizations\n      ORDER BY organization_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT organization_id\nFROM organizations\nEXCEPT\nSELECT parent_organization_id\nFROM organizations", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0015", "sql1": "\nSELECT customer_event_id,\n       date_moved_in,\n       property_id\nFROM customer_events\nORDER BY customer_event_id\n", "sql2": "SELECT customer_event_id,\n       date_moved_in,\n       property_id\nFROM customer_events", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0003", "sql1": "\nSELECT resident_id,\n       other_details,\n       n AS count___\nFROM\n  (SELECT LHS.resident_id AS resident_id,\n          LHS.property_id AS property_id,\n          LHS.date_moved_in AS date_moved_in,\n          LHS.date_moved_out AS date_moved_out,\n          LHS.other_details AS other_details,\n          RHS.property_id AS property_id_other,\n          RHS.n AS n\n   FROM residents AS LHS\n   INNER JOIN\n     (SELECT property_id,\n             resident_id,\n             COUNT(*) AS n\n      FROM residents_services\n      GROUP BY property_id,\n               resident_id) AS RHS ON (LHS.resident_id = RHS.resident_id))\nORDER BY resident_id\n", "sql2": "SELECT T1.resident_id,\n       T1.other_details,\n       count(*)\nFROM Residents AS T1\nJOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id\nGROUP BY T1.resident_id\nORDER BY count(*) DESC", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0002", "sql1": "\nSELECT DISTINCT `service_type_code`\nFROM\n  (SELECT `LHS`.`service_id` AS `service_id`,\n          `LHS`.`organization_id` AS `organization_id`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `LHS`.`service_details` AS `service_details`,\n          `RHS`.`parent_organization_id` AS `parent_organization_id`,\n          `RHS`.`organization_details` AS `organization_details`\n   FROM `services` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `organizations`\n      WHERE (`organization_details` = 'Denesik and Sons Party')) AS RHS ON (LHS.organization_id = RHS.organization_id))\nORDER BY service_type_code\n", "sql2": "SELECT DISTINCT T1.service_type_code\nFROM services AS T1\nJOIN organizations AS T2 ON T1.organization_id = T2.organization_id\nWHERE T2.organization_details = 'Denesik and Sons Party'", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0001", "sql1": "\nSELECT property_id,\n       n AS count___\nFROM\n  (SELECT LHS.property_id AS property_id,\n          LHS.n AS n,\n          RHS.property_type_code AS property_type_code,\n          RHS.property_address AS property_address,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT property_id,\n             COUNT(*) AS n\n      FROM residents\n      GROUP BY property_id) AS LHS\n   INNER JOIN properties AS RHS ON (LHS.property_id = RHS.property_id))\nORDER BY property_id\n", "sql2": "SELECT T1.property_id,\n       count(*)\nFROM properties AS T1\nJOIN residents AS T2 ON T1.property_id = T2.property_id\nGROUP BY T1.property_id", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0017", "sql1": "\nSELECT DISTINCT date_moved_in\nFROM residents\nORDER BY date_moved_in\n", "sql2": "SELECT DISTINCT date_moved_in\nFROM residents", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0016", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT customer_id) AS n_distinct\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.customer_event_id AS customer_event_id,\n                LHS.customer_id AS customer_id,\n                LHS.date_moved_in AS date_moved_in,\n                LHS.property_id AS property_id,\n                LHS.resident_id AS resident_id,\n                LHS.thing_id AS thing_id,\n                RHS.customer_id AS customer_id_other,\n                RHS.customer_details AS customer_details\n         FROM customer_events AS LHS\n         CROSS JOIN customers AS RHS)\n      WHERE (customer_id < customer_id_other)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM customer_events)", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0007", "sql1": "\nSELECT date_moved_in,\n       customer_id,\n       customer_details\nFROM\n  (SELECT LHS.customer_event_id AS customer_event_id,\n          LHS.customer_id AS customer_id,\n          LHS.date_moved_in AS date_moved_in,\n          LHS.property_id AS property_id,\n          LHS.resident_id AS resident_id,\n          LHS.thing_id AS thing_id,\n          RHS.customer_details AS customer_details\n   FROM customer_events AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY date_moved_in\n", "sql2": "SELECT T2.date_moved_in,\n       T1.customer_id,\n       T1.customer_details\nFROM Customers AS T1\nJOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT status_of_thing_code) OVER () AS count_distinct_status_of_thing_code_\nFROM timed_status_of_things\nORDER BY count_distinct_status_of_thing_code_\n", "sql2": "SELECT count(DISTINCT Status_of_Thing_Code)\nFROM Timed_Status_of_Things", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0010", "sql1": "\nSELECT DISTINCT `n` AS `count_distinct_t2_location_code_`\nFROM\n  (SELECT `LHS`.`thing_id` AS `thing_id`,\n          `LHS`.`organization_id` AS `organization_id`,\n          `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `LHS`.`service_details` AS `service_details`,\n          `LHS`.`date_and_time` AS `date_and_time`,\n          `LHS`.`location_code` AS `location_code`,\n          `LHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`thing_id` AS `thing_id`,\n             `LHS`.`organization_id` AS `organization_id`,\n             `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n             `LHS`.`service_type_code` AS `service_type_code`,\n             `LHS`.`service_details` AS `service_details`,\n             `LHS`.`date_and_time` AS `date_and_time`,\n             `LHS`.`location_code` AS `location_code`,\n             `RHS`.`n` AS `n`\n      FROM\n        (SELECT `LHS`.`thing_id` AS `thing_id`,\n                `LHS`.`organization_id` AS `organization_id`,\n                `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n                `LHS`.`service_type_code` AS `service_type_code`,\n                `LHS`.`service_details` AS `service_details`,\n                `RHS`.`date_and_time` AS `date_and_time`,\n                `RHS`.`location_code` AS `location_code`\n         FROM `things` AS `LHS`\n         INNER JOIN `timed_locations_of_things` AS `RHS` ON (`LHS`.`thing_id` = `RHS`.`thing_id`)) AS `LHS`\n      INNER JOIN\n        (SELECT `service_details`,\n                COUNT(*) AS `n`\n         FROM `things`\n         GROUP BY `service_details`) AS `RHS` ON (`LHS`.`service_details` = `RHS`.`service_details`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `service_details`,\n                COUNT(*) AS `n`\n         FROM `things`\n         GROUP BY `service_details`)\n      WHERE (`service_details` != 'Unsatisfied')) AS RHS ON (LHS.service_details = RHS.service_details\n                                                             AND LHS.n = RHS.n))\nORDER BY count_distinct_t2_location_code_\n", "sql2": "SELECT count(DISTINCT T2.Location_Code)\nFROM Things AS T1\nJOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id\nWHERE T1.service_details = 'Unsatisfied'", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_and_lot/0006", "sql1": "\nSELECT customer_id,\n       customer_details\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.n AS n,\n          RHS.customer_details AS customer_details\n   FROM\n     (SELECT *\n      FROM\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customer_events\n         GROUP BY customer_id)\n      WHERE (n > 3)) AS LHS\n   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_id\n", "sql2": "SELECT T1.customer_id,\n       T1.customer_details\nFROM Customers AS T1\nJOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id\nHAVING count(*) >= 3", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0009", "sql1": "\nSELECT publisher\nFROM book_club\nWHERE (YEAR != 1989\n       AND YEAR = 1990)\nORDER BY publisher\n", "sql2": "SELECT publisher\nFROM book_club\nWHERE YEAR = 1989 INTERSECT\n  SELECT publisher\n  FROM book_club WHERE YEAR = 1990", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0005", "sql1": "\nSELECT publisher,\n       n AS count___\nFROM\n  (SELECT publisher,\n          COUNT(*) AS n\n   FROM book_club\n   GROUP BY publisher)\nORDER BY publisher\n", "sql2": "SELECT publisher,\n       count(*)\nFROM book_club\nGROUP BY publisher", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0004", "sql1": "\nSELECT YEAR,\n       book_title,\n       publisher\nFROM book_club\nORDER BY YEAR\n", "sql2": "SELECT YEAR,\n       book_title,\n       publisher\nFROM book_club\nORDER BY YEAR DESC", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0012", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT director) OVER () AS count__distinct_director_\nFROM movie\nORDER BY count__distinct_director_\n", "sql2": "SELECT COUNT (DISTINCT director)\nFROM movie", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0008", "sql1": "\nSELECT category\nFROM\n  (SELECT category,\n          YEAR,\n          COUNT(DISTINCT YEAR) AS n_distinct\n   FROM\n     (SELECT *\n      FROM book_club\n      WHERE (YEAR != 1989\n             OR YEAR < 2))\n   GROUP BY category,\n            YEAR)\nORDER BY category\n", "sql2": "SELECT category\nFROM book_club\nWHERE YEAR > 1989\nGROUP BY category\nHAVING count(*) >= 2", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0015", "sql1": "\nSELECT director\nFROM movie\nWHERE (YEAR < 1999\n       OR YEAR <= 2000)\nORDER BY director\n", "sql2": "SELECT director\nFROM movie\nWHERE YEAR = 1999\n  OR YEAR = 2000", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0003", "sql1": "\nSELECT DISTINCT publisher\nFROM book_club\nORDER BY publisher\n", "sql2": "SELECT DISTINCT publisher\nFROM book_club", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0002", "sql1": "\nSELECT book_title,\n       author_or_editor\nFROM book_club\nWHERE (YEAR != 1989)\nORDER BY book_title\n", "sql2": "SELECT book_title,\n       author_or_editor\nFROM book_club\nWHERE YEAR > 1989", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM book_club\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM book_club", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0007", "sql1": "\nSELECT category,\n       n AS count___\nFROM\n  (SELECT category,\n          YEAR,\n          COUNT(*) AS n\n   FROM book_club\n   GROUP BY category,\n            YEAR)\nORDER BY category\n", "sql2": "SELECT category,\n       count(*)\nFROM book_club\nGROUP BY category", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0011", "sql1": "\nSELECT title,\n       YEAR,\n       director\nFROM movie\nORDER BY title\n", "sql2": "SELECT title,\n       YEAR,\n       director\nFROM movie\nORDER BY budget_million", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/culture_company/0006", "sql1": "\nSELECT publisher\nFROM\n  (SELECT LHS.year AS YEAR,\n          LHS.n AS n,\n          RHS.author_or_editor AS author_or_editor,\n          RHS.book_title AS book_title,\n          RHS.publisher AS publisher,\n          RHS.category AS category,\n          RHS.result AS RESULT\n   FROM\n     (SELECT YEAR,\n             COUNT(*) AS n\n      FROM book_club\n      GROUP BY YEAR) AS LHS\n   INNER JOIN book_club AS RHS ON (LHS.year = RHS.year\n                                      AND LHS.n = RHS.book_club_id))\nORDER BY publisher\n", "sql2": "SELECT publisher\nFROM book_club\nGROUP BY publisher\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0009", "sql1": "\nSELECT name\nFROM pilot\nWHERE (age <= 30)\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nWHERE Age <= 30\nORDER BY Name DESC", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0004", "sql1": "\nSELECT `international_passengers`,\n       `domestic_passengers`\nFROM `airport`\nWHERE (`airport_name` = 'London Heathrow')\nORDER BY international_passengers\n", "sql2": "SELECT International_Passengers,\n       Domestic_Passengers\nFROM airport\nWHERE Airport_Name = 'London Heathrow'", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0012", "sql1": "\nSELECT `meantotal_passengers` AS `avg_t3_total_passengers_`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`airport_id` AS `airport_id`,\n          `LHS`.`aircraft_id` AS `aircraft_id`,\n          `LHS`.`aircraft` AS `aircraft`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`max_gross_weight` AS `max_gross_weight`,\n          `LHS`.`total_disk_area` AS `total_disk_area`,\n          `LHS`.`max_disk_loading` AS `max_disk_loading`,\n          `RHS`.`international_passengers` AS `international_passengers`,\n          `RHS`.`meantotal_passengers` AS `meantotal_passengers`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`airport_id` AS `airport_id`,\n             `LHS`.`aircraft_id` AS `aircraft_id`,\n             `RHS`.`aircraft` AS `aircraft`,\n             `RHS`.`description` AS `description`,\n             `RHS`.`max_gross_weight` AS `max_gross_weight`,\n             `RHS`.`total_disk_area` AS `total_disk_area`,\n             `RHS`.`max_disk_loading` AS `max_disk_loading`\n      FROM `airport_aircraft` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `aircraft`\n         WHERE (`aircraft` = 'Robinson R-22')) AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS\n   INNER JOIN\n     (SELECT airport_id,\n             international_passengers,\n             AVG(total_passengers) AS meantotal_passengers\n      FROM airport\n      GROUP BY airport_id,\n               international_passengers) AS RHS ON (LHS.airport_id = RHS.airport_id))\nORDER BY avg_t3_total_passengers_\n", "sql2": "SELECT avg(T3.Total_Passengers)\nFROM aircraft AS T1\nJOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID\nWHERE T1.Aircraft = 'Robinson R-22'", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0008", "sql1": "\nSELECT name\nFROM pilot\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nORDER BY Name ASC", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0003", "sql1": "\nSELECT meaninternational_passengers AS avg_international_passengers_\nFROM\n  (SELECT AVG(international_passengers) AS meaninternational_passengers\n   FROM airport)\nORDER BY avg_international_passengers_\n", "sql2": "SELECT avg(International_Passengers)\nFROM airport", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0002", "sql1": "\nSELECT description\nFROM aircraft\nORDER BY description\n", "sql2": "SELECT Description\nFROM aircraft", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM aircraft\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM aircraft", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0020", "sql1": "\nSELECT airport_id,\n       airport_name,\n       total_passengers,\n       col___change_2007,\n       international_passengers,\n       domestic_passengers,\n       transit_passengers,\n       aircraft_movements,\n       freight_metric_tonnes\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM airport\n      ORDER BY aircraft_movements DESC)\n   LIMIT 1)\n", "sql2": "SELECT *\nFROM airport\nORDER BY International_Passengers DESC\nLIMIT 1", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0016", "sql1": "\nSELECT name\nFROM pilot\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nORDER BY Age DESC", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0007", "sql1": "\nSELECT name\nFROM pilot\nWHERE (age >= 25)\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nWHERE Age >= 25", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0011", "sql1": "\nSELECT aircraft,\n       description\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.aircraft AS aircraft,\n          LHS.description AS description,\n          LHS.max_gross_weight AS max_gross_weight,\n          LHS.total_disk_area AS total_disk_area,\n          LHS.max_disk_loading AS max_disk_loading,\n          LHS.airport_id AS airport_id,\n          LHS.airport_name AS airport_name,\n          LHS.total_passengers AS total_passengers,\n          LHS.col___change_2007 AS col___change_2007,\n          LHS.international_passengers AS international_passengers,\n          LHS.domestic_passengers AS domestic_passengers,\n          LHS.transit_passengers AS transit_passengers,\n          LHS.aircraft_movements AS aircraft_movements,\n          LHS.freight_metric_tonnes AS freight_metric_tonnes,\n          LHS.id AS id\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.aircraft AS aircraft,\n             LHS.description AS description,\n             LHS.max_gross_weight AS max_gross_weight,\n             LHS.total_disk_area AS total_disk_area,\n             LHS.max_disk_loading AS max_disk_loading,\n             LHS.airport_id AS airport_id,\n             LHS.airport_name AS airport_name,\n             LHS.total_passengers AS total_passengers,\n             LHS.col___change_2007 AS col___change_2007,\n             LHS.international_passengers AS international_passengers,\n             LHS.domestic_passengers AS domestic_passengers,\n             LHS.transit_passengers AS transit_passengers,\n             LHS.aircraft_movements AS aircraft_movements,\n             LHS.freight_metric_tonnes AS freight_metric_tonnes,\n             RHS.id AS id\n      FROM\n        (SELECT LHS.aircraft_id AS aircraft_id,\n                LHS.aircraft AS aircraft,\n                LHS.description AS description,\n                LHS.max_gross_weight AS max_gross_weight,\n                LHS.total_disk_area AS total_disk_area,\n                LHS.max_disk_loading AS max_disk_loading,\n                RHS.airport_id AS airport_id,\n                RHS.airport_name AS airport_name,\n                RHS.total_passengers AS total_passengers,\n                RHS.col___change_2007 AS col___change_2007,\n                RHS.international_passengers AS international_passengers,\n                RHS.domestic_passengers AS domestic_passengers,\n                RHS.transit_passengers AS transit_passengers,\n                RHS.aircraft_movements AS aircraft_movements,\n                RHS.freight_metric_tonnes AS freight_metric_tonnes\n         FROM aircraft AS LHS\n         CROSS JOIN airport AS RHS) AS LHS\n      INNER JOIN airport_aircraft AS RHS ON (LHS.aircraft_id = RHS.aircraft_id\n                                                AND LHS.airport_id = RHS.airport_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM airport\n      WHERE (total_passengers > 10000000.0)) AS RHS ON (LHS.airport_id = RHS.airport_id\n                                                        AND LHS.airport_name = RHS.airport_name\n                                                        AND LHS.total_passengers = RHS.total_passengers\n                                                        AND LHS.col___change_2007 = RHS.col___change_2007\n                                                        AND LHS.international_passengers = RHS.international_passengers\n                                                        AND LHS.domestic_passengers = RHS.domestic_passengers\n                                                        AND LHS.transit_passengers = RHS.transit_passengers\n                                                        AND LHS.aircraft_movements = RHS.aircraft_movements\n                                                        AND LHS.freight_metric_tonnes = RHS.freight_metric_tonnes))\nORDER BY aircraft\n", "sql2": "SELECT T1.Aircraft,\n       T1.Description\nFROM aircraft AS T1\nJOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID\nWHERE T3.Total_Passengers > 10000000", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0010", "sql1": "\nSELECT `aircraft`\nFROM\n  (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,\n          `LHS`.`aircraft` AS `aircraft`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`max_gross_weight` AS `max_gross_weight`,\n          `LHS`.`total_disk_area` AS `total_disk_area`,\n          `LHS`.`max_disk_loading` AS `max_disk_loading`,\n          `LHS`.`id` AS `id`,\n          `LHS`.`airport_id` AS `airport_id`,\n          `RHS`.`airport_name` AS `airport_name`,\n          `RHS`.`total_passengers` AS `total_passengers`,\n          `RHS`.`col___change_2007` AS `col___change_2007`,\n          `RHS`.`international_passengers` AS `international_passengers`,\n          `RHS`.`domestic_passengers` AS `domestic_passengers`,\n          `RHS`.`transit_passengers` AS `transit_passengers`,\n          `RHS`.`aircraft_movements` AS `aircraft_movements`,\n          `RHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`\n   FROM\n     (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,\n             `LHS`.`aircraft` AS `aircraft`,\n             `LHS`.`description` AS `description`,\n             `LHS`.`max_gross_weight` AS `max_gross_weight`,\n             `LHS`.`total_disk_area` AS `total_disk_area`,\n             `LHS`.`max_disk_loading` AS `max_disk_loading`,\n             `RHS`.`id` AS `id`,\n             `RHS`.`airport_id` AS `airport_id`\n      FROM `aircraft` AS `LHS`\n      INNER JOIN `airport_aircraft` AS `RHS` ON (`LHS`.`aircraft_id` = `RHS`.`aircraft_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `airport`\n      WHERE (`airport_name` = 'London Gatwick')) AS RHS ON (LHS.airport_id = RHS.airport_id))\nORDER BY aircraft\n", "sql2": "SELECT T1.Aircraft\nFROM aircraft AS T1\nJOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID\nWHERE T3.Airport_Name = 'London Gatwick'", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/aircraft/0006", "sql1": "\nSELECT DISTINCT MAX(transit_passengers) OVER () AS max_transit_passengers_,\n                                             mintransit_passengers AS min_transit_passengers_\nFROM\n  (SELECT airport_id,\n          airport_name,\n          total_passengers,\n          col___change_2007,\n          international_passengers,\n          domestic_passengers,\n          transit_passengers,\n          aircraft_movements,\n          freight_metric_tonnes,\n          MIN(transit_passengers) OVER () AS mintransit_passengers\n   FROM airport)\nORDER BY max_transit_passengers_\n", "sql2": "SELECT max(Transit_Passengers),\n       min(Transit_Passengers)\nFROM airport", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cinema/0013", "sql1": "\nSELECT title,\n       directed_by\nFROM film\nORDER BY title\n", "sql2": "SELECT title,\n       directed_by\nFROM film", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0004", "sql1": "\nSELECT name,\n       openning_year,\n       capacity\nFROM cinema\nORDER BY name\n", "sql2": "SELECT name,\n       openning_year,\n       capacity\nFROM cinema", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0008", "sql1": "\nSELECT name,\n       LOCATION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM cinema\n      ORDER BY LOCATION DESC)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       LOCATION\nFROM cinema\nORDER BY capacity DESC\nLIMIT 1", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0015", "sql1": "\nSELECT directed_by,\n       n AS count___\nFROM\n  (SELECT directed_by,\n          COUNT(*) AS n\n   FROM film\n   GROUP BY directed_by)\nORDER BY directed_by\n", "sql2": "SELECT directed_by,\n       count(*)\nFROM film\nGROUP BY directed_by", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM cinema\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM cinema", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0014", "sql1": "\nSELECT DISTINCT directed_by\nFROM film\nORDER BY directed_by\n", "sql2": "SELECT DISTINCT directed_by\nFROM film", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0001", "sql1": "\nSELECT DISTINCT LOCATION\nFROM\n  (SELECT *\n   FROM cinema AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM cinema\n           WHERE (capacity >= 800)) AS RHS\n        WHERE (LHS.location = RHS.location) ))\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM cinema\nEXCEPT\nSELECT LOCATION\nFROM cinema\nWHERE capacity > 800", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0017", "sql1": "\nSELECT title,\n       maxprice AS max_t1_price_\nFROM\n  (SELECT LHS.film_id AS film_id,\n          LHS.maxprice AS maxprice,\n          RHS.rank_in_series AS rank_in_series,\n          RHS.number_in_season AS number_in_season,\n          RHS.title AS title,\n          RHS.directed_by AS directed_by,\n          RHS.original_air_date AS original_air_date,\n          RHS.production_code AS production_code\n   FROM\n     (SELECT film_id,\n             MAX(price) AS maxprice\n      FROM schedule\n      GROUP BY film_id) AS LHS\n   INNER JOIN film AS RHS ON (LHS.film_id = RHS.film_id))\nORDER BY title\n", "sql2": "SELECT T2.title,\n       max(T1.price)\nFROM schedule AS T1\nJOIN film AS T2 ON T1.film_id = T2.film_id\nGROUP BY T1.film_id", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0021", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          openning_year,\n          COUNT(*) AS n\n   FROM cinema\n   GROUP BY LOCATION,\n            openning_year)\nWHERE (n = 300\n       OR n != 1)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM cinema\nWHERE capacity > 300\nGROUP BY LOCATION\nHAVING count(*) > 1", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0020", "sql1": "\nSELECT DISTINCT directed_by\nFROM\n  (SELECT film_id,\n          rank_in_series,\n          number_in_season,\n          title,\n          directed_by,\n          original_air_date,\n          production_code,\n          film_id_other, date, show_times_per_day,\n                               price,\n                               number_in_season AS cinema_id\n   FROM\n     (SELECT LHS.film_id AS film_id,\n             LHS.rank_in_series AS rank_in_series,\n             LHS.number_in_season AS number_in_season,\n             LHS.title AS title,\n             LHS.directed_by AS directed_by,\n             LHS.original_air_date AS original_air_date,\n             LHS.production_code AS production_code,\n             RHS.film_id AS film_id_other,\n             RHS.date AS date,\n             RHS.show_times_per_day AS show_times_per_day,\n             RHS.price AS price\n      FROM film AS LHS\n      INNER JOIN schedule AS RHS ON (LHS.number_in_season = RHS.cinema_id)))\nORDER BY directed_by\n", "sql2": "SELECT T2.directed_by\nFROM schedule AS T1\nJOIN film AS T2 ON T1.film_id = T2.film_id\nGROUP BY T2.directed_by\nORDER BY sum(T1.show_times_per_day) DESC\nLIMIT 1", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0016", "sql1": "\nSELECT name,\n       sumshow_times_per_day AS sum_t1_show_times_per_day_\nFROM\n  (SELECT LHS.cinema_id AS cinema_id,\n          LHS.sumshow_times_per_day AS sumshow_times_per_day,\n          RHS.name AS name,\n          RHS.openning_year AS openning_year,\n          RHS.capacity AS capacity,\n          RHS.location AS LOCATION\n   FROM\n     (SELECT cinema_id,\n             SUM(show_times_per_day) AS sumshow_times_per_day\n      FROM schedule\n      GROUP BY cinema_id) AS LHS\n   INNER JOIN cinema AS RHS ON (LHS.cinema_id = RHS.cinema_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       sum(T1.show_times_per_day)\nFROM schedule AS T1\nJOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id\nGROUP BY T1.cinema_id", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0007", "sql1": "\nSELECT name,\n       openning_year\nFROM cinema\nORDER BY name\n", "sql2": "SELECT name,\n       openning_year\nFROM cinema\nORDER BY openning_year DESC", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0010", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM cinema\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       count(*)\nFROM cinema\nGROUP BY LOCATION", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cinema/0006", "sql1": "\nSELECT DISTINCT LOCATION\nFROM cinema\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM cinema", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0009", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT *\n   FROM `wine` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `grapes`\n           WHERE (`color` = 'Red')) AS RHS\n        WHERE (LHS.grape = RHS.grape) ))\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.Name\nFROM GRAPES AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nWHERE T1.Color = 'Red'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0025", "sql1": "\nSELECT color\nFROM\n  (SELECT LHS.grape AS grape,\n          LHS.no AS NO,\n          LHS.meanprice AS meanprice,\n          RHS.color AS color\n   FROM\n     (SELECT grape,\n             NO,\n             AVG(price) AS meanprice\n      FROM wine\n      GROUP BY grape,\n               NO) AS LHS\n   INNER JOIN grapes AS RHS ON (LHS.no = RHS.id\n                                   AND LHS.grape = RHS.grape))\nORDER BY color\n", "sql2": "SELECT T1.Color\nFROM GRAPES AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nGROUP BY T2.Grape\nORDER BY AVG(Price) DESC\nLIMIT 1", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0005", "sql1": "\nSELECT name,\n       score\nFROM wine\nORDER BY name\n", "sql2": "SELECT Name,\n       Score\nFROM WINE", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0004", "sql1": "\nSELECT grape,\n       appelation\nFROM wine\nORDER BY grape\n", "sql2": "SELECT Grape,\n       Appelation\nFROM WINE", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0012", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `area`,\n          `county`,\n          COUNT(*) AS `n`\n   FROM `appellations`\n   GROUP BY `area`,\n            `county`)\nWHERE (`county` = 'Napa')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM APPELLATIONS\nWHERE County = 'Napa'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0032", "sql1": "\nSELECT winery\nFROM\n  (SELECT state,\n          winery,\n          COUNT(*) AS n\n   FROM wine\n   GROUP BY state,\n            winery)\nWHERE (n >= 4)\nORDER BY winery\n", "sql2": "SELECT Winery\nFROM WINE\nGROUP BY Winery\nHAVING count(*) >= 4", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0024", "sql1": "\nSELECT appelation AS area\nFROM\n  (SELECT appelation,\n          grape,\n          n,\n          appelation_other,\n          county,\n          state,\n          isava,\n          NO,\n          appelation AS area\n   FROM\n     (SELECT appelation,\n             grape,\n             n,\n             appelation_other,\n             county,\n             state,\n             isava,\n             n AS NO\n      FROM\n        (SELECT LHS.appelation AS appelation,\n                LHS.grape AS grape,\n                LHS.n AS n,\n                RHS.appelation AS appelation_other,\n                RHS.county AS county,\n                RHS.state AS state,\n                RHS.isava AS isava\n         FROM\n           (SELECT appelation,\n                   grape,\n                   COUNT(*) AS n\n            FROM wine\n            GROUP BY appelation,\n                     grape) AS LHS\n         INNER JOIN appellations AS RHS ON (LHS.n = RHS.no\n                                               AND LHS.appelation = RHS.area))))\nWHERE (n != 2010)\nORDER BY area\n", "sql2": "SELECT T1.Area\nFROM APPELLATIONS AS T1\nJOIN WINE AS T2 ON T1.Appelation = T2.Appelation\nGROUP BY T2.Appelation\nHAVING T2.year < 2010\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0008", "sql1": "\nSELECT name\nFROM wine\nWHERE (score > 90)\nORDER BY name\n", "sql2": "SELECT Name\nFROM WINE\nWHERE score > 90", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0003", "sql1": "\nSELECT name\nFROM wine\nWHERE (YEAR = 2008)\nORDER BY name\n", "sql2": "SELECT Name\nFROM WINE\nWHERE YEAR = '2008'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0019", "sql1": "\nSELECT n AS count___,\n       grape\nFROM\n  (SELECT grape,\n          COUNT(*) AS n\n   FROM wine\n   GROUP BY grape)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       Grape\nFROM WINE\nGROUP BY Grape", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0023", "sql1": "\nSELECT DISTINCT name\nFROM wine\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nORDER BY price", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0022", "sql1": "\nSELECT DISTINCT name\nFROM wine\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nORDER BY Name", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0038", "sql1": "\nSELECT grape,\n       appelation,\n       name\nFROM wine\nWHERE (score > 93)\nORDER BY grape\n", "sql2": "SELECT Grape,\n       Appelation,\n       Name\nFROM WINE\nWHERE Score > 93\nORDER BY Name", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0014", "sql1": "\nSELECT `name`,\n       `score`\nFROM\n  (SELECT *\n   FROM `wine` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `grapes`\n           WHERE (`color` = 'White')) AS RHS\n        WHERE (LHS.grape = RHS.grape) ))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T2.Score\nFROM GRAPES AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nWHERE T1.Color = 'White'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0017", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`grape` AS `grape`,\n          `LHS`.`color` AS `color`,\n          `RHS`.`no` AS `no`,\n          `RHS`.`winery` AS `winery`,\n          `RHS`.`appelation` AS `appelation`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`price` AS `price`,\n          `RHS`.`score` AS `score`,\n          `RHS`.`cases` AS `cases`,\n          `RHS`.`drink` AS `drink`\n   FROM `grapes` AS `LHS`\n   INNER JOIN `wine` AS `RHS` ON (`LHS`.`grape` = `RHS`.`grape`))\nWHERE (`color` = 'Red'\n       AND price > 50)\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM Grapes AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nWHERE T1.Color = 'Red'\n  AND T2.price > 50", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0037", "sql1": "\nSELECT grape,\n       winery,\n       YEAR\nFROM wine\nWHERE (price > 100)\nORDER BY grape\n", "sql2": "SELECT Grape,\n       Winery,\n       YEAR\nFROM WINE\nWHERE Price > 100\nORDER BY YEAR", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0021", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`no` AS `no`,\n             `LHS`.`grape` AS `grape`,\n             `LHS`.`winery` AS `winery`,\n             `LHS`.`appelation` AS `appelation`,\n             `LHS`.`state` AS `state`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`price` AS `price`,\n             `LHS`.`score` AS `score`,\n             `LHS`.`cases` AS `cases`,\n             `LHS`.`drink` AS `drink`,\n             `RHS`.`no` AS `no_other`,\n             `RHS`.`grape` AS `grape_other`,\n             `RHS`.`winery` AS `winery_other`,\n             `RHS`.`appelation` AS `appelation_other`,\n             `RHS`.`state` AS `state_other`,\n             `RHS`.`name` AS `name_other`,\n             `RHS`.`year` AS `year_other`,\n             `RHS`.`price` AS `price_other`,\n             `RHS`.`score` AS `score_other`,\n             `RHS`.`cases` AS `cases_other`,\n             `RHS`.`drink` AS `drink_other`\n      FROM `wine` AS `LHS`\n      CROSS JOIN `wine` AS `RHS`)\n   WHERE (`price` < `price_other`))\nWHERE (`winery` = 'John Anthony')\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nWHERE Price >\n    (SELECT min(Price)\n     FROM wine\n     WHERE Winery = 'John Anthony')", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0020", "sql1": "\nSELECT meanprice AS avg_price_,\n       YEAR\nFROM\n  (SELECT state,\n          YEAR,\n          AVG(price) AS meanprice\n   FROM wine\n   GROUP BY state,\n            YEAR)\nORDER BY avg_price_\n", "sql2": "SELECT avg(Price),\n       YEAR\nFROM WINE\nGROUP BY YEAR", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0027", "sql1": "\nSELECT DISTINCT winery\nFROM wine\nWHERE (price >= 50\n       AND price <= 100)\nORDER BY winery\n", "sql2": "SELECT DISTINCT Winery\nFROM WINE\nWHERE Price BETWEEN 50 AND 100", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0007", "sql1": "\nSELECT price\nFROM wine\nWHERE (YEAR <= 2010)\nORDER BY price\n", "sql2": "SELECT Price\nFROM WINE\nWHERE YEAR < 2010", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `wine`\nWHERE (`winery` = 'Robert Biale')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM WINE\nWHERE Winery = 'Robert Biale'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0010", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`no` AS `no`,\n          `LHS`.`appelation` AS `appelation`,\n          `LHS`.`county` AS `county`,\n          `LHS`.`state` AS `state`,\n          `LHS`.`area` AS `area`,\n          `LHS`.`isava` AS `isava`,\n          `RHS`.`no` AS `no_other`,\n          `RHS`.`grape` AS `grape`,\n          `RHS`.`winery` AS `winery`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`price` AS `price`,\n          `RHS`.`score` AS `score`,\n          `RHS`.`cases` AS `cases`,\n          `RHS`.`drink` AS `drink`\n   FROM `appellations` AS `LHS`\n   INNER JOIN `wine` AS `RHS` ON (`LHS`.`appelation` = `RHS`.`appelation`\n                                     AND `LHS`.`state` = `RHS`.`state`))\nWHERE (`area` = 'North Coast')\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.Name\nFROM APPELLATIONs AS T1\nJOIN WINE AS T2 ON T1.Appelation = T2.Appelation\nWHERE T1.Area = 'North Coast'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0006", "sql1": "\nSELECT area,\n       county\nFROM appellations\nORDER BY area\n", "sql2": "SELECT Area,\n       County\nFROM APPELLATIONS", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wine_1/0026", "sql1": "\nSELECT name\nFROM wine\nWHERE (YEAR <= 2000\n       OR YEAR >= 2010)\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nWHERE YEAR < 2000\n  OR YEAR > 2010", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0013", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM gas_station\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       count(*)\nFROM gas_station\nGROUP BY LOCATION\nORDER BY count(*)", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0004", "sql1": "\nSELECT company,\n       headquarters\nFROM company\nORDER BY company\n", "sql2": "SELECT company,\n       headquarters\nFROM company\nORDER BY market_value DESC", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0008", "sql1": "\nSELECT main_industry,\n       summarket_value AS sum_market_value_\nFROM\n  (SELECT main_industry,\n          SUM(market_value) AS summarket_value\n   FROM company\n   GROUP BY main_industry)\nORDER BY main_industry\n", "sql2": "SELECT main_industry,\n       sum(market_value)\nFROM company\nGROUP BY main_industry", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0015", "sql1": "\nSELECT `headquarters`\nFROM\n  (SELECT *\n   FROM `company` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `company`\n           WHERE (`main_industry` = 'Banking')) AS RHS\n        WHERE (LHS.headquarters = RHS.headquarters) ))\nORDER BY headquarters\n", "sql2": "SELECT headquarters\nFROM company\nEXCEPT\nSELECT headquarters\nFROM company\nWHERE main_industry = 'Banking'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0003", "sql1": "\nSELECT `company`,\n       `main_industry`\nFROM `company`\nWHERE (`headquarters` != 'USA')\nORDER BY company\n", "sql2": "SELECT company,\n       main_industry\nFROM company\nWHERE headquarters != 'USA'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0019", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.station_id AS station_id,\n          LHS.open_year AS open_year,\n          LHS.location AS LOCATION,\n          LHS.manager_name AS manager_name,\n          LHS.vice_manager_name AS vice_manager_name,\n          LHS.representative_name AS representative_name,\n          LHS.company_id AS company_id,\n          LHS.rank_of_the_year AS rank_of_the_year,\n          RHS.rank AS rank,\n          RHS.company AS company,\n          RHS.headquarters AS headquarters,\n          RHS.main_industry AS main_industry,\n          RHS.sales_billion AS sales_billion,\n          RHS.profits_billion AS profits_billion,\n          RHS.assets_billion AS assets_billion,\n          RHS.market_value AS market_value\n   FROM\n     (SELECT LHS.station_id AS station_id,\n             LHS.open_year AS open_year,\n             LHS.location AS LOCATION,\n             LHS.manager_name AS manager_name,\n             LHS.vice_manager_name AS vice_manager_name,\n             LHS.representative_name AS representative_name,\n             RHS.company_id AS company_id,\n             RHS.rank_of_the_year AS rank_of_the_year\n      FROM gas_station AS LHS\n      INNER JOIN station_company AS RHS ON (LHS.station_id = RHS.station_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM company\n      WHERE (market_value > 100.0)) AS RHS ON (LHS.company_id = RHS.company_id))\nORDER BY LOCATION\n", "sql2": "SELECT T3.location\nFROM station_company AS T1\nJOIN company AS T2 ON T1.company_id = T2.company_id\nJOIN gas_station AS T3 ON T1.station_id = T3.station_id\nWHERE T2.market_value > 100", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0022", "sql1": "\nSELECT `rank`,\n       `company`,\n       `market_value`\nFROM `company`\nWHERE (`main_industry` = 'Banking')\nORDER BY rank\n", "sql2": "SELECT rank,\n       company,\n       market_value\nFROM company\nWHERE main_industry = 'Banking'\nORDER BY sales_billion,\n         profits_billion", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0018", "sql1": "\nSELECT `manager_name`\nFROM\n  (SELECT `LHS`.`company_id` AS `company_id`,\n          `LHS`.`rank` AS `rank`,\n          `LHS`.`company` AS `company`,\n          `LHS`.`headquarters` AS `headquarters`,\n          `LHS`.`main_industry` AS `main_industry`,\n          `LHS`.`sales_billion` AS `sales_billion`,\n          `LHS`.`profits_billion` AS `profits_billion`,\n          `LHS`.`assets_billion` AS `assets_billion`,\n          `LHS`.`market_value` AS `market_value`,\n          `LHS`.`station_id` AS `station_id`,\n          `LHS`.`open_year` AS `open_year`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`manager_name` AS `manager_name`,\n          `LHS`.`vice_manager_name` AS `vice_manager_name`,\n          `LHS`.`representative_name` AS `representative_name`,\n          `LHS`.`rank_of_the_year` AS `rank_of_the_year`\n   FROM\n     (SELECT `LHS`.`company_id` AS `company_id`,\n             `LHS`.`rank` AS `rank`,\n             `LHS`.`company` AS `company`,\n             `LHS`.`headquarters` AS `headquarters`,\n             `LHS`.`main_industry` AS `main_industry`,\n             `LHS`.`sales_billion` AS `sales_billion`,\n             `LHS`.`profits_billion` AS `profits_billion`,\n             `LHS`.`assets_billion` AS `assets_billion`,\n             `LHS`.`market_value` AS `market_value`,\n             `LHS`.`station_id` AS `station_id`,\n             `LHS`.`open_year` AS `open_year`,\n             `LHS`.`location` AS `location`,\n             `LHS`.`manager_name` AS `manager_name`,\n             `LHS`.`vice_manager_name` AS `vice_manager_name`,\n             `LHS`.`representative_name` AS `representative_name`,\n             `RHS`.`rank_of_the_year` AS `rank_of_the_year`\n      FROM\n        (SELECT `LHS`.`company_id` AS `company_id`,\n                `LHS`.`rank` AS `rank`,\n                `LHS`.`company` AS `company`,\n                `LHS`.`headquarters` AS `headquarters`,\n                `LHS`.`main_industry` AS `main_industry`,\n                `LHS`.`sales_billion` AS `sales_billion`,\n                `LHS`.`profits_billion` AS `profits_billion`,\n                `LHS`.`assets_billion` AS `assets_billion`,\n                `LHS`.`market_value` AS `market_value`,\n                `RHS`.`station_id` AS `station_id`,\n                `RHS`.`open_year` AS `open_year`,\n                `RHS`.`location` AS `location`,\n                `RHS`.`manager_name` AS `manager_name`,\n                `RHS`.`vice_manager_name` AS `vice_manager_name`,\n                `RHS`.`representative_name` AS `representative_name`\n         FROM `company` AS `LHS`\n         CROSS JOIN `gas_station` AS `RHS`) AS `LHS`\n      INNER JOIN `station_company` AS `RHS` ON (`LHS`.`company_id` = `RHS`.`company_id`\n                                                   AND `LHS`.`station_id` = `RHS`.`station_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `company`\n      WHERE (`company` = 'ExxonMobil')) AS RHS ON (LHS.company_id = RHS.company_id\n                                                   AND LHS.rank = RHS.rank\n                                                   AND LHS.company = RHS.company\n                                                   AND LHS.headquarters = RHS.headquarters\n                                                   AND LHS.main_industry = RHS.main_industry\n                                                   AND LHS.sales_billion = RHS.sales_billion\n                                                   AND LHS.profits_billion = RHS.profits_billion\n                                                   AND LHS.assets_billion = RHS.assets_billion\n                                                   AND LHS.market_value = RHS.market_value))\nORDER BY manager_name\n", "sql2": "SELECT T3.manager_name\nFROM station_company AS T1\nJOIN company AS T2 ON T1.company_id = T2.company_id\nJOIN gas_station AS T3 ON T1.station_id = T3.station_id\nWHERE T2.company = 'ExxonMobil'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0002", "sql1": "\nSELECT company,\n       rank\nFROM company\nORDER BY company\n", "sql2": "SELECT company,\n       rank\nFROM company\nORDER BY Sales_billion DESC", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0014", "sql1": "\nSELECT `headquarters`\nFROM `company`\nWHERE (`main_industry` = 'Banking'\n       AND `main_industry` != 'Oil and gas')\nORDER BY headquarters\n", "sql2": "SELECT headquarters\nFROM company\nWHERE main_industry = 'Banking' INTERSECT\n  SELECT headquarters\n  FROM company WHERE main_industry = 'Oil and gas'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM company\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM company", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0017", "sql1": "\nSELECT company,\n       main_industry\nFROM\n  (SELECT *\n   FROM company AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM station_company AS RHS\n        WHERE (LHS.company_id = RHS.company_id) ))\nORDER BY company\n", "sql2": "SELECT company,\n       main_industry\nFROM company\nWHERE company_id NOT IN\n    (SELECT company_id\n     FROM station_company)", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0021", "sql1": "\nSELECT LOCATION\nFROM gas_station\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM gas_station\nORDER BY open_year", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0020", "sql1": "\nSELECT manager_name\nFROM\n  (SELECT manager_name,\n          COUNT(DISTINCT open_year) AS n_distinct\n   FROM gas_station\n   GROUP BY manager_name)\nWHERE (n_distinct >= 2000\n       OR n_distinct != 1)\nORDER BY manager_name\n", "sql2": "SELECT manager_name\nFROM gas_station\nWHERE open_year > 2000\nGROUP BY manager_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0016", "sql1": "\nSELECT company,\n       n AS count___\nFROM\n  (SELECT company,\n          profits_billion,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.rank AS rank,\n             LHS.company AS company,\n             LHS.headquarters AS headquarters,\n             LHS.main_industry AS main_industry,\n             LHS.sales_billion AS sales_billion,\n             LHS.profits_billion AS profits_billion,\n             LHS.assets_billion AS assets_billion,\n             LHS.market_value AS market_value,\n             RHS.station_id AS station_id,\n             RHS.rank_of_the_year AS rank_of_the_year\n      FROM company AS LHS\n      INNER JOIN station_company AS RHS ON (LHS.company_id = RHS.company_id))\n   GROUP BY company,\n            profits_billion)\nORDER BY company\n", "sql2": "SELECT T2.company,\n       count(*)\nFROM station_company AS T1\nJOIN company AS T2 ON T1.company_id = T2.company_id\nGROUP BY T1.company_id", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0007", "sql1": "\nSELECT headquarters,\n       n AS count___\nFROM\n  (SELECT headquarters,\n          COUNT(*) AS n\n   FROM company\n   GROUP BY headquarters)\nORDER BY headquarters\n", "sql2": "SELECT headquarters,\n       count(*)\nFROM company\nGROUP BY headquarters", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0011", "sql1": "\nSELECT station_id,\n       LOCATION,\n       manager_name\nFROM gas_station\nORDER BY station_id\n", "sql2": "SELECT station_id,\n       LOCATION,\n       manager_name\nFROM gas_station\nORDER BY open_year", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gas_company/0006", "sql1": "\nSELECT DISTINCT main_industry\nFROM company\nORDER BY main_industry\n", "sql2": "SELECT DISTINCT main_industry\nFROM company", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0009", "sql1": "\nSELECT `age`\nFROM `person`\nWHERE (`job` = 'doctor'\n       OR `name` = 'Zach')\nORDER BY age\n", "sql2": "SELECT age\nFROM Person\nWHERE job = 'doctor'\n  AND name = 'Zach'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0025", "sql1": "\nSELECT friend AS name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          LHS.gender AS gender,\n          LHS.job AS job,\n          RHS.friend AS friend,\n          RHS.year AS YEAR\n   FROM\n     (SELECT *\n      FROM person\n      WHERE (age < 40\n             AND age <= 30)) AS LHS\n   INNER JOIN personfriend AS RHS ON (LHS.name = RHS.name))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend IN\n    (SELECT name\n     FROM Person\n     WHERE age > 40)\nEXCEPT\nSELECT T1.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend IN\n    (SELECT name\n     FROM Person\n     WHERE age < 30)", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0033", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`year` AS `year`\n   FROM\n     (SELECT *\n      FROM `person`\n      WHERE (`city` = 'new york city')) AS LHS\n   INNER JOIN personfriend AS RHS ON (LHS.name = RHS.friend))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.friend\nWHERE T1.city = 'new york city'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0013", "sql1": "\nSELECT meanage AS avg_age_,\n       job\nFROM\n  (SELECT gender,\n          job,\n          AVG(age) AS meanage\n   FROM person\n   GROUP BY gender,\n            job)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       job\nFROM Person\nGROUP BY job", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0005", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT job) OVER () AS count_distinct_job_\nFROM person\nORDER BY count_distinct_job_\n", "sql2": "SELECT count(DISTINCT job)\nFROM Person", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0029", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `person` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `personfriend`\n           WHERE (`friend` = 'Bob')) AS RHS\n        WHERE (LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Bob'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0028", "sql1": "\nSELECT `friend`\nFROM\n  (SELECT *\n   FROM `personfriend` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `person`\n           WHERE (`name` != 'Bob')) AS RHS\n        WHERE (LHS.name = RHS.name) ))\nORDER BY friend\n", "sql2": "SELECT T2.friend\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T1.name = 'Bob'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0004", "sql1": "\nSELECT n AS count_distinct_city_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM person)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM Person", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0012", "sql1": "\nSELECT meanage AS avg_age_,\n       gender\nFROM\n  (SELECT gender,\n          AVG(age) AS meanage\n   FROM person\n   GROUP BY gender)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       gender\nFROM Person\nGROUP BY gender", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0008", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`age` AS `age_other`,\n          `RHS`.`minage` AS `minage`\n   FROM `person` AS `LHS`\n   INNER JOIN\n     (SELECT `age`,\n             `gender`,\n             MIN(`age`) AS `minage`\n      FROM `person`\n      GROUP BY `age`,\n               `gender`) AS `RHS` ON (`LHS`.`gender` = `RHS`.`gender`))\nWHERE (`gender` = 'male'\n       AND minage > age)\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE gender = 'male'\n  AND age =\n    (SELECT min(age)\n     FROM person\n     WHERE gender = 'male' )", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0042", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_name_\nFROM\n  (SELECT LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          LHS.gender AS gender,\n          LHS.job AS job,\n          RHS.name AS name_other,\n          RHS.friend AS friend,\n          RHS.year AS YEAR,\n          RHS.n_distinct AS n_distinct\n   FROM person AS LHS\n   CROSS JOIN\n     (SELECT name,\n             friend,\n             YEAR,\n             COUNT(DISTINCT name) OVER () AS n_distinct\n      FROM personfriend) AS RHS)\nWHERE (name != city\n       OR city = name_other)\nORDER BY count_distinct_name_\n", "sql2": "SELECT count(DISTINCT name)\nFROM PersonFriend\nWHERE friend NOT IN\n    (SELECT name\n     FROM person\n     WHERE city = 'Austin')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0015", "sql1": "\nSELECT age AS min_age_,\n       job\nFROM\n  (SELECT job,\n          MIN(age) AS age\n   FROM person\n   GROUP BY job)\nORDER BY min_age_\n", "sql2": "SELECT min(age),\n       job\nFROM Person\nGROUP BY job", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0003", "sql1": "\nSELECT meanage AS avg_age_\nFROM\n  (SELECT AVG(age) AS meanage\n   FROM person)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age)\nFROM Person", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0019", "sql1": "\nSELECT name,\n       job\nFROM person\nORDER BY name\n", "sql2": "SELECT name,\n       job\nFROM Person\nORDER BY name", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0023", "sql1": "\nSELECT `name`,\n       `age`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`friend` AS `friend`,\n          `RHS`.`year` AS `year`\n   FROM `person` AS `LHS`\n   INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`))\nWHERE (`friend` = 'Dan'\n       AND `friend` != 'Alice')\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name,\n                T1.age\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Dan'\n  OR T2.friend = 'Alice'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0022", "sql1": "\nSELECT `name`,\n       `age`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`friend` AS `friend`,\n          `RHS`.`year` AS `year`\n   FROM `person` AS `LHS`\n   INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`))\nWHERE (`friend` = 'Dan'\n       AND `friend` != 'Alice')\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.age\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Dan' INTERSECT\n  SELECT T1.name,\n         T1.age\n  FROM Person AS T1\n  JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0038", "sql1": "\nSELECT `name`\nFROM `personfriend`\nWHERE (`friend` = 'Alice')\nORDER BY name\n", "sql2": "SELECT name\nFROM PersonFriend\nWHERE friend = 'Alice'\n  AND YEAR =\n    (SELECT min(YEAR)\n     FROM PersonFriend\n     WHERE friend = 'Alice')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0002", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `name`,\n          `age`,\n          `city`,\n          `gender`,\n          `job`,\n          COUNT(DISTINCT `gender`) OVER () AS `n_distinct`\n   FROM `person`)\nWHERE (`gender` = 'female')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Person\nWHERE gender = 'female'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0014", "sql1": "\nSELECT `meanage` AS `avg_age_`,\n       `job`\nFROM\n  (SELECT `gender`,\n          `job`,\n          AVG(`age`) AS `meanage`\n   FROM `person`\n   GROUP BY `gender`,\n            `job`)\nWHERE (`gender` = 'male')\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       job\nFROM Person\nWHERE gender = 'male'\nGROUP BY job", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0043", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`year` AS `year`\n   FROM\n     (SELECT *\n      FROM `person`\n      WHERE (`name` = 'Alice')) AS LHS\n   INNER JOIN personfriend AS RHS ON (LHS.name = RHS.friend))\nORDER BY name\n", "sql2": "SELECT DISTINCT T4.name\nFROM PersonFriend AS T1\nJOIN Person AS T2 ON T1.name = T2.name\nJOIN PersonFriend AS T3 ON T1.friend = T3.name\nJOIN PersonFriend AS T4 ON T3.friend = T4.name\nWHERE T2.name = 'Alice'\n  AND T4.name != 'Alice'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0017", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `LHS`.`minjob` AS `minjob`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`city` AS `city_other`,\n          `RHS`.`gender` AS `gender_other`,\n          `RHS`.`minjob` AS `minjob_other`\n   FROM\n     (SELECT `name`,\n             `age`,\n             `city`,\n             `gender`,\n             `job`,\n             MIN(`job`) OVER () AS `minjob`\n      FROM `person`\n      WHERE (`job` != 'engineer')) AS `LHS`\n   INNER JOIN\n     (SELECT `name`,\n             `age`,\n             `city`,\n             `gender`,\n             `job`,\n             MIN(`job`) OVER () AS `minjob`\n      FROM `person`\n      WHERE (`job` != 'engineer')) AS RHS ON (LHS.age = RHS.age\n                                              AND LHS.minjob = RHS.job))\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE age >\n    (SELECT min(age)\n     FROM person\n     WHERE job = 'engineer')\nORDER BY age", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0040", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM person AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM personfriend AS RHS\n        WHERE (LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM person\nEXCEPT\nSELECT name\nFROM PersonFriend", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0021", "sql1": "\nSELECT `name`\nFROM `person`\nWHERE (`gender` = 'male')\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE gender = 'male'\nORDER BY age", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0020", "sql1": "\nSELECT name\nFROM person\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nORDER BY age DESC", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0036", "sql1": "\nSELECT `friend`\nFROM\n  (SELECT `name`,\n          `friend`,\n          `year`,\n          MAX(`year`) OVER () AS `maxyear`\n   FROM `personfriend`)\nWHERE (`name` = 'Zach'\n       AND maxyear = YEAR)\nORDER BY friend\n", "sql2": "SELECT friend\nFROM PersonFriend\nWHERE name = 'Zach'\n  AND YEAR =\n    (SELECT max(YEAR)\n     FROM PersonFriend\n     WHERE name = 'Zach')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0027", "sql1": "\nSELECT name\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM personfriend\n   GROUP BY name)\nWHERE (n <= 1)\nORDER BY name\n", "sql2": "SELECT name\nFROM PersonFriend\nGROUP BY name\nHAVING count(*) = 1", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0011", "sql1": "\nSELECT COUNT(*) OVER () AS `count___`\nFROM `person`\nWHERE (`job` != 'engineer'\n       AND age >= 30)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Person\nWHERE age > 30\n  AND job = 'engineer'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0010", "sql1": "\nSELECT name\nFROM person\nWHERE (age < 30)\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE age < 30", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/network_2/0006", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          LHS.gender AS gender,\n          LHS.job AS job,\n          RHS.name AS name_other,\n          RHS.age AS age_other,\n          RHS.city AS city_other,\n          RHS.gender AS gender_other,\n          RHS.job AS job_other\n   FROM person AS LHS\n   CROSS JOIN\n     (SELECT name,\n             MAX(age) OVER () AS age,\n                           city,\n                           gender,\n                           job\n      FROM person) AS RHS)\nWHERE (age >= age_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE age =\n    (SELECT max(age)\n     FROM person)", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0009", "sql1": "\nSELECT player,\n       years_played\nFROM player\nORDER BY player\n", "sql2": "SELECT Player,\n       Years_Played\nFROM player", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0025", "sql1": "\nSELECT college\nFROM\n  (SELECT college,\n          COUNT(*) AS n\n   FROM match_season\n   GROUP BY college)\nWHERE (n = 2)\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nGROUP BY College\nHAVING count(*) >= 2", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0029", "sql1": "\nSELECT DISTINCT `college_other` AS `college`\nFROM\n  (SELECT `season`,\n          `player`,\n          `position`,\n          `country`,\n          `team`,\n          `team` AS `draft_pick_number`,\n          `draft_class`,\n          `college`,\n          `season_other`,\n          `player_other`,\n          `position_other`,\n          `team_other`,\n          `draft_class_other`,\n          `college_other`\n   FROM\n     (SELECT `LHS`.`season` AS `season`,\n             `LHS`.`player` AS `player`,\n             `LHS`.`position` AS `position`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`team` AS `team`,\n             `LHS`.`draft_pick_number` AS `draft_pick_number`,\n             `LHS`.`draft_class` AS `draft_class`,\n             `LHS`.`college` AS `college`,\n             `RHS`.`season` AS `season_other`,\n             `RHS`.`player` AS `player_other`,\n             `RHS`.`position` AS `position_other`,\n             `RHS`.`team` AS `team_other`,\n             `RHS`.`draft_class` AS `draft_class_other`,\n             `RHS`.`college` AS `college_other`\n      FROM `match_season` AS `LHS`\n      INNER JOIN `match_season` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`\n                                                AND `LHS`.`team` = `RHS`.`draft_pick_number`)))\nWHERE (`position` = 'Midfielder'\n       AND `position` != 'Defender')\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nWHERE POSITION = 'Midfielder' INTERSECT\n  SELECT College\n  FROM match_season WHERE POSITION = 'Defender'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0004", "sql1": "\nSELECT DISTINCT POSITION\nFROM match_season\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT POSITION\nFROM match_season", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0008", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT team) OVER () AS count_distinct_team_\nFROM match_season\nORDER BY count_distinct_team_\n", "sql2": "SELECT count(DISTINCT Team)\nFROM match_season", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0019", "sql1": "\nSELECT `player`,\n       `years_played`\nFROM\n  (SELECT `LHS`.`team_id` AS `team_id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`player_id` AS `player_id`,\n          `RHS`.`player` AS `player`,\n          `RHS`.`years_played` AS `years_played`,\n          `RHS`.`total_wl` AS `total_wl`,\n          `RHS`.`singles_wl` AS `singles_wl`,\n          `RHS`.`doubles_wl` AS `doubles_wl`\n   FROM\n     (SELECT *\n      FROM `team`\n      WHERE (`name` = 'Columbus Crew')) AS LHS\n   INNER JOIN player AS RHS ON (LHS.team_id = RHS.team))\nORDER BY player\n", "sql2": "SELECT T1.Player,\n       T1.Years_Played\nFROM player AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id\nWHERE T2.Name = 'Columbus Crew'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0023", "sql1": "\nSELECT POSITION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT POSITION,\n                team,\n                COUNT(*) AS n\n         FROM match_season\n         GROUP BY POSITION,\n                  team)\n      ORDER BY team DESC)\n   LIMIT 1)\n", "sql2": "SELECT POSITION\nFROM match_season\nGROUP BY POSITION\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0022", "sql1": "\nSELECT player\nFROM match_season\nORDER BY player\n", "sql2": "SELECT player\nFROM match_season\nORDER BY College ASC", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0018", "sql1": "\nSELECT DISTINCT `team_id` AS `count_distinct_t1_college_`\nFROM\n  (SELECT `LHS`.`season` AS `season`,\n          `LHS`.`player` AS `player`,\n          `LHS`.`position` AS `position`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`team` AS `team`,\n          `LHS`.`draft_pick_number` AS `draft_pick_number`,\n          `LHS`.`draft_class` AS `draft_class`,\n          `LHS`.`college` AS `college`,\n          `RHS`.`team_id` AS `team_id`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`n` AS `n`\n   FROM `match_season` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM\n        (SELECT `team_id`,\n                `name`,\n                COUNT(*) OVER () AS `n`\n         FROM `team`)\n      WHERE (`name` = 'Columbus Crew')) AS RHS)\nORDER BY count_distinct_t1_college_\n", "sql2": "SELECT count(DISTINCT T1.College)\nFROM match_season AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id\nWHERE T2.Name = 'Columbus Crew'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0002", "sql1": "\nSELECT country_name,\n       capital\nFROM country\nORDER BY country_name\n", "sql2": "SELECT Country_name,\n       Capital\nFROM country", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0014", "sql1": "\nSELECT `official_native_language`\nFROM\n  (SELECT `country_id`,\n          `country_name`,\n          `capital`,\n          `official_native_language`,\n          `season`,\n          `player`,\n          `position`,\n          `team`,\n          `draft_pick_number`,\n          `draft_class`,\n          `college`,\n          `country_id` AS `country`\n   FROM\n     (SELECT `LHS`.`country_id` AS `country_id`,\n             `LHS`.`country_name` AS `country_name`,\n             `LHS`.`capital` AS `capital`,\n             `LHS`.`official_native_language` AS `official_native_language`,\n             `RHS`.`season` AS `season`,\n             `RHS`.`player` AS `player`,\n             `RHS`.`position` AS `position`,\n             `RHS`.`team` AS `team`,\n             `RHS`.`draft_pick_number` AS `draft_pick_number`,\n             `RHS`.`draft_class` AS `draft_class`,\n             `RHS`.`college` AS `college`\n      FROM `country` AS `LHS`\n      INNER JOIN `match_season` AS `RHS` ON (`LHS`.`country_id` = `RHS`.`country`)))\nWHERE (`college` = 'Maryland'\n       OR `college` = 'Duke')\nORDER BY official_native_language\n", "sql2": "SELECT T1.Official_native_language\nFROM country AS T1\nJOIN match_season AS T2 ON T1.Country_id = T2.Country\nWHERE T2.College = 'Maryland'\n  OR T2.College = 'Duke'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM country\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0017", "sql1": "\nSELECT `position`\nFROM\n  (SELECT `LHS`.`team_id` AS `team_id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`season` AS `season`,\n          `RHS`.`player` AS `player`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`draft_pick_number` AS `draft_pick_number`,\n          `RHS`.`draft_class` AS `draft_class`,\n          `RHS`.`college` AS `college`\n   FROM\n     (SELECT *\n      FROM `team`\n      WHERE (`name` = 'Ryley Goldner')) AS LHS\n   INNER JOIN match_season AS RHS ON (LHS.team_id = RHS.team))\nORDER BY POSITION\n", "sql2": "SELECT T1.Position\nFROM match_season AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id\nWHERE T2.Name = 'Ryley Goldner'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0020", "sql1": "\nSELECT POSITION,\n       n AS count___\nFROM\n  (SELECT POSITION,\n          COUNT(*) AS n\n   FROM match_season\n   GROUP BY POSITION)\nORDER BY POSITION\n", "sql2": "SELECT POSITION,\n       COUNT(*)\nFROM match_season\nGROUP BY POSITION", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0016", "sql1": "\nSELECT season,\n       player,\n       name\nFROM\n  (SELECT season,\n          player,\n          POSITION,\n          country,\n          team,\n          draft_pick_number,\n          draft_class,\n          college,\n          name,\n          player_other,\n          years_played,\n          total_wl,\n          singles_wl,\n          doubles_wl,\n          team_other,\n          country AS player_id\n   FROM\n     (SELECT LHS.season AS season,\n             LHS.player AS player,\n             LHS.position AS POSITION,\n             LHS.country AS country,\n             LHS.team AS team,\n             LHS.draft_pick_number AS draft_pick_number,\n             LHS.draft_class AS draft_class,\n             LHS.college AS college,\n             RHS.name AS name,\n             RHS.player AS player_other,\n             RHS.years_played AS years_played,\n             RHS.total_wl AS total_wl,\n             RHS.singles_wl AS singles_wl,\n             RHS.doubles_wl AS doubles_wl,\n             RHS.team AS team_other\n      FROM match_season AS LHS\n      INNER JOIN\n        (SELECT LHS.team_id AS team_id,\n                LHS.name AS name,\n                RHS.player_id AS player_id,\n                RHS.player AS player,\n                RHS.years_played AS years_played,\n                RHS.total_wl AS total_wl,\n                RHS.singles_wl AS singles_wl,\n                RHS.doubles_wl AS doubles_wl,\n                RHS.team AS team\n         FROM team AS LHS\n         CROSS JOIN player AS RHS) AS RHS ON (LHS.country = RHS.player_id\n                                                 AND LHS.team = RHS.team_id)))\nORDER BY season\n", "sql2": "SELECT T1.Season,\n       T1.Player,\n       T2.Name\nFROM match_season AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0007", "sql1": "\nSELECT `draft_pick_number`,\n       `draft_class`\nFROM `match_season`\nWHERE (`position` = 'Defender')\nORDER BY draft_pick_number\n", "sql2": "SELECT Draft_Pick_Number,\n       Draft_Class\nFROM match_season\nWHERE POSITION = 'Defender'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0010", "sql1": "\nSELECT name\nFROM team\nORDER BY name\n", "sql2": "SELECT Name\nFROM Team", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0006", "sql1": "\nSELECT `position`\nFROM `match_season`\nWHERE (`college` != 'UCLA'\n       AND `college` = 'Duke')\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT POSITION\nFROM match_season\nWHERE College = 'UCLA'\n  OR College = 'Duke'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/match_season/0026", "sql1": "\nSELECT college\nFROM\n  (SELECT college,\n          COUNT(*) AS n\n   FROM match_season\n   GROUP BY college)\nWHERE (n = 2)\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nGROUP BY College\nHAVING count(*) >= 2\nORDER BY College DESC", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0004", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `chip_model`,\n          `company_name`,\n          COUNT(*) AS `n`\n   FROM `phone`\n   GROUP BY `chip_model`,\n            `company_name`)\nWHERE (`company_name` = 'Nokia Corporation')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM phone\nWHERE Company_name = 'Nokia Corporation';", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0012", "sql1": "\nSELECT company_name\nFROM\n  (SELECT company_name,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY company_name)\nWHERE (n > 1)\nORDER BY company_name\n", "sql2": "SELECT Company_name\nFROM phone\nGROUP BY Company_name\nHAVING count(*) > 1;", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0024", "sql1": "\nSELECT model_name\nFROM chip_model\nORDER BY model_name\n", "sql2": "SELECT model_name\nFROM chip_model\nORDER BY launch_year", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0023", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `ram_mib`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `chip_model`\n      WHERE (`wifi` != 'No'))\n   GROUP BY ram_mib)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM chip_model\nWHERE wifi = 'No'", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0022", "sql1": "\nSELECT model_name,\n       launch_year,\n       ram_mib,\n       rom_mib,\n       slots,\n       wifi,\n       bluetooth\nFROM chip_model\nORDER BY model_name\n", "sql2": "SELECT *\nFROM chip_model", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0018", "sql1": "\nSELECT DISTINCT `hardware_model_name`\nFROM\n  (SELECT `LHS`.`graphics_mode` AS `graphics_mode`,\n          `LHS`.`char_cells` AS `char_cells`,\n          `LHS`.`pixels` AS `pixels`,\n          `LHS`.`hardware_colours` AS `hardware_colours`,\n          `LHS`.`used_kb` AS `used_kb`,\n          `LHS`.`map` AS `map`,\n          `LHS`.`type` AS `type`,\n          `RHS`.`company_name` AS `company_name`,\n          `RHS`.`hardware_model_name` AS `hardware_model_name`,\n          `RHS`.`accreditation_type` AS `accreditation_type`,\n          `RHS`.`accreditation_level` AS `accreditation_level`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`chip_model` AS `chip_model`,\n          `RHS`.`screen_mode` AS `screen_mode`\n   FROM `screen_mode` AS `LHS`\n   CROSS JOIN `phone` AS `RHS`)\nWHERE (`company_name` = 'Nokia Corporation'\n       AND `type` = 'Text')\nORDER BY hardware_model_name\n", "sql2": "SELECT DISTINCT T2.Hardware_Model_name\nFROM screen_mode AS T1\nJOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode\nWHERE t2.Company_name = 'Nokia Corporation'\n  AND T1.Type != 'Text';", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0001", "sql1": "\nSELECT model_name\nFROM chip_model\nWHERE (launch_year <= 2002.0\n       OR launch_year <= 2004.0)\nORDER BY model_name\n", "sql2": "SELECT Model_name\nFROM chip_model\nWHERE Launch_year BETWEEN 2002 AND 2004;", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0021", "sql1": "\nSELECT accreditation_level\nFROM\n  (SELECT accreditation_level,\n          accreditation_type,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY accreditation_level,\n            accreditation_type)\nWHERE (n > 3)\nORDER BY accreditation_level\n", "sql2": "SELECT Accreditation_level\nFROM phone\nGROUP BY Accreditation_level\nHAVING count(*) > 3", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_1/0020", "sql1": "\nSELECT accreditation_type,\n       n AS count___\nFROM\n  (SELECT accreditation_type,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY accreditation_type)\nORDER BY accreditation_type\n", "sql2": "SELECT Accreditation_type,\n       count(*)\nFROM phone\nGROUP BY Accreditation_type", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0025", "sql1": "\nSELECT grant_id,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT grant_id,\n                other_details,\n                COUNT(*) AS n\n         FROM documents\n         GROUP BY grant_id,\n                  other_details)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT grant_id,\n       count(*)\nFROM Documents\nGROUP BY grant_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0013", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT role_code) OVER () AS count_distinct_role_code_\nFROM project_staff\nORDER BY count_distinct_role_code_\n", "sql2": "SELECT count(DISTINCT role_code)\nFROM Project_Staff", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0005", "sql1": "\nSELECT organisation_id,\n       organisation_details\nFROM\n  (SELECT organisation_details,\n          organisation_id,\n          SUM(grant_amount) AS sumgrant_amount\n   FROM\n     (SELECT LHS.grant_id AS grant_id,\n             LHS.organisation_id AS organisation_id,\n             LHS.grant_amount AS grant_amount,\n             LHS.grant_start_date AS grant_start_date,\n             LHS.grant_end_date AS grant_end_date,\n             LHS.other_details AS other_details,\n             RHS.organisation_type AS organisation_type,\n             RHS.organisation_details AS organisation_details\n      FROM grants AS LHS\n      INNER JOIN organisations AS RHS ON (LHS.organisation_id = RHS.organisation_id))\n   GROUP BY organisation_details,\n            organisation_id)\nWHERE (sumgrant_amount >= 6000.0)\nORDER BY organisation_id\n", "sql2": "SELECT T2.organisation_id,\n       T2.organisation_details\nFROM Grants AS T1\nJOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id\nGROUP BY T2.organisation_id\nHAVING sum(T1.grant_amount) > 6000", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0029", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `other_details`,\n          COUNT(DISTINCT `date_from`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `project_staff`\n      WHERE (`role_code` = 'leader'\n             OR `date_from` < parse_datetime('1989-04-24 23:51:54')))\n   GROUP BY other_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Project_Staff\nWHERE role_code = 'leader'\n  OR date_from < '1989-04-24 23:51:54'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0028", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `project_outcomes`\nWHERE (`outcome_code` = 'Patent')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Project_outcomes\nWHERE outcome_code = 'Patent'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0012", "sql1": "\nSELECT `date_from`,\n       `date_to`\nFROM `project_staff`\nWHERE (`role_code` = 'researcher')\nORDER BY date_from\n", "sql2": "SELECT date_from,\n       date_to\nFROM Project_Staff\nWHERE role_code = 'researcher'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0003", "sql1": "\nSELECT DISTINCT SUM(`grant_amount`) OVER () AS `sum_grant_amount_`\nFROM\n  (SELECT `LHS`.`grant_id` AS `grant_id`,\n          `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`grant_amount` AS `grant_amount`,\n          `LHS`.`grant_start_date` AS `grant_start_date`,\n          `LHS`.`grant_end_date` AS `grant_end_date`,\n          `LHS`.`other_details` AS `other_details`,\n          `LHS`.`organisation_type` AS `organisation_type`,\n          `LHS`.`organisation_type_description` AS `organisation_type_description`,\n          `RHS`.`organisation_details` AS `organisation_details`\n   FROM\n     (SELECT `LHS`.`grant_id` AS `grant_id`,\n             `LHS`.`organisation_id` AS `organisation_id`,\n             `LHS`.`grant_amount` AS `grant_amount`,\n             `LHS`.`grant_start_date` AS `grant_start_date`,\n             `LHS`.`grant_end_date` AS `grant_end_date`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`organisation_type` AS `organisation_type`,\n             `RHS`.`organisation_type_description` AS `organisation_type_description`\n      FROM `grants` AS `LHS`\n      CROSS JOIN `organisation_types` AS `RHS`) AS `LHS`\n   INNER JOIN `organisations` AS `RHS` ON (`LHS`.`organisation_id` = `RHS`.`organisation_id`\n                                              AND `LHS`.`organisation_type` = `RHS`.`organisation_type`))\nWHERE (`organisation_type_description` = 'Research')\nORDER BY sum_grant_amount_\n", "sql2": "SELECT sum(grant_amount)\nFROM Grants AS T1\nJOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id\nJOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type\nWHERE T3.organisation_type_description = 'Research'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0019", "sql1": "\nSELECT project_details,\n       project_id\nFROM\n  (SELECT LHS.project_id AS project_id,\n          LHS.organisation_id AS organisation_id,\n          LHS.project_details AS project_details,\n          RHS.outcome_details AS outcome_details\n   FROM projects AS LHS\n   INNER JOIN\n     (SELECT outcome_details,\n             project_id,\n             COUNT(*) AS n\n      FROM project_outcomes\n      GROUP BY outcome_details,\n               project_id) AS RHS ON (LHS.project_id = RHS.project_id\n                                      AND LHS.organisation_id = RHS.n))\nORDER BY project_details\n", "sql2": "SELECT T1.project_details,\n       T1.project_id\nFROM Projects AS T1\nJOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0035", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM tasks\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Tasks", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0034", "sql1": "\nSELECT staff_details\nFROM research_staff\nORDER BY staff_details\n", "sql2": "SELECT staff_details\nFROM Research_Staff\nORDER BY staff_details ASC", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0018", "sql1": "\nSELECT date_from\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM project_staff\n      ORDER BY date_from)\n   LIMIT 1)\n", "sql2": "SELECT date_from\nFROM Project_Staff\nORDER BY date_from ASC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0038", "sql1": "\nSELECT outcome_description\nFROM\n  (SELECT LHS.project_id AS project_id,\n          LHS.outcome_code AS outcome_code,\n          LHS.outcome_details AS outcome_details,\n          RHS.outcome_description AS outcome_description\n   FROM project_outcomes AS LHS\n   INNER JOIN research_outcomes AS RHS ON (LHS.outcome_code = RHS.outcome_code))\nORDER BY outcome_description\n", "sql2": "SELECT T1.outcome_description\nFROM Research_outcomes AS T1\nJOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0014", "sql1": "\nSELECT sumgrant_amount AS sum_grant_amount_,\n       organisation_id\nFROM\n  (SELECT organisation_id,\n          SUM(grant_amount) AS sumgrant_amount\n   FROM grants\n   GROUP BY organisation_id)\nORDER BY sum_grant_amount_\n", "sql2": "SELECT sum(grant_amount),\n       organisation_id\nFROM Grants\nGROUP BY organisation_id", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0017", "sql1": "\nSELECT `role_description`\nFROM `staff_roles`\nWHERE (`role_code` = 'researcher')\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM Staff_Roles\nWHERE role_code = 'researcher'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0037", "sql1": "\nSELECT DISTINCT `role_code`\nFROM `project_staff`\nWHERE (`date_to` != parse_datetime('2003-04-19 15:06:20')\n       OR `date_from` != parse_datetime('2016-03-15 00:33:18'))\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM Project_Staff\nWHERE date_from > '2003-04-19 15:06:20'\n  AND date_to < '2016-03-15 00:33:18'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0020", "sql1": "\nSELECT project_details\nFROM\n  (SELECT *\n   FROM projects AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM project_outcomes AS RHS\n        WHERE (LHS.project_id = RHS.project_id) ))\nORDER BY project_details\n", "sql2": "SELECT project_details\nFROM Projects\nWHERE project_id NOT IN\n    (SELECT project_id\n     FROM Project_outcomes)", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0036", "sql1": "\nSELECT n AS count___,\n       project_details\nFROM\n  (SELECT project_details,\n          task_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.project_id AS project_id,\n             LHS.organisation_id AS organisation_id,\n             LHS.project_details AS project_details,\n             RHS.task_id AS task_id,\n             RHS.task_details AS task_details,\n             RHS.eg_agree_objectives AS eg_agree_objectives\n      FROM projects AS LHS\n      INNER JOIN tasks AS RHS ON (LHS.project_id = RHS.project_id))\n   GROUP BY project_details,\n            task_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.project_details\nFROM Projects AS T1\nJOIN Tasks AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0016", "sql1": "\nSELECT project_id,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT project_id,\n             COUNT(*) AS n\n      FROM project_staff\n      GROUP BY project_id) AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM projects AS RHS\n        WHERE (LHS.project_id = RHS.project_id) ))\nORDER BY project_id\n", "sql2": "SELECT T1.project_id,\n       count(*)\nFROM Project_Staff AS T1\nJOIN Projects AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id\nORDER BY count(*) ASC", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0031", "sql1": "\nSELECT `outcome_description`\nFROM\n  (SELECT `LHS`.`project_id` AS `project_id`,\n          `LHS`.`outcome_code` AS `outcome_code`,\n          `LHS`.`outcome_details` AS `outcome_details`,\n          `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`project_details` AS `project_details`,\n          `RHS`.`outcome_description` AS `outcome_description`\n   FROM\n     (SELECT `LHS`.`project_id` AS `project_id`,\n             `LHS`.`outcome_code` AS `outcome_code`,\n             `LHS`.`outcome_details` AS `outcome_details`,\n             `RHS`.`organisation_id` AS `organisation_id`,\n             `RHS`.`project_details` AS `project_details`\n      FROM `project_outcomes` AS `LHS`\n      INNER JOIN `projects` AS `RHS` ON (`LHS`.`project_id` = `RHS`.`project_id`)) AS `LHS`\n   INNER JOIN `research_outcomes` AS `RHS` ON (`LHS`.`outcome_code` = `RHS`.`outcome_code`))\nWHERE (`project_details` = 'sint')\nORDER BY outcome_description\n", "sql2": "SELECT T1.outcome_description\nFROM Research_outcomes AS T1\nJOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code\nJOIN Projects AS T3 ON T2.project_id = T3.project_id\nWHERE T3.project_details = 'sint'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0027", "sql1": "\nSELECT `organisation_details`\nFROM\n  (SELECT `LHS`.`organisation_type` AS `organisation_type`,\n          `LHS`.`organisation_type_description` AS `organisation_type_description`,\n          `RHS`.`organisation_id` AS `organisation_id`,\n          `RHS`.`organisation_details` AS `organisation_details`\n   FROM `organisation_types` AS `LHS`\n   INNER JOIN `organisations` AS `RHS` ON (`LHS`.`organisation_type` = `RHS`.`organisation_type`))\nWHERE (`organisation_type_description` = 'Sponsor')\nORDER BY organisation_details\n", "sql2": "SELECT organisation_details\nFROM Organisations AS T1\nJOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type\nWHERE T2.organisation_type_description = 'Sponsor'\nORDER BY organisation_details", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0007", "sql1": "\nSELECT organisation_type\nFROM\n  (SELECT organisation_id,\n          organisation_type,\n          organisation_details,\n          staff_id,\n          employer_organisation_id,\n          organisation_details AS staff_details\n   FROM\n     (SELECT LHS.organisation_id AS organisation_id,\n             LHS.organisation_type AS organisation_type,\n             LHS.organisation_details AS organisation_details,\n             RHS.staff_id AS staff_id,\n             RHS.employer_organisation_id AS employer_organisation_id\n      FROM organisations AS LHS\n      INNER JOIN research_staff AS RHS ON (LHS.organisation_details = RHS.staff_details)))\nORDER BY organisation_type\n", "sql2": "SELECT T1.organisation_type\nFROM Organisations AS T1\nJOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id\nGROUP BY T1.organisation_type\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0010", "sql1": "\nSELECT `project_details`\nFROM\n  (SELECT *\n   FROM `projects` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `project_staff`\n           WHERE (`role_code` = 'researcher')) AS RHS\n        WHERE (LHS.project_id = RHS.project_id) ))\nORDER BY project_details\n", "sql2": "SELECT project_details\nFROM Projects\nWHERE project_id NOT IN\n    (SELECT project_id\n     FROM Project_Staff\n     WHERE role_code = 'researcher' )", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0026", "sql1": "\nSELECT `organisation_type_description`\nFROM\n  (SELECT `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`organisation_type` AS `organisation_type`,\n          `LHS`.`organisation_details` AS `organisation_details`,\n          `RHS`.`organisation_type_description` AS `organisation_type_description`\n   FROM\n     (SELECT *\n      FROM `organisations`\n      WHERE (`organisation_details` = 'quo')) AS LHS\n   LEFT JOIN organisation_types AS RHS ON (LHS.organisation_type = RHS.organisation_type))\nORDER BY organisation_type_description\n", "sql2": "SELECT T1.organisation_type_description\nFROM organisation_Types AS T1\nJOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type\nWHERE T2.organisation_details = 'quo'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_grants_for_research/0030", "sql1": "\nSELECT date_to\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM project_staff\n      ORDER BY date_to DESC)\n   LIMIT 1)\n", "sql2": "SELECT date_to\nFROM Project_Staff\nORDER BY date_to DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/party_people/0004", "sql1": "\nSELECT minister,\n       took_office,\n       left_office\nFROM party\nORDER BY minister\n", "sql2": "SELECT minister,\n       took_office,\n       left_office\nFROM party\nORDER BY left_office", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0012", "sql1": "\nSELECT party_name,\n       region_name\nFROM\n  (SELECT LHS.region_id AS region_id,\n          LHS.region_name AS region_name,\n          LHS.date AS date,\n          LHS.label AS label,\n          LHS.format AS format,\n          LHS.catalogue AS catalogue,\n          RHS.party_id AS party_id,\n          RHS.minister AS minister,\n          RHS.took_office AS took_office,\n          RHS.left_office AS left_office,\n          RHS.party_name AS party_name\n   FROM region AS LHS\n   INNER JOIN party AS RHS ON (LHS.region_id = RHS.region_id))\nORDER BY party_name\n", "sql2": "SELECT T1.party_name,\n       T2.region_name\nFROM party AS T1\nJOIN region AS T2 ON T1.region_id = T2.region_id", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0008", "sql1": "\nSELECT minister\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM party\n      ORDER BY took_office DESC)\n   LIMIT 1)\n", "sql2": "SELECT minister\nFROM party\nORDER BY left_office DESC\nLIMIT 1", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0003", "sql1": "\nSELECT n AS count_distinct_party_name_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM party)\nORDER BY count_distinct_party_name_\n", "sql2": "SELECT count(DISTINCT party_name)\nFROM party", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0019", "sql1": "\nSELECT party_name\nFROM\n  (SELECT party_name,\n          region_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.minister AS minister,\n             LHS.took_office AS took_office,\n             LHS.left_office AS left_office,\n             LHS.region_id AS region_id,\n             LHS.party_name AS party_name,\n             RHS.event_id AS event_id,\n             RHS.event_name AS event_name,\n             RHS.member_in_charge_id AS member_in_charge_id\n      FROM party AS LHS\n      LEFT JOIN party_events AS RHS ON (LHS.party_id = RHS.party_id))\n   GROUP BY party_name,\n            region_id)\nWHERE (n >= 2)\nORDER BY party_name\n", "sql2": "SELECT T2.party_name\nFROM party_events AS T1\nJOIN party AS T2 ON T1.party_id = T2.party_id\nGROUP BY T1.party_id\nHAVING count(*) >= 2", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0022", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `region_id`,\n          `region_name`,\n          `date`,\n          `label`,\n          `format`,\n          `catalogue`,\n          `party_id`,\n          `minister`,\n          `took_office`,\n          `left_office`,\n          `party_name`,\n          `event_id`,\n          `event_name`,\n          `member_in_charge_id`,\n          COUNT(DISTINCT `region_name`) OVER () AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`region_id` AS `region_id`,\n             `LHS`.`region_name` AS `region_name`,\n             `LHS`.`date` AS `date`,\n             `LHS`.`label` AS `label`,\n             `LHS`.`format` AS `format`,\n             `LHS`.`catalogue` AS `catalogue`,\n             `LHS`.`party_id` AS `party_id`,\n             `LHS`.`minister` AS `minister`,\n             `LHS`.`took_office` AS `took_office`,\n             `LHS`.`left_office` AS `left_office`,\n             `LHS`.`party_name` AS `party_name`,\n             `RHS`.`event_id` AS `event_id`,\n             `RHS`.`event_name` AS `event_name`,\n             `RHS`.`member_in_charge_id` AS `member_in_charge_id`\n      FROM\n        (SELECT `LHS`.`region_id` AS `region_id`,\n                `LHS`.`region_name` AS `region_name`,\n                `LHS`.`date` AS `date`,\n                `LHS`.`label` AS `label`,\n                `LHS`.`format` AS `format`,\n                `LHS`.`catalogue` AS `catalogue`,\n                `RHS`.`party_id` AS `party_id`,\n                `RHS`.`minister` AS `minister`,\n                `RHS`.`took_office` AS `took_office`,\n                `RHS`.`left_office` AS `left_office`,\n                `RHS`.`party_name` AS `party_name`\n         FROM `region` AS `LHS`\n         INNER JOIN `party` AS `RHS` ON (`LHS`.`region_id` = `RHS`.`region_id`)) AS `LHS`\n      INNER JOIN `party_events` AS `RHS` ON (`LHS`.`party_id` = `RHS`.`party_id`)))\nWHERE (`region_name` = 'United Kingdom'\n       AND `event_name` = 'Annaual Meeting')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM region AS t1\nJOIN party AS t2 ON t1.region_id = t2.region_id\nJOIN party_events AS t3 ON t2.party_id = t3.party_id\nWHERE t1.region_name = 'United Kingdom'\n  AND t3.Event_Name = 'Annaual Meeting'", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0002", "sql1": "\nSELECT DISTINCT region_name\nFROM region\nORDER BY region_name\n", "sql2": "SELECT DISTINCT region_name\nFROM region\nORDER BY Label", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM region\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM region", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0017", "sql1": "\nSELECT party_name,\n       n AS count___\nFROM\n  (SELECT party_name,\n          region_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT event_id,\n             event_name,\n             party_id,\n             member_in_charge_id,\n             party_id_other,\n             minister,\n             took_office,\n             left_office,\n             party_name,\n             party_id AS region_id\n      FROM\n        (SELECT LHS.event_id AS event_id,\n                LHS.event_name AS event_name,\n                LHS.party_id AS party_id,\n                LHS.member_in_charge_id AS member_in_charge_id,\n                RHS.party_id AS party_id_other,\n                RHS.minister AS minister,\n                RHS.took_office AS took_office,\n                RHS.left_office AS left_office,\n                RHS.party_name AS party_name\n         FROM party_events AS LHS\n         INNER JOIN party AS RHS ON (LHS.party_id = RHS.region_id)))\n   GROUP BY party_name,\n            region_id)\nORDER BY party_name\n", "sql2": "SELECT T2.party_name,\n       count(*)\nFROM party_events AS T1\nJOIN party AS T2 ON T1.party_id = T2.party_id\nGROUP BY T1.party_id", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0021", "sql1": "\nSELECT event_name\nFROM\n  (SELECT event_name,\n          COUNT(*) AS n\n   FROM party_events\n   GROUP BY event_name)\nWHERE (n > 2)\nORDER BY event_name\n", "sql2": "SELECT event_name\nFROM party_events\nGROUP BY event_name\nHAVING count(*) > 2", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0020", "sql1": "\nSELECT member_name\nFROM\n  (SELECT event_id,\n          event_name,\n          party_id,\n          member_in_charge_id,\n          member_name,\n          event_id AS n\n   FROM\n     (SELECT LHS.event_id AS event_id,\n             LHS.event_name AS event_name,\n             LHS.party_id AS party_id,\n             LHS.member_in_charge_id AS member_in_charge_id,\n             RHS.member_name AS member_name\n      FROM party_events AS LHS\n      INNER JOIN\n        (SELECT member_id,\n                member_name,\n                COUNT(*) AS n\n         FROM member\n         GROUP BY member_id,\n                  member_name) AS RHS ON (LHS.event_id = RHS.n\n                                          AND LHS.member_in_charge_id = RHS.member_id)))\nORDER BY member_name\n", "sql2": "SELECT T1.member_name\nFROM member AS T1\nJOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id\nGROUP BY T2.member_in_charge_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM party_events\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM party_events", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0007", "sql1": "\nSELECT minister,\n       party_name\nFROM party\nORDER BY minister\n", "sql2": "SELECT minister,\n       party_name\nFROM party\nORDER BY took_office DESC", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0011", "sql1": "\nSELECT party_id AS party_name\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.member_name AS member_name,\n          LHS.party_id AS party_id,\n          LHS.in_office AS in_office\n   FROM member AS LHS\n   INNER JOIN\n     (SELECT COUNT(*) AS n\n      FROM party) AS RHS ON (LHS.member_id = RHS.n))\nORDER BY party_name\n", "sql2": "SELECT T2.party_name\nFROM Member AS T1\nJOIN party AS T2 ON T1.party_id = T2.party_id\nGROUP BY T1.party_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/party_people/0006", "sql1": "\nSELECT `minister`\nFROM `party`\nWHERE (`party_name` != 'Progress Party')\nORDER BY minister\n", "sql2": "SELECT minister\nFROM party\nWHERE party_name != 'Progress Party'", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0009", "sql1": "\nSELECT phone_number\nFROM employees\nWHERE (salary >= 8000.0\n       AND salary <= 12000.0)\nORDER BY phone_number\n", "sql2": "SELECT phone_number\nFROM employees\nWHERE salary BETWEEN 8000 AND 12000", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0005", "sql1": "\nSELECT `department_id`,\n       `department_name`,\n       `manager_id`,\n       `location_id`\nFROM `departments`\nWHERE (`department_name` = 'Marketing')\nORDER BY department_id\n", "sql2": "SELECT *\nFROM departments\nWHERE department_name = 'Marketing'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0028", "sql1": "\nSELECT employee_id\nFROM\n  (SELECT department_id,\n          employee_id,\n          COUNT(*) AS n\n   FROM job_history\n   GROUP BY department_id,\n            employee_id)\nWHERE (n = 2)\nORDER BY employee_id\n", "sql2": "SELECT employee_id\nFROM job_history\nGROUP BY employee_id\nHAVING COUNT(*) >= 2", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0032", "sql1": "\nSELECT job_title,\n       meansalary AS avg_salary_\nFROM\n  (SELECT LHS.job_id AS job_id,\n          LHS.meansalary AS meansalary,\n          RHS.job_title AS job_title,\n          RHS.min_salary AS min_salary,\n          RHS.max_salary AS max_salary\n   FROM\n     (SELECT job_id,\n             AVG(salary) AS meansalary\n      FROM employees\n      GROUP BY job_id) AS LHS\n   INNER JOIN jobs AS RHS ON (LHS.job_id = RHS.job_id))\nORDER BY job_title\n", "sql2": "SELECT job_title,\n       AVG(salary)\nFROM employees AS T1\nJOIN jobs AS T2 ON T1.job_id = T2.job_id\nGROUP BY T2.job_title", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0042", "sql1": "\nSELECT `first_name`,\n       `job_id`\nFROM\n  (SELECT `LHS`.`employee_id` AS `employee_id`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`email` AS `email`,\n          `LHS`.`phone_number` AS `phone_number`,\n          `LHS`.`hire_date` AS `hire_date`,\n          `LHS`.`job_id` AS `job_id`,\n          `LHS`.`salary` AS `salary`,\n          `LHS`.`commission_pct` AS `commission_pct`,\n          `LHS`.`manager_id` AS `manager_id`,\n          `LHS`.`department_id` AS `department_id`,\n          `RHS`.`department_name` AS `department_name`,\n          `RHS`.`manager_id` AS `manager_id_other`,\n          `RHS`.`location_id` AS `location_id`\n   FROM `employees` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `departments`\n      WHERE (`department_name` = 'Finance')) AS RHS ON (LHS.department_id = RHS.department_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T1.job_id\nFROM employees AS T1\nJOIN departments AS T2 ON T1.department_id = T2.department_id\nWHERE T2.department_name = 'Finance'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0015", "sql1": "\nSELECT salary,\n       manager_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employees\n      ORDER BY commission_pct)\n   LIMIT 107)\n", "sql2": "SELECT salary,\n       manager_id\nFROM employees\nWHERE manager_id != 'null'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0003", "sql1": "\nSELECT `first_name`,\n       `department_id`\nFROM `employees`\nWHERE (`last_name` = 'McEwen')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       department_id\nFROM employees\nWHERE last_name = 'McEwen'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0019", "sql1": "\nSELECT job_title\nFROM jobs\nWHERE (min_salary > 9000.0)\nORDER BY job_title\n", "sql2": "SELECT job_title\nFROM jobs\nWHERE min_salary > 9000", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0034", "sql1": "\nSELECT minsalary AS min_salary_,\n       department_id\nFROM\n  (SELECT department_id,\n          MIN(salary) AS minsalary\n   FROM employees\n   GROUP BY department_id)\nORDER BY min_salary_\n", "sql2": "SELECT MIN(salary),\n       department_id\nFROM employees\nGROUP BY department_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0022", "sql1": "\nSELECT employee_id,\n       maxend_date AS max_end_date_\nFROM\n  (SELECT department_id,\n          employee_id,\n          MAX(end_date) AS maxend_date\n   FROM job_history\n   GROUP BY department_id,\n            employee_id)\nORDER BY employee_id\n", "sql2": "SELECT employee_id,\n       MAX(end_date)\nFROM job_history\nGROUP BY employee_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0038", "sql1": "\nSELECT department_name\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.email AS email,\n          LHS.phone_number AS phone_number,\n          LHS.hire_date AS hire_date,\n          LHS.job_id AS job_id,\n          LHS.salary AS salary,\n          LHS.commission_pct AS commission_pct,\n          LHS.manager_id AS manager_id,\n          LHS.department_id AS department_id,\n          RHS.department_name AS department_name,\n          RHS.location_id AS location_id\n   FROM employees AS LHS\n   INNER JOIN departments AS RHS ON (LHS.department_id = RHS.department_id\n                                        AND LHS.employee_id = RHS.manager_id))\nORDER BY department_name\n", "sql2": "SELECT DISTINCT T2.department_name\nFROM employees AS T1\nJOIN departments AS T2 ON T1.department_id = T2.department_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0002", "sql1": "\nSELECT first_name,\n       last_name,\n       salary\nFROM employees\nWHERE (salary < 6000.0)\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name,\n       salary\nFROM employees\nWHERE salary < 6000", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0014", "sql1": "\nSELECT first_name,\n       last_name\nFROM employees\nWHERE (department_id = 70.0\n       OR department_id = 90.0)\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM employees\nWHERE department_id = 70\n  OR department_id = 90", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0056", "sql1": "\nSELECT department_name,\n       city,\n       state_province\nFROM\n  (SELECT LHS.department_id AS department_id,\n          LHS.department_name AS department_name,\n          LHS.manager_id AS manager_id,\n          LHS.location_id AS location_id,\n          RHS.street_address AS street_address,\n          RHS.postal_code AS postal_code,\n          RHS.city AS city,\n          RHS.state_province AS state_province,\n          RHS.country_id AS country_id\n   FROM departments AS LHS\n   INNER JOIN locations AS RHS ON (LHS.location_id = RHS.location_id))\nORDER BY department_name\n", "sql2": "SELECT T1.department_name,\n       T2.city,\n       T2.state_province\nFROM departments AS T1\nJOIN locations AS T2 ON T2.location_id = T1.location_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0001", "sql1": "\nSELECT first_name,\n       department_name\nFROM\n  (SELECT LHS.department_id AS department_id,\n          LHS.department_name AS department_name,\n          LHS.manager_id AS manager_id,\n          LHS.location_id AS location_id,\n          RHS.employee_id AS employee_id,\n          RHS.first_name AS first_name,\n          RHS.last_name AS last_name,\n          RHS.email AS email,\n          RHS.phone_number AS phone_number,\n          RHS.hire_date AS hire_date,\n          RHS.job_id AS job_id,\n          RHS.salary AS salary,\n          RHS.commission_pct AS commission_pct,\n          RHS.manager_id AS manager_id_other\n   FROM departments AS LHS\n   INNER JOIN employees AS RHS ON (LHS.department_id = RHS.department_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T2.department_name\nFROM employees AS T1\nJOIN departments AS T2 ON T1.department_id = T2.department_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0041", "sql1": "\nSELECT employee_id,\n       job_title\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.email AS email,\n          LHS.phone_number AS phone_number,\n          LHS.hire_date AS hire_date,\n          LHS.job_id AS job_id,\n          LHS.salary AS salary,\n          LHS.commission_pct AS commission_pct,\n          LHS.manager_id AS manager_id,\n          LHS.department_id AS department_id,\n          RHS.job_title AS job_title,\n          RHS.min_salary AS min_salary,\n          RHS.max_salary AS max_salary\n   FROM\n     (SELECT *\n      FROM employees\n      WHERE (department_id = 80.0)) AS LHS\n   INNER JOIN jobs AS RHS ON (LHS.job_id = RHS.job_id))\nORDER BY employee_id\n", "sql2": "SELECT T1.employee_id,\n       T2.job_title\nFROM employees AS T1\nJOIN jobs AS T2 ON T1.job_id = T2.job_id\nWHERE T1.department_id = 80", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/hr_1/0026", "sql1": "\nSELECT country_id,\n       n AS count___\nFROM\n  (SELECT country_id,\n          COUNT(*) AS n\n   FROM locations\n   GROUP BY country_id)\nORDER BY country_id\n", "sql2": "SELECT country_id,\n       COUNT(*)\nFROM locations\nGROUP BY country_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0013", "sql1": "\nSELECT name\nFROM scientists\nORDER BY name\n", "sql2": "SELECT name\nFROM scientists\nORDER BY name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0005", "sql1": "\nSELECT meanhours AS avg_hours_\nFROM\n  (SELECT AVG(hours) AS meanhours\n   FROM projects)\nORDER BY avg_hours_\n", "sql2": "SELECT avg(hours)\nFROM projects", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_name_\nFROM projects\nORDER BY count_distinct_name_\n", "sql2": "SELECT count(DISTINCT name)\nFROM projects", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0015", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT code,\n          name,\n          hours,\n          n,\n          code AS project\n   FROM\n     (SELECT LHS.code AS code,\n             LHS.name AS name,\n             LHS.hours AS hours,\n             RHS.n AS n\n      FROM projects AS LHS\n      INNER JOIN\n        (SELECT project,\n                COUNT(*) AS n\n         FROM assignedto\n         GROUP BY project) AS RHS ON (LHS.code = RHS.project)))\nWHERE (hours > 300\n       AND n < hours)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM projects AS T1\nJOIN assignedto AS T2 ON T1.code = T2.project\nWHERE T1.hours > 300\nGROUP BY T1.name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0003", "sql1": "\nSELECT n AS count_distinct_scientist_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM assignedto)\nORDER BY count_distinct_scientist_\n", "sql2": "SELECT count(DISTINCT scientist)\nFROM assignedto", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0019", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM projects AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT code,\n                  name,\n                  hours,\n                  scientist,\n                  code AS project\n           FROM\n             (SELECT LHS.code AS code,\n                     LHS.name AS name,\n                     LHS.hours AS hours,\n                     RHS.scientist AS scientist\n              FROM projects AS LHS\n              INNER JOIN assignedto AS RHS ON (LHS.code = RHS.project))) AS RHS\n        WHERE (LHS.hours = RHS.hours\n               AND LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM Projects\nWHERE Code NOT IN\n    (SELECT Project\n     FROM AssignedTo)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0022", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.scientist AS scientist,\n          LHS.project AS project,\n          RHS.maxhours AS maxhours\n   FROM\n     (SELECT LHS.ssn AS ssn,\n             LHS.name AS name,\n             RHS.scientist AS scientist,\n             RHS.project AS project\n      FROM scientists AS LHS\n      CROSS JOIN assignedto AS RHS) AS LHS\n   CROSS JOIN\n     (SELECT MAX(hours) AS maxhours\n      FROM projects) AS RHS)\nORDER BY name\n", "sql2": "SELECT name\nFROM scientists\nEXCEPT\nSELECT T3.name\nFROM assignedto AS T1\nJOIN projects AS T2 ON T1.project = T2.code\nJOIN scientists AS T3 ON T1.scientist = T3.SSN\nWHERE T2.hours =\n    (SELECT max(hours)\n     FROM projects)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0018", "sql1": "\nSELECT name\nFROM scientists\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM assignedto AS T1\nJOIN scientists AS T2 ON T1.scientist = T2.ssn", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0002", "sql1": "\nSELECT DISTINCT SUM(hours) OVER () AS sum_hours_\nFROM projects\nORDER BY sum_hours_\n", "sql2": "SELECT sum(hours)\nFROM projects", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0014", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.code AS code,\n          LHS.name AS name,\n          LHS.hours AS hours,\n          RHS.n AS n\n   FROM projects AS LHS\n   INNER JOIN\n     (SELECT project,\n             COUNT(*) AS n\n      FROM assignedto\n      GROUP BY project) AS RHS ON (LHS.code = RHS.project))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM projects AS T1\nJOIN assignedto AS T2 ON T1.code = T2.project\nGROUP BY T1.name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM scientists\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM scientists", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0021", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT ssn) AS n_distinct\n   FROM\n     (SELECT ssn,\n             name,\n             scientist,\n             name AS project\n      FROM\n        (SELECT LHS.ssn AS ssn,\n                LHS.name AS name,\n                RHS.scientist AS scientist\n         FROM scientists AS LHS\n         INNER JOIN assignedto AS RHS ON (LHS.name = RHS.project))))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM scientists\nWHERE ssn NOT IN\n    (SELECT scientist\n     FROM AssignedTo)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0016", "sql1": "\nSELECT DISTINCT n AS count___,\n                name\nFROM\n  (SELECT name,\n          scientist,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.ssn AS ssn,\n             LHS.name AS name,\n             RHS.scientist AS scientist,\n             RHS.project AS project\n      FROM scientists AS LHS\n      CROSS JOIN assignedto AS RHS)\n   GROUP BY name,\n            scientist)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM scientists AS T1\nJOIN assignedto AS T2 ON T1.ssn = T2.scientist\nGROUP BY T1.name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT hours,\n                name,\n                AVG(hours) AS meanhours\n         FROM projects\n         GROUP BY hours,\n                  name)\n      ORDER BY hours DESC)\n   LIMIT 2)\n", "sql2": "SELECT name\nFROM projects\nWHERE hours >\n    (SELECT avg(hours)\n     FROM projects)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0011", "sql1": "\nSELECT name\nFROM projects\nWHERE (hours >= 100\n       AND hours <= 300)\nORDER BY name\n", "sql2": "SELECT name\nFROM projects\nWHERE hours BETWEEN 100 AND 300", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/scientist_1/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM projects\n      ORDER BY name)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM projects\nORDER BY hours DESC\nLIMIT 1", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_3/0025", "sql1": "\nSELECT cname\nFROM\n  (SELECT LHS.cid AS cid,\n          LHS.n AS n,\n          RHS.cname AS cname,\n          RHS.credits AS credits,\n          RHS.instructor AS instructor,\n          RHS.days AS days,\n          RHS.hours AS hours,\n          RHS.dno AS dno\n   FROM\n     (SELECT *\n      FROM\n        (SELECT cid,\n                COUNT(*) AS n\n         FROM enrolled_in\n         GROUP BY cid)\n      WHERE (n >= 5)) AS LHS\n   INNER JOIN course AS RHS ON (LHS.cid = RHS.cid))\nORDER BY cname\n", "sql2": "SELECT T1.CName\nFROM COURSE AS T1\nJOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID\nGROUP BY T2.CID\nHAVING COUNT(*) >= 5", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0013", "sql1": "\nSELECT cid,\n       cname,\n       credits,\n       instructor,\n       days,\n       hours,\n       dno\nFROM course\nORDER BY cid\n", "sql2": "SELECT *\nFROM COURSE\nORDER BY Credits", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `department`\n      WHERE (`division` = 'AS')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM DEPARTMENT\nWHERE Division = 'AS'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0029", "sql1": "\nSELECT DISTINCT `fname`\nFROM\n  (SELECT `stuid`,\n          `lname`,\n          `fname`,\n          `age`,\n          `sex`,\n          `major`,\n          `advisor`,\n          `city_code`,\n          `cid`,\n          `grade`,\n          `gradepoint`,\n          `grade` AS `lettergrade`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`cid` AS `cid`,\n             `LHS`.`grade` AS `grade`,\n             `RHS`.`gradepoint` AS `gradepoint`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`cid` AS `cid`,\n                `RHS`.`grade` AS `grade`\n         FROM `student` AS `LHS`\n         INNER JOIN `enrolled_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN `gradeconversion` AS `RHS` ON (`LHS`.`grade` = `RHS`.`lettergrade`)))\nWHERE (`gradepoint` > '3.8')\nORDER BY fname\n", "sql2": "SELECT DISTINCT T3.Fname\nFROM ENROLLED_IN AS T1\nJOIN GRADECONVERSION AS T2\nJOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade\nAND T1.StuID = T3.StuID\nWHERE T2.gradepoint >= 3.8", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0028", "sql1": "\nSELECT fname,\n       lname,\n       gradepoint\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.cid AS cid,\n          RHS.grade AS grade,\n          RHS.gradepoint AS gradepoint,\n          RHS.lettergrade AS lettergrade\n   FROM student AS LHS\n   INNER JOIN\n     (SELECT stuid,\n             cid,\n             grade,\n             gradepoint,\n             grade AS lettergrade\n      FROM\n        (SELECT LHS.stuid AS stuid,\n                LHS.cid AS cid,\n                LHS.grade AS grade,\n                RHS.gradepoint AS gradepoint\n         FROM enrolled_in AS LHS\n         INNER JOIN gradeconversion AS RHS ON (LHS.grade = RHS.lettergrade))) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY fname\n", "sql2": "SELECT T3.Fname,\n       T3.LName,\n       T2.gradepoint\nFROM ENROLLED_IN AS T1\nJOIN GRADECONVERSION AS T2\nJOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade\nAND T1.StuID = T3.StuID", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0004", "sql1": "\nSELECT `cname`\nFROM `course`\nWHERE (`days` = 'MTW')\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nWHERE Days = 'MTW'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0012", "sql1": "\nSELECT `dname`\nFROM `department`\nWHERE (`building` = 'Mergenthaler')\nORDER BY dname\n", "sql2": "SELECT DName\nFROM DEPARTMENT\nWHERE Building = 'Mergenthaler'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0032", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`facid` AS `facid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`rank` AS `rank`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`phone` AS `phone`,\n          `LHS`.`room` AS `room`,\n          `LHS`.`building` AS `building`,\n          `RHS`.`dno` AS `dno`,\n          `RHS`.`division` AS `division`,\n          `RHS`.`dname` AS `dname`,\n          `RHS`.`room` AS `room_other`,\n          `RHS`.`building` AS `building_other`,\n          `RHS`.`dphone` AS `dphone`,\n          `RHS`.`appt_type` AS `appt_type`\n   FROM `faculty` AS `LHS`\n   INNER JOIN\n     (SELECT `LHS`.`dno` AS `dno`,\n             `LHS`.`division` AS `division`,\n             `LHS`.`dname` AS `dname`,\n             `LHS`.`room` AS `room`,\n             `LHS`.`building` AS `building`,\n             `LHS`.`dphone` AS `dphone`,\n             `LHS`.`facid` AS `facid`,\n             `LHS`.`appt_type` AS `appt_type`\n      FROM\n        (SELECT `LHS`.`dno` AS `dno`,\n                `LHS`.`division` AS `division`,\n                `LHS`.`dname` AS `dname`,\n                `LHS`.`room` AS `room`,\n                `LHS`.`building` AS `building`,\n                `LHS`.`dphone` AS `dphone`,\n                `RHS`.`facid` AS `facid`,\n                `RHS`.`appt_type` AS `appt_type`\n         FROM `department` AS `LHS`\n         INNER JOIN `member_of` AS `RHS` ON (`LHS`.`dno` = `RHS`.`dno`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `department`\n         WHERE (`dname` = 'Computer Science')) AS RHS ON (LHS.dno = RHS.dno\n                                                          AND LHS.division = RHS.division\n                                                          AND LHS.dname = RHS.dname\n                                                          AND LHS.room = RHS.room\n                                                          AND LHS.building = RHS.building\n                                                          AND LHS.dphone = RHS.dphone)) AS RHS ON (LHS.facid = RHS.facid))\nORDER BY lname\n", "sql2": "SELECT T2.Lname\nFROM DEPARTMENT AS T1\nJOIN FACULTY AS T2 ON T1.DNO = T3.DNO\nJOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID\nWHERE T1.DName = 'Computer Science'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0008", "sql1": "\nSELECT DISTINCT maxgradepoint AS max_gradepoint_,\n                MIN(gradepoint) OVER () AS min_gradepoint_\nFROM\n  (SELECT lettergrade,\n          gradepoint,\n          MAX(gradepoint) OVER () AS maxgradepoint\n   FROM gradeconversion)\nORDER BY max_gradepoint_\n", "sql2": "SELECT max(gradepoint),\n       min(gradepoint)\nFROM GRADECONVERSION", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0015", "sql1": "\nSELECT fname\nFROM student\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM STUDENT\nORDER BY Age DESC", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0003", "sql1": "\nSELECT cname\nFROM course\nWHERE (credits = 1)\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nWHERE Credits = 1", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0035", "sql1": "\nSELECT DISTINCT cname\nFROM\n  (SELECT *\n   FROM course\n   WHERE (hours = 4\n          OR credits = 3))\nWHERE (credits <= 3\n       OR credits <= 1)\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nWHERE Credits = 3\nUNION\nSELECT CName\nFROM COURSE\nWHERE Credits = 1\n  AND Hours = 4", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0018", "sql1": "\nSELECT `fname`\nFROM `faculty`\nWHERE (`rank` = 'Professor')\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM FACULTY\nWHERE Rank = 'Professor'\nORDER BY Fname", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM course\nWHERE (credits > 2)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COURSE\nWHERE Credits > 2", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0014", "sql1": "\nSELECT cname\nFROM course\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nORDER BY Credits", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM course)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COURSE", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0017", "sql1": "\nSELECT `lname`\nFROM `faculty`\nWHERE (`building` = 'Barton')\nORDER BY lname\n", "sql2": "SELECT Lname\nFROM FACULTY\nWHERE Building = 'Barton'\nORDER BY Lname", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0020", "sql1": "\nSELECT dname\nFROM\n  (SELECT *\n   FROM department AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM minor_in AS RHS\n        WHERE (LHS.dno = RHS.dno) ))\nORDER BY dname\n", "sql2": "SELECT DName\nFROM DEPARTMENT\nEXCEPT\nSELECT T1.DName\nFROM DEPARTMENT AS T1\nJOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0036", "sql1": "\nSELECT `dname`\nFROM\n  (SELECT *\n   FROM `department`\n   WHERE (`division` = 'EN'\n          OR `building` != 'NEB'))\nWHERE (`division` = 'AS'\n       OR `building` = 'NEB')\nORDER BY dname\n", "sql2": "SELECT DName\nFROM DEPARTMENT\nWHERE Division = 'AS'\nUNION\nSELECT DName\nFROM DEPARTMENT\nWHERE Division = 'EN'\n  AND Building = 'NEB'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0016", "sql1": "\nSELECT `lname`\nFROM `student`\nWHERE (`sex` = 'F')\nORDER BY lname\n", "sql2": "SELECT LName\nFROM STUDENT\nWHERE Sex = 'F'\nORDER BY Age DESC", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0031", "sql1": "\nSELECT fname,\n       lname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          LHS.dno AS dno\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             RHS.dno AS dno\n      FROM student AS LHS\n      INNER JOIN minor_in AS RHS ON (LHS.stuid = RHS.stuid)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM minor_in\n      WHERE (dno = 140)) AS RHS ON (LHS.stuid = RHS.stuid\n                                    AND LHS.dno = RHS.dno))\nORDER BY fname\n", "sql2": "SELECT T2.Fname,\n       T2.Lname\nFROM MINOR_IN AS T1\nJOIN STUDENT AS T2 ON T1.StuID = T2.StuID\nWHERE T1.DNO = 140", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0027", "sql1": "\nSELECT `dname`,\n       `room`\nFROM\n  (SELECT `LHS`.`dno` AS `dno`,\n          `LHS`.`division` AS `division`,\n          `LHS`.`dname` AS `dname`,\n          `LHS`.`room` AS `room`,\n          `LHS`.`building` AS `building`,\n          `LHS`.`dphone` AS `dphone`,\n          `RHS`.`cid` AS `cid`,\n          `RHS`.`cname` AS `cname`,\n          `RHS`.`credits` AS `credits`,\n          `RHS`.`instructor` AS `instructor`,\n          `RHS`.`days` AS `days`,\n          `RHS`.`hours` AS `hours`\n   FROM `department` AS `LHS`\n   INNER JOIN `course` AS `RHS` ON (`LHS`.`dno` = `RHS`.`dno`))\nWHERE (`cname` = 'INTRODUCTION TO COMPUTER SCIENCE')\nORDER BY dname\n", "sql2": "SELECT T2.Dname,\n       T2.Room\nFROM COURSE AS T1\nJOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO\nWHERE T1.CName = 'INTRODUCTION TO COMPUTER SCIENCE'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `stuid`) OVER () AS `count_distinct_stuid_`\nFROM `enrolled_in`\nWHERE (`grade` = 'B')\nORDER BY count_distinct_stuid_\n", "sql2": "SELECT COUNT(DISTINCT StuID)\nFROM ENROLLED_IN\nWHERE Grade = 'B'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0011", "sql1": "\nSELECT `room`\nFROM `faculty`\nWHERE (`rank` = 'Professor'\n       AND `building` = 'NEB')\nORDER BY room\n", "sql2": "SELECT Room\nFROM FACULTY\nWHERE Rank = 'Professor'\n  AND Building = 'NEB'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0010", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM `faculty`\nWHERE (`sex` = 'M'\n       AND `building` = 'NEB')\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM FACULTY\nWHERE sex = 'M'\n  AND Building = 'NEB'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0006", "sql1": "\nSELECT dphone\nFROM department\nWHERE (room = 268)\nORDER BY dphone\n", "sql2": "SELECT DPhone\nFROM DEPARTMENT\nWHERE Room = 268", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0026", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`facid` AS `facid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`rank` AS `rank`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`phone` AS `phone`,\n          `LHS`.`room` AS `room`,\n          `LHS`.`building` AS `building`,\n          `RHS`.`cid` AS `cid`,\n          `RHS`.`cname` AS `cname`,\n          `RHS`.`credits` AS `credits`,\n          `RHS`.`days` AS `days`,\n          `RHS`.`hours` AS `hours`,\n          `RHS`.`dno` AS `dno`\n   FROM `faculty` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `course`\n      WHERE (`cname` = 'COMPUTER LITERACY')) AS RHS ON (LHS.facid = RHS.instructor))\nORDER BY fname\n", "sql2": "SELECT T2.Fname,\n       T2.Lname\nFROM COURSE AS T1\nJOIN FACULTY AS T2 ON T1.Instructor = T2.FacID\nWHERE T1.CName = 'COMPUTER LITERACY'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_3/0030", "sql1": "\nSELECT fname,\n       lname\nFROM\n  (SELECT LHS.facid AS facid,\n          LHS.dno AS dno,\n          LHS.appt_type AS appt_type,\n          RHS.lname AS lname,\n          RHS.fname AS fname,\n          RHS.rank AS rank,\n          RHS.sex AS sex,\n          RHS.phone AS phone,\n          RHS.room AS room,\n          RHS.building AS building\n   FROM\n     (SELECT *\n      FROM member_of\n      WHERE (dno = 520)) AS LHS\n   LEFT JOIN faculty AS RHS ON (LHS.facid = RHS.facid))\nORDER BY fname\n", "sql2": "SELECT T1.Fname,\n       T1.Lname\nFROM FACULTY AS T1\nJOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID\nWHERE T2.DNO = 520", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0009", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`channel_id` AS `channel_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`owner` AS `owner`,\n          `LHS`.`share_in_percent` AS `share_in_percent`,\n          `LHS`.`rating_in_percent` AS `rating_in_percent`,\n          `RHS`.`program_id` AS `program_id`,\n          `RHS`.`time_of_day` AS `time_of_day`\n   FROM `channel` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `broadcast`\n      WHERE (`time_of_day` = 'Morning')) AS RHS ON (LHS.channel_id = RHS.channel_id))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM channel AS t1\nJOIN broadcast AS t2 ON t1.channel_id = t2.channel_id\nWHERE t2.time_of_day = 'Morning'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0013", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `program` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `broadcast`\n           WHERE (`time_of_day` = 'Morning')) AS RHS\n        WHERE (LHS.program_id = RHS.program_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nEXCEPT\nSELECT t1.name\nFROM program AS t1\nJOIN broadcast AS t2 ON t1.program_id = t2.program_id\nWHERE t2.Time_of_day = 'Morning'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0005", "sql1": "\nSELECT name\nFROM program\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nORDER BY launch", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM program\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM program", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0012", "sql1": "\nSELECT `n_distinct` AS `count_distinct_program_id_`\nFROM\n  (SELECT `channel_id`,\n          `program_id`,\n          `time_of_day`,\n          COUNT(DISTINCT `time_of_day`) OVER () AS `n_distinct`\n   FROM `broadcast`)\nWHERE (`time_of_day` = 'Night'\n       AND n_distinct < program_id)\nORDER BY count_distinct_program_id_\n", "sql2": "SELECT count(DISTINCT program_id)\nFROM broadcast\nWHERE time_of_day = 'Night'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0015", "sql1": "\nSELECT origin\nFROM program\nORDER BY origin\n", "sql2": "SELECT origin\nFROM program\nORDER BY origin", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0003", "sql1": "\nSELECT OWNER\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM channel\n      ORDER BY share_in_percent DESC)\n   LIMIT 1)\n", "sql2": "SELECT OWNER\nFROM channel\nORDER BY rating_in_percent DESC\nLIMIT 1", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0019", "sql1": "\nSELECT sumrating_in_percent AS sum_rating_in_percent_,\n       OWNER\nFROM\n  (SELECT OWNER,\n          SUM(rating_in_percent) AS sumrating_in_percent\n   FROM channel\n   GROUP BY OWNER)\nORDER BY sum_rating_in_percent_\n", "sql2": "SELECT sum(Rating_in_percent),\n       OWNER\nFROM channel\nGROUP BY OWNER", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM channel\n      ORDER BY share_in_percent DESC)\n   LIMIT 8)\n", "sql2": "SELECT name\nFROM channel\nWHERE OWNER = 'CCTV'\n  OR OWNER = 'HBS'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0002", "sql1": "\nSELECT name\nFROM channel\nORDER BY name\n", "sql2": "SELECT name\nFROM channel\nORDER BY rating_in_percent DESC", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0014", "sql1": "\nSELECT `owner`\nFROM\n  (SELECT `program_id`,\n          `name`,\n          `origin`,\n          `launch`,\n          `owner`,\n          `program_id_other`,\n          `time_of_day`,\n          `program_id` AS `channel_id`\n   FROM\n     (SELECT `LHS`.`program_id` AS `program_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`origin` AS `origin`,\n             `LHS`.`launch` AS `launch`,\n             `LHS`.`owner` AS `owner`,\n             `RHS`.`program_id` AS `program_id_other`,\n             `RHS`.`time_of_day` AS `time_of_day`\n      FROM `program` AS `LHS`\n      INNER JOIN `broadcast` AS `RHS` ON (`LHS`.`program_id` = `RHS`.`channel_id`)))\nWHERE (`time_of_day` != 'Morning'\n       OR `time_of_day` = 'Night')\nORDER BY OWNER\n", "sql2": "SELECT t1.owner\nFROM program AS t1\nJOIN broadcast AS t2 ON t1.program_id = t2.program_id\nWHERE t2.Time_of_day = 'Morning' INTERSECT\n  SELECT t1.owner\n  FROM program AS t1\n  JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = 'Night'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0017", "sql1": "\nSELECT `name`\nFROM `program`\nWHERE (`origin` != 'Beijing')\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nWHERE origin != 'Beijing'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.program_id AS program_id,\n          LHS.name AS name,\n          LHS.origin AS origin,\n          LHS.launch AS launch,\n          LHS.owner AS OWNER,\n          RHS.origin AS origin_other\n   FROM program AS LHS\n   INNER JOIN\n     (SELECT name,\n             origin,\n             COUNT(*) AS n\n      FROM\n        (SELECT LHS.channel_id AS channel_id,\n                LHS.program_id AS program_id,\n                LHS.time_of_day AS time_of_day,\n                RHS.name AS name,\n                RHS.origin AS origin,\n                RHS.launch AS launch,\n                RHS.owner AS OWNER\n         FROM broadcast AS LHS\n         INNER JOIN program AS RHS ON (LHS.program_id = RHS.program_id))\n      GROUP BY name,\n               origin) AS RHS ON (LHS.program_id = RHS.n\n                                  AND LHS.name = RHS.name))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM program AS t1\nJOIN broadcast AS t2 ON t1.program_id = t2.program_id\nGROUP BY t2.program_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0016", "sql1": "\nSELECT n AS count_distinct_owner_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT OWNER,\n             COUNT(*) AS n\n      FROM channel\n      GROUP BY OWNER))\nORDER BY count_distinct_owner_\n", "sql2": "SELECT count(DISTINCT OWNER)\nFROM channel", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM program\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM program\nORDER BY launch DESC\nLIMIT 1", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0011", "sql1": "\nSELECT n AS count___,\n       time_of_day\nFROM\n  (SELECT time_of_day,\n          COUNT(*) AS n\n   FROM broadcast\n   GROUP BY time_of_day)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       time_of_day\nFROM broadcast\nGROUP BY time_of_day", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0010", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `channel_id`,\n             `name`,\n             `owner`,\n             `share_in_percent`,\n             `rating_in_percent`,\n             `channel_id_other`,\n             `time_of_day`,\n             `channel_id` AS `program_id`\n      FROM\n        (SELECT `LHS`.`channel_id` AS `channel_id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`owner` AS `owner`,\n                `LHS`.`share_in_percent` AS `share_in_percent`,\n                `LHS`.`rating_in_percent` AS `rating_in_percent`,\n                `RHS`.`channel_id` AS `channel_id_other`,\n                `RHS`.`time_of_day` AS `time_of_day`\n         FROM `channel` AS `LHS`\n         INNER JOIN `broadcast` AS `RHS` ON (`LHS`.`channel_id` = `RHS`.`program_id`))) AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `broadcast`\n           WHERE (`time_of_day` = 'Morning'\n                  OR `time_of_day` = 'Night')) AS RHS\n        WHERE (LHS.channel_id = RHS.channel_id\n               AND LHS.time_of_day = RHS.time_of_day\n               AND LHS.program_id = RHS.program_id) ))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM channel AS t1\nJOIN broadcast AS t2 ON t1.channel_id = t2.channel_id\nWHERE t2.time_of_day = 'Morning' INTERSECT\n  SELECT t1.name\n  FROM channel AS t1\n  JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/program_share/0006", "sql1": "\nSELECT name,\n       origin,\n       OWNER\nFROM program\nORDER BY name\n", "sql2": "SELECT name,\n       origin,\n       OWNER\nFROM program", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_2/0009", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_dept_name_\nFROM\n  (SELECT credits,\n          COUNT(DISTINCT dept_name) AS n_distinct\n   FROM course\n   GROUP BY credits)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name)\nFROM course", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0025", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT dept_name,\n                COUNT(*) AS n\n         FROM course\n         GROUP BY dept_name)\n      ORDER BY n DESC)\n   LIMIT 3)\n", "sql2": "SELECT dept_name\nFROM course\nGROUP BY dept_name\nORDER BY count(*) DESC\nLIMIT 3", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0072", "sql1": "\nSELECT `name`\nFROM `instructor`\nWHERE (`dept_name` = 'Comp. Sci.'\n       OR salary = 80000.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE dept_name = 'Comp. Sci.'\n  AND salary > 80000", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0044", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT dept_name,\n                id,\n                COUNT(*) AS n\n         FROM student\n         GROUP BY dept_name,\n                  id)\n      ORDER BY id)\n   LIMIT 1)\n", "sql2": "SELECT dept_name\nFROM student\nGROUP BY dept_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0013", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM course AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM prereq AS RHS\n           WHERE (LHS.course_id = RHS.course_id) )))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM course\nWHERE course_id NOT IN\n    (SELECT course_id\n     FROM prereq)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0005", "sql1": "\nSELECT dept_name,\n       building\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM department\n      ORDER BY building DESC)\n   LIMIT 1)\n", "sql2": "SELECT dept_name,\n       building\nFROM department\nORDER BY budget DESC\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0029", "sql1": "\nSELECT dept_name,\n       building\nFROM department\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       building\nFROM department\nORDER BY budget DESC", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0068", "sql1": "\nSELECT `name`,\n       `salary`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM\n           (SELECT `id`,\n                   `name`,\n                   `dept_name`,\n                   `salary`,\n                   AVG(`salary`) OVER () AS `meansalary`\n            FROM `instructor`)\n         WHERE (`dept_name` != 'Physics'\n                OR meansalary < salary))\n      ORDER BY salary)\n   LIMIT 44)\n", "sql2": "SELECT name,\n       salary\nFROM instructor\nWHERE salary <\n    (SELECT avg(salary)\n     FROM instructor\n     WHERE dept_name = 'Physics')", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0069", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`dept_name` AS `dept_name`,\n             `LHS`.`tot_cred` AS `tot_cred`,\n             `RHS`.`course_id` AS `course_id`,\n             `RHS`.`sec_id` AS `sec_id`,\n             `RHS`.`semester` AS `semester`,\n             `RHS`.`year` AS `year`,\n             `RHS`.`grade` AS `grade`\n      FROM `student` AS `LHS`\n      LEFT JOIN `takes` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`)) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `course`\n           WHERE (`dept_name` != 'Statistics')) AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM course AS T1\nJOIN takes AS T2 ON T1.course_id = T2.course_id\nJOIN student AS T3 ON T2.id = T3.id\nWHERE T1.dept_name = 'Statistics'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0028", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM department\n      ORDER BY budget)\n   LIMIT 1)\n", "sql2": "SELECT dept_name\nFROM department\nORDER BY budget\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0004", "sql1": "\nSELECT building,\n       room_number\nFROM classroom\nWHERE (capacity >= 50.0\n       AND capacity <= 100.0)\nORDER BY building\n", "sql2": "SELECT building,\n       room_number\nFROM classroom\nWHERE capacity BETWEEN 50 AND 100", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0012", "sql1": "\nSELECT title,\n       credits,\n       dept_name\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.title AS title,\n          LHS.dept_name AS dept_name,\n          LHS.credits AS credits,\n          RHS.n AS n\n   FROM course AS LHS\n   INNER JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM prereq\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nWHERE (n != 1)\nORDER BY title\n", "sql2": "SELECT T1.title,\n       T1.credits,\n       T1.dept_name\nFROM course AS T1\nJOIN prereq AS T2 ON T1.course_id = T2.course_id\nGROUP BY T2.course_id\nHAVING count(*) > 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0045", "sql1": "\nSELECT n AS count___,\n       dept_name\nFROM\n  (SELECT dept_name,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY dept_name)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_name\nFROM student\nGROUP BY dept_name", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0032", "sql1": "\nSELECT name,\n       dept_name\nFROM student\nORDER BY name\n", "sql2": "SELECT name,\n       dept_name\nFROM student\nORDER BY tot_cred", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0073", "sql1": "\nSELECT name,\n       course_id\nFROM\n  (SELECT LHS.id AS id,\n          LHS.course_id AS course_id,\n          LHS.sec_id AS sec_id,\n          LHS.semester AS semester,\n          LHS.year AS YEAR,\n          RHS.name AS name,\n          RHS.dept_name AS dept_name,\n          RHS.salary AS salary\n   FROM teaches AS LHS\n   INNER JOIN instructor AS RHS ON (LHS.id = RHS.id))\nORDER BY name\n", "sql2": "SELECT name,\n       course_id\nFROM instructor AS T1\nJOIN teaches AS T2 ON T1.ID = T2.ID", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_s_id_\nFROM advisor\nORDER BY count_distinct_s_id_\n", "sql2": "SELECT count(DISTINCT s_id)\nFROM advisor", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0049", "sql1": "\nSELECT course_id\nFROM\n  (SELECT *\n   FROM course AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM prereq AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM course\nEXCEPT\nSELECT course_id\nFROM prereq", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0015", "sql1": "\nSELECT n_distinct AS count__distinct_id_\nFROM\n  (SELECT COUNT(DISTINCT id) AS n_distinct\n   FROM teaches)\nORDER BY count__distinct_id_\n", "sql2": "SELECT COUNT (DISTINCT id)\nFROM teaches", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0003", "sql1": "\nSELECT DISTINCT dept_name_other AS dept_name,\n                building_other AS building\nFROM\n  (SELECT LHS.dept_name AS dept_name,\n          LHS.building AS building,\n          LHS.budget AS budget,\n          LHS.meanbudget AS meanbudget,\n          RHS.dept_name AS dept_name_other,\n          RHS.building AS building_other,\n          RHS.budget AS budget_other,\n          RHS.meanbudget AS meanbudget_other\n   FROM\n     (SELECT dept_name,\n             building,\n             budget,\n             AVG(budget) OVER () AS meanbudget\n      FROM department) AS LHS\n   CROSS JOIN\n     (SELECT dept_name,\n             building,\n             budget,\n             AVG(budget) OVER () AS meanbudget\n      FROM department) AS RHS)\nWHERE (meanbudget = meanbudget_other\n       AND budget_other > meanbudget_other)\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       building\nFROM department\nWHERE budget >\n    (SELECT avg(budget)\n     FROM department)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0081", "sql1": "\nSELECT `n_distinct` AS `count__distinct_id_`\nFROM\n  (SELECT COUNT(DISTINCT `id`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `teaches`\n      WHERE (`semester` != 'Spring'\n             AND YEAR >= 2010.0)))\nORDER BY count__distinct_id_\n", "sql2": "SELECT COUNT (DISTINCT ID)\nFROM teaches\nWHERE semester = 'Spring'\n  AND YEAR = 2010", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0039", "sql1": "\nSELECT sumcredits AS sum_credits_,\n       dept_name\nFROM\n  (SELECT dept_name,\n          SUM(credits) AS sumcredits\n   FROM course\n   GROUP BY dept_name)\nORDER BY sum_credits_\n", "sql2": "SELECT sum(credits),\n       dept_name\nFROM course\nGROUP BY dept_name", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0022", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `course`\n         WHERE (`dept_name` = 'Statistics'\n                AND `dept_name` != 'Psychology'))\n      ORDER BY course_id DESC)\n   LIMIT 4)\n", "sql2": "SELECT title\nFROM course\nWHERE dept_name = 'Statistics'\nEXCEPT\nSELECT title\nFROM course\nWHERE dept_name = 'Psychology'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0059", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM instructor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teaches AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE id NOT IN\n    (SELECT id\n     FROM teaches)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0018", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `building`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `classroom`\n      WHERE (`building` = 'Lamberton'\n             AND capacity <= 50.0))\n   GROUP BY building)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM classroom\nWHERE building = 'Lamberton'\n  AND capacity < 50", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0038", "sql1": "\nSELECT title\nFROM\n  (SELECT title,\n          COUNT(*) AS n\n   FROM course\n   GROUP BY title)\nWHERE (n != 1)\nORDER BY title\n", "sql2": "SELECT title\nFROM course\nGROUP BY title\nHAVING count(*) > 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0080", "sql1": "\nSELECT salary\nFROM\n  (SELECT *\n   FROM instructor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT MAX(salary) AS salary\n           FROM instructor) AS RHS\n        WHERE (LHS.salary = RHS.salary) ))\nORDER BY salary\n", "sql2": "SELECT DISTINCT salary\nFROM instructor\nWHERE salary <\n    (SELECT max(salary)\n     FROM instructor)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0079", "sql1": "\nSELECT `course_id`\nFROM\n  (SELECT *\n   FROM `section`\n   WHERE (`year` = 2009.0\n          AND `year` != 2010.0))\nWHERE (`semester` = 'Fall'\n       OR `semester` != 'Spring')\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM SECTION\nWHERE semester = 'Fall'\n  AND YEAR = 2009\nEXCEPT\nSELECT course_id\nFROM SECTION\nWHERE semester = 'Spring'\n  AND YEAR = 2010", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0002", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `classroom`\n      WHERE (`building` != 'Lamberton')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM classroom\nWHERE building != 'Lamberton'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0014", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM course AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM prereq AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY title\n", "sql2": "SELECT title\nFROM course\nWHERE course_id NOT IN\n    (SELECT course_id\n     FROM prereq)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0001", "sql1": "\nSELECT DISTINCT building\nFROM classroom\nWHERE (capacity > 50.0)\nORDER BY building\n", "sql2": "SELECT DISTINCT building\nFROM classroom\nWHERE capacity > 50", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0060", "sql1": "\nSELECT id\nFROM\n  (SELECT *\n   FROM instructor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teaches AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY id\n", "sql2": "SELECT id\nFROM instructor\nEXCEPT\nSELECT id\nFROM teaches", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0076", "sql1": "\nSELECT name\nFROM instructor\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM instructor\nORDER BY name", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0020", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `instructor`\n         WHERE (`dept_name` = 'Statistics'))\n      ORDER BY salary)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM instructor\nWHERE dept_name = 'Statistics'\nORDER BY salary\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0077", "sql1": "\nSELECT `course_id`\nFROM\n  (SELECT *\n   FROM `section`\n   WHERE (`semester` = 'Fall'\n          OR `year` >= 2010.0))\nWHERE (`semester` = 'Spring'\n       OR YEAR = 2009.0)\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM SECTION\nWHERE semester = 'Fall'\n  AND YEAR = 2009\nUNION\nSELECT course_id\nFROM SECTION\nWHERE semester = 'Spring'\n  AND YEAR = 2010", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0061", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `instructor` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `teaches`\n           WHERE (`semester` = 'Spring')) AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE id NOT IN\n    (SELECT id\n     FROM teaches\n     WHERE semester = 'Spring')", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0036", "sql1": "\nSELECT n AS count___,\n       building\nFROM\n  (SELECT building,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM classroom\n      WHERE (capacity >= 50.0))\n   GROUP BY building)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       building\nFROM classroom\nWHERE capacity > 50\nGROUP BY building", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0041", "sql1": "\nSELECT n AS count___,\n       semester,\n       YEAR\nFROM\n  (SELECT semester,\n          YEAR,\n          COUNT(*) AS n\n   FROM section\n   GROUP BY semester,\n            YEAR)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       semester,\n       YEAR\nFROM SECTION\nGROUP BY semester,\n         YEAR", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0016", "sql1": "\nSELECT `sumbudget` AS `sum_budget_`\nFROM\n  (SELECT SUM(`budget`) AS `sumbudget`\n   FROM\n     (SELECT *\n      FROM `department`\n      WHERE (`dept_name` = 'Marketing'\n             OR `dept_name` = 'Finance')))\nORDER BY sum_budget_\n", "sql2": "SELECT sum(budget)\nFROM department\nWHERE dept_name = 'Marketing'\n  OR dept_name = 'Finance'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0082", "sql1": "\nSELECT dept_name,\n       meansalary AS avg__salary_\nFROM\n  (SELECT dept_name,\n          AVG(salary) AS meansalary\n   FROM instructor\n   GROUP BY dept_name)\nWHERE (meansalary > 42000.0)\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       AVG (salary)\nFROM instructor\nGROUP BY dept_name\nHAVING AVG (salary) > 42000", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0031", "sql1": "\nSELECT id,\n       name,\n       dept_name,\n       salary\nFROM instructor\nORDER BY id\n", "sql2": "SELECT *\nFROM instructor\nORDER BY salary", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0027", "sql1": "\nSELECT title\nFROM course\nORDER BY title\n", "sql2": "SELECT title\nFROM course\nORDER BY title,\n         credits", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0007", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `classroom`\n      WHERE (`building` = 'Lamberton')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM classroom\nWHERE building = 'Lamberton'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0011", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.title AS title,\n          LHS.dept_name AS dept_name,\n          LHS.credits AS credits,\n          RHS.n AS n\n   FROM course AS LHS\n   INNER JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM prereq\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nWHERE (n = 2)\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM course AS T1\nJOIN prereq AS T2 ON T1.course_id = T2.course_id\nGROUP BY T2.course_id\nHAVING count(*) = 2", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0047", "sql1": "\nSELECT `i_id`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`dept_name` AS `dept_name`,\n          `LHS`.`tot_cred` AS `tot_cred`,\n          `RHS`.`i_id` AS `i_id`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`dept_name` = 'History')) AS LHS\n   INNER JOIN advisor AS RHS ON (LHS.id = RHS.s_id))\nORDER BY i_id\n", "sql2": "SELECT i_id\nFROM advisor AS T1\nJOIN student AS T2 ON T1.s_id = T2.id\nWHERE T2.dept_name = 'History'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0010", "sql1": "\nSELECT `n_distinct` AS `count_distinct_course_id_`\nFROM\n  (SELECT `dept_name`,\n          COUNT(DISTINCT `course_id`) AS `n_distinct`\n   FROM `course`\n   GROUP BY `dept_name`)\nWHERE (`dept_name` = 'Physics')\nORDER BY count_distinct_course_id_\n", "sql2": "SELECT count(DISTINCT course_id)\nFROM course\nWHERE dept_name = 'Physics'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0071", "sql1": "\nSELECT `name`\nFROM `instructor`\nWHERE (`dept_name` = 'Comp. Sci.')\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE dept_name = 'Comp. Sci.'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_2/0030", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM instructor\n      ORDER BY salary DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM instructor\nORDER BY salary DESC\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0009", "sql1": "\nSELECT name\nFROM people\nWHERE (height > 200.0\n       OR height <= 190.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM people\nWHERE height > 200\n  OR height < 190", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0005", "sql1": "\nSELECT support_rate,\n       consider_rate,\n       oppose_rate\nFROM candidate\nORDER BY support_rate\n", "sql2": "SELECT Support_rate,\n       Consider_rate,\n       Oppose_rate\nFROM candidate\nORDER BY unsure_rate", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0004", "sql1": "\nSELECT candidate_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM candidate\n      ORDER BY unsure_rate DESC)\n   LIMIT 1)\n", "sql2": "SELECT Candidate_ID\nFROM candidate\nORDER BY oppose_rate\nLIMIT 1", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.sex AS sex,\n          LHS.name AS name,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          RHS.candidate_id AS candidate_id,\n          RHS.poll_source AS poll_source,\n          RHS.date AS date,\n          RHS.support_rate AS support_rate,\n          RHS.consider_rate AS consider_rate,\n          RHS.oppose_rate AS oppose_rate,\n          RHS.unsure_rate AS unsure_rate\n   FROM people AS LHS\n   INNER JOIN candidate AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM people AS t1\nJOIN candidate AS t2 ON t1.people_id = t2.people_id\nWHERE t2.support_rate < t2.oppose_rate", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0003", "sql1": "\nSELECT support_rate\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM candidate\n      ORDER BY support_rate DESC)\n   LIMIT 3)\n", "sql2": "SELECT support_rate\nFROM candidate\nORDER BY support_rate DESC\nLIMIT 3", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0002", "sql1": "\nSELECT DISTINCT poll_source\nFROM\n  (SELECT LHS.candidate_id AS candidate_id,\n          LHS.people_id AS people_id,\n          LHS.poll_source AS poll_source,\n          LHS.date AS date,\n          LHS.support_rate AS support_rate,\n          LHS.consider_rate AS consider_rate,\n          LHS.oppose_rate AS oppose_rate,\n          LHS.unsure_rate AS unsure_rate,\n          RHS.candidate_id AS candidate_id_other,\n          RHS.people_id AS people_id_other,\n          RHS.poll_source AS poll_source_other,\n          RHS.date AS date_other,\n          RHS.consider_rate AS consider_rate_other,\n          RHS.oppose_rate AS oppose_rate_other,\n          RHS.unsure_rate AS unsure_rate_other\n   FROM candidate AS LHS\n   INNER JOIN\n     (SELECT candidate_id,\n             people_id,\n             poll_source, date, support_rate,\n                                consider_rate,\n                                oppose_rate,\n                                unsure_rate,\n                                COUNT(*) OVER () AS n\n      FROM candidate) AS RHS ON (LHS.candidate_id = RHS.n\n                                    AND LHS.support_rate = RHS.support_rate))\nORDER BY poll_source\n", "sql2": "SELECT poll_source\nFROM candidate\nGROUP BY poll_source\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM candidate AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM people\nWHERE people_id NOT IN\n    (SELECT people_id\n     FROM candidate)", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM candidate\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM candidate", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0020", "sql1": "\nSELECT people_id,\n       sex,\n       name,\n       date_of_birth,\n       height,\n       weight\nFROM people\nORDER BY people_id\n", "sql2": "SELECT *\nFROM people", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0007", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT name\nFROM people\nORDER BY date_of_birth", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/candidate_poll/0006", "sql1": "\nSELECT poll_source\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM candidate\n      ORDER BY oppose_rate DESC)\n   LIMIT 1)\n", "sql2": "SELECT poll_source\nFROM candidate\nORDER BY oppose_rate DESC\nLIMIT 1", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employees\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employees;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0025", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_status_code` AS `document_status_code`,\n          `RHS`.`document_type_code` AS `document_type_code`,\n          `RHS`.`receipt_date` AS `receipt_date`,\n          `RHS`.`receipt_number` AS `receipt_number`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `ref_shipping_agents` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_status_code` != 'done'\n             OR `document_type_code` = 'Paper')) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`))\nWHERE (`document_status_code` = 'done'\n       AND `shipping_agent_name` = 'USPS')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_status_code = 'done'\n  AND document_type_code = 'Paper' INTERSECT\n  SELECT document_id\n  FROM Documents\n  JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0033", "sql1": "\nSELECT document_id,\n       n_distinct AS count_distinct_employee_id_\nFROM\n  (SELECT document_id,\n          draft_number,\n          COUNT(DISTINCT employee_id) AS n_distinct\n   FROM circulation_history\n   GROUP BY document_id,\n            draft_number)\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       count(DISTINCT employee_id)\nFROM Circulation_History\nGROUP BY document_id;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0005", "sql1": "\nSELECT shipping_agent_name\nFROM ref_shipping_agents\nORDER BY shipping_agent_name\n", "sql2": "SELECT shipping_agent_name\nFROM Ref_Shipping_Agents;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0029", "sql1": "\nSELECT document_id,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT document_id,\n                COUNT(*) AS n\n         FROM draft_copies\n         GROUP BY document_id)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT document_id,\n       count(*)\nFROM Draft_Copies\nGROUP BY document_id\nHAVING count(*) > 1;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0004", "sql1": "\nSELECT `document_type_description`\nFROM `ref_document_types`\nWHERE (`document_type_code` = 'Paper')\nORDER BY document_type_description\n", "sql2": "SELECT document_type_description\nFROM Ref_Document_Types\nWHERE document_type_code = 'Paper';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0012", "sql1": "\nSELECT DISTINCT role_description,\n                role_code,\n                n AS count___\nFROM\n  (SELECT LHS.role_code AS role_code,\n          LHS.role_description AS role_description,\n          LHS.employee_id AS employee_id,\n          LHS.employee_name AS employee_name,\n          LHS.other_details AS other_details,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.role_code AS role_code,\n             LHS.role_description AS role_description,\n             RHS.employee_id AS employee_id,\n             RHS.employee_name AS employee_name,\n             RHS.other_details AS other_details\n      FROM roles AS LHS\n      INNER JOIN employees AS RHS ON (LHS.role_code = RHS.role_code)) AS LHS\n   INNER JOIN\n     (SELECT role_code,\n             COUNT(*) AS n\n      FROM employees\n      GROUP BY role_code) AS RHS ON (LHS.role_code = RHS.role_code))\nORDER BY role_description\n", "sql2": "SELECT T1.role_description,\n       T2.role_code,\n       count(*)\nFROM ROLES AS T1\nJOIN Employees AS T2 ON T1.role_code = T2.role_code\nGROUP BY T2.role_code;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0032", "sql1": "\nSELECT employee_name,\n       employee_id AS count___\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.employee_name AS employee_name,\n          LHS.n AS n,\n          RHS.draft_number AS draft_number,\n          RHS.copy_number AS copy_number\n   FROM\n     (SELECT employee_id,\n             employee_name,\n             COUNT(*) AS n\n      FROM employees\n      GROUP BY employee_id,\n               employee_name) AS LHS\n   INNER JOIN circulation_history AS RHS ON (LHS.employee_id = RHS.employee_id\n                                                AND LHS.n = RHS.document_id))\nORDER BY employee_name\n", "sql2": "SELECT Employees.employee_name,\n       count(*)\nFROM Employees\nJOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id\nGROUP BY Circulation_History.document_id,\n         Circulation_History.draft_number,\n         Circulation_History.copy_number\nORDER BY count(*) DESC\nLIMIT 1;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0024", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_status_code` AS `document_status_code`,\n          `RHS`.`document_type_code` AS `document_type_code`,\n          `RHS`.`receipt_date` AS `receipt_date`,\n          `RHS`.`receipt_number` AS `receipt_number`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `ref_shipping_agents` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_status_code` = 'done'\n             AND `document_type_code` = 'Paper')) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`))\nWHERE (`document_status_code` != 'done'\n       OR `shipping_agent_name` != 'USPS')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_status_code = 'done'\n  AND document_type_code = 'Paper'\nEXCEPT\nSELECT document_id\nFROM Documents\nJOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code\nWHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0008", "sql1": "\nSELECT `role_description`\nFROM `roles`\nWHERE (`role_code` = 'ED')\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM ROLES\nWHERE role_code = 'ED';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0015", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `document_status_code`,\n          `document_type_code`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_status_code` = 'done'))\n   GROUP BY document_status_code,\n            document_type_code)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents\nWHERE document_status_code = 'done';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0003", "sql1": "\nSELECT document_type_code\nFROM ref_document_types\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Ref_Document_Types;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0019", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n          `LHS`.`document_id` AS `document_id`,\n          `LHS`.`document_status_code` AS `document_status_code`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`receipt_date` AS `receipt_date`,\n          `LHS`.`receipt_number` AS `receipt_number`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n             `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n             `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n             `RHS`.`document_id` AS `document_id`,\n             `RHS`.`document_status_code` AS `document_status_code`,\n             `RHS`.`document_type_code` AS `document_type_code`,\n             `RHS`.`receipt_date` AS `receipt_date`,\n             `RHS`.`receipt_number` AS `receipt_number`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `ref_shipping_agents` AS `LHS`\n      INNER JOIN `documents` AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT `shipping_agent_code`,\n             COUNT(*) AS `n`\n      FROM `documents`\n      GROUP BY `shipping_agent_code`) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`))\nWHERE (`shipping_agent_name` = 'USPS')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_Shipping_Agents\nJOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code\nWHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0023", "sql1": "\nSELECT mailing_date\nFROM documents_mailed\nWHERE (document_id = 7)\nORDER BY mailing_date\n", "sql2": "SELECT mailing_date\nFROM Documents_Mailed\nWHERE document_id = 7;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0022", "sql1": "\nSELECT address_details\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.address_details AS address_details,\n          RHS.document_id AS document_id,\n          RHS.mailing_date AS mailing_date\n   FROM addresses AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM documents_mailed\n      WHERE (document_id = 4)) AS RHS ON (LHS.address_id = RHS.mailed_to_address_id))\nORDER BY address_details\n", "sql2": "SELECT Addresses.address_details\nFROM Addresses\nJOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id\nWHERE document_id = 4;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0018", "sql1": "\nSELECT shipping_agent_name\nFROM\n  (SELECT LHS.shipping_agent_code AS shipping_agent_code,\n          LHS.shipping_agent_name AS shipping_agent_name,\n          LHS.shipping_agent_description AS shipping_agent_description,\n          RHS.document_id AS document_id,\n          RHS.document_status_code AS document_status_code,\n          RHS.document_type_code AS document_type_code,\n          RHS.receipt_date AS receipt_date,\n          RHS.receipt_number AS receipt_number,\n          RHS.other_details AS other_details\n   FROM ref_shipping_agents AS LHS\n   INNER JOIN documents AS RHS ON (LHS.shipping_agent_code = RHS.shipping_agent_code))\nWHERE (document_id = 2)\nORDER BY shipping_agent_name\n", "sql2": "SELECT Ref_Shipping_Agents.shipping_agent_name\nFROM Ref_Shipping_Agents\nJOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code\nWHERE Documents.document_id = 2;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0002", "sql1": "\nSELECT `document_status_description`\nFROM `ref_document_status`\nWHERE (`document_status_code` = 'working')\nORDER BY document_status_description\n", "sql2": "SELECT document_status_description\nFROM Ref_Document_Status\nWHERE document_status_code = 'working';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0001", "sql1": "\nSELECT document_status_code\nFROM ref_document_status\nORDER BY document_status_code\n", "sql2": "SELECT document_status_code\nFROM Ref_Document_Status;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0017", "sql1": "\nSELECT `document_id`\nFROM `documents`\nWHERE (`document_status_code` = 'done'\n       AND `document_type_code` = 'Paper')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_status_code = 'done'\n  AND document_type_code = 'Paper';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0021", "sql1": "\nSELECT receipt_date\nFROM documents\nWHERE (document_id = 3)\nORDER BY receipt_date\n", "sql2": "SELECT receipt_date\nFROM Documents\nWHERE document_id = 3;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0016", "sql1": "\nSELECT document_type_code\nFROM documents\nWHERE (document_id = 2)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Documents\nWHERE document_id = 2;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0031", "sql1": "\nSELECT employee_name\nFROM\n  (SELECT *\n   FROM employees AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM circulation_history AS RHS\n        WHERE (LHS.employee_id = RHS.employee_id) ))\nORDER BY employee_name\n", "sql2": "SELECT employee_name\nFROM Employees\nEXCEPT\nSELECT Employees.employee_name\nFROM Employees\nJOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0027", "sql1": "\nSELECT draft_number AS count___\nFROM\n  (SELECT document_id,\n          draft_number,\n          COUNT(DISTINCT document_id) AS n_distinct\n   FROM\n     (SELECT *\n      FROM draft_copies\n      WHERE (document_id < 2))\n   GROUP BY document_id,\n            draft_number)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Draft_Copies\nWHERE document_id = 2;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0007", "sql1": "\nSELECT role_code\nFROM roles\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM ROLES;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0011", "sql1": "\nSELECT document_id,\n       receipt_date\nFROM documents\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       receipt_date\nFROM Documents;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0010", "sql1": "\nSELECT `role_description`\nFROM\n  (SELECT `LHS`.`role_code` AS `role_code`,\n          `LHS`.`role_description` AS `role_description`,\n          `RHS`.`employee_id` AS `employee_id`,\n          `RHS`.`employee_name` AS `employee_name`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `roles` AS `LHS`\n   INNER JOIN `employees` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`))\nWHERE (`employee_name` = 'Koby')\nORDER BY role_description\n", "sql2": "SELECT T1.role_description\nFROM ROLES AS T1\nJOIN Employees AS T2 ON T1.role_code = T2.role_code\nWHERE T2.employee_name = 'Koby';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0006", "sql1": "\nSELECT `shipping_agent_code`\nFROM `ref_shipping_agents`\nWHERE (`shipping_agent_name` = 'UPS')\nORDER BY shipping_agent_code\n", "sql2": "SELECT shipping_agent_code\nFROM Ref_Shipping_Agents\nWHERE shipping_agent_name = 'UPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0026", "sql1": "\nSELECT draft_details\nFROM document_drafts\nWHERE (document_id = 7)\nORDER BY draft_details\n", "sql2": "SELECT draft_details\nFROM Document_Drafts\nWHERE document_id = 7;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Control_Systems/0030", "sql1": "\nSELECT employee_name_other AS employee_name\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.role_code AS role_code,\n          LHS.employee_name AS employee_name,\n          LHS.other_details AS other_details,\n          RHS.document_id AS document_id,\n          RHS.draft_number AS draft_number,\n          RHS.employee_id AS employee_id_other,\n          RHS.role_code AS role_code_other,\n          RHS.employee_name AS employee_name_other,\n          RHS.other_details AS other_details_other\n   FROM employees AS LHS\n   INNER JOIN\n     (SELECT LHS.document_id AS document_id,\n             LHS.draft_number AS draft_number,\n             LHS.copy_number AS copy_number,\n             LHS.employee_id AS employee_id,\n             RHS.role_code AS role_code,\n             RHS.employee_name AS employee_name,\n             RHS.other_details AS other_details\n      FROM circulation_history AS LHS\n      INNER JOIN employees AS RHS ON (LHS.employee_id = RHS.employee_id)) AS RHS ON (LHS.employee_id = RHS.copy_number))\nORDER BY employee_name\n", "sql2": "SELECT Employees.employee_name\nFROM Employees\nJOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id\nWHERE Circulation_History.document_id = 1;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/wedding/0005", "sql1": "\nSELECT organized_by,\n       name\nFROM church\nWHERE (open_date < 1830\n       OR open_date <= 1840)\nORDER BY organized_by\n", "sql2": "SELECT organized_by,\n       name\nFROM church\nWHERE open_date BETWEEN 1830 AND 1840", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0008", "sql1": "\nSELECT `people_id` AS `count___`\nFROM\n  (SELECT `people_id`,\n          `name`,\n          `country`,\n          `is_male`,\n          `age`,\n          COUNT(*) OVER () AS `n`\n   FROM `people`)\nWHERE (`is_male` != 'F'\n       AND age = 30)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM people\nWHERE is_male = 'F'\n  AND age > 30", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0003", "sql1": "\nSELECT name\nFROM church\nORDER BY name\n", "sql2": "SELECT name\nFROM church\nORDER BY open_date DESC", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0019", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT country,\n       count(*)\nFROM people\nGROUP BY country", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0002", "sql1": "\nSELECT name,\n       open_date,\n       organized_by\nFROM church\nORDER BY name\n", "sql2": "SELECT name,\n       open_date,\n       organized_by\nFROM Church", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM church\n      WHERE (open_date != 1850)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Church\nWHERE Open_Date < 1850", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0017", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT YEAR,\n          COUNT(*) AS n\n   FROM wedding\n   GROUP BY YEAR)\nWHERE (YEAR >= 2016\n       OR n > 2016)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM wedding\nWHERE YEAR = 2016", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0020", "sql1": "\nSELECT female_id AS count__distinct_church_id_\nFROM\n  (SELECT church_id,\n          female_id,\n          COUNT(DISTINCT church_id) AS n_distinct\n   FROM wedding\n   GROUP BY church_id,\n            female_id)\nWHERE (church_id != 2016\n       AND n_distinct = church_id)\nORDER BY count__distinct_church_id_\n", "sql2": "SELECT COUNT (DISTINCT church_id)\nFROM wedding\nWHERE YEAR = 2016", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0007", "sql1": "\nSELECT name,\n       open_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM church\n      ORDER BY church_id DESC)\n   LIMIT 3)\n", "sql2": "SELECT name,\n       open_date\nFROM church\nORDER BY open_date DESC\nLIMIT 3", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wedding/0006", "sql1": "\nSELECT open_date,\n       n AS count___\nFROM\n  (SELECT church_id,\n          open_date,\n          COUNT(*) AS n\n   FROM church\n   GROUP BY church_id,\n            open_date)\nORDER BY open_date\n", "sql2": "SELECT open_date,\n       count(*)\nFROM church\nGROUP BY open_date", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/document_management/0009", "sql1": "\nSELECT DISTINCT document_type_code\nFROM\n  (SELECT document_code,\n          document_structure_code,\n          document_type_code,\n          access_count,\n          document_name,\n          SUM(access_count) OVER () AS sumaccess_count\n   FROM documents)\nWHERE (access_count != 10000\n       OR sumaccess_count < access_count)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nGROUP BY document_type_code\nHAVING sum(access_count) > 10000", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0013", "sql1": "\nSELECT `meanaccess_count` AS `avg_t1_access_count_`\nFROM\n  (SELECT `functional_area_description`,\n          AVG(`access_count`) AS `meanaccess_count`\n   FROM\n     (SELECT `LHS`.`functional_area_code` AS `functional_area_code`,\n             `LHS`.`parent_functional_area_code` AS `parent_functional_area_code`,\n             `LHS`.`functional_area_description` AS `functional_area_description`,\n             `LHS`.`document_code` AS `document_code`,\n             `LHS`.`document_structure_code` AS `document_structure_code`,\n             `LHS`.`document_type_code` AS `document_type_code`,\n             `LHS`.`access_count` AS `access_count`,\n             `LHS`.`document_name` AS `document_name`\n      FROM\n        (SELECT `LHS`.`functional_area_code` AS `functional_area_code`,\n                `LHS`.`parent_functional_area_code` AS `parent_functional_area_code`,\n                `LHS`.`functional_area_description` AS `functional_area_description`,\n                `RHS`.`document_code` AS `document_code`,\n                `RHS`.`document_structure_code` AS `document_structure_code`,\n                `RHS`.`document_type_code` AS `document_type_code`,\n                `RHS`.`access_count` AS `access_count`,\n                `RHS`.`document_name` AS `document_name`\n         FROM `functional_areas` AS `LHS`\n         CROSS JOIN `documents` AS `RHS`) AS `LHS`\n      INNER JOIN `document_functional_areas` AS `RHS` ON (`LHS`.`functional_area_code` = `RHS`.`functional_area_code`\n                                                             AND `LHS`.`document_code` = `RHS`.`document_code`))\n   GROUP BY `functional_area_description`)\nWHERE (`functional_area_description` = 'Acknowledgement')\nORDER BY avg_t1_access_count_\n", "sql2": "SELECT avg(t1.access_count)\nFROM documents AS t1\nJOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code\nJOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code\nWHERE t3.functional_area_description = 'Acknowledgement'", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0005", "sql1": "\nSELECT meanaccess_count AS avg_access_count_\nFROM\n  (SELECT AVG(access_count) AS meanaccess_count\n   FROM documents)\nORDER BY avg_access_count_\n", "sql2": "SELECT avg(access_count)\nFROM documents", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0003", "sql1": "\nSELECT document_type_code\nFROM\n  (SELECT document_type_code,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_type_code)\nWHERE (n > 4)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nGROUP BY document_type_code\nHAVING count(*) > 4", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0022", "sql1": "\nSELECT DISTINCT document_type_code\nFROM\n  (SELECT document_code,\n          document_structure_code,\n          document_type_code,\n          access_count,\n          document_name,\n          COUNT(*) OVER () AS n\n   FROM documents)\nWHERE (n > 2)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nGROUP BY document_type_code\nHAVING count(*) > 2", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0018", "sql1": "\nSELECT role_description\nFROM\n  (SELECT LHS.role_code AS role_code,\n          LHS.role_description AS role_description,\n          LHS.n_distinct AS n_distinct,\n          RHS.user_name AS user_name,\n          RHS.user_login AS user_login,\n          RHS.password AS password\n   FROM\n     (SELECT role_code,\n             role_description,\n             COUNT(DISTINCT role_code) OVER () AS n_distinct\n      FROM roles) AS LHS\n   INNER JOIN users AS RHS ON (LHS.n_distinct = RHS.user_id\n                                  AND LHS.role_code = RHS.role_code))\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM ROLES\nWHERE role_code =\n    (SELECT role_code\n     FROM users\n     WHERE user_login = 1\n     GROUP BY role_code\n     ORDER BY count(*) DESC\n     LIMIT 1)", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0002", "sql1": "\nSELECT document_name,\n       access_count\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM documents\n      ORDER BY access_count DESC)\n   LIMIT 1)\n", "sql2": "SELECT document_name,\n       access_count\nFROM documents\nORDER BY access_count DESC\nLIMIT 1", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0014", "sql1": "\nSELECT document_name\nFROM\n  (SELECT *\n   FROM documents AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT LHS.section_id AS section_id,\n                  LHS.image_id AS image_id,\n                  RHS.document_code AS document_code,\n                  RHS.section_sequence AS section_sequence,\n                  RHS.section_code AS section_code,\n                  RHS.section_title AS section_title\n           FROM document_sections_images AS LHS\n           INNER JOIN document_sections AS RHS ON (LHS.section_id = RHS.section_id)) AS RHS\n        WHERE (LHS.document_code = RHS.document_code) ))\nORDER BY document_name\n", "sql2": "SELECT document_name\nFROM documents\nEXCEPT\nSELECT t1.document_name\nFROM documents AS t1\nJOIN document_sections AS t2 ON t1.document_code = t2.document_code\nJOIN document_sections_images AS t3 ON t2.section_id = t3.section_id", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0001", "sql1": "\nSELECT document_name,\n       access_count\nFROM documents\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       access_count\nFROM documents\nORDER BY document_name", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0017", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM users\nWHERE (user_login = 1)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM users\nWHERE user_login = 1", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0021", "sql1": "\nSELECT n AS count___,\n       role_code\nFROM\n  (SELECT role_code,\n          COUNT(*) AS n\n   FROM users\n   GROUP BY role_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       role_code\nFROM users\nGROUP BY role_code", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0020", "sql1": "\nSELECT image_name,\n       image_url\nFROM images\nORDER BY image_name\n", "sql2": "SELECT image_name,\n       image_url\nFROM images\nORDER BY image_name", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0007", "sql1": "\nSELECT `document_type_code`\nFROM `documents`\nWHERE (`document_name` = 'David CV')\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nWHERE document_name = 'David CV'", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0011", "sql1": "\nSELECT document_name\nFROM\n  (SELECT *\n   FROM documents AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM document_sections AS RHS\n        WHERE (LHS.document_code = RHS.document_code) ))\nORDER BY document_name\n", "sql2": "SELECT document_name\nFROM documents\nWHERE document_code NOT IN\n    (SELECT document_code\n     FROM document_sections)", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/document_management/0010", "sql1": "\nSELECT `section_title`\nFROM\n  (SELECT *\n   FROM `document_sections` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` = 'David CV')) AS RHS\n        WHERE (LHS.document_code = RHS.document_code) ))\nORDER BY section_title\n", "sql2": "SELECT t2.section_title\nFROM documents AS t1\nJOIN document_sections AS t2 ON t1.document_code = t2.document_code\nWHERE t1.document_name = 'David CV'", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0009", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT credit_score,\n          cust_name,\n          SUM(amount) AS sumamount\n   FROM\n     (SELECT LHS.loan_id AS loan_id,\n             LHS.loan_type AS loan_type,\n             LHS.cust_id AS cust_id,\n             LHS.branch_id AS branch_id,\n             LHS.amount AS amount,\n             RHS.cust_name AS cust_name,\n             RHS.acc_type AS acc_type,\n             RHS.acc_bal AS acc_bal,\n             RHS.no_of_loans AS no_of_loans,\n             RHS.credit_score AS credit_score,\n             RHS.branch_id AS branch_id_other,\n             RHS.state AS state\n      FROM loan AS LHS\n      INNER JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id))\n   GROUP BY credit_score,\n            cust_name)\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nGROUP BY T1.cust_name\nORDER BY sum(T2.amount)", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0013", "sql1": "\nSELECT n_distinct AS count_distinct_acc_type_\nFROM\n  (SELECT COUNT(DISTINCT acc_type) AS n_distinct\n   FROM customer)\nORDER BY count_distinct_acc_type_\n", "sql2": "SELECT count(DISTINCT acc_type)\nFROM customer", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0005", "sql1": "\nSELECT meanno_of_customers AS avg_no_of_customers_\nFROM\n  (SELECT AVG(no_of_customers) AS meanno_of_customers\n   FROM bank)\nORDER BY avg_no_of_customers_\n", "sql2": "SELECT avg(no_of_customers)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0029", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state\n   FROM customer AS LHS\n   INNER JOIN\n     (SELECT cust_id,\n             COUNT(*) AS n\n      FROM loan\n      GROUP BY cust_id) AS RHS ON (LHS.branch_id = RHS.n\n                                   AND LHS.cust_id = RHS.cust_id))\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nGROUP BY T1.cust_name\nHAVING count(*) > 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0004", "sql1": "\nSELECT `no_of_customers` AS `avg_no_of_customers_`\nFROM\n  (SELECT `branch_id`,\n          `bname`,\n          `no_of_customers`,\n          `city`,\n          `state`,\n          AVG(`no_of_customers`) OVER () AS `meanno_of_customers`\n   FROM `bank`)\nWHERE (`state` = 'Utah')\nORDER BY avg_no_of_customers_\n", "sql2": "SELECT avg(no_of_customers)\nFROM bank\nWHERE state = 'Utah'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0012", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT state) OVER () AS count_distinct_state_\nFROM bank\nORDER BY count_distinct_state_\n", "sql2": "SELECT count(DISTINCT state)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0008", "sql1": "\nSELECT cust_name\nFROM customer\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nORDER BY acc_bal", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0015", "sql1": "\nSELECT DISTINCT SUM(`acc_bal`) OVER () AS `sum_acc_bal_`\nFROM `customer`\nWHERE (`state` = 'Utah'\n       OR `state` = 'Texas')\nORDER BY sum_acc_bal_\n", "sql2": "SELECT sum(acc_bal)\nFROM customer\nWHERE state = 'Utah'\n  OR state = 'Texas'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0003", "sql1": "\nSELECT DISTINCT SUM(`no_of_customers`) OVER () AS `sum_no_of_customers_`\nFROM `bank`\nWHERE (`city` = 'New York City')\nORDER BY sum_no_of_customers_\n", "sql2": "SELECT sum(no_of_customers)\nFROM bank\nWHERE city = 'New York City'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0019", "sql1": "\nSELECT `cust_name`\nFROM\n  (SELECT `cust_id`,\n          `cust_name`,\n          `acc_type`,\n          `acc_bal`,\n          `no_of_loans`,\n          `credit_score`,\n          `branch_id`,\n          `state`,\n          `loan_type`,\n          `cust_id_other`,\n          `branch_id_other`,\n          `amount`,\n          `cust_id` AS `loan_id`\n   FROM\n     (SELECT `LHS`.`cust_id` AS `cust_id`,\n             `LHS`.`cust_name` AS `cust_name`,\n             `LHS`.`acc_type` AS `acc_type`,\n             `LHS`.`acc_bal` AS `acc_bal`,\n             `LHS`.`no_of_loans` AS `no_of_loans`,\n             `LHS`.`credit_score` AS `credit_score`,\n             `LHS`.`branch_id` AS `branch_id`,\n             `LHS`.`state` AS `state`,\n             `RHS`.`loan_type` AS `loan_type`,\n             `RHS`.`cust_id` AS `cust_id_other`,\n             `RHS`.`branch_id` AS `branch_id_other`,\n             `RHS`.`amount` AS `amount`\n      FROM `customer` AS `LHS`\n      INNER JOIN `loan` AS `RHS` ON (`LHS`.`cust_id` = `RHS`.`loan_id`)))\nWHERE (`loan_type` = 'Mortgages'\n       AND `loan_type` != 'Auto')\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nWHERE loan_type = 'Mortgages' INTERSECT\n  SELECT T1.cust_name\n  FROM customer AS T1\n  JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0023", "sql1": "\nSELECT cust_name,\n       acc_type,\n       acc_bal\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM customer\n      ORDER BY cust_name DESC)\n   LIMIT 1)\n", "sql2": "SELECT cust_name,\n       acc_type,\n       acc_bal\nFROM customer\nORDER BY credit_score DESC\nLIMIT 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0035", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT LHS.loan_id AS loan_id,\n          LHS.loan_type AS loan_type,\n          LHS.cust_id AS cust_id,\n          LHS.branch_id AS branch_id,\n          LHS.amount AS amount,\n          RHS.cust_name AS cust_name,\n          RHS.acc_type AS acc_type,\n          RHS.acc_bal AS acc_bal,\n          RHS.no_of_loans AS no_of_loans,\n          RHS.credit_score AS credit_score,\n          RHS.branch_id AS branch_id_other,\n          RHS.state AS state\n   FROM loan AS LHS\n   INNER JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id))\nWHERE (amount > 3000)\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nWHERE amount > 3000", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0034", "sql1": "\nSELECT DISTINCT cust_name,\n                credit_score\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state,\n          RHS.loan_id AS loan_id,\n          RHS.loan_type AS loan_type,\n          RHS.branch_id AS branch_id_other,\n          RHS.amount AS amount\n   FROM customer AS LHS\n   INNER JOIN loan AS RHS ON (LHS.cust_id = RHS.cust_id))\nORDER BY cust_name\n", "sql2": "SELECT DISTINCT T1.cust_name,\n                T1.credit_score\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0022", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM customer\n      ORDER BY acc_type)\n   LIMIT 1)\n", "sql2": "SELECT cust_name\nFROM customer\nORDER BY credit_score\nLIMIT 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0018", "sql1": "\nSELECT `cust_name`\nFROM\n  (SELECT `cust_id`,\n          `cust_name`,\n          `acc_type`,\n          `acc_bal`,\n          `no_of_loans`,\n          `credit_score`,\n          `branch_id`,\n          `state`,\n          `loan_type`,\n          `cust_id_other`,\n          `branch_id_other`,\n          `amount`,\n          `cust_id` AS `loan_id`\n   FROM\n     (SELECT `LHS`.`cust_id` AS `cust_id`,\n             `LHS`.`cust_name` AS `cust_name`,\n             `LHS`.`acc_type` AS `acc_type`,\n             `LHS`.`acc_bal` AS `acc_bal`,\n             `LHS`.`no_of_loans` AS `no_of_loans`,\n             `LHS`.`credit_score` AS `credit_score`,\n             `LHS`.`branch_id` AS `branch_id`,\n             `LHS`.`state` AS `state`,\n             `RHS`.`loan_type` AS `loan_type`,\n             `RHS`.`cust_id` AS `cust_id_other`,\n             `RHS`.`branch_id` AS `branch_id_other`,\n             `RHS`.`amount` AS `amount`\n      FROM `customer` AS `LHS`\n      INNER JOIN `loan` AS `RHS` ON (`LHS`.`cust_id` = `RHS`.`loan_id`)))\nWHERE (`loan_type` != 'Mortgages')\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nEXCEPT\nSELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nWHERE T2.loan_type = 'Mortgages'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0002", "sql1": "\nSELECT sumno_of_customers AS sum_no_of_customers_\nFROM\n  (SELECT SUM(no_of_customers) AS sumno_of_customers\n   FROM bank)\nORDER BY sum_no_of_customers_\n", "sql2": "SELECT sum(no_of_customers)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM bank\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0017", "sql1": "\nSELECT `cust_name`\nFROM `customer`\nWHERE (`acc_type` != 'saving')\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nEXCEPT\nSELECT cust_name\nFROM customer\nWHERE acc_type = 'saving'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0021", "sql1": "\nSELECT bname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM bank\n      ORDER BY no_of_customers DESC)\n   LIMIT 1)\n", "sql2": "SELECT bname\nFROM bank\nORDER BY no_of_customers DESC\nLIMIT 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0020", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT credit_score,\n          cust_name,\n          AVG(credit_score) AS meancredit_score\n   FROM\n     (SELECT cust_id,\n             cust_name,\n             acc_type,\n             acc_bal,\n             no_of_loans,\n             credit_score,\n             no_of_loans AS branch_id,\n             state,\n             cust_id_other,\n             cust_name_other,\n             acc_type_other,\n             acc_bal_other,\n             no_of_loans_other,\n             credit_score_other\n      FROM\n        (SELECT LHS.cust_id AS cust_id,\n                LHS.cust_name AS cust_name,\n                LHS.acc_type AS acc_type,\n                LHS.acc_bal AS acc_bal,\n                LHS.no_of_loans AS no_of_loans,\n                LHS.credit_score AS credit_score,\n                LHS.branch_id AS branch_id,\n                LHS.state AS state,\n                RHS.cust_id AS cust_id_other,\n                RHS.cust_name AS cust_name_other,\n                RHS.acc_type AS acc_type_other,\n                RHS.acc_bal AS acc_bal_other,\n                RHS.no_of_loans AS no_of_loans_other,\n                RHS.credit_score AS credit_score_other\n         FROM customer AS LHS\n         INNER JOIN customer AS RHS ON (LHS.no_of_loans = RHS.branch_id\n                                           AND LHS.state = RHS.state)))\n   GROUP BY credit_score,\n            cust_name)\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nWHERE credit_score <\n    (SELECT avg(credit_score)\n     FROM customer)", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0027", "sql1": "\nSELECT acc_bal AS sum_acc_bal_,\n       state\nFROM customer\nWHERE (credit_score >= 100\n       OR credit_score >= acc_bal)\nORDER BY sum_acc_bal_\n", "sql2": "SELECT sum(acc_bal),\n       state\nFROM customer\nWHERE credit_score > 100\nGROUP BY state", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0007", "sql1": "\nSELECT `bname`\nFROM `bank`\nWHERE (`state` = 'New York')\nORDER BY bname\n", "sql2": "SELECT bname\nFROM bank\nWHERE state = 'New York'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0011", "sql1": "\nSELECT n_distinct AS count_distinct_city_\nFROM\n  (SELECT COUNT(DISTINCT city) AS n_distinct\n   FROM bank)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0010", "sql1": "\nSELECT state,\n       acc_type,\n       credit_score\nFROM customer\nWHERE (no_of_loans <= 0)\nORDER BY state\n", "sql2": "SELECT state,\n       acc_type,\n       credit_score\nFROM customer\nWHERE no_of_loans = 0", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0006", "sql1": "\nSELECT `city`,\n       `state`\nFROM `bank`\nWHERE (`bname` = 'morningside')\nORDER BY city\n", "sql2": "SELECT city,\n       state\nFROM bank\nWHERE bname = 'morningside'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0026", "sql1": "\nSELECT meanacc_bal AS avg_acc_bal_,\n       acc_type\nFROM\n  (SELECT acc_type,\n          state,\n          AVG(acc_bal) AS meanacc_bal\n   FROM\n     (SELECT *\n      FROM customer\n      WHERE (acc_bal > 50\n             AND credit_score <= 50))\n   GROUP BY acc_type,\n            state)\nORDER BY avg_acc_bal_\n", "sql2": "SELECT avg(acc_bal),\n       acc_type\nFROM customer\nWHERE credit_score < 50\nGROUP BY acc_type", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/loan_1/0030", "sql1": "\nSELECT cust_name,\n       acc_type\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state,\n          RHS.sumamount AS sumamount\n   FROM customer AS LHS\n   INNER JOIN\n     (SELECT cust_id,\n             SUM(amount) AS sumamount\n      FROM loan\n      WHERE (amount != 5000)\n      GROUP BY cust_id) AS RHS ON (LHS.cust_id = RHS.cust_id))\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name,\n       T1.acc_type\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nGROUP BY T1.cust_name\nHAVING sum(T2.amount) > 5000", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0009", "sql1": "\nSELECT name,\n       LOCATION\nFROM\n  (SELECT LHS.railway_id AS railway_id,\n          LHS.railway AS railway,\n          LHS.builder AS builder,\n          LHS.built AS built,\n          LHS.wheels AS wheels,\n          LHS.location AS LOCATION,\n          LHS.objectnumber AS objectnumber,\n          RHS.train_id AS train_id,\n          RHS.train_num AS train_num,\n          RHS.name AS name,\n          RHS.\n   FROM AS\n   FROM,\n           RHS.arrival AS arrival\n   FROM railway AS LHS\n   INNER JOIN train AS RHS ON (LHS.railway_id = RHS.railway_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.Location\nFROM railway AS T1\nJOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0013", "sql1": "\nSELECT builder,\n       n AS count___\nFROM\n  (SELECT builder,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY builder)\nORDER BY builder\n", "sql2": "SELECT Builder,\n       COUNT(*)\nFROM railway\nGROUP BY Builder", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0005", "sql1": "\nSELECT DISTINCT AVG(age) OVER () AS avg_age_\nFROM manager\nORDER BY avg_age_\n", "sql2": "SELECT avg(Age)\nFROM manager", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0004", "sql1": "\nSELECT LEVEL AS max_level_\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LEVEL,\n                manager_id,\n                MAX(country) AS country\n         FROM manager\n         GROUP BY LEVEL,\n                  manager_id)\n      ORDER BY country)\n   LIMIT 1)\n", "sql2": "SELECT max(LEVEL)\nFROM manager\nWHERE Country != 'Australia '", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM manager\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM manager\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0015", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       COUNT(*)\nFROM railway\nGROUP BY LOCATION", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0003", "sql1": "\nSELECT wheels,\n       LOCATION\nFROM railway\nORDER BY wheels\n", "sql2": "SELECT Wheels,\n       LOCATION\nFROM railway", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0019", "sql1": "\nSELECT DISTINCT country\nFROM manager\nORDER BY country\n", "sql2": "SELECT DISTINCT Country\nFROM manager", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0018", "sql1": "\nSELECT DISTINCT country\nFROM manager\nWHERE (age < 50\n       AND age <= 46)\nORDER BY country\n", "sql2": "SELECT Country\nFROM manager\nWHERE Age > 50 INTERSECT\n  SELECT Country\n  FROM manager WHERE Age < 46", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0002", "sql1": "\nSELECT builder\nFROM railway\nORDER BY builder\n", "sql2": "SELECT Builder\nFROM railway\nORDER BY Builder ASC", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0014", "sql1": "\nSELECT builder\nFROM\n  (SELECT builder,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY builder)\nWHERE (n != 1)\nORDER BY builder\n", "sql2": "SELECT Builder\nFROM railway\nGROUP BY Builder\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM railway)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM railway", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0017", "sql1": "\nSELECT objectnumber\nFROM\n  (SELECT *\n   FROM railway AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM train AS RHS\n        WHERE (LHS.railway_id = RHS.railway_id) ))\nORDER BY objectnumber\n", "sql2": "SELECT ObjectNumber\nFROM railway\nWHERE Railway_ID NOT IN\n    (SELECT Railway_ID\n     FROM train)", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0021", "sql1": "\nSELECT country\nFROM manager\nWHERE (age > 50\n       OR age < 46)\nORDER BY country\n", "sql2": "SELECT Country\nFROM manager\nWHERE Age > 50\n  OR Age < 46", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0020", "sql1": "\nSELECT working_year_starts\nFROM manager\nORDER BY working_year_starts\n", "sql2": "SELECT Working_year_starts\nFROM manager\nORDER BY LEVEL DESC", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0016", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY LOCATION)\nWHERE (n > 1)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM railway\nGROUP BY LOCATION\nHAVING COUNT(*) > 1", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0007", "sql1": "\nSELECT name,\n       arrival\nFROM train\nORDER BY name\n", "sql2": "SELECT Name,\n       Arrival\nFROM train", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0010", "sql1": "\nSELECT `builder`\nFROM\n  (SELECT `LHS`.`train_id` AS `train_id`,\n          `LHS`.`train_num` AS `train_num`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`from` AS `from`,\n          `LHS`.`arrival` AS `arrival`,\n          `LHS`.`railway_id` AS `railway_id`,\n          `RHS`.`railway` AS `railway`,\n          `RHS`.`builder` AS `builder`,\n          `RHS`.`built` AS `built`,\n          `RHS`.`wheels` AS `wheels`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`objectnumber` AS `objectnumber`\n   FROM\n     (SELECT *\n      FROM `train`\n      WHERE (`name` = 'Andaman Exp')) AS LHS\n   LEFT JOIN railway AS RHS ON (LHS.railway_id = RHS.railway_id))\nORDER BY builder\n", "sql2": "SELECT T1.Builder\nFROM railway AS T1\nJOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID\nWHERE T2.Name = 'Andaman Exp'", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/railway/0006", "sql1": "\nSELECT name\nFROM manager\nORDER BY name\n", "sql2": "SELECT Name\nFROM manager\nORDER BY LEVEL ASC", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0009", "sql1": "\nSELECT DISTINCT MAX(stars) OVER () AS max_stars_,\n                                minstars AS min_stars_\nFROM\n  (SELECT rid,\n          mid,\n          stars,\n          ratingdate,\n          MIN(stars) OVER () AS minstars\n   FROM rating)\nORDER BY max_stars_\n", "sql2": "SELECT max(stars),\n       min(stars)\nFROM Rating", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0044", "sql1": "\nSELECT DISTINCT rid\nFROM\n  (SELECT *\n   FROM rating AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM rating\n           WHERE (stars = 4)) AS RHS\n        WHERE (LHS.rid = RHS.rid) ))\nORDER BY rid\n", "sql2": "SELECT rID\nFROM Rating\nEXCEPT\nSELECT rID\nFROM Rating\nWHERE stars = 4", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0013", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM movie AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM rating AS RHS\n        WHERE (LHS.mid = RHS.mid) ))\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE mID NOT IN\n    (SELECT mID\n     FROM Rating)", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0005", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM reviewer\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Reviewer", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0029", "sql1": "\nSELECT director\nFROM\n  (SELECT director,\n          COUNT(*) AS n\n   FROM movie\n   GROUP BY director)\nWHERE (n <= 1)\nORDER BY director\n", "sql2": "SELECT director\nFROM Movie\nGROUP BY director\nHAVING count(*) = 1", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0028", "sql1": "\nSELECT title,\n       YEAR\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM movie\n      ORDER BY YEAR DESC)\n   LIMIT 4)\n", "sql2": "SELECT T1.title,\n       T1.year\nFROM Movie AS T1\nJOIN Movie AS T2 ON T1.director = T2.director\nWHERE T1.title != T2.title", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0004", "sql1": "\nSELECT `director`\nFROM `movie`\nWHERE (`title` = 'Avatar')\nORDER BY director\n", "sql2": "SELECT director\nFROM Movie\nWHERE title = 'Avatar'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0012", "sql1": "\nSELECT name,\n       meanstars AS avg_t1_stars_\nFROM\n  (SELECT LHS.rid AS rid,\n          LHS.name AS name,\n          RHS.meanstars AS meanstars\n   FROM reviewer AS LHS\n   INNER JOIN\n     (SELECT rid,\n             AVG(stars) AS meanstars\n      FROM rating\n      GROUP BY rid) AS RHS ON (LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       avg(T1.stars)\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nGROUP BY T2.name", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0045", "sql1": "\nSELECT rid\nFROM rating\nWHERE (stars != 4)\nORDER BY rid\n", "sql2": "SELECT rID\nFROM Rating\nWHERE stars != 4", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0008", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM rating\n      WHERE (stars > 3)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Rating\nWHERE stars > 3", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0042", "sql1": "\nSELECT `mid`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `rating` AS `LHS`\n         WHERE NOT EXISTS\n             (SELECT 1\n              FROM\n                (SELECT *\n                 FROM `reviewer`\n                 WHERE (`name` = 'Brittany Harris')) AS RHS\n              WHERE (LHS.rid = RHS.rid) ))\n      ORDER BY ratingdate)\n   LIMIT 4)\n", "sql2": "SELECT mID\nFROM Rating\nEXCEPT\nSELECT T1.mID\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nWHERE T2.name = 'Brittany Harris'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0003", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT YEAR) AS n_distinct\n   FROM\n     (SELECT *\n      FROM movie\n      WHERE (YEAR < 2000)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Movie\nWHERE YEAR < 2000", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0039", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.rid AS rid,\n          RHS.stars AS stars,\n          RHS.ratingdate AS ratingdate\n   FROM movie AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM rating\n      WHERE (stars >= 3\n             OR stars >= 5)) AS RHS ON (LHS.mid = RHS.mid))\nORDER BY title\n", "sql2": "SELECT T2.title\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nWHERE T1.stars BETWEEN 3 AND 5", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0023", "sql1": "\nSELECT DISTINCT `director`\nFROM\n  (SELECT `LHS`.`mid` AS `mid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`director` AS `director`,\n          `LHS`.`rid` AS `rid`,\n          `LHS`.`stars` AS `stars`,\n          `LHS`.`ratingdate` AS `ratingdate`,\n          `RHS`.`name` AS `name`\n   FROM\n     (SELECT `LHS`.`mid` AS `mid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`director` AS `director`,\n             `RHS`.`rid` AS `rid`,\n             `RHS`.`stars` AS `stars`,\n             `RHS`.`ratingdate` AS `ratingdate`\n      FROM `movie` AS `LHS`\n      INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `reviewer`\n      WHERE (`name` = 'Sarah Martinez')) AS RHS ON (LHS.rid = RHS.rid))\nORDER BY director\n", "sql2": "SELECT DISTINCT T2.director\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T3.name = 'Sarah Martinez'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0022", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`mid` AS `mid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`director` AS `director`,\n          `LHS`.`rid` AS `rid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`stars` AS `stars`,\n          `RHS`.`ratingdate` AS `ratingdate`\n   FROM\n     (SELECT `LHS`.`mid` AS `mid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`director` AS `director`,\n             `RHS`.`rid` AS `rid`,\n             `RHS`.`name` AS `name`\n      FROM `movie` AS `LHS`\n      CROSS JOIN `reviewer` AS `RHS`) AS `LHS`\n   INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`\n                                       AND `LHS`.`rid` = `RHS`.`rid`))\nWHERE (`title` = 'Gone with the Wind')\nORDER BY name\n", "sql2": "SELECT DISTINCT T3.name\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T2.title = 'Gone with the Wind'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0018", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`director` AS `director`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`maxyear` AS `maxyear`,\n          `RHS`.`mid` AS `mid`,\n          `RHS`.`title` AS `title`,\n          `RHS`.`year` AS `year_other`,\n          `RHS`.`director` AS `director_other`\n   FROM\n     (SELECT `director`,\n             `year`,\n             MAX(`year`) AS `maxyear`\n      FROM `movie`\n      WHERE (`director` != 'Steven Spielberg')\n      GROUP BY director,\n               YEAR) AS LHS\n   CROSS JOIN movie AS RHS)\nWHERE (maxyear != year_other\n       AND director = director_other)\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE YEAR >\n    (SELECT max(YEAR)\n     FROM Movie\n     WHERE director = 'Steven Spielberg')", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0002", "sql1": "\nSELECT `title`\nFROM `movie`\nWHERE (`director` = 'James Cameron'\n       AND YEAR >= 2000)\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE director = 'James Cameron'\n  AND YEAR > 2000", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0043", "sql1": "\nSELECT mid,\n       meanstars AS avg_stars_\nFROM\n  (SELECT mid,\n          meanstars,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT mid,\n             AVG(stars) AS meanstars\n      FROM rating\n      GROUP BY mid))\nWHERE (meanstars >= 2.0\n       AND meanstars <= n)\nORDER BY mid\n", "sql2": "SELECT mID,\n       avg(stars)\nFROM Rating\nGROUP BY mID\nHAVING count(*) >= 2", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0001", "sql1": "\nSELECT `title`\nFROM `movie`\nWHERE (`director` = 'Steven Spielberg')\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE director = 'Steven Spielberg'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0040", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.rid AS rid,\n          LHS.mid AS mid,\n          LHS.stars AS stars,\n          LHS.ratingdate AS ratingdate,\n          RHS.name AS name\n   FROM\n     (SELECT *\n      FROM rating\n      WHERE (stars > 3)) AS LHS\n   LEFT JOIN reviewer AS RHS ON (LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nWHERE T1.stars > 3", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0021", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.rid AS rid,\n          LHS.name AS name,\n          RHS.n AS n\n   FROM reviewer AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT rid,\n                COUNT(*) AS n\n         FROM rating\n         GROUP BY rid)\n      WHERE (n = 3)) AS RHS ON (LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nGROUP BY T1.rID\nHAVING COUNT(*) >= 3", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0016", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.mid AS mid_other,\n          RHS.director AS director_other\n   FROM\n     (SELECT mid,\n             title,\n             MAX(YEAR) OVER () AS YEAR,\n                            director\n      FROM movie) AS LHS\n   INNER JOIN movie AS RHS ON (LHS.title = RHS.title\n                                  AND LHS.year = RHS.year))\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE YEAR =\n    (SELECT max(YEAR)\n     FROM Movie)", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0007", "sql1": "\nSELECT `rid`\nFROM `reviewer`\nWHERE (`name` = 'Daniel Lewis')\nORDER BY rid\n", "sql2": "SELECT rID\nFROM Reviewer\nWHERE name = 'Daniel Lewis'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0011", "sql1": "\nSELECT director,\n       title\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.rid AS rid,\n          RHS.stars AS stars,\n          RHS.ratingdate AS ratingdate\n   FROM movie AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM rating\n      WHERE (stars = 5)) AS RHS ON (LHS.mid = RHS.mid))\nORDER BY director\n", "sql2": "SELECT T1.director,\n       T1.title\nFROM Movie AS T1\nJOIN Rating AS T2 ON T1.mID = T2.mID\nWHERE T2.stars = 5", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0046", "sql1": "\nSELECT DISTINCT `title`\nFROM\n  (SELECT `LHS`.`mid` AS `mid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`director` AS `director`,\n          `LHS`.`rid` AS `rid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`stars` AS `stars`,\n          `RHS`.`ratingdate` AS `ratingdate`\n   FROM\n     (SELECT `LHS`.`mid` AS `mid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`director` AS `director`,\n             `RHS`.`rid` AS `rid`,\n             `RHS`.`name` AS `name`\n      FROM `movie` AS `LHS`\n      CROSS JOIN `reviewer` AS `RHS`) AS `LHS`\n   INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`\n                                       AND `LHS`.`rid` = `RHS`.`rid`))\nWHERE (`name` = 'Brittany Harris'\n       OR YEAR > 2000)\nORDER BY title\n", "sql2": "SELECT DISTINCT T2.title\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T3.name = 'Brittany Harris'\n  OR T2.year > 2000", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0047", "sql1": "\nSELECT `title`\nFROM `movie`\nWHERE (`director` = 'James Cameron'\n       OR YEAR <= 1980)\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE director = 'James Cameron'\n  OR YEAR < 1980", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0026", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM `movie` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `LHS`.`rid` AS `rid`,\n                     `LHS`.`mid` AS `mid`,\n                     `LHS`.`stars` AS `stars`,\n                     `LHS`.`ratingdate` AS `ratingdate`,\n                     `RHS`.`name` AS `name`\n              FROM `rating` AS `LHS`\n              LEFT JOIN `reviewer` AS `RHS` ON (`LHS`.`rid` = `RHS`.`rid`))\n           WHERE (`name` = 'Chris Jackson')) AS RHS\n        WHERE (LHS.mid = RHS.mid) ))\nORDER BY title\n", "sql2": "SELECT DISTINCT title\nFROM Movie\nEXCEPT\nSELECT T2.title\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T3.name = 'Chris Jackson'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/movie_1/0030", "sql1": "\nSELECT director\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.director AS director_other,\n          RHS.n AS n\n   FROM movie AS LHS\n   CROSS JOIN\n     (SELECT *\n      FROM\n        (SELECT director,\n                COUNT(*) AS n\n         FROM movie\n         GROUP BY director)\n      WHERE (n <= 1)) AS RHS)\nWHERE (director = director_other)\nORDER BY director\n", "sql2": "SELECT director\nFROM Movie\nWHERE director != 'null'\nGROUP BY director\nHAVING count(*) = 1", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0013", "sql1": "\nSELECT `company_id` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`iata` AS `iata`,\n          `LHS`.`icao` AS `icao`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n          `LHS`.`date` AS `date`,\n          `LHS`.`pilot` AS `pilot`,\n          `LHS`.`velocity` AS `velocity`,\n          `LHS`.`altitude` AS `altitude`,\n          `LHS`.`airport_id` AS `airport_id`,\n          `LHS`.`company_id` AS `company_id`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`iata` AS `iata`,\n             `LHS`.`icao` AS `icao`,\n             `LHS`.`name` AS `name`,\n             `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n             `RHS`.`date` AS `date`,\n             `RHS`.`pilot` AS `pilot`,\n             `RHS`.`velocity` AS `velocity`,\n             `RHS`.`altitude` AS `altitude`,\n             `RHS`.`airport_id` AS `airport_id`,\n             `RHS`.`company_id` AS `company_id`\n      FROM `airport` AS `LHS`\n      INNER JOIN `flight` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`)) AS `LHS`\n   INNER JOIN\n     (SELECT `airport_id`,\n             COUNT(*) AS `n`\n      FROM `flight`\n      GROUP BY `airport_id`) AS `RHS` ON (`LHS`.`airport_id` = `RHS`.`airport_id`))\nWHERE (`pilot` = 'Thompson'\n       AND n > id)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airport\nWHERE id NOT IN\n    (SELECT airport_id\n     FROM flight\n     WHERE pilot = 'Thompson' );", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0005", "sql1": "\nSELECT DISTINCT AVG(`velocity`) OVER () AS `avg_velocity_`\nFROM `flight`\nWHERE (`pilot` = 'Thompson')\nORDER BY avg_velocity_\n", "sql2": "SELECT avg(velocity)\nFROM flight\nWHERE pilot = 'Thompson'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0004", "sql1": "\nSELECT maxgroup_equity_shareholding AS max_group_equity_shareholding_\nFROM\n  (SELECT MAX(group_equity_shareholding) AS maxgroup_equity_shareholding\n   FROM operate_company)\nORDER BY max_group_equity_shareholding_\n", "sql2": "SELECT max(group_equity_shareholding)\nFROM operate_company", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0008", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT *\n   FROM operate_company AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM flight\n           WHERE (velocity != 200.0)) AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY TYPE\n", "sql2": "SELECT DISTINCT T1.type\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id\nWHERE T2.velocity < 200", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0003", "sql1": "\nSELECT id,\n       country,\n       city,\n       name\nFROM airport\nORDER BY id\n", "sql2": "SELECT id,\n       country,\n       city,\n       name\nFROM airport\nORDER BY name", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0019", "sql1": "\nSELECT DISTINCT pilot\nFROM\n  (SELECT airport_id,\n          velocity,\n          n,\n          vehicle_flight_number, date, pilot,\n                                       velocity_other,\n                                       altitude,\n                                       company_id,\n                                       airport_id AS id\n   FROM\n     (SELECT LHS.airport_id AS airport_id,\n             LHS.velocity AS velocity,\n             LHS.n AS n,\n             RHS.vehicle_flight_number AS vehicle_flight_number,\n             RHS.date AS date,\n             RHS.pilot AS pilot,\n             RHS.velocity AS velocity_other,\n             RHS.altitude AS altitude,\n             RHS.company_id AS company_id\n      FROM\n        (SELECT airport_id,\n                velocity,\n                COUNT(*) AS n\n         FROM flight\n         GROUP BY airport_id,\n                  velocity) AS LHS\n      INNER JOIN flight AS RHS ON (LHS.airport_id = RHS.id\n                                      AND LHS.n = RHS.airport_id)))\nORDER BY pilot\n", "sql2": "SELECT pilot\nFROM flight\nGROUP BY pilot\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0018", "sql1": "\nSELECT country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM airport\n   GROUP BY country)\nWHERE (n >= 2)\nORDER BY country\n", "sql2": "SELECT country\nFROM airport\nGROUP BY country\nHAVING count(*) > 2", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0002", "sql1": "\nSELECT vehicle_flight_number, date, pilot\nFROM flight\nORDER BY vehicle_flight_number\n", "sql2": "SELECT vehicle_flight_number , date , pilot\nFROM flight\nORDER BY altitude ASC", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0014", "sql1": "\nSELECT `pilot`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`principal_activities` AS `principal_activities`,\n          `LHS`.`incorporated_in` AS `incorporated_in`,\n          `LHS`.`group_equity_shareholding` AS `group_equity_shareholding`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`pilot` AS `pilot`,\n          `RHS`.`velocity` AS `velocity`,\n          `RHS`.`altitude` AS `altitude`,\n          `RHS`.`airport_id` AS `airport_id`\n   FROM\n     (SELECT *\n      FROM `operate_company`\n      WHERE (`principal_activities` = 'Cargo'\n             AND `principal_activities` != 'Catering services')) AS LHS\n   INNER JOIN flight AS RHS ON (LHS.id = RHS.company_id))\nORDER BY pilot\n", "sql2": "SELECT T2.pilot\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id\nWHERE T1.principal_activities = 'Cargo' INTERSECT\n  SELECT T2.pilot\n  FROM operate_company AS T1\n  JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT altitude,\n          velocity,\n          COUNT(*) AS n\n   FROM flight\n   GROUP BY altitude,\n            velocity)\nWHERE (n != 200\n       AND velocity >= 200.0)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM flight\nWHERE velocity > 200", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0017", "sql1": "\nSELECT n AS count___,\n       country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM airport\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       country\nFROM airport\nGROUP BY country", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0016", "sql1": "\nSELECT airport_id AS id,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.city AS city,\n          LHS.country AS country,\n          LHS.iata AS iata,\n          LHS.icao AS icao,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.principal_activities AS principal_activities,\n          LHS.incorporated_in AS incorporated_in,\n          LHS.group_equity_shareholding AS group_equity_shareholding,\n          RHS.airport_id AS airport_id,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.city AS city,\n             LHS.country AS country,\n             LHS.iata AS iata,\n             LHS.icao AS icao,\n             LHS.name AS name,\n             RHS.type AS TYPE,\n             RHS.principal_activities AS principal_activities,\n             RHS.incorporated_in AS incorporated_in,\n             RHS.group_equity_shareholding AS group_equity_shareholding\n      FROM airport AS LHS\n      INNER JOIN operate_company AS RHS ON (LHS.id = RHS.id\n                                               AND LHS.name = RHS.name)) AS LHS\n   CROSS JOIN\n     (SELECT airport_id,\n             COUNT(*) AS n\n      FROM flight\n      GROUP BY airport_id) AS RHS)\nORDER BY id\n", "sql2": "SELECT T3.id,\n       count(*)\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id\nJOIN airport AS T3 ON T2.airport_id = T3.id\nGROUP BY T3.id", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0007", "sql1": "\nSELECT `name`\nFROM `airport`\nWHERE (`country` != 'Iceland')\nORDER BY name\n", "sql2": "SELECT name\nFROM airport\nWHERE country != 'Iceland'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0011", "sql1": "\nSELECT DISTINCT `pilot`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`iata` AS `iata`,\n          `LHS`.`icao` AS `icao`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`pilot` AS `pilot`,\n          `RHS`.`velocity` AS `velocity`,\n          `RHS`.`altitude` AS `altitude`,\n          `RHS`.`airport_id` AS `airport_id`,\n          `RHS`.`company_id` AS `company_id`\n   FROM `airport` AS `LHS`\n   INNER JOIN `flight` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`))\nWHERE (`country` != 'United States'\n       OR `name` != 'Billund Airport')\nORDER BY pilot\n", "sql2": "SELECT DISTINCT T2.pilot\nFROM airport AS T1\nJOIN flight AS T2 ON T1.id = T2.airport_id\nWHERE T1.country = 'United States'\n  OR T1.name = 'Billund Airport'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_company/0006", "sql1": "\nSELECT name,\n       TYPE\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.principal_activities AS principal_activities,\n          LHS.incorporated_in AS incorporated_in,\n          LHS.group_equity_shareholding AS group_equity_shareholding,\n          RHS.id AS id_other,\n          RHS.vehicle_flight_number AS vehicle_flight_number,\n          RHS.date AS date,\n          RHS.pilot AS pilot,\n          RHS.velocity AS velocity,\n          RHS.altitude AS altitude,\n          RHS.airport_id AS airport_id\n   FROM operate_company AS LHS\n   INNER JOIN flight AS RHS ON (LHS.id = RHS.company_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.type\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0033", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM campuses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM campuses", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0005", "sql1": "\nSELECT campus\nFROM campuses\nWHERE (YEAR > 1935\n       AND YEAR < 1939)\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE YEAR >= 1935\n  AND YEAR <= 1939", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0008", "sql1": "\nSELECT `campusfee`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`campus` AS `campus`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`county` AS `county`,\n          `LHS`.`year` AS `year`,\n          `RHS`.`year` AS `year_other`,\n          `RHS`.`campusfee` AS `campusfee`\n   FROM\n     (SELECT *\n      FROM `campuses`\n      WHERE (`campus` = 'San Francisco State University'\n             AND YEAR < 1996)) AS LHS\n   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))\nORDER BY campusfee\n", "sql2": "SELECT campusfee\nFROM campuses AS T1\nJOIN csu_fees AS T2 ON T1.id = t2.campus\nWHERE t1.campus = 'San Francisco State University'\n  AND T2.year = 1996", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0003", "sql1": "\nSELECT campus\nFROM campuses\nWHERE (YEAR = 1958)\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE YEAR = 1958", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0023", "sql1": "\nSELECT sumfaculty AS sum_faculty_\nFROM\n  (SELECT SUM(faculty) AS sumfaculty\n   FROM\n     (SELECT *\n      FROM faculty\n      WHERE (YEAR <= 2002\n             AND faculty < 2002.0)))\nORDER BY sum_faculty_\n", "sql2": "SELECT sum(faculty)\nFROM faculty\nWHERE YEAR = 2002", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0002", "sql1": "\nSELECT `campus`\nFROM `campuses`\nWHERE (`location` = 'Chico')\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE LOCATION = 'Chico'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0014", "sql1": "\nSELECT DISTINCT AVG(campusfee) OVER () AS avg_campusfee_\nFROM csu_fees\nWHERE (YEAR = 1996\n       OR campusfee = 1996)\nORDER BY avg_campusfee_\n", "sql2": "SELECT avg(campusfee)\nFROM csu_fees\nWHERE YEAR = 1996", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0001", "sql1": "\nSELECT `campus`\nFROM `campuses`\nWHERE (`county` = 'Los Angeles')\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE county = 'Los Angeles'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0020", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `county`,\n          COUNT(*) AS `n`\n   FROM `campuses`\n   GROUP BY `county`)\nWHERE (`county` = 'Los Angeles')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM campuses\nWHERE county = 'Los Angeles'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0007", "sql1": "\nSELECT `campusfee`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`campus` AS `campus`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`county` AS `county`,\n          `LHS`.`year` AS `year`,\n          `RHS`.`year` AS `year_other`,\n          `RHS`.`campusfee` AS `campusfee`\n   FROM\n     (SELECT *\n      FROM `campuses`\n      WHERE (`campus` = 'San Jose State University'\n             AND YEAR < 1996)) AS LHS\n   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))\nORDER BY campusfee\n", "sql2": "SELECT campusfee\nFROM campuses AS T1\nJOIN csu_fees AS T2 ON T1.id = t2.campus\nWHERE t1.campus = 'San Jose State University'\n  AND T2.year = 1996", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0010", "sql1": "\nSELECT `campus`\nFROM `campuses`\nWHERE (`county` = 'Los Angeles'\n       AND YEAR > 1950)\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE county = 'Los Angeles'\n  AND YEAR > 1950", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/csu_1/0006", "sql1": "\nSELECT `campus`\nFROM\n  (SELECT *\n   FROM `campuses`\n   WHERE (`county` = 'Los Angeles'\n          OR `county` = 'San Francisco'))\nWHERE (`location` = 'Northridge'\n       OR `location` = 'San Francisco')\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE LOCATION = 'Northridge'\n  AND county = 'Los Angeles'\nUNION\nSELECT campus\nFROM campuses\nWHERE LOCATION = 'San Francisco'\n  AND county = 'San Francisco'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0009", "sql1": "\nSELECT headquarters\nFROM\n  (SELECT headquarters,\n          COUNT(*) AS n\n   FROM company\n   GROUP BY headquarters)\nWHERE (n >= 2)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM company\nGROUP BY Headquarters\nHAVING COUNT(*) >= 2", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0013", "sql1": "\nSELECT name_other AS name\nFROM\n  (SELECT LHS.company_id AS company_id,\n          LHS.people_id AS people_id,\n          LHS.year_working AS year_working,\n          LHS.name AS name,\n          LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.sales_in_billion AS sales_in_billion,\n          LHS.profits_in_billion AS profits_in_billion,\n          LHS.assets_in_billion AS assets_in_billion,\n          LHS.market_value_in_billion AS market_value_in_billion,\n          RHS.age AS age,\n          RHS.name AS name_other,\n          RHS.nationality AS nationality,\n          RHS.graduation_college AS graduation_college\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.people_id AS people_id,\n             LHS.year_working AS year_working,\n             RHS.name AS name,\n             RHS.headquarters AS headquarters,\n             RHS.industry AS industry,\n             RHS.sales_in_billion AS sales_in_billion,\n             RHS.profits_in_billion AS profits_in_billion,\n             RHS.assets_in_billion AS assets_in_billion,\n             RHS.market_value_in_billion AS market_value_in_billion\n      FROM employment AS LHS\n      LEFT JOIN company AS RHS ON (LHS.company_id = RHS.company_id)) AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nWHERE (sales_in_billion >= 200.0)\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM employment AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nJOIN company AS T3 ON T1.Company_ID = T3.Company_ID\nWHERE T3.Sales_in_Billion > 200", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0004", "sql1": "\nSELECT `name`\nFROM `company`\nWHERE (`industry` = 'Banking'\n       OR `industry` = 'Retailing')\nORDER BY name\n", "sql2": "SELECT Name\nFROM company\nWHERE Industry = 'Banking'\n  OR Industry = 'Retailing'", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0008", "sql1": "\nSELECT headquarters\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT company_id,\n                name,\n                headquarters,\n                industry,\n                sales_in_billion,\n                profits_in_billion,\n                assets_in_billion,\n                market_value_in_billion,\n                COUNT(*) OVER () AS n\n         FROM company)\n      ORDER BY profits_in_billion)\n   LIMIT 1)\n", "sql2": "SELECT Headquarters\nFROM company\nGROUP BY Headquarters\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM employment AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM employment)", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0003", "sql1": "\nSELECT headquarters,\n       industry\nFROM company\nORDER BY headquarters\n", "sql2": "SELECT Headquarters,\n       Industry\nFROM company", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0002", "sql1": "\nSELECT name\nFROM company\nORDER BY name\n", "sql2": "SELECT Name\nFROM company\nORDER BY Sales_in_Billion ASC", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0014", "sql1": "\nSELECT DISTINCT name,\n                n AS count___\nFROM\n  (SELECT LHS.company_id AS company_id,\n          LHS.name AS name,\n          LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.sales_in_billion AS sales_in_billion,\n          LHS.profits_in_billion AS profits_in_billion,\n          LHS.assets_in_billion AS assets_in_billion,\n          LHS.market_value_in_billion AS market_value_in_billion,\n          LHS.people_id AS people_id,\n          LHS.year_working AS year_working,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.name AS name,\n             LHS.headquarters AS headquarters,\n             LHS.industry AS industry,\n             LHS.sales_in_billion AS sales_in_billion,\n             LHS.profits_in_billion AS profits_in_billion,\n             LHS.assets_in_billion AS assets_in_billion,\n             LHS.market_value_in_billion AS market_value_in_billion,\n             RHS.people_id AS people_id,\n             RHS.year_working AS year_working\n      FROM company AS LHS\n      INNER JOIN employment AS RHS ON (LHS.company_id = RHS.company_id)) AS LHS\n   CROSS JOIN\n     (SELECT age,\n             nationality,\n             COUNT(*) AS n\n      FROM people\n      GROUP BY age,\n               nationality) AS RHS)\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       COUNT(*)\nFROM employment AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nJOIN company AS T3 ON T1.Company_ID = T3.Company_ID\nGROUP BY T3.Name", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0001", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `company_id`,\n          `name`,\n          `headquarters`,\n          `industry`,\n          `sales_in_billion`,\n          `profits_in_billion`,\n          `assets_in_billion`,\n          `market_value_in_billion`,\n          COUNT(DISTINCT `headquarters`) OVER () AS `n_distinct`\n   FROM `company`)\nWHERE (`headquarters` = 'USA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM company\nWHERE Headquarters = 'USA'", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0016", "sql1": "\nSELECT name\nFROM company\nWHERE (sales_in_billion >= 200.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM company\nWHERE Sales_in_Billion > 200\nORDER BY Sales_in_Billion,\n         Profits_in_Billion DESC", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0007", "sql1": "\nSELECT headquarters,\n       n AS count___\nFROM\n  (SELECT headquarters,\n          COUNT(*) AS n\n   FROM company\n   GROUP BY headquarters)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters,\n       COUNT(*)\nFROM company\nGROUP BY Headquarters", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0011", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.age AS age,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.graduation_college AS graduation_college,\n          RHS.company_id AS company_id,\n          RHS.name AS name_other,\n          RHS.headquarters AS headquarters,\n          RHS.industry AS industry,\n          RHS.sales_in_billion AS sales_in_billion,\n          RHS.profits_in_billion AS profits_in_billion,\n          RHS.assets_in_billion AS assets_in_billion,\n          RHS.market_value_in_billion AS market_value_in_billion,\n          RHS.year_working AS year_working\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT LHS.company_id AS company_id,\n             LHS.name AS name,\n             LHS.headquarters AS headquarters,\n             LHS.industry AS industry,\n             LHS.sales_in_billion AS sales_in_billion,\n             LHS.profits_in_billion AS profits_in_billion,\n             LHS.assets_in_billion AS assets_in_billion,\n             LHS.market_value_in_billion AS market_value_in_billion,\n             RHS.people_id AS people_id,\n             RHS.year_working AS year_working\n      FROM company AS LHS\n      INNER JOIN employment AS RHS ON (LHS.company_id = RHS.company_id)) AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name___1\n", "sql2": "SELECT T3.Name,\n       T2.Name\nFROM employment AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nJOIN company AS T3 ON T1.Company_ID = T3.Company_ID", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0010", "sql1": "\nSELECT DISTINCT `headquarters`\nFROM `company`\nWHERE (`industry` = 'Banking'\n       AND `industry` != 'Oil and gas')\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM company\nWHERE Industry = 'Banking' INTERSECT\n  SELECT Headquarters\n  FROM company WHERE Industry = 'Oil and gas'", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_employee/0006", "sql1": "\nSELECT headquarters\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM company\n      ORDER BY sales_in_billion DESC)\n   LIMIT 1)\n", "sql2": "SELECT Headquarters\nFROM company\nORDER BY Sales_in_Billion DESC\nLIMIT 1", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0033", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT card_type_code) OVER () AS count_distinct_card_type_code_\nFROM customers_cards\nORDER BY count_distinct_card_type_code_\n", "sql2": "SELECT count(DISTINCT card_type_code)\nFROM Customers_Cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0013", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT other_customer_details,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY other_customer_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0005", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM `accounts` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`customer_first_name` != 'Art'\n                  OR `customer_last_name` != 'Turcotte')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.customer_first_name = 'Art'\n  AND T2.customer_last_name = 'Turcotte'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0029", "sql1": "\nSELECT DISTINCT card_type_code\nFROM\n  (SELECT card_id,\n          card_type_code,\n          COUNT(*) AS n\n   FROM customers_cards\n   GROUP BY card_id,\n            card_type_code)\nWHERE (n != 5)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code\nFROM Customers_cards\nGROUP BY card_type_code\nHAVING count(*) >= 5", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0028", "sql1": "\nSELECT card_type_code\nFROM\n  (SELECT card_type_code,\n          date_valid_to,\n          COUNT(*) AS n\n   FROM\n     (SELECT customer_id AS card_id,\n             customer_id,\n             card_type_code,\n             card_number,\n             date_valid_from,\n             date_valid_to,\n             other_card_details,\n             customer_id_other,\n             card_type_code_other,\n             card_number_other,\n             date_valid_to_other,\n             other_card_details_other\n      FROM\n        (SELECT LHS.card_id AS card_id,\n                LHS.customer_id AS customer_id,\n                LHS.card_type_code AS card_type_code,\n                LHS.card_number AS card_number,\n                LHS.date_valid_from AS date_valid_from,\n                LHS.date_valid_to AS date_valid_to,\n                LHS.other_card_details AS other_card_details,\n                RHS.customer_id AS customer_id_other,\n                RHS.card_type_code AS card_type_code_other,\n                RHS.card_number AS card_number_other,\n                RHS.date_valid_to AS date_valid_to_other,\n                RHS.other_card_details AS other_card_details_other\n         FROM customers_cards AS LHS\n         INNER JOIN customers_cards AS RHS ON (LHS.customer_id = RHS.card_id\n                                                  AND LHS.date_valid_from = RHS.date_valid_from)))\n   GROUP BY card_type_code,\n            date_valid_to)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code\nFROM Customers_cards\nGROUP BY card_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0004", "sql1": "\nSELECT customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.customer_id AS customer_id,\n          LHS.account_name AS account_name,\n          LHS.other_account_details AS other_account_details,\n          RHS.customer_first_name AS customer_first_name,\n          RHS.customer_last_name AS customer_last_name,\n          RHS.customer_address AS customer_address,\n          RHS.customer_phone AS customer_phone,\n          RHS.customer_email AS customer_email,\n          RHS.other_customer_details AS other_customer_details\n   FROM accounts AS LHS\n   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nWHERE (account_name = 162)\nORDER BY customer_first_name\n", "sql2": "SELECT T2.customer_first_name,\n       T2.customer_last_name,\n       T2.customer_phone\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.account_name = '162'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0012", "sql1": "\nSELECT n_distinct AS count_distinct_customer_id_\nFROM\n  (SELECT COUNT(DISTINCT customer_id) AS n_distinct\n   FROM accounts)\nORDER BY count_distinct_customer_id_\n", "sql2": "SELECT count(DISTINCT customer_id)\nFROM Accounts", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0032", "sql1": "\nSELECT DISTINCT card_type_code\nFROM customers_cards\nORDER BY card_type_code\n", "sql2": "SELECT DISTINCT card_type_code\nFROM Customers_Cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0015", "sql1": "\nSELECT `customer_phone`,\n       `customer_email`\nFROM `customers`\nWHERE (`customer_first_name` = 'Aniyah'\n       AND `customer_last_name` = 'Feest')\nORDER BY customer_phone\n", "sql2": "SELECT customer_phone,\n       customer_email\nFROM Customers\nWHERE customer_first_name = 'Aniyah'\n  AND customer_last_name = 'Feest'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0003", "sql1": "\nSELECT other_account_details\nFROM accounts\nWHERE (account_name = 338)\nORDER BY other_account_details\n", "sql2": "SELECT other_account_details\nFROM Accounts\nWHERE account_name = '338'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0039", "sql1": "\nSELECT transaction_type\nFROM\n  (SELECT transaction_id,\n          previous_transaction_id,\n          card_id AS account_id,\n          card_id,\n          transaction_type,\n          transaction_date,\n          transaction_amount,\n          transaction_comment,\n          other_transaction_details,\n          transaction_id_other,\n          previous_transaction_id_other,\n          transaction_type_other,\n          transaction_date_other,\n          transaction_amount_other,\n          transaction_comment_other,\n          other_transaction_details_other\n   FROM\n     (SELECT transaction_id,\n             previous_transaction_id,\n             account_id,\n             transaction_id AS card_id,\n             transaction_type,\n             transaction_date,\n             transaction_amount,\n             transaction_comment,\n             other_transaction_details,\n             transaction_id_other,\n             previous_transaction_id_other,\n             transaction_type_other,\n             transaction_date_other,\n             transaction_amount_other,\n             transaction_comment_other,\n             other_transaction_details_other\n      FROM\n        (SELECT LHS.transaction_id AS transaction_id,\n                LHS.previous_transaction_id AS previous_transaction_id,\n                LHS.account_id AS account_id,\n                LHS.card_id AS card_id,\n                LHS.transaction_type AS transaction_type,\n                LHS.transaction_date AS transaction_date,\n                LHS.transaction_amount AS transaction_amount,\n                LHS.transaction_comment AS transaction_comment,\n                LHS.other_transaction_details AS other_transaction_details,\n                RHS.transaction_id AS transaction_id_other,\n                RHS.previous_transaction_id AS previous_transaction_id_other,\n                RHS.transaction_type AS transaction_type_other,\n                RHS.transaction_date AS transaction_date_other,\n                RHS.transaction_amount AS transaction_amount_other,\n                RHS.transaction_comment AS transaction_comment_other,\n                RHS.other_transaction_details AS other_transaction_details_other\n         FROM financial_transactions AS LHS\n         INNER JOIN financial_transactions AS RHS ON (LHS.transaction_id = RHS.card_id\n                                                         AND LHS.card_id = RHS.account_id))))\nORDER BY transaction_type\n", "sql2": "SELECT transaction_type\nFROM Financial_transactions\nGROUP BY transaction_type\nORDER BY sum(transaction_amount) DESC\nLIMIT 1", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0023", "sql1": "\nSELECT customer_id,\n       n AS count___\nFROM\n  (SELECT customer_id,\n          COUNT(*) AS n\n   FROM customers_cards\n   GROUP BY customer_id)\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       count(*)\nFROM Customers_cards\nGROUP BY customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0035", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT transaction_type) OVER () AS count_distinct_transaction_type_\nFROM financial_transactions\nORDER BY count_distinct_transaction_type_\n", "sql2": "SELECT count(DISTINCT transaction_type)\nFROM Financial_Transactions", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0034", "sql1": "\nSELECT DISTINCT transaction_type\nFROM financial_transactions\nORDER BY transaction_type\n", "sql2": "SELECT DISTINCT transaction_type\nFROM Financial_Transactions", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0018", "sql1": "\nSELECT date_valid_from,\n       date_valid_to\nFROM customers_cards\nWHERE (card_number = 4560596484842.0)\nORDER BY date_valid_from\n", "sql2": "SELECT date_valid_from,\n       date_valid_to\nFROM Customers_cards\nWHERE card_number = '4560596484842'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0038", "sql1": "\nSELECT transaction_type,\n       n AS count___\nFROM\n  (SELECT transaction_type,\n          COUNT(*) AS n\n   FROM financial_transactions\n   GROUP BY transaction_type)\nORDER BY transaction_type\n", "sql2": "SELECT transaction_type,\n       count(*)\nFROM Financial_transactions\nGROUP BY transaction_type", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0002", "sql1": "\nSELECT account_id,\n       customer_id,\n       account_name\nFROM accounts\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       customer_id,\n       account_name\nFROM Accounts", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0014", "sql1": "\nSELECT customer_id,\n       customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM customers\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM Customers", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0017", "sql1": "\nSELECT card_id,\n       customer_id,\n       card_type_code,\n       card_number\nFROM customers_cards\nORDER BY card_id\n", "sql2": "SELECT card_id,\n       customer_id,\n       card_type_code,\n       card_number\nFROM Customers_cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0040", "sql1": "\nSELECT account_id,\n       n AS count___\nFROM\n  (SELECT account_id,\n          COUNT(*) AS n\n   FROM financial_transactions\n   GROUP BY account_id)\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       count(*)\nFROM Financial_transactions\nGROUP BY account_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0037", "sql1": "\nSELECT card_type_code,\n       n AS count___\nFROM\n  (SELECT card_type_code,\n          transaction_comment,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.card_id AS card_id,\n             LHS.customer_id AS customer_id,\n             LHS.card_type_code AS card_type_code,\n             LHS.card_number AS card_number,\n             LHS.date_valid_from AS date_valid_from,\n             LHS.date_valid_to AS date_valid_to,\n             LHS.other_card_details AS other_card_details,\n             RHS.transaction_id AS transaction_id,\n             RHS.previous_transaction_id AS previous_transaction_id,\n             RHS.account_id AS account_id,\n             RHS.transaction_type AS transaction_type,\n             RHS.transaction_date AS transaction_date,\n             RHS.transaction_amount AS transaction_amount,\n             RHS.transaction_comment AS transaction_comment,\n             RHS.other_transaction_details AS other_transaction_details\n      FROM customers_cards AS LHS\n      INNER JOIN financial_transactions AS RHS ON (LHS.card_id = RHS.card_id))\n   GROUP BY card_type_code,\n            transaction_comment)\nORDER BY card_type_code\n", "sql2": "SELECT T2.card_type_code,\n       count(*)\nFROM Financial_transactions AS T1\nJOIN Customers_cards AS T2 ON T1.card_id = T2.card_id\nGROUP BY T2.card_type_code", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0021", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `card_type_code`,\n          COUNT(*) AS `n`\n   FROM `customers_cards`\n   GROUP BY `card_type_code`)\nWHERE (`card_type_code` = 'Debit')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers_cards\nWHERE card_type_code = 'Debit'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0036", "sql1": "\nSELECT DISTINCT AVG(transaction_amount) OVER () AS avg_transaction_amount_,\n                                             sumtransaction_amount AS sum_transaction_amount_\nFROM\n  (SELECT transaction_id,\n          previous_transaction_id,\n          account_id,\n          card_id,\n          transaction_type,\n          transaction_date,\n          transaction_amount,\n          transaction_comment,\n          other_transaction_details,\n          SUM(transaction_amount) OVER () AS sumtransaction_amount\n   FROM financial_transactions)\nORDER BY avg_transaction_amount_\n", "sql2": "SELECT avg(transaction_amount),\n       sum(transaction_amount)\nFROM Financial_transactions", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers_cards\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers_cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0031", "sql1": "\nSELECT `customer_id`,\n       `customer_first_name`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers_cards`\n           WHERE (`card_type_code` = 'Credit')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       customer_first_name\nFROM Customers\nEXCEPT\nSELECT T1.customer_id,\n       T2.customer_first_name\nFROM Customers_cards AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE card_type_code = 'Credit'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0027", "sql1": "\nSELECT card_type_code,\n       n AS count___\nFROM\n  (SELECT card_type_code,\n          COUNT(*) AS n\n   FROM customers_cards\n   GROUP BY card_type_code)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code,\n       count(*)\nFROM Customers_cards\nGROUP BY card_type_code", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0011", "sql1": "\nSELECT DISTINCT customer_first_name,\n                customer_last_name\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.customer_id AS customer_id,\n          LHS.account_name AS account_name,\n          LHS.other_account_details AS other_account_details,\n          RHS.customer_first_name AS customer_first_name,\n          RHS.customer_last_name AS customer_last_name,\n          RHS.customer_address AS customer_address,\n          RHS.customer_phone AS customer_phone,\n          RHS.customer_email AS customer_email,\n          RHS.other_customer_details AS other_customer_details\n   FROM accounts AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_first_name\n", "sql2": "SELECT DISTINCT T1.customer_first_name,\n                T1.customer_last_name\nFROM Customers AS T1\nJOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0010", "sql1": "\nSELECT customer_first_name,\n       customer_last_name\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM accounts AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_first_name\n", "sql2": "SELECT customer_first_name,\n       customer_last_name\nFROM Customers\nEXCEPT\nSELECT T1.customer_first_name,\n       T1.customer_last_name\nFROM Customers AS T1\nJOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0006", "sql1": "\nSELECT customer_id,\n       n AS count___\nFROM\n  (SELECT customer_id,\n          COUNT(*) AS n\n   FROM accounts\n   GROUP BY customer_id)\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       count(*)\nFROM Accounts\nGROUP BY customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_card_transactions/0030", "sql1": "\nSELECT card_type_code,\n       n_distinct AS count_distinct_customer_id_\nFROM\n  (SELECT card_type_code,\n          COUNT(DISTINCT customer_id) AS n_distinct\n   FROM customers_cards\n   GROUP BY card_type_code)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code,\n       count(DISTINCT customer_id)\nFROM Customers_cards\nGROUP BY card_type_code", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0009", "sql1": "\nSELECT team\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM technician\n   GROUP BY team)\nWHERE (n >= 2)\nORDER BY team\n", "sql2": "SELECT Team\nFROM technician\nGROUP BY Team\nHAVING COUNT(*) >= 2", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0013", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT age,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.technician_id AS technician_id,\n             LHS.name AS name,\n             LHS.team AS team,\n             LHS.starting_year AS starting_year,\n             LHS.age AS age,\n             RHS.repair_id AS repair_id,\n             RHS.machine_id AS machine_id\n      FROM technician AS LHS\n      INNER JOIN repair_assignment AS RHS ON (LHS.technician_id = RHS.technician_id))\n   GROUP BY age,\n            name)\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       COUNT(*)\nFROM repair_assignment AS T1\nJOIN technician AS T2 ON T1.technician_ID = T2.technician_ID\nGROUP BY T2.Name", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0005", "sql1": "\nSELECT name\nFROM technician\nWHERE (age >= 36\n       AND age <= 37)\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nWHERE Age = 36\n  OR Age = 37", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0004", "sql1": "\nSELECT `name`\nFROM `technician`\nWHERE (`team` != 'NYY')\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nWHERE Team != 'NYY'", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0015", "sql1": "\nSELECT `starting_year`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `technician`\n         WHERE (`team` != 'CLE'\n                AND `team` = 'CWS'))\n      ORDER BY technician_id)\n   LIMIT 1)\n", "sql2": "SELECT Starting_Year\nFROM technician\nWHERE Team = 'CLE' INTERSECT\n  SELECT Starting_Year\n  FROM technician WHERE Team = 'CWS'", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0003", "sql1": "\nSELECT team,\n       starting_year\nFROM technician\nORDER BY team\n", "sql2": "SELECT Team,\n       Starting_Year\nFROM technician", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0002", "sql1": "\nSELECT name\nFROM technician\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nORDER BY Age ASC", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM technician AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM repair_assignment AS RHS\n        WHERE (LHS.technician_id = RHS.technician_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nWHERE technician_id NOT IN\n    (SELECT technician_id\n     FROM repair_assignment)", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM technician\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM technician", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0007", "sql1": "\nSELECT team,\n       n AS count___\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM technician\n   GROUP BY team)\nORDER BY team\n", "sql2": "SELECT Team,\n       COUNT(*)\nFROM technician\nGROUP BY Team", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0010", "sql1": "\nSELECT name,\n       machine_series\nFROM\n  (SELECT LHS.technician_id AS technician_id,\n          LHS.name AS name,\n          LHS.team AS team,\n          LHS.starting_year AS starting_year,\n          LHS.age AS age,\n          RHS.repair_id AS repair_id,\n          RHS.machine_id AS machine_id,\n          RHS.making_year AS making_year,\n          RHS.class AS CLASS,\n          RHS.team AS team_other,\n          RHS.machine_series AS machine_series,\n          RHS.value_points AS value_points,\n          RHS.quality_rank AS quality_rank\n   FROM technician AS LHS\n   INNER JOIN\n     (SELECT LHS.technician_id AS technician_id,\n             LHS.repair_id AS repair_id,\n             LHS.machine_id AS machine_id,\n             RHS.making_year AS making_year,\n             RHS.class AS CLASS,\n             RHS.team AS team,\n             RHS.machine_series AS machine_series,\n             RHS.value_points AS value_points,\n             RHS.quality_rank AS quality_rank\n      FROM repair_assignment AS LHS\n      INNER JOIN machine AS RHS ON (LHS.machine_id = RHS.machine_id)) AS RHS ON (LHS.technician_id = RHS.technician_id))\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       T2.Machine_series\nFROM repair_assignment AS T1\nJOIN machine AS T2 ON T1.machine_id = T2.machine_id\nJOIN technician AS T3 ON T1.technician_ID = T3.technician_ID", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/machine_repair/0006", "sql1": "\nSELECT starting_year\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM technician\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Starting_Year\nFROM technician\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0009", "sql1": "\nSELECT card_number,\n       name,\n       hometown\nFROM member\nORDER BY card_number\n", "sql2": "SELECT card_number,\n       name,\n       hometown\nFROM member\nORDER BY LEVEL DESC", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM member AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM membership_register_branch AS RHS\n        WHERE (LHS.member_id = RHS.member_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM member\nWHERE member_id NOT IN\n    (SELECT member_id\n     FROM membership_register_branch)", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0005", "sql1": "\nSELECT open_year\nFROM\n  (SELECT open_year,\n          COUNT(*) AS n\n   FROM branch\n   GROUP BY open_year)\nWHERE (n > 2)\nORDER BY open_year\n", "sql2": "SELECT open_year\nFROM branch\nGROUP BY open_year\nHAVING count(*) >= 2", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0004", "sql1": "\nSELECT city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM branch\n      ORDER BY branch_id DESC)\n   LIMIT 2)\n", "sql2": "SELECT DISTINCT city\nFROM branch\nWHERE membership_amount >= 100", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_level_\nFROM\n  (SELECT LEVEL,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY LEVEL)\nORDER BY count_distinct_level_\n", "sql2": "SELECT count(DISTINCT LEVEL)\nFROM member", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0015", "sql1": "\nSELECT DISTINCT name,\n                open_year\nFROM\n  (SELECT branch_id,\n          name,\n          open_year,\n          address_road,\n          city,\n          membership_amount,\n          branch_id_other,\n          branch_id AS n_distinct\n   FROM\n     (SELECT LHS.branch_id AS branch_id,\n             LHS.name AS name,\n             LHS.open_year AS open_year,\n             LHS.address_road AS address_road,\n             LHS.city AS city,\n             LHS.membership_amount AS membership_amount,\n             RHS.branch_id AS branch_id_other\n      FROM branch AS LHS\n      INNER JOIN\n        (SELECT branch_id,\n                COUNT(DISTINCT register_year) AS n_distinct\n         FROM membership_register_branch\n         GROUP BY branch_id) AS RHS ON (LHS.branch_id = RHS.n_distinct)))\nWHERE (n_distinct < 2016\n       AND n_distinct = 1)\nORDER BY name\n", "sql2": "SELECT T2.name,\n       T2.open_year\nFROM membership_register_branch AS T1\nJOIN branch AS T2 ON T1.branch_id = T2.branch_id\nWHERE T1.register_year = 2016\nGROUP BY T2.branch_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM branch\n      ORDER BY membership_amount DESC)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM branch\nORDER BY membership_amount DESC\nLIMIT 3", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0002", "sql1": "\nSELECT name,\n       address_road,\n       city\nFROM branch\nORDER BY name\n", "sql2": "SELECT name,\n       address_road,\n       city\nFROM branch\nORDER BY open_year", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0017", "sql1": "\nSELECT city\nFROM branch\nWHERE (open_year = 2001)\nORDER BY city\n", "sql2": "SELECT city\nFROM branch\nWHERE open_year = 2001\n  AND membership_amount > 100", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0020", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.branch_id AS branch_id,\n          LHS.year AS YEAR,\n          LHS.total_pounds AS total_pounds,\n          LHS.n AS n,\n          RHS.card_number AS card_number,\n          RHS.name AS name,\n          RHS.hometown AS hometown,\n          RHS.level AS LEVEL\n   FROM\n     (SELECT LHS.member_id AS member_id,\n             LHS.branch_id AS branch_id,\n             LHS.year AS YEAR,\n             LHS.total_pounds AS total_pounds,\n             RHS.n AS n\n      FROM purchase AS LHS\n      INNER JOIN\n        (SELECT YEAR,\n                COUNT(*) AS n\n         FROM purchase\n         GROUP BY YEAR) AS RHS ON (LHS.year = RHS.year)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM member\n      WHERE (LEVEL < 6)) AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM purchase AS T1\nJOIN member AS T2 ON T1.member_id = T2.member_id\nWHERE T2.level = 6", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0016", "sql1": "\nSELECT name,\n       hometown\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.card_number AS card_number,\n          LHS.name AS name,\n          LHS.hometown AS hometown,\n          LHS.level AS LEVEL,\n          RHS.branch_id AS branch_id,\n          RHS.register_year AS register_year\n   FROM member AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM membership_register_branch\n      WHERE (register_year = 2016)) AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       T2.hometown\nFROM membership_register_branch AS T1\nJOIN member AS T2 ON T1.member_id = T2.member_id\nWHERE T1.register_year = 2016", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/shop_membership/0010", "sql1": "\nSELECT DISTINCT LEVEL\nFROM\n  (SELECT LHS.card_number AS card_number,\n          LHS.level AS LEVEL,\n          LHS.n AS n,\n          RHS.card_number AS card_number_other,\n          RHS.name AS name,\n          RHS.hometown AS hometown\n   FROM\n     (SELECT card_number,\n             LEVEL,\n             COUNT(*) AS n\n      FROM member\n      GROUP BY card_number,\n               LEVEL) AS LHS\n   INNER JOIN member AS RHS ON (LHS.level = RHS.level\n                                   AND LHS.n = RHS.member_id))\nORDER BY LEVEL\n", "sql2": "SELECT LEVEL\nFROM member\nGROUP BY LEVEL\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0013", "sql1": "\nSELECT reign,\n       days_held\nFROM wrestler\nORDER BY reign\n", "sql2": "SELECT Reign,\n       Days_held\nFROM wrestler", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0005", "sql1": "\nSELECT name,\n       LOCATION\nFROM wrestler\nORDER BY name\n", "sql2": "SELECT Name,\n       LOCATION\nFROM wrestler", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0004", "sql1": "\nSELECT DISTINCT `reign`\nFROM `wrestler`\nWHERE (`location` != 'Tokyo , Japan')\nORDER BY reign\n", "sql2": "SELECT DISTINCT Reign\nFROM wrestler\nWHERE LOCATION != 'Tokyo , Japan'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0012", "sql1": "\nSELECT team\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM elimination\n   GROUP BY team)\nWHERE (n >= 3)\nORDER BY team\n", "sql2": "SELECT Team\nFROM elimination\nGROUP BY Team\nHAVING COUNT(*) > 3", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0015", "sql1": "\nSELECT days_held AS reign\nFROM\n  (SELECT days_held,\n          event,\n          COUNT(*) AS n\n   FROM\n     (SELECT wrestler_id,\n             name,\n             days_held AS reign,\n             days_held,\n             LOCATION,\n             event,\n             wrestler_id_other,\n             days_held_other,\n             location_other,\n             event_other\n      FROM\n        (SELECT LHS.wrestler_id AS wrestler_id,\n                LHS.name AS name,\n                LHS.reign AS reign,\n                LHS.days_held AS days_held,\n                LHS.location AS LOCATION,\n                LHS.event AS event,\n                RHS.wrestler_id AS wrestler_id_other,\n                RHS.days_held AS days_held_other,\n                RHS.location AS location_other,\n                RHS.event AS event_other\n         FROM wrestler AS LHS\n         INNER JOIN wrestler AS RHS ON (LHS.name = RHS.name\n                                           AND LHS.days_held = RHS.reign)))\n   GROUP BY days_held,\n            event)\nORDER BY reign\n", "sql2": "SELECT Reign\nFROM wrestler\nGROUP BY Reign\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM wrestler\n      ORDER BY name)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM wrestler\nORDER BY Days_held ASC\nLIMIT 1", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0019", "sql1": "\nSELECT n_distinct AS count__distinct_team_\nFROM\n  (SELECT COUNT(DISTINCT team) AS n_distinct\n   FROM elimination)\nORDER BY count__distinct_team_\n", "sql2": "SELECT COUNT (DISTINCT team)\nFROM elimination", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0018", "sql1": "\nSELECT `team`\nFROM `elimination`\nWHERE (`eliminated_by` = 'Orton'\n       AND `eliminated_by` != 'Benjamin')\nORDER BY team\n", "sql2": "SELECT Team\nFROM Elimination\nWHERE Eliminated_By = 'Orton' INTERSECT\n  SELECT Team\n  FROM Elimination WHERE Eliminated_By = 'Benjamin'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0002", "sql1": "\nSELECT name\nFROM wrestler\nORDER BY name\n", "sql2": "SELECT Name\nFROM wrestler\nORDER BY Days_held DESC", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0014", "sql1": "\nSELECT DISTINCT name_other AS name\nFROM\n  (SELECT LHS.wrestler_id AS wrestler_id,\n          LHS.name AS name,\n          LHS.reign AS reign,\n          LHS.days_held AS days_held,\n          LHS.location AS LOCATION,\n          LHS.event AS event,\n          RHS.wrestler_id AS wrestler_id_other,\n          RHS.name AS name_other,\n          RHS.reign AS reign_other,\n          RHS.location AS location_other,\n          RHS.event AS event_other\n   FROM wrestler AS LHS\n   INNER JOIN wrestler AS RHS ON (LHS.reign = RHS.days_held))\nORDER BY name\n", "sql2": "SELECT Name\nFROM wrestler\nWHERE Days_held < 100", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM wrestler\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM wrestler", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0020", "sql1": "\nSELECT `time`\nFROM `elimination`\nWHERE (`eliminated_by` = 'Punk'\n       OR `eliminated_by` = 'Orton')\nORDER BY TIME\n", "sql2": "SELECT TIME\nFROM elimination\nWHERE Eliminated_By = 'Punk'\n  OR Eliminated_By = 'Orton'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0011", "sql1": "\nSELECT team,\n       n AS count___\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM elimination\n   GROUP BY team)\nORDER BY team\n", "sql2": "SELECT Team,\n       COUNT(*)\nFROM elimination\nGROUP BY Team", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/wrestler/0006", "sql1": "\nSELECT `elimination_move`\nFROM `elimination`\nWHERE (`team` = 'Team Orton')\nORDER BY elimination_move\n", "sql2": "SELECT Elimination_Move\nFROM Elimination\nWHERE Team = 'Team Orton'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0009", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM performance\n   GROUP BY LOCATION)\nWHERE (n >= 2)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM performance\nGROUP BY LOCATION\nHAVING COUNT(*) >= 2", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0005", "sql1": "\nSELECT meanattendance AS avg_attendance_\nFROM\n  (SELECT AVG(attendance) AS meanattendance\n   FROM performance)\nORDER BY avg_attendance_\n", "sql2": "SELECT avg(Attendance)\nFROM performance", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0004", "sql1": "\nSELECT `attendance`\nFROM `performance`\nWHERE (`location` = 'TD Garden'\n       OR `location` = 'Bell Centre')\nORDER BY attendance\n", "sql2": "SELECT Attendance\nFROM performance\nWHERE LOCATION = 'TD Garden'\n  OR LOCATION = 'Bell Centre'", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0008", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT attendance,\n                LOCATION,\n                COUNT(*) AS n\n         FROM performance\n         GROUP BY attendance,\n                  LOCATION)\n      ORDER BY LOCATION DESC)\n   LIMIT 1)\n", "sql2": "SELECT LOCATION\nFROM performance\nGROUP BY LOCATION\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0003", "sql1": "\nSELECT date, LOCATION\nFROM performance\nORDER BY date\n", "sql2": "SELECT Date , LOCATION\nFROM performance", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0002", "sql1": "\nSELECT HOST\nFROM performance\nORDER BY HOST\n", "sql2": "SELECT HOST\nFROM performance\nORDER BY Attendance ASC", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM performance\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM performance", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0007", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM performance\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       COUNT(*)\nFROM performance\nGROUP BY LOCATION", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/performance_attendance/0006", "sql1": "\nSELECT date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM performance\n      ORDER BY date)\n   LIMIT 1)\n", "sql2": "SELECT Date\nFROM performance\nORDER BY Attendance DESC\nLIMIT 1", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0009", "sql1": "\nSELECT DISTINCT venue\nFROM debate\nORDER BY venue\n", "sql2": "SELECT DISTINCT Venue\nFROM debate", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0013", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.district AS district,\n          LHS.name AS name,\n          LHS.party AS party,\n          LHS.age AS age,\n          RHS.n AS n\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT affirmative,\n             COUNT(*) AS n\n      FROM debate_people\n      GROUP BY affirmative) AS RHS ON (LHS.people_id = RHS.affirmative))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       COUNT(*)\nFROM debate_people AS T1\nJOIN people AS T2 ON T1.Affirmative = T2.People_ID\nGROUP BY T2.Name", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0005", "sql1": "\nSELECT name\nFROM people\nWHERE (age < 35\n       OR age <= 36)\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE Age = 35\n  OR Age = 36", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0004", "sql1": "\nSELECT date\nFROM debate\nWHERE (num_of_audience >= 150)\nORDER BY date\n", "sql2": "SELECT Date\nFROM debate\nWHERE Num_of_Audience > 150", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0008", "sql1": "\nSELECT party\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT age,\n                party,\n                COUNT(*) AS n\n         FROM people\n         GROUP BY age,\n                  party)\n      ORDER BY n)\n   LIMIT 1)\n", "sql2": "SELECT Party\nFROM people\nGROUP BY Party\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0003", "sql1": "\nSELECT date, venue\nFROM debate\nORDER BY date\n", "sql2": "SELECT Date , Venue\nFROM debate", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0002", "sql1": "\nSELECT venue\nFROM debate\nORDER BY venue\n", "sql2": "SELECT Venue\nFROM debate\nORDER BY Num_of_Audience ASC", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM debate\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM debate", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0007", "sql1": "\nSELECT party,\n       n AS count___\nFROM\n  (SELECT party,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY party)\nORDER BY party\n", "sql2": "SELECT Party,\n       COUNT(*)\nFROM people\nGROUP BY Party", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/debate/0006", "sql1": "\nSELECT party\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM people\n      ORDER BY party DESC)\n   LIMIT 1)\n", "sql2": "SELECT Party\nFROM people\nORDER BY Age ASC\nLIMIT 1", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0009", "sql1": "\nSELECT DISTINCT `fname`,\n                `lname`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`instid` AS `instid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`country` AS `country`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`instid` AS `instid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `authors` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `inst`\n      WHERE (`name` = 'University of Oxford')) AS RHS ON (LHS.instid = RHS.instid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT t1.fname,\n                t1.lname\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'University of Oxford'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0033", "sql1": "\nSELECT fname,\n       lname\nFROM authors\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM authors\nORDER BY lname", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0013", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`authid` AS `authid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `inst` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`name` = 'Indiana University')\nORDER BY title\n", "sql2": "SELECT DISTINCT t1.title\nFROM papers AS t1\nJOIN authorship AS t2 ON t1.paperid = t2.paperid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'Indiana University'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0005", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Aaron'\n       AND `lname` = 'Turon')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Aaron'\n  AND t1.lname = 'Turon'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0029", "sql1": "\nSELECT `fname`\nFROM `authors`\nWHERE (`lname` = 'Ueno')\nORDER BY fname\n", "sql2": "SELECT fname\nFROM authors\nWHERE lname = 'Ueno'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0028", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.paperid AS paperid,\n          LHS.title AS title,\n          LHS.authid AS authid,\n          LHS.instid AS instid,\n          LHS.authorder AS authorder\n   FROM\n     (SELECT LHS.paperid AS paperid,\n             LHS.title AS title,\n             RHS.authid AS authid,\n             RHS.instid AS instid,\n             RHS.authorder AS authorder\n      FROM papers AS LHS\n      INNER JOIN authorship AS RHS ON (LHS.paperid = RHS.paperid)) AS LHS\n   INNER JOIN\n     (SELECT authid,\n             instid,\n             paperid,\n             MAX(authorder) OVER () AS authorder\n      FROM authorship) AS RHS ON (LHS.paperid = RHS.paperid\n                                     AND LHS.authid = RHS.authid\n                                     AND LHS.instid = RHS.instid\n                                     AND LHS.authorder = RHS.authorder))\nORDER BY title\n", "sql2": "SELECT t2.title\nFROM authorship AS t1\nJOIN papers AS t2 ON t1.paperid = t2.paperid\nWHERE t1.authorder =\n    (SELECT max(authorder)\n     FROM authorship)", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0004", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Jeremy'\n       AND `lname` = 'Gibbons')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Jeremy'\n  AND t1.lname = 'Gibbons'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0032", "sql1": "\nSELECT lname\nFROM authors\nORDER BY lname\n", "sql2": "SELECT lname\nFROM authors\nORDER BY lname", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0008", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`authid` AS `authid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`authid` AS `authid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `inst` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `authors`\n      WHERE (`fname` = 'Katsuhiro'\n             OR `lname` = 'Ueno')) AS RHS ON (LHS.authid = RHS.authid))\nORDER BY name\n", "sql2": "SELECT DISTINCT t3.name\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t1.fname = 'Katsuhiro'\n  AND t1.lname = 'Ueno'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM papers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM papers", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0019", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`paperid` AS `paperid`,\n             `LHS`.`title` AS `title`,\n             `RHS`.`authorder` AS `authorder`\n      FROM\n        (SELECT `LHS`.`instid` AS `instid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`country` AS `country`,\n                `LHS`.`authid` AS `authid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `RHS`.`paperid` AS `paperid`,\n                `RHS`.`title` AS `title`\n         FROM\n           (SELECT `LHS`.`instid` AS `instid`,\n                   `LHS`.`name` AS `name`,\n                   `LHS`.`country` AS `country`,\n                   `RHS`.`authid` AS `authid`,\n                   `RHS`.`lname` AS `lname`,\n                   `RHS`.`fname` AS `fname`\n            FROM `inst` AS `LHS`\n            CROSS JOIN `authors` AS `RHS`) AS `LHS`\n         CROSS JOIN `papers` AS `RHS`) AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                              AND `LHS`.`authid` = `RHS`.`authid`\n                                              AND `LHS`.`paperid` = `RHS`.`paperid`))\n   WHERE (`lname` = 'Turon'\n          AND `authorder` = 2))\nWHERE (`country` = 'USA'\n       OR `lname` != 'Turon')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nJOIN inst AS t4 ON t2.instid = t4.instid\nWHERE t4.country = 'USA'\n  AND t2.authorder = 2\n  AND t1.lname = 'Turon'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0018", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Stephanie'\n       AND `lname` = 'Weirich')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Stephanie'\n  AND t1.lname = 'Weirich'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM inst\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM inst", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0014", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`authid` AS `authid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `inst` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`name` = 'Google')\nORDER BY title\n", "sql2": "SELECT DISTINCT t1.title\nFROM papers AS t1\nJOIN authorship AS t2 ON t1.paperid = t2.paperid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'Google'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM authors\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM authors", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0017", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Olin'\n       AND `lname` = 'Shivers')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Olin'\n  AND t1.lname = 'Shivers'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0020", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM\n        (SELECT `LHS`.`instid` AS `instid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`country` AS `country`,\n                `RHS`.`authid` AS `authid`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`\n         FROM `inst` AS `LHS`\n         CROSS JOIN `authors` AS `RHS`) AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                           AND `LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`country` = 'Japan'\n       AND `lname` = 'Ohori')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nJOIN inst AS t4 ON t2.instid = t4.instid\nWHERE t4.country = 'Japan'\n  AND t2.authorder = 1\n  AND t1.lname = 'Ohori'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0016", "sql1": "\nSELECT DISTINCT `n` AS `count_distinct_t1_title_`\nFROM\n  (SELECT `authid`,\n          `paperid`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`instid` AS `instid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`country` AS `country`,\n                `LHS`.`paperid` AS `paperid`,\n                `LHS`.`title` AS `title`,\n                `RHS`.`authid` AS `authid`,\n                `RHS`.`authorder` AS `authorder`\n         FROM\n           (SELECT `LHS`.`instid` AS `instid`,\n                   `LHS`.`name` AS `name`,\n                   `LHS`.`country` AS `country`,\n                   `RHS`.`paperid` AS `paperid`,\n                   `RHS`.`title` AS `title`\n            FROM `inst` AS `LHS`\n            CROSS JOIN `papers` AS `RHS`) AS `LHS`\n         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                                 AND `LHS`.`paperid` = `RHS`.`paperid`))\n      WHERE (`name` = 'University of Pennsylvania'))\n   GROUP BY authid,\n            paperid)\nORDER BY count_distinct_t1_title_\n", "sql2": "SELECT count(DISTINCT t1.title)\nFROM papers AS t1\nJOIN authorship AS t2 ON t1.paperid = t2.paperid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'University of Pennsylvania'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0031", "sql1": "\nSELECT fname\nFROM authors\nORDER BY fname\n", "sql2": "SELECT fname\nFROM authors\nORDER BY fname", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0007", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`authid` AS `authid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`authid` AS `authid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `inst` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `authors`\n      WHERE (`fname` = 'Matthias'\n             OR `lname` = 'Blume')) AS RHS ON (LHS.authid = RHS.authid))\nORDER BY name\n", "sql2": "SELECT DISTINCT t3.name\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t1.fname = 'Matthias'\n  AND t1.lname = 'Blume'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0011", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`title` = 'Binders Unbound')\nORDER BY lname\n", "sql2": "SELECT t1.lname\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t3.title = 'Binders Unbound'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0010", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`instid` AS `instid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`country` AS `country`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`instid` AS `instid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `authors` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `inst`\n      WHERE (`name` = 'Google')) AS RHS ON (LHS.instid = RHS.instid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT t1.fname,\n                t1.lname\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'Google'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0006", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `authid`,\n          `authorder`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`paperid` AS `paperid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`authid` AS `authid`,\n             `LHS`.`instid` AS `instid`,\n             `LHS`.`authorder` AS `authorder`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`\n      FROM\n        (SELECT `LHS`.`paperid` AS `paperid`,\n                `LHS`.`title` AS `title`,\n                `RHS`.`authid` AS `authid`,\n                `RHS`.`instid` AS `instid`,\n                `RHS`.`authorder` AS `authorder`\n         FROM `papers` AS `LHS`\n         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `authors`\n         WHERE (`fname` != 'Atsushi'\n                OR `lname` = 'Ohori')) AS RHS ON (LHS.authid = RHS.authid))\n   GROUP BY authid,\n            authorder)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Atsushi'\n  AND t1.lname = 'Ohori'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/icfp_1/0030", "sql1": "\nSELECT `lname`\nFROM `authors`\nWHERE (`fname` = 'Amal')\nORDER BY lname\n", "sql2": "SELECT lname\nFROM authors\nWHERE fname = 'Amal'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0009", "sql1": "\nSELECT `date_test_taken`\nFROM `student_tests_taken`\nWHERE (`test_result` = 'Pass')\nORDER BY date_test_taken\n", "sql2": "SELECT date_test_taken\nFROM Student_Tests_Taken\nWHERE test_result = 'Pass'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0025", "sql1": "\nSELECT subject_id,\n       subject_name,\n       n AS count___\nFROM\n  (SELECT LHS.subject_id AS subject_id,\n          LHS.n AS n,\n          RHS.subject_name AS subject_name\n   FROM\n     (SELECT subject_id,\n             COUNT(*) AS n\n      FROM courses\n      GROUP BY subject_id) AS LHS\n   INNER JOIN subjects AS RHS ON (LHS.subject_id = RHS.subject_id))\nORDER BY subject_id\n", "sql2": "SELECT T1.subject_id,\n       T2.subject_name,\n       COUNT(*)\nFROM Courses AS T1\nJOIN Subjects AS T2 ON T1.subject_id = T2.subject_id\nGROUP BY T1.subject_id\nORDER BY COUNT(*) ASC", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0033", "sql1": "\nSELECT `date_of_enrolment`,\n       `date_of_completion`\nFROM\n  (SELECT `LHS`.`student_id` AS `student_id`,\n          `LHS`.`date_of_registration` AS `date_of_registration`,\n          `LHS`.`date_of_latest_logon` AS `date_of_latest_logon`,\n          `LHS`.`login_name` AS `login_name`,\n          `LHS`.`password` AS `password`,\n          `LHS`.`personal_name` AS `personal_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`family_name` AS `family_name`,\n          `RHS`.`registration_id` AS `registration_id`,\n          `RHS`.`course_id` AS `course_id`,\n          `RHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `RHS`.`date_of_completion` AS `date_of_completion`\n   FROM `students` AS `LHS`\n   INNER JOIN `student_course_enrolment` AS `RHS` ON (`LHS`.`student_id` = `RHS`.`student_id`))\nWHERE (`personal_name` = 'Karson')\nORDER BY date_of_enrolment\n", "sql2": "SELECT T1.date_of_enrolment,\n       T1.date_of_completion\nFROM Student_Course_Enrolment AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.personal_name = 'Karson'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0005", "sql1": "\nSELECT login_name,\n       family_name\nFROM course_authors_and_tutors\nORDER BY login_name\n", "sql2": "SELECT login_name,\n       family_name\nFROM Course_Authors_and_Tutors", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0029", "sql1": "\nSELECT course_name AS course_description,\n       course_description AS course_name\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.author_id AS author_id,\n          LHS.subject_id AS subject_id,\n          LHS.course_name AS course_name,\n          LHS.course_description AS course_description,\n          RHS.n AS n\n   FROM courses AS LHS\n   LEFT JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM student_course_enrolment\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nWHERE (n > 2)\nORDER BY course_description\n", "sql2": "SELECT T1.course_description,\n       T1.course_name\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name\nHAVING COUNT(*) > 2", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0004", "sql1": "\nSELECT address_line_1\nFROM course_authors_and_tutors\nORDER BY address_line_1\n", "sql2": "SELECT address_line_1\nFROM Course_Authors_and_Tutors", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0012", "sql1": "\nSELECT `date_of_latest_logon`\nFROM `students`\nWHERE (`family_name` = 'Jaskolski'\n       OR `family_name` = 'Langosh')\nORDER BY date_of_latest_logon\n", "sql2": "SELECT date_of_latest_logon\nFROM Students\nWHERE family_name = 'Jaskolski'\n  OR family_name = 'Langosh'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0032", "sql1": "\nSELECT `date_of_completion`\nFROM\n  (SELECT `LHS`.`registration_id` AS `registration_id`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`course_id` AS `course_id`,\n          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `LHS`.`date_of_completion` AS `date_of_completion`,\n          `RHS`.`date_test_taken` AS `date_test_taken`,\n          `RHS`.`test_result` AS `test_result`\n   FROM `student_course_enrolment` AS `LHS`\n   INNER JOIN `student_tests_taken` AS `RHS` ON (`LHS`.`registration_id` = `RHS`.`registration_id`))\nWHERE (`test_result` = 'Fail')\nORDER BY date_of_completion\n", "sql2": "SELECT T1.date_of_completion\nFROM Student_Course_Enrolment AS T1\nJOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id\nWHERE T2.test_result = 'Fail'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0024", "sql1": "\nSELECT subject_id,\n       subject_name,\n       n AS count___\nFROM\n  (SELECT LHS.subject_id AS subject_id,\n          LHS.n AS n,\n          RHS.subject_name AS subject_name\n   FROM\n     (SELECT subject_id,\n             COUNT(*) AS n\n      FROM courses\n      GROUP BY subject_id) AS LHS\n   INNER JOIN subjects AS RHS ON (LHS.subject_id = RHS.subject_id))\nORDER BY subject_id\n", "sql2": "SELECT T1.subject_id,\n       T2.subject_name,\n       COUNT(*)\nFROM Courses AS T1\nJOIN Subjects AS T2 ON T1.subject_id = T2.subject_id\nGROUP BY T1.subject_id", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_course_id_\nFROM student_course_enrolment\nORDER BY count_course_id_\n", "sql2": "SELECT count(course_id)\nFROM Student_Course_Enrolment", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0015", "sql1": "\nSELECT author_id,\n       author_tutor_atb,\n       login_name,\n       password,\n       personal_name,\n       middle_name,\n       family_name,\n       gender_mf,\n       address_line_1\nFROM course_authors_and_tutors\nORDER BY author_id\n", "sql2": "SELECT *\nFROM Course_Authors_and_Tutors\nORDER BY personal_name", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0003", "sql1": "\nSELECT `address_line_1`\nFROM `course_authors_and_tutors`\nWHERE (`personal_name` = 'Cathrine')\nORDER BY address_line_1\n", "sql2": "SELECT address_line_1\nFROM Course_Authors_and_Tutors\nWHERE personal_name = 'Cathrine'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0019", "sql1": "\nSELECT `address_line_1`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`author_id` AS `author_id`,\n          `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`course_name` AS `course_name`,\n          `LHS`.`course_description` AS `course_description`,\n          `RHS`.`author_tutor_atb` AS `author_tutor_atb`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`,\n          `RHS`.`personal_name` AS `personal_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`family_name` AS `family_name`,\n          `RHS`.`gender_mf` AS `gender_mf`,\n          `RHS`.`address_line_1` AS `address_line_1`\n   FROM\n     (SELECT *\n      FROM `courses`\n      WHERE (`course_name` = 'operating system'\n             OR `course_name` = 'data structure')) AS LHS\n   LEFT JOIN course_authors_and_tutors AS RHS ON (LHS.author_id = RHS.author_id))\nORDER BY address_line_1\n", "sql2": "SELECT T1.address_line_1\nFROM Course_Authors_and_Tutors AS T1\nJOIN Courses AS T2 ON T1.author_id = T2.author_id\nWHERE T2.course_name = 'operating system'\n  OR T2.course_name = 'data structure'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0023", "sql1": "\nSELECT `course_name`,\n       `course_description`\nFROM\n  (SELECT `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`subject_name` AS `subject_name`,\n          `RHS`.`course_id` AS `course_id`,\n          `RHS`.`author_id` AS `author_id`,\n          `RHS`.`course_name` AS `course_name`,\n          `RHS`.`course_description` AS `course_description`\n   FROM `subjects` AS `LHS`\n   LEFT JOIN `courses` AS `RHS` ON (`LHS`.`subject_id` = `RHS`.`subject_id`))\nWHERE (`subject_name` = 'Computer Science')\nORDER BY course_name\n", "sql2": "SELECT T1.course_name,\n       T1.course_description\nFROM Courses AS T1\nJOIN Subjects AS T2 ON T1.subject_id = T2.subject_id\nWHERE T2.subject_name = 'Computer Science'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0034", "sql1": "\nSELECT `date_of_enrolment`,\n       `date_of_completion`\nFROM\n  (SELECT `LHS`.`registration_id` AS `registration_id`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`course_id` AS `course_id`,\n          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `LHS`.`date_of_completion` AS `date_of_completion`,\n          `RHS`.`date_of_registration` AS `date_of_registration`,\n          `RHS`.`date_of_latest_logon` AS `date_of_latest_logon`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`,\n          `RHS`.`personal_name` AS `personal_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`family_name` AS `family_name`\n   FROM `student_course_enrolment` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `students`\n      WHERE (`family_name` = 'Zieme'\n             AND `personal_name` = 'Bernie')) AS RHS ON (LHS.student_id = RHS.student_id))\nORDER BY date_of_enrolment\n", "sql2": "SELECT T1.date_of_enrolment,\n       T1.date_of_completion\nFROM Student_Course_Enrolment AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.family_name = 'Zieme'\n  AND T2.personal_name = 'Bernie'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0022", "sql1": "\nSELECT `course_name`\nFROM\n  (SELECT *\n   FROM `courses` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `course_authors_and_tutors`\n           WHERE (`personal_name` != 'Julio')) AS RHS\n        WHERE (LHS.author_id = RHS.author_id) ))\nORDER BY course_name\n", "sql2": "SELECT T2.course_name\nFROM Course_Authors_and_Tutors AS T1\nJOIN Courses AS T2 ON T1.author_id = T2.author_id\nWHERE T1.personal_name = 'Julio'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0018", "sql1": "\nSELECT `login_name`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`author_id` AS `author_id`,\n          `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`course_name` AS `course_name`,\n          `LHS`.`course_description` AS `course_description`,\n          `RHS`.`author_tutor_atb` AS `author_tutor_atb`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`,\n          `RHS`.`personal_name` AS `personal_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`family_name` AS `family_name`,\n          `RHS`.`gender_mf` AS `gender_mf`,\n          `RHS`.`address_line_1` AS `address_line_1`\n   FROM\n     (SELECT *\n      FROM `courses`\n      WHERE (`course_name` = 'advanced database')) AS LHS\n   LEFT JOIN course_authors_and_tutors AS RHS ON (LHS.author_id = RHS.author_id))\nORDER BY login_name\n", "sql2": "SELECT T1.login_name\nFROM Course_Authors_and_Tutors AS T1\nJOIN Courses AS T2 ON T1.author_id = T2.author_id\nWHERE T2.course_name = 'advanced database'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0038", "sql1": "\nSELECT personal_name\nFROM\n  (SELECT *\n   FROM students AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_course_enrolment AS RHS\n        WHERE (LHS.student_id = RHS.student_id) ))\nORDER BY personal_name\n", "sql2": "SELECT personal_name\nFROM Students\nEXCEPT\nSELECT T1.personal_name\nFROM Students AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0002", "sql1": "\nSELECT `course_name` AS `course_description`\nFROM `courses`\nWHERE (`course_name` = 'database')\nORDER BY course_description\n", "sql2": "SELECT course_description\nFROM COURSES\nWHERE course_name = 'database'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0014", "sql1": "\nSELECT subject_name\nFROM subjects\nORDER BY subject_name\n", "sql2": "SELECT subject_name\nFROM SUBJECTS", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM courses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COURSES", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0017", "sql1": "\nSELECT test_result,\n       n AS count___\nFROM\n  (SELECT test_result,\n          COUNT(*) AS n\n   FROM student_tests_taken\n   GROUP BY test_result)\nORDER BY test_result\n", "sql2": "SELECT test_result,\n       COUNT(*)\nFROM Student_Tests_Taken\nGROUP BY test_result\nORDER BY COUNT(*) DESC", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0016", "sql1": "\nSELECT personal_name,\n       family_name\nFROM students\nORDER BY personal_name\n", "sql2": "SELECT personal_name,\n       family_name\nFROM Students\nORDER BY family_name", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0031", "sql1": "\nSELECT `date_of_enrolment`\nFROM\n  (SELECT `LHS`.`registration_id` AS `registration_id`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`course_id` AS `course_id`,\n          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `LHS`.`date_of_completion` AS `date_of_completion`,\n          `RHS`.`date_test_taken` AS `date_test_taken`,\n          `RHS`.`test_result` AS `test_result`\n   FROM `student_course_enrolment` AS `LHS`\n   INNER JOIN `student_tests_taken` AS `RHS` ON (`LHS`.`registration_id` = `RHS`.`registration_id`))\nWHERE (`test_result` = 'Pass')\nORDER BY date_of_enrolment\n", "sql2": "SELECT T1.date_of_enrolment\nFROM Student_Course_Enrolment AS T1\nJOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id\nWHERE T2.test_result = 'Pass'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0027", "sql1": "\nSELECT course_name\nFROM\n  (SELECT registration_id,\n          student_id,\n          course_id,\n          date_of_enrolment,\n          date_of_completion,\n          course_id_other,\n          course_name,\n          course_description,\n          author_id,\n          registration_id AS subject_id\n   FROM\n     (SELECT registration_id,\n             student_id,\n             course_id,\n             date_of_enrolment,\n             date_of_completion,\n             course_id_other,\n             course_name,\n             course_description,\n             course_id AS author_id\n      FROM\n        (SELECT LHS.registration_id AS registration_id,\n                LHS.student_id AS student_id,\n                LHS.course_id AS course_id,\n                LHS.date_of_enrolment AS date_of_enrolment,\n                LHS.date_of_completion AS date_of_completion,\n                RHS.course_id AS course_id_other,\n                RHS.course_name AS course_name,\n                RHS.course_description AS course_description\n         FROM student_course_enrolment AS LHS\n         INNER JOIN courses AS RHS ON (LHS.course_id = RHS.author_id\n                                          AND LHS.registration_id = RHS.subject_id))))\nORDER BY course_name\n", "sql2": "SELECT T1.course_name\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_\nFROM student_course_enrolment\nORDER BY count_distinct_student_id_\n", "sql2": "SELECT count(DISTINCT student_id)\nFROM Student_Course_Enrolment", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0011", "sql1": "\nSELECT `login_name`\nFROM `students`\nWHERE (`family_name` = 'Ward')\nORDER BY login_name\n", "sql2": "SELECT login_name\nFROM Students\nWHERE family_name = 'Ward'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `student_tests_taken`\nWHERE (`test_result` = 'Fail')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student_Tests_Taken\nWHERE test_result = 'Fail'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0006", "sql1": "\nSELECT date_of_enrolment,\n       date_of_completion\nFROM student_course_enrolment\nORDER BY date_of_enrolment\n", "sql2": "SELECT date_of_enrolment,\n       date_of_completion\nFROM Student_Course_Enrolment", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_learning/0026", "sql1": "\nSELECT `date_of_enrolment`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`author_id` AS `author_id`,\n          `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`course_name` AS `course_name`,\n          `LHS`.`course_description` AS `course_description`,\n          `RHS`.`registration_id` AS `registration_id`,\n          `RHS`.`student_id` AS `student_id`,\n          `RHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `RHS`.`date_of_completion` AS `date_of_completion`\n   FROM `courses` AS `LHS`\n   INNER JOIN `student_course_enrolment` AS `RHS` ON (`LHS`.`course_id` = `RHS`.`course_id`))\nWHERE (`course_name` = 'Spanish')\nORDER BY date_of_enrolment\n", "sql2": "SELECT T2.date_of_enrolment\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nWHERE T1.course_name = 'Spanish'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0009", "sql1": "\nSELECT `customer_name`,\n       `customer_phone`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`customer_email` AS `customer_email`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`date_from` AS `date_from`,\n          `LHS`.`address_type` AS `address_type`,\n          `LHS`.`date_to` AS `date_to`,\n          `RHS`.`address_details` AS `address_details`,\n          `RHS`.`city` AS `city`,\n          `RHS`.`zip_postcode` AS `zip_postcode`,\n          `RHS`.`state_province_county` AS `state_province_county`,\n          `RHS`.`country` AS `country`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`payment_method` AS `payment_method`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`customer_phone` AS `customer_phone`,\n             `LHS`.`customer_email` AS `customer_email`,\n             `LHS`.`date_became_customer` AS `date_became_customer`,\n             `RHS`.`address_id` AS `address_id`,\n             `RHS`.`date_from` AS `date_from`,\n             `RHS`.`address_type` AS `address_type`,\n             `RHS`.`date_to` AS `date_to`\n      FROM `customers` AS `LHS`\n      INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `addresses`\n      WHERE (`state_province_county` = 'California')) AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name,\n       t1.customer_phone\nFROM customers AS t1\nJOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id\nJOIN addresses AS t3 ON t2.address_id = t3.address_id\nWHERE t3.state_province_county = 'California'", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0013", "sql1": "\nSELECT payment_method\nFROM\n  (SELECT customer_id,\n          payment_method,\n          customer_name,\n          customer_phone,\n          customer_email,\n          date_became_customer,\n          customer_id AS n,\n          payment_method_other,\n          customer_name_other,\n          customer_phone_other,\n          customer_email_other,\n          date_became_customer_other\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.payment_method AS payment_method,\n             LHS.customer_name AS customer_name,\n             LHS.customer_phone AS customer_phone,\n             LHS.customer_email AS customer_email,\n             LHS.date_became_customer AS date_became_customer,\n             LHS.n AS n,\n             RHS.payment_method AS payment_method_other,\n             RHS.customer_name AS customer_name_other,\n             RHS.customer_phone AS customer_phone_other,\n             RHS.customer_email AS customer_email_other,\n             RHS.date_became_customer AS date_became_customer_other\n      FROM\n        (SELECT customer_id,\n                payment_method,\n                customer_name,\n                customer_phone,\n                customer_email,\n                date_became_customer,\n                COUNT(*) OVER () AS n\n         FROM customers) AS LHS\n      INNER JOIN\n        (SELECT customer_id,\n                payment_method,\n                customer_name,\n                customer_phone,\n                customer_email,\n                date_became_customer,\n                COUNT(*) OVER () AS n\n         FROM customers) AS RHS ON (LHS.customer_id = RHS.n\n                                       AND LHS.n = RHS.customer_id)))\nORDER BY payment_method\n", "sql2": "SELECT payment_method\nFROM Customers\nGROUP BY payment_method\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0005", "sql1": "\nSELECT truck_details\nFROM trucks\nORDER BY truck_details\n", "sql2": "SELECT truck_details\nFROM trucks\nORDER BY truck_licence_number", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0004", "sql1": "\nSELECT n_distinct AS count_distinct_payment_method_\nFROM\n  (SELECT COUNT(DISTINCT payment_method) AS n_distinct\n   FROM customers)\nORDER BY count_distinct_payment_method_\n", "sql2": "SELECT count(DISTINCT payment_method)\nFROM customers", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0012", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM customers\n      ORDER BY date_became_customer)\n   LIMIT 5)\n", "sql2": "SELECT customer_name\nFROM Customers\nORDER BY date_became_customer\nLIMIT 5", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0008", "sql1": "\nSELECT `customer_email`,\n       `customer_name`\nFROM `customers`\nWHERE (`payment_method` = 'Visa')\nORDER BY customer_email\n", "sql2": "SELECT customer_email,\n       customer_name\nFROM customers\nWHERE payment_method = 'Visa'", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0015", "sql1": "\nSELECT route_name\nFROM\n  (SELECT LHS.route_id AS route_id,\n          LHS.route_name AS route_name,\n          LHS.other_route_details AS other_route_details\n   FROM delivery_routes AS LHS\n   INNER JOIN\n     (SELECT COUNT(*) AS n\n      FROM\n        (SELECT location_address_id,\n                COUNT(*) AS n\n         FROM delivery_route_locations\n         GROUP BY location_address_id)) AS RHS ON (LHS.route_id = RHS.n))\nORDER BY route_name\n", "sql2": "SELECT t1.route_name\nFROM Delivery_Routes AS t1\nJOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id\nGROUP BY t1.route_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0003", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM customers)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0014", "sql1": "\nSELECT route_name\nFROM delivery_routes\nORDER BY route_name\n", "sql2": "SELECT route_name\nFROM Delivery_Routes\nORDER BY route_name", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0001", "sql1": "\nSELECT `actual_order_id`\nFROM `actual_orders`\nWHERE (`order_status_code` = 'Success')\nORDER BY actual_order_id\n", "sql2": "SELECT actual_order_id\nFROM actual_orders\nWHERE order_status_code = 'Success'", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0016", "sql1": "\nSELECT DISTINCT state_province_county,\n                n AS count___\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.address_details AS address_details,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          LHS.customer_id AS customer_id,\n          LHS.date_from AS date_from,\n          LHS.address_type AS address_type,\n          LHS.date_to AS date_to,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.address_id AS address_id,\n             LHS.address_details AS address_details,\n             LHS.city AS city,\n             LHS.zip_postcode AS zip_postcode,\n             LHS.state_province_county AS state_province_county,\n             LHS.country AS country,\n             RHS.customer_id AS customer_id,\n             RHS.date_from AS date_from,\n             RHS.address_type AS address_type,\n             RHS.date_to AS date_to\n      FROM addresses AS LHS\n      INNER JOIN customer_addresses AS RHS ON (LHS.address_id = RHS.address_id)) AS LHS\n   INNER JOIN\n     (SELECT address_id,\n             COUNT(*) AS n\n      FROM customer_addresses\n      GROUP BY address_id) AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY state_province_county\n", "sql2": "SELECT t2.state_province_county,\n       count(*)\nFROM customer_addresses AS t1\nJOIN addresses AS t2 ON t1.address_id = t2.address_id\nGROUP BY t2.state_province_county", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0011", "sql1": "\nSELECT customer_name,\n       customer_phone,\n       customer_email\nFROM customers\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone,\n       customer_email\nFROM Customers\nORDER BY date_became_customer", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0010", "sql1": "\nSELECT state_province_county\nFROM\n  (SELECT *\n   FROM addresses AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT address_id,\n                  address_details,\n                  city,\n                  zip_postcode,\n                  state_province_county,\n                  country,\n                  employee_id,\n                  employee_name,\n                  employee_phone,\n                  address_id AS employee_address_id\n           FROM\n             (SELECT LHS.address_id AS address_id,\n                     LHS.address_details AS address_details,\n                     LHS.city AS city,\n                     LHS.zip_postcode AS zip_postcode,\n                     LHS.state_province_county AS state_province_county,\n                     LHS.country AS country,\n                     RHS.employee_id AS employee_id,\n                     RHS.employee_name AS employee_name,\n                     RHS.employee_phone AS employee_phone\n              FROM addresses AS LHS\n              INNER JOIN employees AS RHS ON (LHS.address_id = RHS.employee_address_id))) AS RHS\n        WHERE (LHS.city = RHS.city\n               AND LHS.state_province_county = RHS.state_province_county) ))\nORDER BY state_province_county\n", "sql2": "SELECT state_province_county\nFROM addresses\nWHERE address_id NOT IN\n    (SELECT employee_address_id\n     FROM Employees)", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_deliveries/0006", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM products\n      ORDER BY product_name)\n   LIMIT 1)\n", "sql2": "SELECT product_name\nFROM products\nORDER BY product_price DESC\nLIMIT 1", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0009", "sql1": "\nSELECT day_number,\n       calendar_date AS date_stored\nFROM\n  (SELECT LHS.calendar_date AS calendar_date,\n          LHS.day_number AS day_number,\n          RHS.document_id AS document_id,\n          RHS.document_type_code AS document_type_code,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM ref_calendar AS LHS\n   INNER JOIN all_documents AS RHS ON (LHS.calendar_date = RHS.date_stored))\nORDER BY day_number\n", "sql2": "SELECT T2.day_Number,\n       T1.Date_Stored\nFROM All_documents AS T1\nJOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0025", "sql1": "\nSELECT role_code\nFROM\n  (SELECT other_details,\n          role_code,\n          COUNT(*) AS n\n   FROM employees\n   GROUP BY other_details,\n            role_code)\nWHERE (n > 3)\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM Employees\nGROUP BY role_code\nHAVING count(*) >= 3", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0033", "sql1": "\nSELECT `date_in_location_from`,\n       `date_in_locaton_to`\nFROM\n  (SELECT *\n   FROM `document_locations` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `all_documents`\n           WHERE (`document_name` != 'Robin CV')) AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY date_in_location_from\n", "sql2": "SELECT T1.date_in_location_from,\n       T1.date_in_locaton_to\nFROM Document_locations AS T1\nJOIN All_documents AS T2 ON T1.document_id = T2.document_id\nWHERE T2.document_name = 'Robin CV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0013", "sql1": "\nSELECT `location_name`,\n       `location_description`\nFROM `ref_locations`\nWHERE (`location_code` = 'x')\nORDER BY location_name\n", "sql2": "SELECT location_name,\n       location_description\nFROM Ref_locations\nWHERE location_code = 'x'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0005", "sql1": "\nSELECT `document_type_name`,\n       `document_type_description`\nFROM `ref_document_types`\nWHERE (`document_type_code` = 'RV')\nORDER BY document_type_name\n", "sql2": "SELECT document_type_name,\n       document_type_description\nFROM Ref_document_types\nWHERE document_type_code = 'RV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0029", "sql1": "\nSELECT `employee_id`\nFROM\n  (SELECT `LHS`.`role_code` AS `role_code`,\n          `LHS`.`role_name` AS `role_name`,\n          `LHS`.`role_description` AS `role_description`,\n          `LHS`.`employee_id` AS `employee_id`,\n          `LHS`.`employee_name` AS `employee_name`,\n          `LHS`.`gender_mfu` AS `gender_mfu`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`other_details` AS `other_details`\n   FROM\n     (SELECT `LHS`.`role_code` AS `role_code`,\n             `LHS`.`role_name` AS `role_name`,\n             `LHS`.`role_description` AS `role_description`,\n             `RHS`.`employee_id` AS `employee_id`,\n             `RHS`.`employee_name` AS `employee_name`,\n             `RHS`.`gender_mfu` AS `gender_mfu`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `roles` AS `LHS`\n      INNER JOIN `employees` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `roles`\n      WHERE (`role_name` = 'Human Resource'\n             OR `role_name` = 'Manager')) AS RHS ON (LHS.role_code = RHS.role_code\n                                                     AND LHS.role_name = RHS.role_name\n                                                     AND LHS.role_description = RHS.role_description))\nORDER BY employee_id\n", "sql2": "SELECT T1.employee_id\nFROM Employees AS T1\nJOIN ROLES AS T2 ON T1.role_code = T2.role_code\nWHERE T2.role_name = 'Human Resource'\n  OR T2.role_name = 'Manager'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0028", "sql1": "\nSELECT `employee_name`\nFROM\n  (SELECT `LHS`.`role_code` AS `role_code`,\n          `LHS`.`role_name` AS `role_name`,\n          `LHS`.`role_description` AS `role_description`,\n          `RHS`.`employee_id` AS `employee_id`,\n          `RHS`.`employee_name` AS `employee_name`,\n          `RHS`.`gender_mfu` AS `gender_mfu`,\n          `RHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `roles` AS `LHS`\n   LEFT JOIN `employees` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`))\nWHERE (`role_name` = 'Editor')\nORDER BY employee_name\n", "sql2": "SELECT T1.employee_name\nFROM Employees AS T1\nJOIN ROLES AS T2 ON T1.role_code = T2.role_code\nWHERE T2.role_name = 'Editor'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0004", "sql1": "\nSELECT document_type_code,\n       document_type_name\nFROM ref_document_types\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       document_type_name\nFROM Ref_document_types", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0012", "sql1": "\nSELECT location_code,\n       location_name\nFROM ref_locations\nORDER BY location_code\n", "sql2": "SELECT location_code,\n       location_name\nFROM Ref_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0032", "sql1": "\nSELECT location_code,\n       date_in_location_from,\n       date_in_locaton_to\nFROM document_locations\nORDER BY location_code\n", "sql2": "SELECT location_code,\n       date_in_location_from,\n       date_in_locaton_to\nFROM Document_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0008", "sql1": "\nSELECT `date_stored`\nFROM `all_documents`\nWHERE (`document_name` = 'Marry CV')\nORDER BY date_stored\n", "sql2": "SELECT date_stored\nFROM All_documents\nWHERE Document_name = 'Marry CV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0042", "sql1": "\nSELECT DISTINCT destruction_authorised_by_employee_id\nFROM documents_to_be_destroyed\nORDER BY destruction_authorised_by_employee_id\n", "sql2": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID\nFROM Documents_to_be_destroyed", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0015", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM roles\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ROLES", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ref_document_types\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_document_types", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0039", "sql1": "\nSELECT destruction_authorised_by_employee_id,\n       n AS count___\nFROM\n  (SELECT destruction_authorised_by_employee_id,\n          other_details,\n          COUNT(*) AS n\n   FROM documents_to_be_destroyed\n   GROUP BY destruction_authorised_by_employee_id,\n            other_details)\nORDER BY destruction_authorised_by_employee_id\n", "sql2": "SELECT Destruction_Authorised_by_Employee_ID,\n       count(*)\nFROM Documents_to_be_destroyed\nGROUP BY Destruction_Authorised_by_Employee_ID", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0019", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM employees)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employees", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0023", "sql1": "\nSELECT role_code,\n       n AS count___\nFROM\n  (SELECT role_code,\n          COUNT(*) AS n\n   FROM employees\n   GROUP BY role_code)\nORDER BY role_code\n", "sql2": "SELECT role_code,\n       count(*)\nFROM Employees\nGROUP BY role_code", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0035", "sql1": "\nSELECT location_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT document_id,\n                location_code,\n                date_in_location_from,\n                date_in_locaton_to,\n                COUNT(*) OVER () AS n\n         FROM document_locations)\n      ORDER BY location_code DESC)\n   LIMIT 1)\n", "sql2": "SELECT location_code\nFROM Document_locations\nGROUP BY location_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0034", "sql1": "\nSELECT location_code,\n       n AS count___\nFROM\n  (SELECT location_code,\n          COUNT(*) AS n\n   FROM document_locations\n   GROUP BY location_code)\nORDER BY location_code\n", "sql2": "SELECT location_code,\n       count(*)\nFROM Document_locations\nGROUP BY location_code", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0022", "sql1": "\nSELECT `employee_name`\nFROM `employees`\nWHERE (`role_code` = 'HR')\nORDER BY employee_name\n", "sql2": "SELECT employee_name\nFROM Employees\nWHERE role_code = 'HR'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0018", "sql1": "\nSELECT `role_description`\nFROM `roles`\nWHERE (`role_name` = 'Proof Reader')\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM ROLES\nWHERE role_name = 'Proof Reader'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0002", "sql1": "\nSELECT calendar_date,\n       day_number\nFROM ref_calendar\nORDER BY calendar_date\n", "sql2": "SELECT calendar_date,\n       day_Number\nFROM Ref_calendar", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0014", "sql1": "\nSELECT `location_code`\nFROM `ref_locations`\nWHERE (`location_name` = 'Canada')\nORDER BY location_code\n", "sql2": "SELECT location_code\nFROM Ref_locations\nWHERE location_name = 'Canada'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0043", "sql1": "\nSELECT DISTINCT destroyed_by_employee_id\nFROM documents_to_be_destroyed\nORDER BY destroyed_by_employee_id\n", "sql2": "SELECT DISTINCT Destroyed_by_Employee_ID\nFROM Documents_to_be_destroyed", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ref_calendar\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_calendar", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0017", "sql1": "\nSELECT `role_name`,\n       `role_description`\nFROM `roles`\nWHERE (`role_code` = 'MG')\nORDER BY role_name\n", "sql2": "SELECT role_name,\n       role_description\nFROM ROLES\nWHERE role_code = 'MG'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0040", "sql1": "\nSELECT destroyed_by_employee_id,\n       n AS count___\nFROM\n  (SELECT destroyed_by_employee_id,\n          COUNT(*) AS n\n   FROM documents_to_be_destroyed\n   GROUP BY destroyed_by_employee_id)\nORDER BY destroyed_by_employee_id\n", "sql2": "SELECT Destroyed_by_Employee_ID,\n       count(*)\nFROM Documents_to_be_destroyed\nGROUP BY Destroyed_by_Employee_ID", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0021", "sql1": "\nSELECT `employee_id`\nFROM `employees`\nWHERE (`employee_name` = 'Ebba')\nORDER BY employee_id\n", "sql2": "SELECT employee_ID\nFROM Employees\nWHERE employee_name = 'Ebba'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0020", "sql1": "\nSELECT `employee_name`,\n       `role_code`,\n       `date_of_birth`\nFROM `employees`\nWHERE (`employee_name` = 'Armani')\nORDER BY employee_name\n", "sql2": "SELECT employee_name,\n       role_code,\n       date_of_birth\nFROM Employees\nWHERE employee_Name = 'Armani'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0036", "sql1": "\nSELECT location_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT location_code,\n                COUNT(*) AS n\n         FROM document_locations\n         GROUP BY location_code)\n      ORDER BY n DESC)\n   LIMIT 3)\n", "sql2": "SELECT location_code\nFROM Document_locations\nGROUP BY location_code\nHAVING count(*) >= 3", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0016", "sql1": "\nSELECT role_code,\n       role_name,\n       role_description\nFROM roles\nORDER BY role_code\n", "sql2": "SELECT role_code,\n       role_name,\n       role_description\nFROM ROLES", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0031", "sql1": "\nSELECT `location_name`\nFROM\n  (SELECT `LHS`.`location_code` AS `location_code`,\n          `LHS`.`location_name` AS `location_name`,\n          `LHS`.`location_description` AS `location_description`,\n          `LHS`.`document_id` AS `document_id`,\n          `LHS`.`date_stored` AS `date_stored`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`document_name` AS `document_name`,\n          `LHS`.`document_description` AS `document_description`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`date_in_location_from` AS `date_in_location_from`,\n          `RHS`.`date_in_locaton_to` AS `date_in_locaton_to`\n   FROM\n     (SELECT `LHS`.`location_code` AS `location_code`,\n             `LHS`.`location_name` AS `location_name`,\n             `LHS`.`location_description` AS `location_description`,\n             `RHS`.`document_id` AS `document_id`,\n             `RHS`.`date_stored` AS `date_stored`,\n             `RHS`.`document_type_code` AS `document_type_code`,\n             `RHS`.`document_name` AS `document_name`,\n             `RHS`.`document_description` AS `document_description`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `ref_locations` AS `LHS`\n      CROSS JOIN `all_documents` AS `RHS`) AS `LHS`\n   INNER JOIN `document_locations` AS `RHS` ON (`LHS`.`location_code` = `RHS`.`location_code`\n                                                   AND `LHS`.`document_id` = `RHS`.`document_id`))\nWHERE (`document_name` = 'Robin CV')\nORDER BY location_name\n", "sql2": "SELECT T3.location_name\nFROM All_documents AS T1\nJOIN Document_locations AS T2 ON T1.document_id = T2.document_id\nJOIN Ref_locations AS T3 ON T2.location_code = T3.location_code\nWHERE T1.document_name = 'Robin CV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0027", "sql1": "\nSELECT `role_name`,\n       `role_description`\nFROM\n  (SELECT `LHS`.`employee_id` AS `employee_id`,\n          `LHS`.`role_code` AS `role_code`,\n          `LHS`.`employee_name` AS `employee_name`,\n          `LHS`.`gender_mfu` AS `gender_mfu`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`role_name` AS `role_name`,\n          `RHS`.`role_description` AS `role_description`\n   FROM `employees` AS `LHS`\n   LEFT JOIN `roles` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`))\nWHERE (`employee_name` = 'Ebba')\nORDER BY role_name\n", "sql2": "SELECT T2.role_name,\n       T2.role_description\nFROM Employees AS T1\nJOIN ROLES AS T2 ON T1.role_code = T2.role_code\nWHERE T1.employee_name = 'Ebba'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0007", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `all_documents`\nWHERE (`document_type_code` = 'CV'\n       OR `document_type_code` != 'BK')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM All_documents\nWHERE document_type_code = 'CV'\n  OR document_type_code = 'BK'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ref_locations\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0010", "sql1": "\nSELECT `document_type_name`\nFROM\n  (SELECT `LHS`.`document_id` AS `document_id`,\n          `LHS`.`date_stored` AS `date_stored`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`document_name` AS `document_name`,\n          `LHS`.`document_description` AS `document_description`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`document_type_name` AS `document_type_name`,\n          `RHS`.`document_type_description` AS `document_type_description`\n   FROM\n     (SELECT *\n      FROM `all_documents`\n      WHERE (`document_name` = 'How to read a book')) AS LHS\n   INNER JOIN ref_document_types AS RHS ON (LHS.document_type_code = RHS.document_type_code))\nORDER BY document_type_name\n", "sql2": "SELECT T2.document_type_name\nFROM All_documents AS T1\nJOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code\nWHERE T1.document_name = 'How to read a book'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0006", "sql1": "\nSELECT `document_type_code`\nFROM `ref_document_types`\nWHERE (`document_type_name` = 'Paper')\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Ref_document_types\nWHERE document_type_name = 'Paper'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Doc_Tracking_DB/0030", "sql1": "\nSELECT DISTINCT location_code\nFROM document_locations\nORDER BY location_code\n", "sql2": "SELECT DISTINCT location_code\nFROM Document_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0009", "sql1": "\nSELECT festival_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM festival_detail\n      ORDER BY YEAR DESC)\n   LIMIT 3)\n", "sql2": "SELECT Festival_Name\nFROM festival_detail\nORDER BY YEAR DESC\nLIMIT 3", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0013", "sql1": "\nSELECT `festival_name`\nFROM\n  (SELECT `LHS`.`festival_id` AS `festival_id`,\n          `LHS`.`festival_name` AS `festival_name`,\n          `LHS`.`chair_name` AS `chair_name`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`num_of_audience` AS `num_of_audience`,\n          `LHS`.`artwork_id` AS `artwork_id`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`result` AS `result`\n   FROM\n     (SELECT `LHS`.`festival_id` AS `festival_id`,\n             `LHS`.`festival_name` AS `festival_name`,\n             `LHS`.`chair_name` AS `chair_name`,\n             `LHS`.`location` AS `location`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`num_of_audience` AS `num_of_audience`,\n             `LHS`.`artwork_id` AS `artwork_id`,\n             `LHS`.`type` AS `type`,\n             `LHS`.`name` AS `name`,\n             `RHS`.`result` AS `result`\n      FROM\n        (SELECT `LHS`.`festival_id` AS `festival_id`,\n                `LHS`.`festival_name` AS `festival_name`,\n                `LHS`.`chair_name` AS `chair_name`,\n                `LHS`.`location` AS `location`,\n                `LHS`.`year` AS `year`,\n                `LHS`.`num_of_audience` AS `num_of_audience`,\n                `RHS`.`artwork_id` AS `artwork_id`,\n                `RHS`.`type` AS `type`,\n                `RHS`.`name` AS `name`\n         FROM `festival_detail` AS `LHS`\n         CROSS JOIN `artwork` AS `RHS`) AS `LHS`\n      INNER JOIN `nomination` AS `RHS` ON (`LHS`.`festival_id` = `RHS`.`festival_id`\n                                              AND `LHS`.`artwork_id` = `RHS`.`artwork_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `artwork`\n      WHERE (`type` = 'Program Talent Show')) AS RHS ON (LHS.artwork_id = RHS.artwork_id\n                                                         AND LHS.type = RHS.type\n                                                         AND LHS.name = RHS.name))\nORDER BY festival_name\n", "sql2": "SELECT T3.Festival_Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nWHERE T2.Type = 'Program Talent Show'", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0005", "sql1": "\nSELECT chair_name\nFROM festival_detail\nORDER BY chair_name\n", "sql2": "SELECT Chair_Name\nFROM festival_detail\nORDER BY YEAR ASC", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0004", "sql1": "\nSELECT festival_name,\n       LOCATION\nFROM festival_detail\nORDER BY festival_name\n", "sql2": "SELECT Festival_Name,\n       LOCATION\nFROM festival_detail", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0008", "sql1": "\nSELECT DISTINCT AVG(num_of_audience) OVER () AS avg_num_of_audience_\nFROM festival_detail\nORDER BY avg_num_of_audience_\n", "sql2": "SELECT avg(Num_of_Audience)\nFROM festival_detail", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0015", "sql1": "\nSELECT festival_id,\n       festival_name,\n       n AS count___\nFROM\n  (SELECT festival_id,\n          festival_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             LHS.artwork_id AS artwork_id,\n             LHS.type AS TYPE,\n             LHS.name AS name,\n             RHS.result AS RESULT\n      FROM\n        (SELECT LHS.festival_id AS festival_id,\n                LHS.festival_name AS festival_name,\n                LHS.chair_name AS chair_name,\n                LHS.location AS LOCATION,\n                LHS.year AS YEAR,\n                LHS.num_of_audience AS num_of_audience,\n                RHS.artwork_id AS artwork_id,\n                RHS.type AS TYPE,\n                RHS.name AS name\n         FROM festival_detail AS LHS\n         CROSS JOIN artwork AS RHS) AS LHS\n      INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                          AND LHS.artwork_id = RHS.artwork_id))\n   GROUP BY festival_id,\n            festival_name)\nORDER BY festival_id\n", "sql2": "SELECT T1.Festival_ID,\n       T3.Festival_Name,\n       COUNT(*)\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nGROUP BY T1.Festival_ID", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0003", "sql1": "\nSELECT `name`\nFROM `artwork`\nWHERE (`type` != 'Program Talent Show')\nORDER BY name\n", "sql2": "SELECT Name\nFROM artwork\nWHERE TYPE != 'Program Talent Show'", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0019", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artwork AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM nomination AS RHS\n        WHERE (LHS.artwork_id = RHS.artwork_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM Artwork\nWHERE Artwork_ID NOT IN\n    (SELECT Artwork_ID\n     FROM nomination)", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0018", "sql1": "\nSELECT YEAR\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT festival_id,\n                festival_name,\n                chair_name,\n                LOCATION,\n                YEAR,\n                num_of_audience,\n                COUNT(*) OVER () AS n\n         FROM festival_detail)\n      ORDER BY festival_name)\n   LIMIT 1)\n", "sql2": "SELECT YEAR\nFROM festival_detail\nGROUP BY YEAR\nHAVING COUNT(*) > 1", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0002", "sql1": "\nSELECT name\nFROM artwork\nORDER BY name\n", "sql2": "SELECT Name\nFROM artwork\nORDER BY Name ASC", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0014", "sql1": "\nSELECT DISTINCT festival_id,\n                festival_name\nFROM\n  (SELECT festival_id,\n          festival_name,\n          chair_name,\n          LOCATION,\n          YEAR,\n          num_of_audience,\n          artwork_id,\n          TYPE,\n          name,\n          RESULT,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             LHS.artwork_id AS artwork_id,\n             LHS.type AS TYPE,\n             LHS.name AS name,\n             RHS.result AS RESULT\n      FROM\n        (SELECT LHS.festival_id AS festival_id,\n                LHS.festival_name AS festival_name,\n                LHS.chair_name AS chair_name,\n                LHS.location AS LOCATION,\n                LHS.year AS YEAR,\n                LHS.num_of_audience AS num_of_audience,\n                RHS.artwork_id AS artwork_id,\n                RHS.type AS TYPE,\n                RHS.name AS name\n         FROM festival_detail AS LHS\n         CROSS JOIN artwork AS RHS) AS LHS\n      INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                          AND LHS.artwork_id = RHS.artwork_id)))\nWHERE (n >= 2)\nORDER BY festival_id\n", "sql2": "SELECT T1.Festival_ID,\n       T3.Festival_Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nGROUP BY T1.Festival_ID\nHAVING COUNT(*) >= 2", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM artwork\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artwork", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0017", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT name,\n                TYPE,\n                COUNT(*) AS n\n         FROM artwork\n         GROUP BY name,\n                  TYPE)\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT TYPE\nFROM artwork\nGROUP BY TYPE\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0021", "sql1": "\nSELECT DISTINCT SUM(num_of_audience) OVER () AS sum_num_of_audience_\nFROM festival_detail\nORDER BY sum_num_of_audience_\n", "sql2": "SELECT sum(Num_of_Audience)\nFROM festival_detail", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0020", "sql1": "\nSELECT num_of_audience\nFROM festival_detail\nWHERE (YEAR >= 2008\n       OR YEAR > 2010)\nORDER BY num_of_audience\n", "sql2": "SELECT Num_of_Audience\nFROM festival_detail\nWHERE YEAR = 2008\n  OR YEAR = 2010", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0016", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM artwork\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       COUNT(*)\nFROM artwork\nGROUP BY TYPE", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0007", "sql1": "\nSELECT festival_name\nFROM festival_detail\nWHERE (YEAR = 2007)\nORDER BY festival_name\n", "sql2": "SELECT Festival_Name\nFROM festival_detail\nWHERE YEAR = 2007", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0011", "sql1": "\nSELECT DISTINCT TYPE\nFROM\n  (SELECT LHS.artwork_id AS artwork_id,\n          LHS.type AS TYPE,\n          LHS.name AS name,\n          LHS.festival_id AS festival_id,\n          LHS.result AS RESULT,\n          RHS.festival_name AS festival_name,\n          RHS.chair_name AS chair_name,\n          RHS.location AS LOCATION,\n          RHS.year AS YEAR,\n          RHS.num_of_audience AS num_of_audience\n   FROM\n     (SELECT LHS.artwork_id AS artwork_id,\n             LHS.type AS TYPE,\n             LHS.name AS name,\n             RHS.festival_id AS festival_id,\n             RHS.result AS RESULT\n      FROM artwork AS LHS\n      INNER JOIN nomination AS RHS ON (LHS.artwork_id = RHS.artwork_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM festival_detail\n      WHERE (YEAR = 2007)) AS RHS ON (LHS.festival_id = RHS.festival_id))\nORDER BY TYPE\n", "sql2": "SELECT DISTINCT T2.Type\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nWHERE T3.Year = 2007", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0010", "sql1": "\nSELECT name,\n       festival_name\nFROM\n  (SELECT LHS.festival_id AS festival_id,\n          LHS.festival_name AS festival_name,\n          LHS.chair_name AS chair_name,\n          LHS.location AS LOCATION,\n          LHS.year AS YEAR,\n          LHS.num_of_audience AS num_of_audience,\n          LHS.artwork_id AS artwork_id,\n          LHS.type AS TYPE,\n          LHS.name AS name,\n          RHS.result AS RESULT\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             RHS.artwork_id AS artwork_id,\n             RHS.type AS TYPE,\n             RHS.name AS name\n      FROM festival_detail AS LHS\n      CROSS JOIN artwork AS RHS) AS LHS\n   INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                       AND LHS.artwork_id = RHS.artwork_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T3.Festival_Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entertainment_awards/0006", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM festival_detail\n      ORDER BY chair_name DESC)\n   LIMIT 1)\n", "sql2": "SELECT LOCATION\nFROM festival_detail\nORDER BY Num_of_Audience DESC\nLIMIT 1", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/department_store/0009", "sql1": "\nSELECT product_type_code,\n       meanproduct_price AS avg_product_price_\nFROM\n  (SELECT product_type_code,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_type_code)\nORDER BY product_type_code\n", "sql2": "SELECT product_type_code,\n       avg(product_price)\nFROM products\nGROUP BY product_type_code", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0044", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `products`\n         WHERE (`product_type_code` = 'Hardware'))\n      ORDER BY product_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT product_name\nFROM products\nWHERE product_type_code = 'Hardware'\nORDER BY product_price DESC\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0005", "sql1": "\nSELECT `staff_id`,\n       `staff_gender`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`department_id` AS `department_id`,\n          `LHS`.`date_assigned_from` AS `date_assigned_from`,\n          `LHS`.`job_title_code` AS `job_title_code`,\n          `LHS`.`date_assigned_to` AS `date_assigned_to`,\n          `RHS`.`staff_gender` AS `staff_gender`,\n          `RHS`.`staff_name` AS `staff_name`\n   FROM `staff_department_assignments` AS `LHS`\n   LEFT JOIN `staff` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`))\nWHERE (`job_title_code` = 'Department Manager')\nORDER BY staff_id\n", "sql2": "SELECT T1.staff_id,\n       T1.staff_gender\nFROM staff AS T1\nJOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.job_title_code = 'Department Manager'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0004", "sql1": "\nSELECT address_details\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.address_details AS address_details,\n          RHS.customer_id AS customer_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM addresses AS LHS\n   INNER JOIN customer_addresses AS RHS ON (LHS.address_id = RHS.address_id))\nWHERE (customer_id = 10)\nORDER BY address_details\n", "sql2": "SELECT T1.address_details\nFROM addresses AS T1\nJOIN customer_addresses AS T2 ON T1.address_id = T2.address_id\nWHERE T2.customer_id = 10", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0024", "sql1": "\nSELECT `staff_id`\nFROM\n  (SELECT `staff_id`,\n          `department_id`,\n          `date_assigned_from`,\n          `job_title_code`,\n          `date_assigned_to`,\n          MAX(`date_assigned_to`) OVER () AS `maxdate_assigned_to`\n   FROM `staff_department_assignments`)\nWHERE (`job_title_code` != 'Clerical Staff'\n       OR maxdate_assigned_to > date_assigned_to)\nORDER BY staff_id\n", "sql2": "SELECT staff_id\nFROM Staff_Department_Assignments\nWHERE date_assigned_to <\n    (SELECT max(date_assigned_to)\n     FROM Staff_Department_Assignments\n     WHERE job_title_code = 'Clerical Staff')", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0003", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT product_type_code) OVER () AS count_distinct_product_type_code_\nFROM products\nORDER BY count_distinct_product_type_code_\n", "sql2": "SELECT count(DISTINCT product_type_code)\nFROM products", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0023", "sql1": "\nSELECT DISTINCT `customer_id`\nFROM\n  (SELECT `LHS`.`order_date` AS `order_date`,\n          `LHS`.`order_status_code` AS `order_status_code`,\n          `LHS`.`minorder_date` AS `minorder_date`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`order_status_code` AS `order_status_code_other`,\n          `RHS`.`order_date` AS `order_date_other`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `order_date`,\n                `order_status_code`,\n                MIN(`order_date`) AS `minorder_date`\n         FROM `customer_orders`\n         GROUP BY `order_date`,\n                  `order_status_code`)\n      WHERE (`order_status_code` = 'Cancelled'\n             OR minorder_date > order_date)) AS LHS\n   CROSS JOIN customer_orders AS RHS)\nWHERE (order_date = minorder_date\n       AND order_date <= order_date_other)\nORDER BY customer_id\n", "sql2": "SELECT DISTINCT customer_id\nFROM Customer_Orders\nWHERE order_date >\n    (SELECT min(order_date)\n     FROM Customer_Orders\n     WHERE order_status_code = 'Cancelled')", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0035", "sql1": "\nSELECT DISTINCT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method_code` AS `payment_method_code`,\n          `LHS`.`customer_code` AS `customer_code`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_address` AS `customer_address`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`customer_email` AS `customer_email`,\n          `LHS`.`order_id` AS `order_id`,\n          `LHS`.`order_status_code` AS `order_status_code`,\n          `LHS`.`order_date` AS `order_date`,\n          `LHS`.`order_item_id` AS `order_item_id`,\n          `LHS`.`product_id` AS `product_id`,\n          `RHS`.`product_type_code` AS `product_type_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_price` AS `product_price`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`payment_method_code` AS `payment_method_code`,\n             `LHS`.`customer_code` AS `customer_code`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`customer_address` AS `customer_address`,\n             `LHS`.`customer_phone` AS `customer_phone`,\n             `LHS`.`customer_email` AS `customer_email`,\n             `LHS`.`order_id` AS `order_id`,\n             `LHS`.`order_status_code` AS `order_status_code`,\n             `LHS`.`order_date` AS `order_date`,\n             `RHS`.`order_item_id` AS `order_item_id`,\n             `RHS`.`product_id` AS `product_id`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`payment_method_code` AS `payment_method_code`,\n                `LHS`.`customer_code` AS `customer_code`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `LHS`.`customer_address` AS `customer_address`,\n                `LHS`.`customer_phone` AS `customer_phone`,\n                `LHS`.`customer_email` AS `customer_email`,\n                `RHS`.`order_id` AS `order_id`,\n                `RHS`.`order_status_code` AS `order_status_code`,\n                `RHS`.`order_date` AS `order_date`\n         FROM `customers` AS `LHS`\n         INNER JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n      INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'keyboard')) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY customer_name\n", "sql2": "SELECT DISTINCT T1.customer_name\nFROM customers AS T1\nJOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id\nJOIN order_items AS T3 ON T2.order_id = T3.order_id\nJOIN products AS T4 ON T3.product_id = T4.product_id\nWHERE T4.product_name = 'keyboard'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0034", "sql1": "\nSELECT DISTINCT MAX(customer_code) OVER () AS max_customer_code_,\n                                        mincustomer_code AS min_customer_code_\nFROM\n  (SELECT customer_id,\n          payment_method_code,\n          customer_code,\n          customer_name,\n          customer_address,\n          customer_phone,\n          customer_email,\n          MIN(customer_code) OVER () AS mincustomer_code\n   FROM customers)\nORDER BY max_customer_code_\n", "sql2": "SELECT max(customer_code),\n       min(customer_code)\nFROM Customers", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0022", "sql1": "\nSELECT product_name,\n       product_id\nFROM products\nWHERE (product_price > 600.0\n       AND product_price < 700.0)\nORDER BY product_name\n", "sql2": "SELECT product_name,\n       product_id\nFROM products\nWHERE product_price BETWEEN 600 AND 700", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0018", "sql1": "\nSELECT DISTINCT n AS department_id\nFROM\n  (SELECT job_title_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT job_title_code\n      FROM staff_department_assignments INTERSECT SELECT job_title_code\n      FROM staff_department_assignments)\n   GROUP BY job_title_code)\nORDER BY department_id\n", "sql2": "SELECT department_id\nFROM staff_department_assignments\nGROUP BY department_id\nORDER BY count(*)\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0038", "sql1": "\nSELECT `order_id`,\n       `customer_id`\nFROM `customer_orders`\nWHERE (`order_status_code` = 'Cancelled')\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       customer_id\nFROM customer_orders\nWHERE order_status_code = 'Cancelled'\nORDER BY order_date", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0002", "sql1": "\nSELECT product_id,\n       product_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM products\n      ORDER BY product_price)\n   LIMIT 1)\n", "sql2": "SELECT product_id,\n       product_type_code\nFROM products\nORDER BY product_price\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0014", "sql1": "\nSELECT DISTINCT `customer_name`,\n                `customer_address`\nFROM\n  (SELECT `LHS`.`order_id` AS `order_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`order_status_code` AS `order_status_code`,\n          `LHS`.`order_date` AS `order_date`,\n          `RHS`.`payment_method_code` AS `payment_method_code`,\n          `RHS`.`customer_code` AS `customer_code`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`customer_address` AS `customer_address`,\n          `RHS`.`customer_phone` AS `customer_phone`,\n          `RHS`.`customer_email` AS `customer_email`\n   FROM\n     (SELECT *\n      FROM `customer_orders`\n      WHERE (`order_status_code` = 'New'\n             AND `order_status_code` != 'Pending')) AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name,\n       T1.customer_address\nFROM customers AS T1\nJOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.order_status_code = 'New' INTERSECT\n  SELECT T1.customer_name,\n         T1.customer_address\n  FROM customers AS T1\n  JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Pending'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0043", "sql1": "\nSELECT `meanproduct_price` AS `avg_product_price_`\nFROM\n  (SELECT `product_type_code`,\n          AVG(`product_price`) AS `meanproduct_price`\n   FROM `products`\n   GROUP BY `product_type_code`)\nWHERE (`product_type_code` = 'Clothes')\nORDER BY avg_product_price_\n", "sql2": "SELECT avg(product_price)\nFROM products\nWHERE product_type_code = 'Clothes'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0001", "sql1": "\nSELECT product_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM product_suppliers\n      ORDER BY total_amount_purchased DESC)\n   LIMIT 3)\n", "sql2": "SELECT product_id\nFROM product_suppliers\nORDER BY total_amount_purchased DESC\nLIMIT 3", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0017", "sql1": "\nSELECT dept_store_id AS dept_store_chain_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT dept_store_id,\n                dept_store_chain_id,\n                store_name,\n                store_address,\n                store_phone,\n                store_email,\n                COUNT(*) OVER () AS n\n         FROM department_stores)\n      ORDER BY store_address DESC)\n   LIMIT 2)\n", "sql2": "SELECT dept_store_chain_id\nFROM department_stores\nGROUP BY dept_store_chain_id\nORDER BY count(*) DESC\nLIMIT 2", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0036", "sql1": "\nSELECT `supplier_name`,\n       `supplier_phone`\nFROM\n  (SELECT `LHS`.`supplier_id` AS `supplier_id`,\n          `LHS`.`supplier_name` AS `supplier_name`,\n          `LHS`.`supplier_phone` AS `supplier_phone`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`date_supplied_from` AS `date_supplied_from`,\n          `LHS`.`date_supplied_to` AS `date_supplied_to`,\n          `LHS`.`total_amount_purchased` AS `total_amount_purchased`,\n          `LHS`.`total_value_purchased` AS `total_value_purchased`,\n          `RHS`.`product_type_code` AS `product_type_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_price` AS `product_price`\n   FROM\n     (SELECT `LHS`.`supplier_id` AS `supplier_id`,\n             `LHS`.`supplier_name` AS `supplier_name`,\n             `LHS`.`supplier_phone` AS `supplier_phone`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`date_supplied_from` AS `date_supplied_from`,\n             `RHS`.`date_supplied_to` AS `date_supplied_to`,\n             `RHS`.`total_amount_purchased` AS `total_amount_purchased`,\n             `RHS`.`total_value_purchased` AS `total_value_purchased`\n      FROM `suppliers` AS `LHS`\n      INNER JOIN `product_suppliers` AS `RHS` ON (`LHS`.`supplier_id` = `RHS`.`supplier_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'red jeans')) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY supplier_name\n", "sql2": "SELECT DISTINCT T1.supplier_name,\n                T1.supplier_phone\nFROM suppliers AS T1\nJOIN product_suppliers AS T2 ON T1.supplier_id = T2.supplier_id\nJOIN products AS T3 ON T2.product_id = T3.product_id\nWHERE T3.product_name = 'red jeans'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0041", "sql1": "\nSELECT `staff_name`,\n       `staff_gender`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_gender` AS `staff_gender`,\n          `LHS`.`staff_name` AS `staff_name`,\n          `LHS`.`department_id` AS `department_id`,\n          `LHS`.`date_assigned_from` AS `date_assigned_from`,\n          `LHS`.`job_title_code` AS `job_title_code`,\n          `LHS`.`date_assigned_to` AS `date_assigned_to`\n   FROM\n     (SELECT `LHS`.`staff_id` AS `staff_id`,\n             `LHS`.`staff_gender` AS `staff_gender`,\n             `LHS`.`staff_name` AS `staff_name`,\n             `RHS`.`department_id` AS `department_id`,\n             `RHS`.`date_assigned_from` AS `date_assigned_from`,\n             `RHS`.`job_title_code` AS `job_title_code`,\n             `RHS`.`date_assigned_to` AS `date_assigned_to`\n      FROM `staff` AS `LHS`\n      INNER JOIN `staff_department_assignments` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `staff_department_assignments`\n      WHERE (`job_title_code` = 'Sales Person'\n             AND `job_title_code` != 'Clerical Staff')) AS RHS ON (LHS.staff_id = RHS.staff_id\n                                                                   AND LHS.department_id = RHS.department_id\n                                                                   AND LHS.date_assigned_from = RHS.date_assigned_from\n                                                                   AND LHS.job_title_code = RHS.job_title_code\n                                                                   AND LHS.date_assigned_to = RHS.date_assigned_to))\nORDER BY staff_name\n", "sql2": "SELECT T1.staff_name,\n       T1.staff_gender\nFROM staff AS T1\nJOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.job_title_code = 'Sales Person'\nEXCEPT\nSELECT T1.staff_name,\n       T1.staff_gender\nFROM staff AS T1\nJOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.job_title_code = 'Clerical Staff'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0016", "sql1": "\nSELECT `dept_store_chain_id` AS `dept_store_id`,\n       `store_name`\nFROM\n  (SELECT `LHS`.`dept_store_id` AS `dept_store_id`,\n          `LHS`.`dept_store_chain_id` AS `dept_store_chain_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`store_address` AS `store_address`,\n          `LHS`.`store_phone` AS `store_phone`,\n          `LHS`.`store_email` AS `store_email`,\n          `RHS`.`dept_store_id` AS `dept_store_id_other`,\n          `RHS`.`department_name` AS `department_name`\n   FROM `department_stores` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `departments`\n      WHERE (`department_name` = 'marketing'\n             AND `department_name` != 'managing')) AS RHS ON (LHS.dept_store_id = RHS.department_id))\nORDER BY dept_store_id\n", "sql2": "SELECT T2.dept_store_id,\n       T2.store_name\nFROM departments AS T1\nJOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id\nWHERE T1.department_name = 'marketing' INTERSECT\n  SELECT T2.dept_store_id,\n         T2.store_name\n  FROM departments AS T1\n  JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = 'managing'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0031", "sql1": "\nSELECT product_id,\n       product_name\nFROM products\nWHERE (product_price <= 600.0\n       OR product_price >= 900.0)\nORDER BY product_id\n", "sql2": "SELECT product_id,\n       product_name\nFROM products\nWHERE product_price < 600\n  OR product_price > 900", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0027", "sql1": "\nSELECT staff_name\nFROM\n  (SELECT staff_id,\n          staff_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.staff_id AS staff_id,\n             LHS.staff_gender AS staff_gender,\n             LHS.staff_name AS staff_name,\n             RHS.department_id AS department_id,\n             RHS.date_assigned_from AS date_assigned_from,\n             RHS.job_title_code AS job_title_code,\n             RHS.date_assigned_to AS date_assigned_to\n      FROM staff AS LHS\n      INNER JOIN staff_department_assignments AS RHS ON (LHS.staff_id = RHS.staff_id))\n   GROUP BY staff_id,\n            staff_name)\nWHERE (n > 1)\nORDER BY staff_name\n", "sql2": "SELECT T1.staff_name\nFROM staff AS T1\nJOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id\nGROUP BY T2.staff_id\nHAVING COUNT (*) > 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0007", "sql1": "\nSELECT DISTINCT product_id\nFROM\n  (SELECT LHS.order_id AS order_id,\n          LHS.product_id AS product_id,\n          LHS.n AS n,\n          RHS.order_id AS order_id_other,\n          RHS.product_id AS product_id_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT order_id,\n             product_id,\n             COUNT(*) AS n\n      FROM order_items\n      GROUP BY order_id,\n               product_id) AS LHS\n   CROSS JOIN\n     (SELECT order_id,\n             product_id,\n             COUNT(*) AS n\n      FROM order_items\n      GROUP BY order_id,\n               product_id) AS RHS)\nWHERE (n > n_other)\nORDER BY product_id\n", "sql2": "SELECT product_id\nFROM order_items\nGROUP BY product_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0010", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `dept_store_chain_name`,\n          `store_name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`dept_store_chain_id` AS `dept_store_chain_id`,\n             `LHS`.`dept_store_chain_name` AS `dept_store_chain_name`,\n             `RHS`.`dept_store_id` AS `dept_store_id`,\n             `RHS`.`store_name` AS `store_name`,\n             `RHS`.`store_address` AS `store_address`,\n             `RHS`.`store_phone` AS `store_phone`,\n             `RHS`.`store_email` AS `store_email`\n      FROM `department_store_chain` AS `LHS`\n      INNER JOIN `department_stores` AS `RHS` ON (`LHS`.`dept_store_chain_id` = `RHS`.`dept_store_chain_id`))\n   GROUP BY `dept_store_chain_name`,\n            `store_name`)\nWHERE (`dept_store_chain_name` = 'South')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM department_stores AS T1\nJOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id\nWHERE T2.dept_store_chain_name = 'South'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/department_store/0006", "sql1": "\nSELECT payment_method_code,\n       n AS count___\nFROM\n  (SELECT payment_method_code,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       count(*)\nFROM customers\nGROUP BY payment_method_code", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0004", "sql1": "\nSELECT customer_name,\n       customer_phone\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM customer_address_history AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM customer_address_history)", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0008", "sql1": "\nSELECT customer_name,\n       customer_phone,\n       payment_method_code\nFROM customers\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone,\n       payment_method_code\nFROM customers\nORDER BY customer_number DESC", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0015", "sql1": "\nSELECT product_type_code,\n       product_name\nFROM products\nWHERE (product_price > 1000.0\n       OR product_price <= 500.0)\nORDER BY product_type_code\n", "sql2": "SELECT product_type_code,\n       product_name\nFROM products\nWHERE product_price > 1000\n  OR product_price < 500", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0003", "sql1": "\nSELECT state_province_county,\n       n AS count___\nFROM\n  (SELECT state_province_county,\n          COUNT(*) AS n\n   FROM addresses\n   GROUP BY state_province_county)\nORDER BY state_province_county\n", "sql2": "SELECT state_province_county,\n       count(*)\nFROM addresses\nGROUP BY state_province_county", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0002", "sql1": "\nSELECT city\nFROM addresses\nORDER BY city\n", "sql2": "SELECT DISTINCT city\nFROM addresses", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `addresses`\nWHERE (`country` = 'USA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM addresses\nWHERE country = 'USA'", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_products_contacts/0006", "sql1": "\nSELECT DISTINCT product_type_code\nFROM\n  (SELECT product_id,\n          product_type_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_type_code AS product_type_code,\n             LHS.product_name AS product_name,\n             LHS.product_price AS product_price,\n             RHS.product_type_code AS product_type_code_other,\n             RHS.product_name AS product_name_other\n      FROM products AS LHS\n      INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id\n                                        AND LHS.product_price = RHS.product_price))\n   GROUP BY product_id,\n            product_type_code)\nORDER BY product_type_code\n", "sql2": "SELECT product_type_code\nFROM products\nGROUP BY product_type_code\nHAVING count(*) >= 2", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0013", "sql1": "\nSELECT DISTINCT registration_date,\n                election_cycle\nFROM voting_record\nORDER BY registration_date\n", "sql2": "SELECT DISTINCT Registration_Date,\n                Election_Cycle\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0005", "sql1": "\nSELECT lname\nFROM student\nWHERE (major = 50)\nORDER BY lname\n", "sql2": "SELECT LName\nFROM STUDENT\nWHERE Major = 50", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0029", "sql1": "\nSELECT advisor,\n       n AS count___\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nORDER BY advisor\n", "sql2": "SELECT Advisor,\n       count(*)\nFROM STUDENT\nGROUP BY Advisor", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0004", "sql1": "\nSELECT age AS max_age_\nFROM\n  (SELECT MAX(age) AS age\n   FROM student)\nORDER BY max_age_\n", "sql2": "SELECT max(Age)\nFROM STUDENT", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0012", "sql1": "\nSELECT DISTINCT `president_vote`\nFROM `voting_record`\nWHERE (`registration_date` = '08/30/2015')\nORDER BY president_vote\n", "sql2": "SELECT DISTINCT PRESIDENT_Vote\nFROM VOTING_RECORD\nWHERE Registration_Date = '08/30/2015'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0032", "sql1": "\nSELECT election_cycle,\n       n AS count___\nFROM\n  (SELECT election_cycle,\n          COUNT(*) AS n\n   FROM voting_record\n   GROUP BY election_cycle)\nORDER BY election_cycle\n", "sql2": "SELECT Election_Cycle,\n       count(*)\nFROM VOTING_RECORD\nGROUP BY Election_Cycle", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0024", "sql1": "\nSELECT DISTINCT `meanage` AS `avg_t1_age_`\nFROM\n  (SELECT `city_code`,\n          `stuid`,\n          `meanage`,\n          `stuid_other`,\n          `registration_date`,\n          `election_cycle`,\n          `president_vote`,\n          `vice_president_vote`,\n          `treasurer_vote`,\n          `class_president_vote`,\n          `class_senator_vote`,\n          `stuid` AS `secretary_vote`\n   FROM\n     (SELECT `LHS`.`city_code` AS `city_code`,\n             `LHS`.`stuid` AS `stuid`,\n             `LHS`.`meanage` AS `meanage`,\n             `RHS`.`stuid` AS `stuid_other`,\n             `RHS`.`registration_date` AS `registration_date`,\n             `RHS`.`election_cycle` AS `election_cycle`,\n             `RHS`.`president_vote` AS `president_vote`,\n             `RHS`.`vice_president_vote` AS `vice_president_vote`,\n             `RHS`.`treasurer_vote` AS `treasurer_vote`,\n             `RHS`.`class_president_vote` AS `class_president_vote`,\n             `RHS`.`class_senator_vote` AS `class_senator_vote`\n      FROM\n        (SELECT `city_code`,\n                `stuid`,\n                AVG(`age`) AS `meanage`\n         FROM `student`\n         GROUP BY `city_code`,\n                  `stuid`) AS `LHS`\n      INNER JOIN `voting_record` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`secretary_vote`)))\nWHERE (`city_code` = 'NYC'\n       AND `election_cycle` != 'Spring')\nORDER BY avg_t1_age_\n", "sql2": "SELECT avg(T1.Age)\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote\nWHERE T1.city_code = 'NYC'\n  AND T2.Election_Cycle = 'Spring'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0008", "sql1": "\nSELECT `meanage` AS `avg_age_`\nFROM\n  (SELECT AVG(`age`) AS `meanage`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`sex` = 'F')))\nORDER BY avg_age_\n", "sql2": "SELECT avg(Age)\nFROM STUDENT\nWHERE Sex = 'F'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0015", "sql1": "\nSELECT DISTINCT lname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.stuid AS stuid_other,\n          RHS.registration_date AS registration_date,\n          RHS.election_cycle AS election_cycle,\n          RHS.president_vote AS president_vote,\n          RHS.vice_president_vote AS vice_president_vote,\n          RHS.secretary_vote AS secretary_vote,\n          RHS.treasurer_vote AS treasurer_vote,\n          RHS.class_senator_vote AS class_senator_vote\n   FROM student AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.class_president_vote))\nORDER BY lname\n", "sql2": "SELECT DISTINCT T1.LName\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_President_VOTE", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0003", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT president_vote) OVER () AS count_distinct_president_vote_\nFROM voting_record\nORDER BY count_distinct_president_vote_\n", "sql2": "SELECT count(DISTINCT President_Vote)\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0019", "sql1": "\nSELECT DISTINCT major\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.stuid AS stuid_other,\n          RHS.registration_date AS registration_date,\n          RHS.election_cycle AS election_cycle,\n          RHS.president_vote AS president_vote,\n          RHS.vice_president_vote AS vice_president_vote,\n          RHS.secretary_vote AS secretary_vote,\n          RHS.class_president_vote AS class_president_vote,\n          RHS.class_senator_vote AS class_senator_vote\n   FROM student AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.treasurer_vote))\nORDER BY major\n", "sql2": "SELECT DISTINCT T1.Major\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM voting_record\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0014", "sql1": "\nSELECT DISTINCT president_vote,\n                vice_president_vote\nFROM voting_record\nORDER BY president_vote\n", "sql2": "SELECT DISTINCT President_Vote,\n                VICE_President_Vote\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM STUDENT", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0021", "sql1": "\nSELECT DISTINCT fname,\n                lname\nFROM\n  (SELECT stuid,\n          lname,\n          fname,\n          age,\n          sex,\n          major,\n          advisor,\n          city_code,\n          stuid_other,\n          registration_date,\n          election_cycle,\n          president_vote,\n          secretary_vote,\n          treasurer_vote,\n          class_president_vote,\n          class_senator_vote,\n          stuid AS vice_president_vote\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             RHS.stuid AS stuid_other,\n             RHS.registration_date AS registration_date,\n             RHS.election_cycle AS election_cycle,\n             RHS.president_vote AS president_vote,\n             RHS.secretary_vote AS secretary_vote,\n             RHS.treasurer_vote AS treasurer_vote,\n             RHS.class_president_vote AS class_president_vote,\n             RHS.class_senator_vote AS class_senator_vote\n      FROM student AS LHS\n      INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.vice_president_vote)))\nWHERE (age = 18)\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname,\n                T1.LName\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE\nWHERE T1.age = 18", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0036", "sql1": "\nSELECT advisor\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nWHERE (n > 2)\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM STUDENT\nGROUP BY Advisor\nHAVING count(*) > 2", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0016", "sql1": "\nSELECT DISTINCT fname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.stuid AS stuid_other,\n          RHS.registration_date AS registration_date,\n          RHS.election_cycle AS election_cycle,\n          RHS.president_vote AS president_vote,\n          RHS.vice_president_vote AS vice_president_vote,\n          RHS.secretary_vote AS secretary_vote,\n          RHS.treasurer_vote AS treasurer_vote,\n          RHS.class_president_vote AS class_president_vote\n   FROM student AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.class_senator_vote))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_Senator_VOTE", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0007", "sql1": "\nSELECT `major`\nFROM `student`\nWHERE (`sex` = 'M')\nORDER BY major\n", "sql2": "SELECT Major\nFROM STUDENT\nWHERE Sex = 'M'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0011", "sql1": "\nSELECT DISTINCT `secretary_vote`\nFROM `voting_record`\nWHERE (`election_cycle` = 'Fall')\nORDER BY secretary_vote\n", "sql2": "SELECT DISTINCT Secretary_Vote\nFROM VOTING_RECORD\nWHERE ELECTION_CYCLE = 'Fall'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0010", "sql1": "\nSELECT `advisor`\nFROM `student`\nWHERE (`city_code` = 'BAL')\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM STUDENT\nWHERE city_code = 'BAL'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0006", "sql1": "\nSELECT fname\nFROM student\nWHERE (age > 22)\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM STUDENT\nWHERE Age > 22", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0026", "sql1": "\nSELECT DISTINCT `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`stuid` AS `stuid_other`,\n          `RHS`.`registration_date` AS `registration_date`,\n          `RHS`.`election_cycle` AS `election_cycle`,\n          `RHS`.`president_vote` AS `president_vote`,\n          `RHS`.`secretary_vote` AS `secretary_vote`,\n          `RHS`.`treasurer_vote` AS `treasurer_vote`,\n          `RHS`.`class_president_vote` AS `class_president_vote`,\n          `RHS`.`class_senator_vote` AS `class_senator_vote`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`city_code` != 'PIT')) AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.vice_president_vote))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote\nEXCEPT\nSELECT DISTINCT Fname\nFROM STUDENT\nWHERE city_code = 'PIT'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/voter_2/0030", "sql1": "\nSELECT advisor\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nWHERE (n > 2)\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM STUDENT\nGROUP BY Advisor\nHAVING COUNT(*) > 2", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0009", "sql1": "\nSELECT `nickname`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY nickname\n", "sql2": "SELECT nickname\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0025", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0044", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `customer_id`,\n             `lesson_status_code`,\n             COUNT(*) AS `n`\n      FROM `lessons`\n      GROUP BY `customer_id`,\n               `lesson_status_code`) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`first_name` != 'Ray')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Lessons AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.first_name = 'Ray'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0005", "sql1": "\nSELECT `date_of_birth`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY date_of_birth\n", "sql2": "SELECT date_of_birth\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0004", "sql1": "\nSELECT first_name,\n       middle_name,\n       last_name\nFROM staff\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       middle_name,\n       last_name\nFROM Staff;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0012", "sql1": "\nSELECT `country`,\n       `state_province_county`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`first_name` = 'Janessa'\n       OR `last_name` = 'Sawayn')\nORDER BY country\n", "sql2": "SELECT T1.country,\n       T1.state_province_county\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0045", "sql1": "\nSELECT last_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_address_id AS customer_address_id,\n          LHS.customer_status_code AS customer_status_code,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.amount_outstanding AS amount_outstanding,\n          LHS.email_address AS email_address,\n          LHS.phone_number AS phone_number,\n          LHS.cell_mobile_phone_number AS cell_mobile_phone_number,\n          RHS.staff_id AS staff_id,\n          RHS.staff_address_id AS staff_address_id,\n          RHS.nickname AS nickname,\n          RHS.first_name AS first_name_other,\n          RHS.middle_name AS middle_name,\n          RHS.date_of_birth AS date_of_birth_other,\n          RHS.date_joined_staff AS date_joined_staff,\n          RHS.date_left_staff AS date_left_staff\n   FROM customers AS LHS\n   INNER JOIN staff AS RHS ON (LHS.last_name = RHS.last_name))\nORDER BY last_name\n", "sql2": "SELECT last_name\nFROM Customers INTERSECT\nSELECT last_name\nFROM Staff", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0032", "sql1": "\nSELECT DISTINCT `country`\nFROM\n  (SELECT `LHS`.`address_id` AS `address_id`,\n          `LHS`.`line_1_number_building` AS `line_1_number_building`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`zip_postcode` AS `zip_postcode`,\n          `LHS`.`state_province_county` AS `state_province_county`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`customer_address_id` AS `customer_address_id`,\n          `RHS`.`customer_status_code` AS `customer_status_code`,\n          `RHS`.`date_became_customer` AS `date_became_customer`,\n          `RHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`amount_outstanding` AS `amount_outstanding`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`phone_number` AS `phone_number`,\n          `RHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`\n   FROM `addresses` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `customers`\n      WHERE (`first_name` = 'Carole'\n             OR `last_name` != 'Bernhard')) AS RHS)\nORDER BY country\n", "sql2": "SELECT T2.country\nFROM Customers AS T1\nJOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id\nWHERE T1.first_name = 'Carole'\n  AND T1.last_name = 'Bernhard'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0024", "sql1": "\nSELECT `date_became_customer`\nFROM `customers`\nWHERE (`first_name` = 'Carole'\n       AND `last_name` = 'Bernhard')\nORDER BY date_became_customer\n", "sql2": "SELECT date_became_customer\nFROM Customers\nWHERE first_name = 'Carole'\n  AND last_name = 'Bernhard';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0008", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `date_left_staff`,\n          `nickname`,\n          COUNT(DISTINCT `first_name`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `staff`\n      WHERE (`first_name` != 'Ludie'))\n   GROUP BY date_left_staff,\n            nickname)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Staff\nWHERE first_name = 'Ludie';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0042", "sql1": "\nSELECT `lesson_time` AS `sum_lesson_time_`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_address_id` AS `staff_address_id`,\n          `LHS`.`nickname` AS `nickname`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`date_joined_staff` AS `date_joined_staff`,\n          `LHS`.`date_left_staff` AS `date_left_staff`,\n          `RHS`.`lesson_id` AS `lesson_id`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`lesson_status_code` AS `lesson_status_code`,\n          `RHS`.`vehicle_id` AS `vehicle_id`,\n          `RHS`.`lesson_date` AS `lesson_date`,\n          `RHS`.`lesson_time` AS `lesson_time`,\n          `RHS`.`price` AS `price`\n   FROM `staff` AS `LHS`\n   INNER JOIN `lessons` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`))\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY sum_lesson_time_\n", "sql2": "SELECT sum(lesson_time)\nFROM Lessons AS T1\nJOIN Staff AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0015", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          `state_province_county`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `addresses`\n      WHERE (`state_province_county` = 'Georgia'))\n   GROUP BY country,\n            state_province_county)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Addresses\nWHERE state_province_county = 'Georgia';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0003", "sql1": "\nSELECT vehicle_details\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM vehicles\n      ORDER BY vehicle_details DESC)\n   LIMIT 1)\n", "sql2": "SELECT vehicle_details\nFROM Vehicles\nWHERE vehicle_id = 1;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0039", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `lesson_status_code`,\n          COUNT(*) AS `n`\n   FROM `lessons`\n   GROUP BY `lesson_status_code`)\nWHERE (`lesson_status_code` = 'Cancelled')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Lessons\nWHERE lesson_status_code = 'Cancelled';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0019", "sql1": "\nSELECT first_name,\n       last_name\nFROM customers\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Customers;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0023", "sql1": "\nSELECT `date_of_birth`\nFROM `customers`\nWHERE (`customer_status_code` = 'Good Customer')\nORDER BY date_of_birth\n", "sql2": "SELECT date_of_birth\nFROM Customers\nWHERE customer_status_code = 'Good Customer'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0035", "sql1": "\nSELECT `sumamount_payment` AS `sum_t1_amount_payment_`\nFROM\n  (SELECT `first_name`,\n          `last_name`,\n          SUM(`amount_payment`) AS `sumamount_payment`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_address_id` AS `customer_address_id`,\n             `LHS`.`customer_status_code` AS `customer_status_code`,\n             `LHS`.`date_became_customer` AS `date_became_customer`,\n             `LHS`.`date_of_birth` AS `date_of_birth`,\n             `LHS`.`first_name` AS `first_name`,\n             `LHS`.`last_name` AS `last_name`,\n             `LHS`.`amount_outstanding` AS `amount_outstanding`,\n             `LHS`.`email_address` AS `email_address`,\n             `LHS`.`phone_number` AS `phone_number`,\n             `LHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`,\n             `RHS`.`datetime_payment` AS `datetime_payment`,\n             `RHS`.`payment_method_code` AS `payment_method_code`,\n             `RHS`.`amount_payment` AS `amount_payment`\n      FROM `customers` AS `LHS`\n      INNER JOIN `customer_payments` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\n   GROUP BY `first_name`,\n            `last_name`)\nWHERE (`first_name` = 'Carole'\n       AND `last_name` = 'Bernhard')\nORDER BY sum_t1_amount_payment_\n", "sql2": "SELECT sum(T1.amount_payment)\nFROM Customer_Payments AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.first_name = 'Carole'\n  AND T2.last_name = 'Bernhard'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0022", "sql1": "\nSELECT `customer_status_code`,\n       `cell_mobile_phone_number`,\n       `email_address`\nFROM `customers`\nWHERE (`first_name` = 'Marina'\n       OR `last_name` = 'Kohler')\nORDER BY customer_status_code\n", "sql2": "SELECT customer_status_code,\n       cell_mobile_phone_number,\n       email_address\nFROM Customers\nWHERE first_name = 'Marina'\n  OR last_name = 'Kohler'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0038", "sql1": "\nSELECT payment_method_code,\n       n AS count___\nFROM\n  (SELECT payment_method_code,\n          COUNT(*) AS n\n   FROM customer_payments\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       count(*)\nFROM Customer_Payments\nGROUP BY payment_method_code;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM vehicles\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Vehicles;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0014", "sql1": "\nSELECT `zip_postcode`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`first_name` = 'Janessa'\n       OR `last_name` = 'Sawayn')\nORDER BY zip_postcode\n", "sql2": "SELECT T1.zip_postcode\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0001", "sql1": "\nSELECT vehicle_id\nFROM vehicles\nORDER BY vehicle_id\n", "sql2": "SELECT vehicle_id\nFROM Vehicles;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0021", "sql1": "\nSELECT phone_number,\n       email_address\nFROM customers\nWHERE (amount_outstanding >= 2000.0)\nORDER BY phone_number\n", "sql2": "SELECT phone_number,\n       email_address\nFROM Customers\nWHERE amount_outstanding > 2000;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0020", "sql1": "\nSELECT `email_address`,\n       `date_of_birth`\nFROM `customers`\nWHERE (`first_name` = 'Carole')\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       date_of_birth\nFROM Customers\nWHERE first_name = 'Carole'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0016", "sql1": "\nSELECT `first_name`,\n       `last_name`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`city` = 'Damianfort')\nORDER BY first_name\n", "sql2": "SELECT T2.first_name,\n       T2.last_name\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T1.city = 'Damianfort';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0027", "sql1": "\nSELECT customer_status_code_other AS customer_status_code\nFROM\n  (SELECT LHS.customer_status_code AS customer_status_code,\n          LHS.n AS n,\n          RHS.customer_status_code AS customer_status_code_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT customer_status_code,\n             COUNT(*) AS n\n      FROM customers\n      GROUP BY customer_status_code) AS LHS\n   CROSS JOIN\n     (SELECT customer_status_code,\n             COUNT(*) AS n\n      FROM customers\n      GROUP BY customer_status_code) AS RHS)\nWHERE (n > n_other)\nORDER BY customer_status_code\n", "sql2": "SELECT customer_status_code\nFROM Customers\nGROUP BY customer_status_code\nORDER BY count(*) ASC\nLIMIT 1;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0007", "sql1": "\nSELECT `date_left_staff`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY date_left_staff\n", "sql2": "SELECT date_left_staff\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0011", "sql1": "\nSELECT `city`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`first_name` = 'Janessa'\n       OR `last_name` = 'Sawayn')\nORDER BY city\n", "sql2": "SELECT T1.city\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0046", "sql1": "\nSELECT first_name\nFROM\n  (SELECT *\n   FROM staff AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM lessons AS RHS\n        WHERE (LHS.staff_id = RHS.staff_id) ))\nORDER BY first_name\n", "sql2": "SELECT first_name\nFROM Staff\nEXCEPT\nSELECT T2.first_name\nFROM Lessons AS T1\nJOIN Staff AS T2 ON T1.staff_id = T2.staff_id", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0047", "sql1": "\nSELECT vehicle_id,\n       vehicle_details\nFROM\n  (SELECT LHS.lesson_id AS lesson_id,\n          LHS.customer_id AS customer_id,\n          LHS.lesson_status_code AS lesson_status_code,\n          LHS.staff_id AS staff_id,\n          LHS.vehicle_id AS vehicle_id,\n          LHS.lesson_date AS lesson_date,\n          LHS.lesson_time AS lesson_time,\n          LHS.price AS price,\n          RHS.vehicle_details AS vehicle_details\n   FROM lessons AS LHS\n   INNER JOIN\n     (SELECT vehicle_id,\n             vehicle_details,\n             COUNT(*) OVER () AS n\n      FROM vehicles) AS RHS ON (LHS.vehicle_id = RHS.vehicle_id\n                                   AND LHS.lesson_id = RHS.n))\nORDER BY vehicle_id\n", "sql2": "SELECT T1.vehicle_id,\n       T1.vehicle_details\nFROM Vehicles AS T1\nJOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id\nGROUP BY T1.vehicle_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM staff\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Staff;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0006", "sql1": "\nSELECT `date_joined_staff`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY date_joined_staff\n", "sql2": "SELECT date_joined_staff\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/driving_school/0026", "sql1": "\nSELECT customer_status_code,\n       n AS count___\nFROM\n  (SELECT customer_status_code,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY customer_status_code)\nORDER BY customer_status_code\n", "sql2": "SELECT customer_status_code,\n       count(*)\nFROM Customers\nGROUP BY customer_status_code;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0004", "sql1": "\nSELECT DISTINCT SUM(enrollment) OVER () AS sum_enrollment_,\n                                     meanenrollment AS avg_enrollment_\nFROM\n  (SELECT school_id,\n          school_name,\n          LOCATION,\n          mascot,\n          enrollment,\n          ihsaa_class,\n          ihsaa_football_class,\n          county,\n          AVG(enrollment) OVER () AS meanenrollment\n   FROM school)\nORDER BY sum_enrollment_\n", "sql2": "SELECT sum(enrollment),\n       avg(enrollment)\nFROM school", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0015", "sql1": "\nSELECT amount,\n       donator_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM endowment\n      ORDER BY amount DESC)\n   LIMIT 1)\n", "sql2": "SELECT amount,\n       donator_name\nFROM endowment\nORDER BY amount DESC\nLIMIT 1", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0003", "sql1": "\nSELECT school_name,\n       LOCATION,\n       mascot\nFROM school\nORDER BY school_name\n", "sql2": "SELECT school_name,\n       LOCATION,\n       mascot\nFROM school", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0023", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `amount`) OVER () AS `count___`\nFROM `endowment`\nWHERE (`amount` = 1.0\n       OR `amount` <= '8.5')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM\n  (SELECT *\n   FROM endowment\n   WHERE amount > 8.5\n   GROUP BY school_id\n   HAVING count(*) > 1)", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0018", "sql1": "\nSELECT donator_name\nFROM endowment\nORDER BY donator_name\n", "sql2": "SELECT DISTINCT donator_name\nFROM endowment", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0002", "sql1": "\nSELECT school_name\nFROM school\nORDER BY school_name\n", "sql2": "SELECT school_name\nFROM school\nORDER BY school_name", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0014", "sql1": "\nSELECT donator_name\nFROM endowment\nWHERE (amount >= 9.0)\nORDER BY donator_name\n", "sql2": "SELECT donator_name\nFROM endowment\nEXCEPT\nSELECT donator_name\nFROM endowment\nWHERE amount < 9", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM school\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM school", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0010", "sql1": "\nSELECT donator_name,\n       sumamount AS sum_amount_\nFROM\n  (SELECT donator_name,\n          school_id,\n          SUM(amount) AS sumamount\n   FROM endowment\n   GROUP BY donator_name,\n            school_id)\nORDER BY donator_name\n", "sql2": "SELECT donator_name,\n       sum(amount)\nFROM endowment\nGROUP BY donator_name\nORDER BY sum(amount) DESC", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_finance/0006", "sql1": "\nSELECT school_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM school\n      ORDER BY ihsaa_class)\n   LIMIT 1)\n", "sql2": "SELECT school_name\nFROM school\nORDER BY enrollment\nLIMIT 1", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0009", "sql1": "\nSELECT DISTINCT status\nFROM\n  (SELECT LHS.roller_coaster_id AS roller_coaster_id,\n          LHS.name AS name,\n          LHS.park AS park,\n          LHS.country_id AS country_id,\n          LHS.length AS LENGTH,\n          LHS.height AS height,\n          LHS.speed AS speed,\n          LHS.opened AS opened,\n          LHS.status AS status,\n          RHS.n AS n\n   FROM roller_coaster AS LHS\n   LEFT JOIN\n     (SELECT roller_coaster_id,\n             name,\n             park,\n             country_id,\n             LENGTH,\n             height,\n             speed,\n             opened,\n             status,\n             COUNT(*) OVER () AS n\n      FROM roller_coaster) AS RHS ON (LHS.roller_coaster_id = RHS.roller_coaster_id\n                                         AND LHS.name = RHS.name\n                                         AND LHS.park = RHS.park\n                                         AND LHS.country_id = RHS.country_id\n                                         AND LHS.length = RHS.length\n                                         AND LHS.height = RHS.height\n                                         AND LHS.speed = RHS.speed\n                                         AND LHS.opened = RHS.opened\n                                         AND LHS.status = RHS.status))\nORDER BY status\n", "sql2": "SELECT Status\nFROM roller_coaster\nGROUP BY Status\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0005", "sql1": "\nSELECT status\nFROM roller_coaster\nWHERE (height <= 3300.0\n       AND height >= 100.0)\nORDER BY status\n", "sql2": "SELECT Status\nFROM roller_coaster\nWHERE LENGTH > 3300\n  OR Height > 100", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0004", "sql1": "\nSELECT `name`\nFROM `country`\nWHERE (`languages` != 'German')\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE Languages != 'German'", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0012", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.country_id AS country_id,\n          LHS.name AS name,\n          LHS.population AS population,\n          LHS.area AS area,\n          LHS.languages AS languages,\n          RHS.roller_coaster_id AS roller_coaster_id,\n          RHS.name AS name_other,\n          RHS.park AS park,\n          RHS.length AS LENGTH,\n          RHS.height AS height,\n          RHS.speed AS speed,\n          RHS.opened AS opened,\n          RHS.status AS status\n   FROM country AS LHS\n   INNER JOIN roller_coaster AS RHS ON (LHS.country_id = RHS.country_id))\nORDER BY name___1\n", "sql2": "SELECT T2.Name,\n       T1.Name\nFROM country AS T1\nJOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0008", "sql1": "\nSELECT DISTINCT status,\n                COUNT(*) OVER () AS count___\nFROM roller_coaster\nORDER BY status\n", "sql2": "SELECT Status,\n       COUNT(*)\nFROM roller_coaster\nGROUP BY Status", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0003", "sql1": "\nSELECT LENGTH,\n       height\nFROM roller_coaster\nORDER BY LENGTH\n", "sql2": "SELECT LENGTH,\n       Height\nFROM roller_coaster", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0002", "sql1": "\nSELECT name\nFROM roller_coaster\nORDER BY name\n", "sql2": "SELECT Name\nFROM roller_coaster\nORDER BY LENGTH ASC", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM roller_coaster\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM roller_coaster", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0016", "sql1": "\nSELECT DISTINCT n_distinct AS count___\nFROM\n  (SELECT LHS.country_id AS country_id,\n          LHS.name AS name,\n          LHS.population AS population,\n          LHS.area AS area,\n          LHS.languages AS languages,\n          RHS.park AS park,\n          RHS.status AS status,\n          RHS.n_distinct AS n_distinct\n   FROM country AS LHS\n   CROSS JOIN\n     (SELECT park,\n             status,\n             COUNT(DISTINCT country_id) AS n_distinct\n      FROM roller_coaster\n      GROUP BY park,\n               status) AS RHS)\nWHERE (n_distinct >= 3000\n       OR n_distinct != country_id)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country\nWHERE country_id NOT IN\n    (SELECT country_id\n     FROM roller_coaster\n     WHERE LENGTH > 3000 )", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0011", "sql1": "\nSELECT park\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM roller_coaster\n      ORDER BY speed DESC)\n   LIMIT 1)\n", "sql2": "SELECT Park\nFROM roller_coaster\nORDER BY Speed DESC\nLIMIT 1", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0010", "sql1": "\nSELECT DISTINCT status\nFROM\n  (SELECT height,\n          status,\n          COUNT(*) AS n\n   FROM roller_coaster\n   GROUP BY height,\n            status)\nWHERE (n <= 2)\nORDER BY status\n", "sql2": "SELECT Status\nFROM roller_coaster\nGROUP BY Status\nHAVING COUNT(*) > 2", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/roller_coaster/0006", "sql1": "\nSELECT speed\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM roller_coaster\n      ORDER BY country_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT Speed\nFROM roller_coaster\nORDER BY LENGTH DESC\nLIMIT 1", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0009", "sql1": "\nSELECT theme\nFROM journal\nORDER BY theme\n", "sql2": "SELECT DISTINCT Theme\nFROM journal", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0013", "sql1": "\nSELECT editor_id,\n       name,\n       n AS count___\nFROM\n  (SELECT LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.n AS n\n   FROM editor AS LHS\n   INNER JOIN\n     (SELECT editor_id,\n             COUNT(*) AS n\n      FROM journal_committee\n      GROUP BY editor_id) AS RHS ON (LHS.editor_id = RHS.editor_id))\nORDER BY editor_id\n", "sql2": "SELECT T1.editor_id,\n       T1.Name,\n       COUNT(*)\nFROM editor AS T1\nJOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID\nGROUP BY T1.editor_id", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0005", "sql1": "\nSELECT name\nFROM editor\nWHERE (age >= 24.0\n       AND age <= 25.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nWHERE Age = 24\n  OR Age = 25", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0004", "sql1": "\nSELECT name\nFROM editor\nWHERE (age > 25.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nWHERE Age > 25", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.journal_id AS journal_id,\n          LHS.work_type AS work_type,\n          RHS.date AS date,\n          RHS.theme AS theme,\n          RHS.sales AS sales\n   FROM\n     (SELECT LHS.editor_id AS editor_id,\n             LHS.name AS name,\n             LHS.age AS age,\n             RHS.journal_id AS journal_id,\n             RHS.work_type AS work_type\n      FROM editor AS LHS\n      INNER JOIN journal_committee AS RHS ON (LHS.editor_id = RHS.editor_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM journal\n      WHERE (sales >= 3000)) AS RHS ON (LHS.journal_id = RHS.journal_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM journal_committee AS T1\nJOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID\nJOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID\nWHERE T3.Sales > 3000", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0008", "sql1": "\nSELECT age\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT age,\n                name,\n                COUNT(*) AS n\n         FROM editor\n         GROUP BY age,\n                  name)\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Age\nFROM editor\nGROUP BY Age\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM editor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM journal_committee AS RHS\n        WHERE (LHS.editor_id = RHS.editor_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nWHERE editor_id NOT IN\n    (SELECT editor_id\n     FROM journal_committee)", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0003", "sql1": "\nSELECT name,\n       age\nFROM editor\nORDER BY name\n", "sql2": "SELECT Name,\n       Age\nFROM editor", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0002", "sql1": "\nSELECT name\nFROM editor\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nORDER BY Age ASC", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.n AS n\n   FROM editor AS LHS\n   INNER JOIN\n     (SELECT editor_id,\n             COUNT(*) AS n\n      FROM journal_committee\n      GROUP BY editor_id) AS RHS ON (LHS.editor_id = RHS.editor_id))\nWHERE (n >= 2)\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM editor AS T1\nJOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID\nGROUP BY T1.Name\nHAVING COUNT(*) >= 2", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM editor\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM editor", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0017", "sql1": "\nSELECT `meansales` AS `avg_t1_sales_`\nFROM\n  (SELECT `work_type`,\n          AVG(`sales`) AS `meansales`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`journal_id` AS `journal_id`,\n                `LHS`.`date` AS `date`,\n                `LHS`.`theme` AS `theme`,\n                `LHS`.`sales` AS `sales`,\n                `RHS`.`editor_id` AS `editor_id`,\n                `RHS`.`work_type` AS `work_type`\n         FROM `journal` AS `LHS`\n         INNER JOIN `journal_committee` AS `RHS` ON (`LHS`.`journal_id` = `RHS`.`journal_id`))\n      WHERE (`work_type` = 'Photo'))\n   GROUP BY work_type)\nORDER BY avg_t1_sales_\n", "sql2": "SELECT avg(T1.sales)\nFROM journal AS T1\nJOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID\nWHERE T2.work_type = 'Photo'", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0016", "sql1": "\nSELECT date, theme,\n             sales\nFROM\n  (SELECT *\n   FROM journal AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM journal_committee AS RHS\n        WHERE (LHS.journal_id = RHS.journal_id) ))\nORDER BY date\n", "sql2": "SELECT date , theme,\n              sales\nFROM journal\nEXCEPT\nSELECT T1.date,\n       T1.theme,\n       T1.sales\nFROM journal AS T1\nJOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0007", "sql1": "\nSELECT age,\n       n AS count___\nFROM\n  (SELECT age,\n          name,\n          COUNT(*) AS n\n   FROM editor\n   GROUP BY age,\n            name)\nORDER BY age\n", "sql2": "SELECT Age,\n       COUNT(*)\nFROM editor\nGROUP BY Age", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0011", "sql1": "\nSELECT name,\n       age,\n       theme\nFROM\n  (SELECT LHS.journal_id AS journal_id,\n          LHS.date AS date,\n          LHS.theme AS theme,\n          LHS.sales AS sales,\n          LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.work_type AS work_type\n   FROM\n     (SELECT LHS.journal_id AS journal_id,\n             LHS.date AS date,\n             LHS.theme AS theme,\n             LHS.sales AS sales,\n             RHS.editor_id AS editor_id,\n             RHS.name AS name,\n             RHS.age AS age\n      FROM journal AS LHS\n      CROSS JOIN editor AS RHS) AS LHS\n   INNER JOIN journal_committee AS RHS ON (LHS.journal_id = RHS.journal_id\n                                              AND LHS.editor_id = RHS.editor_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T2.age,\n       T3.Theme\nFROM journal_committee AS T1\nJOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID\nJOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID\nORDER BY T3.Theme ASC", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0010", "sql1": "\nSELECT name,\n       theme\nFROM\n  (SELECT LHS.journal_id AS journal_id,\n          LHS.date AS date,\n          LHS.theme AS theme,\n          LHS.sales AS sales,\n          LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.work_type AS work_type\n   FROM\n     (SELECT LHS.journal_id AS journal_id,\n             LHS.date AS date,\n             LHS.theme AS theme,\n             LHS.sales AS sales,\n             RHS.editor_id AS editor_id,\n             RHS.name AS name,\n             RHS.age AS age\n      FROM journal AS LHS\n      CROSS JOIN editor AS RHS) AS LHS\n   INNER JOIN journal_committee AS RHS ON (LHS.journal_id = RHS.journal_id\n                                              AND LHS.editor_id = RHS.editor_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T3.Theme\nFROM journal_committee AS T1\nJOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID\nJOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/journal_committee/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM editor\n      ORDER BY age)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM editor\nORDER BY Age ASC\nLIMIT 1", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0005", "sql1": "\nSELECT `maxelevation` AS `max_elevation_`\nFROM\n  (SELECT `country`,\n          MAX(`elevation`) AS `maxelevation`\n   FROM `airports`\n   GROUP BY `country`)\nWHERE (`country` = 'Iceland')\nORDER BY max_elevation_\n", "sql2": "SELECT max(elevation)\nFROM airports\nWHERE country = 'Iceland'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0028", "sql1": "\nSELECT city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM airports\n   GROUP BY city)\nWHERE (n > 2)\nORDER BY city\n", "sql2": "SELECT city\nFROM airports\nGROUP BY city\nHAVING count(*) > 2\nORDER BY count(*)", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0004", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `airlines`\n      WHERE (`country` = 'Russia'))\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airlines\nWHERE country = 'Russia'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0012", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`alid` AS `alid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`iata` AS `iata`,\n          `LHS`.`icao` AS `icao`,\n          `LHS`.`callsign` AS `callsign`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`active` AS `active`,\n          `RHS`.`airline` AS `airline`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`alid` AS `alid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`iata` AS `iata`,\n             `LHS`.`icao` AS `icao`,\n             `LHS`.`callsign` AS `callsign`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`active` AS `active`\n      FROM `airlines` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `airlines`\n         WHERE (`name` = 'American Airlines')) AS RHS ON (LHS.alid = RHS.alid\n                                                          AND LHS.name = RHS.name\n                                                          AND LHS.iata = RHS.iata\n                                                          AND LHS.icao = RHS.icao\n                                                          AND LHS.callsign = RHS.callsign\n                                                          AND LHS.country = RHS.country\n                                                          AND LHS.active = RHS.active)) AS LHS\n   INNER JOIN\n     (SELECT airline,\n             alid,\n             COUNT(*) AS n\n      FROM routes\n      GROUP BY airline,\n               alid) AS RHS ON (LHS.alid = RHS.alid))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airlines AS T1\nJOIN routes AS T2 ON T1.alid = T2.alid\nWHERE T1.name = 'American Airlines'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0032", "sql1": "\nSELECT city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM airports\n   GROUP BY city)\nWHERE (n = 2)\nORDER BY city\n", "sql2": "SELECT city\nFROM airports\nGROUP BY city\nHAVING count(*) = 2", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0008", "sql1": "\nSELECT name\nFROM airports\nWHERE (elevation > -50\n       AND elevation <= 50)\nORDER BY name\n", "sql2": "SELECT name\nFROM airports\nWHERE elevation BETWEEN -50 AND 50", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0003", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM airlines)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airlines", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0023", "sql1": "\nSELECT n AS count___,\n       country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM airports\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       country\nFROM airports\nGROUP BY country\nORDER BY count(*) DESC", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0002", "sql1": "\nSELECT `name`,\n       `city`,\n       `country`,\n       `elevation`\nFROM `airports`\nWHERE (`city` = 'New York')\nORDER BY name\n", "sql2": "SELECT name,\n       city,\n       country,\n       elevation\nFROM airports\nWHERE city = 'New York'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0001", "sql1": "\nSELECT `name`\nFROM `airports`\nWHERE (`city` = 'Goroka')\nORDER BY name\n", "sql2": "SELECT name\nFROM airports\nWHERE city = 'Goroka'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0020", "sql1": "\nSELECT country_other AS country\nFROM\n  (SELECT alid,\n          callsign AS name,\n          iata,\n          icao,\n          callsign,\n          country,\n          active,\n          alid_other,\n          icao_other,\n          callsign_other,\n          country_other,\n          active_other\n   FROM\n     (SELECT alid,\n             name,\n             icao AS iata,\n             icao,\n             callsign,\n             country,\n             active,\n             alid_other,\n             icao_other,\n             callsign_other,\n             country_other,\n             active_other\n      FROM\n        (SELECT LHS.alid AS alid,\n                LHS.name AS name,\n                LHS.iata AS iata,\n                LHS.icao AS icao,\n                LHS.callsign AS callsign,\n                LHS.country AS country,\n                LHS.active AS active,\n                RHS.alid AS alid_other,\n                RHS.icao AS icao_other,\n                RHS.callsign AS callsign_other,\n                RHS.country AS country_other,\n                RHS.active AS active_other\n         FROM airlines AS LHS\n         INNER JOIN airlines AS RHS ON (LHS.icao = RHS.iata\n                                           AND LHS.callsign = RHS.name))))\nORDER BY country\n", "sql2": "SELECT country\nFROM airlines\nGROUP BY country\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0031", "sql1": "\nSELECT meanelevation AS avg_elevation_,\n       country\nFROM\n  (SELECT country,\n          AVG(elevation) AS meanelevation\n   FROM airports\n   GROUP BY country)\nORDER BY avg_elevation_\n", "sql2": "SELECT avg(elevation),\n       country\nFROM airports\nGROUP BY country", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0011", "sql1": "\nSELECT `n_distinct` AS `count_distinct_city_`\nFROM\n  (SELECT `country`,\n          COUNT(DISTINCT `city`) AS `n_distinct`\n   FROM `airports`\n   GROUP BY `country`)\nWHERE (`country` = 'Greenland')\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM airports\nWHERE country = 'Greenland'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/flight_4/0006", "sql1": "\nSELECT `name`\nFROM `airports`\nWHERE (`country` = 'Cuba'\n       OR `country` = 'Argentina')\nORDER BY name\n", "sql2": "SELECT name\nFROM airports\nWHERE country = 'Cuba'\n  OR country = 'Argentina'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/club_1/0009", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `advisor`,\n          `fname`,\n          COUNT(DISTINCT `fname`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `student`\n         WHERE (`fname` != 'Linda'\n                OR `lname` = 'Smith')) AS RHS ON (LHS.stuid = RHS.stuid\n                                                  AND LHS.lname = RHS.lname\n                                                  AND LHS.fname = RHS.fname\n                                                  AND LHS.age = RHS.age\n                                                  AND LHS.sex = RHS.sex\n                                                  AND LHS.major = RHS.major\n                                                  AND LHS.advisor = RHS.advisor\n                                                  AND LHS.city_code = RHS.city_code))\n   GROUP BY advisor,\n            fname)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.fname = 'Linda'\n  AND t3.lname = 'Smith'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0025", "sql1": "\nSELECT `n_distinct` AS `count_distinct_t2_position_`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `clubid`,\n             COUNT(DISTINCT `position`) AS `n_distinct`\n      FROM `member_of_club`\n      GROUP BY `clubid`) AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `club`\n           WHERE (`clubname` = 'Bootup Baltimore')) AS RHS\n        WHERE (LHS.clubid = RHS.clubid) ))\nORDER BY count_distinct_t2_position_\n", "sql2": "SELECT count(DISTINCT t2.position)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nWHERE t1.clubname = 'Bootup Baltimore'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0033", "sql1": "\nSELECT `meanage` AS `avg_t3_age_`\nFROM\n  (SELECT `clubid`,\n          `major`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `club`\n         WHERE (`clubname` = 'Bootup Baltimore')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                             AND LHS.clubname = RHS.clubname\n                                                             AND LHS.clubdesc = RHS.clubdesc\n                                                             AND LHS.clublocation = RHS.clublocation))\n   GROUP BY clubid,\n            major)\nORDER BY avg_t3_age_\n", "sql2": "SELECT avg(t3.age)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0013", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND major = 600)\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t3.major = '600'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0005", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `club`\n      WHERE (`clubname` = 'Bootup Baltimore')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                          AND LHS.clubname = RHS.clubname\n                                                          AND LHS.clubdesc = RHS.clubdesc\n                                                          AND LHS.clublocation = RHS.clublocation))\nORDER BY lname\n", "sql2": "SELECT t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0029", "sql1": "\nSELECT `clubname`\nFROM\n  (SELECT `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`position` AS `position`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`stuid` AS `stuid`,\n             `RHS`.`position` AS `position`\n      FROM `club` AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`city_code` = 'HOU')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY clubname\n", "sql2": "SELECT DISTINCT t1.clubname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.city_code = 'HOU'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0028", "sql1": "\nSELECT `clubname`\nFROM\n  (SELECT `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`position` AS `position`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`stuid` AS `stuid`,\n             `RHS`.`position` AS `position`\n      FROM `club` AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`city_code` = 'BAL')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY clubname\n", "sql2": "SELECT DISTINCT t1.clubname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.city_code = 'BAL'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0004", "sql1": "\nSELECT DISTINCT fname\nFROM student\nORDER BY fname\n", "sql2": "SELECT DISTINCT fname\nFROM student", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0032", "sql1": "\nSELECT clubname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          LHS.clubid AS clubid,\n          LHS.clubname AS clubname,\n          LHS.clubdesc AS clubdesc,\n          LHS.clublocation AS clublocation,\n          RHS.position AS POSITION\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             RHS.clubid AS clubid,\n             RHS.clubname AS clubname,\n             RHS.clubdesc AS clubdesc,\n             RHS.clublocation AS clublocation\n      FROM student AS LHS\n      CROSS JOIN club AS RHS) AS LHS\n   INNER JOIN member_of_club AS RHS ON (LHS.stuid = RHS.stuid\n                                           AND LHS.clubid = RHS.clubid))\nWHERE (advisor = 1121)\nORDER BY clubname\n", "sql2": "SELECT DISTINCT t1.clubname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.advisor = 1121", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0024", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Hopkins Student Enterprises'\n       OR `position` = 'CTO')\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Hopkins Student Enterprises'\n  AND t2.position = 'CTO'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0008", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))\n      WHERE (`clubname` = 'Pen and Paper Gaming')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Pen and Paper Gaming'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0019", "sql1": "\nSELECT `clublocation`\nFROM `club`\nWHERE (`clubname` = 'Pen and Paper Gaming')\nORDER BY clublocation\n", "sql2": "SELECT clublocation\nFROM club\nWHERE clubname = 'Pen and Paper Gaming'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0023", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND `position` = 'President')\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t2.position = 'President'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0035", "sql1": "\nSELECT `meanage` AS `avg_t3_age_`\nFROM\n  (SELECT `clublocation`,\n          `position`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `club`\n         WHERE (`clubname` = 'Tennis Club')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                        AND LHS.clubname = RHS.clubname\n                                                        AND LHS.clubdesc = RHS.clubdesc\n                                                        AND LHS.clublocation = RHS.clublocation))\n   GROUP BY clublocation,\n            POSITION)\nORDER BY avg_t3_age_\n", "sql2": "SELECT avg(t3.age)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0034", "sql1": "\nSELECT `meanage` AS `avg_t3_age_`\nFROM\n  (SELECT `clublocation`,\n          `position`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `club`\n         WHERE (`clubname` = 'Hopkins Student Enterprises')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                                        AND LHS.clubname = RHS.clubname\n                                                                        AND LHS.clubdesc = RHS.clubdesc\n                                                                        AND LHS.clublocation = RHS.clublocation))\n   GROUP BY clublocation,\n            POSITION)\nORDER BY avg_t3_age_\n", "sql2": "SELECT avg(t3.age)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Hopkins Student Enterprises'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0022", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `clubid`,\n          `clublocation`,\n          COUNT(*) AS `n`\n   FROM `club`\n   GROUP BY `clubid`,\n            `clublocation`)\nWHERE (`clublocation` != 'HHH')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club\nWHERE clublocation = 'HHH'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0018", "sql1": "\nSELECT `clublocation`\nFROM `club`\nWHERE (`clubname` = 'Tennis Club')\nORDER BY clublocation\n", "sql2": "SELECT clublocation\nFROM club\nWHERE clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0002", "sql1": "\nSELECT clubname\nFROM club\nORDER BY clubname\n", "sql2": "SELECT clubname\nFROM club", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM club\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0017", "sql1": "\nSELECT `clubdesc`\nFROM `club`\nWHERE (`clubname` = 'Pen and Paper Gaming')\nORDER BY clubdesc\n", "sql2": "SELECT clubdesc\nFROM club\nWHERE clubname = 'Pen and Paper Gaming'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0021", "sql1": "\nSELECT `clubname`\nFROM `club`\nWHERE (`clublocation` = 'AKW')\nORDER BY clubname\n", "sql2": "SELECT clubname\nFROM club\nWHERE clublocation = 'AKW'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0020", "sql1": "\nSELECT `clublocation`\nFROM `club`\nWHERE (`clubname` = 'Hopkins Student Enterprises')\nORDER BY clublocation\n", "sql2": "SELECT clublocation\nFROM club\nWHERE clubname = 'Hopkins Student Enterprises'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0016", "sql1": "\nSELECT `clubdesc`\nFROM `club`\nWHERE (`clubname` = 'Tennis Club')\nORDER BY clubdesc\n", "sql2": "SELECT clubdesc\nFROM club\nWHERE clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0027", "sql1": "\nSELECT `clubid` AS `count___`\nFROM\n  (SELECT `stuid`,\n          `lname`,\n          `fname`,\n          `age`,\n          `sex`,\n          `major`,\n          `advisor`,\n          `city_code`,\n          `clubid`,\n          `clubname`,\n          `clubdesc`,\n          `clublocation`,\n          `position`,\n          COUNT(DISTINCT `clubname`) OVER () AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND age = 18)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t3.age < 18", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0007", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`position` AS `position`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT `clubdesc`,\n             `clubid`,\n             COUNT(DISTINCT `clubname`) AS `n_distinct`\n      FROM `club`\n      GROUP BY `clubdesc`,\n               `clubid`) AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`\n                                      AND `LHS`.`clubdesc` = `RHS`.`clubdesc`))\nWHERE (`clubname` != 'Tennis Club')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0011", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND `sex` = 'F')\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t3.sex = 'F'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0010", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `fname`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `student`\n         WHERE (`fname` = 'Tracy'\n                AND `lname` = 'Kim')) AS RHS ON (LHS.stuid = RHS.stuid\n                                                 AND LHS.lname = RHS.lname\n                                                 AND LHS.fname = RHS.fname\n                                                 AND LHS.age = RHS.age\n                                                 AND LHS.sex = RHS.sex\n                                                 AND LHS.major = RHS.major\n                                                 AND LHS.advisor = RHS.advisor\n                                                 AND LHS.city_code = RHS.city_code)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.fname = 'Tracy'\n  AND t3.lname = 'Kim'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/club_1/0006", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `club`\n      WHERE (`clubname` = 'Hopkins Student Enterprises')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                                     AND LHS.clubname = RHS.clubname\n                                                                     AND LHS.clubdesc = RHS.clubdesc\n                                                                     AND LHS.clublocation = RHS.clublocation))\nORDER BY lname\n", "sql2": "SELECT t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Hopkins Student Enterprises'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0025", "sql1": "\nSELECT name,\n       meantrust AS avg_trust_\nFROM\n  (SELECT name,\n          AVG(trust) AS meantrust\n   FROM\n     (SELECT u_id,\n             name,\n             source_u_id,\n             trust,\n             u_id AS target_u_id\n      FROM\n        (SELECT LHS.u_id AS u_id,\n                LHS.name AS name,\n                RHS.source_u_id AS source_u_id,\n                RHS.trust AS trust\n         FROM useracct AS LHS\n         INNER JOIN trust AS RHS ON (LHS.u_id = RHS.target_u_id)))\n   GROUP BY name)\nORDER BY name\n", "sql2": "SELECT T1.name,\n       avg(trust)\nFROM useracct AS T1\nJOIN trust AS T2 ON T1.u_id = T2.target_u_id\nGROUP BY T2.target_u_id", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM useracct\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM useracct", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0008", "sql1": "\nSELECT n_distinct AS count_distinct_i_id_\nFROM\n  (SELECT COUNT(DISTINCT i_id) AS n_distinct\n   FROM review)\nORDER BY count_distinct_i_id_\n", "sql2": "SELECT count(DISTINCT i_id)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM review\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0023", "sql1": "\nSELECT name\nFROM\n  (SELECT a_id,\n          u_id,\n          a_id AS i_id,\n          rating,\n          rank,\n          name,\n          a_id_other,\n          rating_other,\n          rank_other\n   FROM\n     (SELECT LHS.a_id AS a_id,\n             LHS.u_id AS u_id,\n             LHS.i_id AS i_id,\n             LHS.rating AS rating,\n             LHS.rank AS rank,\n             LHS.name AS name,\n             RHS.a_id AS a_id_other,\n             RHS.rating AS rating_other,\n             RHS.rank AS rank_other\n      FROM\n        (SELECT a_id,\n                a_id AS u_id,\n                i_id,\n                rating,\n                rank,\n                name\n         FROM\n           (SELECT LHS.a_id AS a_id,\n                   LHS.u_id AS u_id,\n                   LHS.i_id AS i_id,\n                   LHS.rating AS rating,\n                   LHS.rank AS rank,\n                   RHS.name AS name\n            FROM review AS LHS\n            INNER JOIN useracct AS RHS ON (LHS.a_id = RHS.u_id))) AS LHS\n      INNER JOIN review AS RHS ON (LHS.a_id = RHS.i_id\n                                      AND LHS.rank = RHS.u_id)))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM useracct AS T1\nJOIN review AS T2 ON T1.u_id = T2.u_id\nORDER BY T2.rating DESC\nLIMIT 1", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0022", "sql1": "\nSELECT name,\n       rank AS count___\nFROM\n  (SELECT LHS.u_id AS u_id,\n          LHS.name AS name,\n          LHS.n AS n,\n          RHS.a_id AS a_id,\n          RHS.i_id AS i_id,\n          RHS.rank AS rank\n   FROM\n     (SELECT u_id,\n             name,\n             COUNT(*) OVER () AS n\n      FROM useracct) AS LHS\n   INNER JOIN review AS RHS ON (LHS.u_id = RHS.u_id\n                                   AND LHS.n = RHS.rating))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM useracct AS T1\nJOIN review AS T2 ON T1.u_id = T2.u_id\nGROUP BY T2.u_id", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0002", "sql1": "\nSELECT i_id,\n       title\nFROM item\nORDER BY i_id\n", "sql2": "SELECT *\nFROM item", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0001", "sql1": "\nSELECT `i_id`\nFROM `item`\nWHERE (`title` = 'orange')\nORDER BY i_id\n", "sql2": "SELECT i_id\nFROM item\nWHERE title = 'orange'", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0017", "sql1": "\nSELECT title\nFROM item\nORDER BY title\n", "sql2": "SELECT title\nFROM item\nORDER BY title", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0021", "sql1": "\nSELECT name,\n       meanrating AS avg_t2_rating_\nFROM\n  (SELECT LHS.u_id AS u_id,\n          LHS.name AS name,\n          RHS.meanrating AS meanrating\n   FROM useracct AS LHS\n   INNER JOIN\n     (SELECT u_id,\n             AVG(rating) AS meanrating\n      FROM review\n      GROUP BY u_id) AS RHS ON (LHS.u_id = RHS.u_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       avg(T2.rating)\nFROM useracct AS T1\nJOIN review AS T2 ON T1.u_id = T2.u_id\nGROUP BY T2.u_id", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0027", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM item AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM review AS RHS\n        WHERE (LHS.i_id = RHS.i_id) ))\nORDER BY title\n", "sql2": "SELECT title\nFROM item\nWHERE i_id NOT IN\n    (SELECT i_id\n     FROM review)", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0011", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.a_id AS a_id,\n          LHS.u_id AS u_id,\n          LHS.i_id AS i_id,\n          LHS.rating AS rating,\n          LHS.rank AS rank,\n          RHS.title AS title\n   FROM\n     (SELECT *\n      FROM review\n      WHERE (rating = 10)) AS LHS\n   LEFT JOIN item AS RHS ON (LHS.i_id = RHS.i_id))\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM item AS T1\nJOIN review AS T2 ON T1.i_id = T2.i_id\nWHERE T2.rating = 10", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM useracct AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM review AS RHS\n        WHERE (LHS.u_id = RHS.u_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM useracct\nWHERE u_id NOT IN\n    (SELECT u_id\n     FROM review)", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0006", "sql1": "\nSELECT minrank AS min_rank_\nFROM\n  (SELECT MIN(rank) AS minrank\n   FROM review)\nORDER BY min_rank_\n", "sql2": "SELECT min(rank)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/epinions_1/0026", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT u_id,\n                name,\n                source_u_id,\n                target_u_id,\n                u_id AS trust\n         FROM\n           (SELECT LHS.u_id AS u_id,\n                   LHS.name AS name,\n                   RHS.source_u_id AS source_u_id,\n                   RHS.target_u_id AS target_u_id\n            FROM useracct AS LHS\n            INNER JOIN trust AS RHS ON (LHS.u_id = RHS.trust)))\n      ORDER BY source_u_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.name\nFROM useracct AS T1\nJOIN trust AS T2 ON T1.u_id = T2.target_u_id\nORDER BY trust\nLIMIT 1", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0009", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.college_id AS college_id,\n          LHS.name AS name,\n          LHS.leader_name AS leader_name,\n          LHS.college_location AS college_location,\n          RHS.member_id AS member_id,\n          RHS.name AS name_other,\n          RHS.country AS country\n   FROM college AS LHS\n   INNER JOIN member AS RHS ON (LHS.college_id = RHS.college_id))\nORDER BY name___1\n", "sql2": "SELECT T2.Name,\n       T1.Name\nFROM college AS T1\nJOIN member AS T2 ON T1.College_ID = T2.College_ID", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.round_id AS round_id,\n          RHS.decoration_theme AS decoration_theme,\n          RHS.rank_in_round AS rank_in_round\n   FROM member AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM round\n      WHERE (rank_in_round > 3)) AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM member AS T1\nJOIN round AS T2 ON T1.Member_ID = T2.Member_ID\nWHERE T2.Rank_in_Round > 3", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0005", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM member\nGROUP BY Country", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0004", "sql1": "\nSELECT `name`\nFROM `member`\nWHERE (`country` != 'United States'\n       OR `country` != 'Canada')\nORDER BY name\n", "sql2": "SELECT Name\nFROM member\nWHERE Country = 'United States'\n  OR Country = 'Canada'", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0012", "sql1": "\nSELECT name,\n       decoration_theme\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.round_id AS round_id,\n          RHS.decoration_theme AS decoration_theme,\n          RHS.rank_in_round AS rank_in_round\n   FROM member AS LHS\n   INNER JOIN round AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T2.Decoration_Theme\nFROM member AS T1\nJOIN round AS T2 ON T1.Member_ID = T2.Member_ID", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0008", "sql1": "\nSELECT leader_name,\n       college_location\nFROM college\nORDER BY leader_name\n", "sql2": "SELECT Leader_Name,\n       College_Location\nFROM college", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM member AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM round AS RHS\n        WHERE (LHS.member_id = RHS.member_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM member\nWHERE Member_ID NOT IN\n    (SELECT Member_ID\n     FROM round)", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0003", "sql1": "\nSELECT name,\n       country\nFROM member\nORDER BY name\n", "sql2": "SELECT Name,\n       Country\nFROM member", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0002", "sql1": "\nSELECT name\nFROM member\nORDER BY name\n", "sql2": "SELECT Name\nFROM member\nORDER BY Name ASC", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.round_id AS round_id,\n          RHS.decoration_theme AS decoration_theme,\n          RHS.rank_in_round AS rank_in_round\n   FROM member AS LHS\n   INNER JOIN round AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM member AS T1\nJOIN round AS T2 ON T1.Member_ID = T2.Member_ID\nORDER BY Rank_in_Round ASC", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM member\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM member", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0007", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.name AS name_other,\n          RHS.country AS country_other\n   FROM member AS LHS\n   INNER JOIN member AS RHS ON (LHS.college_id = RHS.college_id\n                                   AND LHS.member_id = RHS.member_id))\nORDER BY country\n", "sql2": "SELECT Country\nFROM member\nGROUP BY Country\nHAVING COUNT(*) > 2", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0011", "sql1": "\nSELECT DISTINCT `leader_name`\nFROM\n  (SELECT `LHS`.`college_id` AS `college_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`leader_name` AS `leader_name`,\n          `LHS`.`college_location` AS `college_location`,\n          `RHS`.`member_id` AS `member_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`country` AS `country`\n   FROM `college` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `member`\n      WHERE (`country` = 'Canada')) AS RHS ON (LHS.college_id = RHS.college_id))\nORDER BY leader_name\n", "sql2": "SELECT DISTINCT T1.Leader_Name\nFROM college AS T1\nJOIN member AS T2 ON T1.College_ID = T2.College_ID\nWHERE T2.Country = 'Canada'", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0010", "sql1": "\nSELECT name_other AS name,\n       college_location\nFROM\n  (SELECT LHS.college_id AS college_id,\n          LHS.name AS name,\n          LHS.leader_name AS leader_name,\n          LHS.college_location AS college_location,\n          RHS.member_id AS member_id,\n          RHS.name AS name_other,\n          RHS.country AS country\n   FROM college AS LHS\n   INNER JOIN member AS RHS ON (LHS.college_id = RHS.college_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.College_Location\nFROM college AS T1\nJOIN member AS T2 ON T1.College_ID = T2.College_ID\nORDER BY T2.Name ASC", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/decoration_competition/0006", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT college_id AS member_id,\n          name,\n          country,\n          college_id,\n          name_other,\n          college_id_other\n   FROM\n     (SELECT LHS.member_id AS member_id,\n             LHS.name AS name,\n             LHS.country AS country,\n             LHS.college_id AS college_id,\n             RHS.name AS name_other,\n             RHS.college_id AS college_id_other\n      FROM member AS LHS\n      INNER JOIN member AS RHS ON (LHS.college_id = RHS.member_id\n                                      AND LHS.country = RHS.country)))\nORDER BY country\n", "sql2": "SELECT Country\nFROM member\nGROUP BY Country\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0005", "sql1": "\nSELECT `name`,\n       `built_year`\nFROM `mill`\nWHERE (`type` = 'Grondzeiler')\nORDER BY name\n", "sql2": "SELECT name,\n       built_year\nFROM mill\nWHERE TYPE = 'Grondzeiler'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0004", "sql1": "\nSELECT DISTINCT AVG(length_feet) OVER () AS avg_length_feet_\nFROM bridge\nORDER BY avg_length_feet_\n", "sql2": "SELECT avg(length_feet)\nFROM bridge", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0012", "sql1": "\nSELECT `location`\nFROM `bridge`\nWHERE (`name` = 'Kolob Arch'\n       OR `name` = 'Rainbow Bridge')\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM bridge\nWHERE name = 'Kolob Arch'\n  OR name = 'Rainbow Bridge'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0015", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT notes,\n                TYPE,\n                COUNT(*) AS n\n         FROM mill\n         GROUP BY notes,\n                  TYPE)\n      ORDER BY TYPE DESC)\n   LIMIT 1)\n", "sql2": "SELECT TYPE,\n       count(*)\nFROM mill\nGROUP BY TYPE\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0002", "sql1": "\nSELECT `name`,\n       `nationality`,\n       `id`\nFROM `architect`\nWHERE (`gender` = 'male')\nORDER BY name\n", "sql2": "SELECT name,\n       nationality,\n       id\nFROM architect\nWHERE gender = 'male'\nORDER BY name", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0001", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `gender`,\n          `nationality`,\n          COUNT(DISTINCT `gender`) AS `n_distinct`\n   FROM `architect`\n   GROUP BY `gender`,\n            `nationality`)\nWHERE (`gender` != 'female')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM architect\nWHERE gender = 'female'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/architecture/0007", "sql1": "\nSELECT `name`\nFROM `mill`\nWHERE (`location` != 'Donceel')\nORDER BY name\n", "sql2": "SELECT name\nFROM mill\nWHERE LOCATION != 'Donceel'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0013", "sql1": "\nSELECT name,\n       service\nFROM train\nORDER BY name\n", "sql2": "SELECT name,\n       service\nFROM train\nORDER BY TIME", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0004", "sql1": "\nSELECT `name`,\n       `total_passengers`\nFROM `station`\nWHERE (`location` != 'London')\nORDER BY name\n", "sql2": "SELECT name,\n       total_passengers\nFROM station\nWHERE LOCATION != 'London'", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0012", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM train\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM train", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0008", "sql1": "\nSELECT DISTINCT LOCATION\nFROM station\nWHERE (number_of_platforms > 15\n       AND number_of_platforms < 25)\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM station\nWHERE number_of_platforms >= 15\n  AND total_passengers > 25", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0003", "sql1": "\nSELECT DISTINCT LOCATION\nFROM station\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM station", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0019", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM station\n   GROUP BY LOCATION)\nWHERE (n <= 1)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM station\nGROUP BY LOCATION\nHAVING count(*) = 1", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0023", "sql1": "\nSELECT name,\n       LOCATION\nFROM station\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION\nFROM station\nORDER BY Annual_entry_exit,\n         Annual_interchanges", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0022", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`station_id` AS `station_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`annual_entry_exit` AS `annual_entry_exit`,\n          `LHS`.`annual_interchanges` AS `annual_interchanges`,\n          `LHS`.`total_passengers` AS `total_passengers`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`main_services` AS `main_services`,\n          `LHS`.`number_of_platforms` AS `number_of_platforms`,\n          `RHS`.`train_id` AS `train_id`,\n          `RHS`.`station_id` AS `station_id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`time` AS `time`,\n          `RHS`.`service` AS `service`\n   FROM\n     (SELECT *\n      FROM `station`\n      WHERE (`location` != 'London')) AS LHS\n   CROSS JOIN\n     (SELECT LHS.train_id AS train_id,\n             LHS.station_id AS station_id,\n             RHS.name AS name,\n             RHS.time AS TIME,\n             RHS.service AS service\n      FROM train_station AS LHS\n      LEFT JOIN train AS RHS ON (LHS.train_id = RHS.train_id)) AS RHS)\nWHERE (station_id = station_id_other)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM train_station AS T1\nJOIN train AS T2 ON T1.train_id = T2.train_id\nWHERE T1.station_id NOT IN\n    (SELECT T4.station_id\n     FROM train_station AS T3\n     JOIN station AS T4 ON T3.station_id = T4.station_id\n     WHERE t4.location = 'London')", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT name,\n          total_passengers,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.train_id AS train_id,\n             LHS.station_id AS station_id,\n             RHS.name AS name,\n             RHS.annual_entry_exit AS annual_entry_exit,\n             RHS.annual_interchanges AS annual_interchanges,\n             RHS.total_passengers AS total_passengers,\n             RHS.location AS LOCATION,\n             RHS.main_services AS main_services,\n             RHS.number_of_platforms AS number_of_platforms\n      FROM train_station AS LHS\n      INNER JOIN station AS RHS ON (LHS.station_id = RHS.station_id))\n   GROUP BY name,\n            total_passengers)\nWHERE (n >= 2)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nGROUP BY T1.station_id\nHAVING count(*) >= 2", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0002", "sql1": "\nSELECT name,\n       LOCATION,\n       number_of_platforms\nFROM station\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION,\n       number_of_platforms\nFROM station", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0014", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.train_id AS train_id,\n             LHS.station_id AS station_id,\n             RHS.name AS name,\n             RHS.annual_entry_exit AS annual_entry_exit,\n             RHS.annual_interchanges AS annual_interchanges,\n             RHS.total_passengers AS total_passengers,\n             RHS.location AS LOCATION,\n             RHS.main_services AS main_services,\n             RHS.number_of_platforms AS number_of_platforms\n      FROM train_station AS LHS\n      INNER JOIN station AS RHS ON (LHS.station_id = RHS.station_id))\n   GROUP BY LOCATION,\n            name)\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nGROUP BY T1.station_id", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM station\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM station", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.train_id AS train_id,\n          LHS.station_id AS station_id,\n          RHS.name AS name\n   FROM train_station AS LHS\n   INNER JOIN\n     (SELECT name,\n             station_id,\n             COUNT(*) AS n\n      FROM station\n      GROUP BY name,\n               station_id) AS RHS ON (LHS.station_id = RHS.station_id\n                                      AND LHS.train_id = RHS.n))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nGROUP BY T1.station_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM station AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM train_station AS RHS\n        WHERE (LHS.station_id = RHS.station_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM station\nWHERE station_id NOT IN\n    (SELECT station_id\n     FROM train_station)", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0016", "sql1": "\nSELECT `name_other` AS `name`,\n       `time`\nFROM\n  (SELECT `LHS`.`station_id` AS `station_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`annual_entry_exit` AS `annual_entry_exit`,\n          `LHS`.`annual_interchanges` AS `annual_interchanges`,\n          `LHS`.`total_passengers` AS `total_passengers`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`main_services` AS `main_services`,\n          `LHS`.`number_of_platforms` AS `number_of_platforms`,\n          `RHS`.`train_id` AS `train_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`time` AS `time`,\n          `RHS`.`service` AS `service`\n   FROM\n     (SELECT *\n      FROM `station`\n      WHERE (`location` = 'London')) AS LHS\n   INNER JOIN\n     (SELECT LHS.train_id AS train_id,\n             LHS.name AS name,\n             LHS.time AS TIME,\n             LHS.service AS service,\n             RHS.station_id AS station_id\n      FROM train AS LHS\n      INNER JOIN train_station AS RHS ON (LHS.train_id = RHS.train_id)) AS RHS ON (LHS.station_id = RHS.station_id))\nORDER BY name\n", "sql2": "SELECT T3.name,\n       T3.time\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nJOIN train AS T3 ON T3.train_id = T1.train_id\nWHERE T2.location = 'London'\nORDER BY T3.time DESC", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/train_station/0011", "sql1": "\nSELECT name,\n       TIME,\n       service\nFROM train\nORDER BY name\n", "sql2": "SELECT name,\n       TIME,\n       service\nFROM train", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0009", "sql1": "\nSELECT allergytype\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT allergy,\n                allergytype,\n                COUNT(*) OVER () AS n\n         FROM allergy_type)\n      ORDER BY allergy)\n   LIMIT 1)\n", "sql2": "SELECT allergytype\nFROM Allergy_type\nGROUP BY allergytype\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0025", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT sex,\n                stuid,\n                MAX(age) AS maxage\n         FROM student\n         GROUP BY sex,\n                  stuid)\n      ORDER BY maxage DESC)\n   LIMIT 1)\n", "sql2": "SELECT StuID\nFROM Student\nWHERE age =\n    (SELECT max(age)\n     FROM Student)", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0033", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `has_allergy`\nWHERE (`allergy` = 'Cat')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Has_allergy\nWHERE Allergy = 'Cat'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0013", "sql1": "\nSELECT n_distinct AS count_distinct_advisor_\nFROM\n  (SELECT COUNT(DISTINCT advisor) AS n_distinct\n   FROM student)\nORDER BY count_distinct_advisor_\n", "sql2": "SELECT count(DISTINCT advisor)\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0005", "sql1": "\nSELECT `allergy`\nFROM `allergy_type`\nWHERE (`allergytype` = 'food')\nORDER BY allergy\n", "sql2": "SELECT DISTINCT allergy\nFROM Allergy_type\nWHERE allergytype = 'food'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0029", "sql1": "\nSELECT meanage AS avg_age_,\n       sex\nFROM\n  (SELECT sex,\n          AVG(age) AS meanage\n   FROM student\n   GROUP BY sex)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       sex\nFROM Student\nGROUP BY sex", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0028", "sql1": "\nSELECT age,\n       n AS count___\nFROM\n  (SELECT age,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY age)\nORDER BY age\n", "sql2": "SELECT age,\n       count(*)\nFROM Student\nGROUP BY age", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0004", "sql1": "\nSELECT allergy,\n       allergytype\nFROM allergy_type\nORDER BY allergy\n", "sql2": "SELECT allergy,\n       allergytype\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0012", "sql1": "\nSELECT fname,\n       lname\nFROM student\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0024", "sql1": "\nSELECT lname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT stuid,\n                lname,\n                fname,\n                age,\n                sex,\n                major,\n                advisor,\n                city_code,\n                MIN(age) OVER () AS minage\n         FROM student)\n      ORDER BY age)\n   LIMIT 1)\n", "sql2": "SELECT LName\nFROM Student\nWHERE age =\n    (SELECT min(age)\n     FROM Student)", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0008", "sql1": "\nSELECT allergytype,\n       n AS count___\nFROM\n  (SELECT allergytype,\n          COUNT(*) AS n\n   FROM allergy_type\n   GROUP BY allergytype)\nORDER BY allergytype\n", "sql2": "SELECT allergytype,\n       count(*)\nFROM Allergy_type\nGROUP BY allergytype", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0049", "sql1": "\nSELECT `fname`,\n       `major`\nFROM\n  (SELECT *\n   FROM `student` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `has_allergy`\n           WHERE (`allergy` = 'Soy')) AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY fname\n", "sql2": "SELECT fname,\n       major\nFROM Student\nWHERE StuID NOT IN\n    (SELECT StuID\n     FROM Has_allergy\n     WHERE Allergy = 'Soy')", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0015", "sql1": "\nSELECT DISTINCT city_code\nFROM student\nORDER BY city_code\n", "sql2": "SELECT DISTINCT city_code\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0003", "sql1": "\nSELECT DISTINCT allergytype\nFROM allergy_type\nORDER BY allergytype\n", "sql2": "SELECT DISTINCT allergytype\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0039", "sql1": "\nSELECT allergy,\n       n AS count___\nFROM\n  (SELECT allergy,\n          COUNT(*) AS n\n   FROM has_allergy\n   GROUP BY allergy)\nORDER BY allergy\n", "sql2": "SELECT Allergy,\n       count(*)\nFROM Has_allergy\nGROUP BY Allergy", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0019", "sql1": "\nSELECT stuid\nFROM student\nWHERE (age > 20)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE age > 20", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0035", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM has_allergy AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Has_allergy", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0034", "sql1": "\nSELECT stuid\nFROM\n  (SELECT stuid,\n          COUNT(*) AS n\n   FROM has_allergy\n   GROUP BY stuid)\nWHERE (n >= 2)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Has_allergy\nGROUP BY StuID\nHAVING count(*) >= 2", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0022", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `student`\nWHERE (`city_code` = 'HKG'\n       OR `city_code` = 'CHI')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE city_code = 'HKG'\n  OR city_code = 'CHI'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0018", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT age,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY age)\nWHERE (age = 18\n       OR n > age)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE age = 18", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0038", "sql1": "\nSELECT allergy\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT allergy,\n                COUNT(*) AS n\n         FROM has_allergy\n         GROUP BY allergy)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Allergy\nFROM Has_allergy\nGROUP BY Allergy\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0002", "sql1": "\nSELECT n_distinct AS count_distinct_allergytype_\nFROM\n  (SELECT COUNT(DISTINCT allergytype) AS n_distinct\n   FROM allergy_type)\nORDER BY count_distinct_allergytype_\n", "sql2": "SELECT count(DISTINCT allergytype)\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0014", "sql1": "\nSELECT DISTINCT major\nFROM student\nORDER BY major\n", "sql2": "SELECT DISTINCT Major\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0001", "sql1": "\nSELECT n_distinct AS count_distinct_allergy_\nFROM\n  (SELECT COUNT(DISTINCT allergy) AS n_distinct\n   FROM allergy_type)\nORDER BY count_distinct_allergy_\n", "sql2": "SELECT count(DISTINCT allergy)\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0017", "sql1": "\nSELECT `stuid`\nFROM `student`\nWHERE (`sex` = 'M')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE Sex = 'M'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0040", "sql1": "\nSELECT allergytype,\n       n AS count___\nFROM\n  (SELECT allergytype,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.allergy AS allergy,\n             LHS.allergytype AS allergytype,\n             RHS.stuid AS stuid\n      FROM allergy_type AS LHS\n      INNER JOIN has_allergy AS RHS ON (LHS.allergy = RHS.allergy))\n   GROUP BY allergytype)\nORDER BY allergytype\n", "sql2": "SELECT T2.allergytype,\n       count(*)\nFROM Has_allergy AS T1\nJOIN Allergy_type AS T2 ON T1.allergy = T2.allergy\nGROUP BY T2.allergytype", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0037", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM `has_allergy` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `allergy_type`\n           WHERE (`allergytype` = 'food')) AS RHS\n        WHERE (LHS.allergy = RHS.allergy) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Has_allergy AS T1\nJOIN Allergy_type AS T2 ON T1.allergy = T2.allergy\nWHERE T2.allergytype = 'food'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0021", "sql1": "\nSELECT advisor\nFROM student\nWHERE (stuid = 1004)\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM Student\nWHERE StuID = 1004", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0020", "sql1": "\nSELECT `city_code`\nFROM `student`\nWHERE (`lname` = 'Kim')\nORDER BY city_code\n", "sql2": "SELECT city_code\nFROM Student\nWHERE LName = 'Kim'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0036", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`allergy` AS `allergy`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`allergy` AS `allergy`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`n` AS `n`\n      FROM `has_allergy` AS `LHS`\n      CROSS JOIN\n        (SELECT `age`,\n                `sex`,\n                COUNT(*) AS `n`\n         FROM `student`\n         GROUP BY `age`,\n                  `sex`) AS `RHS`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`sex` != 'F')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                         AND `LHS`.`age` = `RHS`.`age`\n                                         AND `LHS`.`sex` = `RHS`.`sex`))\nWHERE (`allergy` = 'Milk'\n       OR `allergy` = 'Eggs')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM has_allergy AS T1\nJOIN Student AS T2 ON T1.StuID = T2.StuID\nWHERE T2.sex = 'F'\n  AND T1.allergy = 'Milk'\n  OR T1.allergy = 'Eggs'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0016", "sql1": "\nSELECT `fname`,\n       `lname`,\n       `age`\nFROM `student`\nWHERE (`sex` = 'F')\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname,\n       Age\nFROM Student\nWHERE Sex = 'F'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0031", "sql1": "\nSELECT advisor,\n       n AS count___\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nORDER BY advisor\n", "sql2": "SELECT advisor,\n       count(*)\nFROM Student\nGROUP BY advisor", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0027", "sql1": "\nSELECT major\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT stuid,\n                lname,\n                fname,\n                age,\n                sex,\n                major,\n                advisor,\n                city_code,\n                COUNT(*) OVER () AS n\n         FROM student)\n      ORDER BY stuid)\n   LIMIT 1)\n", "sql2": "SELECT major\nFROM Student\nGROUP BY major\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0007", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `allergy_type`\nWHERE (`allergytype` = 'animal')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Allergy_type\nWHERE allergytype = 'animal'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0046", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `allergytype`,\n          `sex`,\n          COUNT(DISTINCT `stuid`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`allergy` AS `allergy`,\n             `LHS`.`allergytype` AS `allergytype`,\n             `LHS`.`stuid` AS `stuid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM\n        (SELECT `LHS`.`allergy` AS `allergy`,\n                `LHS`.`allergytype` AS `allergytype`,\n                `RHS`.`stuid` AS `stuid`\n         FROM `allergy_type` AS `LHS`\n         INNER JOIN `has_allergy` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`)) AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\n   GROUP BY `allergytype`,\n            `sex`)\nWHERE (`sex` = 'M'\n       AND `allergytype` = 'food')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE sex = 'M'\n  AND StuID IN\n    (SELECT StuID\n     FROM Has_allergy AS T1\n     JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy\n     WHERE T2.allergytype = 'food')", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0047", "sql1": "\nSELECT DISTINCT `fname`,\n                `city_code`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`allergy` AS `allergy`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT *\n      FROM `has_allergy`\n      WHERE (`allergy` = 'Milk'\n             OR `allergy` = 'Cat')) AS LHS\n   LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.fname,\n                T1.city_code\nFROM Student AS T1\nJOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid\nWHERE T2.Allergy = 'Milk'\n  OR T2.Allergy = 'Cat'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0010", "sql1": "\nSELECT allergytype\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT allergytype,\n                COUNT(*) AS n\n         FROM allergy_type\n         GROUP BY allergytype)\n      ORDER BY n)\n   LIMIT 1)\n", "sql2": "SELECT allergytype\nFROM Allergy_type\nGROUP BY allergytype\nORDER BY count(*) ASC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0006", "sql1": "\nSELECT `allergytype`\nFROM `allergy_type`\nWHERE (`allergy` = 'Cat')\nORDER BY allergytype\n", "sql2": "SELECT allergytype\nFROM Allergy_type\nWHERE allergy = 'Cat'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0026", "sql1": "\nSELECT major,\n       n AS count___\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nORDER BY major\n", "sql2": "SELECT major,\n       count(*)\nFROM Student\nGROUP BY major", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/allergy_1/0030", "sql1": "\nSELECT city_code,\n       n AS count___\nFROM\n  (SELECT city_code,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY city_code)\nORDER BY city_code\n", "sql2": "SELECT city_code,\n       count(*)\nFROM Student\nGROUP BY city_code", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/soccer_1/0002", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`name` AS `name`\n   FROM\n     (SELECT `id`,\n             COUNT(*) AS `n`\n      FROM `league`\n      WHERE (`name` != 'England')\n      GROUP BY id) AS LHS\n   INNER JOIN country AS RHS ON (LHS.id = RHS.id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Country AS T1\nJOIN League AS T2 ON T1.id = T2.country_id\nWHERE T1.name = 'England'", "schema": "spider/soccer_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/soccer_1/0001", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.id AS id,\n          LHS.country_id AS country_id,\n          LHS.name AS name,\n          RHS.name AS name_other\n   FROM league AS LHS\n   INNER JOIN country AS RHS ON (LHS.id = RHS.id))\nORDER BY name___1\n", "sql2": "SELECT T1.name,\n       T2.name\nFROM Country AS T1\nJOIN League AS T2 ON T1.id = T2.country_id", "schema": "spider/soccer_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM election\n           WHERE (votes >= 10000.0)) AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nWHERE Votes > 10000", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0005", "sql1": "\nSELECT name,\n       party\nFROM representative\nORDER BY name\n", "sql2": "SELECT Name,\n       Party\nFROM representative", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0012", "sql1": "\nSELECT lifespan\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY lifespan\n", "sql2": "SELECT T2.Lifespan\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nORDER BY Vote_Percent DESC", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0008", "sql1": "\nSELECT name, date\nFROM\n  (SELECT LHS.election_id AS election_id,\n          LHS.representative_id AS representative_id,\n          LHS.date AS date,\n          LHS.votes AS votes,\n          LHS.vote_percent AS vote_percent,\n          LHS.seats AS seats,\n          LHS.place AS place,\n          RHS.name AS name,\n          RHS.state AS state,\n          RHS.party AS party,\n          RHS.lifespan AS lifespan\n   FROM election AS LHS\n   INNER JOIN representative AS RHS ON (LHS.representative_id = RHS.representative_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.Date\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0003", "sql1": "\nSELECT date, vote_percent\nFROM election\nORDER BY date\n", "sql2": "SELECT Date , Vote_Percent\nFROM election", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0019", "sql1": "\nSELECT DISTINCT `party`\nFROM `representative`\nWHERE (`state` != 'New York'\n       AND `state` = 'Pennsylvania')\nORDER BY party\n", "sql2": "SELECT Party\nFROM representative\nWHERE State = 'New York' INTERSECT\n  SELECT Party\n  FROM representative WHERE State = 'Pennsylvania'", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM representative\nWHERE Representative_ID NOT IN\n    (SELECT Representative_ID\n     FROM election)", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0002", "sql1": "\nSELECT votes\nFROM election\nORDER BY votes\n", "sql2": "SELECT Votes\nFROM election\nORDER BY Votes DESC", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0014", "sql1": "\nSELECT party,\n       n AS count___\nFROM\n  (SELECT party,\n          COUNT(*) AS n\n   FROM representative\n   GROUP BY party)\nORDER BY party\n", "sql2": "SELECT Party,\n       COUNT(*)\nFROM representative\nGROUP BY Party", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM election\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM election", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0017", "sql1": "\nSELECT state\nFROM\n  (SELECT state,\n          COUNT(*) AS n\n   FROM representative\n   GROUP BY state)\nWHERE (n >= 2)\nORDER BY state\n", "sql2": "SELECT State\nFROM representative\nGROUP BY State\nHAVING COUNT(*) >= 2", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0020", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT party) OVER () AS count_distinct_party_\nFROM representative\nORDER BY count_distinct_party_\n", "sql2": "SELECT count(DISTINCT Party)\nFROM representative", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0016", "sql1": "\nSELECT DISTINCT party\nFROM\n  (SELECT name,\n          party,\n          COUNT(*) AS n\n   FROM representative\n   GROUP BY name,\n            party)\nWHERE (n < 3)\nORDER BY party\n", "sql2": "SELECT Party\nFROM representative\nGROUP BY Party\nHAVING COUNT(*) >= 3", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0007", "sql1": "\nSELECT `lifespan`\nFROM `representative`\nWHERE (`state` = 'New York'\n       OR `state` = 'Indiana')\nORDER BY lifespan\n", "sql2": "SELECT Lifespan\nFROM representative\nWHERE State = 'New York'\n  OR State = 'Indiana'", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0011", "sql1": "\nSELECT DISTINCT party\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY party\n", "sql2": "SELECT T2.Party\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nORDER BY votes ASC\nLIMIT 1", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nORDER BY votes DESC", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election_representative/0006", "sql1": "\nSELECT `name`\nFROM `representative`\nWHERE (`party` != 'Republican')\nORDER BY name\n", "sql2": "SELECT Name\nFROM Representative\nWHERE Party != 'Republican'", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0009", "sql1": "\nSELECT city,\n       gdp\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM city\n      ORDER BY gdp)\n   LIMIT 1)\n", "sql2": "SELECT city,\n       GDP\nFROM city\nORDER BY GDP\nLIMIT 1", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0005", "sql1": "\nSELECT DISTINCT `venue`\nFROM\n  (SELECT `LHS`.`city_id` AS `city_id`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`hanzi` AS `hanzi`,\n          `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,\n          `LHS`.`regional_population` AS `regional_population`,\n          `LHS`.`gdp` AS `gdp`,\n          `LHS`.`match_id` AS `match_id`,\n          `LHS`.`date` AS `date`,\n          `LHS`.`venue` AS `venue`,\n          `LHS`.`score` AS `score`,\n          `LHS`.`result` AS `result`,\n          `LHS`.`competition` AS `competition`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`host_city` AS `host_city`\n   FROM\n     (SELECT `LHS`.`city_id` AS `city_id`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`hanzi` AS `hanzi`,\n             `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,\n             `LHS`.`regional_population` AS `regional_population`,\n             `LHS`.`gdp` AS `gdp`,\n             `RHS`.`match_id` AS `match_id`,\n             `RHS`.`date` AS `date`,\n             `RHS`.`venue` AS `venue`,\n             `RHS`.`score` AS `score`,\n             `RHS`.`result` AS `result`,\n             `RHS`.`competition` AS `competition`\n      FROM `city` AS `LHS`\n      CROSS JOIN `match` AS `RHS`) AS `LHS`\n   INNER JOIN `hosting_city` AS `RHS` ON (`LHS`.`match_id` = `RHS`.`match_id`))\nWHERE (`city` = 'Nanjing ( Jiangsu )'\n       OR `competition` = '1994 FIFA World Cup qualification')\nORDER BY venue\n", "sql2": "SELECT T3.venue\nFROM city AS T1\nJOIN hosting_city AS T2 ON T1.city_id = T2.host_city\nJOIN MATCH AS T3 ON T2.match_id = T3.match_id\nWHERE T1.city = 'Nanjing ( Jiangsu )'\n  AND T3.competition = '1994 FIFA World Cup qualification'", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0008", "sql1": "\nSELECT city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM city\n      ORDER BY regional_population DESC)\n   LIMIT 3)\n", "sql2": "SELECT city\nFROM city\nORDER BY regional_population DESC\nLIMIT 3", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0015", "sql1": "\nSELECT city\nFROM city\nWHERE (regional_population >= 10000000)\nORDER BY city\n", "sql2": "SELECT city\nFROM city\nWHERE regional_population > 10000000", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0019", "sql1": "\nSELECT gdp\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM city\n      ORDER BY city_id)\n   LIMIT 1)\n", "sql2": "SELECT gdp\nFROM city\nORDER BY Regional_Population DESC\nLIMIT 1", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0018", "sql1": "\nSELECT venue\nFROM match\nORDER BY venue\n", "sql2": "SELECT venue\nFROM MATCH\nORDER BY date DESC", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0002", "sql1": "\nSELECT `match_id`\nFROM `match`\nWHERE (`competition` = '1994 FIFA World Cup qualification')\nORDER BY match_id\n", "sql2": "SELECT match_id\nFROM MATCH\nWHERE competition = '1994 FIFA World Cup qualification'", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0001", "sql1": "\nSELECT host_city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM hosting_city\n      ORDER BY match_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT host_city\nFROM hosting_city\nORDER BY YEAR DESC\nLIMIT 1", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0017", "sql1": "\nSELECT n AS count___,\n       competition\nFROM\n  (SELECT competition,\n          COUNT(*) AS n\n   FROM match\n   GROUP BY competition)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       Competition\nFROM MATCH\nGROUP BY Competition", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/city_record/0016", "sql1": "\nSELECT city\nFROM city\nWHERE (regional_population >= 10000000\n       OR regional_population < 5000000)\nORDER BY city\n", "sql2": "SELECT city\nFROM city\nWHERE regional_population > 10000000\nUNION\nSELECT city\nFROM city\nWHERE regional_population < 5000000", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0009", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `customer_id`,\n                     `outcome_code`,\n                     COUNT(*) AS `n`\n              FROM `mailshot_customers`\n              GROUP BY `customer_id`,\n                       `outcome_code`)\n           WHERE (`outcome_code` = 'Order'\n                  AND n >= 2)) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT T2.customer_name\nFROM mailshot_customers AS T1\nJOIN customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE outcome_code = 'Order'\nGROUP BY T1.customer_id\nHAVING count(*) >= 2", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0013", "sql1": "\nSELECT DISTINCT address_type_code\nFROM customer_addresses\nORDER BY address_type_code\n", "sql2": "SELECT DISTINCT address_type_code\nFROM customer_addresses", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0005", "sql1": "\nSELECT product_category,\n       n AS count___\nFROM\n  (SELECT product_category,\n          COUNT(*) AS n\n   FROM mailshot_campaigns\n   GROUP BY product_category)\nORDER BY product_category\n", "sql2": "SELECT product_category,\n       count(*)\nFROM mailshot_campaigns\nGROUP BY product_category", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0004", "sql1": "\nSELECT premises_type,\n       n AS count___\nFROM\n  (SELECT premises_type,\n          COUNT(*) AS n\n   FROM premises\n   GROUP BY premises_type)\nORDER BY premises_type\n", "sql2": "SELECT premises_type,\n       count(*)\nFROM premises\nGROUP BY premises_type", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0012", "sql1": "\nSELECT premises_type,\n       address_type_code\nFROM\n  (SELECT LHS.premise_id AS premise_id,\n          LHS.premises_type AS premises_type,\n          LHS.premise_details AS premise_details,\n          RHS.customer_id AS customer_id,\n          RHS.date_address_from AS date_address_from,\n          RHS.address_type_code AS address_type_code,\n          RHS.date_address_to AS date_address_to\n   FROM premises AS LHS\n   INNER JOIN customer_addresses AS RHS ON (LHS.premise_id = RHS.premise_id))\nORDER BY premises_type\n", "sql2": "SELECT T2.premises_type,\n       T1.address_type_code\nFROM customer_addresses AS T1\nJOIN premises AS T2 ON T1.premise_id = T2.premise_id", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0008", "sql1": "\nSELECT outcome_code,\n       n AS count___\nFROM\n  (SELECT outcome_code,\n          COUNT(*) AS n\n   FROM mailshot_customers\n   GROUP BY outcome_code)\nORDER BY outcome_code\n", "sql2": "SELECT outcome_code,\n       count(*)\nFROM mailshot_customers\nGROUP BY outcome_code", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0015", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`customer_email` AS `customer_email`,\n          `LHS`.`customer_address` AS `customer_address`,\n          `LHS`.`customer_login` AS `customer_login`,\n          `LHS`.`customer_password` AS `customer_password`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`order_status_code` AS `order_status_code`,\n          `RHS`.`shipping_method_code` AS `shipping_method_code`,\n          `RHS`.`order_placed_datetime` AS `order_placed_datetime`,\n          `RHS`.`order_delivered_datetime` AS `order_delivered_datetime`,\n          `RHS`.`order_shipping_charges` AS `order_shipping_charges`\n   FROM `customers` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `customer_orders`\n      WHERE (`shipping_method_code` = 'FedEx'\n             AND `order_status_code` = 'Paid')) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE shipping_method_code = 'FedEx'\n  AND order_status_code = 'Paid'", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0003", "sql1": "\nSELECT premises_type,\n       premise_details\nFROM premises\nORDER BY premises_type\n", "sql2": "SELECT premises_type,\n       premise_details\nFROM premises\nORDER BY premises_type", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0002", "sql1": "\nSELECT DISTINCT premises_type\nFROM premises\nORDER BY premises_type\n", "sql2": "SELECT DISTINCT premises_type\nFROM premises", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0014", "sql1": "\nSELECT `order_shipping_charges`,\n       `customer_id`\nFROM `customer_orders`\nWHERE (`order_status_code` = 'Cancelled'\n       OR `order_status_code` = 'Paid')\nORDER BY order_shipping_charges\n", "sql2": "SELECT order_shipping_charges,\n       customer_id\nFROM customer_orders\nWHERE order_status_code = 'Cancelled'\n  OR order_status_code = 'Paid'", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM premises\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM premises", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0007", "sql1": "\nSELECT `customer_name`,\n       `customer_phone`\nFROM\n  (SELECT `LHS`.`mailshot_id` AS `mailshot_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`outcome_code` AS `outcome_code`,\n          `LHS`.`mailshot_customer_date` AS `mailshot_customer_date`,\n          `RHS`.`payment_method` AS `payment_method`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`customer_phone` AS `customer_phone`,\n          `RHS`.`customer_email` AS `customer_email`,\n          `RHS`.`customer_address` AS `customer_address`,\n          `RHS`.`customer_login` AS `customer_login`,\n          `RHS`.`customer_password` AS `customer_password`\n   FROM `mailshot_customers` AS `LHS`\n   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`outcome_code` = 'No Response')\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name,\n       T1.customer_phone\nFROM customers AS T1\nJOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.outcome_code = 'No Response'", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_campaigns_ecommerce/0006", "sql1": "\nSELECT customer_name,\n       customer_phone\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM mailshot_customers AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM mailshot_customers)", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0013", "sql1": "\nSELECT meanproduct_price AS avg_product_price_,\n       product_category_code\nFROM\n  (SELECT product_category_code,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_category_code)\nORDER BY avg_product_price_\n", "sql2": "SELECT avg(product_price),\n       product_category_code\nFROM products\nGROUP BY product_category_code", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0004", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.parent_product_id AS parent_product_id,\n          LHS.product_category_code AS product_category_code,\n          LHS.date_product_first_available AS date_product_first_available,\n          LHS.date_product_discontinued AS date_product_discontinued,\n          LHS.product_name AS product_name,\n          LHS.product_description AS product_description,\n          LHS.product_price AS product_price,\n          RHS.complaint_outcome_code AS complaint_outcome_code,\n          RHS.n AS n\n   FROM products AS LHS\n   INNER JOIN\n     (SELECT complaint_outcome_code,\n             product_id,\n             COUNT(*) AS n\n      FROM complaints\n      GROUP BY complaint_outcome_code,\n               product_id) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY product_name\n", "sql2": "SELECT t1.product_name,\n       count(*)\nFROM products AS t1\nJOIN complaints AS t2 ON t1.product_id = t2.product_id\nGROUP BY t1.product_name", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0008", "sql1": "\nSELECT email_address,\n       phone_number\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM complaints AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       phone_number\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM complaints)", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0015", "sql1": "\nSELECT complaint_status_code\nFROM\n  (SELECT complaint_outcome_code,\n          complaint_status_code,\n          COUNT(*) AS n\n   FROM complaints\n   GROUP BY complaint_outcome_code,\n            complaint_status_code)\nWHERE (n >= 3)\nORDER BY complaint_status_code\n", "sql2": "SELECT complaint_status_code\nFROM complaints\nGROUP BY complaint_status_code\nHAVING count(*) > 3", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0019", "sql1": "\nSELECT n_distinct AS count_distinct_complaint_type_code_\nFROM\n  (SELECT complaint_outcome_code,\n          COUNT(DISTINCT complaint_type_code) AS n_distinct\n   FROM complaints\n   GROUP BY complaint_outcome_code)\nORDER BY count_distinct_complaint_type_code_\n", "sql2": "SELECT count(DISTINCT complaint_type_code)\nFROM complaints", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0002", "sql1": "\nSELECT email_address,\n       phone_number\nFROM customers\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       phone_number\nFROM customers\nORDER BY email_address,\n         phone_number", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0021", "sql1": "\nSELECT `complaint_status_code`,\n       `n_distinct` AS `count___`\nFROM\n  (SELECT `complaint_status_code`,\n          `complaint_type_code`,\n          COUNT(DISTINCT `complaint_type_code`) AS `n_distinct`\n   FROM `complaints`\n   GROUP BY `complaint_status_code`,\n            `complaint_type_code`)\nWHERE (`complaint_type_code` = 'Product Failure')\nORDER BY complaint_status_code\n", "sql2": "SELECT complaint_status_code,\n       count(*)\nFROM complaints\nWHERE complaint_type_code = 'Product Failure'\nGROUP BY complaint_status_code", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0020", "sql1": "\nSELECT `address_line_1`,\n       `address_line_2`\nFROM `customers`\nWHERE (`email_address` = 'vbogisich@example.org')\nORDER BY address_line_1\n", "sql2": "SELECT address_line_1,\n       address_line_2\nFROM customers\nWHERE email_address = 'vbogisich@example.org'", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0011", "sql1": "\nSELECT product_name,\n       product_category_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM products\n      ORDER BY date_product_discontinued DESC)\n   LIMIT 1)\n", "sql2": "SELECT product_name,\n       product_category_code\nFROM products\nORDER BY product_price DESC\nLIMIT 1", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customer_complaints/0010", "sql1": "\nSELECT `product_description`\nFROM `products`\nWHERE (`product_name` = 'Chocolate')\nORDER BY product_description\n", "sql2": "SELECT product_description\nFROM products\nWHERE product_name = 'Chocolate'", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/company_1/0005", "sql1": "\nSELECT fname,\n       lname\nFROM employee\nWHERE (salary > 30000)\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM employee\nWHERE salary > 30000", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_1/0004", "sql1": "\nSELECT `dname`\nFROM\n  (SELECT `LHS`.`dname` AS `dname`,\n          `LHS`.`dnumber` AS `dnumber`,\n          `LHS`.`mgr_ssn` AS `mgr_ssn`,\n          `LHS`.`mgr_start_date` AS `mgr_start_date`,\n          `RHS`.`dlocation` AS `dlocation`\n   FROM `department` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dept_locations`\n      WHERE (`dlocation` = 'Houston')) AS RHS ON (LHS.dnumber = RHS.dnumber))\nORDER BY dname\n", "sql2": "SELECT t1.dname\nFROM department AS t1\nJOIN dept_locations AS t2 ON t1.dnumber = t2.dnumber\nWHERE t2.dlocation = 'Houston'", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_1/0003", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `sex`,\n          COUNT(*) AS `n`\n   FROM `dependent`\n   GROUP BY `sex`)\nWHERE (`sex` = 'F')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM dependent\nWHERE sex = 'F'", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_1/0002", "sql1": "\nSELECT `dependent_name`\nFROM `dependent`\nWHERE (`relationship` = 'Spouse')\nORDER BY dependent_name\n", "sql2": "SELECT Dependent_name\nFROM dependent\nWHERE relationship = 'Spouse'", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_1/0001", "sql1": "\nSELECT dname\nFROM department\nORDER BY dname\n", "sql2": "SELECT dname\nFROM department\nORDER BY mgr_start_date", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_1/0007", "sql1": "\nSELECT fname,\n       lname,\n       address\nFROM employee\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname,\n       address\nFROM employee\nORDER BY Bdate", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0009", "sql1": "\nSELECT `document_type_code`,\n       `document_name`,\n       `document_description`\nFROM `documents`\nWHERE (`document_name` = 'Noel CV'\n       OR `document_name` = 'King Book')\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       document_name,\n       document_description\nFROM Documents\nWHERE document_name = 'Noel CV'\n  OR document_name = 'King Book'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0025", "sql1": "\nSELECT project_id,\n       project_details\nFROM projects\nORDER BY project_id\n", "sql2": "SELECT project_id,\n       project_details\nFROM Projects", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0033", "sql1": "\nSELECT budget_type_code,\n       budget_type_description,\n       document_id\nFROM\n  (SELECT LHS.budget_type_code AS budget_type_code,\n          LHS.budget_type_description AS budget_type_description,\n          RHS.document_id AS document_id,\n          RHS.document_details AS document_details\n   FROM ref_budget_codes AS LHS\n   INNER JOIN documents_with_expenses AS RHS ON (LHS.budget_type_code = RHS.budget_type_code))\nORDER BY budget_type_code\n", "sql2": "SELECT T2.budget_type_code,\n       T2.budget_type_description,\n       T1.document_id\nFROM Documents_with_expenses AS T1\nJOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0013", "sql1": "\nSELECT `document_name`,\n       `document_date`\nFROM\n  (SELECT `LHS`.`project_id` AS `project_id`,\n          `LHS`.`project_details` AS `project_details`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_type_code` AS `document_type_code`,\n          `RHS`.`document_date` AS `document_date`,\n          `RHS`.`document_name` AS `document_name`,\n          `RHS`.`document_description` AS `document_description`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `projects` AS `LHS`\n   INNER JOIN `documents` AS `RHS` ON (`LHS`.`project_id` = `RHS`.`project_id`))\nWHERE (`project_details` = 'Graph Database project')\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       document_date\nFROM Documents AS T1\nJOIN projects AS T2 ON T1.project_id = T2.project_id\nWHERE T2.project_details = 'Graph Database project'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0005", "sql1": "\nSELECT STATEMENT_ID,\n       statement_details,\n       account_details\nFROM\n  (SELECT LHS.statement_id AS STATEMENT_ID,\n          LHS.statement_details AS statement_details,\n          RHS.account_id AS account_id,\n          RHS.account_details AS account_details\n   FROM statements AS LHS\n   INNER JOIN accounts AS RHS ON (LHS.statement_id = RHS.statement_id))\nORDER BY STATEMENT_ID\n", "sql2": "SELECT T1.statement_id,\n       T2.statement_details,\n       T1.account_details\nFROM Accounts AS T1\nJOIN Statements AS T2 ON T1.statement_id = T2.statement_id", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0029", "sql1": "\nSELECT budget_type_code,\n       budget_type_description\nFROM ref_budget_codes\nORDER BY budget_type_code\n", "sql2": "SELECT budget_type_code,\n       budget_type_description\nFROM Ref_budget_codes", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0028", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM ref_budget_codes)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_budget_codes", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0004", "sql1": "\nSELECT STATEMENT_ID,\n       statement_details\nFROM statements\nORDER BY STATEMENT_ID\n", "sql2": "SELECT STATEMENT_ID,\n       statement_details\nFROM Statements", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0012", "sql1": "\nSELECT `n` AS `count___`,\n       `project_id`\nFROM\n  (SELECT `project_id`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_type_code` = 'BK'))\n   GROUP BY project_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       project_id\nFROM Documents\nWHERE document_type_code = 'BK'\nGROUP BY project_id", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0032", "sql1": "\nSELECT `document_id`\nFROM `documents_with_expenses`\nWHERE (`budget_type_code` = 'SF')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents_with_expenses\nWHERE budget_type_code = 'SF'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0024", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM projects\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Projects", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM documents\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0015", "sql1": "\nSELECT project_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT document_name,\n                project_id,\n                COUNT(*) AS n\n         FROM documents\n         GROUP BY document_name,\n                  project_id)\n      ORDER BY project_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT project_id\nFROM Documents\nGROUP BY project_id\nORDER BY count(*) ASC\nLIMIT 1", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM statements\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Statements", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0019", "sql1": "\nSELECT document_type_code\nFROM\n  (SELECT document_type_code,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_type_code)\nWHERE (n < 3)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Documents\nGROUP BY document_type_code\nHAVING count(*) < 3", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0023", "sql1": "\nSELECT document_type_name,\n       document_type_description,\n       document_date\nFROM\n  (SELECT LHS.document_type_code AS document_type_code,\n          LHS.document_type_name AS document_type_name,\n          LHS.document_type_description AS document_type_description,\n          RHS.document_id AS document_id,\n          RHS.project_id AS project_id,\n          RHS.document_date AS document_date,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM ref_document_types AS LHS\n   INNER JOIN documents AS RHS ON (LHS.document_type_code = RHS.document_type_code))\nORDER BY document_type_name\n", "sql2": "SELECT T1.document_type_name,\n       T1.document_type_description,\n       T2.Document_date\nFROM Ref_document_types AS T1\nJOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0035", "sql1": "\nSELECT budget_type_code,\n       n AS count___\nFROM\n  (SELECT budget_type_code,\n          COUNT(*) AS n\n   FROM documents_with_expenses\n   GROUP BY budget_type_code)\nORDER BY budget_type_code\n", "sql2": "SELECT budget_type_code,\n       count(*)\nFROM Documents_with_expenses\nGROUP BY budget_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0034", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT `LHS`.`budget_type_code` AS `budget_type_code`,\n          `LHS`.`budget_type_description` AS `budget_type_description`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_details` AS `document_details`\n   FROM `ref_budget_codes` AS `LHS`\n   INNER JOIN `documents_with_expenses` AS `RHS` ON (`LHS`.`budget_type_code` = `RHS`.`budget_type_code`))\nWHERE (`budget_type_description` = 'Government')\nORDER BY document_id\n", "sql2": "SELECT T1.document_id\nFROM Documents_with_expenses AS T1\nJOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code\nWHERE T2.budget_type_Description = 'Government'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0022", "sql1": "\nSELECT `document_type_description`\nFROM `ref_document_types`\nWHERE (`document_type_name` = 'Film')\nORDER BY document_type_description\n", "sql2": "SELECT document_type_description\nFROM Ref_document_types\nWHERE document_type_name = 'Film'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0018", "sql1": "\nSELECT document_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT document_type_code,\n                other_details,\n                COUNT(*) AS n\n         FROM documents\n         GROUP BY document_type_code,\n                  other_details)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT document_type_code\nFROM Documents\nGROUP BY document_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0038", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_type_code` = 'CV')) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM documents_with_expenses AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_type_code = 'CV'\nEXCEPT\nSELECT document_id\nFROM Documents_with_expenses", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0002", "sql1": "\nSELECT account_id,\n       account_details\nFROM accounts\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       account_details\nFROM Accounts", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0014", "sql1": "\nSELECT project_id,\n       n AS count___\nFROM\n  (SELECT document_description,\n          project_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_description,\n            project_id)\nORDER BY project_id\n", "sql2": "SELECT project_id,\n       count(*)\nFROM Documents\nGROUP BY project_id", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0017", "sql1": "\nSELECT document_type_code,\n       n AS count___\nFROM\n  (SELECT document_type_code,\n          other_details,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_type_code,\n            other_details)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       count(*)\nFROM Documents\nGROUP BY document_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0040", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT document_description,\n          COUNT(DISTINCT document_id) AS n_distinct\n   FROM\n     (SELECT *\n      FROM documents AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM documents_with_expenses AS RHS\n           WHERE (LHS.document_id = RHS.document_id) ))\n   GROUP BY document_description)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents\nWHERE document_id NOT IN\n    (SELECT document_id\n     FROM Documents_with_expenses)", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0037", "sql1": "\nSELECT document_id\nFROM\n  (SELECT *\n   FROM documents AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM documents_with_expenses AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nEXCEPT\nSELECT document_id\nFROM Documents_with_expenses", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0021", "sql1": "\nSELECT document_type_code,\n       document_type_name,\n       document_type_description\nFROM ref_document_types\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       document_type_name,\n       document_type_description\nFROM Ref_document_types", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0020", "sql1": "\nSELECT `statement_details`,\n       `document_name`\nFROM\n  (SELECT `document_id`,\n          `document_type_code`,\n          `project_id`,\n          `document_date`,\n          `document_name`,\n          `document_description`,\n          `other_details`,\n          `statement_details`,\n          `document_id` AS `statement_id`\n   FROM\n     (SELECT `LHS`.`document_id` AS `document_id`,\n             `LHS`.`document_type_code` AS `document_type_code`,\n             `LHS`.`project_id` AS `project_id`,\n             `LHS`.`document_date` AS `document_date`,\n             `LHS`.`document_name` AS `document_name`,\n             `LHS`.`document_description` AS `document_description`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`statement_details` AS `statement_details`\n      FROM `documents` AS `LHS`\n      INNER JOIN `statements` AS `RHS` ON (`LHS`.`document_id` = `RHS`.`statement_id`)))\nWHERE (`statement_details` = 'Private Project')\nORDER BY statement_details\n", "sql2": "SELECT T1.statement_details,\n       T2.document_name\nFROM Statements AS T1\nJOIN Documents AS T2 ON T1.statement_id = T2.document_id\nWHERE T1.statement_details = 'Private Project'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0036", "sql1": "\nSELECT budget_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT budget_type_code,\n                document_id,\n                COUNT(*) AS n\n         FROM documents_with_expenses\n         GROUP BY budget_type_code,\n                  document_id)\n      ORDER BY budget_type_code)\n   LIMIT 1)\n", "sql2": "SELECT budget_type_code\nFROM Documents_with_expenses\nGROUP BY budget_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0016", "sql1": "\nSELECT project_id\nFROM\n  (SELECT project_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY project_id)\nWHERE (n >= 2)\nORDER BY project_id\n", "sql2": "SELECT project_id\nFROM Documents\nGROUP BY project_id\nHAVING count(*) >= 2", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0031", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM documents_with_expenses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents_with_expenses", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0027", "sql1": "\nSELECT `project_details`\nFROM\n  (SELECT `LHS`.`document_id` AS `document_id`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`project_id` AS `project_id`,\n          `LHS`.`document_date` AS `document_date`,\n          `LHS`.`document_name` AS `document_name`,\n          `LHS`.`document_description` AS `document_description`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`project_details` AS `project_details`\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_name` = 'King Book')) AS LHS\n   LEFT JOIN projects AS RHS ON (LHS.project_id = RHS.project_id))\nORDER BY project_details\n", "sql2": "SELECT T1.project_details\nFROM Projects AS T1\nJOIN Documents AS T2 ON T1.project_id = T2.project_id\nWHERE T2.document_name = 'King Book'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0011", "sql1": "\nSELECT `document_name`,\n       `document_id`\nFROM `documents`\nWHERE (`document_type_code` = 'BK')\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       document_id\nFROM Documents\nWHERE document_type_code = 'BK'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0010", "sql1": "\nSELECT document_id,\n       document_name\nFROM documents\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       document_name\nFROM Documents", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0006", "sql1": "\nSELECT STATEMENT_ID,\n       n AS count___\nFROM\n  (SELECT STATEMENT_ID,\n          COUNT(*) AS n\n   FROM accounts\n   GROUP BY STATEMENT_ID)\nORDER BY STATEMENT_ID\n", "sql2": "SELECT STATEMENT_ID,\n       count(*)\nFROM Accounts\nGROUP BY STATEMENT_ID", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0026", "sql1": "\nSELECT project_id,\n       project_details\nFROM\n  (SELECT LHS.project_id AS project_id,\n          LHS.project_details AS project_details,\n          RHS.document_description AS document_description,\n          RHS.n AS n\n   FROM projects AS LHS\n   INNER JOIN\n     (SELECT document_description,\n             project_id,\n             COUNT(*) AS n\n      FROM documents\n      GROUP BY document_description,\n               project_id) AS RHS ON (LHS.project_id = RHS.project_id))\nWHERE (n >= 2)\nORDER BY project_id\n", "sql2": "SELECT T1.project_id,\n       T1.project_details\nFROM Projects AS T1\nJOIN Documents AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id\nHAVING count(*) > 2", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Docs_and_Epenses/0030", "sql1": "\nSELECT `budget_type_description`\nFROM `ref_budget_codes`\nWHERE (`budget_type_code` = 'ORG')\nORDER BY budget_type_description\n", "sql2": "SELECT budget_type_description\nFROM Ref_budget_codes\nWHERE budget_type_code = 'ORG'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0009", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM policies AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_details\n", "sql2": "SELECT customer_details\nFROM customers\nEXCEPT\nSELECT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0013", "sql1": "\nSELECT `customer_details`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`policy_id` AS `policy_id`,\n          `RHS`.`policy_type_code` AS `policy_type_code`,\n          `RHS`.`start_date` AS `start_date`,\n          `RHS`.`end_date` AS `end_date`\n   FROM `customers` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `policies`\n      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.policy_type_code = 'Deputy'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0005", "sql1": "\nSELECT DISTINCT SUM(amount_piad) OVER () AS sum_amount_piad_,\n                                      meanamount_piad AS avg_amount_piad_\nFROM\n  (SELECT claim_header_id,\n          claim_status_code,\n          claim_type_code,\n          policy_id,\n          date_of_claim,\n          date_of_settlement,\n          amount_claimed,\n          amount_piad,\n          AVG(amount_piad) OVER () AS meanamount_piad\n   FROM claim_headers)\nORDER BY sum_amount_piad_\n", "sql2": "SELECT sum(amount_piad),\n       avg(amount_piad)\nFROM claim_headers", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0004", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT policy_type_code,\n          COUNT(*) AS n\n   FROM policies\n   GROUP BY policy_type_code)\nWHERE (n >= 2)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM policies\nGROUP BY policy_type_code\nHAVING count(*) > 2", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0008", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_details AS customer_details,\n          LHS.policy_id AS policy_id,\n          LHS.policy_type_code AS policy_type_code,\n          LHS.start_date AS start_date,\n          LHS.end_date AS end_date,\n          LHS.claim_header_id AS claim_header_id,\n          LHS.claim_status_code AS claim_status_code,\n          LHS.claim_type_code AS claim_type_code,\n          LHS.date_of_claim AS date_of_claim,\n          LHS.date_of_settlement AS date_of_settlement,\n          LHS.amount_claimed AS amount_claimed,\n          LHS.amount_piad AS amount_piad\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_details AS customer_details,\n             LHS.policy_id AS policy_id,\n             LHS.policy_type_code AS policy_type_code,\n             LHS.start_date AS start_date,\n             LHS.end_date AS end_date,\n             RHS.claim_header_id AS claim_header_id,\n             RHS.claim_status_code AS claim_status_code,\n             RHS.claim_type_code AS claim_type_code,\n             RHS.date_of_claim AS date_of_claim,\n             RHS.date_of_settlement AS date_of_settlement,\n             RHS.amount_claimed AS amount_claimed,\n             RHS.amount_piad AS amount_piad\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_details AS customer_details,\n                RHS.policy_id AS policy_id,\n                RHS.policy_type_code AS policy_type_code,\n                RHS.start_date AS start_date,\n                RHS.end_date AS end_date\n         FROM customers AS LHS\n         INNER JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN claim_headers AS RHS ON (LHS.policy_id = RHS.policy_id)) AS LHS\n   INNER JOIN\n     (SELECT claim_header_id,\n             claim_status_code,\n             claim_type_code,\n             policy_id,\n             date_of_claim,\n             date_of_settlement,\n             amount_claimed,\n             MIN(amount_piad) OVER () AS amount_piad\n      FROM claim_headers) AS RHS ON (LHS.policy_id = RHS.policy_id\n                                        AND LHS.claim_header_id = RHS.claim_header_id\n                                        AND LHS.claim_status_code = RHS.claim_status_code\n                                        AND LHS.claim_type_code = RHS.claim_type_code\n                                        AND LHS.date_of_claim = RHS.date_of_claim\n                                        AND LHS.date_of_settlement = RHS.date_of_settlement\n                                        AND LHS.amount_claimed = RHS.amount_claimed\n                                        AND LHS.amount_piad = RHS.amount_piad))\nORDER BY customer_details\n", "sql2": "SELECT t3.customer_details\nFROM claim_headers AS t1\nJOIN policies AS t2 ON t1.policy_id = t2.policy_id\nJOIN customers AS t3 ON t2.customer_id = t3.customer_id\nWHERE t1.amount_piad =\n    (SELECT min(amount_piad)\n     FROM claim_headers)", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0003", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT policy_type_code,\n                start_date,\n                COUNT(*) AS n\n         FROM policies\n         GROUP BY policy_type_code,\n                  start_date)\n      ORDER BY start_date)\n   LIMIT 1)\n", "sql2": "SELECT policy_type_code\nFROM policies\nGROUP BY policy_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0019", "sql1": "\nSELECT n_distinct AS count_distinct_claim_outcome_code_\nFROM\n  (SELECT COUNT(DISTINCT claim_outcome_code) AS n_distinct\n   FROM claims_processing)\nORDER BY count_distinct_claim_outcome_code_\n", "sql2": "SELECT count(DISTINCT claim_outcome_code)\nFROM claims_processing", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0018", "sql1": "\nSELECT `claim_status_description`\nFROM `claims_processing_stages`\nWHERE (`claim_status_name` = 'Open')\nORDER BY claim_status_description\n", "sql2": "SELECT claim_status_description\nFROM claims_processing_stages\nWHERE claim_status_name = 'Open'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0002", "sql1": "\nSELECT `policy_type_code`\nFROM\n  (SELECT *\n   FROM `policies` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`customer_details` != 'Dayana Robel')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nWHERE t2.customer_details = 'Dayana Robel'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0014", "sql1": "\nSELECT `customer_details`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`policy_id` AS `policy_id`,\n          `RHS`.`policy_type_code` AS `policy_type_code`,\n          `RHS`.`start_date` AS `start_date`,\n          `RHS`.`end_date` AS `end_date`\n   FROM `customers` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `policies`\n      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.policy_type_code = 'Deputy'\n  OR t1.policy_type_code = 'Uniform'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0001", "sql1": "\nSELECT customer_details\nFROM customers\nORDER BY customer_details\n", "sql2": "SELECT customer_details\nFROM customers\nORDER BY customer_details", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0017", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT customer_details,\n                COUNT(*) AS n\n         FROM\n           (SELECT LHS.customer_id AS customer_id,\n                   LHS.customer_details AS customer_details,\n                   RHS.policy_id AS policy_id,\n                   RHS.policy_type_code AS policy_type_code,\n                   RHS.start_date AS start_date,\n                   RHS.end_date AS end_date\n            FROM customers AS LHS\n            LEFT JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id))\n         GROUP BY customer_details)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nGROUP BY t2.customer_details\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0016", "sql1": "\nSELECT policy_type_code,\n       n AS count___\nFROM\n  (SELECT policy_type_code,\n          COUNT(*) AS n\n   FROM policies\n   GROUP BY policy_type_code)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code,\n       count(*)\nFROM policies\nGROUP BY policy_type_code", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0007", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_details AS customer_details,\n          LHS.policy_id AS policy_id,\n          LHS.policy_type_code AS policy_type_code,\n          LHS.start_date AS start_date,\n          LHS.end_date AS end_date,\n          LHS.claim_header_id AS claim_header_id,\n          LHS.claim_status_code AS claim_status_code,\n          LHS.claim_type_code AS claim_type_code,\n          LHS.date_of_claim AS date_of_claim,\n          LHS.date_of_settlement AS date_of_settlement,\n          LHS.amount_claimed AS amount_claimed,\n          LHS.amount_piad AS amount_piad\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_details AS customer_details,\n             LHS.policy_id AS policy_id,\n             LHS.policy_type_code AS policy_type_code,\n             LHS.start_date AS start_date,\n             LHS.end_date AS end_date,\n             RHS.claim_header_id AS claim_header_id,\n             RHS.claim_status_code AS claim_status_code,\n             RHS.claim_type_code AS claim_type_code,\n             RHS.date_of_claim AS date_of_claim,\n             RHS.date_of_settlement AS date_of_settlement,\n             RHS.amount_claimed AS amount_claimed,\n             RHS.amount_piad AS amount_piad\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_details AS customer_details,\n                RHS.policy_id AS policy_id,\n                RHS.policy_type_code AS policy_type_code,\n                RHS.start_date AS start_date,\n                RHS.end_date AS end_date\n         FROM customers AS LHS\n         INNER JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN claim_headers AS RHS ON (LHS.policy_id = RHS.policy_id)) AS LHS\n   INNER JOIN\n     (SELECT claim_header_id,\n             claim_status_code,\n             claim_type_code,\n             policy_id,\n             date_of_claim,\n             date_of_settlement,\n             MAX(amount_claimed) OVER () AS amount_claimed,\n                                      amount_piad\n      FROM claim_headers) AS RHS ON (LHS.policy_id = RHS.policy_id\n                                        AND LHS.claim_header_id = RHS.claim_header_id\n                                        AND LHS.claim_status_code = RHS.claim_status_code\n                                        AND LHS.claim_type_code = RHS.claim_type_code\n                                        AND LHS.date_of_claim = RHS.date_of_claim\n                                        AND LHS.date_of_settlement = RHS.date_of_settlement\n                                        AND LHS.amount_claimed = RHS.amount_claimed\n                                        AND LHS.amount_piad = RHS.amount_piad))\nORDER BY customer_details\n", "sql2": "SELECT t3.customer_details\nFROM claim_headers AS t1\nJOIN policies AS t2 ON t1.policy_id = t2.policy_id\nJOIN customers AS t3 ON t2.customer_id = t3.customer_id\nWHERE t1.amount_claimed =\n    (SELECT max(amount_claimed)\n     FROM claim_headers)", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0011", "sql1": "\nSELECT claim_status_name\nFROM\n  (SELECT claim_outcome_code,\n          claim_stage_id,\n          n,\n          claim_status_name,\n          claim_status_description,\n          claim_stage_id AS next_claim_stage_id\n   FROM\n     (SELECT LHS.claim_outcome_code AS claim_outcome_code,\n             LHS.claim_stage_id AS claim_stage_id,\n             LHS.n AS n,\n             RHS.claim_status_name AS claim_status_name,\n             RHS.claim_status_description AS claim_status_description\n      FROM\n        (SELECT claim_outcome_code,\n                claim_stage_id,\n                COUNT(*) AS n\n         FROM claims_processing\n         GROUP BY claim_outcome_code,\n                  claim_stage_id) AS LHS\n      INNER JOIN claims_processing_stages AS RHS ON (LHS.claim_stage_id = RHS.next_claim_stage_id\n                                                        AND LHS.n = RHS.claim_stage_id)))\nORDER BY claim_status_name\n", "sql2": "SELECT t2.claim_status_name\nFROM claims_processing AS t1\nJOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id\nGROUP BY t1.claim_stage_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_and_eClaims/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM claims_processing_stages\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM claims_processing_stages", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0013", "sql1": "\nSELECT DISTINCT customer_details,\n                customer_id\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_details AS customer_details,\n          LHS.policy_id AS policy_id,\n          LHS.policy_type_code AS policy_type_code,\n          LHS.start_date AS start_date,\n          LHS.end_date AS end_date,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_details AS customer_details,\n             LHS.policy_id AS policy_id,\n             LHS.policy_type_code AS policy_type_code,\n             LHS.start_date AS start_date,\n             LHS.end_date AS end_date,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_details AS customer_details,\n                RHS.policy_id AS policy_id,\n                RHS.policy_type_code AS policy_type_code,\n                RHS.start_date AS start_date,\n                RHS.end_date AS end_date\n         FROM customers AS LHS\n         INNER JOIN customer_policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customer_policies\n         GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customer_policies\n         GROUP BY customer_id)\n      WHERE (n != 1)) AS RHS ON (LHS.customer_id = RHS.customer_id\n                                 AND LHS.n = RHS.n))\nORDER BY customer_details\n", "sql2": "SELECT T1.customer_details,\n       T1.customer_id\nFROM Customers AS T1\nJOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id\nGROUP BY T1.customer_id\nHAVING count(*) > 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0005", "sql1": "\nSELECT amount_settled,\n       amount_claimed\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM claims\n      ORDER BY amount_settled)\n   LIMIT 1)\n", "sql2": "SELECT Amount_Settled,\n       Amount_Claimed\nFROM Claims\nORDER BY Amount_Settled ASC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0004", "sql1": "\nSELECT amount_settled,\n       amount_claimed\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM claims\n      ORDER BY policy_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT Amount_Settled,\n       Amount_Claimed\nFROM Claims\nORDER BY Amount_Claimed DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0012", "sql1": "\nSELECT DISTINCT SUM(amount_settled) OVER () AS sum_amount_settled_\nFROM settlements\nORDER BY sum_amount_settled_\n", "sql2": "SELECT sum(Amount_Settled)\nFROM Settlements", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0024", "sql1": "\nSELECT sumamount_claimed AS sum_amount_claimed_\nFROM\n  (SELECT SUM(amount_claimed) AS sumamount_claimed\n   FROM claims)\nORDER BY sum_amount_claimed_\n", "sql2": "SELECT sum(Amount_Claimed)\nFROM Claims", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0008", "sql1": "\nSELECT claim_id,\n       n AS count___\nFROM\n  (SELECT claim_id,\n          policy_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.settlement_id AS settlement_id,\n             LHS.claim_id AS claim_id,\n             LHS.date_claim_made AS date_claim_made,\n             LHS.date_claim_settled AS date_claim_settled,\n             LHS.amount_claimed AS amount_claimed,\n             LHS.amount_settled AS amount_settled,\n             LHS.customer_policy_id AS customer_policy_id,\n             RHS.policy_id AS policy_id\n      FROM settlements AS LHS\n      LEFT JOIN claims AS RHS ON (LHS.claim_id = RHS.claim_id\n                                     AND LHS.date_claim_made = RHS.date_claim_made\n                                     AND LHS.date_claim_settled = RHS.date_claim_settled\n                                     AND LHS.amount_claimed = RHS.amount_claimed\n                                     AND LHS.amount_settled = RHS.amount_settled))\n   GROUP BY claim_id,\n            policy_id)\nORDER BY claim_id\n", "sql2": "SELECT T1.Claim_id,\n       count(*)\nFROM Claims AS T1\nJOIN Settlements AS T2 ON T1.claim_id = T2.claim_id\nGROUP BY T1.claim_id", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0015", "sql1": "\nSELECT payment_method_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT payment_method_code,\n                COUNT(*) AS n\n         FROM payments\n         GROUP BY payment_method_code)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Payment_Method_Code\nFROM Payments\nGROUP BY Payment_Method_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0003", "sql1": "\nSELECT payment_method_code,\n       date_payment_made,\n       amount_payment\nFROM payments\nORDER BY payment_method_code\n", "sql2": "SELECT Payment_Method_Code,\n       Date_Payment_Made,\n       Amount_Payment\nFROM Payments\nORDER BY Date_Payment_Made ASC", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0019", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT policy_type_code,\n                start_date,\n                COUNT(*) AS n\n         FROM customer_policies\n         GROUP BY policy_type_code,\n                  start_date)\n      ORDER BY start_date DESC)\n   LIMIT 1)\n", "sql2": "SELECT Policy_Type_Code\nFROM Customer_Policies\nGROUP BY Policy_Type_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0022", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM customer_policies AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_details\n", "sql2": "SELECT customer_details\nFROM Customers\nEXCEPT\nSELECT T1.customer_details\nFROM Customers AS T1\nJOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0018", "sql1": "\nSELECT customer_details\nFROM customers\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT customer_details\nFROM Customers", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0014", "sql1": "\nSELECT date_claim_made,\n       date_claim_settled\nFROM settlements\nORDER BY date_claim_made\n", "sql2": "SELECT Date_Claim_Made,\n       Date_Claim_Settled\nFROM Settlements", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0017", "sql1": "\nSELECT sumamount_payment AS sum_amount_payment_\nFROM\n  (SELECT SUM(amount_payment) AS sumamount_payment\n   FROM payments)\nORDER BY sum_amount_payment_\n", "sql2": "SELECT sum(Amount_Payment)\nFROM Payments", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0021", "sql1": "\nSELECT `payment_id`,\n       `date_payment_made`,\n       `amount_payment`\nFROM `payments`\nWHERE (`payment_method_code` = 'Visa')\nORDER BY payment_id\n", "sql2": "SELECT Payment_ID,\n       Date_Payment_Made,\n       Amount_Payment\nFROM Payments\nWHERE Payment_Method_Code = 'Visa'", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0020", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM settlements\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Settlements", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0016", "sql1": "\nSELECT payment_method_code\nFROM\n  (SELECT LHS.payment_id AS payment_id,\n          LHS.settlement_id AS settlement_id,\n          LHS.payment_method_code AS payment_method_code,\n          LHS.date_payment_made AS date_payment_made,\n          LHS.amount_payment AS amount_payment,\n          RHS.amount_payment AS amount_payment_other,\n          RHS.n AS n\n   FROM payments AS LHS\n   INNER JOIN\n     (SELECT amount_payment,\n             settlement_id,\n             COUNT(*) AS n\n      FROM payments\n      GROUP BY amount_payment,\n               settlement_id) AS RHS ON (LHS.payment_id = RHS.settlement_id))\nORDER BY payment_method_code\n", "sql2": "SELECT Payment_Method_Code\nFROM Payments\nGROUP BY Payment_Method_Code\nORDER BY count(*) ASC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0011", "sql1": "\nSELECT date_claim_made\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM claims\n      ORDER BY date_claim_settled)\n   LIMIT 1)\n", "sql2": "SELECT Date_Claim_Made\nFROM Claims\nORDER BY Date_Claim_Made ASC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_policies/0010", "sql1": "\nSELECT n AS count___,\n       claim_id\nFROM\n  (SELECT amount_claimed,\n          claim_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.claim_id AS claim_id,\n             LHS.policy_id AS policy_id,\n             LHS.date_claim_made AS date_claim_made,\n             LHS.date_claim_settled AS date_claim_settled,\n             LHS.amount_claimed AS amount_claimed,\n             LHS.amount_settled AS amount_settled,\n             RHS.settlement_id AS settlement_id,\n             RHS.date_claim_made AS date_claim_made_other,\n             RHS.amount_claimed AS amount_claimed_other,\n             RHS.amount_settled AS amount_settled_other,\n             RHS.customer_policy_id AS customer_policy_id\n      FROM claims AS LHS\n      INNER JOIN settlements AS RHS ON (LHS.claim_id = RHS.claim_id\n                                           AND LHS.date_claim_settled = RHS.date_claim_settled))\n   GROUP BY amount_claimed,\n            claim_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.claim_id\nFROM Claims AS T1\nJOIN Settlements AS T2 ON T1.claim_id = T2.claim_id\nGROUP BY T1.claim_id\nORDER BY T1.Date_Claim_Settled DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM city\n      ORDER BY white DESC)\n   LIMIT 5)\n", "sql2": "SELECT Name\nFROM city\nORDER BY White DESC\nLIMIT 5", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0005", "sql1": "\nSELECT crime_rate\nFROM county_public_safety\nORDER BY crime_rate\n", "sql2": "SELECT Crime_rate\nFROM county_public_safety\nORDER BY Police_officers ASC", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM county_public_safety\n      ORDER BY police_force DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM county_public_safety\nORDER BY Population DESC\nLIMIT 1", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0015", "sql1": "\nSELECT police_force,\n       n AS count___\nFROM\n  (SELECT police_force,\n          COUNT(*) AS n\n   FROM county_public_safety\n   GROUP BY police_force)\nORDER BY police_force\n", "sql2": "SELECT Police_force,\n       COUNT(*)\nFROM county_public_safety\nGROUP BY Police_force", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0003", "sql1": "\nSELECT DISTINCT `police_force`\nFROM `county_public_safety`\nWHERE (`location` != 'East')\nORDER BY police_force\n", "sql2": "SELECT DISTINCT Police_force\nFROM county_public_safety\nWHERE LOCATION != 'East'", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0019", "sql1": "\nSELECT name_other AS name\nFROM\n  (SELECT *\n   FROM\n     (SELECT LHS.county_id AS county_id,\n             LHS.name AS name,\n             LHS.population AS population,\n             LHS.police_officers AS police_officers,\n             LHS.residents_per_officer AS residents_per_officer,\n             LHS.case_burden AS case_burden,\n             LHS.crime_rate AS crime_rate,\n             LHS.police_force AS police_force,\n             LHS.location AS LOCATION,\n             RHS.city_id AS city_id,\n             RHS.county_id AS county_id_other,\n             RHS.name AS name_other,\n             RHS.white AS white,\n             RHS.black AS black,\n             RHS.amerindian AS amerindian,\n             RHS.asian AS asian,\n             RHS.multiracial AS multiracial,\n             RHS.hispanic AS hispanic\n      FROM county_public_safety AS LHS\n      CROSS JOIN city AS RHS)\n   WHERE (county_id = county_id_other))\nWHERE (county_id = 100\n       OR crime_rate < 100.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM city\nWHERE county_id IN\n    (SELECT county_id\n     FROM county_public_safety\n     WHERE Crime_rate < 100)", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0018", "sql1": "\nSELECT DISTINCT `police_force`\nFROM `county_public_safety`\nWHERE (`location` != 'East'\n       AND `location` = 'West')\nORDER BY police_force\n", "sql2": "SELECT Police_force\nFROM county_public_safety\nWHERE LOCATION = 'East' INTERSECT\n  SELECT Police_force\n  FROM county_public_safety WHERE LOCATION = 'West'", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0002", "sql1": "\nSELECT name\nFROM county_public_safety\nORDER BY name\n", "sql2": "SELECT Name\nFROM county_public_safety\nORDER BY Population DESC", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0014", "sql1": "\nSELECT crime_rate\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.name AS name,\n          LHS.population AS population,\n          LHS.police_officers AS police_officers,\n          LHS.residents_per_officer AS residents_per_officer,\n          LHS.case_burden AS case_burden,\n          LHS.crime_rate AS crime_rate,\n          LHS.police_force AS police_force,\n          LHS.location AS LOCATION,\n          RHS.city_id AS city_id,\n          RHS.name AS name_other,\n          RHS.white AS white,\n          RHS.black AS black,\n          RHS.amerindian AS amerindian,\n          RHS.asian AS asian,\n          RHS.multiracial AS multiracial,\n          RHS.hispanic AS hispanic\n   FROM county_public_safety AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM city\n      WHERE (white >= 90.0)) AS RHS ON (LHS.county_id = RHS.county_id))\nORDER BY crime_rate\n", "sql2": "SELECT T2.Crime_rate\nFROM city AS T1\nJOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID\nWHERE T1.White > 90", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM county_public_safety\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM county_public_safety", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0020", "sql1": "\nSELECT case_burden\nFROM county_public_safety\nORDER BY case_burden\n", "sql2": "SELECT Case_burden\nFROM county_public_safety\nORDER BY Population DESC", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0016", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.name AS name,\n          LHS.population AS population,\n          LHS.police_officers AS police_officers,\n          LHS.residents_per_officer AS residents_per_officer,\n          LHS.case_burden AS case_burden,\n          LHS.crime_rate AS crime_rate,\n          LHS.police_force AS police_force,\n          LHS.location AS LOCATION\n   FROM county_public_safety AS LHS\n   INNER JOIN\n     (SELECT police_officers,\n             COUNT(*) AS n\n      FROM county_public_safety\n      GROUP BY police_officers) AS RHS ON (LHS.county_id = RHS.n\n                                           AND LHS.police_officers = RHS.police_officers))\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM county_public_safety\nGROUP BY LOCATION\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0007", "sql1": "\nSELECT hispanic\nFROM city\nWHERE (black > 10.0)\nORDER BY hispanic\n", "sql2": "SELECT Hispanic\nFROM city\nWHERE Black > 10", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0011", "sql1": "\nSELECT white,\n       crime_rate\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.county_id AS county_id,\n          LHS.name AS name,\n          LHS.white AS white,\n          LHS.black AS black,\n          LHS.amerindian AS amerindian,\n          LHS.asian AS asian,\n          LHS.multiracial AS multiracial,\n          LHS.hispanic AS hispanic,\n          RHS.name AS name_other,\n          RHS.population AS population,\n          RHS.police_officers AS police_officers,\n          RHS.residents_per_officer AS residents_per_officer,\n          RHS.case_burden AS case_burden,\n          RHS.crime_rate AS crime_rate,\n          RHS.police_force AS police_force,\n          RHS.location AS LOCATION\n   FROM city AS LHS\n   INNER JOIN county_public_safety AS RHS ON (LHS.county_id = RHS.county_id))\nORDER BY white\n", "sql2": "SELECT T1.White,\n       T2.Crime_rate\nFROM city AS T1\nJOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0010", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.county_id AS county_id,\n          LHS.name AS name,\n          LHS.white AS white,\n          LHS.black AS black,\n          LHS.amerindian AS amerindian,\n          LHS.asian AS asian,\n          LHS.multiracial AS multiracial,\n          LHS.hispanic AS hispanic,\n          RHS.name AS name_other,\n          RHS.population AS population,\n          RHS.police_officers AS police_officers,\n          RHS.residents_per_officer AS residents_per_officer,\n          RHS.case_burden AS case_burden,\n          RHS.crime_rate AS crime_rate,\n          RHS.police_force AS police_force,\n          RHS.location AS LOCATION\n   FROM city AS LHS\n   INNER JOIN county_public_safety AS RHS ON (LHS.county_id = RHS.county_id))\nORDER BY name___1\n", "sql2": "SELECT T1.Name,\n       T2.Name\nFROM city AS T1\nJOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/county_public_safety/0006", "sql1": "\nSELECT name\nFROM city\nORDER BY name\n", "sql2": "SELECT Name\nFROM city\nORDER BY Name ASC", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0009", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          `state`,\n          COUNT(*) AS `n`\n   FROM `park`\n   GROUP BY `country`,\n            `state`)\nWHERE (`state` = 'NY')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM park\nWHERE state = 'NY';", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0005", "sql1": "\nSELECT yearid,\n       n AS count___\nFROM\n  (SELECT yearid,\n          COUNT(*) AS n\n   FROM hall_of_fame\n   GROUP BY yearid)\nORDER BY yearid\n", "sql2": "SELECT yearid,\n       count(*)\nFROM hall_of_fame\nGROUP BY yearid;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0028", "sql1": "\nSELECT DISTINCT salary\nFROM salary\nWHERE (YEAR = 2010\n       OR YEAR = 2001)\nORDER BY salary\n", "sql2": "SELECT salary\nFROM salary\nWHERE YEAR = 2010\nUNION\nSELECT salary\nFROM salary\nWHERE YEAR = 2001", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0024", "sql1": "\nSELECT DISTINCT n_distinct AS count___\nFROM\n  (SELECT team_id_loser,\n          YEAR,\n          COUNT(DISTINCT YEAR) AS n_distinct\n   FROM\n     (SELECT *\n      FROM postseason\n      WHERE (YEAR > 1885\n             AND ties < 1))\n   GROUP BY team_id_loser,\n            YEAR)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM postseason\nWHERE YEAR = 1885\n  AND ties = 1;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0039", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `active`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `team_franchise`\n      WHERE (`active` = 'Y'))\n   GROUP BY active)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM team_franchise\nWHERE active = 'Y';", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0038", "sql1": "\nSELECT state\nFROM\n  (SELECT state,\n          COUNT(*) AS n\n   FROM park\n   GROUP BY state)\nWHERE (n > 2)\nORDER BY state\n", "sql2": "SELECT state\nFROM park\nGROUP BY state\nHAVING count(*) > 2;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0040", "sql1": "\nSELECT city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM park\n   GROUP BY city)\nWHERE (n >= 2\n       AND n <= 4)\nORDER BY city\n", "sql2": "SELECT city\nFROM park\nGROUP BY city\nHAVING count(*) BETWEEN 2 AND 4;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0006", "sql1": "\nSELECT YEAR,\n       meanattendance AS avg_attendance_\nFROM\n  (SELECT YEAR,\n          AVG(attendance) AS meanattendance\n   FROM home_game\n   GROUP BY YEAR)\nORDER BY YEAR\n", "sql2": "SELECT YEAR,\n       avg(attendance)\nFROM home_game\nGROUP BY YEAR;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/baseball_1/0030", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `park_alias`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `park`\n      WHERE (`city` = 'Atlanta'))\n   GROUP BY park_alias)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM park\nWHERE city = 'Atlanta';", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0009", "sql1": "\nSELECT RANGE\nFROM\n  (SELECT RANGE\n   FROM mountain INTERSECT SELECT RANGE\n   FROM mountain)\nORDER BY RANGE\n", "sql2": "SELECT DISTINCT RANGE\nFROM mountain\nORDER BY Prominence DESC\nLIMIT 3", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0013", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`climber_id` AS `climber_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`points` AS `points`,\n          `LHS`.`mountain_id` AS `mountain_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`height` AS `height`,\n          `RHS`.`prominence` AS `prominence`,\n          `RHS`.`range` AS `range`,\n          `RHS`.`country` AS `country_other`\n   FROM `climber` AS `LHS`\n   INNER JOIN `mountain` AS `RHS` ON (`LHS`.`mountain_id` = `RHS`.`mountain_id`))\nWHERE (`country` = 'West Germany')\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.Name\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID\nWHERE T1.Country = 'West Germany'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0005", "sql1": "\nSELECT n_distinct AS count_distinct_country_\nFROM\n  (SELECT COUNT(DISTINCT country) AS n_distinct\n   FROM climber)\nORDER BY count_distinct_country_\n", "sql2": "SELECT COUNT(DISTINCT Country)\nFROM climber", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0004", "sql1": "\nSELECT `points` AS `max_points_`\nFROM\n  (SELECT `country`,\n          MAX(`points`) AS `points`\n   FROM `climber`\n   GROUP BY `country`)\nWHERE (`country` = 'United Kingdom')\nORDER BY max_points_\n", "sql2": "SELECT max(Points)\nFROM climber\nWHERE Country = 'United Kingdom'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM mountain\n      ORDER BY mountain_id)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM mountain\nORDER BY Height DESC\nLIMIT 1", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0015", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM climber\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM climber\nGROUP BY Country", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0003", "sql1": "\nSELECT `name`\nFROM `climber`\nWHERE (`country` != 'Switzerland')\nORDER BY name\n", "sql2": "SELECT Name\nFROM climber\nWHERE Country != 'Switzerland'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0019", "sql1": "\nSELECT RANGE\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT height,\n                RANGE,\n                COUNT(*) AS n\n         FROM mountain\n         GROUP BY height,\n                  RANGE)\n      ORDER BY RANGE DESC)\n   LIMIT 1)\n", "sql2": "SELECT RANGE\nFROM mountain\nGROUP BY RANGE\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0018", "sql1": "\nSELECT country\nFROM mountain\nWHERE (height > 5600.0\n       OR height = 5200.0)\nORDER BY country\n", "sql2": "SELECT Country\nFROM mountain\nWHERE Height > 5600 INTERSECT\n  SELECT Country\n  FROM mountain WHERE Height < 5200", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0002", "sql1": "\nSELECT name\nFROM climber\nORDER BY name\n", "sql2": "SELECT Name\nFROM climber\nORDER BY Points DESC", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0014", "sql1": "\nSELECT `time`\nFROM\n  (SELECT `LHS`.`mountain_id` AS `mountain_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`prominence` AS `prominence`,\n          `LHS`.`range` AS `range`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`climber_id` AS `climber_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`country` AS `country_other`,\n          `RHS`.`time` AS `time`,\n          `RHS`.`points` AS `points`\n   FROM `mountain` AS `LHS`\n   INNER JOIN `climber` AS `RHS` ON (`LHS`.`mountain_id` = `RHS`.`mountain_id`))\nWHERE (`country` = 'Uganda')\nORDER BY TIME\n", "sql2": "SELECT T1.Time\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID\nWHERE T2.Country = 'Uganda'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM climber)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM climber", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM mountain AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM climber AS RHS\n        WHERE (LHS.mountain_id = RHS.mountain_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nWHERE Mountain_ID NOT IN\n    (SELECT Mountain_ID\n     FROM climber)", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0020", "sql1": "\nSELECT name\nFROM mountain\nWHERE (height >= 5000.0\n       AND prominence != 1000.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nWHERE Height > 5000\n  OR Prominence > 1000", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0016", "sql1": "\nSELECT country\nFROM\n  (SELECT country,\n          RANGE,\n          COUNT(*) AS n\n   FROM mountain\n   GROUP BY country,\n            RANGE)\nWHERE (n != 1)\nORDER BY country\n", "sql2": "SELECT Country\nFROM mountain\nGROUP BY Country\nHAVING COUNT(*) > 1", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0007", "sql1": "\nSELECT country\nFROM mountain\nWHERE (height >= 5000.0)\nORDER BY country\n", "sql2": "SELECT Country\nFROM mountain\nWHERE Height > 5000", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0011", "sql1": "\nSELECT name_other AS name,\n       height\nFROM\n  (SELECT LHS.mountain_id AS mountain_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.prominence AS prominence,\n          LHS.range AS RANGE,\n          LHS.country AS country,\n          RHS.climber_id AS climber_id,\n          RHS.name AS name_other,\n          RHS.country AS country_other,\n          RHS.time AS TIME,\n          RHS.points AS points\n   FROM mountain AS LHS\n   INNER JOIN climber AS RHS ON (LHS.mountain_id = RHS.mountain_id))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T2.Height\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0010", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.mountain_id AS mountain_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.prominence AS prominence,\n          LHS.range AS RANGE,\n          LHS.country AS country,\n          RHS.climber_id AS climber_id,\n          RHS.name AS name_other,\n          RHS.country AS country_other,\n          RHS.time AS TIME,\n          RHS.points AS points\n   FROM mountain AS LHS\n   INNER JOIN climber AS RHS ON (LHS.mountain_id = RHS.mountain_id))\nORDER BY name___1\n", "sql2": "SELECT T1.Name,\n       T2.Name\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/climbing/0006", "sql1": "\nSELECT name\nFROM mountain\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nORDER BY Name ASC", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0009", "sql1": "\nSELECT DISTINCT country\nFROM stadium\nWHERE (capacity < 60000\n       AND capacity <= 50000)\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nWHERE capacity > 60000 INTERSECT\n  SELECT country\n  FROM stadium WHERE capacity < 50000", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0013", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `id`,\n          `name`,\n          `capacity`,\n          `city`,\n          `country`,\n          `opening_year`,\n          COUNT(DISTINCT `country`) OVER () AS `n_distinct`\n   FROM `stadium`)\nWHERE (`country` != 'Russia')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM stadium\nWHERE country != 'Russia'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0005", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM stadium\n      ORDER BY opening_year)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM stadium\nORDER BY capacity DESC\nLIMIT 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0029", "sql1": "\nSELECT id,\n       name,\n       nationality,\n       meter_100,\n       meter_200,\n       meter_300,\n       meter_400,\n       meter_500,\n       meter_600,\n       meter_700,\n       TIME\nFROM swimmer\nORDER BY id\n", "sql2": "SELECT *\nFROM swimmer", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0004", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM stadium)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM stadium", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0012", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM stadium\n           WHERE (opening_year > 2006)) AS RHS\n        WHERE (LHS.country = RHS.country) ))\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nEXCEPT\nSELECT country\nFROM stadium\nWHERE opening_year > 2006", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0008", "sql1": "\nSELECT country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM stadium\n   GROUP BY country)\nWHERE (n < 3)\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nGROUP BY country\nHAVING count(*) <= 3", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0015", "sql1": "\nSELECT n_distinct AS count_distinct_nationality_\nFROM\n  (SELECT COUNT(DISTINCT nationality) AS n_distinct\n   FROM swimmer)\nORDER BY count_distinct_nationality_\n", "sql2": "SELECT count(DISTINCT nationality)\nFROM swimmer", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM event\n      ORDER BY id DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM event\nORDER BY YEAR DESC\nLIMIT 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0018", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `id`,\n          `name`,\n          `nationality`,\n          `meter_100`,\n          `meter_200`,\n          `meter_300`,\n          `meter_400`,\n          `meter_500`,\n          `meter_600`,\n          `meter_700`,\n          `time`,\n          `id_other`,\n          `result`,\n          `event_id`,\n          `id` AS `swimmer_id`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`nationality` AS `nationality`,\n             `LHS`.`meter_100` AS `meter_100`,\n             `LHS`.`meter_200` AS `meter_200`,\n             `LHS`.`meter_300` AS `meter_300`,\n             `LHS`.`meter_400` AS `meter_400`,\n             `LHS`.`meter_500` AS `meter_500`,\n             `LHS`.`meter_600` AS `meter_600`,\n             `LHS`.`meter_700` AS `meter_700`,\n             `LHS`.`time` AS `time`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`result` AS `result`,\n             `RHS`.`event_id` AS `event_id`\n      FROM `swimmer` AS `LHS`\n      INNER JOIN `record` AS `RHS` ON (`LHS`.`id` = `RHS`.`swimmer_id`)))\nWHERE (`result` = 'Win')\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM swimmer AS t1\nJOIN record AS t2 ON t1.id = t2.swimmer_id\nWHERE RESULT = 'Win'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0002", "sql1": "\nSELECT name\nFROM event\nORDER BY name\n", "sql2": "SELECT name\nFROM event\nORDER BY YEAR DESC", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0014", "sql1": "\nSELECT name\nFROM swimmer\nORDER BY name\n", "sql2": "SELECT name\nFROM swimmer\nORDER BY meter_100", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM event\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM event", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0017", "sql1": "\nSELECT `meter_200`,\n       `meter_300`\nFROM `swimmer`\nWHERE (`nationality` = 'Australia')\nORDER BY meter_200\n", "sql2": "SELECT meter_200,\n       meter_300\nFROM swimmer\nWHERE nationality = 'Australia'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0021", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT id,\n                  name,\n                  capacity,\n                  city,\n                  country,\n                  opening_year,\n                  id_other,\n                  name_other,\n                  YEAR,\n                  id AS stadium_id\n           FROM\n             (SELECT LHS.id AS id,\n                     LHS.name AS name,\n                     LHS.capacity AS capacity,\n                     LHS.city AS city,\n                     LHS.country AS country,\n                     LHS.opening_year AS opening_year,\n                     RHS.id AS id_other,\n                     RHS.name AS name_other,\n                     RHS.year AS YEAR\n              FROM stadium AS LHS\n              INNER JOIN event AS RHS ON (LHS.id = RHS.stadium_id))) AS RHS\n        WHERE (LHS.id = RHS.id\n               AND LHS.opening_year = RHS.opening_year) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nWHERE id NOT IN\n    (SELECT stadium_id\n     FROM event)", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0020", "sql1": "\nSELECT `name`,\n       `capacity`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`capacity` AS `capacity`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`opening_year` AS `opening_year`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`year` AS `year`\n   FROM `stadium` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `event`\n      WHERE (`name` = 'World Junior')) AS RHS ON (LHS.id = RHS.stadium_id))\nORDER BY name\n", "sql2": "SELECT t1.name,\n       t1.capacity\nFROM stadium AS t1\nJOIN event AS t2 ON t1.id = t2.stadium_id\nWHERE t2.name = 'World Junior'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0016", "sql1": "\nSELECT nationality,\n       id AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT id,\n                name,\n                nationality,\n                meter_100,\n                meter_200,\n                meter_300,\n                meter_400,\n                meter_500,\n                meter_600,\n                meter_700,\n                TIME,\n                COUNT(*) OVER () AS n\n         FROM swimmer)\n      ORDER BY meter_600 DESC)\n   LIMIT 1)\n", "sql2": "SELECT nationality,\n       count(*)\nFROM swimmer\nGROUP BY nationality\nHAVING count(*) > 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0007", "sql1": "\nSELECT DISTINCT country_other AS country\nFROM\n  (SELECT LHS.country AS country,\n          LHS.opening_year AS opening_year,\n          LHS.n AS n,\n          RHS.country AS country_other,\n          RHS.opening_year AS opening_year_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT country,\n             opening_year,\n             COUNT(*) AS n\n      FROM stadium\n      GROUP BY country,\n               opening_year) AS LHS\n   CROSS JOIN\n     (SELECT country,\n             opening_year,\n             COUNT(*) AS n\n      FROM stadium\n      GROUP BY country,\n               opening_year) AS RHS)\nWHERE (n < n_other)\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nGROUP BY country\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0011", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM stadium\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT country,\n       count(*)\nFROM stadium\nGROUP BY country", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_city_\nFROM stadium\nWHERE (opening_year < 2006)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM stadium\nWHERE opening_year < 2006", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT id,\n          name,\n          capacity,\n          city,\n          country,\n          opening_year,\n          AVG(capacity) OVER () AS meancapacity\n   FROM stadium)\nWHERE (meancapacity > capacity)\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nWHERE capacity <\n    (SELECT avg(capacity)\n     FROM stadium)", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0026", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `id`,\n          `name`,\n          `nationality`,\n          `meter_100`,\n          `meter_200`,\n          `meter_300`,\n          `meter_400`,\n          `meter_500`,\n          `meter_600`,\n          `meter_700`,\n          `time`,\n          `id_other`,\n          `result`,\n          `swimmer_id`,\n          `id` AS `event_id`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`nationality` AS `nationality`,\n             `LHS`.`meter_100` AS `meter_100`,\n             `LHS`.`meter_200` AS `meter_200`,\n             `LHS`.`meter_300` AS `meter_300`,\n             `LHS`.`meter_400` AS `meter_400`,\n             `LHS`.`meter_500` AS `meter_500`,\n             `LHS`.`meter_600` AS `meter_600`,\n             `LHS`.`meter_700` AS `meter_700`,\n             `LHS`.`time` AS `time`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`result` AS `result`,\n             `RHS`.`swimmer_id` AS `swimmer_id`\n      FROM `swimmer` AS `LHS`\n      INNER JOIN `record` AS `RHS` ON (`LHS`.`id` = `RHS`.`event_id`)))\nWHERE (`result` != 'Win'\n       OR `result` = 'Loss')\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM swimmer AS t1\nJOIN record AS t2 ON t1.id = t2.swimmer_id\nWHERE RESULT = 'Win' INTERSECT\n  SELECT t1.name\n  FROM swimmer AS t1\n  JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/swimming/0030", "sql1": "\nSELECT meancapacity AS avg_capacity_\nFROM\n  (SELECT AVG(capacity) AS meancapacity\n   FROM\n     (SELECT *\n      FROM stadium\n      WHERE (opening_year = 2005\n             OR opening_year >= capacity)))\nORDER BY avg_capacity_\n", "sql2": "SELECT avg(capacity)\nFROM stadium\nWHERE opening_year = 2005", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0009", "sql1": "\nSELECT product_details\nFROM products\nORDER BY product_details\n", "sql2": "SELECT DISTINCT product_details\nFROM products", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0033", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `customer_orders`\nWHERE (`order_details` = 'Second time')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customer_orders\nWHERE order_details = 'Second time'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0013", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          `other_address_details`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`payment_method` AS `payment_method`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`date_became_customer` AS `date_became_customer`,\n             `LHS`.`other_customer_details` AS `other_customer_details`,\n             `LHS`.`address_id` AS `address_id`,\n             `LHS`.`date_address_from` AS `date_address_from`,\n             `LHS`.`address_type` AS `address_type`,\n             `LHS`.`date_address_to` AS `date_address_to`,\n             `RHS`.`address_content` AS `address_content`,\n             `RHS`.`city` AS `city`,\n             `RHS`.`zip_postcode` AS `zip_postcode`,\n             `RHS`.`state_province_county` AS `state_province_county`,\n             `RHS`.`country` AS `country`,\n             `RHS`.`other_address_details` AS `other_address_details`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`payment_method` AS `payment_method`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `LHS`.`date_became_customer` AS `date_became_customer`,\n                `LHS`.`other_customer_details` AS `other_customer_details`,\n                `RHS`.`address_id` AS `address_id`,\n                `RHS`.`date_address_from` AS `date_address_from`,\n                `RHS`.`address_type` AS `address_type`,\n                `RHS`.`date_address_to` AS `date_address_to`\n         FROM `customers` AS `LHS`\n         INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `addresses`\n         WHERE (`city` = 'Lake Geovannyton')) AS RHS ON (LHS.address_id = RHS.address_id))\n   GROUP BY country,\n            other_address_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers AS t1\nJOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id\nJOIN addresses AS t3 ON t2.address_id = t3.address_id\nWHERE t3.city = 'Lake Geovannyton'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0005", "sql1": "\nSELECT date_became_customer\nFROM customers\nWHERE (customer_id >= 10\n       OR customer_id > 20)\nORDER BY date_became_customer\n", "sql2": "SELECT date_became_customer\nFROM customers\nWHERE customer_id BETWEEN 10 AND 20", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0029", "sql1": "\nSELECT payment_method\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.payment_method AS payment_method,\n          LHS.customer_name AS customer_name,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.other_customer_details AS other_customer_details,\n          RHS.customer_id AS customer_id_other,\n          RHS.payment_method AS payment_method_other,\n          RHS.customer_name AS customer_name_other,\n          RHS.order_id AS order_id,\n          RHS.order_status AS order_status,\n          RHS.order_date AS order_date,\n          RHS.order_details AS order_details,\n          RHS.product_id AS product_id,\n          RHS.order_quantity AS order_quantity\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.payment_method AS payment_method,\n             LHS.customer_name AS customer_name,\n             LHS.date_became_customer AS date_became_customer,\n             LHS.other_customer_details AS other_customer_details,\n             LHS.order_id AS order_id,\n             LHS.order_status AS order_status,\n             LHS.order_date AS order_date,\n             LHS.order_details AS order_details,\n             RHS.product_id AS product_id,\n             RHS.order_quantity AS order_quantity\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.payment_method AS payment_method,\n                LHS.customer_name AS customer_name,\n                LHS.date_became_customer AS date_became_customer,\n                LHS.other_customer_details AS other_customer_details,\n                RHS.order_id AS order_id,\n                RHS.order_status AS order_status,\n                RHS.order_date AS order_date,\n                RHS.order_details AS order_details\n         FROM customers AS LHS\n         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS RHS ON (LHS.date_became_customer = RHS.date_became_customer\n                                                                                    AND LHS.other_customer_details = RHS.other_customer_details))\nORDER BY payment_method\n", "sql2": "SELECT t1.payment_method\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nJOIN order_items AS t3 ON t2.order_id = t3.order_id\nGROUP BY t1.customer_name\nORDER BY sum(t3.order_quantity)\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0028", "sql1": "\nSELECT DISTINCT customer_name\nFROM\n  (SELECT customer_id AS order_id,\n          customer_id,\n          order_status,\n          order_date,\n          order_details,\n          payment_method,\n          customer_name,\n          date_became_customer,\n          other_customer_details,\n          order_status_other,\n          order_date_other,\n          order_details_other,\n          product_id,\n          order_quantity\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.order_status AS order_status,\n             LHS.order_date AS order_date,\n             LHS.order_details AS order_details,\n             RHS.payment_method AS payment_method,\n             RHS.customer_name AS customer_name,\n             RHS.date_became_customer AS date_became_customer,\n             RHS.other_customer_details AS other_customer_details,\n             RHS.order_status AS order_status_other,\n             RHS.order_date AS order_date_other,\n             RHS.order_details AS order_details_other,\n             RHS.product_id AS product_id,\n             RHS.order_quantity AS order_quantity\n      FROM customer_orders AS LHS\n      INNER JOIN\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.payment_method AS payment_method,\n                LHS.customer_name AS customer_name,\n                LHS.date_became_customer AS date_became_customer,\n                LHS.other_customer_details AS other_customer_details,\n                LHS.order_id AS order_id,\n                LHS.order_status AS order_status,\n                LHS.order_date AS order_date,\n                LHS.order_details AS order_details,\n                RHS.product_id AS product_id,\n                RHS.order_quantity AS order_quantity\n         FROM\n           (SELECT LHS.customer_id AS customer_id,\n                   LHS.payment_method AS payment_method,\n                   LHS.customer_name AS customer_name,\n                   LHS.date_became_customer AS date_became_customer,\n                   LHS.other_customer_details AS other_customer_details,\n                   RHS.order_id AS order_id,\n                   RHS.order_status AS order_status,\n                   RHS.order_date AS order_date,\n                   RHS.order_details AS order_details\n            FROM customers AS LHS\n            INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n         INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS RHS ON (LHS.customer_id = RHS.order_id\n                                                                                       AND LHS.order_id = RHS.customer_id)))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nJOIN order_items AS t3 ON t2.order_id = t3.order_id\nGROUP BY t1.customer_name\nORDER BY sum(t3.order_quantity) DESC\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0004", "sql1": "\nSELECT `customer_name`\nFROM `customers`\nWHERE (`payment_method` = 'Cash')\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nWHERE payment_method = 'Cash'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0012", "sql1": "\nSELECT `address_content`\nFROM\n  (SELECT `LHS`.`address_id` AS `address_id`,\n          `LHS`.`address_content` AS `address_content`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`zip_postcode` AS `zip_postcode`,\n          `LHS`.`state_province_county` AS `state_province_county`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`other_address_details` AS `other_address_details`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `RHS`.`date_address_from` AS `date_address_from`,\n          `RHS`.`address_type` AS `address_type`,\n          `RHS`.`date_address_to` AS `date_address_to`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`address_content` AS `address_content`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`other_address_details` AS `other_address_details`,\n             `RHS`.`customer_id` AS `customer_id`,\n             `RHS`.`payment_method` AS `payment_method`,\n             `RHS`.`customer_name` AS `customer_name`,\n             `RHS`.`date_became_customer` AS `date_became_customer`,\n             `RHS`.`other_customer_details` AS `other_customer_details`\n      FROM `addresses` AS `LHS`\n      CROSS JOIN `customers` AS `RHS`) AS `LHS`\n   INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`address_id`\n                                                   AND `LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Maudie Kertzmann')\nORDER BY address_content\n", "sql2": "SELECT t3.address_content\nFROM customers AS t1\nJOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id\nJOIN addresses AS t3 ON t2.address_id = t3.address_id\nWHERE t1.customer_name = 'Maudie Kertzmann'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0032", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `customer_id`) OVER () AS `count_distinct_customer_id_`\nFROM `customer_orders`\nWHERE (`order_status` = 'Cancelled')\nORDER BY count_distinct_customer_id_\n", "sql2": "SELECT count(DISTINCT customer_id)\nFROM customer_orders\nWHERE order_status = 'Cancelled'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0008", "sql1": "\nSELECT DISTINCT payment_method\nFROM customers\nORDER BY payment_method\n", "sql2": "SELECT DISTINCT payment_method\nFROM customers", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0039", "sql1": "\nSELECT product_details,\n       product_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.product_id AS product_id,\n                LHS.product_details AS product_details,\n                RHS.order_id AS order_id,\n                RHS.order_quantity AS order_quantity\n         FROM products AS LHS\n         INNER JOIN order_items AS RHS ON (LHS.product_id = RHS.product_id))\n      ORDER BY product_id)\n   LIMIT 1)\n", "sql2": "SELECT t2.product_details,\n       t2.product_id\nFROM order_items AS t1\nJOIN products AS t2 ON t1.product_id = t2.product_id\nGROUP BY t1.product_id\nORDER BY sum(t1.order_quantity)\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0023", "sql1": "\nSELECT DISTINCT MAX(`active_to_date`) OVER () AS `max_t2_active_to_date_`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`channel_code` AS `channel_code`,\n          `LHS`.`active_from_date` AS `active_from_date`,\n          `LHS`.`active_to_date` AS `active_to_date`,\n          `LHS`.`contact_number` AS `contact_number`,\n          `RHS`.`payment_method` AS `payment_method`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`date_became_customer` AS `date_became_customer`,\n          `RHS`.`other_customer_details` AS `other_customer_details`\n   FROM `customer_contact_channels` AS `LHS`\n   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Tillman Ernser')\nORDER BY max_t2_active_to_date_\n", "sql2": "SELECT max(t2.active_to_date)\nFROM customers AS t1\nJOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_name = 'Tillman Ernser'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0034", "sql1": "\nSELECT `customer_name`,\n       `order_date`\nFROM\n  (SELECT `LHS`.`order_id` AS `order_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`order_status` AS `order_status`,\n          `LHS`.`order_date` AS `order_date`,\n          `LHS`.`order_details` AS `order_details`,\n          `RHS`.`payment_method` AS `payment_method`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`date_became_customer` AS `date_became_customer`,\n          `RHS`.`other_customer_details` AS `other_customer_details`\n   FROM\n     (SELECT *\n      FROM `customer_orders`\n      WHERE (`order_status` = 'Delivered')) AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name,\n       t2.order_date\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nWHERE order_status = 'Delivered'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0022", "sql1": "\nSELECT DISTINCT `channel_code`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `RHS`.`channel_code` AS `channel_code`,\n          `RHS`.`active_from_date` AS `active_from_date`,\n          `RHS`.`active_to_date` AS `active_to_date`,\n          `RHS`.`contact_number` AS `contact_number`\n   FROM `customers` AS `LHS`\n   LEFT JOIN `customer_contact_channels` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Tillman Ernser')\nORDER BY channel_code\n", "sql2": "SELECT DISTINCT channel_code\nFROM customers AS t1\nJOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_name = 'Tillman Ernser'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0018", "sql1": "\nSELECT city\nFROM addresses\nWHERE (zip_postcode = 255)\nORDER BY city\n", "sql2": "SELECT city\nFROM addresses\nWHERE zip_postcode = 255", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0038", "sql1": "\nSELECT product_details\nFROM\n  (SELECT product_id,\n          product_details,\n          product_id_other,\n          order_quantity,\n          product_id AS order_id\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_details AS product_details,\n             RHS.product_id AS product_id_other,\n             RHS.order_quantity AS order_quantity\n      FROM products AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.product_id = RHS.order_id)))\nORDER BY product_details\n", "sql2": "SELECT t2.product_details\nFROM order_items AS t1\nJOIN products AS t2 ON t1.product_id = t2.product_id\nGROUP BY t1.product_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0014", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`address_id` AS `address_id`,\n          `LHS`.`address_content` AS `address_content`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`zip_postcode` AS `zip_postcode`,\n          `LHS`.`state_province_county` AS `state_province_county`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`other_address_details` AS `other_address_details`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `RHS`.`date_address_from` AS `date_address_from`,\n          `RHS`.`address_type` AS `address_type`,\n          `RHS`.`date_address_to` AS `date_address_to`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`address_content` AS `address_content`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`other_address_details` AS `other_address_details`,\n             `RHS`.`customer_id` AS `customer_id`,\n             `RHS`.`payment_method` AS `payment_method`,\n             `RHS`.`customer_name` AS `customer_name`,\n             `RHS`.`date_became_customer` AS `date_became_customer`,\n             `RHS`.`other_customer_details` AS `other_customer_details`\n      FROM `addresses` AS `LHS`\n      CROSS JOIN `customers` AS `RHS`) AS `LHS`\n   INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`address_id`\n                                                   AND `LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`state_province_county` = 'Colorado')\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id\nJOIN addresses AS t3 ON t2.address_id = t3.address_id\nWHERE t3.state_province_county = 'Colorado'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0043", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM customer_orders AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nEXCEPT\nSELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0001", "sql1": "\nSELECT customer_name\nFROM customers\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0017", "sql1": "\nSELECT city\nFROM addresses\nORDER BY city\n", "sql2": "SELECT DISTINCT city\nFROM addresses", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0040", "sql1": "\nSELECT `address_content`\nFROM\n  (SELECT *\n   FROM `addresses`\n   WHERE (`city` = 'East Julianaside'\n          OR `city` = 'Gleasonmouth'))\nWHERE (`state_province_county` = 'Texas'\n       OR `state_province_county` = 'Arizona')\nORDER BY address_content\n", "sql2": "SELECT address_content\nFROM addresses\nWHERE city = 'East Julianaside'\n  AND state_province_county = 'Texas'\nUNION\nSELECT address_content\nFROM addresses\nWHERE city = 'Gleasonmouth'\n  AND state_province_county = 'Arizona'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0021", "sql1": "\nSELECT channel_code\nFROM\n  (SELECT channel_code,\n          COUNT(DISTINCT customer_id) AS n_distinct\n   FROM customer_contact_channels\n   GROUP BY channel_code)\nWHERE (n_distinct <= 5)\nORDER BY channel_code\n", "sql2": "SELECT channel_code\nFROM customer_contact_channels\nGROUP BY channel_code\nHAVING count(customer_id) < 5", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0020", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT address_id,\n          address_content,\n          city,\n          zip_postcode,\n          state_province_county,\n          country,\n          other_address_details,\n          COUNT(DISTINCT address_id) OVER () AS n_distinct\n   FROM addresses)\nWHERE (address_id >= 4\n       OR n_distinct >= address_id)\nORDER BY country\n", "sql2": "SELECT country\nFROM addresses\nGROUP BY country\nHAVING count(address_id) > 4", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0041", "sql1": "\nSELECT `customer_name`\nFROM `customers`\nWHERE (`payment_method` != 'Cash')\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nWHERE payment_method != 'Cash'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0027", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.payment_method AS payment_method,\n          LHS.customer_name AS customer_name,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.other_customer_details AS other_customer_details,\n          LHS.order_id AS order_id,\n          LHS.order_status AS order_status,\n          LHS.order_date AS order_date,\n          LHS.order_details AS order_details,\n          LHS.product_id AS product_id,\n          LHS.order_quantity AS order_quantity\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.payment_method AS payment_method,\n             LHS.customer_name AS customer_name,\n             LHS.date_became_customer AS date_became_customer,\n             LHS.other_customer_details AS other_customer_details,\n             LHS.order_id AS order_id,\n             LHS.order_status AS order_status,\n             LHS.order_date AS order_date,\n             LHS.order_details AS order_details,\n             RHS.product_id AS product_id,\n             RHS.order_quantity AS order_quantity\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.payment_method AS payment_method,\n                LHS.customer_name AS customer_name,\n                LHS.date_became_customer AS date_became_customer,\n                LHS.other_customer_details AS other_customer_details,\n                RHS.order_id AS order_id,\n                RHS.order_status AS order_status,\n                RHS.order_date AS order_date,\n                RHS.order_details AS order_details\n         FROM customers AS LHS\n         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(order_quantity) AS order_quantity\n      FROM order_items) AS RHS ON (LHS.order_quantity = RHS.order_quantity))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nJOIN order_items AS t3 ON t2.order_id = t3.order_id\nWHERE t3.order_quantity =\n    (SELECT max(order_quantity)\n     FROM order_items)", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0006", "sql1": "\nSELECT payment_method\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT customer_id,\n                payment_method,\n                customer_name,\n                date_became_customer,\n                other_customer_details,\n                COUNT(*) OVER () AS n\n         FROM customers)\n      ORDER BY customer_name DESC)\n   LIMIT 1)\nFrom cffi callback <function _processevents at 0x7fbbe9fd3790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\ncustomers <- read_csv(\"tests-examples/spider/customers_and_addresses/tables/customers.csv\", skip=1, col_names=c('customer_id','payment_method','customer_name','date_became_customer','other_customer_details'), col_types=cols(col_integer(),col_character(),col_character(),col_datetime(),col_character()))\ncustomers <- copy_to(con, customers)\nexpected_output <- read_csv(\"tests-examples/spider/customers_and_addresses/tables/0006.csv\", skip=1, col_names=c('payment_method'), col_types=cols(col_character()))\n\ndf1 <- customers %>% mutate(n = n())\ndf2 <- df1 %>% arrange(desc(customer_name)) %>% head(1)\nout <- df2 %>% select(payment_method)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT payment_method\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT customer_id,\n                payment_method,\n                customer_name,\n                date_became_customer,\n                other_customer_details,\n                COUNT(*) OVER () AS n\n         FROM customers)\n      ORDER BY customer_name DESC)\n   LIMIT 1)\n", "sql2": "SELECT payment_method\nFROM customers\nGROUP BY payment_method\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0026", "sql1": "\nSELECT `customer_name`,\n       `active_from_date`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `LHS`.`channel_code` AS `channel_code`,\n          `LHS`.`active_from_date` AS `active_from_date`,\n          `LHS`.`active_to_date` AS `active_to_date`,\n          `LHS`.`contact_number` AS `contact_number`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`payment_method` AS `payment_method`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`date_became_customer` AS `date_became_customer`,\n             `LHS`.`other_customer_details` AS `other_customer_details`,\n             `RHS`.`channel_code` AS `channel_code`,\n             `RHS`.`active_from_date` AS `active_from_date`,\n             `RHS`.`active_to_date` AS `active_to_date`,\n             `RHS`.`contact_number` AS `contact_number`\n      FROM `customers` AS `LHS`\n      INNER JOIN `customer_contact_channels` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `customer_contact_channels`\n      WHERE (`channel_code` = 'Email')) AS RHS ON (LHS.customer_id = RHS.customer_id\n                                                   AND LHS.channel_code = RHS.channel_code\n                                                   AND LHS.active_from_date = RHS.active_from_date\n                                                   AND LHS.active_to_date = RHS.active_to_date\n                                                   AND LHS.contact_number = RHS.contact_number))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name,\n       t2.active_from_date\nFROM customers AS t1\nJOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id\nWHERE t2.channel_code = 'Email'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/customers_and_addresses/0030", "sql1": "\nSELECT `n_distinct` AS `count_distinct_t3_product_id_`\nFROM\n  (SELECT `customer_id`,\n          `customer_name`,\n          COUNT(DISTINCT `product_id`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`order_id` AS `order_id`,\n             `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`order_status` AS `order_status`,\n             `LHS`.`order_date` AS `order_date`,\n             `LHS`.`order_details` AS `order_details`,\n             `LHS`.`product_id` AS `product_id`,\n             `LHS`.`order_quantity` AS `order_quantity`,\n             `RHS`.`payment_method` AS `payment_method`,\n             `RHS`.`customer_name` AS `customer_name`,\n             `RHS`.`date_became_customer` AS `date_became_customer`,\n             `RHS`.`other_customer_details` AS `other_customer_details`\n      FROM\n        (SELECT `LHS`.`order_id` AS `order_id`,\n                `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`order_status` AS `order_status`,\n                `LHS`.`order_date` AS `order_date`,\n                `LHS`.`order_details` AS `order_details`,\n                `RHS`.`product_id` AS `product_id`,\n                `RHS`.`order_quantity` AS `order_quantity`\n         FROM `customer_orders` AS `LHS`\n         INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `customers`\n         WHERE (`customer_name` = 'Rodrick Heaney')) AS RHS ON (LHS.customer_id = RHS.customer_id))\n   GROUP BY customer_id,\n            customer_name)\nORDER BY count_distinct_t3_product_id_\n", "sql2": "SELECT count(DISTINCT t3.product_id)\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nJOIN order_items AS t3 ON t2.order_id = t3.order_id\nWHERE t1.customer_name = 'Rodrick Heaney'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0009", "sql1": "\nSELECT `meanamount_of_transaction` AS `avg_amount_of_transaction_`\nFROM\n  (SELECT `other_details`,\n          `transaction_type_code`,\n          AVG(`amount_of_transaction`) AS `meanamount_of_transaction`\n   FROM `transactions`\n   GROUP BY `other_details`,\n            `transaction_type_code`)\nWHERE (`transaction_type_code` = 'SALE')\nORDER BY avg_amount_of_transaction_\n", "sql2": "SELECT avg(amount_of_transaction)\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'SALE'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0033", "sql1": "\nSELECT transaction_type_code\nFROM\n  (SELECT transaction_type_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT investor_id AS transaction_id,\n             investor_id,\n             transaction_type_code,\n             date_of_transaction,\n             amount_of_transaction,\n             share_count,\n             other_details,\n             investor_id_other,\n             transaction_type_code_other,\n             date_of_transaction_other,\n             amount_of_transaction_other,\n             other_details_other\n      FROM\n        (SELECT LHS.transaction_id AS transaction_id,\n                LHS.investor_id AS investor_id,\n                LHS.transaction_type_code AS transaction_type_code,\n                LHS.date_of_transaction AS date_of_transaction,\n                LHS.amount_of_transaction AS amount_of_transaction,\n                LHS.share_count AS share_count,\n                LHS.other_details AS other_details,\n                RHS.investor_id AS investor_id_other,\n                RHS.transaction_type_code AS transaction_type_code_other,\n                RHS.date_of_transaction AS date_of_transaction_other,\n                RHS.amount_of_transaction AS amount_of_transaction_other,\n                RHS.other_details AS other_details_other\n         FROM transactions AS LHS\n         INNER JOIN transactions AS RHS ON (LHS.investor_id = RHS.transaction_id\n                                               AND LHS.share_count = RHS.share_count)))\n   GROUP BY transaction_type_code)\nORDER BY transaction_type_code\n", "sql2": "SELECT transaction_type_code\nFROM TRANSACTIONS\nGROUP BY transaction_type_code\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0013", "sql1": "\nSELECT DISTINCT date_of_transaction_other AS date_of_transaction\nFROM\n  (SELECT LHS.transaction_id AS transaction_id,\n          LHS.investor_id AS investor_id,\n          LHS.transaction_type_code AS transaction_type_code,\n          LHS.date_of_transaction AS date_of_transaction,\n          LHS.amount_of_transaction AS amount_of_transaction,\n          LHS.share_count AS share_count,\n          LHS.other_details AS other_details,\n          RHS.transaction_id AS transaction_id_other,\n          RHS.investor_id AS investor_id_other,\n          RHS.transaction_type_code AS transaction_type_code_other,\n          RHS.date_of_transaction AS date_of_transaction_other,\n          RHS.amount_of_transaction AS amount_of_transaction_other,\n          RHS.share_count AS share_count_other,\n          RHS.other_details AS other_details_other\n   FROM\n     (SELECT *\n      FROM transactions\n      WHERE (amount_of_transaction > 100.0\n             OR amount_of_transaction > 1000.0)) AS LHS\n   CROSS JOIN transactions AS RHS)\nWHERE (share_count != share_count_other\n       OR amount_of_transaction < amount_of_transaction_other)\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction\nFROM TRANSACTIONS\nWHERE share_count > 100\n  OR amount_of_transaction > 1000", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0005", "sql1": "\nSELECT date_of_transaction,\n       share_count\nFROM transactions\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction,\n       share_count\nFROM TRANSACTIONS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0029", "sql1": "\nSELECT lot_id,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT lot_id,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.lot_id AS lot_id,\n             RHS.investor_id AS investor_id,\n             RHS.transaction_type_code AS transaction_type_code,\n             RHS.date_of_transaction AS date_of_transaction,\n             RHS.amount_of_transaction AS amount_of_transaction,\n             RHS.share_count AS share_count,\n             RHS.other_details AS other_details\n      FROM transactions_lots AS LHS\n      INNER JOIN transactions AS RHS ON (LHS.transaction_id = RHS.transaction_id))\n   GROUP BY lot_id)\nORDER BY lot_id\n", "sql2": "SELECT T2.lot_id,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS AS T1\nJOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id\nGROUP BY T2.lot_id\nORDER BY avg(amount_of_transaction)", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0028", "sql1": "\nSELECT lot_id,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT lot_id,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.lot_id AS lot_id,\n             RHS.investor_id AS investor_id,\n             RHS.transaction_type_code AS transaction_type_code,\n             RHS.date_of_transaction AS date_of_transaction,\n             RHS.amount_of_transaction AS amount_of_transaction,\n             RHS.share_count AS share_count,\n             RHS.other_details AS other_details\n      FROM transactions_lots AS LHS\n      INNER JOIN transactions AS RHS ON (LHS.transaction_id = RHS.transaction_id))\n   GROUP BY lot_id)\nORDER BY lot_id\n", "sql2": "SELECT T2.lot_id,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS AS T1\nJOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id\nGROUP BY T2.lot_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0004", "sql1": "\nSELECT DISTINCT MAX(amount_of_transaction) OVER () AS max_amount_of_transaction_\nFROM transactions\nORDER BY max_amount_of_transaction_\n", "sql2": "SELECT max(amount_of_transaction)\nFROM TRANSACTIONS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0008", "sql1": "\nSELECT `date_of_transaction`\nFROM `transactions`\nWHERE (`transaction_type_code` = 'SALE')\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'SALE'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0003", "sql1": "\nSELECT DISTINCT lot_details\nFROM lots\nORDER BY lot_details\n", "sql2": "SELECT DISTINCT lot_details\nFROM LOTS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0039", "sql1": "\nSELECT date_of_transaction\nFROM transactions\nWHERE (amount_of_transaction != 100.0)\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction\nFROM TRANSACTIONS\nWHERE share_count >= 100\n  OR amount_of_transaction >= 100", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0019", "sql1": "\nSELECT purchase_details\nFROM\n  (SELECT transaction_id,\n          investor_id,\n          transaction_type_code,\n          date_of_transaction,\n          amount_of_transaction,\n          share_count,\n          other_details,\n          purchase_details,\n          transaction_id AS purchase_transaction_id\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.investor_id AS investor_id,\n             LHS.transaction_type_code AS transaction_type_code,\n             LHS.date_of_transaction AS date_of_transaction,\n             LHS.amount_of_transaction AS amount_of_transaction,\n             LHS.share_count AS share_count,\n             LHS.other_details AS other_details,\n             RHS.purchase_details AS purchase_details\n      FROM transactions AS LHS\n      INNER JOIN purchases AS RHS ON (LHS.transaction_id = RHS.purchase_transaction_id)))\nWHERE (amount_of_transaction > 10000.0)\nORDER BY purchase_details\n", "sql2": "SELECT T1.purchase_details\nFROM PURCHASES AS T1\nJOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id\nWHERE T2.amount_of_transaction > 10000", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0023", "sql1": "\nSELECT transaction_type_code,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT other_details,\n          transaction_type_code,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM transactions\n   GROUP BY other_details,\n            transaction_type_code)\nORDER BY transaction_type_code\n", "sql2": "SELECT transaction_type_code,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS\nGROUP BY transaction_type_code", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0034", "sql1": "\nSELECT transaction_type_description\nFROM\n  (SELECT LHS.transaction_id AS transaction_id,\n          LHS.investor_id AS investor_id,\n          LHS.transaction_type_code AS transaction_type_code,\n          LHS.date_of_transaction AS date_of_transaction,\n          LHS.amount_of_transaction AS amount_of_transaction,\n          LHS.share_count AS share_count,\n          LHS.other_details AS other_details,\n          RHS.transaction_type_description AS transaction_type_description\n   FROM transactions AS LHS\n   INNER JOIN\n     (SELECT transaction_type_code,\n             transaction_type_description,\n             COUNT(*) OVER () AS n\n      FROM ref_transaction_types) AS RHS ON (LHS.transaction_id = RHS.n\n                                                AND LHS.transaction_type_code = RHS.transaction_type_code))\nORDER BY transaction_type_description\n", "sql2": "SELECT T1.transaction_type_description\nFROM Ref_Transaction_Types AS T1\nJOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code\nGROUP BY T1.transaction_type_code\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0018", "sql1": "\nSELECT `lot_details`\nFROM\n  (SELECT `LHS`.`investor_id` AS `investor_id`,\n          `LHS`.`investor_details` AS `investor_details`,\n          `RHS`.`lot_id` AS `lot_id`,\n          `RHS`.`lot_details` AS `lot_details`\n   FROM `investors` AS `LHS`\n   INNER JOIN `lots` AS `RHS` ON (`LHS`.`investor_id` = `RHS`.`investor_id`))\nWHERE (`investor_details` = 'l')\nORDER BY lot_details\n", "sql2": "SELECT T2.lot_details\nFROM INVESTORS AS T1\nJOIN LOTS AS T2 ON T1.investor_id = T2.investor_id\nWHERE T1.Investor_details = 'l'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0002", "sql1": "\nSELECT investor_details\nFROM investors\nORDER BY investor_details\n", "sql2": "SELECT Investor_details\nFROM INVESTORS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM investors\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM INVESTORS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0017", "sql1": "\nSELECT lot_details,\n       investor_id\nFROM lots\nORDER BY lot_details\n", "sql2": "SELECT lot_details,\n       investor_id\nFROM LOTS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0020", "sql1": "\nSELECT sales_details,\n       date_of_transaction\nFROM\n  (SELECT transaction_id,\n          investor_id,\n          transaction_type_code,\n          date_of_transaction,\n          amount_of_transaction,\n          share_count,\n          other_details,\n          sales_details,\n          transaction_id AS sales_transaction_id\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.investor_id AS investor_id,\n             LHS.transaction_type_code AS transaction_type_code,\n             LHS.date_of_transaction AS date_of_transaction,\n             LHS.amount_of_transaction AS amount_of_transaction,\n             LHS.share_count AS share_count,\n             LHS.other_details AS other_details,\n             RHS.sales_details AS sales_details\n      FROM transactions AS LHS\n      INNER JOIN sales AS RHS ON (LHS.transaction_id = RHS.sales_transaction_id)))\nWHERE (amount_of_transaction <= 3000.0)\nORDER BY sales_details\n", "sql2": "SELECT T1.sales_details,\n       T2.date_of_transaction\nFROM SALES AS T1\nJOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id\nWHERE T2.amount_of_transaction < 3000", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0041", "sql1": "\nSELECT DISTINCT lot_details\nFROM\n  (SELECT *\n   FROM lots AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT LHS.transaction_id AS transaction_id,\n                  LHS.lot_id AS lot_id,\n                  RHS.investor_id AS investor_id,\n                  RHS.lot_details AS lot_details\n           FROM transactions_lots AS LHS\n           LEFT JOIN lots AS RHS ON (LHS.lot_id = RHS.lot_id)) AS RHS\n        WHERE (LHS.lot_details = RHS.lot_details) ))\nORDER BY lot_details\n", "sql2": "SELECT lot_details\nFROM Lots\nEXCEPT\nSELECT T1.lot_details\nFROM Lots AS T1\nJOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT transaction_type_code) OVER () AS count_distinct_transaction_type_code_\nFROM transactions\nORDER BY count_distinct_transaction_type_code_\n", "sql2": "SELECT COUNT(DISTINCT transaction_type_code)\nFROM TRANSACTIONS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0031", "sql1": "\nSELECT investor_id,\n       n AS count___\nFROM\n  (SELECT investor_id,\n          COUNT(*) AS n\n   FROM transactions\n   GROUP BY investor_id)\nORDER BY investor_id\n", "sql2": "SELECT investor_id,\n       COUNT(*)\nFROM TRANSACTIONS\nGROUP BY investor_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0027", "sql1": "\nSELECT investor_id,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT investor_id,\n          other_details,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM transactions\n   GROUP BY investor_id,\n            other_details)\nORDER BY investor_id\n", "sql2": "SELECT investor_id,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS\nGROUP BY investor_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0007", "sql1": "\nSELECT `transaction_id`\nFROM `transactions`\nWHERE (`transaction_type_code` = 'PUR')\nORDER BY transaction_id\n", "sql2": "SELECT transaction_id\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'PUR'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0011", "sql1": "\nSELECT DISTINCT `minamount_of_transaction` AS `min_amount_of_transaction_`\nFROM\n  (SELECT `transaction_id`,\n          `investor_id`,\n          `transaction_type_code`,\n          `date_of_transaction`,\n          `amount_of_transaction`,\n          `share_count`,\n          `other_details`,\n          MIN(`amount_of_transaction`) OVER () AS `minamount_of_transaction`\n   FROM `transactions`)\nWHERE (`transaction_type_code` != 'PUR'\n       OR minamount_of_transaction <= 50.0)\nORDER BY min_amount_of_transaction_\n", "sql2": "SELECT min(amount_of_transaction)\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'PUR'\n  AND share_count > 50", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0010", "sql1": "\nSELECT `transaction_type_description`\nFROM `ref_transaction_types`\nWHERE (`transaction_type_code` = 'PUR')\nORDER BY transaction_type_description\n", "sql2": "SELECT transaction_type_description\nFROM Ref_Transaction_Types\nWHERE transaction_type_code = 'PUR'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_share_transactions/0030", "sql1": "\nSELECT `investor_id`,\n       `n` AS `count___`\nFROM\n  (SELECT `investor_id`,\n          `transaction_type_code`,\n          COUNT(*) AS `n`\n   FROM `transactions`\n   GROUP BY `investor_id`,\n            `transaction_type_code`)\nWHERE (`transaction_type_code` = 'SALE')\nORDER BY investor_id\n", "sql2": "SELECT investor_id,\n       COUNT(*)\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'SALE'\nGROUP BY investor_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/game_1/0009", "sql1": "\nSELECT gtype\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT gameid,\n                gtype,\n                COUNT(*) AS n\n         FROM video_games\n         GROUP BY gameid,\n                  gtype)\n      ORDER BY gtype DESC)\n   LIMIT 1)\n", "sql2": "SELECT gtype\nFROM Video_games\nGROUP BY gtype\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0033", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_\nFROM plays_games\nORDER BY count_distinct_stuid_\n", "sql2": "SELECT count(DISTINCT StuID)\nFROM Plays_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0013", "sql1": "\nSELECT fname\nFROM student\nWHERE (major = 600)\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM Student\nWHERE Major = 600", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0005", "sql1": "\nSELECT `gname`\nFROM `video_games`\nWHERE (`gtype` = 'Collectible card game')\nORDER BY gname\n", "sql2": "SELECT gname\nFROM Video_games\nWHERE gtype = 'Collectible card game'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0029", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM `student` AS `LHS`\n   INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\nWHERE (`sex` = 'F'\n       AND `sportname` = 'Football')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE sex = 'F' INTERSECT\n  SELECT StuID\n  FROM Sportsinfo WHERE sportname = 'Football'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0028", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM `student` AS `LHS`\n   INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\nWHERE (`onscholarship` = 'Y'\n       AND major = 600)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE major = 600 INTERSECT\n  SELECT StuID\n  FROM Sportsinfo WHERE onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0004", "sql1": "\nSELECT gname,\n       gtype\nFROM video_games\nORDER BY gname\n", "sql2": "SELECT gname,\n       gtype\nFROM Video_games\nORDER BY gname", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0012", "sql1": "\nSELECT stuid\nFROM student\nWHERE (advisor = 1121)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE Advisor = 1121", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0008", "sql1": "\nSELECT gtype,\n       n AS count___\nFROM\n  (SELECT gtype,\n          COUNT(*) AS n\n   FROM video_games\n   GROUP BY gtype)\nORDER BY gtype\n", "sql2": "SELECT gtype,\n       count(*)\nFROM Video_games\nGROUP BY gtype", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0015", "sql1": "\nSELECT advisor\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nWHERE (n >= 2)\nORDER BY advisor\n", "sql2": "SELECT advisor\nFROM Student\nGROUP BY advisor\nHAVING count(*) >= 2", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0003", "sql1": "\nSELECT gtype\nFROM video_games\nORDER BY gtype\n", "sql2": "SELECT DISTINCT gtype\nFROM Video_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0039", "sql1": "\nSELECT gname\nFROM\n  (SELECT gname,\n          SUM(hours_played) AS sumhours_played\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.gameid AS gameid,\n                LHS.gname AS gname,\n                LHS.gtype AS gtype,\n                RHS.stuid AS stuid,\n                RHS.hours_played AS hours_played\n         FROM video_games AS LHS\n         INNER JOIN plays_games AS RHS ON (LHS.gameid = RHS.gameid))\n      WHERE (hours_played >= 1000))\n   GROUP BY gname)\nORDER BY gname\n", "sql2": "SELECT gname\nFROM Plays_games AS T1\nJOIN Video_games AS T2 ON T1.gameid = T2.gameid\nGROUP BY T1.gameid\nHAVING sum(hours_played) >= 1000", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0019", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM `student` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `sportsinfo`\n      WHERE (`onscholarship` = 'Y')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY lname\n", "sql2": "SELECT T2.Lname\nFROM Sportsinfo AS T1\nJOIN Student AS T2 ON T1.StuID = T2.StuID\nWHERE T1.onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0035", "sql1": "\nSELECT DISTINCT stuid\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.sportname AS sportname,\n          LHS.hoursperweek AS hoursperweek,\n          LHS.gamesplayed AS gamesplayed,\n          LHS.onscholarship AS onscholarship,\n          RHS.gameid AS gameid,\n          RHS.hours_played AS hours_played\n   FROM sportsinfo AS LHS\n   INNER JOIN plays_games AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Sportsinfo INTERSECT\nSELECT StuID\nFROM Plays_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0034", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM plays_games AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Plays_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0022", "sql1": "\nSELECT sportname,\n       n AS count___\nFROM\n  (SELECT sportname,\n          COUNT(*) AS n\n   FROM sportsinfo\n   GROUP BY sportname)\nORDER BY sportname\n", "sql2": "SELECT sportname,\n       count(*)\nFROM Sportsinfo\nGROUP BY sportname", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0018", "sql1": "\nSELECT `stuid`\nFROM `sportsinfo`\nWHERE (`onscholarship` = 'Y')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Sportsinfo\nWHERE onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_gtype_\nFROM video_games\nORDER BY count_distinct_gtype_\n", "sql2": "SELECT count(DISTINCT gtype)\nFROM Video_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM video_games\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Video_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0017", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_\nFROM sportsinfo\nORDER BY count_distinct_stuid_\n", "sql2": "SELECT count(DISTINCT StuID)\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0040", "sql1": "\nSELECT `gname`\nFROM\n  (SELECT `LHS`.`gameid` AS `gameid`,\n          `LHS`.`gname` AS `gname`,\n          `LHS`.`gtype` AS `gtype`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`hours_played` AS `hours_played`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`gameid` AS `gameid`,\n             `LHS`.`gname` AS `gname`,\n             `LHS`.`gtype` AS `gtype`,\n             `RHS`.`stuid` AS `stuid`,\n             `RHS`.`hours_played` AS `hours_played`\n      FROM `video_games` AS `LHS`\n      INNER JOIN `plays_games` AS `RHS` ON (`LHS`.`gameid` = `RHS`.`gameid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`lname` = 'Smith'\n             OR `fname` = 'Linda')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY gname\n", "sql2": "SELECT Gname\nFROM Plays_games AS T1\nJOIN Video_games AS T2 ON T1.gameid = T2.gameid\nJOIN Student AS T3 ON T3.Stuid = T1.Stuid\nWHERE T3.Lname = 'Smith'\n  AND T3.Fname = 'Linda'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0037", "sql1": "\nSELECT stuid,\n       sumhours_played AS sum_hours_played_\nFROM\n  (SELECT stuid,\n          SUM(hours_played) AS sumhours_played\n   FROM plays_games\n   GROUP BY stuid)\nORDER BY stuid\n", "sql2": "SELECT Stuid,\n       sum(hours_played)\nFROM Plays_games\nGROUP BY Stuid", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0021", "sql1": "\nSELECT `sumgamesplayed` AS `sum_gamesplayed_`\nFROM\n  (SELECT `onscholarship`,\n          `sportname`,\n          SUM(`gamesplayed`) AS `sumgamesplayed`\n   FROM `sportsinfo`\n   GROUP BY `onscholarship`,\n            `sportname`)\nWHERE (`sportname` = 'Football'\n       AND `onscholarship` = 'Y')\nORDER BY sum_gamesplayed_\n", "sql2": "SELECT sum(gamesplayed)\nFROM Sportsinfo\nWHERE sportname = 'Football'\n  AND onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0020", "sql1": "\nSELECT sumgamesplayed AS sum_gamesplayed_\nFROM\n  (SELECT SUM(gamesplayed) AS sumgamesplayed\n   FROM sportsinfo)\nORDER BY sum_gamesplayed_\n", "sql2": "SELECT sum(gamesplayed)\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0036", "sql1": "\nSELECT gameid,\n       sumhours_played AS sum_hours_played_\nFROM\n  (SELECT gameid,\n          SUM(hours_played) AS sumhours_played\n   FROM plays_games\n   GROUP BY gameid)\nORDER BY gameid\n", "sql2": "SELECT gameid,\n       sum(hours_played)\nFROM Plays_games\nGROUP BY gameid", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0041", "sql1": "\nSELECT `lname`,\n       `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`sportname` AS `sportname`,\n          `LHS`.`hoursperweek` AS `hoursperweek`,\n          `LHS`.`gamesplayed` AS `gamesplayed`,\n          `LHS`.`onscholarship` AS `onscholarship`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT *\n      FROM `sportsinfo`\n      WHERE (`sportname` = 'Football'\n             OR `sportname` = 'Lacrosse')) AS LHS\n   LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY lname\n", "sql2": "SELECT T2.lname,\n       T2.fname\nFROM SportsInfo AS T1\nJOIN Student AS T2 ON T1.StuID = T2.StuID\nWHERE T1.SportName = 'Football'\n  OR T1.SportName = 'Lacrosse'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT sportname) OVER () AS count_distinct_sportname_\nFROM sportsinfo\nORDER BY count_distinct_sportname_\n", "sql2": "SELECT count(DISTINCT sportname)\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0027", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM sportsinfo AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0007", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `gtype`,\n          COUNT(DISTINCT `gtype`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `video_games`\n      WHERE (`gtype` = 'Massively multiplayer online game'))\n   GROUP BY gtype)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Video_games\nWHERE gtype = 'Massively multiplayer online game'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0011", "sql1": "\nSELECT `stuid`\nFROM `student`\nWHERE (`city_code` = 'CHI')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE city_code = 'CHI'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0010", "sql1": "\nSELECT gtype\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT gameid,\n                gtype,\n                COUNT(*) AS n\n         FROM video_games\n         GROUP BY gameid,\n                  gtype)\n      ORDER BY gameid)\n   LIMIT 1)\n", "sql2": "SELECT gtype\nFROM Video_games\nGROUP BY gtype\nORDER BY count(*)\nLIMIT 1", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0006", "sql1": "\nSELECT `gtype`\nFROM `video_games`\nWHERE (`gname` = 'Call of Destiny')\nORDER BY gtype\n", "sql2": "SELECT gtype\nFROM Video_games\nWHERE gname = 'Call of Destiny'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0026", "sql1": "\nSELECT `sportname`\nFROM\n  (SELECT `onscholarship`,\n          `sportname`,\n          COUNT(*) AS `n`\n   FROM `sportsinfo`\n   GROUP BY `onscholarship`,\n            `sportname`)\nWHERE (`onscholarship` = 'Y'\n       AND n > 1)\nORDER BY sportname\n", "sql2": "SELECT sportname\nFROM Sportsinfo\nWHERE onscholarship = 'Y'\nGROUP BY sportname\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/game_1/0030", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`sex` = 'M')) AS `LHS`\n   LEFT JOIN\n     (SELECT *\n      FROM `sportsinfo`\n      WHERE (`sportname` = 'Football')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE sex = 'M'\nEXCEPT\nSELECT StuID\nFROM Sportsinfo\nWHERE sportname = 'Football'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0009", "sql1": "\nSELECT `marketing_region_descriptrion`\nFROM `marketing_regions`\nWHERE (`marketing_region_name` = 'China')\nORDER BY marketing_region_descriptrion\n", "sql2": "SELECT Marketing_Region_Descriptrion\nFROM Marketing_Regions\nWHERE Marketing_Region_Name = 'China'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0025", "sql1": "\nSELECT product_name\nFROM\n  (SELECT product_name,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_name)\nWHERE (meanproduct_price < 1000000.0)\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM PRODUCTS\nGROUP BY Product_Name\nHAVING avg(Product_Price) < 1000000", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0013", "sql1": "\nSELECT `customer_phone`\nFROM `performers`\nWHERE (`customer_name` = 'Ashley')\nORDER BY customer_phone\n", "sql2": "SELECT Customer_Phone\nFROM PERFORMERS\nWHERE Customer_Name = 'Ashley'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0005", "sql1": "\nSELECT `customer_phone`,\n       `customer_email_address`\nFROM `customers`\nWHERE (`customer_name` = 'Harold')\nORDER BY customer_phone\n", "sql2": "SELECT Customer_Phone,\n       Customer_Email_Address\nFROM CUSTOMERS\nWHERE Customer_Name = 'Harold'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0028", "sql1": "\nSELECT actual_delivery_date\nFROM\n  (SELECT LHS.order_id AS order_id,\n          LHS.customer_id AS customer_id,\n          LHS.store_id AS store_id,\n          LHS.order_date AS order_date,\n          LHS.planned_delivery_date AS planned_delivery_date,\n          LHS.actual_delivery_date AS actual_delivery_date,\n          LHS.other_order_details AS other_order_details,\n          RHS.order_item_id AS order_item_id,\n          RHS.product_id AS product_id,\n          RHS.order_quantity AS order_quantity,\n          RHS.other_item_details AS other_item_details\n   FROM customer_orders AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM order_items\n      WHERE (order_quantity = 1)) AS RHS ON (LHS.order_id = RHS.order_id))\nORDER BY actual_delivery_date\n", "sql2": "SELECT T1.Actual_Delivery_Date\nFROM Customer_Orders AS T1\nJOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID\nWHERE T2.Order_Quantity = 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CUSTOMERS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0012", "sql1": "\nSELECT product_name\nFROM products\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nORDER BY Product_Price ASC", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0024", "sql1": "\nSELECT product_name,\n       meanproduct_price AS avg_product_price_\nFROM\n  (SELECT product_description,\n          product_name,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_description,\n            product_name)\nORDER BY product_name\n", "sql2": "SELECT Product_Name,\n       avg(Product_Price)\nFROM PRODUCTS\nGROUP BY Product_Name", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0008", "sql1": "\nSELECT DISTINCT payment_method_code\nFROM invoices\nORDER BY payment_method_code\n", "sql2": "SELECT DISTINCT payment_method_code\nFROM INVOICES", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0015", "sql1": "\nSELECT payment_method_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT invoice_id,\n                order_id,\n                payment_method_code,\n                product_id,\n                order_quantity,\n                other_item_details,\n                order_item_id,\n                COUNT(*) OVER () AS n\n         FROM invoices)\n      ORDER BY product_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT payment_method_code\nFROM INVOICES\nGROUP BY payment_method_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0003", "sql1": "\nSELECT planned_delivery_date,\n       actual_delivery_date\nFROM bookings\nORDER BY planned_delivery_date\n", "sql2": "SELECT Planned_Delivery_Date,\n       Actual_Delivery_Date\nFROM BOOKINGS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0019", "sql1": "\nSELECT service_type_description\nFROM\n  (SELECT LHS.service_type_code AS service_type_code,\n          LHS.parent_service_type_code AS parent_service_type_code,\n          LHS.service_type_description AS service_type_description,\n          RHS.service_id AS service_id,\n          RHS.workshop_group_id AS workshop_group_id,\n          RHS.product_description AS product_description,\n          RHS.product_name AS product_name,\n          RHS.product_price AS product_price,\n          RHS.other_product_service_details AS other_product_service_details\n   FROM ref_service_types AS LHS\n   INNER JOIN services AS RHS ON (LHS.service_type_code = RHS.service_type_code))\nWHERE (product_price >= 100.0)\nORDER BY service_type_description\n", "sql2": "SELECT T1.Service_Type_Description\nFROM Ref_Service_Types AS T1\nJOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code\nWHERE T2.Product_Price > 100", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0023", "sql1": "\nSELECT `store_phone`,\n       `store_email_address`\nFROM\n  (SELECT `LHS`.`workshop_group_id` AS `workshop_group_id`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`currency_code` AS `currency_code`,\n          `LHS`.`marketing_region_code` AS `marketing_region_code`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`store_phone` AS `store_phone`,\n          `LHS`.`store_email_address` AS `store_email_address`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`service_id` AS `service_id`,\n          `RHS`.`service_type_code` AS `service_type_code`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_price` AS `product_price`,\n          `RHS`.`other_product_service_details` AS `other_product_service_details`\n   FROM `drama_workshop_groups` AS `LHS`\n   LEFT JOIN `services` AS `RHS` ON (`LHS`.`workshop_group_id` = `RHS`.`workshop_group_id`))\nWHERE (`product_name` = 'film')\nORDER BY store_phone\n\n[   721.514][MainProcess][INFO] Statistics:\n[   721.515][MainProcess][INFO] \tAttempted programs: 367 (approx)\n[   721.515][MainProcess][INFO] \t\tRejected: 366 (approx)\n[   721.515][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   721.515][MainProcess][INFO] \t\tEmpty outputs: 362 (98.6%) (approx)\n[   721.515][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   721.515][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   721.515][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   721.515][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   721.515][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   721.515][MainProcess][INFO] \tTotal time spent in enumerator: 136.113220 (approx)\n[   721.516][MainProcess][INFO] \t\tEnumerated 2.696285 programs/s avg. (just enumeration time)\n[   721.516][MainProcess][INFO] \t\tEnumerated 0.510865 programs/s avg. (overall)\n[   721.516][MainProcess][INFO] \tTotal time spent in evaluation & testing: 95.013792 (approx)\n[   721.516][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 0.469003 (approx)\n[   721.516][MainProcess][INFO] Solution found: [left_join(input0, input1), filter(line0, \"product_name == 'film'\")]\n[   721.516][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 163, in endr\n    rlib.R_gc()\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT T1.Store_Phone,\n       T1.Store_Email_Address\nFROM Drama_Workshop_Groups AS T1\nJOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID\nWHERE T2.Product_Name = 'film'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0022", "sql1": "\nSELECT store_phone,\n       store_email_address\nFROM\n  (SELECT LHS.workshop_group_id AS workshop_group_id,\n          LHS.address_id AS address_id,\n          LHS.currency_code AS currency_code,\n          LHS.marketing_region_code AS marketing_region_code,\n          LHS.store_name AS store_name,\n          LHS.store_phone AS store_phone,\n          LHS.store_email_address AS store_email_address,\n          LHS.other_details AS other_details,\n          RHS.service_id AS service_id,\n          RHS.service_type_code AS service_type_code,\n          RHS.product_description AS product_description,\n          RHS.product_name AS product_name,\n          RHS.product_price AS product_price,\n          RHS.other_product_service_details AS other_product_service_details\n   FROM drama_workshop_groups AS LHS\n   INNER JOIN services AS RHS ON (LHS.workshop_group_id = RHS.workshop_group_id))\nORDER BY store_phone\n", "sql2": "SELECT T1.Store_Phone,\n       T1.Store_Email_Address\nFROM Drama_Workshop_Groups AS T1\nJOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0002", "sql1": "\nSELECT order_date\nFROM bookings\nORDER BY order_date\n", "sql2": "SELECT Order_Date\nFROM BOOKINGS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0014", "sql1": "\nSELECT payment_method_code,\n       n AS count___\nFROM\n  (SELECT payment_method_code,\n          COUNT(*) AS n\n   FROM invoices\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       count(*)\nFROM INVOICES\nGROUP BY payment_method_code", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM bookings\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM BOOKINGS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0040", "sql1": "\nSELECT product_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT invoice_id,\n                order_id,\n                payment_method_code,\n                product_id,\n                order_quantity,\n                other_item_details,\n                order_item_id,\n                COUNT(*) OVER () AS n\n         FROM invoices)\n      ORDER BY n)\n   LIMIT 1)\n", "sql2": "SELECT Product_ID\nFROM INVOICES\nGROUP BY Product_ID\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0020", "sql1": "\nSELECT service_type_description,\n       service_type_code,\n       n AS count___\nFROM\n  (SELECT service_type_code,\n          service_type_description,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.service_id AS service_id,\n             LHS.service_type_code AS service_type_code,\n             LHS.workshop_group_id AS workshop_group_id,\n             LHS.product_description AS product_description,\n             LHS.product_name AS product_name,\n             LHS.product_price AS product_price,\n             LHS.other_product_service_details AS other_product_service_details,\n             RHS.parent_service_type_code AS parent_service_type_code,\n             RHS.service_type_description AS service_type_description\n      FROM services AS LHS\n      INNER JOIN ref_service_types AS RHS ON (LHS.service_type_code = RHS.service_type_code))\n   GROUP BY service_type_code,\n            service_type_description)\nORDER BY service_type_description\n", "sql2": "SELECT T1.Service_Type_Description,\n       T2.Service_Type_Code,\n       COUNT(*)\nFROM Ref_Service_Types AS T1\nJOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code\nGROUP BY T2.Service_Type_Code", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0036", "sql1": "\nSELECT status_code\nFROM\n  (SELECT LHS.planned_delivery_date AS planned_delivery_date,\n          LHS.n AS n,\n          RHS.booking_id AS booking_id,\n          RHS.customer_id AS customer_id,\n          RHS.workshop_group_id AS workshop_group_id,\n          RHS.status_code AS status_code,\n          RHS.order_date AS order_date,\n          RHS.actual_delivery_date AS actual_delivery_date,\n          RHS.other_order_details AS other_order_details\n   FROM\n     (SELECT planned_delivery_date,\n             COUNT(*) AS n\n      FROM bookings\n      GROUP BY planned_delivery_date) AS LHS\n   INNER JOIN bookings AS RHS ON (LHS.n = RHS.store_id\n                                     AND LHS.planned_delivery_date = RHS.planned_delivery_date))\nORDER BY status_code\n", "sql2": "SELECT Status_Code\nFROM BOOKINGS\nGROUP BY Status_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0011", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM products\n      ORDER BY product_price DESC)\n   LIMIT 1)\n", "sql2": "SELECT Product_Name\nFROM PRODUCTS\nORDER BY Product_Price DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0010", "sql1": "\nSELECT DISTINCT product_name\nFROM\n  (SELECT product_id,\n          product_name,\n          product_price,\n          product_description,\n          other_product_service_details,\n          AVG(product_price) OVER () AS meanproduct_price\n   FROM products)\nWHERE (meanproduct_price <= product_price)\nORDER BY product_name\n", "sql2": "SELECT DISTINCT Product_Name\nFROM PRODUCTS\nWHERE Product_Price >\n    (SELECT avg(Product_Price)\n     FROM PRODUCTS)", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0006", "sql1": "\nSELECT store_name\nFROM drama_workshop_groups\nORDER BY store_name\n", "sql2": "SELECT Store_Name\nFROM Drama_Workshop_Groups", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/cre_Drama_Workshop_Groups/0030", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT currency_code) OVER () AS count_distinct_currency_code_\nFROM drama_workshop_groups\nORDER BY count_distinct_currency_code_\n", "sql2": "SELECT count(DISTINCT Currency_Code)\nFROM Drama_Workshop_Groups", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/election/0009", "sql1": "\nSELECT n_distinct AS count_distinct_governor_\nFROM\n  (SELECT COUNT(DISTINCT governor) AS n_distinct\n   FROM party)\nORDER BY count_distinct_governor_\n", "sql2": "SELECT count(DISTINCT Governor)\nFROM party", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0025", "sql1": "\nSELECT county_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM county\n      ORDER BY population DESC)\n   LIMIT 1)\n", "sql2": "SELECT County_name\nFROM county\nORDER BY Population DESC\nLIMIT 1", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0013", "sql1": "\nSELECT delegate,\n       county_name\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          RHS.election_id AS election_id,\n          RHS.counties_represented AS counties_represented,\n          RHS.delegate AS delegate,\n          RHS.party AS party,\n          RHS.first_elected AS first_elected,\n          RHS.committee AS committee\n   FROM county AS LHS\n   INNER JOIN election AS RHS ON (LHS.county_id = RHS.district))\nORDER BY delegate\n", "sql2": "SELECT T2.Delegate,\n       T1.County_name\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0005", "sql1": "\nSELECT DISTINCT district\nFROM election\nORDER BY district\n", "sql2": "SELECT DISTINCT District\nFROM election", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0028", "sql1": "\nSELECT DISTINCT party\nFROM\n  (SELECT party_id,\n          YEAR,\n          party,\n          governor,\n          lieutenant_governor,\n          comptroller,\n          governor AS attorney_general,\n          us_senate,\n          party_id_other,\n          year_other,\n          governor_other,\n          lieutenant_governor_other,\n          comptroller_other,\n          us_senate_other\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.year AS YEAR,\n             LHS.party AS party,\n             LHS.governor AS governor,\n             LHS.lieutenant_governor AS lieutenant_governor,\n             LHS.comptroller AS comptroller,\n             LHS.attorney_general AS attorney_general,\n             LHS.us_senate AS us_senate,\n             RHS.party_id AS party_id_other,\n             RHS.year AS year_other,\n             RHS.governor AS governor_other,\n             RHS.lieutenant_governor AS lieutenant_governor_other,\n             RHS.comptroller AS comptroller_other,\n             RHS.us_senate AS us_senate_other\n      FROM party AS LHS\n      INNER JOIN party AS RHS ON (LHS.party = RHS.party\n                                     AND LHS.governor = RHS.attorney_general)))\nORDER BY party\n", "sql2": "SELECT Party\nFROM party\nGROUP BY Party\nHAVING COUNT(*) >= 2", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0012", "sql1": "\nSELECT election_id,\n       counties_represented,\n       district,\n       delegate,\n       party,\n       first_elected,\n       committee\nFROM election\nORDER BY election_id\n", "sql2": "SELECT *\nFROM election", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0024", "sql1": "\nSELECT county_name\nFROM county\nORDER BY county_name\n", "sql2": "SELECT County_name\nFROM county\nORDER BY County_name DESC", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0008", "sql1": "\nSELECT delegate,\n       committee\nFROM election\nORDER BY delegate\n", "sql2": "SELECT Delegate,\n       Committee\nFROM election", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0015", "sql1": "\nSELECT DISTINCT n AS count_distinct_t2_delegate_\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          LHS.election_id AS election_id,\n          LHS.counties_represented AS counties_represented,\n          LHS.district AS district,\n          LHS.delegate AS delegate,\n          LHS.party AS party,\n          LHS.first_elected AS first_elected,\n          LHS.committee AS committee,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.county_id AS county_id,\n             LHS.county_name AS county_name,\n             LHS.population AS population,\n             LHS.zip_code AS zip_code,\n             RHS.election_id AS election_id,\n             RHS.counties_represented AS counties_represented,\n             RHS.district AS district,\n             RHS.delegate AS delegate,\n             RHS.party AS party,\n             RHS.first_elected AS first_elected,\n             RHS.committee AS committee\n      FROM county AS LHS\n      CROSS JOIN election AS RHS) AS LHS\n   CROSS JOIN\n     (SELECT COUNT(*) AS n\n      FROM county\n      WHERE (population != 50000.0)) AS RHS)\nORDER BY count_distinct_t2_delegate_\n", "sql2": "SELECT count(DISTINCT T2.Delegate)\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nWHERE T1.Population > 50000", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0003", "sql1": "\nSELECT meanpopulation AS avg_population_\nFROM\n  (SELECT AVG(population) AS meanpopulation\n   FROM county)\nORDER BY avg_population_\n", "sql2": "SELECT avg(Population)\nFROM county", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0023", "sql1": "\nSELECT county_name\nFROM county\nORDER BY county_name\n", "sql2": "SELECT County_name\nFROM county\nORDER BY Population ASC", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0034", "sql1": "\nSELECT `committee`\nFROM\n  (SELECT `election_id`,\n          `counties_represented`,\n          `district`,\n          `delegate`,\n          `party`,\n          `first_elected`,\n          `committee`,\n          `party_other`,\n          `governor`,\n          `lieutenant_governor`,\n          `comptroller`,\n          `attorney_general`,\n          `us_senate`,\n          `election_id` AS `party_id`\n   FROM\n     (SELECT `LHS`.`election_id` AS `election_id`,\n             `LHS`.`counties_represented` AS `counties_represented`,\n             `LHS`.`district` AS `district`,\n             `LHS`.`delegate` AS `delegate`,\n             `LHS`.`party` AS `party`,\n             `LHS`.`first_elected` AS `first_elected`,\n             `LHS`.`committee` AS `committee`,\n             `RHS`.`party` AS `party_other`,\n             `RHS`.`governor` AS `governor`,\n             `RHS`.`lieutenant_governor` AS `lieutenant_governor`,\n             `RHS`.`comptroller` AS `comptroller`,\n             `RHS`.`attorney_general` AS `attorney_general`,\n             `RHS`.`us_senate` AS `us_senate`\n      FROM `election` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `party`\n         WHERE (`party` = 'Democratic'\n                OR `party` = 'Liberal')) AS RHS ON (LHS.election_id = RHS.party_id\n                                                    AND LHS.first_elected = RHS.year)))\nORDER BY committee\n", "sql2": "SELECT T1.Committee\nFROM election AS T1\nJOIN party AS T2 ON T1.Party = T2.Party_ID\nWHERE T2.Party = 'Democratic' INTERSECT\n  SELECT T1.Committee\n  FROM election AS T1\n  JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Liberal'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0002", "sql1": "\nSELECT county_name,\n       population\nFROM county\nORDER BY county_name\n", "sql2": "SELECT County_name,\n       Population\nFROM county", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0014", "sql1": "\nSELECT DISTINCT delegate\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          RHS.election_id AS election_id,\n          RHS.counties_represented AS counties_represented,\n          RHS.district AS district,\n          RHS.delegate AS delegate,\n          RHS.party AS party,\n          RHS.first_elected AS first_elected,\n          RHS.committee AS committee\n   FROM county AS LHS\n   CROSS JOIN election AS RHS)\nWHERE (population <= 100000.0)\nORDER BY delegate\n", "sql2": "SELECT T2.Delegate\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nWHERE T1.Population < 100000", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM county\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM county", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0021", "sql1": "\nSELECT county_name,\n       n AS count___\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          RHS.n AS n\n   FROM county AS LHS\n   INNER JOIN\n     (SELECT district,\n             COUNT(*) AS n\n      FROM election\n      GROUP BY district) AS RHS ON (LHS.county_id = RHS.district))\nORDER BY county_name\n[   609.520][MainProcess][INFO] Statistics:\n[   609.520][MainProcess][INFO] \tAttempted programs: 557 (approx)\n[   609.520][MainProcess][INFO] \t\tRejected: 556 (approx)\n[   609.520][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   609.520][MainProcess][INFO] \t\tEmpty outputs: 409 (73.4%) (approx)\n[   609.520][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   609.520][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   609.521][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   609.521][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   609.521][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   609.521][MainProcess][INFO] \tTotal time spent in enumerator: 211.800248 (approx)\n[   609.521][MainProcess][INFO] \t\tEnumerated 2.629836 programs/s avg. (just enumeration time)\n[   609.521][MainProcess][INFO] \t\tEnumerated 0.918521 programs/s avg. (overall)\n[   609.521][MainProcess][INFO] \tTotal time spent in evaluation & testing: 340.240067 (approx)\n[   609.521][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 14.610716 (approx)\n[   609.521][MainProcess][INFO] Solution found: [summarise(input1, 'n = n()', \"'district'\"), inner_join(input0, line0, \"'county_id' = 'district'\")]\n[   609.521][MainProcess][INFO] Solution size: 2\n", "sql2": "SELECT T1.County_name,\n       COUNT(*)\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nGROUP BY T1.County_id", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0016", "sql1": "\nSELECT `county_name`\nFROM\n  (SELECT `LHS`.`county_id` AS `county_id`,\n          `LHS`.`county_name` AS `county_name`,\n          `LHS`.`population` AS `population`,\n          `LHS`.`zip_code` AS `zip_code`,\n          `RHS`.`election_id` AS `election_id`,\n          `RHS`.`counties_represented` AS `counties_represented`,\n          `RHS`.`delegate` AS `delegate`,\n          `RHS`.`party` AS `party`,\n          `RHS`.`first_elected` AS `first_elected`,\n          `RHS`.`committee` AS `committee`\n   FROM `county` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `election`\n      WHERE (`committee` = 'Appropriations')) AS RHS ON (LHS.county_id = RHS.district))\nORDER BY county_name\n", "sql2": "SELECT T1.County_name\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nWHERE T2.Committee = 'Appropriations'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0007", "sql1": "\nSELECT delegate\nFROM election\nWHERE (district = 1)\nORDER BY delegate\n", "sql2": "SELECT Delegate\nFROM election\nWHERE District = 1", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0011", "sql1": "\nSELECT DISTINCT `year`\nFROM `party`\nWHERE (`governor` = 'Eliot Spitzer')\nORDER BY YEAR\n", "sql2": "SELECT DISTINCT YEAR\nFROM party\nWHERE Governor = 'Eliot Spitzer'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0010", "sql1": "\nSELECT `lieutenant_governor`,\n       `comptroller`\nFROM `party`\nWHERE (`party` = 'Democratic')\nORDER BY lieutenant_governor\n", "sql2": "SELECT Lieutenant_Governor,\n       Comptroller\nFROM party\nWHERE Party = 'Democratic'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0006", "sql1": "\nSELECT `zip_code`\nFROM `county`\nWHERE (`county_name` = 'Howard')\nORDER BY zip_code\n", "sql2": "SELECT Zip_code\nFROM county\nWHERE County_name = 'Howard'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0026", "sql1": "\nSELECT county_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM county\n      ORDER BY population)\n   LIMIT 3)\n", "sql2": "SELECT County_name\nFROM county\nORDER BY Population ASC\nLIMIT 3", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/election/0030", "sql1": "\nSELECT DISTINCT governor\nFROM\n  (SELECT party_id,\n          YEAR,\n          party,\n          governor,\n          lieutenant_governor,\n          comptroller,\n          governor AS attorney_general,\n          us_senate,\n          party_id_other,\n          year_other,\n          governor_other,\n          lieutenant_governor_other,\n          comptroller_other,\n          us_senate_other\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.year AS YEAR,\n             LHS.party AS party,\n             LHS.governor AS governor,\n             LHS.lieutenant_governor AS lieutenant_governor,\n             LHS.comptroller AS comptroller,\n             LHS.attorney_general AS attorney_general,\n             LHS.us_senate AS us_senate,\n             RHS.party_id AS party_id_other,\n             RHS.year AS year_other,\n             RHS.governor AS governor_other,\n             RHS.lieutenant_governor AS lieutenant_governor_other,\n             RHS.comptroller AS comptroller_other,\n             RHS.us_senate AS us_senate_other\n      FROM party AS LHS\n      INNER JOIN party AS RHS ON (LHS.party = RHS.party\n                                     AND LHS.governor = RHS.attorney_general)))\nORDER BY governor\n", "sql2": "SELECT Governor\nFROM party\nGROUP BY Governor\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0009", "sql1": "\nSELECT publication_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM publication\n      ORDER BY price)\n   LIMIT 3)\n", "sql2": "SELECT Publication_Date\nFROM publication\nORDER BY Price ASC\nLIMIT 3", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0013", "sql1": "\nSELECT publisher\nFROM\n  (SELECT publisher,\n          COUNT(*) AS n\n   FROM publication\n   GROUP BY publisher)\nWHERE (n > 1)\nORDER BY publisher\n", "sql2": "SELECT Publisher\nFROM publication\nGROUP BY Publisher\nHAVING COUNT(*) > 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0005", "sql1": "\nSELECT title,\n       issues\nFROM book\nORDER BY title\n", "sql2": "SELECT Title,\n       Issues\nFROM book", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0004", "sql1": "\nSELECT `title`\nFROM `book`\nWHERE (`writer` != 'Elaine Lee')\nORDER BY title\n", "sql2": "SELECT Title\nFROM book\nWHERE Writer != 'Elaine Lee'", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0012", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.title AS title,\n          RHS.issues AS issues,\n          RHS.writer AS writer\n   FROM publication AS LHS\n   INNER JOIN book AS RHS ON (LHS.book_id = RHS.book_id))\nORDER BY title\n", "sql2": "SELECT T1.Title\nFROM book AS T1\nJOIN publication AS T2 ON T1.Book_ID = T2.Book_ID\nORDER BY T2.Price DESC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0008", "sql1": "\nSELECT publisher\nFROM\n  (SELECT publication_id,\n          publication_id AS book_id,\n          publisher,\n          publication_date,\n          price,\n          publisher_other,\n          publication_date_other,\n          price_other\n   FROM\n     (SELECT LHS.publication_id AS publication_id,\n             LHS.book_id AS book_id,\n             LHS.publisher AS publisher,\n             LHS.publication_date AS publication_date,\n             LHS.price AS price,\n             RHS.publisher AS publisher_other,\n             RHS.publication_date AS publication_date_other,\n             RHS.price AS price_other\n      FROM publication AS LHS\n      INNER JOIN publication AS RHS ON (LHS.publication_id = RHS.book_id\n                                           AND LHS.book_id = RHS.publication_id)))\nORDER BY publisher\n", "sql2": "SELECT Publisher\nFROM publication\nORDER BY Price DESC\nLIMIT 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0015", "sql1": "\nSELECT DISTINCT publication_date\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          LHS.n AS n,\n          RHS.publication_id AS publication_id_other,\n          RHS.publisher AS publisher_other,\n          RHS.price AS price_other\n   FROM\n     (SELECT publication_id,\n             book_id,\n             publisher,\n             publication_date,\n             price,\n             COUNT(*) OVER () AS n\n      FROM publication) AS LHS\n   INNER JOIN publication AS RHS ON (LHS.n = RHS.book_id\n                                        AND LHS.publication_date = RHS.publication_date))\nORDER BY publication_date\n", "sql2": "SELECT Publication_Date\nFROM publication\nGROUP BY Publication_Date\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0003", "sql1": "\nSELECT title\nFROM book\nORDER BY title\n", "sql2": "SELECT Title\nFROM book\nORDER BY Issues ASC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0019", "sql1": "\nSELECT n_distinct AS count__distinct_publication_date_\nFROM\n  (SELECT COUNT(DISTINCT publication_date) AS n_distinct\n   FROM publication)\nORDER BY count__distinct_publication_date_\n", "sql2": "SELECT COUNT (DISTINCT Publication_Date)\nFROM publication", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0018", "sql1": "\nSELECT publisher\nFROM publication\nWHERE (price >= 10000000.0\n       AND price != 5000000.0)\nORDER BY publisher\n", "sql2": "SELECT Publisher\nFROM publication\nWHERE Price > 10000000 INTERSECT\n  SELECT Publisher\n  FROM publication WHERE Price < 5000000", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0002", "sql1": "\nSELECT writer\nFROM book\nORDER BY writer\n", "sql2": "SELECT Writer\nFROM book\nORDER BY Writer ASC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0014", "sql1": "\nSELECT publisher,\n       n AS count___\nFROM\n  (SELECT publisher,\n          COUNT(*) AS n\n   FROM publication\n   GROUP BY publisher)\nORDER BY publisher\n", "sql2": "SELECT Publisher,\n       COUNT(*)\nFROM publication\nGROUP BY Publisher", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM book\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM book", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0017", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM book AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM publication AS RHS\n        WHERE (LHS.book_id = RHS.book_id) ))\nORDER BY title\n", "sql2": "SELECT Title\nFROM book\nWHERE Book_ID NOT IN\n    (SELECT Book_ID\n     FROM publication)", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0020", "sql1": "\nSELECT `price`\nFROM `publication`\nWHERE (`publisher` = 'Wiley')\nORDER BY price\n", "sql2": "SELECT Price\nFROM publication\nWHERE Publisher = 'Person'\n  OR Publisher = 'Wiley'", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0016", "sql1": "\nSELECT writer\nFROM\n  (SELECT writer,\n          COUNT(*) AS n\n   FROM book\n   GROUP BY writer)\nWHERE (n != 1)\nORDER BY writer\n", "sql2": "SELECT Writer\nFROM book\nGROUP BY Writer\nHAVING COUNT(*) > 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0007", "sql1": "\nSELECT publisher\nFROM publication\nWHERE (price >= 5000000.0)\nORDER BY publisher\n", "sql2": "SELECT DISTINCT Publisher\nFROM publication\nWHERE Price > 5000000", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0011", "sql1": "\nSELECT writer\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.title AS title,\n          RHS.issues AS issues,\n          RHS.writer AS writer\n   FROM\n     (SELECT *\n      FROM publication\n      WHERE (price >= 4000000.0)) AS LHS\n   LEFT JOIN book AS RHS ON (LHS.book_id = RHS.book_id))\nORDER BY writer\n", "sql2": "SELECT T1.Writer\nFROM book AS T1\nJOIN publication AS T2 ON T1.Book_ID = T2.Book_ID\nWHERE T2.Price > 4000000", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0010", "sql1": "\nSELECT title,\n       publication_date\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.title AS title,\n          RHS.issues AS issues,\n          RHS.writer AS writer\n   FROM publication AS LHS\n   INNER JOIN book AS RHS ON (LHS.book_id = RHS.book_id))\nORDER BY title\n", "sql2": "SELECT T1.Title,\n       T2.Publication_Date\nFROM book AS T1\nJOIN publication AS T2 ON T1.Book_ID = T2.Book_ID", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/book_2/0006", "sql1": "\nSELECT publication_date\nFROM publication\nORDER BY publication_date\n", "sql2": "SELECT Publication_Date\nFROM publication\nORDER BY Price DESC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0009", "sql1": "\nSELECT song\nFROM volume\nWHERE (weeks_on_top != 1.0)\nORDER BY song\n", "sql2": "SELECT Song\nFROM volume\nWHERE Weeks_on_Top > 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0025", "sql1": "\nSELECT DISTINCT famous_title\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM artist AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nWHERE (weeks_on_top > 2.0)\nORDER BY famous_title\n", "sql2": "SELECT T1.Famous_Title\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T2.Weeks_on_Top > 2 INTERSECT\n  SELECT T1.Famous_Title\n  FROM artist AS T1\n  JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0013", "sql1": "\nSELECT `song`\nFROM\n  (SELECT `LHS`.`volume_id` AS `volume_id`,\n          `LHS`.`volume_issue` AS `volume_issue`,\n          `LHS`.`issue_date` AS `issue_date`,\n          `LHS`.`weeks_on_top` AS `weeks_on_top`,\n          `LHS`.`song` AS `song`,\n          `LHS`.`artist_id` AS `artist_id`,\n          `RHS`.`music_festival` AS `music_festival`,\n          `RHS`.`date_of_ceremony` AS `date_of_ceremony`,\n          `RHS`.`category` AS `category`,\n          `RHS`.`volume` AS `volume`,\n          `RHS`.`result` AS `result`\n   FROM `volume` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `music_festival`\n      WHERE (`result` = 'Nominated')) AS RHS ON (LHS.volume_id = RHS.id))\nORDER BY song\n", "sql2": "SELECT T2.Song\nFROM music_festival AS T1\nJOIN volume AS T2 ON T1.Volume = T2.Volume_ID\nWHERE T1.Result = 'Nominated'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0005", "sql1": "\nSELECT DISTINCT famous_release_date\nFROM artist\nORDER BY famous_release_date\n", "sql2": "SELECT distinct(Famous_Release_date)\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0029", "sql1": "\nSELECT issue_date\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM artist AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nWHERE (age <= 23)\nORDER BY issue_date\n", "sql2": "SELECT Issue_Date\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.age <= 23", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0028", "sql1": "\nSELECT RESULT,\n       n AS count___\nFROM\n  (SELECT date_of_ceremony,\n          RESULT,\n          COUNT(*) AS n\n   FROM music_festival\n   GROUP BY date_of_ceremony,\n            RESULT)\nORDER BY RESULT\n", "sql2": "SELECT RESULT,\n       COUNT(*)\nFROM music_festival\nGROUP BY RESULT\nORDER BY COUNT(*) DESC", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0004", "sql1": "\nSELECT `famous_title`\nFROM `artist`\nWHERE (`artist` = 'Triumfall')\nORDER BY famous_title\n", "sql2": "SELECT Famous_Title\nFROM artist\nWHERE Artist = 'Triumfall'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0012", "sql1": "\nSELECT date_of_ceremony\nFROM\n  (SELECT volume_id,\n          volume_issue,\n          issue_date,\n          weeks_on_top,\n          song,\n          artist_id,\n          music_festival,\n          date_of_ceremony,\n          category,\n          RESULT,\n          volume_id AS volume\n   FROM\n     (SELECT LHS.volume_id AS volume_id,\n             LHS.volume_issue AS volume_issue,\n             LHS.issue_date AS issue_date,\n             LHS.weeks_on_top AS weeks_on_top,\n             LHS.song AS song,\n             LHS.artist_id AS artist_id,\n             RHS.music_festival AS music_festival,\n             RHS.date_of_ceremony AS date_of_ceremony,\n             RHS.category AS category,\n             RHS.result AS RESULT\n      FROM volume AS LHS\n      INNER JOIN music_festival AS RHS ON (LHS.volume_id = RHS.volume\n                                              AND LHS.artist_id = RHS.id)))\nORDER BY date_of_ceremony\n", "sql2": "SELECT T1.Date_of_ceremony\nFROM music_festival AS T1\nJOIN volume AS T2 ON T1.Volume = T2.Volume_ID\nWHERE T2.Weeks_on_Top > 2", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0024", "sql1": "\nSELECT famous_title\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM volume AS RHS\n        WHERE (LHS.artist_id = RHS.artist_id) ))\nORDER BY famous_title\n", "sql2": "SELECT Famous_Title\nFROM artist\nWHERE Artist_ID NOT IN\n    (SELECT Artist_ID\n     FROM volume)", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0008", "sql1": "\nSELECT DISTINCT maxweeks_on_top AS max_weeks_on_top_,\n                MIN(weeks_on_top) OVER () AS min_weeks_on_top_\nFROM\n  (SELECT volume_id,\n          volume_issue,\n          issue_date,\n          weeks_on_top,\n          song,\n          artist_id,\n          MAX(weeks_on_top) OVER () AS maxweeks_on_top\n   FROM volume)\nORDER BY max_weeks_on_top_\n", "sql2": "SELECT max(Weeks_on_Top),\n       min(Weeks_on_Top)\nFROM volume", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0015", "sql1": "\nSELECT song\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM artist AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nWHERE (age >= 32)\nORDER BY song\n", "sql2": "SELECT T2.Song\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.age >= 32", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0003", "sql1": "\nSELECT meanage AS avg_age_\nFROM\n  (SELECT AVG(age) AS meanage\n   FROM artist)\nORDER BY avg_age_\n", "sql2": "SELECT avg(Age)\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0019", "sql1": "\nSELECT famous_release_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM artist\n      ORDER BY artist_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT Famous_Release_date\nFROM artist\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0023", "sql1": "\nSELECT song\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM volume\n      ORDER BY artist_id)\n   LIMIT 1)\n", "sql2": "SELECT Song\nFROM volume\nORDER BY Weeks_on_Top DESC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0022", "sql1": "\nSELECT DISTINCT category\nFROM\n  (SELECT category,\n          RESULT,\n          COUNT(*) AS n\n   FROM music_festival\n   GROUP BY category,\n            RESULT)\nWHERE (n > 1)\nORDER BY category\n", "sql2": "SELECT Category\nFROM music_festival\nGROUP BY Category\nHAVING COUNT(*) > 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0018", "sql1": "\nSELECT famous_title,\n       age\nFROM artist\nORDER BY famous_title\n", "sql2": "SELECT Famous_Title,\n       Age\nFROM artist\nORDER BY Age DESC", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0002", "sql1": "\nSELECT age\nFROM artist\nORDER BY age\n", "sql2": "SELECT Age\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0014", "sql1": "\nSELECT `issue_date`\nFROM\n  (SELECT `LHS`.`artist_id` AS `artist_id`,\n          `LHS`.`artist` AS `artist`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`famous_title` AS `famous_title`,\n          `LHS`.`famous_release_date` AS `famous_release_date`,\n          `RHS`.`volume_id` AS `volume_id`,\n          `RHS`.`volume_issue` AS `volume_issue`,\n          `RHS`.`issue_date` AS `issue_date`,\n          `RHS`.`weeks_on_top` AS `weeks_on_top`,\n          `RHS`.`song` AS `song`\n   FROM `artist` AS `LHS`\n   INNER JOIN `volume` AS `RHS` ON (`LHS`.`artist_id` = `RHS`.`artist_id`))\nWHERE (`artist` = 'Gorgoroth')\nORDER BY issue_date\n", "sql2": "SELECT T2.Issue_Date\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.Artist = 'Gorgoroth'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM artist\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0021", "sql1": "\nSELECT RESULT\nFROM\n  (SELECT RESULT,\n          volume,\n          volume AS n,\n          result_other\n   FROM\n     (SELECT LHS.result AS RESULT,\n             LHS.volume AS volume,\n             LHS.n AS n,\n             RHS.result AS result_other\n      FROM\n        (SELECT RESULT,\n                volume,\n                COUNT(*) AS n\n         FROM music_festival\n         GROUP BY RESULT,\n                  volume) AS LHS\n      INNER JOIN\n        (SELECT RESULT,\n                volume,\n                COUNT(*) AS n\n         FROM music_festival\n         GROUP BY RESULT,\n                  volume) AS RHS ON (LHS.volume = RHS.n\n                                     AND LHS.n = RHS.volume)))\nORDER BY RESULT\n", "sql2": "SELECT RESULT\nFROM music_festival\nGROUP BY RESULT\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0020", "sql1": "\nSELECT category,\n       n AS count___\nFROM\n  (SELECT category,\n          date_of_ceremony,\n          COUNT(*) AS n\n   FROM music_festival\n   GROUP BY category,\n            date_of_ceremony)\nORDER BY category\n", "sql2": "SELECT Category,\n       COUNT(*)\nFROM music_festival\nGROUP BY Category", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0016", "sql1": "\nSELECT weeks_on_top AS avg_t2_weeks_on_top_\nFROM\n  (SELECT LHS.age AS age,\n          LHS.artist_id AS artist_id,\n          LHS.meanage AS meanage,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM\n     (SELECT *\n      FROM\n        (SELECT age,\n                artist_id,\n                AVG(age) AS meanage\n         FROM artist\n         GROUP BY age,\n                  artist_id)\n      WHERE (age < 25\n             AND meanage >= age)) AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nORDER BY avg_t2_weeks_on_top_\n", "sql2": "SELECT avg(T2.Weeks_on_Top)\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.age <= 25", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0027", "sql1": "\nSELECT issue_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM volume\n      ORDER BY weeks_on_top)\n   LIMIT 1)\n", "sql2": "SELECT Issue_Date\nFROM volume\nORDER BY Weeks_on_Top ASC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0007", "sql1": "\nSELECT `category`\nFROM `music_festival`\nWHERE (`result` = 'Awarded')\nORDER BY category\n", "sql2": "SELECT Category\nFROM music_festival\nWHERE RESULT = 'Awarded'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0011", "sql1": "\nSELECT n_distinct AS count_distinct_artist_id_\nFROM\n  (SELECT COUNT(DISTINCT artist_id) AS n_distinct\n   FROM volume)\nORDER BY count_distinct_artist_id_\n", "sql2": "SELECT COUNT(DISTINCT Artist_ID)\nFROM volume", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0010", "sql1": "\nSELECT song\nFROM volume\nORDER BY song\n", "sql2": "SELECT Song\nFROM volume\nORDER BY Song", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0006", "sql1": "\nSELECT date_of_ceremony,\n       RESULT\nFROM music_festival\nORDER BY date_of_ceremony\n", "sql2": "SELECT Date_of_ceremony,\n       RESULT\nFROM music_festival", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/music_4/0026", "sql1": "\nSELECT `date_of_ceremony`\nFROM `music_festival`\nWHERE (`category` = 'Best Song'\n       AND `result` = 'Awarded')\nORDER BY date_of_ceremony\n", "sql2": "SELECT Date_of_ceremony\nFROM music_festival\nWHERE Category = 'Best Song'\n  AND RESULT = 'Awarded'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0025", "sql1": "\nSELECT name,\n       balance\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.custid AS custid,\n                LHS.balance AS balance,\n                RHS.name AS name\n         FROM savings AS LHS\n         INNER JOIN accounts AS RHS ON (LHS.custid = RHS.custid))\n      ORDER BY custid)\n   LIMIT 3)\n", "sql2": "SELECT T1.name,\n       T2.balance\nFROM accounts AS T1\nJOIN savings AS T2 ON T1.custid = T2.custid\nORDER BY T2.balance DESC\nLIMIT 3", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0005", "sql1": "\nSELECT COUNT(*) OVER () AS count___\nFROM\n  (SELECT AVG(balance) AS meanbalance\n   FROM savings)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM savings\nWHERE balance >\n    (SELECT avg(balance)\n     FROM savings)", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0004", "sql1": "\nSELECT DISTINCT AVG(balance) OVER () AS avg_balance_\nFROM checking\nORDER BY avg_balance_\n", "sql2": "SELECT avg(balance)\nFROM checking", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0008", "sql1": "\nSELECT `balance` AS `balance___1`,\n       `balance_other` AS `balance___2`\nFROM\n  (SELECT `LHS`.`custid` AS `custid`,\n          `LHS`.`balance` AS `balance`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`balance` AS `balance_other`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`custid` AS `custid`,\n                `LHS`.`balance` AS `balance`,\n                `RHS`.`name` AS `name`\n         FROM `checking` AS `LHS`\n         LEFT JOIN `accounts` AS `RHS` ON (`LHS`.`custid` = `RHS`.`custid`))\n      WHERE (`name` = 'Brown')) AS LHS\n   INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid))\nORDER BY balance___1\n", "sql2": "SELECT T2.balance,\n       T3.balance\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nJOIN savings AS T3 ON T1.custid = T3.custid\nWHERE T1.name = 'Brown'", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0015", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          LHS.balance AS balance,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.custid AS custid,\n             LHS.name AS name,\n             RHS.balance AS balance\n      FROM accounts AS LHS\n      INNER JOIN checking AS RHS ON (LHS.custid = RHS.custid)) AS LHS\n   INNER JOIN\n     (SELECT name,\n             COUNT(*) AS n\n      FROM accounts\n      GROUP BY name) AS RHS ON (LHS.name = RHS.name))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nGROUP BY T1.name", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0003", "sql1": "\nSELECT DISTINCT SUM(balance) OVER () AS sum_balance_\nFROM checking\nORDER BY sum_balance_\n", "sql2": "SELECT sum(balance)\nFROM checking", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM accounts", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0001", "sql1": "\nSELECT DISTINCT SUM(`balance`) OVER () AS `sum_t2_balance_`\nFROM\n  (SELECT *\n   FROM `savings` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `accounts`\n           WHERE (`name` = 'Brown')) AS RHS\n        WHERE (LHS.custid = RHS.custid) ))\nORDER BY sum_t2_balance_\n", "sql2": "SELECT sum(T2.balance)\nFROM accounts AS T1\nJOIN savings AS T2 ON T1.custid = T2.custid\nWHERE T1.name != 'Brown'", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT name,\n                AVG(balance) AS meanbalance\n         FROM\n           (SELECT LHS.custid AS custid,\n                   LHS.name AS name,\n                   RHS.balance AS balance\n            FROM accounts AS LHS\n            LEFT JOIN checking AS RHS ON (LHS.custid = RHS.custid))\n         GROUP BY name)\n      ORDER BY meanbalance)\n   LIMIT 4)\n", "sql2": "SELECT T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nWHERE T2.balance <\n    (SELECT avg(balance)\n     FROM checking)", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0021", "sql1": "\nSELECT balance AS balance___1,\n       balance_other AS balance___2,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          RHS.balance AS balance,\n          RHS.balance_other AS balance_other\n   FROM accounts AS LHS\n   INNER JOIN\n     (SELECT LHS.custid AS custid,\n             LHS.balance AS balance,\n             RHS.balance AS balance_other\n      FROM checking AS LHS\n      INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid)) AS RHS ON (LHS.custid = RHS.custid))\nORDER BY balance___1\n", "sql2": "SELECT T2.balance,\n       T3.balance,\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nJOIN savings AS T3 ON T1.custid = T3.custid", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0016", "sql1": "\nSELECT sumbalance AS sum_t2_balance_,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          RHS.sumbalance AS sumbalance\n   FROM accounts AS LHS\n   INNER JOIN\n     (SELECT custid,\n             SUM(balance) AS sumbalance\n      FROM savings\n      GROUP BY custid) AS RHS ON (LHS.custid = RHS.custid))\nORDER BY sum_t2_balance_\n", "sql2": "SELECT sum(T2.balance),\n       T1.name\nFROM accounts AS T1\nJOIN savings AS T2 ON T1.custid = T2.custid\nGROUP BY T1.name", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0011", "sql1": "\nSELECT name\nFROM accounts\nORDER BY name\n", "sql2": "SELECT name\nFROM accounts\nORDER BY name", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/small_bank_1/0006", "sql1": "\nSELECT custid,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.balance AS balance,\n          LHS.name AS name,\n          LHS.maxbalance AS maxbalance,\n          RHS.custid AS custid_other,\n          RHS.balance AS balance_other\n   FROM\n     (SELECT custid,\n             balance,\n             name,\n             MAX(balance) OVER () AS maxbalance\n      FROM\n        (SELECT LHS.custid AS custid,\n                LHS.balance AS balance,\n                RHS.name AS name\n         FROM checking AS LHS\n         INNER JOIN accounts AS RHS ON (LHS.custid = RHS.custid))) AS LHS\n   CROSS JOIN checking AS RHS)\nWHERE (balance = balance_other\n       AND maxbalance != balance_other)\nORDER BY custid\n", "sql2": "SELECT T1.custid,\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nWHERE T2.balance <\n    (SELECT max(balance)\n     FROM checking)", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0009", "sql1": "\nSELECT participant_type_code\nFROM\n  (SELECT LHS.participant_type_code AS participant_type_code,\n          LHS.n AS n,\n          RHS.participant_type_code AS participant_type_code_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT participant_type_code,\n             COUNT(*) AS n\n      FROM participants\n      GROUP BY participant_type_code) AS LHS\n   CROSS JOIN\n     (SELECT participant_type_code,\n             COUNT(*) AS n\n      FROM participants\n      GROUP BY participant_type_code) AS RHS)\nWHERE (n > n_other)\nORDER BY participant_type_code\n", "sql2": "SELECT participant_type_code\nFROM participants\nGROUP BY participant_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0013", "sql1": "\nSELECT DISTINCT `service_type_code`\nFROM\n  (SELECT `LHS`.`service_id` AS `service_id`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `RHS`.`event_id` AS `event_id`,\n          `RHS`.`event_details` AS `event_details`\n   FROM `services` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `events`\n      WHERE (`event_details` = 'Success'\n             OR `event_details` != 'Fail')) AS RHS ON (LHS.service_id = RHS.service_id))\nORDER BY service_type_code\n", "sql2": "SELECT T1.service_type_code\nFROM services AS T1\nJOIN EVENTS AS T2 ON T1.service_id = T2.service_id\nWHERE T2.event_details = 'Success' INTERSECT\n  SELECT T1.service_type_code\n  FROM services AS T1\n  JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `participants`\n      WHERE (`participant_type_code` = 'Organizer')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM participants\nWHERE participant_type_code = 'Organizer'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0004", "sql1": "\nSELECT participant_id,\n       participant_type_code,\n       participant_details\nFROM participants\nORDER BY participant_id\n", "sql2": "SELECT Participant_ID,\n       Participant_Type_Code,\n       Participant_Details\nFROM Participants", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0012", "sql1": "\nSELECT `event_id`\nFROM\n  (SELECT *\n   FROM `events` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `LHS`.`participant_id` AS `participant_id`,\n                     `LHS`.`participant_type_code` AS `participant_type_code`,\n                     `LHS`.`participant_details` AS `participant_details`,\n                     `LHS`.`event_id` AS `event_id`,\n                     `LHS`.`service_id` AS `service_id`,\n                     `LHS`.`event_details` AS `event_details`\n              FROM\n                (SELECT `LHS`.`participant_id` AS `participant_id`,\n                        `LHS`.`participant_type_code` AS `participant_type_code`,\n                        `LHS`.`participant_details` AS `participant_details`,\n                        `RHS`.`event_id` AS `event_id`,\n                        `RHS`.`service_id` AS `service_id`,\n                        `RHS`.`event_details` AS `event_details`\n                 FROM `participants` AS `LHS`\n                 CROSS JOIN `events` AS `RHS`) AS `LHS`\n              INNER JOIN `participants_in_events` AS `RHS` ON (`LHS`.`participant_id` = `RHS`.`participant_id`\n                                                                  AND `LHS`.`event_id` = `RHS`.`event_id`))\n           WHERE (`participant_details` = 'Kenyatta Kuhn')) AS RHS\n        WHERE (LHS.event_id = RHS.event_id\n               AND LHS.service_id = RHS.service_id) ))\nORDER BY event_id\n", "sql2": "SELECT event_id\nFROM EVENTS\nEXCEPT\nSELECT T1.event_id\nFROM Participants_in_Events AS T1\nJOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID\nWHERE Participant_Details = 'Kenyatta Kuhn'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0015", "sql1": "\nSELECT n_distinct AS count_distinct_participant_id_\nFROM\n  (SELECT COUNT(DISTINCT participant_id) AS n_distinct\n   FROM participants_in_events)\nORDER BY count_distinct_participant_id_\n", "sql2": "SELECT count(DISTINCT participant_id)\nFROM participants_in_Events", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0003", "sql1": "\nSELECT participant_id,\n       participant_type_code,\n       n AS count___\nFROM\n  (SELECT LHS.participant_id AS participant_id,\n          LHS.n AS n,\n          RHS.participant_type_code AS participant_type_code,\n          RHS.participant_details AS participant_details\n   FROM\n     (SELECT participant_id,\n             COUNT(*) AS n\n      FROM participants_in_events\n      GROUP BY participant_id) AS LHS\n   LEFT JOIN participants AS RHS ON (LHS.participant_id = RHS.participant_id))\nORDER BY participant_id\n", "sql2": "SELECT T1.Participant_ID,\n       T1.Participant_Type_Code,\n       count(*)\nFROM Participants AS T1\nJOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID\nGROUP BY T1.Participant_ID", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0002", "sql1": "\nSELECT event_id,\n       event_details\nFROM\n  (SELECT LHS.event_id AS event_id,\n          LHS.service_id AS service_id,\n          LHS.event_details AS event_details,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.event_id AS event_id,\n             LHS.service_id AS service_id,\n             LHS.event_details AS event_details,\n             RHS.n AS n\n      FROM events AS LHS\n      INNER JOIN\n        (SELECT event_id,\n                COUNT(*) AS n\n         FROM participants_in_events\n         GROUP BY event_id) AS RHS ON (LHS.event_id = RHS.event_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT event_id,\n                COUNT(*) AS n\n         FROM participants_in_events\n         GROUP BY event_id)\n      WHERE (n != 1)) AS RHS ON (LHS.event_id = RHS.event_id\n                                 AND LHS.n = RHS.n))\nORDER BY event_id\n", "sql2": "SELECT T1.event_id,\n       T1.event_details\nFROM EVENTS AS T1\nJOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID\nGROUP BY T1.Event_ID\nHAVING count(*) > 1", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0014", "sql1": "\nSELECT event_id AS count___\nFROM\n  (SELECT LHS.event_id AS event_id,\n          LHS.service_id AS service_id,\n          LHS.event_details AS event_details,\n          RHS.participant_id AS participant_id\n   FROM events AS LHS\n   INNER JOIN\n     (SELECT participant_id,\n             COUNT(DISTINCT event_id) AS n_distinct\n      FROM participants_in_events\n      GROUP BY participant_id) AS RHS ON (LHS.event_id = RHS.n_distinct))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM EVENTS\nWHERE event_id NOT IN\n    (SELECT event_id\n     FROM Participants_in_Events)", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0001", "sql1": "\nSELECT `event_details`\nFROM\n  (SELECT `LHS`.`service_id` AS `service_id`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `RHS`.`event_id` AS `event_id`,\n          `RHS`.`event_details` AS `event_details`\n   FROM\n     (SELECT *\n      FROM `services`\n      WHERE (`service_type_code` = 'Marriage')) AS LHS\n   LEFT JOIN events AS RHS ON (LHS.service_id = RHS.service_id))\nORDER BY event_details\n", "sql2": "SELECT T1.event_details\nFROM EVENTS AS T1\nJOIN Services AS T2 ON T1.Service_ID = T2.Service_ID\nWHERE T2.Service_Type_Code = 'Marriage'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0007", "sql1": "\nSELECT service_id,\n       event_details\nFROM events\nORDER BY service_id\n", "sql2": "SELECT service_id,\n       event_details\nFROM EVENTS", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0011", "sql1": "\nSELECT DISTINCT event_id_other AS event_id\nFROM\n  (SELECT LHS.event_id AS event_id,\n          LHS.participant_id AS participant_id,\n          RHS.event_id AS event_id_other\n   FROM participants_in_events AS LHS\n   INNER JOIN\n     (SELECT event_id,\n             COUNT(*) AS n\n      FROM participants_in_events\n      GROUP BY event_id) AS RHS ON (LHS.event_id = RHS.n))\nORDER BY event_id\n", "sql2": "SELECT Event_ID\nFROM Participants_in_Events\nGROUP BY Event_ID\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_in_alabama/0006", "sql1": "\nSELECT service_type_code\nFROM services\nORDER BY service_type_code\n", "sql2": "SELECT service_type_code\nFROM services\nORDER BY service_type_code", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/device/0009", "sql1": "\nSELECT shop_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM shop\n      ORDER BY open_year DESC)\n   LIMIT 1)\n", "sql2": "SELECT Shop_Name\nFROM shop\nORDER BY Open_Year DESC\nLIMIT 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0005", "sql1": "\nSELECT meanquantity AS avg_quantity_\nFROM\n  (SELECT AVG(quantity) AS meanquantity\n   FROM stock)\nORDER BY avg_quantity_\n", "sql2": "SELECT avg(Quantity)\nFROM stock", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0004", "sql1": "\nSELECT shop_name\nFROM shop\nORDER BY shop_name\n", "sql2": "SELECT Shop_Name\nFROM shop\nORDER BY Open_Year ASC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0012", "sql1": "\nSELECT DISTINCT shop_name\nFROM\n  (SELECT LHS.shop_id AS shop_id,\n          LHS.shop_name AS shop_name,\n          LHS.location AS LOCATION,\n          LHS.open_date AS open_date,\n          LHS.open_year AS open_year,\n          RHS.device_id AS device_id,\n          RHS.shop_id AS shop_id_other\n   FROM shop AS LHS\n   INNER JOIN\n     (SELECT device_id,\n             shop_id,\n             COUNT(*) AS n\n      FROM stock\n      GROUP BY device_id,\n               shop_id) AS RHS ON (LHS.shop_id = RHS.n))\nORDER BY shop_name\n", "sql2": "SELECT T2.Shop_Name\nFROM stock AS T1\nJOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID\nGROUP BY T1.Shop_ID\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0008", "sql1": "\nSELECT `open_date`,\n       `open_year`\nFROM `shop`\nWHERE (`shop_name` = 'Apple')\nORDER BY open_date\n", "sql2": "SELECT Open_Date,\n       Open_Year\nFROM shop\nWHERE Shop_Name = 'Apple'", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0015", "sql1": "\nSELECT DISTINCT software_platform\nFROM device\nORDER BY software_platform\n", "sql2": "SELECT Software_Platform\nFROM device\nGROUP BY Software_Platform\nORDER BY COUNT(*) DESC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0003", "sql1": "\nSELECT `carrier`\nFROM `device`\nWHERE (`software_platform` != 'Android')\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM device\nWHERE Software_Platform != 'Android'", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0019", "sql1": "\nSELECT carrier\nFROM\n  (SELECT *\n   FROM device AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM stock AS RHS\n        WHERE (LHS.device_id = RHS.device_id) ))\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM device\nWHERE Device_ID NOT IN\n    (SELECT Device_ID\n     FROM stock)", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0002", "sql1": "\nSELECT carrier\nFROM device\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM device\nORDER BY Carrier ASC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0014", "sql1": "\nSELECT software_platform,\n       n AS count___\nFROM\n  (SELECT software_platform,\n          COUNT(*) AS n\n   FROM device\n   GROUP BY software_platform)\nORDER BY software_platform\n", "sql2": "SELECT Software_Platform,\n       COUNT(*)\nFROM device\nGROUP BY Software_Platform", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM device\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM device", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0017", "sql1": "\nSELECT shop_name\nFROM\n  (SELECT *\n   FROM shop AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM stock AS RHS\n        WHERE (LHS.shop_id = RHS.shop_id) ))\nORDER BY shop_name\n", "sql2": "SELECT Shop_Name\nFROM shop\nWHERE Shop_ID NOT IN\n    (SELECT Shop_ID\n     FROM stock)", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0020", "sql1": "\nSELECT DISTINCT carrier\nFROM\n  (SELECT LHS.device_id AS device_id,\n          LHS.device AS device,\n          LHS.carrier AS carrier,\n          LHS.package_version AS package_version,\n          LHS.applications AS applications,\n          LHS.software_platform AS software_platform,\n          RHS.shop_id AS shop_id,\n          RHS.n AS n\n   FROM device AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT device_id,\n                shop_id,\n                COUNT(*) AS n\n         FROM stock\n         GROUP BY device_id,\n                  shop_id)\n      WHERE (n >= 1)) AS RHS ON (LHS.device_id = RHS.device_id))\nORDER BY carrier\n", "sql2": "SELECT T2.Carrier\nFROM stock AS T1\nJOIN device AS T2 ON T1.Device_ID = T2.Device_ID\nGROUP BY T1.Device_ID\nHAVING COUNT(*) > 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0016", "sql1": "\nSELECT software_platform\nFROM\n  (SELECT LHS.software_platform AS software_platform,\n          LHS.n AS n,\n          RHS.software_platform AS software_platform_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT software_platform,\n             COUNT(*) AS n\n      FROM device\n      GROUP BY software_platform) AS LHS\n   CROSS JOIN\n     (SELECT software_platform,\n             COUNT(*) AS n\n      FROM device\n      GROUP BY software_platform) AS RHS)\nWHERE (n > n_other)\nORDER BY software_platform\n", "sql2": "SELECT Software_Platform\nFROM device\nGROUP BY Software_Platform\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0007", "sql1": "\nSELECT n_distinct AS count_distinct_software_platform_\nFROM\n  (SELECT COUNT(DISTINCT software_platform) AS n_distinct\n   FROM device)\nORDER BY count_distinct_software_platform_\n", "sql2": "SELECT count(DISTINCT Software_Platform)\nFROM device", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0011", "sql1": "\nSELECT shop_name\nFROM\n  (SELECT shop_id,\n          shop_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.shop_id AS shop_id,\n             LHS.shop_name AS shop_name,\n             LHS.location AS LOCATION,\n             LHS.open_date AS open_date,\n             LHS.open_year AS open_year,\n             RHS.device_id AS device_id,\n             RHS.quantity AS quantity\n      FROM shop AS LHS\n      INNER JOIN stock AS RHS ON (LHS.shop_id = RHS.shop_id))\n   GROUP BY shop_id,\n            shop_name)\nWHERE (n > 1)\nORDER BY shop_name\n", "sql2": "SELECT T2.Shop_Name\nFROM stock AS T1\nJOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID\nGROUP BY T1.Shop_ID\nHAVING COUNT(*) > 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0010", "sql1": "\nSELECT shop_name,\n       carrier\nFROM\n  (SELECT LHS.device_id AS device_id,\n          LHS.device AS device,\n          LHS.carrier AS carrier,\n          LHS.package_version AS package_version,\n          LHS.applications AS applications,\n          LHS.software_platform AS software_platform,\n          LHS.shop_id AS shop_id,\n          LHS.shop_name AS shop_name,\n          LHS.location AS LOCATION,\n          LHS.open_date AS open_date,\n          LHS.open_year AS open_year,\n          RHS.quantity AS quantity\n   FROM\n     (SELECT LHS.device_id AS device_id,\n             LHS.device AS device,\n             LHS.carrier AS carrier,\n             LHS.package_version AS package_version,\n             LHS.applications AS applications,\n             LHS.software_platform AS software_platform,\n             RHS.shop_id AS shop_id,\n             RHS.shop_name AS shop_name,\n             RHS.location AS LOCATION,\n             RHS.open_date AS open_date,\n             RHS.open_year AS open_year\n      FROM device AS LHS\n      CROSS JOIN shop AS RHS) AS LHS\n   INNER JOIN stock AS RHS ON (LHS.device_id = RHS.device_id\n                                  AND LHS.shop_id = RHS.shop_id))\nORDER BY shop_name\n", "sql2": "SELECT T3.Shop_Name,\n       T2.Carrier\nFROM stock AS T1\nJOIN device AS T2 ON T1.Device_ID = T2.Device_ID\nJOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/device/0006", "sql1": "\nSELECT shop_name,\n       LOCATION\nFROM shop\nORDER BY shop_name\n", "sql2": "SELECT Shop_Name,\n       LOCATION\nFROM shop\nORDER BY Shop_Name ASC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0009", "sql1": "\nSELECT name\nFROM club\nORDER BY name\n", "sql2": "SELECT name\nFROM club\nORDER BY name DESC", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0013", "sql1": "\nSELECT POSITION,\n       meanpoints AS avg_points_\nFROM\n  (SELECT POSITION,\n          AVG(points) AS meanpoints\n   FROM player\n   GROUP BY POSITION)\nORDER BY POSITION\n", "sql2": "SELECT POSITION,\n       avg(Points)\nFROM player\nGROUP BY POSITION", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0005", "sql1": "\nSELECT DISTINCT `year`\nFROM `competition`\nWHERE (`competition_type` != 'Tournament')\nORDER BY YEAR\n", "sql2": "SELECT DISTINCT YEAR\nFROM competition\nWHERE Competition_type != 'Tournament'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0004", "sql1": "\nSELECT competition_type,\n       country\nFROM competition\nORDER BY competition_type\n", "sql2": "SELECT Competition_type,\n       Country\nFROM competition", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0024", "sql1": "\nSELECT `country`\nFROM\n  (SELECT `competition_type`,\n          `country`,\n          COUNT(*) AS `n`\n   FROM `competition`\n   GROUP BY `competition_type`,\n            `country`)\nWHERE (`competition_type` = 'Tournament'\n       AND n > 1)\nORDER BY country\n", "sql2": "SELECT country\nFROM competition\nWHERE competition_type = 'Tournament'\nGROUP BY country\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0008", "sql1": "\nSELECT name\nFROM club\nORDER BY name\n", "sql2": "SELECT name\nFROM club\nORDER BY Start_year ASC", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0015", "sql1": "\nSELECT competition_type,\n       n AS count___\nFROM\n  (SELECT competition_type,\n          COUNT(*) AS n\n   FROM competition\n   GROUP BY competition_type)\nORDER BY competition_type\n", "sql2": "SELECT Competition_type,\n       COUNT(*)\nFROM competition\nGROUP BY Competition_type", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0003", "sql1": "\nSELECT DISTINCT AVG(gold) OVER () AS avg_gold_\nFROM club_rank\nORDER BY avg_gold_\n", "sql2": "SELECT avg(Gold)\nFROM club_rank", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0019", "sql1": "\nSELECT POSITION\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.club_id AS club_id,\n          LHS.apps AS apps,\n          LHS.tries AS tries,\n          LHS.goals AS goals,\n          LHS.points AS points,\n          RHS.player_id AS player_id_other,\n          RHS.name AS name_other,\n          RHS.club_id AS club_id_other,\n          RHS.apps AS apps_other,\n          RHS.goals AS goals_other,\n          RHS.points AS points_other\n   FROM\n     (SELECT *\n      FROM player\n      WHERE (points < 20.0\n             OR points >= 10.0)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM player\n      WHERE (points < 20.0\n             OR points >= 10.0)) AS RHS ON (LHS.position = RHS.position\n                                            AND LHS.points = RHS.tries))\nORDER BY POSITION\n", "sql2": "SELECT POSITION\nFROM player\nWHERE Points > 20 INTERSECT\n  SELECT POSITION\n  FROM player WHERE Points < 10", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0022", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.club_id AS club_id,\n          LHS.apps AS apps,\n          LHS.tries AS tries,\n          LHS.goals AS goals,\n          LHS.points AS points,\n          LHS.meanpoints AS meanpoints,\n          RHS.player_id AS player_id_other,\n          RHS.name AS name_other,\n          RHS.position AS position_other,\n          RHS.club_id AS club_id_other,\n          RHS.apps AS apps_other,\n          RHS.tries AS tries_other,\n          RHS.goals AS goals_other,\n          RHS.points AS points_other,\n          RHS.meanpoints AS meanpoints_other\n   FROM\n     (SELECT player_id,\n             name,\n             POSITION,\n             club_id,\n             apps,\n             tries,\n             goals,\n             points,\n             AVG(points) OVER () AS meanpoints\n      FROM player) AS LHS\n   CROSS JOIN\n     (SELECT player_id,\n             name,\n             POSITION,\n             club_id,\n             apps,\n             tries,\n             goals,\n             points,\n             AVG(points) OVER () AS meanpoints\n      FROM player) AS RHS)\nWHERE (points >= meanpoints_other\n       AND points_other > meanpoints_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM player\nWHERE points >\n    (SELECT avg(points)\n     FROM player)", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM club AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM player AS RHS\n        WHERE (LHS.club_id = RHS.club_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM CLub\nWHERE Club_ID NOT IN\n    (SELECT Club_ID\n     FROM player)", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0002", "sql1": "\nSELECT region\nFROM club\nORDER BY region\n", "sql2": "SELECT DISTINCT Region\nFROM club\nORDER BY Region ASC", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0014", "sql1": "\nSELECT POSITION\nFROM\n  (SELECT points,\n          POSITION,\n          AVG(points) AS meanpoints\n   FROM player\n   GROUP BY points,\n            POSITION)\nWHERE (points >= 20.0\n       OR meanpoints < points)\nORDER BY POSITION\n", "sql2": "SELECT POSITION\nFROM player\nGROUP BY name\nHAVING avg(Points) >= 20", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM club\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0017", "sql1": "\nSELECT competition_type\nFROM\n  (SELECT competition_type,\n          COUNT(*) AS n\n   FROM competition\n   GROUP BY competition_type)\nWHERE (n < 5)\nORDER BY competition_type\n", "sql2": "SELECT Competition_type\nFROM competition\nGROUP BY Competition_type\nHAVING COUNT(*) <= 5", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0021", "sql1": "\nSELECT n_distinct AS count_distinct_position_\nFROM\n  (SELECT COUNT(DISTINCT POSITION) AS n_distinct\n   FROM player)\nORDER BY count_distinct_position_\n", "sql2": "SELECT count(DISTINCT POSITION)\nFROM player", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0020", "sql1": "\nSELECT DISTINCT SUM(points) OVER () AS sum_points_\nFROM player\nORDER BY sum_points_\n", "sql2": "SELECT sum(Points)\nFROM player", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0011", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`club_id` AS `club_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`region` AS `region`,\n          `LHS`.`start_year` AS `start_year`,\n          `RHS`.`player_id` AS `player_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`apps` AS `apps`,\n          `RHS`.`tries` AS `tries`,\n          `RHS`.`goals` AS `goals`,\n          `RHS`.`points` AS `points`\n   FROM `club` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `player`\n      WHERE (`position` = 'Right Wing')) AS RHS ON (LHS.club_id = RHS.club_id))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM club AS T1\nJOIN player AS T2 ON T1.Club_ID = T2.Club_ID\nWHERE T2.Position = 'Right Wing'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0010", "sql1": "\nSELECT name_other AS name,\n       player_id\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.club_id AS club_id,\n          LHS.apps AS apps,\n          LHS.tries AS tries,\n          LHS.goals AS goals,\n          LHS.points AS points,\n          RHS.name AS name_other,\n          RHS.region AS region,\n          RHS.start_year AS start_year\n   FROM player AS LHS\n   INNER JOIN club AS RHS ON (LHS.club_id = RHS.club_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T2.Player_id\nFROM club AS T1\nJOIN player AS T2 ON T1.Club_ID = T2.Club_ID", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/sports_competition/0026", "sql1": "\nSELECT DISTINCT `country`\nFROM\n  (SELECT *\n   FROM `competition` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `competition`\n           WHERE (`competition_type` = 'Friendly')) AS RHS\n        WHERE (LHS.country = RHS.country\n               AND LHS.year = RHS.year) ))\nORDER BY country\n", "sql2": "SELECT country\nFROM competition\nEXCEPT\nSELECT country\nFROM competition\nWHERE competition_type = 'Friendly'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0005", "sql1": "\nSELECT meanscores AS avg_scores_\nFROM\n  (SELECT AVG(scores) AS meanscores\n   FROM submission)\nORDER BY avg_scores_\n", "sql2": "SELECT avg(Scores)\nFROM submission", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0004", "sql1": "\nSELECT `author`\nFROM `submission`\nWHERE (`college` = 'Florida'\n       OR `college` = 'Temple')\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nWHERE College = 'Florida'\n  OR College = 'Temple'", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0012", "sql1": "\nSELECT DISTINCT author,\n                n AS count_distinct_t1_workshop_id_\nFROM\n  (SELECT LHS.submission_id AS submission_id,\n          LHS.scores AS scores,\n          LHS.author AS author,\n          LHS.college AS college,\n          LHS.workshop_id AS workshop_id,\n          LHS.result AS RESULT,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.submission_id AS submission_id,\n             LHS.scores AS scores,\n             LHS.author AS author,\n             LHS.college AS college,\n             RHS.workshop_id AS workshop_id,\n             RHS.result AS RESULT\n      FROM submission AS LHS\n      INNER JOIN acceptance AS RHS ON (LHS.submission_id = RHS.submission_id)) AS LHS\n   INNER JOIN\n     (SELECT submission_id,\n             COUNT(*) AS n\n      FROM acceptance\n      GROUP BY submission_id) AS RHS ON (LHS.submission_id = RHS.submission_id))\nORDER BY author\n", "sql2": "SELECT T2.Author,\n       COUNT(DISTINCT T1.workshop_id)\nFROM acceptance AS T1\nJOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID\nGROUP BY T2.Author", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0008", "sql1": "\nSELECT college\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT author,\n                college,\n                COUNT(*) AS n\n         FROM submission\n         GROUP BY author,\n                  college)\n      ORDER BY college DESC)\n   LIMIT 1)\n", "sql2": "SELECT College\nFROM submission\nGROUP BY College\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0015", "sql1": "\nSELECT author\nFROM\n  (SELECT *\n   FROM submission AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM acceptance AS RHS\n        WHERE (LHS.submission_id = RHS.submission_id) ))\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nWHERE Submission_ID NOT IN\n    (SELECT Submission_ID\n     FROM acceptance)", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0003", "sql1": "\nSELECT author,\n       college\nFROM submission\nORDER BY author\n", "sql2": "SELECT Author,\n       College\nFROM submission", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0002", "sql1": "\nSELECT author\nFROM submission\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nORDER BY Scores ASC", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0014", "sql1": "\nSELECT date, venue\nFROM workshop\nORDER BY date\n", "sql2": "SELECT Date , Venue\nFROM workshop\nORDER BY Venue", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM submission\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM submission", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0007", "sql1": "\nSELECT college,\n       n AS count___\nFROM\n  (SELECT author,\n          college,\n          COUNT(*) AS n\n   FROM submission\n   GROUP BY author,\n            college)\nORDER BY college\n", "sql2": "SELECT College,\n       COUNT(*)\nFROM submission\nGROUP BY College", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0011", "sql1": "\nSELECT RESULT\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.submission_id AS submission_id,\n                LHS.workshop_id AS workshop_id,\n                LHS.result AS RESULT,\n                RHS.scores AS scores,\n                RHS.author AS author,\n                RHS.college AS college\n         FROM acceptance AS LHS\n         LEFT JOIN submission AS RHS ON (LHS.submission_id = RHS.submission_id))\n      ORDER BY college DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.Result\nFROM acceptance AS T1\nJOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID\nORDER BY T2.Scores DESC\nLIMIT 1", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0010", "sql1": "\nSELECT author,\n       RESULT\nFROM\n  (SELECT LHS.submission_id AS submission_id,\n          LHS.workshop_id AS workshop_id,\n          LHS.result AS RESULT,\n          RHS.scores AS scores,\n          RHS.author AS author,\n          RHS.college AS college\n   FROM acceptance AS LHS\n   LEFT JOIN submission AS RHS ON (LHS.submission_id = RHS.submission_id))\nORDER BY author\n", "sql2": "SELECT T2.Author,\n       T1.Result\nFROM acceptance AS T1\nJOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/workshop_paper/0006", "sql1": "\nSELECT author\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM submission\n      ORDER BY scores DESC)\n   LIMIT 1)\n", "sql2": "SELECT Author\nFROM submission\nORDER BY Scores DESC\nLIMIT 1", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0009", "sql1": "\nSELECT `order_id`,\n       `order_status`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`order_status` AS `order_status`,\n          `RHS`.`date_order_placed` AS `date_order_placed`,\n          `RHS`.`order_details` AS `order_details`\n   FROM `customers` AS `LHS`\n   INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Jeramie')\nORDER BY order_id\n", "sql2": "SELECT T2.order_id,\n       T2.order_status\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.customer_name = 'Jeramie'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0025", "sql1": "\nSELECT `invoice_number`\nFROM `invoices`\nWHERE (`invoice_date` < parse_datetime('1989-09-03')\n       OR `invoice_date` >= parse_datetime('2007-12-25'))\nORDER BY invoice_number\n", "sql2": "SELECT invoice_number\nFROM invoices\nWHERE invoice_date < '1989-09-03'\n  OR invoice_date > '2007-12-25'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0005", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `orders`\n           WHERE (`order_status` = 'Packing')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT DISTINCT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.order_status = 'Packing'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0029", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `customer_id`,\n          `customer_name`,\n          `customer_details`,\n          `order_id`,\n          `order_status`,\n          `date_order_placed`,\n          `order_details`,\n          `product_id`,\n          `product_name`,\n          `product_details`,\n          `order_item_id`,\n          `order_item_status`,\n          `order_item_details`,\n          COUNT(*) OVER () AS `n`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`customer_details` AS `customer_details`,\n             `LHS`.`order_id` AS `order_id`,\n             `LHS`.`order_status` AS `order_status`,\n             `LHS`.`date_order_placed` AS `date_order_placed`,\n             `LHS`.`order_details` AS `order_details`,\n             `LHS`.`product_id` AS `product_id`,\n             `LHS`.`product_name` AS `product_name`,\n             `LHS`.`product_details` AS `product_details`,\n             `RHS`.`order_item_id` AS `order_item_id`,\n             `RHS`.`order_item_status` AS `order_item_status`,\n             `RHS`.`order_item_details` AS `order_item_details`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `LHS`.`customer_details` AS `customer_details`,\n                `LHS`.`order_id` AS `order_id`,\n                `LHS`.`order_status` AS `order_status`,\n                `LHS`.`date_order_placed` AS `date_order_placed`,\n                `LHS`.`order_details` AS `order_details`,\n                `RHS`.`product_id` AS `product_id`,\n                `RHS`.`product_name` AS `product_name`,\n                `RHS`.`product_details` AS `product_details`\n         FROM\n           (SELECT `LHS`.`customer_id` AS `customer_id`,\n                   `LHS`.`customer_name` AS `customer_name`,\n                   `LHS`.`customer_details` AS `customer_details`,\n                   `RHS`.`order_id` AS `order_id`,\n                   `RHS`.`order_status` AS `order_status`,\n                   `RHS`.`date_order_placed` AS `date_order_placed`,\n                   `RHS`.`order_details` AS `order_details`\n            FROM `customers` AS `LHS`\n            INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n         CROSS JOIN `products` AS `RHS`) AS `LHS`\n      INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`\n                                               AND `LHS`.`product_id` = `RHS`.`product_id`)))\nWHERE (`product_name` = 'food'\n       OR n <= 1)\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2\nJOIN order_items AS T3\nJOIN products AS T4 ON T1.customer_id = T2.customer_id\nAND T2.order_id = T3.order_id\nAND T3.product_id = T4.product_id\nWHERE T4.product_name = 'food'\nGROUP BY T1.customer_id\nHAVING count(*) >= 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0028", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT customer_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_name AS customer_name,\n             LHS.customer_details AS customer_details,\n             RHS.order_id AS order_id,\n             RHS.order_status AS order_status,\n             RHS.date_order_placed AS date_order_placed,\n             RHS.order_details AS order_details\n      FROM customers AS LHS\n      INNER JOIN orders AS RHS ON (LHS.customer_id = RHS.customer_id))\n   GROUP BY customer_name)\nWHERE (n <= 2)\nORDER BY customer_name\n", "sql2": "SELECT T2.customer_name\nFROM orders AS T1\nJOIN customers AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T2.customer_id\nHAVING count(*) <= 2", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0004", "sql1": "\nSELECT order_item_id\nFROM order_items\nWHERE (product_id = 11)\nORDER BY order_item_id\n", "sql2": "SELECT order_item_id\nFROM order_items\nWHERE product_id = 11", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0012", "sql1": "\nSELECT `product_id`\nFROM\n  (SELECT *\n   FROM `order_items` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `orders`\n           WHERE (`date_order_placed` >= parse_datetime('1975-01-01')\n                  AND `date_order_placed` <= parse_datetime('1976-01-01'))) AS RHS\n        WHERE (LHS.order_id = RHS.order_id) ))\nORDER BY product_id\n", "sql2": "SELECT DISTINCT T2.product_id\nFROM orders AS T1\nJOIN order_items AS T2 ON T1.order_id = T2.order_id\nWHERE T1.date_order_placed >= '1975-01-01'\n  AND T1.date_order_placed <= '1976-01-01'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0024", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_name AS customer_name,\n          LHS.customer_details AS customer_details,\n          RHS.order_details AS order_details\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT order_details,\n             COUNT(*) AS n\n      FROM orders\n      GROUP BY order_details) AS RHS ON (LHS.customer_id = RHS.n))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0008", "sql1": "\nSELECT customer_id\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_name AS customer_name,\n          LHS.customer_details AS customer_details,\n          RHS.order_details AS order_details\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT order_details,\n             COUNT(*) AS n\n      FROM orders\n      GROUP BY order_details) AS RHS ON (LHS.customer_id = RHS.n))\nORDER BY customer_id\n", "sql2": "SELECT T1.customer_id\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0015", "sql1": "\nSELECT date_order_placed\nFROM\n  (SELECT *\n   FROM orders AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM shipments\n           WHERE (shipment_tracking_number = 3452)) AS RHS\n        WHERE (LHS.order_id = RHS.order_id) ))\nORDER BY date_order_placed\n", "sql2": "SELECT T1.date_order_placed\nFROM orders AS T1\nJOIN shipments AS T2 ON T1.order_id = T2.order_id\nWHERE T2.shipment_tracking_number = 3452", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0003", "sql1": "\nSELECT order_id\nFROM shipments\nWHERE (shipment_tracking_number = 3452)\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM shipments\nWHERE shipment_tracking_number = '3452'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0019", "sql1": "\nSELECT `order_id`\nFROM `shipments`\nWHERE (`shipment_date` >= parse_datetime('2000-01-01'))\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM shipments\nWHERE shipment_date > '2000-01-01'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0023", "sql1": "\nSELECT DISTINCT n AS order_id\nFROM\n  (SELECT LHS.order_item_id AS order_item_id,\n          LHS.product_id AS product_id,\n          LHS.order_id AS order_id,\n          LHS.order_item_status AS order_item_status,\n          LHS.order_item_details AS order_item_details,\n          RHS.n AS n\n   FROM order_items AS LHS\n   CROSS JOIN\n     (SELECT COUNT(*) AS n\n      FROM orders) AS RHS)\nORDER BY order_id\n", "sql2": "SELECT T1.order_id\nFROM orders AS T1\nJOIN order_items AS T2 ON T1.order_id = T2.order_id\nGROUP BY T1.order_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0022", "sql1": "\nSELECT order_id\nFROM orders\nORDER BY order_id\n", "sql2": "SELECT DISTINCT order_id\nFROM orders\nORDER BY date_order_placed", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0018", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT product_id,\n          product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.order_status AS order_status,\n             LHS.date_order_placed AS date_order_placed,\n             LHS.order_details AS order_details,\n             LHS.product_id AS product_id,\n             LHS.product_name AS product_name,\n             LHS.product_details AS product_details,\n             RHS.order_item_id AS order_item_id,\n             RHS.order_item_status AS order_item_status,\n             RHS.order_item_details AS order_item_details\n      FROM\n        (SELECT LHS.order_id AS order_id,\n                LHS.customer_id AS customer_id,\n                LHS.order_status AS order_status,\n                LHS.date_order_placed AS date_order_placed,\n                LHS.order_details AS order_details,\n                RHS.product_id AS product_id,\n                RHS.product_name AS product_name,\n                RHS.product_details AS product_details\n         FROM orders AS LHS\n         CROSS JOIN products AS RHS) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id\n                                           AND LHS.product_id = RHS.product_id))\n   GROUP BY product_id,\n            product_name)\nORDER BY product_name\n", "sql2": "SELECT T3.product_name,\n       count(*)\nFROM orders AS T1\nJOIN order_items AS T2\nJOIN products AS T3 ON T1.order_id = T2.order_id\nAND T2.product_id = T3.product_id\nGROUP BY T3.product_id", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0002", "sql1": "\nSELECT order_id,\n       customer_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM orders\n      ORDER BY date_order_placed)\n   LIMIT 1)\n", "sql2": "SELECT order_id,\n       customer_id\nFROM orders\nORDER BY date_order_placed\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0001", "sql1": "\nSELECT customer_id AS order_id\nFROM\n  (SELECT order_id,\n          order_id AS customer_id,\n          order_status,\n          date_order_placed,\n          order_details,\n          order_status_other,\n          date_order_placed_other,\n          order_details_other\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.order_status AS order_status,\n             LHS.date_order_placed AS date_order_placed,\n             LHS.order_details AS order_details,\n             RHS.order_status AS order_status_other,\n             RHS.date_order_placed AS date_order_placed_other,\n             RHS.order_details AS order_details_other\n      FROM orders AS LHS\n      INNER JOIN orders AS RHS ON (LHS.order_id = RHS.customer_id\n                                      AND LHS.customer_id = RHS.order_id)))\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM orders\nORDER BY date_order_placed DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0017", "sql1": "\nSELECT n AS count___,\n       product_id\nFROM\n  (SELECT product_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.order_status AS order_status,\n             LHS.date_order_placed AS date_order_placed,\n             LHS.order_details AS order_details,\n             LHS.product_id AS product_id,\n             LHS.product_name AS product_name,\n             LHS.product_details AS product_details,\n             RHS.order_item_id AS order_item_id,\n             RHS.order_item_status AS order_item_status,\n             RHS.order_item_details AS order_item_details\n      FROM\n        (SELECT LHS.order_id AS order_id,\n                LHS.customer_id AS customer_id,\n                LHS.order_status AS order_status,\n                LHS.date_order_placed AS date_order_placed,\n                LHS.order_details AS order_details,\n                RHS.product_id AS product_id,\n                RHS.product_name AS product_name,\n                RHS.product_details AS product_details\n         FROM orders AS LHS\n         CROSS JOIN products AS RHS) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id\n                                           AND LHS.product_id = RHS.product_id))\n   GROUP BY product_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T3.product_id\nFROM orders AS T1\nJOIN order_items AS T2\nJOIN products AS T3 ON T1.order_id = T2.order_id\nAND T2.product_id = T3.product_id\nGROUP BY T3.product_id", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0021", "sql1": "\nSELECT DISTINCT product_name\nFROM products\nORDER BY product_name\n", "sql2": "SELECT DISTINCT product_name\nFROM products\nORDER BY product_name", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0020", "sql1": "\nSELECT DISTINCT order_id_other AS order_id\nFROM\n  (SELECT LHS.shipment_id AS shipment_id,\n          LHS.order_id AS order_id,\n          LHS.invoice_number AS invoice_number,\n          LHS.shipment_tracking_number AS shipment_tracking_number,\n          LHS.shipment_date AS shipment_date,\n          LHS.other_shipment_details AS other_shipment_details,\n          LHS.maxshipment_date AS maxshipment_date,\n          RHS.shipment_id AS shipment_id_other,\n          RHS.order_id AS order_id_other,\n          RHS.invoice_number AS invoice_number_other,\n          RHS.shipment_tracking_number AS shipment_tracking_number_other,\n          RHS.shipment_date AS shipment_date_other,\n          RHS.other_shipment_details AS other_shipment_details_other,\n          RHS.maxshipment_date AS maxshipment_date_other\n   FROM\n     (SELECT shipment_id,\n             order_id,\n             invoice_number,\n             shipment_tracking_number,\n             shipment_date,\n             other_shipment_details,\n             MAX(shipment_date) OVER () AS maxshipment_date\n      FROM shipments) AS LHS\n   CROSS JOIN\n     (SELECT shipment_id,\n             order_id,\n             invoice_number,\n             shipment_tracking_number,\n             shipment_date,\n             other_shipment_details,\n             MAX(shipment_date) OVER () AS maxshipment_date\n      FROM shipments) AS RHS)\nWHERE (maxshipment_date > maxshipment_date_other\n       OR shipment_date_other >= maxshipment_date_other)\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM shipments\nWHERE shipment_date =\n    (SELECT max(shipment_date)\n     FROM shipments)", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0016", "sql1": "\nSELECT date_order_placed\nFROM\n  (SELECT LHS.shipment_id AS shipment_id,\n          LHS.order_id AS order_id,\n          LHS.invoice_number AS invoice_number,\n          LHS.shipment_tracking_number AS shipment_tracking_number,\n          LHS.shipment_date AS shipment_date,\n          LHS.other_shipment_details AS other_shipment_details,\n          RHS.customer_id AS customer_id,\n          RHS.order_status AS order_status,\n          RHS.date_order_placed AS date_order_placed,\n          RHS.order_details AS order_details\n   FROM\n     (SELECT *\n      FROM shipments\n      WHERE (invoice_number = 10)) AS LHS\n   LEFT JOIN orders AS RHS ON (LHS.order_id = RHS.order_id))\nORDER BY date_order_placed\n", "sql2": "SELECT T1.date_order_placed\nFROM orders AS T1\nJOIN shipments AS T2 ON T1.order_id = T2.order_id\nWHERE T2.invoice_number = 10", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0027", "sql1": "\nSELECT customer_name,\n       n AS count___\nFROM\n  (SELECT customer_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_name AS customer_name,\n             LHS.customer_details AS customer_details,\n             RHS.order_id AS order_id,\n             RHS.order_status AS order_status,\n             RHS.date_order_placed AS date_order_placed,\n             RHS.order_details AS order_details\n      FROM customers AS LHS\n      INNER JOIN orders AS RHS ON (LHS.customer_id = RHS.customer_id))\n   GROUP BY customer_name)\nWHERE (n >= 2)\nORDER BY customer_name\n", "sql2": "SELECT T2.customer_name,\n       count(*)\nFROM orders AS T1\nJOIN customers AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T2.customer_id\nHAVING count(*) >= 2", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0007", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_name AS customer_name,\n          LHS.customer_details AS customer_details,\n          RHS.order_details AS order_details\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT order_details,\n             COUNT(*) AS n\n      FROM orders\n      GROUP BY order_details) AS RHS ON (LHS.customer_id = RHS.n))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0011", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`order_id` AS `order_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`order_status` AS `order_status`,\n          `LHS`.`date_order_placed` AS `date_order_placed`,\n          `LHS`.`order_details` AS `order_details`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`customer_details` AS `customer_details`\n   FROM `orders` AS `LHS`\n   LEFT JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`date_order_placed` > parse_datetime('2009-01-01')\n       AND `date_order_placed` < parse_datetime('2010-01-01'))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.date_order_placed >= '2009-01-01'\n  AND T2.date_order_placed <= '2010-01-01'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0010", "sql1": "\nSELECT `date_order_placed`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`order_status` AS `order_status`,\n          `RHS`.`date_order_placed` AS `date_order_placed`,\n          `RHS`.`order_details` AS `order_details`\n   FROM `customers` AS `LHS`\n   INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Jeramie')\nORDER BY date_order_placed\n", "sql2": "SELECT T2.date_order_placed\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.customer_name = 'Jeramie'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0006", "sql1": "\nSELECT `customer_details`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `orders`\n           WHERE (`order_status` = 'On Road')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT T1.customer_details\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.order_status = 'On Road'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0026", "sql1": "\nSELECT DISTINCT `invoice_details`\nFROM `invoices`\nWHERE (`invoice_date` < parse_datetime('1989-09-03')\n       OR `invoice_date` >= parse_datetime('2007-12-25'))\nORDER BY invoice_details\n", "sql2": "SELECT DISTINCT invoice_details\nFROM invoices\nWHERE invoice_date < '1989-09-03'\n  OR invoice_date > '2007-12-25'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_orders/0030", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `LHS`.`order_id` AS `order_id`,\n          `LHS`.`order_status` AS `order_status`,\n          `LHS`.`date_order_placed` AS `date_order_placed`,\n          `LHS`.`order_details` AS `order_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`product_details` AS `product_details`,\n          `RHS`.`order_item_id` AS `order_item_id`,\n          `RHS`.`order_item_status` AS `order_item_status`,\n          `RHS`.`order_item_details` AS `order_item_details`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`customer_details` AS `customer_details`,\n             `LHS`.`order_id` AS `order_id`,\n             `LHS`.`order_status` AS `order_status`,\n             `LHS`.`date_order_placed` AS `date_order_placed`,\n             `LHS`.`order_details` AS `order_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`product_details` AS `product_details`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `LHS`.`customer_details` AS `customer_details`,\n                `RHS`.`order_id` AS `order_id`,\n                `RHS`.`order_status` AS `order_status`,\n                `RHS`.`date_order_placed` AS `date_order_placed`,\n                `RHS`.`order_details` AS `order_details`\n         FROM `customers` AS `LHS`\n         INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n      CROSS JOIN `products` AS `RHS`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `order_item_id`,\n                `product_id`,\n                `order_id`,\n                `order_item_status`,\n                `order_item_details`,\n                COUNT(*) OVER () AS `n`\n         FROM `order_items`)\n      WHERE (`order_item_status` = 'Cancel'\n             OR `n` < 1)) AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`\n                                       AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`product_name` = 'food'\n       AND n > 1)\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2\nJOIN order_items AS T3\nJOIN products AS T4 ON T1.customer_id = T2.customer_id\nAND T2.order_id = T3.order_id\nAND T3.product_id = T4.product_id\nWHERE T3.order_item_status = 'Cancel'\n  AND T4.product_name = 'food'\nGROUP BY T1.customer_id\nHAVING count(*) >= 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0009", "sql1": "\nSELECT home_city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM driver\n         WHERE (age <= 40))\n      ORDER BY home_city)\n   LIMIT 3)\n", "sql2": "SELECT home_city\nFROM driver\nEXCEPT\nSELECT home_city\nFROM driver\nWHERE age > 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0005", "sql1": "\nSELECT DISTINCT home_city\nFROM driver\nORDER BY home_city\n", "sql2": "SELECT DISTINCT home_city\nFROM driver", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0004", "sql1": "\nSELECT name\nFROM driver\nORDER BY name\n", "sql2": "SELECT name\nFROM driver\nORDER BY age DESC", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0012", "sql1": "\nSELECT school,\n       name\nFROM\n  (SELECT LHS.driver_id AS driver_id,\n          LHS.name AS name,\n          LHS.party AS party,\n          LHS.home_city AS home_city,\n          LHS.age AS age,\n          LHS.school_id AS school_id,\n          LHS.grade AS grade,\n          LHS.school AS school,\n          LHS.location AS LOCATION,\n          LHS.type AS TYPE,\n          RHS.years_working AS years_working,\n          RHS.if_full_time AS if_full_time\n   FROM\n     (SELECT LHS.driver_id AS driver_id,\n             LHS.name AS name,\n             LHS.party AS party,\n             LHS.home_city AS home_city,\n             LHS.age AS age,\n             RHS.school_id AS school_id,\n             RHS.grade AS grade,\n             RHS.school AS school,\n             RHS.location AS LOCATION,\n             RHS.type AS TYPE\n      FROM driver AS LHS\n      CROSS JOIN school AS RHS) AS LHS\n   INNER JOIN school_bus AS RHS ON (LHS.driver_id = RHS.driver_id\n                                       AND LHS.school_id = RHS.school_id))\nORDER BY school\n", "sql2": "SELECT T2.school,\n       T3.name\nFROM school_bus AS T1\nJOIN school AS T2 ON T1.school_id = T2.school_id\nJOIN driver AS T3 ON T1.driver_id = T3.driver_id", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0008", "sql1": "\nSELECT home_city\nFROM\n  (SELECT home_city,\n          party,\n          COUNT(DISTINCT age) AS n_distinct\n   FROM\n     (SELECT *\n      FROM driver\n      WHERE (age = 40\n             AND age >= 2))\n   GROUP BY home_city,\n            party)\nORDER BY home_city\n", "sql2": "SELECT home_city\nFROM driver\nWHERE age > 40\nGROUP BY home_city\nHAVING count(*) >= 2", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0003", "sql1": "\nSELECT party,\n       n AS count___\nFROM\n  (SELECT party,\n          COUNT(*) AS n\n   FROM driver\n   GROUP BY party)\nORDER BY party\n", "sql2": "SELECT party,\n       count(*)\nFROM driver\nGROUP BY party", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0002", "sql1": "\nSELECT name,\n       home_city,\n       age\nFROM driver\nORDER BY name\n", "sql2": "SELECT name,\n       home_city,\n       age\nFROM driver", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0014", "sql1": "\nSELECT school,\n       TYPE\nFROM\n  (SELECT *\n   FROM school AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM school_bus AS RHS\n        WHERE (LHS.school_id = RHS.school_id) ))\nORDER BY school\n", "sql2": "SELECT school,\n       TYPE\nFROM school\nWHERE school_id NOT IN\n    (SELECT school_id\n     FROM school_bus)", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM driver\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM driver", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0017", "sql1": "\nSELECT `name`\nFROM `driver`\nWHERE (`home_city` = 'Hartford'\n       AND age < 40)\nORDER BY name\n", "sql2": "SELECT name\nFROM driver\nWHERE home_city = 'Hartford'\n  AND age < 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `driver`\nWHERE (`home_city` != 'Hartford'\n       OR age != 40)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM driver\nWHERE home_city = 'Hartford'\n  OR age < 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0007", "sql1": "\nSELECT `party`\nFROM `driver`\nWHERE (`home_city` = 'Hartford'\n       AND age > 40)\nORDER BY party\n", "sql2": "SELECT party\nFROM driver\nWHERE home_city = 'Hartford'\n  AND age > 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0011", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY TYPE)\nWHERE (n = 2)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM school\nGROUP BY TYPE\nHAVING count(*) = 2", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM driver AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM school_bus AS RHS\n        WHERE (LHS.driver_id = RHS.driver_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM driver\nWHERE driver_id NOT IN\n    (SELECT driver_id\n     FROM school_bus)", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_bus/0006", "sql1": "\nSELECT home_city\nFROM\n  (SELECT LHS.name AS name,\n          LHS.n AS n,\n          RHS.party AS party,\n          RHS.home_city AS home_city,\n          RHS.age AS age\n   FROM\n     (SELECT name,\n             COUNT(*) AS n\n      FROM driver\n      GROUP BY name) AS LHS\n   INNER JOIN driver AS RHS ON (LHS.n = RHS.driver_id\n                                   AND LHS.name = RHS.name))\nORDER BY home_city\n", "sql2": "SELECT home_city\nFROM driver\nGROUP BY home_city\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM building AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM institution\n           WHERE (founded >= 2003.0)) AS RHS\n        WHERE (LHS.building_id = RHS.building_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM building\nEXCEPT\nSELECT T1.name\nFROM building AS T1\nJOIN institution AS T2 ON T1.building_id = T2.building_id\nWHERE T2.founded = 2003", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0015", "sql1": "\nSELECT DISTINCT TYPE\nFROM institution\nORDER BY TYPE\n", "sql2": "SELECT DISTINCT TYPE\nFROM institution", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM building\n      ORDER BY years_as_tallest DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM building\nORDER BY height_feet DESC\nLIMIT 1", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0019", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT floors) AS n_distinct\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.building_id AS building_id,\n                LHS.name AS name,\n                LHS.street_address AS street_address,\n                LHS.years_as_tallest AS years_as_tallest,\n                LHS.height_feet AS height_feet,\n                LHS.floors AS floors,\n                LHS.institution_id AS institution_id,\n                LHS.institution AS institution,\n                LHS.location AS LOCATION,\n                LHS.founded AS founded,\n                LHS.type AS TYPE,\n                LHS.enrollment AS enrollment,\n                LHS.team AS team,\n                LHS.primary_conference AS primary_conference,\n                RHS.common_name AS common_name,\n                RHS.protein_name AS protein_name,\n                RHS.divergence_from_human_lineage AS divergence_from_human_lineage,\n                RHS.accession_number AS accession_number,\n                RHS.sequence_length AS sequence_length,\n                RHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein\n         FROM\n           (SELECT LHS.building_id AS building_id,\n                   LHS.name AS name,\n                   LHS.street_address AS street_address,\n                   LHS.years_as_tallest AS years_as_tallest,\n                   LHS.height_feet AS height_feet,\n                   LHS.floors AS floors,\n                   RHS.institution_id AS institution_id,\n                   RHS.institution AS institution,\n                   RHS.location AS LOCATION,\n                   RHS.founded AS founded,\n                   RHS.type AS TYPE,\n                   RHS.enrollment AS enrollment,\n                   RHS.team AS team,\n                   RHS.primary_conference AS primary_conference\n            FROM building AS LHS\n            INNER JOIN institution AS RHS ON (LHS.building_id = RHS.building_id)) AS LHS\n         INNER JOIN protein AS RHS ON (LHS.institution_id = RHS.institution_id))\n      WHERE (floors <= 20)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM institution AS T1\nJOIN protein AS T2 ON T1.institution_id = T2.institution_id\nJOIN building AS T3 ON T3.building_id = T1.building_id\nWHERE T3.floors >= 20", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0018", "sql1": "\nSELECT protein_name,\n       institution\nFROM\n  (SELECT LHS.common_name AS common_name,\n          LHS.protein_name AS protein_name,\n          LHS.divergence_from_human_lineage AS divergence_from_human_lineage,\n          LHS.accession_number AS accession_number,\n          LHS.sequence_length AS sequence_length,\n          LHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein,\n          LHS.institution_id AS institution_id,\n          RHS.institution AS institution,\n          RHS.location AS LOCATION,\n          RHS.founded AS founded,\n          RHS.type AS TYPE,\n          RHS.enrollment AS enrollment,\n          RHS.team AS team,\n          RHS.primary_conference AS primary_conference,\n          RHS.building_id AS building_id\n   FROM protein AS LHS\n   LEFT JOIN institution AS RHS ON (LHS.institution_id = RHS.institution_id))\nORDER BY protein_name\n", "sql2": "SELECT T2.protein_name,\n       T1.institution\nFROM institution AS T1\nJOIN protein AS T2 ON T1.institution_id = T2.institution_id", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0002", "sql1": "\nSELECT name,\n       street_address,\n       floors\nFROM building\nORDER BY name\n", "sql2": "SELECT name,\n       street_address,\n       floors\nFROM building\nORDER BY floors", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM building\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM building", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0016", "sql1": "\nSELECT DISTINCT institution,\n                n AS count___\nFROM\n  (SELECT LHS.institution_id AS institution_id,\n          LHS.institution AS institution,\n          LHS.location AS LOCATION,\n          LHS.founded AS founded,\n          LHS.type AS TYPE,\n          LHS.enrollment AS enrollment,\n          LHS.team AS team,\n          LHS.primary_conference AS primary_conference,\n          LHS.building_id AS building_id,\n          LHS.common_name AS common_name,\n          LHS.protein_name AS protein_name,\n          LHS.divergence_from_human_lineage AS divergence_from_human_lineage,\n          LHS.accession_number AS accession_number,\n          LHS.sequence_length AS sequence_length,\n          LHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.institution_id AS institution_id,\n             LHS.institution AS institution,\n             LHS.location AS LOCATION,\n             LHS.founded AS founded,\n             LHS.type AS TYPE,\n             LHS.enrollment AS enrollment,\n             LHS.team AS team,\n             LHS.primary_conference AS primary_conference,\n             LHS.building_id AS building_id,\n             RHS.common_name AS common_name,\n             RHS.protein_name AS protein_name,\n             RHS.divergence_from_human_lineage AS divergence_from_human_lineage,\n             RHS.accession_number AS accession_number,\n             RHS.sequence_length AS sequence_length,\n             RHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein\n      FROM institution AS LHS\n      INNER JOIN protein AS RHS ON (LHS.institution_id = RHS.institution_id)) AS LHS\n   INNER JOIN\n     (SELECT building_id,\n             primary_conference,\n             COUNT(*) AS n\n      FROM institution\n      GROUP BY building_id,\n               primary_conference) AS RHS ON (LHS.primary_conference = RHS.primary_conference\n                                              AND LHS.building_id = RHS.building_id))\nORDER BY institution\n", "sql2": "SELECT T1.institution,\n       count(*)\nFROM institution AS T1\nJOIN protein AS T2 ON T1.institution_id = T2.institution_id\nGROUP BY T1.institution_id", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0007", "sql1": "\nSELECT `institution`,\n       `location`\nFROM `institution`\nWHERE (`type` = 'Private'\n       AND founded > 1990.0)\nORDER BY institution\n", "sql2": "SELECT institution,\n       LOCATION\nFROM institution\nWHERE founded > 1990\n  AND TYPE = 'Private'", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0011", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM building AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM institution AS RHS\n        WHERE (LHS.building_id = RHS.building_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM building\nWHERE building_id NOT IN\n    (SELECT building_id\n     FROM institution)", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0010", "sql1": "\nSELECT TYPE\nFROM institution\nWHERE (founded >= 1990.0\n       AND enrollment != 1000)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM institution\nWHERE founded > 1990\n  AND enrollment >= 1000", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/protein_institute/0006", "sql1": "\nSELECT name\nFROM building\nWHERE (height_feet != 200\n       AND floors > 20)\nORDER BY name\n", "sql2": "SELECT name\nFROM building\nWHERE height_feet >= 200\n  AND floors >= 20", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0009", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `building`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `faculty`\n      WHERE (`rank` = 'Professor'\n             AND `building` = 'NEB'))\n   GROUP BY building)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty\nWHERE Rank = 'Professor'\n  AND building = 'NEB'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0044", "sql1": "\nSELECT DISTINCT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`actid` AS `actid`,\n          `RHS`.`activity_name` AS `activity_name`\n   FROM `participates_in` AS `LHS`\n   LEFT JOIN `activity` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`))\nWHERE (`activity_name` != 'Canoeing'\n       OR `activity_name` = 'Kayaking')\nORDER BY stuid\n", "sql2": "SELECT T1.stuid\nFROM participates_in AS T1\nJOIN activity AS T2 ON T2.actid = T2.actid\nWHERE T2.activity_name = 'Canoeing' INTERSECT\n  SELECT T1.stuid\n  FROM participates_in AS T1\n  JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0013", "sql1": "\nSELECT `building`\nFROM\n  (SELECT `building`,\n          `rank`,\n          COUNT(*) AS `n`\n   FROM `faculty`\n   GROUP BY `building`,\n            `rank`)\nWHERE (`rank` = 'Professor'\n       AND n >= 10)\nORDER BY building\n", "sql2": "SELECT building\nFROM Faculty\nWHERE rank = 'Professor'\nGROUP BY building\nHAVING count(*) >= 10", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0005", "sql1": "\nSELECT `fname`,\n       `lname`,\n       `phone`\nFROM `faculty`\nWHERE (`sex` = 'F')\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname,\n       phone\nFROM Faculty\nWHERE Sex = 'F'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0029", "sql1": "\nSELECT facid\nFROM\n  (SELECT *\n   FROM faculty AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM faculty_participates_in AS RHS\n        WHERE (LHS.facid = RHS.facid) ))\nORDER BY facid\n", "sql2": "SELECT FacID\nFROM Faculty\nEXCEPT\nSELECT FacID\nFROM Faculty_participates_in", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0028", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT facid) OVER () AS count_distinct_facid_\nFROM faculty_participates_in\nORDER BY count_distinct_facid_\n", "sql2": "SELECT count(DISTINCT FacID)\nFROM Faculty_participates_in", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0004", "sql1": "\nSELECT rank,\n       fname,\n       lname\nFROM faculty\nORDER BY rank\n", "sql2": "SELECT rank,\n       Fname,\n       Lname\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0012", "sql1": "\nSELECT DISTINCT building\nFROM\n  (SELECT LHS.facid AS facid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.rank AS rank,\n          LHS.sex AS sex,\n          LHS.phone AS phone,\n          LHS.room AS room,\n          LHS.building AS building,\n          RHS.n AS n\n   FROM faculty AS LHS\n   INNER JOIN\n     (SELECT fname,\n             room,\n             COUNT(*) AS n\n      FROM faculty\n      GROUP BY fname,\n               room) AS RHS ON (LHS.lname = RHS.fname\n                                AND LHS.room = RHS.room))\nORDER BY building\n", "sql2": "SELECT building\nFROM Faculty\nGROUP BY building\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0032", "sql1": "\nSELECT `activity_name`\nFROM\n  (SELECT `LHS`.`actid` AS `actid`,\n          `LHS`.`activity_name` AS `activity_name`,\n          `LHS`.`facid` AS `facid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`rank` AS `rank`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`phone` AS `phone`,\n          `RHS`.`room` AS `room`,\n          `RHS`.`building` AS `building`\n   FROM\n     (SELECT `LHS`.`actid` AS `actid`,\n             `LHS`.`activity_name` AS `activity_name`,\n             `RHS`.`facid` AS `facid`\n      FROM `activity` AS `LHS`\n      INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `faculty`\n      WHERE (`fname` = 'Mark'\n             AND `lname` = 'Giuliano')) AS RHS ON (LHS.facid = RHS.facid))\nORDER BY activity_name\n", "sql2": "SELECT T3.activity_name\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nJOIN Activity AS T3 ON T3.actid = T2.actid\nWHERE T1.fname = 'Mark'\n  AND T1.lname = 'Giuliano'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0024", "sql1": "\nSELECT advisor AS facid\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM student AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM faculty AS RHS\n           WHERE (LHS.fname = RHS.fname\n                  AND LHS.lname = RHS.lname) ))\n   GROUP BY advisor)\nWHERE (n >= 2)\nORDER BY facid\n", "sql2": "SELECT T1.FacID\nFROM Faculty AS T1\nJOIN Student AS T2 ON T1.FacID = T2.advisor\nGROUP BY T1.FacID\nHAVING count(*) >= 2", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0008", "sql1": "\nSELECT `phone`,\n       `room`,\n       `building`\nFROM `faculty`\nWHERE (`fname` = 'Jerry'\n       OR `lname` = 'Prince')\nORDER BY phone\n", "sql2": "SELECT phone,\n       room,\n       building\nFROM Faculty\nWHERE Fname = 'Jerry'\n  AND Lname = 'Prince'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0015", "sql1": "\nSELECT rank,\n       sex,\n       n AS count___\nFROM\n  (SELECT rank,\n          sex,\n          COUNT(*) AS n\n   FROM faculty\n   GROUP BY rank,\n            sex)\nORDER BY rank\n", "sql2": "SELECT rank,\n       sex,\n       count(*)\nFROM Faculty\nGROUP BY rank,\n         sex", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0003", "sql1": "\nSELECT DISTINCT building\nFROM faculty\nORDER BY building\n", "sql2": "SELECT DISTINCT building\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0034", "sql1": "\nSELECT activity_name,\n       n AS count___\nFROM\n  (SELECT LHS.actid AS actid,\n          LHS.n AS n,\n          RHS.activity_name AS activity_name\n   FROM\n     (SELECT actid,\n             COUNT(*) AS n\n      FROM faculty_participates_in\n      GROUP BY actid) AS LHS\n   LEFT JOIN activity AS RHS ON (LHS.actid = RHS.actid))\nORDER BY activity_name\n", "sql2": "SELECT T1.activity_name,\n       count(*)\nFROM Activity AS T1\nJOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID\nGROUP BY T1.actID", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0038", "sql1": "\nSELECT DISTINCT stuid\nFROM\n  (SELECT *\n   FROM participates_in AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM student\n           WHERE (age < 20)) AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Participates_in INTERSECT\nSELECT StuID\nFROM Student\nWHERE age < 20", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0002", "sql1": "\nSELECT DISTINCT rank\nFROM faculty\nORDER BY rank\n", "sql2": "SELECT DISTINCT rank\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0014", "sql1": "\nSELECT rank,\n       n AS count___\nFROM\n  (SELECT rank,\n          COUNT(*) AS n\n   FROM faculty\n   GROUP BY rank)\nORDER BY rank\n", "sql2": "SELECT rank,\n       count(*)\nFROM Faculty\nGROUP BY rank", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0043", "sql1": "\nSELECT DISTINCT `lname`\nFROM\n  (SELECT `LHS`.`actid` AS `actid`,\n          `LHS`.`activity_name` AS `activity_name`,\n          `LHS`.`facid` AS `facid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`rank` AS `rank`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`phone` AS `phone`,\n          `RHS`.`room` AS `room`,\n          `RHS`.`building` AS `building`\n   FROM\n     (SELECT `LHS`.`actid` AS `actid`,\n             `LHS`.`activity_name` AS `activity_name`,\n             `RHS`.`facid` AS `facid`\n      FROM `activity` AS `LHS`\n      INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`\n   INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`))\nWHERE (`activity_name` = 'Canoeing'\n       OR `activity_name` != 'Kayaking')\nORDER BY lname\n", "sql2": "SELECT T1.lname\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nJOIN activity AS T3 ON T2.actid = T2.actid\nWHERE T3.activity_name = 'Canoeing' INTERSECT\n  SELECT T1.lname\n  FROM Faculty AS T1\n  JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\n  JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM faculty\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0017", "sql1": "\nSELECT `sex`,\n       `n` AS `count___`\nFROM\n  (SELECT `rank`,\n          `sex`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `faculty`\n      WHERE (`rank` = 'AsstProf'))\n   GROUP BY rank,\n            sex)\nORDER BY sex\n", "sql2": "SELECT sex,\n       count(*)\nFROM Faculty\nWHERE rank = 'AsstProf'\nGROUP BY sex", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0037", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM participates_in AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Participates_in", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0041", "sql1": "\nSELECT DISTINCT `lname`\nFROM\n  (SELECT `LHS`.`actid` AS `actid`,\n          `LHS`.`activity_name` AS `activity_name`,\n          `LHS`.`facid` AS `facid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`rank` AS `rank`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`phone` AS `phone`,\n          `RHS`.`room` AS `room`,\n          `RHS`.`building` AS `building`\n   FROM\n     (SELECT `LHS`.`actid` AS `actid`,\n             `LHS`.`activity_name` AS `activity_name`,\n             `RHS`.`facid` AS `facid`\n      FROM `activity` AS `LHS`\n      INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`\n   INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`))\nWHERE (`activity_name` = 'Canoeing'\n       OR `activity_name` != 'Kayaking')\nORDER BY lname\n", "sql2": "SELECT DISTINCT T1.lname\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nJOIN activity AS T3 ON T2.actid = T2.actid\nWHERE T3.activity_name = 'Canoeing'\n  OR T3.activity_name = 'Kayaking'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0027", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM activity\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Activity", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0007", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `sex`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `faculty`\n      WHERE (`sex` = 'F'\n             AND `rank` = 'Professor')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty\nWHERE Sex = 'F'\n  AND Rank = 'Professor'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0011", "sql1": "\nSELECT building,\n       n AS count___\nFROM\n  (SELECT building,\n          COUNT(*) AS n\n   FROM faculty\n   GROUP BY building)\nORDER BY building\n", "sql2": "SELECT building,\n       count(*)\nFROM Faculty\nGROUP BY building", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0010", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM `faculty`\nWHERE (`rank` = 'Instructor')\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM Faculty\nWHERE Rank = 'Instructor'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0006", "sql1": "\nSELECT `facid`\nFROM `faculty`\nWHERE (`sex` = 'M')\nORDER BY facid\n", "sql2": "SELECT FacID\nFROM Faculty\nWHERE Sex = 'M'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0026", "sql1": "\nSELECT activity_name\nFROM activity\nORDER BY activity_name\n", "sql2": "SELECT activity_name\nFROM Activity", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/activity_1/0030", "sql1": "\nSELECT DISTINCT facid\nFROM\n  (SELECT LHS.facid AS facid,\n          LHS.actid AS actid,\n          RHS.stuid AS stuid,\n          RHS.lname AS lname,\n          RHS.fname AS fname,\n          RHS.age AS age,\n          RHS.sex AS sex,\n          RHS.major AS major,\n          RHS.city_code AS city_code\n   FROM faculty_participates_in AS LHS\n   INNER JOIN student AS RHS ON (LHS.facid = RHS.advisor))\nORDER BY facid\n", "sql2": "SELECT FacID\nFROM Faculty_participates_in INTERSECT\nSELECT advisor\nFROM Student", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0009", "sql1": "\nSELECT DISTINCT carrier\nFROM phone\nWHERE (memory_in_g != 32\n       AND memory_in_g <= 64)\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM phone\nWHERE Memory_in_G < 32 INTERSECT\n  SELECT Carrier\n  FROM phone WHERE Memory_in_G > 64", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0005", "sql1": "\nSELECT `name`\nFROM `phone`\nWHERE (`carrier` = 'Sprint'\n       OR `carrier` = 'TMobile')\nORDER BY name\n", "sql2": "SELECT Name\nFROM phone\nWHERE Carrier = 'Sprint'\n  OR Carrier = 'TMobile'", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0004", "sql1": "\nSELECT carrier\nFROM phone\nWHERE (memory_in_g <= 32)\nORDER BY carrier\n", "sql2": "SELECT DISTINCT Carrier\nFROM phone\nWHERE Memory_in_G > 32", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0008", "sql1": "\nSELECT carrier\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT carrier,\n                name,\n                COUNT(*) AS n\n         FROM phone\n         GROUP BY carrier,\n                  name)\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT Carrier\nFROM phone\nGROUP BY Carrier\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.phone_id AS phone_id,\n          LHS.memory_in_g AS memory_in_g,\n          LHS.carrier AS carrier,\n          LHS.price AS price,\n          RHS.phone_id AS phone_id_other,\n          RHS.num_of_stock AS num_of_stock,\n          RHS.name AS name_other,\n          RHS.phone_id_other AS phone_id_other_other,\n          RHS.memory_in_g AS memory_in_g_other,\n          RHS.carrier AS carrier_other\n   FROM phone AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT LHS.market_id AS market_id,\n                LHS.phone_id AS phone_id,\n                LHS.num_of_stock AS num_of_stock,\n                RHS.name AS name,\n                RHS.phone_id AS phone_id_other,\n                RHS.memory_in_g AS memory_in_g,\n                RHS.carrier AS carrier,\n                RHS.price AS price\n         FROM phone_market AS LHS\n         CROSS JOIN phone AS RHS)\n      WHERE (phone_id <= phone_id_other\n             AND phone_id != phone_id_other)) AS RHS ON (LHS.phone_id = RHS.market_id\n                                                         AND LHS.price = RHS.price))\nORDER BY name\n", "sql2": "SELECT Name\nFROM phone\nWHERE Phone_id NOT IN\n    (SELECT Phone_ID\n     FROM phone_market)", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0003", "sql1": "\nSELECT memory_in_g,\n       carrier\nFROM phone\nORDER BY memory_in_g\n", "sql2": "SELECT Memory_in_G,\n       Carrier\nFROM phone", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0002", "sql1": "\nSELECT name\nFROM phone\nORDER BY name\n", "sql2": "SELECT Name\nFROM phone\nORDER BY Price ASC", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM phone\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM phone", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0007", "sql1": "\nSELECT carrier,\n       n AS count___\nFROM\n  (SELECT carrier,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY carrier)\nORDER BY carrier\n", "sql2": "SELECT Carrier,\n       COUNT(*)\nFROM phone\nGROUP BY Carrier", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/phone_market/0006", "sql1": "\nSELECT carrier\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM phone\n      ORDER BY memory_in_g)\n   LIMIT 1)\n", "sql2": "SELECT Carrier\nFROM phone\nORDER BY Price DESC\nLIMIT 1", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0013", "sql1": "\nSELECT investor,\n       n AS count___\nFROM\n  (SELECT investor,\n          COUNT(*) AS n\n   FROM entrepreneur\n   GROUP BY investor)\nORDER BY investor\n", "sql2": "SELECT Investor,\n       COUNT(*)\nFROM entrepreneur\nGROUP BY Investor", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0005", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT Name\nFROM People\nORDER BY Weight ASC", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0004", "sql1": "\nSELECT DISTINCT AVG(money_requested) OVER () AS avg_money_requested_\nFROM entrepreneur\nORDER BY avg_money_requested_\n", "sql2": "SELECT avg(Money_Requested)\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0012", "sql1": "\nSELECT weight\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.date_of_birth AS date_of_birth\n   FROM entrepreneur AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY weight\n", "sql2": "SELECT T2.Weight\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Money_Requested DESC", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0008", "sql1": "\nSELECT weight\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM people\n      ORDER BY height)\n   LIMIT 1)\n", "sql2": "SELECT Weight\nFROM people\nORDER BY Height ASC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0015", "sql1": "\nSELECT investor\nFROM\n  (SELECT investor,\n          COUNT(*) AS n\n   FROM entrepreneur\n   GROUP BY investor)\nWHERE (n >= 2)\nORDER BY investor\n", "sql2": "SELECT Investor\nFROM entrepreneur\nGROUP BY Investor\nHAVING COUNT(*) >= 2", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0003", "sql1": "\nSELECT company,\n       investor\nFROM entrepreneur\nORDER BY company\n", "sql2": "SELECT Company,\n       Investor\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0019", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_company_\nFROM entrepreneur\nORDER BY count_distinct_company_\n", "sql2": "SELECT count(DISTINCT Company)\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0018", "sql1": "\nSELECT investor\nFROM entrepreneur\nWHERE (money_requested >= 140000.0\n       AND money_requested != 120000.0)\nORDER BY investor\n", "sql2": "SELECT Investor\nFROM entrepreneur\nWHERE Money_Requested > 140000 INTERSECT\n  SELECT Investor\n  FROM entrepreneur WHERE Money_Requested < 120000", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0002", "sql1": "\nSELECT company\nFROM entrepreneur\nORDER BY company\n", "sql2": "SELECT Company\nFROM entrepreneur\nORDER BY Money_Requested DESC", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0014", "sql1": "\nSELECT DISTINCT investor\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          RHS.people_id AS people_id_other\n   FROM entrepreneur AS LHS\n   INNER JOIN\n     (SELECT people_id,\n             COUNT(*) AS n\n      FROM entrepreneur\n      GROUP BY people_id) AS RHS ON (LHS.people_id = RHS.n))\nORDER BY investor\n", "sql2": "SELECT Investor\nFROM entrepreneur\nGROUP BY Investor\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM entrepreneur\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM entrepreneur AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM entrepreneur)", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0020", "sql1": "\nSELECT company\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM entrepreneur AS LHS\n         WHERE EXISTS\n             (SELECT 1\n              FROM people AS RHS\n              WHERE (LHS.people_id = RHS.people_id) ))\n      ORDER BY company)\n   LIMIT 1)\n", "sql2": "SELECT T1.Company\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Height DESC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0007", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,\n          `LHS`.`people_id` AS `people_id`,\n          `LHS`.`company` AS `company`,\n          `LHS`.`money_requested` AS `money_requested`,\n          `LHS`.`investor` AS `investor`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`height` AS `height`,\n          `RHS`.`weight` AS `weight`,\n          `RHS`.`date_of_birth` AS `date_of_birth`\n   FROM\n     (SELECT *\n      FROM `entrepreneur`\n      WHERE (`investor` != 'Rachel Elnaugh')) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Investor != 'Rachel Elnaugh'", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0011", "sql1": "\nSELECT `date_of_birth`\nFROM\n  (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,\n          `LHS`.`people_id` AS `people_id`,\n          `LHS`.`company` AS `company`,\n          `LHS`.`money_requested` AS `money_requested`,\n          `LHS`.`investor` AS `investor`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`date_of_birth` AS `date_of_birth`\n   FROM\n     (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,\n             `LHS`.`people_id` AS `people_id`,\n             `LHS`.`company` AS `company`,\n             `LHS`.`money_requested` AS `money_requested`,\n             `LHS`.`investor` AS `investor`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`height` AS `height`,\n             `RHS`.`weight` AS `weight`,\n             `RHS`.`date_of_birth` AS `date_of_birth`\n      FROM `entrepreneur` AS `LHS`\n      INNER JOIN `people` AS `RHS` ON (`LHS`.`people_id` = `RHS`.`people_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `entrepreneur`\n      WHERE (`investor` = 'Simon Woodroffe'\n             OR `investor` = 'Peter Jones')) AS RHS ON (LHS.entrepreneur_id = RHS.entrepreneur_id\n                                                        AND LHS.people_id = RHS.people_id\n                                                        AND LHS.company = RHS.company\n                                                        AND LHS.money_requested = RHS.money_requested\n                                                        AND LHS.investor = RHS.investor))\nORDER BY date_of_birth\n", "sql2": "SELECT T2.Date_of_Birth\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Investor = 'Simon Woodroffe'\n  OR T1.Investor = 'Peter Jones'", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/entrepreneur/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.date_of_birth AS date_of_birth\n   FROM entrepreneur AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0009", "sql1": "\nSELECT apt_number,\n       room_count\nFROM apartments\nORDER BY apt_number\n", "sql2": "SELECT apt_number,\n       room_count\nFROM Apartments", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0013", "sql1": "\nSELECT `date_of_birth`\nFROM `guests`\nWHERE (`gender_code` = 'Male')\nORDER BY date_of_birth\n", "sql2": "SELECT date_of_birth\nFROM Guests\nWHERE gender_code = 'Male'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0005", "sql1": "\nSELECT `building_address`,\n       `building_phone`\nFROM `apartment_buildings`\nWHERE (`building_manager` = 'Brenden')\nORDER BY building_address\n", "sql2": "SELECT building_address,\n       building_phone\nFROM Apartment_Buildings\nWHERE building_manager = 'Brenden'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0029", "sql1": "\nSELECT apt_number\nFROM apartments\nORDER BY apt_number\n", "sql2": "SELECT apt_number\nFROM Apartments\nORDER BY room_count ASC", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0028", "sql1": "\nSELECT booking_status_code,\n       n AS count___\nFROM\n  (SELECT booking_status_code,\n          COUNT(*) AS n\n   FROM apartment_bookings\n   GROUP BY booking_status_code)\nORDER BY booking_status_code\n", "sql2": "SELECT booking_status_code,\n       COUNT(*)\nFROM Apartment_Bookings\nGROUP BY booking_status_code", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0004", "sql1": "\nSELECT `building_short_name`\nFROM `apartment_buildings`\nWHERE (`building_manager` = 'Emma')\nORDER BY building_short_name\n", "sql2": "SELECT building_short_name\nFROM Apartment_Buildings\nWHERE building_manager = 'Emma'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0012", "sql1": "\nSELECT guest_first_name,\n       guest_last_name\nFROM guests\nORDER BY guest_first_name\n", "sql2": "SELECT guest_first_name,\n       guest_last_name\nFROM Guests", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0032", "sql1": "\nSELECT DISTINCT apt_type_code\nFROM\n  (SELECT LHS.apt_id AS apt_id,\n          LHS.building_id AS building_id,\n          LHS.apt_type_code AS apt_type_code,\n          LHS.apt_number AS apt_number,\n          LHS.bathroom_count AS bathroom_count,\n          LHS.bedroom_count AS bedroom_count,\n          LHS.room_count AS room_count\n   FROM apartments AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM apartments\n      WHERE (room_count != 3)) AS RHS ON (LHS.apt_id = RHS.apt_id\n                                          AND LHS.building_id = RHS.building_id\n                                          AND LHS.apt_type_code = RHS.apt_type_code\n                                          AND LHS.apt_number = RHS.apt_number\n                                          AND LHS.bathroom_count = RHS.bathroom_count\n                                          AND LHS.bedroom_count = RHS.bedroom_count\n                                          AND LHS.room_count = RHS.room_count))\nORDER BY apt_type_code\n", "sql2": "SELECT apt_type_code\nFROM Apartments\nGROUP BY apt_type_code\nORDER BY avg(room_count) DESC\nLIMIT 3", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0008", "sql1": "\nSELECT meanbedroom_count AS avg_bedroom_count_\nFROM\n  (SELECT AVG(bedroom_count) AS meanbedroom_count\n   FROM apartments)\nORDER BY avg_bedroom_count_\n", "sql2": "SELECT avg(bedroom_count)\nFROM Apartments", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0003", "sql1": "\nSELECT DISTINCT building_description\nFROM apartment_buildings\nORDER BY building_description\n", "sql2": "SELECT DISTINCT building_description\nFROM Apartment_Buildings", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0023", "sql1": "\nSELECT facility_code\nFROM\n  (SELECT *\n   FROM apartment_facilities AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM apartments\n           WHERE (bedroom_count > 4)) AS RHS\n        WHERE (LHS.apt_id = RHS.apt_id) ))\nORDER BY facility_code\n", "sql2": "SELECT T1.facility_code\nFROM Apartment_Facilities AS T1\nJOIN Apartments AS T2 ON T1.apt_id = T2.apt_id\nWHERE T2.bedroom_count > 4", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0035", "sql1": "\nSELECT apt_type_code\nFROM\n  (SELECT apt_id,\n          building_id,\n          apt_type_code,\n          apt_number,\n          bedroom_count AS bathroom_count,\n          bedroom_count,\n          room_count,\n          apt_id_other,\n          building_id_other,\n          apt_type_code_other,\n          apt_number_other,\n          bedroom_count_other\n   FROM\n     (SELECT LHS.apt_id AS apt_id,\n             LHS.building_id AS building_id,\n             LHS.apt_type_code AS apt_type_code,\n             LHS.apt_number AS apt_number,\n             LHS.bathroom_count AS bathroom_count,\n             LHS.bedroom_count AS bedroom_count,\n             LHS.room_count AS room_count,\n             RHS.apt_id AS apt_id_other,\n             RHS.building_id AS building_id_other,\n             RHS.apt_type_code AS apt_type_code_other,\n             RHS.apt_number AS apt_number_other,\n             RHS.bedroom_count AS bedroom_count_other\n      FROM apartments AS LHS\n      INNER JOIN apartments AS RHS ON (LHS.bedroom_count = RHS.bathroom_count\n                                          AND LHS.room_count = RHS.room_count)))\nORDER BY apt_type_code\n", "sql2": "SELECT apt_type_code\nFROM Apartments\nWHERE bathroom_count > 1\nGROUP BY apt_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0034", "sql1": "\nSELECT apt_type_code\nFROM\n  (SELECT apt_id,\n          apt_type_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT apt_id,\n             building_id,\n             apt_type_code,\n             apt_number,\n             bedroom_count AS bathroom_count,\n             bedroom_count,\n             room_count,\n             apt_id_other,\n             building_id_other,\n             apt_type_code_other,\n             apt_number_other,\n             bedroom_count_other\n      FROM\n        (SELECT LHS.apt_id AS apt_id,\n                LHS.building_id AS building_id,\n                LHS.apt_type_code AS apt_type_code,\n                LHS.apt_number AS apt_number,\n                LHS.bathroom_count AS bathroom_count,\n                LHS.bedroom_count AS bedroom_count,\n                LHS.room_count AS room_count,\n                RHS.apt_id AS apt_id_other,\n                RHS.building_id AS building_id_other,\n                RHS.apt_type_code AS apt_type_code_other,\n                RHS.apt_number AS apt_number_other,\n                RHS.bedroom_count AS bedroom_count_other\n         FROM apartments AS LHS\n         INNER JOIN apartments AS RHS ON (LHS.bedroom_count = RHS.bathroom_count\n                                             AND LHS.room_count = RHS.room_count)))\n   GROUP BY apt_id,\n            apt_type_code)\nORDER BY apt_type_code\n", "sql2": "SELECT apt_type_code\nFROM Apartments\nGROUP BY apt_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0022", "sql1": "\nSELECT `guest_first_name`,\n       `guest_last_name`\nFROM\n  (SELECT `LHS`.`guest_id` AS `guest_id`,\n          `LHS`.`gender_code` AS `gender_code`,\n          `LHS`.`guest_first_name` AS `guest_first_name`,\n          `LHS`.`guest_last_name` AS `guest_last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`apt_booking_id` AS `apt_booking_id`,\n          `RHS`.`apt_id` AS `apt_id`,\n          `RHS`.`booking_status_code` AS `booking_status_code`,\n          `RHS`.`booking_start_date` AS `booking_start_date`,\n          `RHS`.`booking_end_date` AS `booking_end_date`\n   FROM `guests` AS `LHS`\n   INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`guest_id` = `RHS`.`guest_id`))\nWHERE (`booking_status_code` = 'Confirmed')\nORDER BY guest_first_name\n", "sql2": "SELECT T2.guest_first_name,\n       T2.guest_last_name\nFROM Apartment_Bookings AS T1\nJOIN Guests AS T2 ON T1.guest_id = T2.guest_id\nWHERE T1.booking_status_code = 'Confirmed'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0018", "sql1": "\nSELECT DISTINCT `apt_number`\nFROM\n  (SELECT `LHS`.`apt_id` AS `apt_id`,\n          `LHS`.`building_id` AS `building_id`,\n          `LHS`.`apt_type_code` AS `apt_type_code`,\n          `LHS`.`apt_number` AS `apt_number`,\n          `LHS`.`bathroom_count` AS `bathroom_count`,\n          `LHS`.`bedroom_count` AS `bedroom_count`,\n          `LHS`.`room_count` AS `room_count`,\n          `RHS`.`apt_booking_id` AS `apt_booking_id`,\n          `RHS`.`guest_id` AS `guest_id`,\n          `RHS`.`booking_status_code` AS `booking_status_code`,\n          `RHS`.`booking_start_date` AS `booking_start_date`,\n          `RHS`.`booking_end_date` AS `booking_end_date`\n   FROM `apartments` AS `LHS`\n   INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`))\nWHERE (`booking_status_code` = 'Confirmed')\nORDER BY apt_number\n", "sql2": "SELECT DISTINCT T2.apt_number\nFROM Apartment_Bookings AS T1\nJOIN Apartments AS T2 ON T1.apt_id = T2.apt_id\nWHERE T1.booking_status_code = 'Confirmed'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0002", "sql1": "\nSELECT booking_start_date,\n       booking_end_date\nFROM apartment_bookings\nORDER BY booking_start_date\n", "sql2": "SELECT booking_start_date,\n       booking_end_date\nFROM Apartment_Bookings", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM apartment_bookings\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Apartment_Bookings", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0017", "sql1": "\nSELECT `booking_status_code`\nFROM\n  (SELECT `LHS`.`apt_booking_id` AS `apt_booking_id`,\n          `LHS`.`apt_id` AS `apt_id`,\n          `LHS`.`guest_id` AS `guest_id`,\n          `LHS`.`booking_status_code` AS `booking_status_code`,\n          `LHS`.`booking_start_date` AS `booking_start_date`,\n          `LHS`.`booking_end_date` AS `booking_end_date`,\n          `RHS`.`building_id` AS `building_id`,\n          `RHS`.`apt_type_code` AS `apt_type_code`,\n          `RHS`.`apt_number` AS `apt_number`,\n          `RHS`.`bathroom_count` AS `bathroom_count`,\n          `RHS`.`bedroom_count` AS `bedroom_count`,\n          `RHS`.`room_count` AS `room_count`\n   FROM `apartment_bookings` AS `LHS`\n   LEFT JOIN `apartments` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`))\nWHERE (`apt_number` = 'Suite 634')\nORDER BY booking_status_code\n", "sql2": "SELECT T1.booking_status_code\nFROM Apartment_Bookings AS T1\nJOIN Apartments AS T2 ON T1.apt_id = T2.apt_id\nWHERE T2.apt_number = 'Suite 634'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0040", "sql1": "\nSELECT apt_number\nFROM\n  (SELECT *\n   FROM apartments AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM view_unit_status\n           WHERE (available_yn != 1)) AS RHS\n        WHERE (LHS.apt_id = RHS.apt_id) ))\nORDER BY apt_number\n", "sql2": "SELECT T1.apt_number\nFROM Apartments AS T1\nJOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id\nWHERE T2.available_yn = 0 INTERSECT\n  SELECT T1.apt_number\n  FROM Apartments AS T1\n  JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0037", "sql1": "\nSELECT gender_code,\n       n AS count___\nFROM\n  (SELECT gender_code,\n          COUNT(*) AS n\n   FROM guests\n   GROUP BY gender_code)\nORDER BY gender_code\n", "sql2": "SELECT gender_code,\n       COUNT(*)\nFROM Guests\nGROUP BY gender_code\nORDER BY COUNT(*) DESC", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0021", "sql1": "\nSELECT `booking_start_date` AS `booking_start_date___1`,\n       `booking_start_date_other` AS `booking_start_date___2`\nFROM\n  (SELECT `LHS`.`guest_id` AS `guest_id`,\n          `LHS`.`gender_code` AS `gender_code`,\n          `LHS`.`guest_first_name` AS `guest_first_name`,\n          `LHS`.`guest_last_name` AS `guest_last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`apt_booking_id` AS `apt_booking_id`,\n          `RHS`.`apt_id` AS `apt_id`,\n          `RHS`.`booking_status_code` AS `booking_status_code`,\n          `RHS`.`booking_start_date` AS `booking_start_date`,\n          `RHS`.`booking_end_date` AS `booking_end_date`,\n          `RHS`.`apt_booking_id_other` AS `apt_booking_id_other`,\n          `RHS`.`booking_status_code_other` AS `booking_status_code_other`,\n          `RHS`.`booking_start_date_other` AS `booking_start_date_other`,\n          `RHS`.`booking_end_date_other` AS `booking_end_date_other`\n   FROM `guests` AS `LHS`\n   INNER JOIN\n     (SELECT `LHS`.`apt_booking_id` AS `apt_booking_id`,\n             `LHS`.`apt_id` AS `apt_id`,\n             `LHS`.`guest_id` AS `guest_id`,\n             `LHS`.`booking_status_code` AS `booking_status_code`,\n             `LHS`.`booking_start_date` AS `booking_start_date`,\n             `LHS`.`booking_end_date` AS `booking_end_date`,\n             `RHS`.`apt_booking_id` AS `apt_booking_id_other`,\n             `RHS`.`booking_status_code` AS `booking_status_code_other`,\n             `RHS`.`booking_start_date` AS `booking_start_date_other`,\n             `RHS`.`booking_end_date` AS `booking_end_date_other`\n      FROM `apartment_bookings` AS `LHS`\n      INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`\n                                                      AND `LHS`.`guest_id` = `RHS`.`guest_id`)) AS `RHS` ON (`LHS`.`guest_id` = `RHS`.`guest_id`))\nWHERE (`gender_code` = 'Female')\nORDER BY booking_start_date___1\n", "sql2": "SELECT T1.booking_start_date,\n       T1.booking_start_date\nFROM Apartment_Bookings AS T1\nJOIN Guests AS T2 ON T1.guest_id = T2.guest_id\nWHERE T2.gender_code = 'Female'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0031", "sql1": "\nSELECT apt_type_code,\n       n AS count___\nFROM\n  (SELECT apt_type_code,\n          COUNT(*) AS n\n   FROM apartments\n   GROUP BY apt_type_code)\nORDER BY apt_type_code\n", "sql2": "SELECT apt_type_code,\n       COUNT(*)\nFROM Apartments\nGROUP BY apt_type_code\nORDER BY COUNT(*) ASC", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0027", "sql1": "\nSELECT `apt_type_code`,\n       `apt_number`\nFROM\n  (SELECT `LHS`.`apt_id` AS `apt_id`,\n          `LHS`.`building_id` AS `building_id`,\n          `LHS`.`apt_type_code` AS `apt_type_code`,\n          `LHS`.`apt_number` AS `apt_number`,\n          `LHS`.`bathroom_count` AS `bathroom_count`,\n          `LHS`.`bedroom_count` AS `bedroom_count`,\n          `LHS`.`room_count` AS `room_count`,\n          `RHS`.`building_short_name` AS `building_short_name`,\n          `RHS`.`building_full_name` AS `building_full_name`,\n          `RHS`.`building_description` AS `building_description`,\n          `RHS`.`building_address` AS `building_address`,\n          `RHS`.`building_manager` AS `building_manager`,\n          `RHS`.`building_phone` AS `building_phone`\n   FROM `apartments` AS `LHS`\n   LEFT JOIN `apartment_buildings` AS `RHS` ON (`LHS`.`building_id` = `RHS`.`building_id`))\nWHERE (`building_manager` = 'Kyle')\nORDER BY apt_type_code\n", "sql2": "SELECT T2.apt_type_code,\n       T2.apt_number\nFROM Apartment_Buildings AS T1\nJOIN Apartments AS T2 ON T1.building_id = T2.building_id\nWHERE T1.building_manager = 'Kyle'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0007", "sql1": "\nSELECT DISTINCT MIN(bathroom_count) OVER () AS min_bathroom_count_,\n                                         maxbathroom_count AS max_bathroom_count_\nFROM\n  (SELECT apt_id,\n          building_id,\n          apt_type_code,\n          apt_number,\n          bathroom_count,\n          bedroom_count,\n          room_count,\n          MAX(bathroom_count) OVER () AS maxbathroom_count\n   FROM apartments)\nORDER BY min_bathroom_count_\n", "sql2": "SELECT min(bathroom_count),\n       max(bathroom_count)\nFROM Apartments", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0011", "sql1": "\nSELECT `apt_number`\nFROM `apartments`\nWHERE (`apt_type_code` = 'Flat')\nORDER BY apt_number\n", "sql2": "SELECT apt_number\nFROM Apartments\nWHERE apt_type_code = 'Flat'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/apartment_rentals/0030", "sql1": "\nSELECT apt_number\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM apartments\n      ORDER BY apt_type_code DESC)\n   LIMIT 1)\n", "sql2": "SELECT apt_number\nFROM Apartments\nORDER BY bedroom_count DESC\nLIMIT 1", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0009", "sql1": "\nSELECT id,\n       name\nFROM\n  (SELECT id,\n          name,\n          trade_name,\n          fda_approved,\n          n,\n          id AS medicine_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.trade_name AS trade_name,\n             LHS.fda_approved AS fda_approved,\n             RHS.n AS n\n      FROM medicine AS LHS\n      INNER JOIN\n        (SELECT medicine_id,\n                COUNT(*) AS n\n         FROM medicine_enzyme_interaction\n         GROUP BY medicine_id) AS RHS ON (LHS.id = RHS.medicine_id)))\nWHERE (n >= 2)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.Name\nFROM medicine AS T1\nJOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id\nGROUP BY T1.id\nHAVING count(*) >= 2", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0013", "sql1": "\nSELECT interaction_type,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT interaction_type,\n                COUNT(*) AS n\n         FROM medicine_enzyme_interaction\n         GROUP BY interaction_type)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT interaction_type,\n       count(*)\nFROM medicine_enzyme_interaction\nGROUP BY interaction_type\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0005", "sql1": "\nSELECT `product`,\n       `chromosome`,\n       `porphyria`\nFROM `enzyme`\nWHERE (`location` = 'Cytosol')\nORDER BY product\n", "sql2": "SELECT product,\n       chromosome,\n       porphyria\nFROM enzyme\nWHERE LOCATION = 'Cytosol'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0004", "sql1": "\nSELECT DISTINCT MAX(omim) OVER () AS max_omim_\nFROM enzyme\nORDER BY max_omim_\n", "sql2": "SELECT max(OMIM)\nFROM enzyme", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0003", "sql1": "\nSELECT name,\n       LOCATION\nFROM enzyme\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION\nFROM enzyme", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0022", "sql1": "\nSELECT trade_name,\n       n AS count___\nFROM\n  (SELECT fda_approved,\n          trade_name,\n          COUNT(*) AS n\n   FROM medicine\n   GROUP BY fda_approved,\n            trade_name)\nORDER BY trade_name\n", "sql2": "SELECT trade_name,\n       count(*)\nFROM medicine\nGROUP BY trade_name", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0002", "sql1": "\nSELECT name\nFROM enzyme\nORDER BY name\n", "sql2": "SELECT name\nFROM enzyme\nORDER BY name DESC", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0014", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `fda_approved`,\n          COUNT(*) AS `n`\n   FROM `medicine`\n   GROUP BY `fda_approved`)\nWHERE (`fda_approved` = 'No')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM medicine\nWHERE FDA_approved = 'No'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM enzyme\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM enzyme", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0020", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT fda_approved) OVER () AS count_distinct_fda_approved_\nFROM medicine\nORDER BY count_distinct_fda_approved_\n", "sql2": "SELECT count(DISTINCT FDA_approved)\nFROM medicine", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0016", "sql1": "\nSELECT id,\n       trade_name\nFROM\n  (SELECT id,\n          name,\n          trade_name,\n          fda_approved,\n          n,\n          id AS medicine_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.trade_name AS trade_name,\n             LHS.fda_approved AS fda_approved,\n             RHS.n AS n\n      FROM medicine AS LHS\n      INNER JOIN\n        (SELECT medicine_id,\n                COUNT(*) AS n\n         FROM medicine_enzyme_interaction\n         GROUP BY medicine_id) AS RHS ON (LHS.id = RHS.medicine_id)))\nWHERE (n >= 3)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.trade_name\nFROM medicine AS T1\nJOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id\nGROUP BY T1.id\nHAVING COUNT(*) >= 3", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0007", "sql1": "\nSELECT `name`,\n       `trade_name`\nFROM `medicine`\nWHERE (`fda_approved` = 'Yes')\nORDER BY name\n", "sql2": "SELECT name,\n       trade_name\nFROM medicine\nWHERE FDA_approved = 'Yes'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0010", "sql1": "\nSELECT DISTINCT id,\n                name,\n                fda_approved\nFROM\n  (SELECT id,\n          name,\n          trade_name,\n          fda_approved,\n          enzyme_id,\n          interaction_type,\n          id AS medicine_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.trade_name AS trade_name,\n             LHS.fda_approved AS fda_approved,\n             RHS.enzyme_id AS enzyme_id,\n             RHS.interaction_type AS interaction_type\n      FROM medicine AS LHS\n      INNER JOIN medicine_enzyme_interaction AS RHS ON (LHS.id = RHS.medicine_id)))\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.Name,\n       T1.FDA_approved\nFROM medicine AS T1\nJOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id\nGROUP BY T1.id\nORDER BY count(*) DESC", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/medicine_enzyme_interaction/0006", "sql1": "\nSELECT `name`\nFROM `enzyme`\nWHERE (`product` != 'Heme')\nORDER BY name\n", "sql2": "SELECT name\nFROM enzyme\nWHERE product != 'Heme'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM people\n      ORDER BY age DESC)\n   LIMIT 5)\n", "sql2": "SELECT Name\nFROM People\nORDER BY Age DESC\nLIMIT 5", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0005", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT Name\nFROM People\nORDER BY Name ASC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0004", "sql1": "\nSELECT DISTINCT AVG(horizontal_bar_points) OVER () AS avg_horizontal_bar_points_\nFROM gymnast\nORDER BY avg_horizontal_bar_points_\n", "sql2": "SELECT avg(Horizontal_Bar_Points)\nFROM gymnast", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0012", "sql1": "\nSELECT DISTINCT `hometown`\nFROM\n  (SELECT `gymnast_id`,\n          `floor_exercise_points`,\n          `pommel_horse_points`,\n          `rings_points`,\n          `vault_points`,\n          `parallel_bars_points`,\n          `horizontal_bar_points`,\n          `total_points`,\n          `name`,\n          `age`,\n          `height`,\n          `hometown`,\n          `gymnast_id` AS `people_id`\n   FROM\n     (SELECT `LHS`.`gymnast_id` AS `gymnast_id`,\n             `LHS`.`floor_exercise_points` AS `floor_exercise_points`,\n             `LHS`.`pommel_horse_points` AS `pommel_horse_points`,\n             `LHS`.`rings_points` AS `rings_points`,\n             `LHS`.`vault_points` AS `vault_points`,\n             `LHS`.`parallel_bars_points` AS `parallel_bars_points`,\n             `LHS`.`horizontal_bar_points` AS `horizontal_bar_points`,\n             `LHS`.`total_points` AS `total_points`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`height` AS `height`,\n             `RHS`.`hometown` AS `hometown`\n      FROM `gymnast` AS `LHS`\n      INNER JOIN `people` AS `RHS` ON (`LHS`.`gymnast_id` = `RHS`.`people_id`)))\nWHERE (`total_points` >= '57.5')\nORDER BY hometown\n", "sql2": "SELECT DISTINCT T2.Hometown\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nWHERE T1.Total_Points > 57.5", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0008", "sql1": "\nSELECT age\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM people\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT Age\nFROM people\nORDER BY Height DESC\nLIMIT 1", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0015", "sql1": "\nSELECT DISTINCT hometown\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.height AS height,\n          LHS.hometown AS hometown,\n          RHS.rings_points AS rings_points,\n          RHS.vault_points AS vault_points\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT rings_points,\n                vault_points,\n                COUNT(*) AS n\n         FROM gymnast\n         GROUP BY rings_points,\n                  vault_points)\n      WHERE (n <= 2)) AS RHS ON (LHS.people_id = RHS.n))\nORDER BY hometown\n", "sql2": "SELECT T2.Hometown\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nGROUP BY T2.Hometown\nHAVING COUNT(*) >= 2", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0003", "sql1": "\nSELECT total_points\nFROM gymnast\nORDER BY total_points\n", "sql2": "SELECT Total_Points\nFROM gymnast\nORDER BY Floor_Exercise_Points DESC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0019", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT hometown) OVER () AS count_distinct_hometown_\nFROM people\nORDER BY count_distinct_hometown_\n", "sql2": "SELECT count(DISTINCT Hometown)\nFROM people", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0018", "sql1": "\nSELECT DISTINCT hometown\nFROM people\nWHERE (age < 23.0\n       AND age = 20.0)\nORDER BY hometown\n", "sql2": "SELECT Hometown\nFROM people\nWHERE Age > 23 INTERSECT\n  SELECT Hometown\n  FROM people WHERE Age < 20", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0002", "sql1": "\nSELECT total_points\nFROM gymnast\nORDER BY total_points\n", "sql2": "SELECT Total_Points\nFROM gymnast\nORDER BY Total_Points DESC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM gymnast\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM gymnast", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0020", "sql1": "\nSELECT age\nFROM\n  (SELECT LHS.gymnast_id AS gymnast_id,\n          LHS.floor_exercise_points AS floor_exercise_points,\n          LHS.pommel_horse_points AS pommel_horse_points,\n          LHS.rings_points AS rings_points,\n          LHS.vault_points AS vault_points,\n          LHS.parallel_bars_points AS parallel_bars_points,\n          LHS.horizontal_bar_points AS horizontal_bar_points,\n          LHS.total_points AS total_points,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.height AS height,\n          RHS.hometown AS hometown\n   FROM gymnast AS LHS\n   INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))\nORDER BY age\n", "sql2": "SELECT T2.Age\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nORDER BY T1.Total_Points DESC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0016", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.gymnast_id AS gymnast_id,\n          LHS.floor_exercise_points AS floor_exercise_points,\n          LHS.pommel_horse_points AS pommel_horse_points,\n          LHS.rings_points AS rings_points,\n          LHS.vault_points AS vault_points,\n          LHS.parallel_bars_points AS parallel_bars_points,\n          LHS.horizontal_bar_points AS horizontal_bar_points,\n          LHS.total_points AS total_points,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.height AS height,\n          RHS.hometown AS hometown\n   FROM gymnast AS LHS\n   INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nORDER BY T2.Height ASC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0007", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `gymnast_id`,\n          `floor_exercise_points`,\n          `pommel_horse_points`,\n          `rings_points`,\n          `vault_points`,\n          `parallel_bars_points`,\n          `horizontal_bar_points`,\n          `total_points`,\n          `name`,\n          `age`,\n          `height`,\n          `hometown`,\n          `gymnast_id` AS `people_id`\n   FROM\n     (SELECT `LHS`.`gymnast_id` AS `gymnast_id`,\n             `LHS`.`floor_exercise_points` AS `floor_exercise_points`,\n             `LHS`.`pommel_horse_points` AS `pommel_horse_points`,\n             `LHS`.`rings_points` AS `rings_points`,\n             `LHS`.`vault_points` AS `vault_points`,\n             `LHS`.`parallel_bars_points` AS `parallel_bars_points`,\n             `LHS`.`horizontal_bar_points` AS `horizontal_bar_points`,\n             `LHS`.`total_points` AS `total_points`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`height` AS `height`,\n             `RHS`.`hometown` AS `hometown`\n      FROM `gymnast` AS `LHS`\n      INNER JOIN `people` AS `RHS` ON (`LHS`.`gymnast_id` = `RHS`.`people_id`)))\nWHERE (`hometown` != 'Santo Domingo')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nWHERE T2.Hometown != 'Santo Domingo'", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0010", "sql1": "\nSELECT total_points\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.gymnast_id AS gymnast_id,\n                LHS.floor_exercise_points AS floor_exercise_points,\n                LHS.pommel_horse_points AS pommel_horse_points,\n                LHS.rings_points AS rings_points,\n                LHS.vault_points AS vault_points,\n                LHS.parallel_bars_points AS parallel_bars_points,\n                LHS.horizontal_bar_points AS horizontal_bar_points,\n                LHS.total_points AS total_points,\n                RHS.people_id AS people_id,\n                RHS.name AS name,\n                RHS.age AS age,\n                RHS.height AS height,\n                RHS.hometown AS hometown\n         FROM gymnast AS LHS\n         CROSS JOIN people AS RHS)\n      ORDER BY rings_points DESC)\n   LIMIT 1)\n", "sql2": "SELECT T1.Total_Points\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nORDER BY T2.Age ASC\nLIMIT 1", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/gymnast/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.gymnast_id AS gymnast_id,\n          LHS.floor_exercise_points AS floor_exercise_points,\n          LHS.pommel_horse_points AS pommel_horse_points,\n          LHS.rings_points AS rings_points,\n          LHS.vault_points AS vault_points,\n          LHS.parallel_bars_points AS parallel_bars_points,\n          LHS.horizontal_bar_points AS horizontal_bar_points,\n          LHS.total_points AS total_points,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.height AS height,\n          RHS.hometown AS hometown\n   FROM gymnast AS LHS\n   INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0009", "sql1": "\nSELECT DISTINCT classroom\nFROM list\nWHERE (grade = 5)\nORDER BY classroom\n", "sql2": "SELECT DISTINCT classroom\nFROM list\nWHERE grade = 5", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0025", "sql1": "\nSELECT `firstname`,\n       `lastname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `list`\n      WHERE (`lastname` = 'MOYER'\n             OR grade = 1)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teachers AS RHS\n        WHERE (LHS.lastname = RHS.lastname\n               AND LHS.firstname = RHS.firstname\n               AND LHS.classroom = RHS.classroom) ))\nORDER BY firstname\n", "sql2": "SELECT DISTINCT T1.firstname,\n                T1.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T1.grade = 1\nEXCEPT\nSELECT T1.firstname,\n       T1.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T2.firstname = 'OTHA'\n  AND T2.lastname = 'MOYER'", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0013", "sql1": "\nSELECT lastname\nFROM teachers\nWHERE (classroom = 109)\nORDER BY lastname\n", "sql2": "SELECT lastname\nFROM teachers\nWHERE classroom = 109", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0005", "sql1": "\nSELECT DISTINCT classroom,\n                grade\nFROM list\nORDER BY classroom\n", "sql2": "SELECT DISTINCT classroom,\n                grade\nFROM list", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0029", "sql1": "\nSELECT classroom\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT classroom,\n                grade,\n                COUNT(*) AS n\n         FROM list\n         GROUP BY classroom,\n                  grade)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT classroom\nFROM list\nGROUP BY classroom\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0028", "sql1": "\nSELECT classroom,\n       n_distinct AS count_distinct_grade_\nFROM\n  (SELECT classroom,\n          COUNT(DISTINCT grade) AS n_distinct\n   FROM list\n   GROUP BY classroom)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(DISTINCT grade)\nFROM list\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0004", "sql1": "\nSELECT firstname\nFROM list\nWHERE (classroom = 107)\nORDER BY firstname\n", "sql2": "SELECT DISTINCT firstname\nFROM list\nWHERE classroom = 107", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0012", "sql1": "\nSELECT firstname\nFROM teachers\nWHERE (classroom = 110)\nORDER BY firstname\n", "sql2": "SELECT firstname\nFROM teachers\nWHERE classroom = 110", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0032", "sql1": "\nSELECT classroom,\n       n AS count___\nFROM\n  (SELECT classroom,\n          grade,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom,\n            grade)\nWHERE (grade = 4)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(*)\nFROM list\nWHERE grade = '4'\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0008", "sql1": "\nSELECT DISTINCT classroom\nFROM list\nWHERE (grade = 4)\nORDER BY classroom\n", "sql2": "SELECT DISTINCT classroom\nFROM list\nWHERE grade = 4", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0015", "sql1": "\nSELECT firstname,\n       lastname\nFROM list\nORDER BY firstname\n", "sql2": "SELECT DISTINCT firstname,\n                lastname\nFROM list", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0003", "sql1": "\nSELECT firstname\nFROM list\nWHERE (classroom = 108)\nORDER BY firstname\n", "sql2": "SELECT firstname\nFROM list\nWHERE classroom = 108", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0034", "sql1": "\nSELECT n AS count___,\n       classroom\nFROM\n  (SELECT classroom,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       classroom\nFROM list\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0022", "sql1": "\nSELECT DISTINCT `grade` AS `count___`\nFROM\n  (SELECT `LHS`.`lastname` AS `lastname`,\n          `LHS`.`firstname` AS `firstname`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`classroom` AS `classroom`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM `list` AS `LHS`\n   INNER JOIN\n     (SELECT `classroom`,\n             COUNT(DISTINCT `firstname`) AS `n_distinct`\n      FROM `teachers`\n      WHERE (`lastname` = 'TARRING')\n      GROUP BY classroom) AS RHS ON (LHS.classroom = RHS.classroom))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T2.firstname = 'TARRING'\n  AND T2.lastname = 'LEIA'", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0002", "sql1": "\nSELECT lastname\nFROM list\nWHERE (classroom = 111)\nORDER BY lastname\n", "sql2": "SELECT lastname\nFROM list\nWHERE classroom = 111", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0014", "sql1": "\nSELECT firstname,\n       lastname\nFROM teachers\nORDER BY firstname\n", "sql2": "SELECT DISTINCT firstname,\n                lastname\nFROM teachers", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM list\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM list", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0031", "sql1": "\nSELECT classroom,\n       n AS count___\nFROM\n  (SELECT classroom,\n          grade,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom,\n            grade)\nWHERE (grade = 0)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(*)\nFROM list\nWHERE grade = '0'\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0007", "sql1": "\nSELECT DISTINCT grade\nFROM list\nWHERE (classroom = 105)\nORDER BY grade\n", "sql2": "SELECT DISTINCT grade\nFROM list\nWHERE classroom = 105", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0011", "sql1": "\nSELECT firstname\nFROM\n  (SELECT *\n   FROM teachers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM list\n           WHERE (grade != 1)) AS RHS\n        WHERE (LHS.classroom = RHS.classroom) ))\nORDER BY firstname\n", "sql2": "SELECT DISTINCT T2.firstname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE grade = 1", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0010", "sql1": "\nSELECT lastname\nFROM\n  (SELECT *\n   FROM teachers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM list\n           WHERE (grade != 5)) AS RHS\n        WHERE (LHS.classroom = RHS.classroom) ))\nORDER BY lastname\n", "sql2": "SELECT DISTINCT T2.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE grade = 5", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0006", "sql1": "\nSELECT DISTINCT grade\nFROM list\nWHERE (classroom = 103)\nORDER BY grade\n", "sql2": "SELECT DISTINCT grade\nFROM list\nWHERE classroom = 103", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0026", "sql1": "\nSELECT `lastname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `list`\n      WHERE (`lastname` = 'COVIN'\n             OR grade = 3)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teachers AS RHS\n        WHERE (LHS.lastname = RHS.lastname\n               AND LHS.firstname = RHS.firstname\n               AND LHS.classroom = RHS.classroom) ))\nORDER BY lastname\n", "sql2": "SELECT DISTINCT T1.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T1.grade = 3\n  AND T2.firstname != 'COVIN'\n  AND T2.lastname != 'JEROME'", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_1/0030", "sql1": "\nSELECT classroom,\n       n AS count___\nFROM\n  (SELECT classroom,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(*)\nFROM list\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/store_1/0009", "sql1": "\nSELECT title\nFROM albums\nORDER BY title\n", "sql2": "SELECT title\nFROM albums\nORDER BY title;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0033", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employees\n      ORDER BY first_name)\n   LIMIT 8)\n", "sql2": "SELECT first_name,\n       last_name\nFROM employees\nORDER BY hire_date ASC\nLIMIT 10;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0044", "sql1": "\nSELECT DISTINCT `title`\nFROM\n  (SELECT `id`,\n          `name`,\n          `album_id`,\n          `media_type_id`,\n          `genre_id`,\n          `composer`,\n          `milliseconds`,\n          `bytes`,\n          `unit_price`,\n          `title`,\n          `genre_id` AS `artist_id`\n   FROM\n     (SELECT `media_type_id` AS `id`,\n             `name`,\n             `album_id`,\n             `media_type_id`,\n             `genre_id`,\n             `composer`,\n             `milliseconds`,\n             `bytes`,\n             `unit_price`,\n             `title`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`album_id` AS `album_id`,\n                `LHS`.`media_type_id` AS `media_type_id`,\n                `LHS`.`genre_id` AS `genre_id`,\n                `LHS`.`composer` AS `composer`,\n                `LHS`.`milliseconds` AS `milliseconds`,\n                `LHS`.`bytes` AS `bytes`,\n                `LHS`.`unit_price` AS `unit_price`,\n                `RHS`.`title` AS `title`\n         FROM `tracks` AS `LHS`\n         INNER JOIN `albums` AS `RHS` ON (`LHS`.`media_type_id` = `RHS`.`id`\n                                             AND `LHS`.`genre_id` = `RHS`.`artist_id`))))\nWHERE (`name` != 'Balls to the Wall')\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM albums AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T2.name = 'Balls to the Wall';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0013", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `invoices`\nWHERE (`billing_city` = 'Chicago'\n       AND `billing_state` = 'IL')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM invoices\nWHERE billing_city = 'Chicago'\n  AND billing_state = 'IL';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0029", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.last_name AS last_name,\n          LHS.first_name AS first_name,\n          LHS.title AS title,\n          LHS.reports_to AS reports_to,\n          LHS.birth_date AS birth_date,\n          LHS.hire_date AS hire_date,\n          LHS.address AS address,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.country AS country,\n          LHS.postal_code AS postal_code,\n          LHS.phone AS phone,\n          LHS.fax AS fax,\n          LHS.email AS email,\n          RHS.n AS n\n   FROM employees AS LHS\n   INNER JOIN\n     (SELECT country,\n             id,\n             COUNT(*) AS n\n      FROM customers\n      GROUP BY country,\n               id) AS RHS ON (LHS.id = RHS.id\n                              AND LHS.country = RHS.country))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T1.last_name\nFROM employees AS T1\nJOIN customers AS T2 ON T1.id = T2.support_rep_id\nGROUP BY T1.id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0028", "sql1": "\nSELECT `address`\nFROM `employees`\nWHERE (`first_name` = 'Nancy'\n       AND `last_name` = 'Edwards')\nORDER BY address\n", "sql2": "SELECT address\nFROM employees\nWHERE first_name = 'Nancy'\n  AND last_name = 'Edwards';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0053", "sql1": "\nSELECT `unit_price`\nFROM `tracks`\nWHERE (`name` = 'Fast As a Shark')\nORDER BY unit_price\n", "sql2": "SELECT unit_price\nFROM tracks\nWHERE name = 'Fast As a Shark';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0012", "sql1": "\nSELECT DISTINCT SUM(`total`) OVER () AS `sum_total_`\nFROM `invoices`\nWHERE (`billing_city` = 'Chicago'\n       AND `billing_state` = 'IL')\nORDER BY sum_total_\n", "sql2": "SELECT sum(total)\nFROM invoices\nWHERE billing_city = 'Chicago'\n  AND billing_state = 'IL';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0045", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`artist_id` AS `artist_id`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`album_id` AS `album_id`,\n          `RHS`.`media_type_id` AS `media_type_id`,\n          `RHS`.`composer` AS `composer`,\n          `RHS`.`milliseconds` AS `milliseconds`,\n          `RHS`.`bytes` AS `bytes`,\n          `RHS`.`unit_price` AS `unit_price`\n   FROM\n     (SELECT *\n      FROM `albums`\n      WHERE (`title` = 'Balls to the Wall')) AS LHS\n   INNER JOIN tracks AS RHS ON (LHS.id = RHS.genre_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM albums AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T1.title = 'Balls to the Wall';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0032", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employees\n      ORDER BY birth_date DESC)\n   LIMIT 1)\n", "sql2": "SELECT first_name,\n       last_name\nFROM employees\nORDER BY birth_date DESC\nLIMIT 1;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0008", "sql1": "\nSELECT title\nFROM albums\nORDER BY title\n", "sql2": "SELECT title\nFROM albums;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0049", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`album_id` AS `album_id`,\n          `RHS`.`media_type_id` AS `media_type_id`,\n          `RHS`.`composer` AS `composer`,\n          `RHS`.`milliseconds` AS `milliseconds`,\n          `RHS`.`bytes` AS `bytes`,\n          `RHS`.`unit_price` AS `unit_price`\n   FROM\n     (SELECT *\n      FROM `genres`\n      WHERE (`name` = 'Rock'\n             OR `name` = 'Jazz')) AS LHS\n   INNER JOIN tracks AS RHS ON (LHS.id = RHS.genre_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM genres AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T1.name = 'Rock'\n  OR T1.name = 'Jazz'", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0042", "sql1": "\nSELECT `milliseconds`\nFROM `tracks`\nWHERE (`name` = 'Fast As a Shark')\nORDER BY milliseconds\n", "sql2": "SELECT milliseconds\nFROM tracks\nWHERE name = 'Fast As a Shark';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0039", "sql1": "\nSELECT name\nFROM genres\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM genres;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0019", "sql1": "\nSELECT `company`\nFROM `customers`\nWHERE (`first_name` = 'Eduardo'\n       AND `last_name` = 'Martins')\nORDER BY company\n", "sql2": "SELECT company\nFROM customers\nWHERE first_name = 'Eduardo'\n  AND last_name = 'Martins';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0023", "sql1": "\nSELECT `country`\nFROM `customers`\nWHERE (`first_name` = 'Roberto'\n       AND `last_name` = 'Almeida')\nORDER BY country\n", "sql2": "SELECT country\nFROM customers\nWHERE first_name = 'Roberto'\n  AND last_name = 'Almeida';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0034", "sql1": "\nSELECT `n` AS `count___`,\n       `city`\nFROM\n  (SELECT `city`,\n          `title`,\n          COUNT(*) AS `n`\n   FROM `employees`\n   GROUP BY `city`,\n            `title`)\nWHERE (`title` = 'IT Staff')\nORDER BY count___\n", "sql2": "SELECT count(*),\n       city\nFROM employees\nWHERE title = 'IT Staff'\nGROUP BY city", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0022", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `customers`\nWHERE (`state` = 'CA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers\nWHERE state = 'CA';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0018", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`artist_id` AS `artist_id`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM `albums` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `id`,\n                `name`,\n                COUNT(DISTINCT `name`) AS `n_distinct`\n         FROM `artists`\n         GROUP BY `id`,\n                  `name`)\n      WHERE (`name` != 'Billy Cobham')) AS RHS ON (LHS.id = RHS.id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM albums AS T1\nJOIN artists AS T2 ON T1.artist_id = T2.id\nWHERE T2.name = 'Billy Cobham';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0038", "sql1": "\nSELECT name\nFROM media_types\nORDER BY name\n", "sql2": "SELECT name\nFROM media_types;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0014", "sql1": "\nSELECT `billing_state`,\n       `n` AS `count___`\nFROM\n  (SELECT `billing_country`,\n          `billing_state`,\n          COUNT(*) AS `n`\n   FROM `invoices`\n   GROUP BY `billing_country`,\n            `billing_state`)\nWHERE (`billing_country` = 'USA')\nORDER BY billing_state\n", "sql2": "SELECT billing_state,\n       COUNT(*)\nFROM invoices\nWHERE billing_country = 'USA'\nGROUP BY billing_state;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0043", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `id`,\n          `name`,\n          `id_other`,\n          `name_other`,\n          `album_id`,\n          `media_type_id`,\n          `composer`,\n          `milliseconds`,\n          `bytes`,\n          `unit_price`,\n          `id` AS `genre_id`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`name` AS `name_other`,\n             `RHS`.`album_id` AS `album_id`,\n             `RHS`.`media_type_id` AS `media_type_id`,\n             `RHS`.`composer` AS `composer`,\n             `RHS`.`milliseconds` AS `milliseconds`,\n             `RHS`.`bytes` AS `bytes`,\n             `RHS`.`unit_price` AS `unit_price`\n      FROM `genres` AS `LHS`\n      INNER JOIN `tracks` AS `RHS` ON (`LHS`.`id` = `RHS`.`genre_id`)))\nWHERE (`name` = 'Rock')\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM genres AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T1.name = 'Rock';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0056", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          RHS.unit_price AS unit_price,\n          RHS.n AS n\n   FROM genres AS LHS\n   INNER JOIN\n     (SELECT genre_id,\n             unit_price,\n             COUNT(*) AS n\n      FROM tracks\n      GROUP BY genre_id,\n               unit_price) AS RHS ON (LHS.id = RHS.genre_id))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM genres AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nGROUP BY T1.name;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0001", "sql1": "\nSELECT billing_country,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT billing_country,\n                COUNT(*) AS n\n         FROM invoices\n         GROUP BY billing_country)\n      ORDER BY n DESC)\n   LIMIT 5)\n", "sql2": "SELECT billing_country,\n       COUNT(*)\nFROM invoices\nGROUP BY billing_country\nORDER BY count(*) DESC\nLIMIT 5;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0017", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`title` AS `title`\n   FROM\n     (SELECT *\n      FROM `artists`\n      WHERE (`name` = 'Aerosmith')) AS LHS\n   INNER JOIN albums AS RHS ON (LHS.id = RHS.artist_id))\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM albums AS T1\nJOIN artists AS T2 ON T1.artist_id = T2.id\nWHERE T2.name = 'Aerosmith';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0040", "sql1": "\nSELECT name\nFROM playlists\nORDER BY name\n", "sql2": "SELECT name\nFROM playlists;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0021", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `state`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `customers`\n      WHERE (`city` = 'Prague'))\n   GROUP BY state)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers\nWHERE city = 'Prague';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0020", "sql1": "\nSELECT `email`,\n       `phone`\nFROM `customers`\nWHERE (`first_name` = 'Astrid'\n       AND `last_name` = 'Gruber')\nORDER BY email\n", "sql2": "SELECT email,\n       phone\nFROM customers\nWHERE first_name = 'Astrid'\n  AND last_name = 'Gruber';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0041", "sql1": "\nSELECT `composer`\nFROM `tracks`\nWHERE (`name` = 'Fast As a Shark')\nORDER BY composer\n", "sql2": "SELECT composer\nFROM tracks\nWHERE name = 'Fast As a Shark';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0031", "sql1": "\nSELECT `phone`\nFROM `employees`\nWHERE (`first_name` = 'Nancy'\n       AND `last_name` = 'Edwards')\nORDER BY phone\n", "sql2": "SELECT phone\nFROM employees\nWHERE first_name = 'Nancy'\n  AND last_name = 'Edwards';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/store_1/0030", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `employees`\n      WHERE (`country` = 'Canada'))\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employees\nWHERE country = 'Canada';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/college_1/0048", "sql1": "\nSELECT DISTINCT `stu_fname`\nFROM\n  (SELECT `LHS`.`stu_num` AS `stu_num`,\n          `LHS`.`stu_lname` AS `stu_lname`,\n          `LHS`.`stu_fname` AS `stu_fname`,\n          `LHS`.`stu_init` AS `stu_init`,\n          `LHS`.`stu_dob` AS `stu_dob`,\n          `LHS`.`stu_hrs` AS `stu_hrs`,\n          `LHS`.`stu_class` AS `stu_class`,\n          `LHS`.`stu_gpa` AS `stu_gpa`,\n          `LHS`.`stu_transfer` AS `stu_transfer`,\n          `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`stu_phone` AS `stu_phone`,\n          `LHS`.`prof_num` AS `prof_num`,\n          `RHS`.`class_code` AS `class_code`,\n          `RHS`.`enroll_grade` AS `enroll_grade`\n   FROM `student` AS `LHS`\n   LEFT JOIN `enroll` AS `RHS` ON (`LHS`.`stu_num` = `RHS`.`stu_num`))\nWHERE (`enroll_grade` != 'C')\nORDER BY stu_fname\n", "sql2": "SELECT DISTINCT stu_fname\nFROM student AS T1\nJOIN enroll AS T2 ON T1.stu_num = T2.stu_num\nWHERE enroll_grade = 'C'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0009", "sql1": "\nSELECT `n` AS `count_distinct_dept_address_`\nFROM\n  (SELECT `school_code`,\n          COUNT(*) AS `n`\n   FROM `department`\n   GROUP BY `school_code`)\nWHERE (`school_code` = 'BUS')\nORDER BY count_distinct_dept_address_\n", "sql2": "SELECT count(DISTINCT dept_address)\nFROM department\nWHERE school_code = 'BUS'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0064", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT LHS.stu_num AS stu_num,\n          LHS.stu_lname AS stu_lname,\n          LHS.stu_fname AS stu_fname,\n          LHS.stu_init AS stu_init,\n          LHS.stu_dob AS stu_dob,\n          LHS.stu_hrs AS stu_hrs,\n          LHS.stu_class AS stu_class,\n          LHS.stu_gpa AS stu_gpa,\n          LHS.stu_transfer AS stu_transfer,\n          LHS.dept_code AS dept_code,\n          LHS.stu_phone AS stu_phone,\n          LHS.prof_num AS prof_num,\n          RHS.dept_name AS dept_name,\n          RHS.school_code AS school_code,\n          RHS.dept_address AS dept_address,\n          RHS.dept_extension AS dept_extension\n   FROM student AS LHS\n   INNER JOIN department AS RHS ON (LHS.stu_hrs = RHS.emp_num\n                                       AND LHS.dept_code = RHS.dept_code))\nORDER BY dept_name\n", "sql2": "SELECT T2.dept_name\nFROM student AS T1\nJOIN department AS T2 ON T1.dept_code = T2.dept_code\nORDER BY stu_gpa\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0033", "sql1": "\nSELECT sumcrs_credit AS sum_t1_crs_credit_,\n       dept_code\nFROM\n  (SELECT dept_code,\n          SUM(crs_credit) AS sumcrs_credit\n   FROM\n     (SELECT LHS.class_code AS class_code,\n             LHS.crs_code AS crs_code,\n             LHS.class_section AS class_section,\n             LHS.class_time AS class_time,\n             LHS.class_room AS class_room,\n             LHS.prof_num AS prof_num,\n             RHS.dept_code AS dept_code,\n             RHS.crs_description AS crs_description,\n             RHS.crs_credit AS crs_credit\n      FROM class AS LHS\n      INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code))\n   GROUP BY dept_code)\nORDER BY sum_t1_crs_credit_\n", "sql2": "SELECT sum(T1.crs_credit),\n       T1.dept_code\nFROM course AS T1\nJOIN CLASS AS T2 ON T1.crs_code = T2.crs_code\nGROUP BY T1.dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0044", "sql1": "\nSELECT `emp_fname`\nFROM `employee`\nWHERE (`emp_jobcode` = 'PROF')\nORDER BY emp_fname\n", "sql2": "SELECT emp_fname\nFROM employee\nWHERE emp_jobcode = 'PROF'\nORDER BY emp_dob", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0013", "sql1": "\nSELECT n AS count_distinct_dept_name_,\n       school_code\nFROM\n  (SELECT school_code,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY school_code)\nWHERE (n <= 5)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name),\n       school_code\nFROM department\nGROUP BY school_code\nHAVING count(DISTINCT dept_name) < 5", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`prof_num` AS `prof_num`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`emp_lname` AS `emp_lname`,\n          `RHS`.`emp_fname` AS `emp_fname`,\n          `RHS`.`emp_initial` AS `emp_initial`,\n          `RHS`.`emp_jobcode` AS `emp_jobcode`,\n          `RHS`.`emp_hiredate` AS `emp_hiredate`,\n          `RHS`.`emp_dob` AS `emp_dob`\n   FROM\n     (SELECT `prof_num`,\n             COUNT(*) AS `n`\n      FROM `class`\n      GROUP BY `prof_num`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `employee`\n      WHERE (`emp_lname` = 'Graztevski')) AS RHS ON (LHS.prof_num = RHS.emp_num))\nORDER BY count___\nFrom cffi callback <function _processevents at 0x7fd7a566a790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\nclass <- read_csv(\"tests-examples/spider/college_1/tables/class.csv\", skip=1, col_names=c('class_code','crs_code','class_section','class_time','class_room','prof_num'), col_types=cols(col_character(),col_character(),col_character(),col_character(),col_character(),col_integer()))\nclass <- copy_to(con, class)\nemployee <- read_csv(\"tests-examples/spider/college_1/tables/employee.csv\", skip=1, col_names=c('emp_num','emp_lname','emp_fname','emp_initial','emp_jobcode','emp_hiredate','emp_dob'), col_types=cols(col_integer(),col_character(),col_character(),col_character(),col_character(),col_datetime(),col_datetime()))\nemployee <- copy_to(con, employee)\nexpected_output <- read_csv(\"tests-examples/spider/college_1/tables/0005.csv\", skip=1, col_names=c('count___'), col_types=cols(col_integer()))\n\ndf1 <- employee %>% filter(emp_lname == 'Graztevski')\ndf2 <- class %>% group_by(prof_num) %>% summarise(n = n()) %>% ungroup()\ndf3 <- inner_join(df2, df1, by=c('prof_num' = 'emp_num'), suffix = c('', '.other'), na_matches='never') %>% mutate(emp_num = prof_num)\nout <- df3 %>% select(count___ = n) %>% arrange(count___)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`prof_num` AS `prof_num`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`emp_lname` AS `emp_lname`,\n          `RHS`.`emp_fname` AS `emp_fname`,\n          `RHS`.`emp_initial` AS `emp_initial`,\n          `RHS`.`emp_jobcode` AS `emp_jobcode`,\n          `RHS`.`emp_hiredate` AS `emp_hiredate`,\n          `RHS`.`emp_dob` AS `emp_dob`\n   FROM\n     (SELECT `prof_num`,\n             COUNT(*) AS `n`\n      FROM `class`\n      GROUP BY `prof_num`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `employee`\n      WHERE (`emp_lname` = 'Graztevski')) AS RHS ON (LHS.prof_num = RHS.emp_num))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employee AS T1\nJOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM\nWHERE T1.EMP_LNAME = 'Graztevski'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0029", "sql1": "\nSELECT n_distinct AS count_distinct_crs_code_\nFROM\n  (SELECT COUNT(DISTINCT crs_code) AS n_distinct\n   FROM class)\nORDER BY count_distinct_crs_code_\n", "sql2": "SELECT count(DISTINCT crs_code)\nFROM CLASS", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0068", "sql1": "\nSELECT `emp_fname`,\n       `prof_office`\nFROM\n  (SELECT `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`dept_name` AS `dept_name`,\n          `LHS`.`school_code` AS `school_code`,\n          `LHS`.`emp_num` AS `emp_num`,\n          `LHS`.`dept_address` AS `dept_address`,\n          `LHS`.`dept_extension` AS `dept_extension`,\n          `LHS`.`emp_lname` AS `emp_lname`,\n          `LHS`.`emp_fname` AS `emp_fname`,\n          `LHS`.`emp_initial` AS `emp_initial`,\n          `LHS`.`emp_jobcode` AS `emp_jobcode`,\n          `LHS`.`emp_hiredate` AS `emp_hiredate`,\n          `LHS`.`emp_dob` AS `emp_dob`,\n          `RHS`.`prof_office` AS `prof_office`,\n          `RHS`.`prof_extension` AS `prof_extension`,\n          `RHS`.`prof_high_degree` AS `prof_high_degree`\n   FROM\n     (SELECT `LHS`.`dept_code` AS `dept_code`,\n             `LHS`.`dept_name` AS `dept_name`,\n             `LHS`.`school_code` AS `school_code`,\n             `LHS`.`emp_num` AS `emp_num`,\n             `LHS`.`dept_address` AS `dept_address`,\n             `LHS`.`dept_extension` AS `dept_extension`,\n             `RHS`.`emp_lname` AS `emp_lname`,\n             `RHS`.`emp_fname` AS `emp_fname`,\n             `RHS`.`emp_initial` AS `emp_initial`,\n             `RHS`.`emp_jobcode` AS `emp_jobcode`,\n             `RHS`.`emp_hiredate` AS `emp_hiredate`,\n             `RHS`.`emp_dob` AS `emp_dob`\n      FROM `department` AS `LHS`\n      INNER JOIN `employee` AS `RHS` ON (`LHS`.`emp_num` = `RHS`.`emp_num`)) AS `LHS`\n   INNER JOIN `professor` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`\n                                          AND `LHS`.`emp_num` = `RHS`.`emp_num`))\nWHERE (`dept_name` = 'History'\n       AND `prof_high_degree` = 'Ph.D.')\nORDER BY emp_fname\n", "sql2": "SELECT T1.emp_fname,\n       T2.prof_office\nFROM employee AS T1\nJOIN professor AS T2 ON T1.emp_num = T2.emp_num\nJOIN department AS T3 ON T3.dept_code = T2.dept_code\nWHERE T3.dept_name = 'History'\n  AND T2.prof_high_degree = 'Ph.D.'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0069", "sql1": "\nSELECT emp_fname,\n       crs_code\nFROM\n  (SELECT LHS.class_code AS class_code,\n          LHS.crs_code AS crs_code,\n          LHS.class_section AS class_section,\n          LHS.class_time AS class_time,\n          LHS.class_room AS class_room,\n          LHS.prof_num AS prof_num,\n          RHS.emp_lname AS emp_lname,\n          RHS.emp_fname AS emp_fname,\n          RHS.emp_initial AS emp_initial,\n          RHS.emp_jobcode AS emp_jobcode,\n          RHS.emp_hiredate AS emp_hiredate,\n          RHS.emp_dob AS emp_dob\n   FROM class AS LHS\n   INNER JOIN employee AS RHS ON (LHS.prof_num = RHS.emp_num))\nORDER BY emp_fname\n", "sql2": "SELECT T2.emp_fname,\n       T1.crs_code\nFROM CLASS AS T1\nJOIN employee AS T2 ON T1.prof_num = T2.emp_num", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0028", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT class_code) OVER () AS count_distinct_class_code_\nFROM class\nORDER BY count_distinct_class_code_\n", "sql2": "SELECT count(DISTINCT class_code)\nFROM CLASS", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0004", "sql1": "\nSELECT DISTINCT `emp_fname`,\n                `emp_dob`\nFROM\n  (SELECT `class_code`,\n          `crs_code`,\n          `class_section`,\n          `class_time`,\n          `class_room`,\n          `prof_num`,\n          `emp_lname`,\n          `emp_fname`,\n          `emp_initial`,\n          `emp_jobcode`,\n          `emp_hiredate`,\n          `emp_dob`,\n          `prof_num` AS `emp_num`\n   FROM\n     (SELECT `LHS`.`class_code` AS `class_code`,\n             `LHS`.`crs_code` AS `crs_code`,\n             `LHS`.`class_section` AS `class_section`,\n             `LHS`.`class_time` AS `class_time`,\n             `LHS`.`class_room` AS `class_room`,\n             `LHS`.`prof_num` AS `prof_num`,\n             `RHS`.`emp_lname` AS `emp_lname`,\n             `RHS`.`emp_fname` AS `emp_fname`,\n             `RHS`.`emp_initial` AS `emp_initial`,\n             `RHS`.`emp_jobcode` AS `emp_jobcode`,\n             `RHS`.`emp_hiredate` AS `emp_hiredate`,\n             `RHS`.`emp_dob` AS `emp_dob`\n      FROM `class` AS `LHS`\n      INNER JOIN `employee` AS `RHS` ON (`LHS`.`prof_num` = `RHS`.`emp_num`)))\nWHERE (`crs_code` = 'ACCT-211')\nORDER BY emp_fname\n", "sql2": "SELECT DISTINCT T1.EMP_FNAME,\n                T1.EMP_DOB\nFROM employee AS T1\nJOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM\nWHERE CRS_CODE = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0012", "sql1": "\nSELECT n AS count_distinct_dept_name_,\n       school_code\nFROM\n  (SELECT school_code,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY school_code)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name),\n       school_code\nFROM department\nGROUP BY school_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0032", "sql1": "\nSELECT `n` AS `count_distinct_class_section_`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `class`\n      WHERE (`crs_code` = 'ACCT-211')))\nORDER BY count_distinct_class_section_\n", "sql2": "SELECT count(DISTINCT class_section)\nFROM CLASS\nWHERE crs_code = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0024", "sql1": "\nSELECT sumstu_hrs AS sum_stu_hrs_,\n       dept_code\nFROM\n  (SELECT dept_code,\n          SUM(stu_hrs) AS sumstu_hrs\n   FROM student\n   GROUP BY dept_code)\nORDER BY sum_stu_hrs_\n", "sql2": "SELECT sum(stu_hrs),\n       dept_code\nFROM student\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0008", "sql1": "\nSELECT `dept_address`\nFROM `department`\nWHERE (`dept_name` = 'History')\nORDER BY dept_address\n", "sql2": "SELECT dept_address\nFROM department\nWHERE dept_name = 'History'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0049", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT LHS.dept_code AS dept_code,\n          LHS.dept_name AS dept_name,\n          LHS.school_code AS school_code,\n          LHS.emp_num AS emp_num,\n          LHS.dept_address AS dept_address,\n          LHS.dept_extension AS dept_extension,\n          RHS.emp_num AS emp_num_other,\n          RHS.n AS n\n   FROM department AS LHS\n   INNER JOIN\n     (SELECT emp_num,\n             prof_extension,\n             COUNT(*) AS n\n      FROM professor\n      GROUP BY emp_num,\n               prof_extension) AS RHS ON (LHS.dept_extension = RHS.prof_extension))\nORDER BY dept_name\n", "sql2": "SELECT T2.dept_name\nFROM professor AS T1\nJOIN department AS T2 ON T1.dept_code = T2.dept_code\nGROUP BY T1.dept_code\nORDER BY count(*)\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0042", "sql1": "\nSELECT dept_name\nFROM department\nORDER BY dept_name\n", "sql2": "SELECT dept_name\nFROM department\nORDER BY dept_name", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0015", "sql1": "\nSELECT sumcrs_credit AS sum_crs_credit_,\n       dept_code\nFROM\n  (SELECT dept_code,\n          SUM(crs_credit) AS sumcrs_credit\n   FROM course\n   GROUP BY dept_code)\nORDER BY sum_crs_credit_\n", "sql2": "SELECT sum(crs_credit),\n       dept_code\nFROM course\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0039", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `prof_high_degree`,\n          COUNT(*) AS `n`\n   FROM `professor`\n   GROUP BY `prof_high_degree`)\nWHERE (`prof_high_degree` = 'Ph.D.')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM professor\nWHERE prof_high_degree = 'Ph.D.'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0058", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `professor`\n      WHERE (`prof_high_degree` = 'Ph.D.'\n             OR `prof_high_degree` != 'MA')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM professor\nWHERE prof_high_degree = 'Ph.D.'\n  OR prof_high_degree = 'MA'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0023", "sql1": "\nSELECT n AS count___,\n       dept_code\nFROM\n  (SELECT dept_code,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY dept_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_code\nFROM student\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0074", "sql1": "\nSELECT `stu_fname`,\n       `stu_lname`\nFROM\n  (SELECT `LHS`.`class_code` AS `class_code`,\n          `LHS`.`stu_num` AS `stu_num`,\n          `LHS`.`enroll_grade` AS `enroll_grade`,\n          `RHS`.`stu_lname` AS `stu_lname`,\n          `RHS`.`stu_fname` AS `stu_fname`,\n          `RHS`.`stu_init` AS `stu_init`,\n          `RHS`.`stu_dob` AS `stu_dob`,\n          `RHS`.`stu_hrs` AS `stu_hrs`,\n          `RHS`.`stu_class` AS `stu_class`,\n          `RHS`.`stu_gpa` AS `stu_gpa`,\n          `RHS`.`stu_transfer` AS `stu_transfer`,\n          `RHS`.`dept_code` AS `dept_code`,\n          `RHS`.`stu_phone` AS `stu_phone`,\n          `RHS`.`prof_num` AS `prof_num`\n   FROM `enroll` AS `LHS`\n   INNER JOIN `student` AS `RHS` ON (`LHS`.`stu_num` = `RHS`.`stu_num`))\nWHERE (`enroll_grade` = 'C'\n       OR `enroll_grade` = 'A')\nORDER BY stu_fname\n", "sql2": "SELECT T1.stu_fname,\n       T1.stu_lname\nFROM student AS T1\nJOIN enroll AS T2 ON T1.stu_num = T2.stu_num\nWHERE T2.enroll_grade = 'C'\n  OR T2.enroll_grade = 'A'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0035", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `class`\n      WHERE (`crs_code` != 'ACCT-211')) AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM enroll AS RHS\n        WHERE (LHS.class_code = RHS.class_code) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CLASS AS T1\nJOIN enroll AS T2 ON T1.class_code = T2.class_code\nWHERE T1.crs_code = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0022", "sql1": "\nSELECT `n` AS `count___`,\n       `dept_code`\nFROM\n  (SELECT `dept_code`,\n          `prof_high_degree`,\n          COUNT(*) AS `n`\n   FROM `professor`\n   GROUP BY `dept_code`,\n            `prof_high_degree`)\nWHERE (`prof_high_degree` = 'Ph.D.')\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_code\nFROM professor\nWHERE prof_high_degree = 'Ph.D.'\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0018", "sql1": "\nSELECT DISTINCT n AS count___,\n                school_code\nFROM\n  (SELECT LHS.crs_code AS crs_code,\n          LHS.dept_code AS dept_code,\n          LHS.crs_description AS crs_description,\n          LHS.crs_credit AS crs_credit,\n          LHS.dept_name AS dept_name,\n          LHS.school_code AS school_code,\n          LHS.emp_num AS emp_num,\n          LHS.dept_address AS dept_address,\n          LHS.dept_extension AS dept_extension,\n          RHS.class_code AS class_code,\n          RHS.class_section AS class_section,\n          RHS.class_time AS class_time,\n          RHS.class_room AS class_room,\n          RHS.prof_num AS prof_num,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.crs_code AS crs_code,\n             LHS.dept_code AS dept_code,\n             LHS.crs_description AS crs_description,\n             LHS.crs_credit AS crs_credit,\n             RHS.dept_name AS dept_name,\n             RHS.school_code AS school_code,\n             RHS.emp_num AS emp_num,\n             RHS.dept_address AS dept_address,\n             RHS.dept_extension AS dept_extension\n      FROM course AS LHS\n      INNER JOIN department AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS\n   INNER JOIN\n     (SELECT class_code,\n             crs_code,\n             class_section,\n             class_time,\n             class_room,\n             prof_num,\n             COUNT(*) OVER () AS n\n      FROM class) AS RHS ON (LHS.crs_code = RHS.crs_code))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T3.school_code\nFROM CLASS AS T1\nJOIN course AS T2 ON T1.crs_code = T2.crs_code\nJOIN department AS T3 ON T2.dept_code = T3.dept_code\nGROUP BY T3.school_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0038", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employee\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employee", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0055", "sql1": "\nSELECT `emp_lname`,\n       `emp_hiredate`\nFROM\n  (SELECT `LHS`.`emp_num` AS `emp_num`,\n          `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`prof_office` AS `prof_office`,\n          `LHS`.`prof_extension` AS `prof_extension`,\n          `LHS`.`prof_high_degree` AS `prof_high_degree`,\n          `RHS`.`emp_lname` AS `emp_lname`,\n          `RHS`.`emp_fname` AS `emp_fname`,\n          `RHS`.`emp_initial` AS `emp_initial`,\n          `RHS`.`emp_jobcode` AS `emp_jobcode`,\n          `RHS`.`emp_hiredate` AS `emp_hiredate`,\n          `RHS`.`emp_dob` AS `emp_dob`\n   FROM\n     (SELECT *\n      FROM `professor`\n      WHERE (`prof_office` = 'DRE 102')) AS LHS\n   LEFT JOIN employee AS RHS ON (LHS.emp_num = RHS.emp_num))\nORDER BY emp_lname\n", "sql2": "SELECT T1.emp_lname,\n       T1.emp_hiredate\nFROM employee AS T1\nJOIN professor AS T2 ON T1.emp_num = T2.emp_num\nWHERE T2.prof_office = 'DRE 102'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0002", "sql1": "\nSELECT `n_distinct` AS `count_distinct_prof_num_`\nFROM\n  (SELECT COUNT(DISTINCT `prof_num`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `class`\n      WHERE (`crs_code` = 'ACCT-211')))\nORDER BY count_distinct_prof_num_\n", "sql2": "SELECT count(DISTINCT PROF_NUM)\nFROM CLASS\nWHERE CRS_CODE = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0014", "sql1": "\nSELECT n AS count___,\n       crs_code\nFROM\n  (SELECT crs_code,\n          COUNT(*) AS n\n   FROM class\n   GROUP BY crs_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       crs_code\nFROM CLASS\nGROUP BY crs_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0043", "sql1": "\nSELECT `class_code`\nFROM `class`\nWHERE (`class_room` = 'KLR209')\nORDER BY class_code\n", "sql2": "SELECT class_code\nFROM CLASS\nWHERE class_room = 'KLR209'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0017", "sql1": "\nSELECT n AS count___,\n       dept_code\nFROM\n  (SELECT dept_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.class_code AS class_code,\n             LHS.crs_code AS crs_code,\n             LHS.class_section AS class_section,\n             LHS.class_time AS class_time,\n             LHS.class_room AS class_room,\n             LHS.prof_num AS prof_num,\n             RHS.dept_code AS dept_code,\n             RHS.crs_description AS crs_description,\n             RHS.crs_credit AS crs_credit\n      FROM class AS LHS\n      INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code))\n   GROUP BY dept_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_code\nFROM CLASS AS T1\nJOIN course AS T2 ON T1.crs_code = T2.crs_code\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0040", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `dept_address`,\n          `emp_num`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`class_code` AS `class_code`,\n                `LHS`.`crs_code` AS `crs_code`,\n                `LHS`.`class_section` AS `class_section`,\n                `LHS`.`class_time` AS `class_time`,\n                `LHS`.`class_room` AS `class_room`,\n                `LHS`.`prof_num` AS `prof_num`,\n                `LHS`.`dept_code` AS `dept_code`,\n                `LHS`.`crs_description` AS `crs_description`,\n                `LHS`.`crs_credit` AS `crs_credit`,\n                `LHS`.`dept_name` AS `dept_name`,\n                `LHS`.`school_code` AS `school_code`,\n                `LHS`.`emp_num` AS `emp_num`,\n                `LHS`.`dept_address` AS `dept_address`,\n                `LHS`.`dept_extension` AS `dept_extension`,\n                `RHS`.`stu_num` AS `stu_num`,\n                `RHS`.`enroll_grade` AS `enroll_grade`\n         FROM\n           (SELECT `LHS`.`class_code` AS `class_code`,\n                   `LHS`.`crs_code` AS `crs_code`,\n                   `LHS`.`class_section` AS `class_section`,\n                   `LHS`.`class_time` AS `class_time`,\n                   `LHS`.`class_room` AS `class_room`,\n                   `LHS`.`prof_num` AS `prof_num`,\n                   `LHS`.`dept_code` AS `dept_code`,\n                   `LHS`.`crs_description` AS `crs_description`,\n                   `LHS`.`crs_credit` AS `crs_credit`,\n                   `RHS`.`dept_name` AS `dept_name`,\n                   `RHS`.`school_code` AS `school_code`,\n                   `RHS`.`emp_num` AS `emp_num`,\n                   `RHS`.`dept_address` AS `dept_address`,\n                   `RHS`.`dept_extension` AS `dept_extension`\n            FROM\n              (SELECT `LHS`.`class_code` AS `class_code`,\n                      `LHS`.`crs_code` AS `crs_code`,\n                      `LHS`.`class_section` AS `class_section`,\n                      `LHS`.`class_time` AS `class_time`,\n                      `LHS`.`class_room` AS `class_room`,\n                      `LHS`.`prof_num` AS `prof_num`,\n                      `RHS`.`dept_code` AS `dept_code`,\n                      `RHS`.`crs_description` AS `crs_description`,\n                      `RHS`.`crs_credit` AS `crs_credit`\n               FROM `class` AS `LHS`\n               INNER JOIN `course` AS `RHS` ON (`LHS`.`crs_code` = `RHS`.`crs_code`)) AS `LHS`\n            INNER JOIN `department` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`)) AS `LHS`\n         INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`))\n      WHERE (`dept_name` = 'Accounting'))\n   GROUP BY dept_address,\n            emp_num)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CLASS AS T1\nJOIN enroll AS T2 ON T1.class_code = T2.class_code\nJOIN course AS T3 ON T1.crs_code = T3.crs_code\nJOIN department AS T4 ON T3.dept_code = T4.dept_code\nWHERE T4.dept_name = 'Accounting'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0060", "sql1": "\nSELECT DISTINCT `emp_fname`\nFROM\n  (SELECT `class_code`,\n          `crs_code`,\n          `class_section`,\n          `class_time`,\n          `class_room`,\n          `prof_num`,\n          `emp_lname`,\n          `emp_fname`,\n          `emp_initial`,\n          `emp_jobcode`,\n          `emp_hiredate`,\n          `emp_dob`,\n          `prof_num` AS `emp_num`\n   FROM\n     (SELECT `LHS`.`class_code` AS `class_code`,\n             `LHS`.`crs_code` AS `crs_code`,\n             `LHS`.`class_section` AS `class_section`,\n             `LHS`.`class_time` AS `class_time`,\n             `LHS`.`class_room` AS `class_room`,\n             `LHS`.`prof_num` AS `prof_num`,\n             `RHS`.`emp_lname` AS `emp_lname`,\n             `RHS`.`emp_fname` AS `emp_fname`,\n             `RHS`.`emp_initial` AS `emp_initial`,\n             `RHS`.`emp_jobcode` AS `emp_jobcode`,\n             `RHS`.`emp_hiredate` AS `emp_hiredate`,\n             `RHS`.`emp_dob` AS `emp_dob`\n      FROM `class` AS `LHS`\n      INNER JOIN `employee` AS `RHS` ON (`LHS`.`prof_num` = `RHS`.`emp_num`)))\nWHERE (`crs_code` != 'CIS-220'\n       AND `crs_code` = 'QM-261')\nORDER BY emp_fname\n", "sql2": "SELECT T1.emp_fname\nFROM employee AS T1\nJOIN CLASS AS T2 ON T1.emp_num = T2.prof_num\nWHERE crs_code = 'CIS-220' INTERSECT\n  SELECT T1.emp_fname\n  FROM employee AS T1\n  JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0020", "sql1": "\nSELECT emp_jobcode,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT emp_jobcode,\n                COUNT(*) AS n\n         FROM employee\n         GROUP BY emp_jobcode)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT emp_jobcode,\n       count(*)\nFROM employee\nGROUP BY emp_jobcode\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0077", "sql1": "\nSELECT DISTINCT `stu_lname`\nFROM\n  (SELECT `LHS`.`stu_num` AS `stu_num`,\n          `LHS`.`stu_lname` AS `stu_lname`,\n          `LHS`.`stu_fname` AS `stu_fname`,\n          `LHS`.`stu_init` AS `stu_init`,\n          `LHS`.`stu_dob` AS `stu_dob`,\n          `LHS`.`stu_hrs` AS `stu_hrs`,\n          `LHS`.`stu_class` AS `stu_class`,\n          `LHS`.`stu_gpa` AS `stu_gpa`,\n          `LHS`.`stu_transfer` AS `stu_transfer`,\n          `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`stu_phone` AS `stu_phone`,\n          `LHS`.`prof_num` AS `prof_num`,\n          `RHS`.`class_code` AS `class_code`\n   FROM `student` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `enroll`\n      WHERE (`enroll_grade` = 'A'\n             OR class_code != 10018)) AS RHS ON (LHS.stu_num = RHS.stu_num\n                                                 AND LHS.stu_init = RHS.enroll_grade))\nORDER BY stu_lname\n", "sql2": "SELECT T1.stu_lname\nFROM student AS T1\nJOIN enroll AS T2 ON T1.stu_num = T2.stu_num\nWHERE T2.enroll_grade = 'A'\n  AND T2.class_code = 10018", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0016", "sql1": "\nSELECT n AS count___,\n       class_room\nFROM\n  (SELECT class_room,\n          COUNT(*) AS n\n   FROM class\n   GROUP BY class_room)\nWHERE (n >= 2)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       class_room\nFROM CLASS\nGROUP BY class_room\nHAVING count(*) >= 2", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0031", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM `course` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `department`\n           WHERE (`dept_name` != 'Computer Info. Systems')) AS RHS\n        WHERE (LHS.dept_code = RHS.dept_code) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM department AS T1\nJOIN course AS T2 ON T1.dept_code = T2.dept_code\nWHERE dept_name = 'Computer Info. Systems'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0027", "sql1": "\nSELECT n_distinct AS count_distinct_school_code_\nFROM\n  (SELECT COUNT(DISTINCT school_code) AS n_distinct\n   FROM department)\nORDER BY count_distinct_school_code_\n", "sql2": "SELECT count(DISTINCT school_code)\nFROM department", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0007", "sql1": "\nSELECT `crs_credit`,\n       `crs_description`\nFROM `course`\nWHERE (`crs_code` = 'CIS-220')\nORDER BY crs_credit\n", "sql2": "SELECT crs_credit,\n       crs_description\nFROM course\nWHERE crs_code = 'CIS-220'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0011", "sql1": "\nSELECT `crs_credit`,\n       `crs_description`\nFROM `course`\nWHERE (`crs_code` = 'QM-261')\nORDER BY crs_credit\n", "sql2": "SELECT crs_credit,\n       crs_description\nFROM course\nWHERE crs_code = 'QM-261'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0046", "sql1": "\nSELECT emp_fname,\n       emp_lname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employee\n      ORDER BY emp_dob)\n   LIMIT 1)\n", "sql2": "SELECT emp_fname,\n       emp_lname\nFROM employee\nORDER BY emp_dob\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0010", "sql1": "\nSELECT n AS count_distinct_dept_address_,\n       school_code\nFROM\n  (SELECT school_code,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY school_code)\nORDER BY count_distinct_dept_address_\n", "sql2": "SELECT count(DISTINCT dept_address),\n       school_code\nFROM department\nGROUP BY school_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0006", "sql1": "\nSELECT `school_code`\nFROM `department`\nWHERE (`dept_name` = 'Accounting')\nORDER BY school_code\n", "sql2": "SELECT school_code\nFROM department\nWHERE dept_name = 'Accounting'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0067", "sql1": "\nSELECT DISTINCT dept_name,\n                dept_address,\n                n AS count___\nFROM\n  (SELECT LHS.dept_code AS dept_code,\n          LHS.dept_name AS dept_name,\n          LHS.school_code AS school_code,\n          LHS.emp_num AS emp_num,\n          LHS.dept_address AS dept_address,\n          LHS.dept_extension AS dept_extension,\n          LHS.stu_num AS stu_num,\n          LHS.stu_lname AS stu_lname,\n          LHS.stu_fname AS stu_fname,\n          LHS.stu_init AS stu_init,\n          LHS.stu_dob AS stu_dob,\n          LHS.stu_hrs AS stu_hrs,\n          LHS.stu_class AS stu_class,\n          LHS.stu_gpa AS stu_gpa,\n          LHS.stu_transfer AS stu_transfer,\n          LHS.stu_phone AS stu_phone,\n          LHS.prof_num AS prof_num,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.dept_code AS dept_code,\n             LHS.dept_name AS dept_name,\n             LHS.school_code AS school_code,\n             LHS.emp_num AS emp_num,\n             LHS.dept_address AS dept_address,\n             LHS.dept_extension AS dept_extension,\n             RHS.stu_num AS stu_num,\n             RHS.stu_lname AS stu_lname,\n             RHS.stu_fname AS stu_fname,\n             RHS.stu_init AS stu_init,\n             RHS.stu_dob AS stu_dob,\n             RHS.stu_hrs AS stu_hrs,\n             RHS.stu_class AS stu_class,\n             RHS.stu_gpa AS stu_gpa,\n             RHS.stu_transfer AS stu_transfer,\n             RHS.stu_phone AS stu_phone,\n             RHS.prof_num AS prof_num\n      FROM department AS LHS\n      INNER JOIN student AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS\n   INNER JOIN\n     (SELECT dept_code,\n             COUNT(*) AS n\n      FROM student\n      GROUP BY dept_code) AS RHS ON (LHS.dept_code = RHS.dept_code))\nORDER BY dept_name\n", "sql2": "SELECT T2.dept_name,\n       T2.dept_address,\n       count(*)\nFROM student AS T1\nJOIN department AS T2 ON T1.dept_code = T2.dept_code\nGROUP BY T1.dept_code\nORDER BY count(*) DESC\nLIMIT 3", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/college_1/0030", "sql1": "\nSELECT n AS count_distinct_dept_name_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM department)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name)\nFROM department", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0009", "sql1": "\nSELECT master_customer_id,\n       cmi_details\nFROM customer_master_index\nORDER BY master_customer_id\n", "sql2": "SELECT *\nFROM customer_master_index\nORDER BY cmi_details DESC", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0013", "sql1": "\nSELECT cmi_cross_ref_id\nFROM\n  (SELECT *\n   FROM cmi_cross_references AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM parking_fines AS RHS\n        WHERE (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id) ))\nORDER BY cmi_cross_ref_id\n", "sql2": "SELECT cmi_cross_ref_id\nFROM cmi_cross_references\nEXCEPT\nSELECT cmi_cross_ref_id\nFROM parking_fines", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0005", "sql1": "\nSELECT source_system_code,\n       master_customer_id,\n       council_tax_id\nFROM\n  (SELECT LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          LHS.master_customer_id AS master_customer_id,\n          LHS.source_system_code AS source_system_code,\n          RHS.council_tax_id AS council_tax_id\n   FROM cmi_cross_references AS LHS\n   INNER JOIN parking_fines AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY source_system_code\n", "sql2": "SELECT T1.source_system_code,\n       T1.master_customer_id,\n       T2.council_tax_id\nFROM CMI_Cross_References AS T1\nJOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0008", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT source_system_code) OVER () AS count_distinct_source_system_code_\nFROM cmi_cross_references\nORDER BY count_distinct_source_system_code_\n", "sql2": "SELECT count(DISTINCT source_system_code)\nFROM CMI_cross_references", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0003", "sql1": "\nSELECT cmi_cross_ref_id,\n       master_customer_id,\n       n AS count___\nFROM\n  (SELECT cmi_cross_ref_id,\n          master_customer_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.business_rates_id AS business_rates_id,\n             LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n             RHS.master_customer_id AS master_customer_id,\n             RHS.source_system_code AS source_system_code\n      FROM business_rates AS LHS\n      INNER JOIN cmi_cross_references AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\n   GROUP BY cmi_cross_ref_id,\n            master_customer_id)\nORDER BY cmi_cross_ref_id\n", "sql2": "SELECT T2.cmi_cross_ref_id,\n       T2.master_customer_id,\n       count(*)\nFROM Business_Rates AS T1\nJOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nGROUP BY T2.cmi_cross_ref_id", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0002", "sql1": "\nSELECT cmi_cross_ref_id,\n       source_system_code\nFROM\n  (SELECT LHS.council_tax_id AS council_tax_id,\n          LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          RHS.master_customer_id AS master_customer_id,\n          RHS.source_system_code AS source_system_code,\n          RHS.n AS n\n   FROM council_tax AS LHS\n   LEFT JOIN\n     (SELECT cmi_cross_ref_id,\n             master_customer_id,\n             source_system_code,\n             COUNT(*) OVER () AS n\n      FROM cmi_cross_references) AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nWHERE (n >= 1)\nORDER BY cmi_cross_ref_id\n", "sql2": "SELECT T1.cmi_cross_ref_id,\n       T1.source_system_code\nFROM CMI_Cross_References AS T1\nJOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nGROUP BY T1.cmi_cross_ref_id\nHAVING count(*) >= 1", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0001", "sql1": "\nSELECT `cmi_details`\nFROM\n  (SELECT `LHS`.`master_customer_id` AS `master_customer_id`,\n          `LHS`.`cmi_details` AS `cmi_details`,\n          `RHS`.`cmi_cross_ref_id` AS `cmi_cross_ref_id`,\n          `RHS`.`source_system_code` AS `source_system_code`\n   FROM `customer_master_index` AS `LHS`\n   INNER JOIN `cmi_cross_references` AS `RHS` ON (`LHS`.`master_customer_id` = `RHS`.`master_customer_id`))\nWHERE (`source_system_code` = 'Tax')\nORDER BY cmi_details\n", "sql2": "SELECT T1.cmi_details\nFROM Customer_Master_Index AS T1\nJOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id\nWHERE T2.source_system_code = 'Tax'", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0007", "sql1": "\nSELECT `electoral_register_id`\nFROM\n  (SELECT `LHS`.`electoral_register_id` AS `electoral_register_id`,\n          `LHS`.`cmi_cross_ref_id` AS `cmi_cross_ref_id`,\n          `RHS`.`master_customer_id` AS `master_customer_id`,\n          `RHS`.`source_system_code` AS `source_system_code`\n   FROM `electoral_register` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `cmi_cross_references`\n      WHERE (`source_system_code` = 'Electoral'\n             AND `source_system_code` != 'Tax')) AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY electoral_register_id\n", "sql2": "SELECT T1.electoral_register_id\nFROM Electoral_Register AS T1\nJOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nWHERE T2.source_system_code = 'Electoral'\n  OR T2.source_system_code = 'Tax'", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM rent_arrears\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM rent_arrears", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0010", "sql1": "\nSELECT council_tax_id,\n       cmi_cross_ref_id\nFROM parking_fines\nORDER BY council_tax_id\n", "sql2": "SELECT council_tax_id,\n       cmi_cross_ref_id\nFROM parking_fines", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/local_govt_mdm/0006", "sql1": "\nSELECT council_tax_id\nFROM\n  (SELECT LHS.master_customer_id AS master_customer_id,\n          LHS.cmi_details AS cmi_details,\n          LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          LHS.source_system_code AS source_system_code,\n          RHS.council_tax_id AS council_tax_id\n   FROM\n     (SELECT LHS.master_customer_id AS master_customer_id,\n             LHS.cmi_details AS cmi_details,\n             RHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n             RHS.source_system_code AS source_system_code\n      FROM customer_master_index AS LHS\n      INNER JOIN cmi_cross_references AS RHS ON (LHS.master_customer_id = RHS.master_customer_id)) AS LHS\n   INNER JOIN rent_arrears AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY council_tax_id\n", "sql2": "SELECT T1.council_tax_id\nFROM Rent_Arrears AS T1\nJOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nJOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id\nWHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/company_office/0009", "sql1": "\nSELECT stories\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM buildings\n      ORDER BY height DESC)\n   LIMIT 1)\n", "sql2": "SELECT Stories\nFROM buildings\nORDER BY Height DESC\nLIMIT 1", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0013", "sql1": "\nSELECT `name`\nFROM `buildings`\nWHERE (`status` = 'on-hold')\nORDER BY name\n", "sql2": "SELECT name\nFROM buildings\nWHERE Status = 'on-hold'\nORDER BY Stories ASC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0005", "sql1": "\nSELECT meanprofits_billion AS avg_profits_billion_\nFROM\n  (SELECT AVG(profits_billion) AS meanprofits_billion\n   FROM companies)\nORDER BY avg_profits_billion_\n", "sql2": "SELECT avg(Profits_billion)\nFROM Companies", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0004", "sql1": "\nSELECT name,\n       assets_billion\nFROM companies\nORDER BY name\n", "sql2": "SELECT name,\n       Assets_billion\nFROM Companies\nORDER BY name ASC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0008", "sql1": "\nSELECT name\nFROM buildings\nORDER BY name\n", "sql2": "SELECT name\nFROM buildings\nORDER BY Height DESC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0015", "sql1": "\nSELECT DISTINCT industry\nFROM companies\nORDER BY industry\n", "sql2": "SELECT Industry\nFROM Companies\nGROUP BY Industry\nORDER BY COUNT(*) DESC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0003", "sql1": "\nSELECT `name`\nFROM `companies`\nWHERE (`headquarters` != 'USA')\nORDER BY name\n", "sql2": "SELECT name\nFROM Companies\nWHERE Headquarters != 'USA'", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0019", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `companies`\nWHERE (`industry` = 'Banking'\n       OR `industry` = 'Conglomerate')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Companies\nWHERE Industry = 'Banking'\n  OR Industry = 'Conglomerate'", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0018", "sql1": "\nSELECT DISTINCT `industry`\nFROM `companies`\nWHERE (`headquarters` != 'USA'\n       OR `headquarters` = 'China')\nORDER BY industry\n", "sql2": "SELECT Industry\nFROM Companies\nWHERE Headquarters = 'USA' INTERSECT\n  SELECT Industry\n  FROM Companies WHERE Headquarters = 'China'", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0002", "sql1": "\nSELECT name\nFROM companies\nORDER BY name\n", "sql2": "SELECT name\nFROM Companies\nORDER BY Market_Value_billion DESC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0014", "sql1": "\nSELECT industry,\n       n AS count___\nFROM\n  (SELECT industry,\n          COUNT(*) AS n\n   FROM companies\n   GROUP BY industry)\nORDER BY industry\n", "sql2": "SELECT Industry,\n       COUNT(*)\nFROM Companies\nGROUP BY Industry", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM companies\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Companies", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0020", "sql1": "\nSELECT DISTINCT headquarters\nFROM\n  (SELECT LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.n AS n,\n          RHS.headquarters AS headquarters_other,\n          RHS.industry AS industry_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT headquarters,\n             industry,\n             COUNT(*) AS n\n      FROM companies\n      GROUP BY headquarters,\n               industry) AS LHS\n   CROSS JOIN\n     (SELECT headquarters,\n             industry,\n             COUNT(*) AS n\n      FROM companies\n      GROUP BY headquarters,\n               industry) AS RHS)\nWHERE (n > n_other)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM Companies\nGROUP BY Headquarters\nHAVING COUNT(*) > 2", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0016", "sql1": "\nSELECT industry\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.sales_billion AS sales_billion,\n          LHS.profits_billion AS profits_billion,\n          LHS.assets_billion AS assets_billion,\n          LHS.market_value_billion AS market_value_billion\n   FROM companies AS LHS\n   INNER JOIN\n     (SELECT profits_billion,\n             COUNT(*) AS n\n      FROM companies\n      GROUP BY profits_billion) AS RHS ON (LHS.id = RHS.n\n                                           AND LHS.profits_billion = RHS.profits_billion))\nORDER BY industry\n", "sql2": "SELECT Industry\nFROM Companies\nGROUP BY Industry\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0007", "sql1": "\nSELECT n_distinct AS count_distinct_industry_\nFROM\n  (SELECT COUNT(DISTINCT industry) AS n_distinct\n   FROM companies)\nORDER BY count_distinct_industry_\n", "sql2": "SELECT count(DISTINCT Industry)\nFROM Companies", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/company_office/0010", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.sales_billion AS sales_billion,\n          LHS.profits_billion AS profits_billion,\n          LHS.assets_billion AS assets_billion,\n          LHS.market_value_billion AS market_value_billion,\n          RHS.id AS id_other,\n          RHS.name AS name_other,\n          RHS.city AS city,\n          RHS.height AS height,\n          RHS.stories AS stories,\n          RHS.status AS status,\n          RHS.move_in_year AS move_in_year,\n          RHS.building_id AS building_id\n   FROM companies AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             city,\n             height,\n             stories,\n             status,\n             company_id,\n             move_in_year,\n             id AS building_id\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.name AS name,\n                LHS.city AS city,\n                LHS.height AS height,\n                LHS.stories AS stories,\n                LHS.status AS status,\n                RHS.company_id AS company_id,\n                RHS.move_in_year AS move_in_year\n         FROM buildings AS LHS\n         INNER JOIN office_locations AS RHS ON (LHS.id = RHS.building_id))) AS RHS ON (LHS.id = RHS.company_id))\nORDER BY name___1\n", "sql2": "SELECT T3.name,\n       T2.name\nFROM Office_locations AS T1\nJOIN buildings AS T2 ON T1.building_id = T2.id\nJOIN Companies AS T3 ON T1.company_id = T3.id", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0048", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`dormid` AS `dormid`,\n          `LHS`.`amenid` AS `amenid`,\n          `LHS`.`room_number` AS `room_number`,\n          `RHS`.`amenity_name` AS `amenity_name`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`dormid` AS `dormid`,\n             `LHS`.`amenid` AS `amenid`,\n             `RHS`.`room_number` AS `room_number`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`dormid` AS `dormid`,\n                `RHS`.`amenid` AS `amenid`\n         FROM `student` AS `LHS`\n         CROSS JOIN `has_amenity` AS `RHS`) AS `LHS`\n      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                            AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm_amenity`\n      WHERE (`amenity_name` = 'TV Lounge')) AS RHS ON (LHS.amenid = RHS.amenid))\nORDER BY fname\n", "sql2": "SELECT T1.fname,\n       T1.lname\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nWHERE T2.dormid IN\n    (SELECT T3.dormid\n     FROM has_amenity AS T3\n     JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid\n     WHERE T4.amenity_name = 'TV Lounge')", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0025", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM `student`\nWHERE (`city_code` != 'HKG')\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM student\nWHERE city_code != 'HKG'\nORDER BY age", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0005", "sql1": "\nSELECT `fname`\nFROM\n  (SELECT *\n   FROM `student`\n   WHERE (`age` >= 20\n          OR `age` >= 25))\nWHERE (`city_code` = 'PHL'\n       AND age < 25)\nORDER BY fname\n", "sql2": "SELECT fname\nFROM student\nWHERE city_code = 'PHL'\n  AND age BETWEEN 20 AND 25", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0029", "sql1": "\nSELECT n AS count___,\n       major\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       major\nFROM student\nGROUP BY major", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0004", "sql1": "\nSELECT fname\nFROM student\nWHERE (age > 20)\nORDER BY fname\n", "sql2": "SELECT fname\nFROM student\nWHERE age > 20", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0012", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT dormid) OVER () AS count_distinct_dormid_\nFROM has_amenity\nORDER BY count_distinct_dormid_\n", "sql2": "SELECT count(DISTINCT dormid)\nFROM has_amenity", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0032", "sql1": "\nSELECT n AS count___,\n       city_code\nFROM\n  (SELECT city_code,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY city_code)\nWHERE (n > 1)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       city_code\nFROM student\nGROUP BY city_code\nHAVING count(*) > 1", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0008", "sql1": "\nSELECT DISTINCT SUM(student_capacity) OVER () AS sum_student_capacity_\nFROM dorm\nORDER BY sum_student_capacity_\n", "sql2": "SELECT sum(student_capacity)\nFROM dorm", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0042", "sql1": "\nSELECT `amenity_name`\nFROM\n  (SELECT `LHS`.`amenid` AS `amenid`,\n          `LHS`.`amenity_name` AS `amenity_name`,\n          `LHS`.`dormid` AS `dormid`,\n          `RHS`.`dorm_name` AS `dorm_name`,\n          `RHS`.`student_capacity` AS `student_capacity`,\n          `RHS`.`gender` AS `gender`\n   FROM\n     (SELECT `LHS`.`amenid` AS `amenid`,\n             `LHS`.`amenity_name` AS `amenity_name`,\n             `RHS`.`dormid` AS `dormid`\n      FROM `dorm_amenity` AS `LHS`\n      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm`\n      WHERE (`dorm_name` = 'Smith Hall')) AS RHS ON (LHS.dormid = RHS.dormid))\nORDER BY amenity_name\n", "sql2": "SELECT T3.amenity_name\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nWHERE T1.dorm_name = 'Smith Hall'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0035", "sql1": "\nSELECT meanage AS avg_t1_age_,\n       dorm_name\nFROM\n  (SELECT dorm_name,\n          gender,\n          AVG(age) AS meanage\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             LHS.dormid AS dormid,\n             LHS.dorm_name AS dorm_name,\n             LHS.student_capacity AS student_capacity,\n             LHS.gender AS gender,\n             RHS.room_number AS room_number\n      FROM\n        (SELECT LHS.stuid AS stuid,\n                LHS.lname AS lname,\n                LHS.fname AS fname,\n                LHS.age AS age,\n                LHS.sex AS sex,\n                LHS.major AS major,\n                LHS.advisor AS advisor,\n                LHS.city_code AS city_code,\n                RHS.dormid AS dormid,\n                RHS.dorm_name AS dorm_name,\n                RHS.student_capacity AS student_capacity,\n                RHS.gender AS gender\n         FROM student AS LHS\n         CROSS JOIN dorm AS RHS) AS LHS\n      INNER JOIN lives_in AS RHS ON (LHS.stuid = RHS.stuid\n                                        AND LHS.dormid = RHS.dormid))\n   GROUP BY dorm_name,\n            gender)\nORDER BY avg_t1_age_\n", "sql2": "SELECT avg(T1.age),\n       T3.dorm_name\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nJOIN dorm AS T3 ON T3.dormid = T2.dormid\nGROUP BY T3.dorm_name", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0022", "sql1": "\nSELECT amenity_name\nFROM dorm_amenity\nORDER BY amenity_name\n", "sql2": "SELECT amenity_name\nFROM dorm_amenity\nORDER BY amenity_name", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0038", "sql1": "\nSELECT `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`dormid` AS `dormid`,\n          `LHS`.`dorm_name` AS `dorm_name`,\n          `LHS`.`student_capacity` AS `student_capacity`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`room_number` AS `room_number`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`dormid` AS `dormid`,\n             `LHS`.`dorm_name` AS `dorm_name`,\n             `LHS`.`student_capacity` AS `student_capacity`,\n             `LHS`.`gender` AS `gender`,\n             `RHS`.`room_number` AS `room_number`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`dormid` AS `dormid`,\n                `RHS`.`dorm_name` AS `dorm_name`,\n                `RHS`.`student_capacity` AS `student_capacity`,\n                `RHS`.`gender` AS `gender`\n         FROM `student` AS `LHS`\n         CROSS JOIN `dorm` AS `RHS`) AS `LHS`\n      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                            AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm`\n      WHERE (`dorm_name` = 'Smith Hall')) AS RHS ON (LHS.dormid = RHS.dormid\n                                                     AND LHS.dorm_name = RHS.dorm_name\n                                                     AND LHS.student_capacity = RHS.student_capacity\n                                                     AND LHS.gender = RHS.gender))\nORDER BY fname\n", "sql2": "SELECT T1.fname\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nJOIN dorm AS T3 ON T3.dormid = T2.dormid\nWHERE T3.dorm_name = 'Smith Hall'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0002", "sql1": "\nSELECT dorm_name\nFROM dorm\nWHERE (student_capacity >= 300)\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name\nFROM dorm\nWHERE student_capacity > 300", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0014", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT gender) OVER () AS count_distinct_gender_\nFROM dorm\nORDER BY count_distinct_gender_\n", "sql2": "SELECT count(DISTINCT gender)\nFROM dorm", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0001", "sql1": "\nSELECT `dorm_name`\nFROM `dorm`\nWHERE (`gender` = 'F')\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name\nFROM dorm\nWHERE gender = 'F'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0021", "sql1": "\nSELECT dorm_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM dorm\n      ORDER BY dormid DESC)\n   LIMIT 1)\n", "sql2": "SELECT dorm_name\nFROM dorm\nORDER BY student_capacity DESC\nLIMIT 1", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0020", "sql1": "\nSELECT DISTINCT `lname`\nFROM\n  (SELECT *\n   FROM `student`\n   WHERE (`sex` != 'F'\n          OR `city_code` = 'BAL'))\nWHERE (`sex` != 'M'\n       OR age < 20)\nORDER BY lname\n", "sql2": "SELECT lname\nFROM student\nWHERE sex = 'F'\n  AND city_code = 'BAL'\nUNION\nSELECT lname\nFROM student\nWHERE sex = 'M'\n  AND age < 20", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0016", "sql1": "\nSELECT dorm_name,\n       gender\nFROM dorm\nWHERE (student_capacity >= 300\n       OR student_capacity < 100)\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name,\n       gender\nFROM dorm\nWHERE student_capacity > 300\n  OR student_capacity < 100", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0007", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM dorm_amenity\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM dorm_amenity", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0011", "sql1": "\nSELECT DISTINCT `meanstudent_capacity` AS `avg_student_capacity_`,\n                SUM(`student_capacity`) OVER () AS `sum_student_capacity_`\nFROM\n  (SELECT `dormid`,\n          `dorm_name`,\n          `student_capacity`,\n          `gender`,\n          AVG(`student_capacity`) OVER () AS `meanstudent_capacity`\n   FROM\n     (SELECT *\n      FROM `dorm`\n      WHERE (`gender` = 'X')))\nORDER BY avg_student_capacity_\n", "sql2": "SELECT avg(student_capacity),\n       sum(student_capacity)\nFROM dorm\nWHERE gender = 'X'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0046", "sql1": "\nSELECT dorm_name,\n       student_capacity\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.dormid AS dormid,\n                LHS.dorm_name AS dorm_name,\n                LHS.student_capacity AS student_capacity,\n                LHS.gender AS gender,\n                LHS.amenid AS amenid,\n                LHS.amenity_name AS amenity_name,\n                RHS.n AS n\n         FROM\n           (SELECT LHS.dormid AS dormid,\n                   LHS.dorm_name AS dorm_name,\n                   LHS.student_capacity AS student_capacity,\n                   LHS.gender AS gender,\n                   LHS.amenid AS amenid,\n                   LHS.amenity_name AS amenity_name\n            FROM\n              (SELECT LHS.dormid AS dormid,\n                      LHS.dorm_name AS dorm_name,\n                      LHS.student_capacity AS student_capacity,\n                      LHS.gender AS gender,\n                      RHS.amenid AS amenid,\n                      RHS.amenity_name AS amenity_name\n               FROM dorm AS LHS\n               CROSS JOIN dorm_amenity AS RHS) AS LHS\n            INNER JOIN has_amenity AS RHS ON (LHS.dormid = RHS.dormid\n                                                 AND LHS.amenid = RHS.amenid)) AS LHS\n         INNER JOIN\n           (SELECT dorm_name,\n                   gender,\n                   COUNT(*) AS n\n            FROM dorm\n            GROUP BY dorm_name,\n                     gender) AS RHS ON (LHS.dorm_name = RHS.dorm_name\n                                        AND LHS.gender = RHS.gender))\n      ORDER BY student_capacity)\n   LIMIT 1)\n", "sql2": "SELECT T1.dorm_name,\n       T1.student_capacity\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nGROUP BY T2.dormid\nORDER BY count(*)\nLIMIT 1", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0047", "sql1": "\nSELECT `dorm_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`dormid` AS `dormid`,\n                `LHS`.`dorm_name` AS `dorm_name`,\n                `LHS`.`student_capacity` AS `student_capacity`,\n                `LHS`.`gender` AS `gender`,\n                `RHS`.`amenid` AS `amenid`,\n                `RHS`.`amenity_name` AS `amenity_name`\n         FROM `dorm` AS `LHS`\n         CROSS JOIN `dorm_amenity` AS `RHS`)\n      WHERE (`amenity_name` = 'TV Lounge')) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM has_amenity AS RHS\n        WHERE (LHS.amenid = RHS.amenid\n               AND LHS.dormid = RHS.dormid) ))\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name\nFROM dorm\nEXCEPT\nSELECT T1.dorm_name\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nWHERE T3.amenity_name = 'TV Lounge'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0010", "sql1": "\nSELECT meanage AS avg_age_,\n       city_code\nFROM\n  (SELECT city_code,\n          AVG(age) AS meanage\n   FROM student\n   GROUP BY city_code)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       city_code\nFROM student\nGROUP BY city_code", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/dorm_1/0006", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM dorm\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM dorm", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0009", "sql1": "\nSELECT n_distinct AS count_distinct_product_type_code_\nFROM\n  (SELECT COUNT(DISTINCT product_type_code) AS n_distinct\n   FROM products_for_hire)\nORDER BY count_distinct_product_type_code_\n", "sql2": "SELECT count(DISTINCT product_type_code)\nFROM products_for_hire", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0013", "sql1": "\nSELECT DISTINCT payment_type_code\nFROM payments\nORDER BY payment_type_code\n", "sql2": "SELECT DISTINCT payment_type_code\nFROM payments", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0005", "sql1": "\nSELECT product_id\nFROM\n  (SELECT product_id,\n          COUNT(*) AS n\n   FROM products_booked\n   GROUP BY product_id)\nWHERE (n = 3)\nORDER BY product_id\n", "sql2": "SELECT product_id\nFROM products_booked\nGROUP BY product_id\nHAVING count(*) = 3", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0008", "sql1": "\nSELECT product_name\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product_type_code AS product_type_code,\n          LHS.daily_hire_cost AS daily_hire_cost,\n          LHS.product_name AS product_name,\n          LHS.product_description AS product_description,\n          RHS.booking_id AS booking_id,\n          RHS.status_date AS status_date,\n          RHS.available_yn AS available_yn\n   FROM products_for_hire AS LHS\n   INNER JOIN view_product_availability AS RHS ON (LHS.product_id = RHS.product_id))\nWHERE (available_yn = 1)\nORDER BY product_name\n", "sql2": "SELECT T2.product_name\nFROM view_product_availability AS T1\nJOIN products_for_hire AS T2 ON T1.product_id = T2.product_id\nWHERE T1.available_yn = 1", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0018", "sql1": "\nSELECT `product_name`,\n       `product_description`\nFROM `products_for_hire`\nWHERE (`product_type_code` = 'Cutlery'\n       AND daily_hire_cost <= 20.0)\nORDER BY product_name\n", "sql2": "SELECT product_name,\n       product_description\nFROM products_for_hire\nWHERE product_type_code = 'Cutlery'\n  AND daily_hire_cost < 20", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0001", "sql1": "\nSELECT good_or_bad_customer\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.coupon_id AS coupon_id,\n          LHS.good_or_bad_customer AS good_or_bad_customer,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.gender_mf AS gender_mf,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.date_last_hire AS date_last_hire,\n          RHS.date_issued AS date_issued,\n          RHS.coupon_amount AS coupon_amount\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM discount_coupons\n      WHERE (coupon_amount = 500.0)) AS RHS ON (LHS.coupon_id = RHS.coupon_id))\nORDER BY good_or_bad_customer\n", "sql2": "SELECT T1.good_or_bad_customer\nFROM customers AS T1\nJOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id\nWHERE T2.coupon_amount = 500", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0017", "sql1": "\nSELECT `payment_date`\nFROM `payments`\nWHERE (`payment_type_code` = 'Check'\n       OR amount_paid > 300.0)\nORDER BY payment_date\n", "sql2": "SELECT payment_date\nFROM payments\nWHERE amount_paid > 300\n  OR payment_type_code = 'Check'", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0007", "sql1": "\nSELECT `booking_start_date`,\n       `booking_end_date`\nFROM\n  (SELECT `LHS`.`booking_id` AS `booking_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`booking_status_code` AS `booking_status_code`,\n          `LHS`.`returned_damaged_yn` AS `returned_damaged_yn`,\n          `LHS`.`booking_start_date` AS `booking_start_date`,\n          `LHS`.`booking_end_date` AS `booking_end_date`,\n          `LHS`.`count_hired` AS `count_hired`,\n          `LHS`.`amount_payable` AS `amount_payable`,\n          `LHS`.`amount_of_discount` AS `amount_of_discount`,\n          `LHS`.`amount_outstanding` AS `amount_outstanding`,\n          `LHS`.`amount_of_refund` AS `amount_of_refund`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`returned_yn` AS `returned_yn`,\n          `LHS`.`returned_late_yn` AS `returned_late_yn`,\n          `LHS`.`booked_count` AS `booked_count`,\n          `LHS`.`booked_amount` AS `booked_amount`,\n          `RHS`.`product_type_code` AS `product_type_code`,\n          `RHS`.`daily_hire_cost` AS `daily_hire_cost`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_description` AS `product_description`\n   FROM\n     (SELECT `LHS`.`booking_id` AS `booking_id`,\n             `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`booking_status_code` AS `booking_status_code`,\n             `LHS`.`returned_damaged_yn` AS `returned_damaged_yn`,\n             `LHS`.`booking_start_date` AS `booking_start_date`,\n             `LHS`.`booking_end_date` AS `booking_end_date`,\n             `LHS`.`count_hired` AS `count_hired`,\n             `LHS`.`amount_payable` AS `amount_payable`,\n             `LHS`.`amount_of_discount` AS `amount_of_discount`,\n             `LHS`.`amount_outstanding` AS `amount_outstanding`,\n             `LHS`.`amount_of_refund` AS `amount_of_refund`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`returned_yn` AS `returned_yn`,\n             `RHS`.`returned_late_yn` AS `returned_late_yn`,\n             `RHS`.`booked_count` AS `booked_count`,\n             `RHS`.`booked_amount` AS `booked_amount`\n      FROM `bookings` AS `LHS`\n      INNER JOIN `products_booked` AS `RHS` ON (`LHS`.`booking_id` = `RHS`.`booking_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products_for_hire`\n      WHERE (`product_name` = 'Book collection A')) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY booking_start_date\n", "sql2": "SELECT T3.booking_start_date,\n       T3.booking_end_date\nFROM Products_for_hire AS T1\nJOIN products_booked AS T2 ON T1.product_id = T2.product_id\nJOIN bookings AS T3 ON T2.booking_id = T3.booking_id\nWHERE T1.product_name = 'Book collection A'", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0011", "sql1": "\nSELECT DISTINCT AVG(amount_due) OVER () AS avg_amount_due_\nFROM payments\nORDER BY avg_amount_due_\n", "sql2": "SELECT avg(amount_due)\nFROM payments", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0010", "sql1": "\nSELECT `first_name`,\n       `last_name`,\n       `gender_mf`\nFROM `customers`\nWHERE (`good_or_bad_customer` = 'good')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name,\n       gender_mf\nFROM customers\nWHERE good_or_bad_customer = 'good'\nORDER BY last_name", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/products_for_hire/0006", "sql1": "\nSELECT product_description\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product_type_code AS product_type_code,\n          LHS.daily_hire_cost AS daily_hire_cost,\n          LHS.product_name AS product_name,\n          LHS.product_description AS product_description,\n          RHS.booking_id AS booking_id,\n          RHS.returned_yn AS returned_yn,\n          RHS.returned_late_yn AS returned_late_yn,\n          RHS.booked_count AS booked_count,\n          RHS.booked_amount AS booked_amount\n   FROM products_for_hire AS LHS\n   INNER JOIN products_booked AS RHS ON (LHS.product_id = RHS.product_id))\nWHERE (booked_amount <= 102.76)\nORDER BY product_description\n", "sql2": "SELECT T2.product_description\nFROM products_booked AS T1\nJOIN products_for_hire AS T2 ON T1.product_id = T2.product_id\nWHERE T1.booked_amount = 102.76", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `member`\nWHERE (`address` != 'Hartford')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM member\nWHERE address != 'Hartford'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0013", "sql1": "\nSELECT shop_id,\n       address\nFROM\n  (SELECT shop_id,\n          address,\n          num_of_staff,\n          score,\n          open_year,\n          AVG(score) OVER () AS meanscore\n   FROM shop)\nWHERE (meanscore > score)\nORDER BY shop_id\n", "sql2": "SELECT shop_id,\n       address\nFROM shop\nWHERE score <\n    (SELECT avg(score)\n     FROM shop)", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0005", "sql1": "\nSELECT time_of_purchase,\n       age,\n       address\nFROM member\nORDER BY time_of_purchase\n", "sql2": "SELECT Time_of_purchase,\n       age,\n       address\nFROM member\nORDER BY Time_of_purchase", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0004", "sql1": "\nSELECT `name`,\n       `member_id`\nFROM `member`\nWHERE (`membership_card` = 'Black'\n       AND age != 30)\nORDER BY name\n", "sql2": "SELECT name,\n       member_id\nFROM member\nWHERE Membership_card = 'Black'\n  OR age < 30", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0008", "sql1": "\nSELECT DISTINCT `membership_card`\nFROM `member`\nWHERE (`address` = 'Hartford'\n       AND `address` != 'Waterbury')\nORDER BY membership_card\n", "sql2": "SELECT membership_card\nFROM member\nWHERE address = 'Hartford' INTERSECT\n  SELECT membership_card\n  FROM member WHERE address = 'Waterbury'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0015", "sql1": "\nSELECT `address`,\n       `shop_id`\nFROM\n  (SELECT `LHS`.`hh_id` AS `hh_id`,\n          `LHS`.`shop_id` AS `shop_id`,\n          `LHS`.`month` AS `month`,\n          `LHS`.`num_of_shaff_in_charge` AS `num_of_shaff_in_charge`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`num_of_staff` AS `num_of_staff`,\n          `RHS`.`score` AS `score`,\n          `RHS`.`open_year` AS `open_year`\n   FROM\n     (SELECT *\n      FROM `happy_hour`\n      WHERE (`month` = 'May')) AS LHS\n   LEFT JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id))\nORDER BY address\n", "sql2": "SELECT t1.address,\n       t1.shop_id\nFROM shop AS t1\nJOIN happy_hour AS t2 ON t1.shop_id = t2.shop_id\nWHERE MONTH = 'May'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0003", "sql1": "\nSELECT `name`\nFROM `member`\nWHERE (`address` = 'Waterbury')\nORDER BY name\n", "sql2": "SELECT name\nFROM member\nWHERE address = 'Harford'\n  OR address = 'Waterbury'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0018", "sql1": "\nSELECT MONTH\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT MONTH,\n                COUNT(*) AS n\n         FROM happy_hour\n         GROUP BY MONTH)\n      ORDER BY n DESC)\n   LIMIT 2)\n", "sql2": "SELECT MONTH\nFROM happy_hour\nGROUP BY MONTH\nHAVING count(*) > 2", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0002", "sql1": "\nSELECT n AS count___,\n       address\nFROM\n  (SELECT address,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY address)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       address\nFROM member\nGROUP BY address", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0014", "sql1": "\nSELECT address,\n       num_of_staff\nFROM\n  (SELECT *\n   FROM shop AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM happy_hour AS RHS\n        WHERE (LHS.shop_id = RHS.shop_id) ))\nORDER BY address\n", "sql2": "SELECT address,\n       num_of_staff\nFROM shop\nWHERE shop_id NOT IN\n    (SELECT shop_id\n     FROM happy_hour)", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0001", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `membership_card`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `member`\n      WHERE (`membership_card` = 'Black'))\n   GROUP BY membership_card)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM member\nWHERE Membership_card = 'Black'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0017", "sql1": "\nSELECT MONTH\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT MONTH,\n                COUNT(*) AS n\n         FROM happy_hour\n         GROUP BY MONTH)\n      ORDER BY MONTH DESC)\n   LIMIT 1)\n", "sql2": "SELECT MONTH\nFROM happy_hour\nGROUP BY MONTH\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0016", "sql1": "\nSELECT n AS shop_id,\n       num_of_shaff_in_charge AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT hh_id,\n                num_of_shaff_in_charge,\n                COUNT(*) AS n\n         FROM happy_hour\n         GROUP BY hh_id,\n                  num_of_shaff_in_charge)\n      ORDER BY hh_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT shop_id,\n       count(*)\nFROM happy_hour\nGROUP BY shop_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0007", "sql1": "\nSELECT address\nFROM member\nWHERE (age <= 30\n       AND age != 40)\nORDER BY address\n", "sql2": "SELECT address\nFROM member\nWHERE age < 30 INTERSECT\n  SELECT address\n  FROM member WHERE age > 40", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0011", "sql1": "\nSELECT address\nFROM shop\nORDER BY address\n", "sql2": "SELECT address\nFROM shop\nORDER BY open_year", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0010", "sql1": "\nSELECT `address_other` AS `address`\nFROM\n  (SELECT `level_of_membership` AS `member_id`,\n          `name`,\n          `membership_card`,\n          `age`,\n          `time_of_purchase`,\n          `level_of_membership`,\n          `address`,\n          `name_other`,\n          `membership_card_other`,\n          `age_other`,\n          `level_of_membership_other`,\n          `address_other`\n   FROM\n     (SELECT `LHS`.`member_id` AS `member_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`membership_card` AS `membership_card`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`time_of_purchase` AS `time_of_purchase`,\n             `LHS`.`level_of_membership` AS `level_of_membership`,\n             `LHS`.`address` AS `address`,\n             `RHS`.`name` AS `name_other`,\n             `RHS`.`membership_card` AS `membership_card_other`,\n             `RHS`.`age` AS `age_other`,\n             `RHS`.`level_of_membership` AS `level_of_membership_other`,\n             `RHS`.`address` AS `address_other`\n      FROM `member` AS `LHS`\n      INNER JOIN `member` AS `RHS` ON (`LHS`.`time_of_purchase` = `RHS`.`time_of_purchase`\n                                          AND `LHS`.`level_of_membership` = `RHS`.`member_id`)))\nWHERE (`membership_card` = 'Black')\nORDER BY address\n", "sql2": "SELECT address\nFROM member\nEXCEPT\nSELECT address\nFROM member\nWHERE Membership_card = 'Black'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/coffee_shop/0006", "sql1": "\nSELECT membership_card\nFROM\n  (SELECT membership_card,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY membership_card)\nWHERE (n >= 5)\nORDER BY membership_card\n", "sql2": "SELECT Membership_card\nFROM member\nGROUP BY Membership_card\nHAVING count(*) > 5", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0009", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`artistid` AS `artistid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`albumid` AS `albumid`,\n          `RHS`.`title` AS `title`\n   FROM `artist` AS `LHS`\n   INNER JOIN `album` AS `RHS` ON (`LHS`.`artistid` = `RHS`.`artistid`))\nWHERE (`title` = 'Balls to the Wall')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nWHERE T1.Title = 'Balls to the Wall'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0025", "sql1": "\nSELECT `invoicedate`\nFROM\n  (SELECT *\n   FROM `invoice` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customer`\n           WHERE (`firstname` != 'Astrid'\n                  AND `lastname` != 'Gruber')) AS RHS\n        WHERE (LHS.customerid = RHS.customerid) ))\nORDER BY invoicedate\n", "sql2": "SELECT T2.InvoiceDate\nFROM CUSTOMER AS T1\nJOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId\nWHERE T1.FirstName = 'Astrid'\n  AND LastName = 'Gruber'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0013", "sql1": "\nSELECT DISTINCT maxmilliseconds AS max_milliseconds_,\n                MIN(milliseconds) OVER () AS min_milliseconds_\nFROM\n  (SELECT trackid,\n          name,\n          albumid,\n          mediatypeid,\n          genreid,\n          composer,\n          milliseconds,\n          bytes,\n          unitprice,\n          MAX(milliseconds) OVER () AS maxmilliseconds\n   FROM track)\nORDER BY max_milliseconds_\n", "sql2": "SELECT max(Milliseconds),\n       min(Milliseconds)\nFROM TRACK", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0005", "sql1": "\nSELECT DISTINCT billingcountry\nFROM invoice\nORDER BY billingcountry\n", "sql2": "SELECT distinct(BillingCountry)\nFROM INVOICE", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0029", "sql1": "\nSELECT phone\nFROM employee\nORDER BY phone\n\n[   742.888][MainProcess][INFO] Statistics:\n[   742.889][MainProcess][INFO] \tAttempted programs: 1 (approx)\n[   742.889][MainProcess][INFO] \t\tRejected: 0 (approx)\n[   742.889][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   742.889][MainProcess][INFO] \t\tEmpty outputs: 0 (0.0%) (approx)\n[   742.889][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   742.889][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   742.889][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   742.889][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   742.889][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   742.889][MainProcess][INFO] \tTotal time spent in enumerator: 0.000006 (approx)\n[   742.889][MainProcess][INFO] \t\tEnumerated 161319.384615 programs/s avg. (just enumeration time)\n[   742.889][MainProcess][INFO] \t\tEnumerated 0.002056 programs/s avg. (overall)\n[   742.889][MainProcess][INFO] \tTotal time spent in evaluation & testing: 94.691067 (approx)\n[   742.889][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 0.000000 (approx)\n[   742.889][MainProcess][INFO] Solution found: employee\n[   742.889][MainProcess][INFO] Solution size: 0\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 162, in endr\n    rlib.R_CleanTempDir()\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT Phone\nFROM EMPLOYEE", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0004", "sql1": "\nSELECT `firstname`,\n       `lastname`\nFROM `employee`\nWHERE (`city` = 'Calgary')\nORDER BY firstname\n", "sql2": "SELECT FirstName,\n       LastName\nFROM EMPLOYEE\nWHERE City = 'Calgary'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0008", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`albumid` AS `albumid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`artistid` AS `artistid`,\n             `RHS`.`name` AS `name`\n      FROM `album` AS `LHS`\n      INNER JOIN `artist` AS `RHS` ON (`LHS`.`artistid` = `RHS`.`artistid`))\n   GROUP BY `name`)\nWHERE (`name` = 'Metallica')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nWHERE T2.Name = 'Metallica'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0039", "sql1": "\nSELECT `birthdate`\nFROM `employee`\nWHERE (`city` = 'Edmonton')\nORDER BY birthdate\n", "sql2": "SELECT BirthDate\nFROM EMPLOYEE\nWHERE City = 'Edmonton'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0034", "sql1": "\nSELECT title\nFROM album\nORDER BY title\n", "sql2": "SELECT Title\nFROM ALBUM\nORDER BY Title", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0018", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `genreid`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`trackid` AS `trackid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`albumid` AS `albumid`,\n             `LHS`.`mediatypeid` AS `mediatypeid`,\n             `LHS`.`genreid` AS `genreid`,\n             `LHS`.`composer` AS `composer`,\n             `LHS`.`milliseconds` AS `milliseconds`,\n             `LHS`.`bytes` AS `bytes`,\n             `LHS`.`unitprice` AS `unitprice`,\n             `RHS`.`name` AS `name_other`\n      FROM `track` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `genre`\n         WHERE (`name` = 'Rock')) AS RHS ON (LHS.genreid = RHS.genreid))\n   GROUP BY genreid)\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM GENRE AS T1\nJOIN TRACK AS T2 ON T1.GenreId = T2.GenreId\nWHERE T1.Name = 'Rock'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0040", "sql1": "\nSELECT DISTINCT unitprice\nFROM track\nORDER BY unitprice\n", "sql2": "SELECT distinct(UnitPrice)\nFROM TRACK", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0036", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM album AS RHS\n        WHERE (LHS.artistid = RHS.artistid) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM ARTIST\nEXCEPT\nSELECT T2.Name\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/chinook_1/0007", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`albumid` AS `albumid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`artistid` AS `artistid`,\n          `RHS`.`name` AS `name`\n   FROM `album` AS `LHS`\n   LEFT JOIN `artist` AS `RHS` ON (`LHS`.`artistid` = `RHS`.`artistid`))\nWHERE (`name` = 'AC/DC')\nORDER BY title\n", "sql2": "SELECT Title\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nWHERE T2.Name = 'AC/DC'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0009", "sql1": "\nSELECT `email_address`\nFROM `students`\nWHERE (`first_name` = 'Emma'\n       AND `last_name` = 'Rohan')\nORDER BY email_address\n", "sql2": "SELECT email_address\nFROM Students\nWHERE first_name = 'Emma'\n  AND last_name = 'Rohan'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0033", "sql1": "\nSELECT `monthly_rental`\nFROM\n  (SELECT *\n   FROM `student_addresses` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `addresses`\n           WHERE (`state_province_county` != 'Texas')) AS RHS\n        WHERE (LHS.address_id = RHS.address_id) ))\nORDER BY monthly_rental\n", "sql2": "SELECT T2.monthly_rental\nFROM Addresses AS T1\nJOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id\nWHERE T1.state_province_county = 'Texas'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0005", "sql1": "\nSELECT DISTINCT detention_type_code\nFROM detention\nORDER BY detention_type_code\n", "sql2": "SELECT DISTINCT detention_type_code\nFROM Detention", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0029", "sql1": "\nSELECT `date_incident_start`,\n       `date_incident_end`\nFROM\n  (SELECT `LHS`.`incident_id` AS `incident_id`,\n          `LHS`.`incident_type_code` AS `incident_type_code`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`date_incident_start` AS `date_incident_start`,\n          `LHS`.`date_incident_end` AS `date_incident_end`,\n          `LHS`.`incident_summary` AS `incident_summary`,\n          `LHS`.`recommendations` AS `recommendations`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`address_id` AS `address_id`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`date_first_rental` AS `date_first_rental`,\n          `RHS`.`date_left_university` AS `date_left_university`,\n          `RHS`.`other_student_details` AS `other_student_details`\n   FROM `behavior_incident` AS `LHS`\n   INNER JOIN `students` AS `RHS` ON (`LHS`.`student_id` = `RHS`.`student_id`))\nWHERE (`last_name` = 'Fahey')\nORDER BY date_incident_start\n", "sql2": "SELECT T1.date_incident_start,\n       date_incident_end\nFROM Behavior_Incident AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.last_name = 'Fahey'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0028", "sql1": "\nSELECT `text_of_notes`\nFROM\n  (SELECT *\n   FROM `assessment_notes` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `teachers`\n           WHERE (`last_name` != 'Schuster')) AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY text_of_notes\n", "sql2": "SELECT T1.text_of_notes\nFROM Assessment_Notes AS T1\nJOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id\nWHERE T2.last_name = 'Schuster'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0004", "sql1": "\nSELECT n_distinct AS count_distinct_incident_type_code_\nFROM\n  (SELECT other_details,\n          COUNT(DISTINCT incident_type_code) AS n_distinct\n   FROM behavior_incident\n   GROUP BY other_details)\nORDER BY count_distinct_incident_type_code_\n", "sql2": "SELECT count(DISTINCT incident_type_code)\nFROM Behavior_Incident", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0012", "sql1": "\nSELECT `incident_type_description`\nFROM `ref_incident_type`\nWHERE (`incident_type_code` = 'VIOLENCE')\nORDER BY incident_type_description\n", "sql2": "SELECT incident_type_description\nFROM Ref_Incident_Type\nWHERE incident_type_code = 'VIOLENCE'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0008", "sql1": "\nSELECT cell_mobile_number,\n       email_address\nFROM students\nORDER BY cell_mobile_number\n", "sql2": "SELECT cell_mobile_number,\n       email_address\nFROM STUDENTS", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0015", "sql1": "\nSELECT notes_id,\n       student_id,\n       teacher_id,\n       date_of_notes,\n       text_of_notes,\n       other_details\nFROM assessment_notes\nORDER BY notes_id\n", "sql2": "SELECT *\nFROM Assessment_Notes\nORDER BY date_of_notes ASC", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0003", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT address_id,\n          other_address_details,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM addresses\n      WHERE (zip_postcode != 197))\n   GROUP BY address_id,\n            other_address_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ADDRESSES\nWHERE zip_postcode = '197'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0039", "sql1": "\nSELECT DISTINCT last_name\nFROM\n  (SELECT *\n   FROM teachers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM detention AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY last_name\n", "sql2": "SELECT last_name\nFROM Teachers\nEXCEPT\nSELECT T1.last_name\nFROM Teachers AS T1\nJOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0035", "sql1": "\nSELECT DISTINCT line_1,\n                meanmonthly_rental AS avg_t2_monthly_rental_\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.line_3 AS line_3,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          LHS.other_address_details AS other_address_details,\n          LHS.student_id AS student_id,\n          LHS.date_address_from AS date_address_from,\n          LHS.date_address_to AS date_address_to,\n          LHS.monthly_rental AS monthly_rental,\n          LHS.other_details AS other_details,\n          RHS.meanmonthly_rental AS meanmonthly_rental\n   FROM\n     (SELECT LHS.address_id AS address_id,\n             LHS.line_1 AS line_1,\n             LHS.line_2 AS line_2,\n             LHS.line_3 AS line_3,\n             LHS.city AS city,\n             LHS.zip_postcode AS zip_postcode,\n             LHS.state_province_county AS state_province_county,\n             LHS.country AS country,\n             LHS.other_address_details AS other_address_details,\n             RHS.student_id AS student_id,\n             RHS.date_address_from AS date_address_from,\n             RHS.date_address_to AS date_address_to,\n             RHS.monthly_rental AS monthly_rental,\n             RHS.other_details AS other_details\n      FROM addresses AS LHS\n      INNER JOIN student_addresses AS RHS ON (LHS.address_id = RHS.address_id)) AS LHS\n   INNER JOIN\n     (SELECT address_id,\n             AVG(monthly_rental) AS meanmonthly_rental\n      FROM student_addresses\n      GROUP BY address_id) AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY line_1\n", "sql2": "SELECT T1.line_1,\n       avg(T2.monthly_rental)\nFROM Addresses AS T1\nJOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id\nGROUP BY T2.address_id", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0034", "sql1": "\nSELECT `first_name`,\n       `last_name`\nFROM\n  (SELECT *\n   FROM `students` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `addresses`\n           WHERE (`state_province_county` != 'Wisconsin')) AS RHS\n        WHERE (LHS.address_id = RHS.address_id) ))\nORDER BY first_name\n", "sql2": "SELECT T2.first_name,\n       T2.last_name\nFROM Addresses AS T1\nJOIN Students AS T2 ON T1.address_id = T2.address_id\nWHERE T1.state_province_county = 'Wisconsin'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0018", "sql1": "\nSELECT student_id,\n       address_id,\n       date_address_from,\n       date_address_to,\n       monthly_rental,\n       other_details\nFROM student_addresses\nORDER BY student_id\n", "sql2": "SELECT *\nFROM Student_Addresses\nORDER BY monthly_rental DESC", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0002", "sql1": "\nSELECT date_of_notes\nFROM assessment_notes\nORDER BY date_of_notes\n", "sql2": "SELECT date_of_notes\nFROM Assessment_Notes", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM assessment_notes\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ASSESSMENT_NOTES", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0017", "sql1": "\nSELECT first_name,\n       last_name\nFROM teachers\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Teachers\nORDER BY last_name", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0037", "sql1": "\nSELECT email_address\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.line_3 AS line_3,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          LHS.other_address_details AS other_address_details,\n          RHS.teacher_id AS teacher_id,\n          RHS.first_name AS first_name,\n          RHS.middle_name AS middle_name,\n          RHS.last_name AS last_name,\n          RHS.gender AS gender,\n          RHS.cell_mobile_number AS cell_mobile_number,\n          RHS.email_address AS email_address,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT *\n      FROM addresses\n      WHERE (zip_postcode = 918)) AS LHS\n   LEFT JOIN teachers AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY email_address\n", "sql2": "SELECT T2.email_address\nFROM Addresses AS T1\nJOIN Teachers AS T2 ON T1.address_id = T2.address_id\nWHERE T1.zip_postcode = '918'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0036", "sql1": "\nSELECT `zip_postcode`\nFROM\n  (SELECT `LHS`.`teacher_id` AS `teacher_id`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `LHS`.`email_address` AS `email_address`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`line_1` AS `line_1`,\n          `RHS`.`line_2` AS `line_2`,\n          `RHS`.`line_3` AS `line_3`,\n          `RHS`.`city` AS `city`,\n          `RHS`.`zip_postcode` AS `zip_postcode`,\n          `RHS`.`state_province_county` AS `state_province_county`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`other_address_details` AS `other_address_details`\n   FROM\n     (SELECT *\n      FROM `teachers`\n      WHERE (`first_name` = 'Lyla')) AS LHS\n   LEFT JOIN addresses AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY zip_postcode\n", "sql2": "SELECT T1.zip_postcode\nFROM Addresses AS T1\nJOIN Teachers AS T2 ON T1.address_id = T2.address_id\nWHERE T2.first_name = 'Lyla'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0016", "sql1": "\nSELECT city\nFROM addresses\nORDER BY city\n", "sql2": "SELECT city\nFROM Addresses\nORDER BY city", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0027", "sql1": "\nSELECT `date_of_notes`\nFROM\n  (SELECT `LHS`.`student_id` AS `student_id`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `LHS`.`email_address` AS `email_address`,\n          `LHS`.`date_first_rental` AS `date_first_rental`,\n          `LHS`.`date_left_university` AS `date_left_university`,\n          `LHS`.`other_student_details` AS `other_student_details`,\n          `RHS`.`notes_id` AS `notes_id`,\n          `RHS`.`teacher_id` AS `teacher_id`,\n          `RHS`.`date_of_notes` AS `date_of_notes`,\n          `RHS`.`text_of_notes` AS `text_of_notes`,\n          `RHS`.`other_details` AS `other_details`\n   FROM\n     (SELECT *\n      FROM `students`\n      WHERE (`first_name` = 'Fanny')) AS LHS\n   INNER JOIN assessment_notes AS RHS ON (LHS.student_id = RHS.student_id))\nORDER BY date_of_notes\n", "sql2": "SELECT T1.date_of_notes\nFROM Assessment_Notes AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.first_name = 'Fanny'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0007", "sql1": "\nSELECT detention_summary\nFROM detention\nORDER BY detention_summary\n", "sql2": "SELECT detention_summary\nFROM Detention", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0011", "sql1": "\nSELECT `gender`\nFROM `teachers`\nWHERE (`last_name` = 'Medhurst')\nORDER BY gender\n", "sql2": "SELECT gender\nFROM TEACHERS\nWHERE last_name = 'Medhurst'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0010", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_\nFROM students_in_detention\nORDER BY count_distinct_student_id_\n", "sql2": "SELECT count(DISTINCT student_id)\nFROM Students_in_Detention", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0006", "sql1": "\nSELECT `date_incident_start`,\n       `date_incident_end`\nFROM `behavior_incident`\nWHERE (`incident_type_code` = 'NOISE')\nORDER BY date_incident_start\n", "sql2": "SELECT date_incident_start,\n       date_incident_end\nFROM Behavior_Incident\nWHERE incident_type_code = 'NOISE'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/behavior_monitoring/0030", "sql1": "\nSELECT `datetime_detention_start`,\n       `datetime_detention_end`\nFROM\n  (SELECT *\n   FROM `detention` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `teachers`\n           WHERE (`last_name` != 'Schultz')) AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY datetime_detention_start\n", "sql2": "SELECT T1.datetime_detention_start,\n       datetime_detention_end\nFROM Detention AS T1\nJOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id\nWHERE T2.last_name = 'Schultz'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0013", "sql1": "\nSELECT sumenrollment AS sum_enrollment_,\n       affiliation\nFROM\n  (SELECT affiliation,\n          SUM(enrollment) AS sumenrollment\n   FROM university\n   GROUP BY affiliation)\nORDER BY sum_enrollment_\n", "sql2": "SELECT sum(enrollment),\n       affiliation\nFROM university\nGROUP BY affiliation", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0004", "sql1": "\nSELECT `founded`\nFROM `university`\nWHERE (`affiliation` != 'Public')\nORDER BY founded\n", "sql2": "SELECT founded\nFROM university\nWHERE affiliation != 'Public'\nORDER BY founded DESC\nLIMIT 1", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0012", "sql1": "\nSELECT DISTINCT sumenrollment AS sum_enrollment_,\n                MIN(enrollment) OVER () AS min_enrollment_\nFROM\n  (SELECT school_id,\n          school,\n          LOCATION,\n          founded,\n          affiliation,\n          enrollment,\n          nickname,\n          primary_conference,\n          SUM(enrollment) OVER () AS sumenrollment\n   FROM university)\nORDER BY sum_enrollment_\n", "sql2": "SELECT sum(enrollment),\n       min(enrollment)\nFROM university", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0015", "sql1": "\nSELECT `school`\nFROM `university`\nWHERE (`affiliation` != 'Public'\n       OR founded != 1850.0)\nORDER BY school\n", "sql2": "SELECT school\nFROM university\nWHERE founded > 1850\n  OR affiliation = 'Public'", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0003", "sql1": "\nSELECT founded\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM university\n      ORDER BY enrollment DESC)\n   LIMIT 1)\n", "sql2": "SELECT founded\nFROM university\nORDER BY enrollment DESC\nLIMIT 1", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0019", "sql1": "\nSELECT n_distinct AS count___,\n       affiliation\nFROM\n  (SELECT affiliation,\n          COUNT(DISTINCT enrollment) AS n_distinct\n   FROM\n     (SELECT *\n      FROM university\n      WHERE (enrollment >= 20000.0))\n   GROUP BY affiliation)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       affiliation\nFROM university\nWHERE enrollment > 20000\nGROUP BY affiliation", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0002", "sql1": "\nSELECT `school`,\n       `location`\nFROM `university`\nWHERE (`affiliation` = 'Public')\nORDER BY school\n", "sql2": "SELECT school,\n       LOCATION\nFROM university\nWHERE affiliation = 'Public'", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0001", "sql1": "\nSELECT school,\n       nickname\nFROM university\nORDER BY school\n", "sql2": "SELECT school,\n       nickname\nFROM university\nORDER BY founded", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0021", "sql1": "\nSELECT enrollment AS max_enrollment_\nFROM\n  (SELECT MAX(enrollment) AS enrollment\n   FROM university)\nORDER BY max_enrollment_\n", "sql2": "SELECT max(Enrollment)\nFROM university", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT affiliation) OVER () AS count_distinct_affiliation_\nFROM university\nORDER BY count_distinct_affiliation_\n", "sql2": "SELECT count(DISTINCT affiliation)\nFROM university", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/university_basketball/0011", "sql1": "\nSELECT enrollment,\n       primary_conference\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM university\n      ORDER BY affiliation DESC)\n   LIMIT 1)\n", "sql2": "SELECT enrollment,\n       primary_conference\nFROM university\nORDER BY founded\nLIMIT 1", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0013", "sql1": "\nSELECT DISTINCT `n` AS `count_distinct_t2_camera_lens_id_`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`prominence` AS `prominence`,\n          `LHS`.`range` AS `range`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`camera_lens_id` AS `camera_lens_id`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT *\n      FROM `mountain`\n      WHERE (`country` = 'Ethiopia')) AS LHS\n   INNER JOIN\n     (SELECT camera_lens_id,\n             id,\n             COUNT(*) AS n\n      FROM photos\n      GROUP BY camera_lens_id,\n               id) AS RHS ON (LHS.id = RHS.id))\nORDER BY count_distinct_t2_camera_lens_id_\n", "sql2": "SELECT count(DISTINCT T2.camera_lens_id)\nFROM mountain AS T1\nJOIN photos AS T2 ON T1.id = T2.mountain_id\nWHERE T1.country = 'Ethiopia'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0005", "sql1": "\nSELECT `meanprominence` AS `avg_prominence_`\nFROM\n  (SELECT `country`,\n          AVG(`prominence`) AS `meanprominence`\n   FROM\n     (SELECT *\n      FROM `mountain`\n      WHERE (`country` = 'Morocco'))\n   GROUP BY country)\nORDER BY avg_prominence_\n", "sql2": "SELECT avg(prominence)\nFROM mountain\nWHERE country = 'Morocco'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0004", "sql1": "\nSELECT DISTINCT maxheight AS max_height_,\n                AVG(height) OVER () AS avg_height_\nFROM\n  (SELECT id,\n          name,\n          height,\n          prominence,\n          RANGE,\n          country,\n          MAX(height) OVER () AS maxheight\n   FROM mountain)\nORDER BY max_height_\n", "sql2": "SELECT max(height),\n       avg(height)\nFROM mountain", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0003", "sql1": "\nSELECT id,\n       color,\n       name\nFROM photos\nORDER BY id\n", "sql2": "SELECT id,\n       color,\n       name\nFROM photos", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0002", "sql1": "\nSELECT brand,\n       name\nFROM camera_lens\nORDER BY brand\n", "sql2": "SELECT brand,\n       name\nFROM camera_lens\nORDER BY max_aperture DESC", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0014", "sql1": "\nSELECT `brand`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`brand` AS `brand`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`focal_length_mm` AS `focal_length_mm`,\n          `LHS`.`max_aperture` AS `max_aperture`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`height` AS `height`,\n          `RHS`.`prominence` AS `prominence`,\n          `RHS`.`range` AS `range`,\n          `RHS`.`country` AS `country`\n   FROM `camera_lens` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `mountain`\n         WHERE (`range` != 'Toubkal Atlas'\n                AND `range` != 'Lasta Massif')) AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM photos AS RHS\n           WHERE (LHS.id = RHS.id) )) AS RHS ON (LHS.id = RHS.id))\nORDER BY brand\n", "sql2": "SELECT T3.brand\nFROM mountain AS T1\nJOIN photos AS T2 ON T1.id = T2.mountain_id\nJOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id\nWHERE T1.range = 'Toubkal Atlas' INTERSECT\n  SELECT T3.brand\n  FROM mountain AS T1\n  JOIN photos AS T2 ON T1.id = T2.mountain_id\n  JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Lasta Massif'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM camera_lens\n      WHERE (focal_length_mm > 15.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM camera_lens\nWHERE focal_length_mm > 15", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0017", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.brand AS brand,\n          LHS.name AS name,\n          LHS.focal_length_mm AS focal_length_mm,\n          LHS.max_aperture AS max_aperture,\n          RHS.n AS n\n   FROM camera_lens AS LHS\n   INNER JOIN\n     (SELECT camera_lens_id,\n             COUNT(*) AS n\n      FROM photos\n      GROUP BY camera_lens_id) AS RHS ON (LHS.id = RHS.camera_lens_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM camera_lens AS T1\nJOIN photos AS T2 ON T1.id = T2.camera_lens_id\nGROUP BY T1.id\nORDER BY count(*)", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0007", "sql1": "\nSELECT id,\n       name\nFROM\n  (SELECT id,\n          name,\n          height,\n          prominence,\n          RANGE,\n          country,\n          id_other,\n          camera_lens_id,\n          color,\n          name_other,\n          id AS mountain_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.height AS height,\n             LHS.prominence AS prominence,\n             LHS.range AS RANGE,\n             LHS.country AS country,\n             RHS.id AS id_other,\n             RHS.camera_lens_id AS camera_lens_id,\n             RHS.color AS color,\n             RHS.name AS name_other\n      FROM mountain AS LHS\n      INNER JOIN photos AS RHS ON (LHS.id = RHS.mountain_id)))\nWHERE (height >= 4000.0)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.name\nFROM mountain AS T1\nJOIN photos AS T2 ON T1.id = T2.mountain_id\nWHERE T1.height > 4000", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0011", "sql1": "\nSELECT n_distinct AS count_distinct_brand_\nFROM\n  (SELECT COUNT(DISTINCT brand) AS n_distinct\n   FROM camera_lens)\nORDER BY count_distinct_brand_\n", "sql2": "SELECT count(DISTINCT brand)\nFROM camera_lens", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0010", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`brand` AS `brand`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`focal_length_mm` AS `focal_length_mm`,\n          `LHS`.`max_aperture` AS `max_aperture`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`mountain_id` AS `mountain_id`,\n          `RHS`.`color` AS `color`,\n          `RHS`.`name` AS `name_other`\n   FROM\n     (SELECT *\n      FROM `camera_lens`\n      WHERE (`brand` = 'Sigma'\n             OR `brand` = 'Olympus')) AS LHS\n   INNER JOIN photos AS RHS ON (LHS.id = RHS.camera_lens_id))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM camera_lens AS T1\nJOIN photos AS T2 ON T2.camera_lens_id = T1.id\nWHERE T1.brand = 'Sigma'\n  OR T1.brand = 'Olympus'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/mountain_photos/0006", "sql1": "\nSELECT name,\n       height,\n       prominence\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM mountain\n      ORDER BY RANGE DESC)\n   LIMIT 21)\n", "sql2": "SELECT name,\n       height,\n       prominence\nFROM mountain\nWHERE RANGE != 'Aberdare Range'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0009", "sql1": "\nSELECT catalog_entry_name\nFROM\n  (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n          LHS.catalog_level_number AS catalog_level_number,\n          LHS.parent_entry_id AS parent_entry_id,\n          LHS.previous_entry_id AS previous_entry_id,\n          LHS.next_entry_id AS next_entry_id,\n          LHS.catalog_entry_name AS catalog_entry_name,\n          LHS.product_stock_number AS product_stock_number,\n          LHS.price_in_dollars AS price_in_dollars,\n          LHS.price_in_euros AS price_in_euros,\n          LHS.price_in_pounds AS price_in_pounds,\n          LHS.capacity AS capacity,\n          LHS.length AS LENGTH,\n          LHS.height AS height,\n          LHS.width AS width,\n          RHS.catalog_level_number AS catalog_level_number_other,\n          RHS.parent_entry_id AS parent_entry_id_other,\n          RHS.previous_entry_id AS previous_entry_id_other,\n          RHS.next_entry_id AS next_entry_id_other,\n          RHS.catalog_entry_name AS catalog_entry_name_other,\n          RHS.price_in_dollars AS price_in_dollars_other,\n          RHS.price_in_euros AS price_in_euros_other,\n          RHS.price_in_pounds AS price_in_pounds_other,\n          RHS.capacity AS capacity_other,\n          RHS.length AS length_other,\n          RHS.height AS height_other,\n          RHS.width AS width_other\n   FROM catalog_contents AS LHS\n   INNER JOIN catalog_contents AS RHS ON (LHS.previous_entry_id = RHS.catalog_entry_id\n                                             AND LHS.product_stock_number = RHS.product_stock_number))\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nORDER BY price_in_dollars DESC\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0013", "sql1": "\nSELECT catalog_entry_name_other AS catalog_entry_name\nFROM\n  (SELECT catalog_level_number AS catalog_entry_id,\n          catalog_level_number,\n          parent_entry_id,\n          previous_entry_id,\n          next_entry_id,\n          catalog_entry_name,\n          product_stock_number,\n          price_in_dollars,\n          price_in_euros,\n          price_in_pounds,\n          capacity,\n          LENGTH,\n          height,\n          width,\n          catalog_level_number_other,\n          parent_entry_id_other,\n          previous_entry_id_other,\n          next_entry_id_other,\n          catalog_entry_name_other,\n          product_stock_number_other,\n          price_in_dollars_other,\n          price_in_euros_other,\n          price_in_pounds_other,\n          capacity_other,\n          length_other,\n          width_other\n   FROM\n     (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n             LHS.catalog_level_number AS catalog_level_number,\n             LHS.parent_entry_id AS parent_entry_id,\n             LHS.previous_entry_id AS previous_entry_id,\n             LHS.next_entry_id AS next_entry_id,\n             LHS.catalog_entry_name AS catalog_entry_name,\n             LHS.product_stock_number AS product_stock_number,\n             LHS.price_in_dollars AS price_in_dollars,\n             LHS.price_in_euros AS price_in_euros,\n             LHS.price_in_pounds AS price_in_pounds,\n             LHS.capacity AS capacity,\n             LHS.length AS LENGTH,\n             LHS.height AS height,\n             LHS.width AS width,\n             RHS.catalog_level_number AS catalog_level_number_other,\n             RHS.parent_entry_id AS parent_entry_id_other,\n             RHS.previous_entry_id AS previous_entry_id_other,\n             RHS.next_entry_id AS next_entry_id_other,\n             RHS.catalog_entry_name AS catalog_entry_name_other,\n             RHS.product_stock_number AS product_stock_number_other,\n             RHS.price_in_dollars AS price_in_dollars_other,\n             RHS.price_in_euros AS price_in_euros_other,\n             RHS.price_in_pounds AS price_in_pounds_other,\n             RHS.capacity AS capacity_other,\n             RHS.length AS length_other,\n             RHS.width AS width_other\n      FROM catalog_contents AS LHS\n      INNER JOIN catalog_contents AS RHS ON (LHS.catalog_level_number = RHS.catalog_entry_id\n                                                AND LHS.capacity = RHS.height)))\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nORDER BY capacity ASC\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0004", "sql1": "\nSELECT catalog_level_name,\n       catalog_level_number\nFROM catalog_structure\nWHERE (catalog_level_number > 5\n       OR catalog_level_number > 10)\nORDER BY catalog_level_name\n", "sql2": "SELECT catalog_level_name,\n       catalog_level_number\nFROM Catalog_Structure\nWHERE catalog_level_number BETWEEN 5 AND 10", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0012", "sql1": "\nSELECT catalog_entry_name_other AS catalog_entry_name\nFROM\n  (SELECT catalog_level_number AS catalog_entry_id,\n          catalog_level_number,\n          parent_entry_id,\n          previous_entry_id,\n          next_entry_id,\n          catalog_entry_name,\n          product_stock_number,\n          price_in_dollars,\n          price_in_euros,\n          price_in_pounds,\n          capacity,\n          LENGTH,\n          height,\n          width,\n          catalog_level_number_other,\n          parent_entry_id_other,\n          previous_entry_id_other,\n          next_entry_id_other,\n          catalog_entry_name_other,\n          product_stock_number_other,\n          price_in_dollars_other,\n          price_in_euros_other,\n          price_in_pounds_other,\n          capacity_other,\n          length_other,\n          width_other\n   FROM\n     (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n             LHS.catalog_level_number AS catalog_level_number,\n             LHS.parent_entry_id AS parent_entry_id,\n             LHS.previous_entry_id AS previous_entry_id,\n             LHS.next_entry_id AS next_entry_id,\n             LHS.catalog_entry_name AS catalog_entry_name,\n             LHS.product_stock_number AS product_stock_number,\n             LHS.price_in_dollars AS price_in_dollars,\n             LHS.price_in_euros AS price_in_euros,\n             LHS.price_in_pounds AS price_in_pounds,\n             LHS.capacity AS capacity,\n             LHS.length AS LENGTH,\n             LHS.height AS height,\n             LHS.width AS width,\n             RHS.catalog_level_number AS catalog_level_number_other,\n             RHS.parent_entry_id AS parent_entry_id_other,\n             RHS.previous_entry_id AS previous_entry_id_other,\n             RHS.next_entry_id AS next_entry_id_other,\n             RHS.catalog_entry_name AS catalog_entry_name_other,\n             RHS.product_stock_number AS product_stock_number_other,\n             RHS.price_in_dollars AS price_in_dollars_other,\n             RHS.price_in_euros AS price_in_euros_other,\n             RHS.price_in_pounds AS price_in_pounds_other,\n             RHS.capacity AS capacity_other,\n             RHS.length AS length_other,\n             RHS.width AS width_other\n      FROM catalog_contents AS LHS\n      INNER JOIN catalog_contents AS RHS ON (LHS.catalog_level_number = RHS.catalog_entry_id\n                                                AND LHS.capacity = RHS.height)))\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nORDER BY height DESC\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0003", "sql1": "\nSELECT `attribute_data_type`\nFROM `attribute_definitions`\nWHERE (`attribute_name` = 'Green')\nORDER BY attribute_data_type\n", "sql2": "SELECT attribute_data_type\nFROM Attribute_Definitions\nWHERE attribute_name = 'Green'", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0019", "sql1": "\nSELECT date_of_latest_revision\nFROM\n  (SELECT date_of_latest_revision,\n          COUNT(*) AS n\n   FROM catalogs\n   GROUP BY date_of_latest_revision)\nWHERE (n >= 1)\nORDER BY date_of_latest_revision\n", "sql2": "SELECT date_of_latest_revision\nFROM Catalogs\nGROUP BY date_of_latest_revision\nHAVING count(*) > 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0018", "sql1": "\nSELECT catalog_entry_name,\n       capacity\nFROM catalog_contents\nWHERE (price_in_dollars > 700.0)\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name,\n       capacity\nFROM Catalog_Contents\nWHERE price_in_dollars > 700", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0002", "sql1": "\nSELECT attribute_data_type\nFROM\n  (SELECT attribute_data_type,\n          COUNT(*) AS n\n   FROM attribute_definitions\n   GROUP BY attribute_data_type)\nWHERE (n != 3)\nORDER BY attribute_data_type\n", "sql2": "SELECT attribute_data_type\nFROM Attribute_Definitions\nGROUP BY attribute_data_type\nHAVING count(*) > 3", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0014", "sql1": "\nSELECT catalog_entry_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM catalog_contents\n      ORDER BY height)\n   LIMIT 2)\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nWHERE product_stock_number LIKE '2%'", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0001", "sql1": "\nSELECT catalog_entry_name\nFROM catalog_contents\nORDER BY catalog_entry_name\n", "sql2": "SELECT distinct(catalog_entry_name)\nFROM catalog_contents", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0017", "sql1": "\nSELECT attribute_name,\n       attribute_id\nFROM\n  (SELECT LHS.attribute_id AS attribute_id,\n          LHS.attribute_name AS attribute_name,\n          LHS.attribute_data_type AS attribute_data_type,\n          RHS.catalog_entry_id AS catalog_entry_id,\n          RHS.catalog_level_number AS catalog_level_number,\n          RHS.attribute_value AS attribute_value\n   FROM attribute_definitions AS LHS\n   LEFT JOIN catalog_contents_additional_attributes AS RHS ON (LHS.attribute_id = RHS.attribute_id))\nWHERE (attribute_value = 0)\nORDER BY attribute_name\n", "sql2": "SELECT t1.attribute_name,\n       t1.attribute_id\nFROM Attribute_Definitions AS t1\nJOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id\nWHERE t2.attribute_value = 0", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0021", "sql1": "\nSELECT catalog_entry_name\nFROM catalog_contents\nWHERE (next_entry_id > 8)\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nWHERE next_entry_id > 8", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0020", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM catalog_contents)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM catalog_contents", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/product_catalog/0007", "sql1": "\nSELECT CATALOG_NAME,\n       date_of_publication\nFROM\n  (SELECT LHS.catalog_level_number AS catalog_level_number,\n          LHS.catalog_id AS catalog_id,\n          LHS.catalog_level_name AS catalog_level_name,\n          RHS.catalog_name AS CATALOG_NAME,\n          RHS.catalog_publisher AS catalog_publisher,\n          RHS.date_of_publication AS date_of_publication,\n          RHS.date_of_latest_revision AS date_of_latest_revision\n   FROM catalog_structure AS LHS\n   INNER JOIN catalogs AS RHS ON (LHS.catalog_id = RHS.catalog_id))\nWHERE (catalog_level_number >= 5)\nORDER BY CATALOG_NAME\n", "sql2": "SELECT t1.catalog_name,\n       t1.date_of_publication\nFROM catalogs AS t1\nJOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id\nWHERE catalog_level_number > 5", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0009", "sql1": "\nSELECT country\nFROM market\nORDER BY country\n", "sql2": "SELECT Country\nFROM market\nORDER BY Number_cities DESC", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0013", "sql1": "\nSELECT country,\n       YEAR\nFROM\n  (SELECT LHS.market_id AS market_id,\n          LHS.country AS country,\n          LHS.number_cities AS number_cities,\n          RHS.estimation_id AS estimation_id,\n          RHS.low_estimate AS low_estimate,\n          RHS.high_estimate AS high_estimate,\n          RHS.film_id AS film_id,\n          RHS.type AS TYPE,\n          RHS.year AS YEAR\n   FROM market AS LHS\n   INNER JOIN film_market_estimation AS RHS ON (LHS.market_id = RHS.market_id))\nORDER BY country\n", "sql2": "SELECT T2.Country,\n       T1.Year\nFROM film_market_estimation AS T1\nJOIN market AS T2 ON T1.Market_ID = T2.Market_ID", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0005", "sql1": "\nSELECT TYPE\nFROM film_market_estimation\nWHERE (YEAR = 1995)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM film_market_estimation\nWHERE YEAR = 1995", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0004", "sql1": "\nSELECT low_estimate,\n       high_estimate\nFROM film_market_estimation\nORDER BY low_estimate\n", "sql2": "SELECT Low_Estimate,\n       High_Estimate\nFROM film_market_estimation", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0012", "sql1": "\nSELECT meannumber_cities AS avg_t2_number_cities_\nFROM\n  (SELECT film_id,\n          low_estimate,\n          AVG(number_cities) AS meannumber_cities\n   FROM\n     (SELECT LHS.market_id AS market_id,\n             LHS.country AS country,\n             LHS.number_cities AS number_cities,\n             RHS.estimation_id AS estimation_id,\n             RHS.low_estimate AS low_estimate,\n             RHS.high_estimate AS high_estimate,\n             RHS.film_id AS film_id,\n             RHS.type AS TYPE,\n             RHS.year AS YEAR\n      FROM market AS LHS\n      INNER JOIN\n        (SELECT *\n         FROM film_market_estimation\n         WHERE (low_estimate > 10000.0)) AS RHS ON (LHS.market_id = RHS.market_id))\n   GROUP BY film_id,\n            low_estimate)\nORDER BY avg_t2_number_cities_\n", "sql2": "SELECT avg(T2.Number_cities)\nFROM film_market_estimation AS T1\nJOIN market AS T2 ON T1.Market_ID = T2.Market_ID\nWHERE T1.Low_Estimate > 10000", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0008", "sql1": "\nSELECT country\nFROM market\nORDER BY country\n", "sql2": "SELECT Country\nFROM market\nORDER BY Country ASC", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0015", "sql1": "\nSELECT studio,\n       n AS count___\nFROM\n  (SELECT studio,\n          COUNT(*) AS n\n   FROM film\n   GROUP BY studio)\nORDER BY studio\n", "sql2": "SELECT Studio,\n       COUNT(*)\nFROM film\nGROUP BY Studio", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0003", "sql1": "\nSELECT meangross_in_dollar AS avg_gross_in_dollar_\nFROM\n  (SELECT AVG(gross_in_dollar) AS meangross_in_dollar\n   FROM film)\nORDER BY avg_gross_in_dollar_\n", "sql2": "SELECT avg(Gross_in_dollar)\nFROM film", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0019", "sql1": "\nSELECT `studio`\nFROM `film`\nWHERE (`director` != 'Nicholas Meyer'\n       AND `director` = 'Walter Hill')\nORDER BY studio\n", "sql2": "SELECT Studio\nFROM film\nWHERE Director = 'Nicholas Meyer' INTERSECT\n  SELECT Studio\n  FROM film WHERE Director = 'Walter Hill'", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0022", "sql1": "\nSELECT DISTINCT studio\nFROM\n  (SELECT studio,\n          title,\n          AVG(gross_in_dollar) AS meangross_in_dollar\n   FROM\n     (SELECT *\n      FROM film\n      WHERE (gross_in_dollar != 4500000))\n   GROUP BY studio,\n            title)\nORDER BY studio\n", "sql2": "SELECT Studio\nFROM film\nGROUP BY Studio\nHAVING avg(Gross_in_dollar) >= 4500000", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0018", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM film AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM film_market_estimation AS RHS\n        WHERE (LHS.film_id = RHS.film_id) ))\nORDER BY title\n", "sql2": "SELECT Title\nFROM film\nWHERE Film_ID NOT IN\n    (SELECT Film_ID\n     FROM film_market_estimation)", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0002", "sql1": "\nSELECT director\nFROM film\nORDER BY director\n", "sql2": "SELECT DISTINCT Director\nFROM film", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0014", "sql1": "\nSELECT `year`\nFROM\n  (SELECT `LHS`.`market_id` AS `market_id`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`number_cities` AS `number_cities`,\n          `RHS`.`estimation_id` AS `estimation_id`,\n          `RHS`.`low_estimate` AS `low_estimate`,\n          `RHS`.`high_estimate` AS `high_estimate`,\n          `RHS`.`film_id` AS `film_id`,\n          `RHS`.`type` AS `type`,\n          `RHS`.`year` AS `year`\n   FROM `market` AS `LHS`\n   INNER JOIN `film_market_estimation` AS `RHS` ON (`LHS`.`market_id` = `RHS`.`market_id`))\nWHERE (`country` = 'Japan')\nORDER BY YEAR\n", "sql2": "SELECT T1.Year\nFROM film_market_estimation AS T1\nJOIN market AS T2 ON T1.Market_ID = T2.Market_ID\nWHERE T2.Country = 'Japan'\nORDER BY T1.Year DESC", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM film\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM film", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0017", "sql1": "\nSELECT studio\nFROM\n  (SELECT studio,\n          COUNT(*) AS n\n   FROM film\n   GROUP BY studio)\nWHERE (n = 2)\nORDER BY studio\n", "sql2": "SELECT Studio\nFROM film\nGROUP BY Studio\nHAVING COUNT(*) >= 2", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0021", "sql1": "\nSELECT DISTINCT `studio`\nFROM\n  (SELECT *\n   FROM `film` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `film`\n           WHERE (`director` = 'Walter Hill')) AS RHS\n        WHERE (LHS.studio = RHS.studio) ))\nORDER BY studio\n", "sql2": "SELECT Studio\nFROM film\nEXCEPT\nSELECT Studio\nFROM film\nWHERE Director = 'Walter Hill'", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0016", "sql1": "\nSELECT studio\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT film_id,\n                title,\n                studio,\n                director,\n                gross_in_dollar,\n                COUNT(*) OVER () AS n\n         FROM film)\n      ORDER BY director DESC)\n   LIMIT 1)\n", "sql2": "SELECT Studio\nFROM film\nGROUP BY Studio\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT number_cities) OVER () AS count___\nFROM market\nWHERE (number_cities <= 300)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM market\nWHERE Number_cities < 300", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0011", "sql1": "\nSELECT director\nFROM\n  (SELECT LHS.estimation_id AS estimation_id,\n          LHS.low_estimate AS low_estimate,\n          LHS.high_estimate AS high_estimate,\n          LHS.film_id AS film_id,\n          LHS.type AS TYPE,\n          LHS.market_id AS market_id,\n          LHS.year AS YEAR,\n          RHS.title AS title,\n          RHS.studio AS studio,\n          RHS.director AS director,\n          RHS.gross_in_dollar AS gross_in_dollar\n   FROM film_market_estimation AS LHS\n   INNER JOIN film AS RHS ON (LHS.film_id = RHS.film_id))\nWHERE (YEAR = 1995)\nORDER BY director\n", "sql2": "SELECT DISTINCT T1.Director\nFROM film AS T1\nJOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID\nWHERE T2.Year = 1995", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0010", "sql1": "\nSELECT title,\n       TYPE\nFROM\n  (SELECT LHS.film_id AS film_id,\n          LHS.title AS title,\n          LHS.studio AS studio,\n          LHS.director AS director,\n          LHS.gross_in_dollar AS gross_in_dollar,\n          RHS.estimation_id AS estimation_id,\n          RHS.low_estimate AS low_estimate,\n          RHS.high_estimate AS high_estimate,\n          RHS.type AS TYPE,\n          RHS.market_id AS market_id,\n          RHS.year AS YEAR\n   FROM film AS LHS\n   INNER JOIN film_market_estimation AS RHS ON (LHS.film_id = RHS.film_id))\nORDER BY title\n", "sql2": "SELECT T1.Title,\n       T2.Type\nFROM film AS T1\nJOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/film_rank/0006", "sql1": "\nSELECT DISTINCT MAX(number_cities) OVER () AS max_number_cities_,\n                                        minnumber_cities AS min_number_cities_\nFROM\n  (SELECT market_id,\n          country,\n          number_cities,\n          MIN(number_cities) OVER () AS minnumber_cities\n   FROM market)\nORDER BY max_number_cities_\n", "sql2": "SELECT max(Number_cities),\n       min(Number_cities)\nFROM market", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0009", "sql1": "\nSELECT theme,\n       YEAR\nFROM exhibition\nWHERE (ticket_price <= 15.0)\nORDER BY theme\n", "sql2": "SELECT theme,\n       YEAR\nFROM exhibition\nWHERE ticket_price < 15", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0004", "sql1": "\nSELECT `name`,\n       `year_join`\nFROM `artist`\nWHERE (`country` != 'United States')\nORDER BY name\n", "sql2": "SELECT name,\n       year_join\nFROM artist\nWHERE country != 'United States'", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM exhibition AS RHS\n        WHERE (LHS.artist_id = RHS.artist_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM artist\nWHERE artist_id NOT IN\n    (SELECT artist_id\n     FROM exhibition)", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0015", "sql1": "\nSELECT theme,\n       YEAR\nFROM exhibition\nORDER BY theme\n", "sql2": "SELECT theme,\n       YEAR\nFROM exhibition\nORDER BY ticket_price DESC", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0003", "sql1": "\nSELECT DISTINCT country\nFROM artist\nORDER BY country\n", "sql2": "SELECT DISTINCT country\nFROM artist", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0002", "sql1": "\nSELECT name,\n       age,\n       country\nFROM artist\nORDER BY name\n", "sql2": "SELECT name,\n       age,\n       country\nFROM artist\nORDER BY Year_Join", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM artist\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artist", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM exhibition\n           WHERE (YEAR = 2004)) AS RHS\n        WHERE (LHS.artist_id = RHS.artist_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM artist\nEXCEPT\nSELECT T2.name\nFROM exhibition AS T1\nJOIN artist AS T2 ON T1.artist_id = T2.artist_id\nWHERE T1.year = 2004", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0020", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.year_join AS year_join,\n          LHS.age AS age,\n          LHS.exhibition_id AS exhibition_id,\n          LHS.year AS YEAR,\n          LHS.theme AS theme,\n          LHS.ticket_price AS ticket_price,\n          RHS.date AS date,\n          RHS.attendance AS attendance,\n          RHS.meanattendance AS meanattendance\n   FROM\n     (SELECT LHS.artist_id AS artist_id,\n             LHS.name AS name,\n             LHS.country AS country,\n             LHS.year_join AS year_join,\n             LHS.age AS age,\n             RHS.exhibition_id AS exhibition_id,\n             RHS.year AS YEAR,\n             RHS.theme AS theme,\n             RHS.ticket_price AS ticket_price\n      FROM artist AS LHS\n      INNER JOIN exhibition AS RHS ON (LHS.artist_id = RHS.artist_id)) AS LHS\n   INNER JOIN\n     (SELECT exhibition_id, date, attendance,\n                                  AVG(attendance) OVER () AS meanattendance\n      FROM exhibition_record) AS RHS ON (LHS.exhibition_id = RHS.exhibition_id))\nWHERE (meanattendance <= 200.0\n       OR meanattendance != attendance)\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM exhibition_record AS T1\nJOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id\nJOIN artist AS T3 ON T3.artist_id = T2.artist_id\nGROUP BY T3.artist_id\nHAVING avg(T1.attendance) > 200", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0016", "sql1": "\nSELECT theme, date, attendance\nFROM\n  (SELECT LHS.exhibition_id AS exhibition_id,\n          LHS.year AS YEAR,\n          LHS.theme AS theme,\n          LHS.artist_id AS artist_id,\n          LHS.ticket_price AS ticket_price,\n          RHS.date AS date,\n          RHS.attendance AS attendance\n   FROM\n     (SELECT *\n      FROM exhibition\n      WHERE (YEAR <= 2004)) AS LHS\n   INNER JOIN exhibition_record AS RHS ON (LHS.exhibition_id = RHS.exhibition_id))\nORDER BY theme\n", "sql2": "SELECT T2.theme,\n       T1.date,\n       T1.attendance\nFROM exhibition_record AS T1\nJOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id\nWHERE T2.year = 2004", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM artist\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM artist\nORDER BY year_join DESC\nLIMIT 1", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0011", "sql1": "\nSELECT DISTINCT name,\n                country\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.year_join AS year_join,\n          LHS.age AS age,\n          RHS.artist_id AS artist_id_other,\n          RHS.theme AS theme\n   FROM artist AS LHS\n   INNER JOIN\n     (SELECT artist_id,\n             theme,\n             COUNT(*) AS n\n      FROM exhibition\n      GROUP BY artist_id,\n               theme) AS RHS ON (LHS.artist_id = RHS.n))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       T2.country\nFROM exhibition AS T1\nJOIN artist AS T2 ON T1.artist_id = T2.artist_id\nGROUP BY T1.artist_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/theme_gallery/0010", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT age,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.artist_id AS artist_id,\n             LHS.name AS name,\n             LHS.country AS country,\n             LHS.year_join AS year_join,\n             LHS.age AS age,\n             RHS.exhibition_id AS exhibition_id,\n             RHS.year AS YEAR,\n             RHS.theme AS theme,\n             RHS.ticket_price AS ticket_price\n      FROM artist AS LHS\n      INNER JOIN exhibition AS RHS ON (LHS.artist_id = RHS.artist_id))\n   GROUP BY age,\n            name)\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM exhibition AS T1\nJOIN artist AS T2 ON T1.artist_id = T2.artist_id\nGROUP BY T1.artist_id", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/e_government/0013", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `state_province_county`,\n          COUNT(*) AS `n`\n   FROM `addresses`\n   GROUP BY `state_province_county`)\nWHERE (`state_province_county` = 'Colorado')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM addresses\nWHERE state_province_county = 'Colorado'", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0004", "sql1": "\nSELECT `payment_method_code`,\n       `party_phone`\nFROM `parties`\nWHERE (`party_email` = 'enrico09@example.com')\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       party_phone\nFROM parties\nWHERE party_email = 'enrico09@example.com'", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0002", "sql1": "\nSELECT DISTINCT form_type_code\nFROM forms\nORDER BY form_type_code\n", "sql2": "SELECT DISTINCT form_type_code\nFROM forms", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0014", "sql1": "\nSELECT payment_method_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT payment_method_code,\n                COUNT(*) AS n\n         FROM parties\n         GROUP BY payment_method_code)\n      ORDER BY n DESC)\n   LIMIT 3)\n", "sql2": "SELECT payment_method_code\nFROM parties\nGROUP BY payment_method_code\nHAVING count(*) > 3", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0001", "sql1": "\nSELECT individual_first_name,\n       individual_middle_name,\n       individual_last_name\nFROM individuals\nORDER BY individual_first_name\n", "sql2": "SELECT individual_first_name,\n       individual_middle_name,\n       individual_last_name\nFROM individuals\nORDER BY individual_last_name", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0020", "sql1": "\nSELECT individual_last_name\nFROM\n  (SELECT *\n   FROM individuals AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM organization_contact_individuals AS RHS\n        WHERE (LHS.individual_id = RHS.individual_id) ))\nORDER BY individual_last_name\n", "sql2": "SELECT DISTINCT t1.individual_last_name\nFROM individuals AS t1\nJOIN organization_contact_individuals AS t2 ON t1.individual_id = t2.individual_id", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT payment_method_code) OVER () AS count_distinct_payment_method_code_\nFROM parties\nORDER BY count_distinct_payment_method_code_\n", "sql2": "SELECT count(DISTINCT payment_method_code)\nFROM parties", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0007", "sql1": "\nSELECT organization_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM organizations\n      ORDER BY date_formed DESC)\n   LIMIT 1)\n", "sql2": "SELECT organization_name\nFROM organizations\nORDER BY date_formed DESC\nLIMIT 1", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0011", "sql1": "\nSELECT DISTINCT service_name\nFROM\n  (SELECT *\n   FROM services AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT LHS.booking_id AS booking_id,\n                  LHS.customer_id AS customer_id,\n                  LHS.service_id AS service_id,\n                  LHS.service_datetime AS service_datetime,\n                  LHS.booking_made_date AS booking_made_date,\n                  RHS.service_type_code AS service_type_code,\n                  RHS.service_name AS service_name,\n                  RHS.service_descriptio AS service_descriptio\n           FROM party_services AS LHS\n           LEFT JOIN services AS RHS ON (LHS.service_id = RHS.service_id)) AS RHS\n        WHERE (LHS.service_name = RHS.service_name) ))\nORDER BY service_name\n", "sql2": "SELECT service_name\nFROM services\nEXCEPT\nSELECT t1.service_name\nFROM services AS t1\nJOIN party_services AS t2 ON t1.service_id = t2.service_id", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM services\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM services", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/e_government/0006", "sql1": "\nSELECT organization_name\nFROM organizations\nORDER BY organization_name\n", "sql2": "SELECT organization_name\nFROM organizations\nORDER BY date_formed ASC", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`policy_id` AS `policy_id`,\n          `LHS`.`date_opened` AS `date_opened`,\n          `LHS`.`date_closed` AS `date_closed`,\n          `RHS`.`customer_name` AS `customer_name`\n   FROM `customers_policies` AS `LHS`\n   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Dayana Robel')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers AS t1\nJOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_name = 'Dayana Robel'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0013", "sql1": "\nSELECT service_name\nFROM services\nORDER BY service_name\n", "sql2": "SELECT service_name\nFROM services\nORDER BY service_name", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0005", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT policy_type_code,\n          COUNT(*) AS n\n   FROM available_policies\n   GROUP BY policy_type_code)\nWHERE (n > 4)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM available_policies\nGROUP BY policy_type_code\nHAVING count(*) > 4", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0008", "sql1": "\nSELECT effective_date\nFROM\n  (SELECT claim_id,\n          fnol_id,\n          effective_date,\n          claim_id_other,\n          effective_date_other,\n          settlement_amount,\n          claim_id AS settlement_id\n   FROM\n     (SELECT LHS.claim_id AS claim_id,\n             LHS.fnol_id AS fnol_id,\n             LHS.effective_date AS effective_date,\n             RHS.claim_id AS claim_id_other,\n             RHS.effective_date AS effective_date_other,\n             RHS.settlement_amount AS settlement_amount\n      FROM claims AS LHS\n      INNER JOIN settlements AS RHS ON (LHS.claim_id = RHS.settlement_id)))\nORDER BY effective_date\n", "sql2": "SELECT t1.Effective_Date\nFROM claims AS t1\nJOIN settlements AS t2 ON t1.claim_id = t2.claim_id\nGROUP BY t1.claim_id\nORDER BY sum(t2.settlement_amount) DESC\nLIMIT 1", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0015", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM first_notification_of_loss AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nEXCEPT\nSELECT t1.customer_name\nFROM customers AS t1\nJOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0003", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT policy_id,\n                policy_type_code,\n                COUNT(*) AS n\n         FROM available_policies\n         GROUP BY policy_id,\n                  policy_type_code)\n      ORDER BY policy_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT policy_type_code\nFROM available_policies\nGROUP BY policy_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0019", "sql1": "\nSELECT DISTINCT MAX(settlement_amount) OVER () AS max_settlement_amount_,\n                                            minsettlement_amount AS min_settlement_amount_\nFROM\n  (SELECT settlement_id,\n          claim_id,\n          effective_date,\n          settlement_amount,\n          MIN(settlement_amount) OVER () AS minsettlement_amount\n   FROM settlements)\nORDER BY max_settlement_amount_\n", "sql2": "SELECT max(settlement_amount),\n       min(settlement_amount)\nFROM settlements", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0002", "sql1": "\nSELECT `customer_phone`\nFROM `available_policies`\nWHERE (`policy_type_code` = 'Life Insurance')\nORDER BY customer_phone\n", "sql2": "SELECT customer_phone\nFROM available_policies\nWHERE policy_type_code = 'Life Insurance'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0014", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM services\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM services", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0001", "sql1": "\nSELECT customer_phone\nFROM available_policies\nORDER BY customer_phone\n", "sql2": "SELECT customer_phone\nFROM available_policies", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0020", "sql1": "\nSELECT customer_id,\n       customer_name\nFROM customers\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       customer_name\nFROM customers\nORDER BY customer_id ASC", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0016", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`fnol_id` AS `fnol_id`,\n          `LHS`.`policy_id` AS `policy_id`,\n          `LHS`.`service_id` AS `service_id`,\n          `RHS`.`service_name` AS `service_name`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `RHS`.`fnol_id` AS `fnol_id`,\n             `RHS`.`policy_id` AS `policy_id`,\n             `RHS`.`service_id` AS `service_id`\n      FROM `customers` AS `LHS`\n      INNER JOIN `first_notification_of_loss` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `services`\n      WHERE (`service_name` = 'Close a policy'\n             OR `service_name` = 'Upgrade a policy')) AS RHS ON (LHS.service_id = RHS.service_id))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id\nJOIN services AS t3 ON t2.service_id = t3.service_id\nWHERE t3.service_name = 'Close a policy'\n  OR t3.service_name = 'Upgrade a policy'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0007", "sql1": "\nSELECT DISTINCT service_name\nFROM\n  (SELECT LHS.service_id AS service_id,\n          LHS.service_name AS service_name,\n          LHS.fnol_id AS fnol_id,\n          LHS.customer_id AS customer_id,\n          LHS.policy_id AS policy_id,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.service_id AS service_id,\n             LHS.service_name AS service_name,\n             LHS.fnol_id AS fnol_id,\n             LHS.customer_id AS customer_id,\n             LHS.policy_id AS policy_id,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.service_id AS service_id,\n                LHS.service_name AS service_name,\n                RHS.fnol_id AS fnol_id,\n                RHS.customer_id AS customer_id,\n                RHS.policy_id AS policy_id\n         FROM services AS LHS\n         INNER JOIN first_notification_of_loss AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS\n      INNER JOIN\n        (SELECT service_id,\n                COUNT(*) AS n\n         FROM first_notification_of_loss\n         GROUP BY service_id) AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT service_id,\n                COUNT(*) AS n\n         FROM first_notification_of_loss\n         GROUP BY service_id)\n      WHERE (n > 2)) AS RHS ON (LHS.service_id = RHS.service_id\n                                AND LHS.n = RHS.n))\nORDER BY service_name\n", "sql2": "SELECT t2.service_name\nFROM first_notification_of_loss AS t1\nJOIN services AS t2 ON t1.service_id = t2.service_id\nGROUP BY t1.service_id\nHAVING count(*) > 2", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0011", "sql1": "\nSELECT DISTINCT `policy_type_code`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`policy_id` AS `policy_id`,\n          `LHS`.`policy_type_code` AS `policy_type_code`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`date_opened` AS `date_opened`,\n          `LHS`.`date_closed` AS `date_closed`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`policy_id` AS `policy_id`,\n             `LHS`.`policy_type_code` AS `policy_type_code`,\n             `LHS`.`customer_phone` AS `customer_phone`,\n             `RHS`.`date_opened` AS `date_opened`,\n             `RHS`.`date_closed` AS `date_closed`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `RHS`.`policy_id` AS `policy_id`,\n                `RHS`.`policy_type_code` AS `policy_type_code`,\n                `RHS`.`customer_phone` AS `customer_phone`\n         FROM `customers` AS `LHS`\n         CROSS JOIN `available_policies` AS `RHS`) AS `LHS`\n      INNER JOIN `customers_policies` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`\n                                                      AND `LHS`.`policy_id` = `RHS`.`policy_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `customers`\n      WHERE (`customer_name` = 'Dayana Robel')) AS RHS ON (LHS.customer_id = RHS.customer_id\n                                                           AND LHS.customer_name = RHS.customer_name))\nORDER BY policy_type_code\n", "sql2": "SELECT DISTINCT t3.policy_type_code\nFROM customers AS t1\nJOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id\nJOIN available_policies AS t3 ON t2.policy_id = t3.policy_id\nWHERE t1.customer_name = 'Dayana Robel'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/insurance_fnol/0006", "sql1": "\nSELECT DISTINCT SUM(settlement_amount) OVER () AS sum_settlement_amount_,\n                                            meansettlement_amount AS avg_settlement_amount_\nFROM\n  (SELECT settlement_id,\n          claim_id,\n          effective_date,\n          settlement_amount,\n          AVG(settlement_amount) OVER () AS meansettlement_amount\n   FROM settlements)\nORDER BY sum_settlement_amount_\n", "sql2": "SELECT sum(settlement_amount),\n       avg(settlement_amount)\nFROM settlements", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0009", "sql1": "\nSELECT fname,\n       lname\nFROM student\nWHERE (major = 600)\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM Student\nWHERE Major = 600;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0005", "sql1": "\nSELECT `restypedescription`\nFROM `restaurant_type`\nWHERE (`restypename` = 'Sandwich')\nORDER BY restypedescription\n", "sql2": "SELECT ResTypeDescription\nFROM Restaurant_Type\nWHERE ResTypeName = 'Sandwich';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0004", "sql1": "\nSELECT restypename\nFROM restaurant_type\nORDER BY restypename\n", "sql2": "SELECT ResTypeName\nFROM Restaurant_Type;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0008", "sql1": "\nSELECT `sex`\nFROM `student`\nWHERE (`fname` = 'Linda'\n       AND `lname` = 'Smith')\nORDER BY sex\n", "sql2": "SELECT Sex\nFROM Student\nWHERE Fname = 'Linda'\n  AND Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0015", "sql1": "\nSELECT fname,\n       lname\nFROM student\nWHERE (age > 18\n       AND major >= 600)\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM Student\nWHERE Age > 18\n  AND Major = 600;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0003", "sql1": "\nSELECT `rating`\nFROM `restaurant`\nWHERE (`resname` = 'Subway')\nORDER BY rating\n", "sql2": "SELECT Rating\nFROM Restaurant\nWHERE ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0019", "sql1": "\nSELECT `resid` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`resid` AS `resid`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`spent` AS `spent`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`resname` AS `resname`,\n          `LHS`.`address` AS `address`,\n          `LHS`.`rating` AS `rating`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`resid` AS `resid`,\n             `LHS`.`time` AS `time`,\n             `LHS`.`spent` AS `spent`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`resname` AS `resname`,\n             `RHS`.`address` AS `address`,\n             `RHS`.`rating` AS `rating`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`resid` AS `resid`,\n                `LHS`.`time` AS `time`,\n                `LHS`.`spent` AS `spent`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`,\n                `RHS`.`age` AS `age`,\n                `RHS`.`sex` AS `sex`,\n                `RHS`.`major` AS `major`,\n                `RHS`.`advisor` AS `advisor`,\n                `RHS`.`city_code` AS `city_code`\n         FROM `visits_restaurant` AS `LHS`\n         INNER JOIN\n           (SELECT *\n            FROM `student`\n            WHERE (`fname` != 'Linda'\n                   OR `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `restaurant`\n         WHERE (`resname` = 'Subway')) AS `RHS` ON (`LHS`.`resid` = `RHS`.`resid`)) AS `LHS`\n   INNER JOIN\n     (SELECT `age`,\n             `fname`,\n             COUNT(*) AS `n`\n      FROM `student`\n      WHERE (`fname` != 'Linda'\n             OR `lname` = 'Smith')\n      GROUP BY age,\n               fname) AS RHS ON (LHS.fname = RHS.fname\n                                 AND LHS.age = RHS.age))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nJOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID\nJOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID\nWHERE Student.Fname = 'Linda'\n  AND Student.Lname = 'Smith'\n  AND Restaurant.ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0018", "sql1": "\nSELECT `spent` AS `sum_spent_`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`resid` AS `resid`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`spent` AS `spent`,\n          `LHS`.`sumspent` AS `sumspent`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`resid` AS `resid`,\n             `LHS`.`time` AS `time`,\n             `LHS`.`spent` AS `spent`,\n             `RHS`.`sumspent` AS `sumspent`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`resid` AS `resid`,\n                `RHS`.`time` AS `time`,\n                `RHS`.`spent` AS `spent`\n         FROM `student` AS `LHS`\n         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN\n        (SELECT `stuid`,\n                `resid`,\n                `time`,\n                `spent`,\n                SUM(`spent`) OVER () AS `sumspent`\n         FROM `visits_restaurant`) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                   AND `LHS`.`resid` = `RHS`.`resid`\n                                                   AND `LHS`.`time` = `RHS`.`time`\n                                                   AND `LHS`.`spent` = `RHS`.`spent`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`fname` = 'Linda'\n             AND `lname` = 'Smith')) AS RHS ON (LHS.stuid = RHS.stuid\n                                                AND LHS.lname = RHS.lname\n                                                AND LHS.fname = RHS.fname\n                                                AND LHS.age = RHS.age\n                                                AND LHS.sex = RHS.sex\n                                                AND LHS.major = RHS.major\n                                                AND LHS.advisor = RHS.advisor\n                                                AND LHS.city_code = RHS.city_code))\nORDER BY sum_spent_\n", "sql2": "SELECT sum(Spent)\nFROM Student\nJOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID\nWHERE Student.Fname = 'Linda'\n  AND Student.Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0002", "sql1": "\nSELECT `address`\nFROM `restaurant`\nWHERE (`resname` = 'Subway')\nORDER BY address\n", "sql2": "SELECT Address\nFROM Restaurant\nWHERE ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0014", "sql1": "\nSELECT major,\n       n AS count___\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nWHERE (n >= 2\n       AND n < 30)\nORDER BY major\n", "sql2": "SELECT Major,\n       count(*)\nFROM Student\nGROUP BY Major\nHAVING count(Major) BETWEEN 2 AND 30;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0001", "sql1": "\nSELECT resname\nFROM restaurant\nORDER BY resname\n", "sql2": "SELECT ResName\nFROM Restaurant;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0017", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT LHS.resid AS resid,\n          LHS.restypeid AS restypeid,\n          LHS.restypename AS restypename,\n          LHS.restypedescription AS restypedescription,\n          RHS.resname AS resname,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.resid AS resid,\n             LHS.restypeid AS restypeid,\n             RHS.restypename AS restypename,\n             RHS.restypedescription AS restypedescription\n      FROM type_of_restaurant AS LHS\n      INNER JOIN restaurant_type AS RHS ON (LHS.restypeid = RHS.restypeid)) AS LHS\n   CROSS JOIN\n     (SELECT resname,\n             COUNT(*) AS n\n      FROM restaurant\n      GROUP BY resname) AS RHS)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Restaurant\nJOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID\nJOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID\nGROUP BY Type_Of_Restaurant.ResTypeID\nHAVING Restaurant_Type.ResTypeName = 'Sandwich'", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0020", "sql1": "\nSELECT `time`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`resid` AS `resid`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`spent` AS `spent`,\n          `RHS`.`resname` AS `resname`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`rating` AS `rating`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`resid` AS `resid`,\n             `LHS`.`time` AS `time`,\n             `LHS`.`spent` AS `spent`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`resid` AS `resid`,\n                `RHS`.`time` AS `time`,\n                `RHS`.`spent` AS `spent`\n         FROM `student` AS `LHS`\n         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `student`\n         WHERE (`fname` != 'Linda'\n                OR `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                    AND `LHS`.`lname` = `RHS`.`lname`\n                                                    AND `LHS`.`fname` = `RHS`.`fname`\n                                                    AND `LHS`.`age` = `RHS`.`age`\n                                                    AND `LHS`.`sex` = `RHS`.`sex`\n                                                    AND `LHS`.`major` = `RHS`.`major`\n                                                    AND `LHS`.`advisor` = `RHS`.`advisor`\n                                                    AND `LHS`.`city_code` = `RHS`.`city_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `restaurant`\n      WHERE (`resname` = 'Subway')) AS RHS ON (LHS.resid = RHS.resid))\nORDER BY TIME\n", "sql2": "SELECT TIME\nFROM Student\nJOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID\nJOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID\nWHERE Student.Fname = 'Linda'\n  AND Student.Lname = 'Smith'\n  AND Restaurant.ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0007", "sql1": "\nSELECT `age`\nFROM `student`\nWHERE (`fname` = 'Linda'\n       AND `lname` = 'Smith')\nORDER BY age\n", "sql2": "SELECT Age\nFROM Student\nWHERE Fname = 'Linda'\n  AND Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0011", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT advisor,\n          major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor,\n            major)\nWHERE (advisor = 1121\n       OR n > 1121)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE Advisor = 1121;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0010", "sql1": "\nSELECT `city_code`\nFROM `student`\nWHERE (`fname` = 'Linda'\n       AND `lname` = 'Smith')\nORDER BY city_code\n", "sql2": "SELECT city_code\nFROM Student\nWHERE Fname = 'Linda'\n  AND Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/restaurant_1/0006", "sql1": "\nSELECT resname,\n       rating\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM restaurant\n      ORDER BY address)\n   LIMIT 1)\n", "sql2": "SELECT ResName,\n       Rating\nFROM Restaurant\nORDER BY Rating DESC\nLIMIT 1;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0009", "sql1": "\nSELECT DISTINCT SUM(`beds`) OVER () AS `sum_beds_`\nFROM `rooms`\nWHERE (`bedtype` = 'King')\nORDER BY sum_beds_\n", "sql2": "SELECT sum(beds)\nFROM Rooms\nWHERE bedtype = 'King';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0033", "sql1": "\nSELECT roomname,\n       n AS count___,\n       roomid AS room\nFROM\n  (SELECT LHS.roomid AS roomid,\n          LHS.roomname AS roomname,\n          LHS.beds AS beds,\n          LHS.bedtype AS bedtype,\n          LHS.maxoccupancy AS maxoccupancy,\n          LHS.baseprice AS baseprice,\n          LHS.decor AS decor,\n          RHS.n AS n\n   FROM rooms AS LHS\n   INNER JOIN\n     (SELECT room,\n             COUNT(*) AS n\n      FROM reservations\n      GROUP BY room) AS RHS ON (LHS.roomid = RHS.room))\nORDER BY roomname\n", "sql2": "SELECT T2.roomName,\n       count(*),\n       T1.Room\nFROM Reservations AS T1\nJOIN Rooms AS T2 ON T1.Room = T2.RoomId\nGROUP BY T1.Room", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0013", "sql1": "\nSELECT bedtype,\n       meanbaseprice AS avg_baseprice_\nFROM\n  (SELECT bedtype,\n          AVG(baseprice) AS meanbaseprice\n   FROM rooms\n   GROUP BY bedtype)\nORDER BY bedtype\n", "sql2": "SELECT bedType,\n       avg(basePrice)\nFROM Rooms\nGROUP BY bedType;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `firstname`,\n          `lastname`,\n          COUNT(*) AS `n`\n   FROM `reservations`\n   GROUP BY `firstname`,\n            `lastname`)\nWHERE (`firstname` = 'ROY'\n       OR `lastname` = 'SWEAZY')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Reservations\nWHERE FirstName = 'ROY'\n  AND LastName = 'SWEAZY';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0029", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT bedtype) OVER () AS count_distinct_bedtype_\nFROM rooms\nORDER BY count_distinct_bedtype_\n", "sql2": "SELECT count(DISTINCT bedType)\nFROM Rooms;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0028", "sql1": "\nSELECT `roomname`\nFROM `rooms`\nWHERE (`bedtype` = 'King'\n       OR `bedtype` = 'Queen')\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nWHERE bedType = 'King'\n  OR bedType = 'Queen';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0004", "sql1": "\nSELECT `kids`\nFROM `reservations`\nWHERE (`firstname` = 'ROY'\n       OR `lastname` = 'SWEAZY')\nORDER BY kids\n", "sql2": "SELECT kids\nFROM Reservations\nWHERE FirstName = 'ROY'\n  AND LastName = 'SWEAZY';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0012", "sql1": "\nSELECT `decor`\nFROM `rooms`\nWHERE (`roomname` = 'Recluse and defiance')\nORDER BY decor\n", "sql2": "SELECT decor\nFROM Rooms\nWHERE roomName = 'Recluse and defiance';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0032", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT code,\n             room,\n             checkin,\n             checkout,\n             rate,\n             lastname,\n             firstname,\n             adults,\n             kids,\n             roomname,\n             beds,\n             bedtype,\n             maxoccupancy,\n             baseprice,\n             roomid,\n             firstname AS decor\n      FROM\n        (SELECT code,\n                room,\n                checkin,\n                checkout,\n                rate,\n                lastname,\n                firstname,\n                adults,\n                kids,\n                roomname,\n                beds,\n                bedtype,\n                maxoccupancy,\n                baseprice,\n                checkin AS roomid\n         FROM\n           (SELECT LHS.code AS code,\n                   LHS.room AS room,\n                   LHS.checkin AS checkin,\n                   LHS.checkout AS checkout,\n                   LHS.rate AS rate,\n                   LHS.lastname AS lastname,\n                   LHS.firstname AS firstname,\n                   LHS.adults AS adults,\n                   LHS.kids AS kids,\n                   RHS.roomname AS roomname,\n                   RHS.beds AS beds,\n                   RHS.bedtype AS bedtype,\n                   RHS.maxoccupancy AS maxoccupancy,\n                   RHS.baseprice AS baseprice\n            FROM reservations AS LHS\n            INNER JOIN rooms AS RHS ON (LHS.checkin = RHS.roomid\n                                           AND LHS.firstname = RHS.decor)))))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM rooms\nWHERE roomid NOT IN\n    (SELECT DISTINCT room\n     FROM reservations)", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0024", "sql1": "\nSELECT `decor`,\n       `n` AS `count___`\nFROM\n  (SELECT `bedtype`,\n          `decor`,\n          COUNT(*) AS `n`\n   FROM `rooms`\n   GROUP BY `bedtype`,\n            `decor`)\nWHERE (`bedtype` = 'King')\nORDER BY decor\n", "sql2": "SELECT decor,\n       count(*)\nFROM Rooms\nWHERE bedType = 'King'\nGROUP BY decor;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0019", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `bedtype`,\n          COUNT(*) AS `n`\n   FROM `rooms`\n   GROUP BY `bedtype`)\nWHERE (`bedtype` = 'King')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Rooms\nWHERE bedType = 'King';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0023", "sql1": "\nSELECT `roomname`,\n       `bedtype`\nFROM `rooms`\nWHERE (`decor` = 'traditional')\nORDER BY roomname\n", "sql2": "SELECT roomName,\n       bedType\nFROM Rooms\nWHERE decor = 'traditional';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0035", "sql1": "\nSELECT roomname\nFROM rooms\nWHERE (baseprice > 120\n       AND baseprice <= 150)\nORDER BY roomname\n", "sql2": "SELECT roomname\nFROM rooms\nWHERE baseprice BETWEEN 120 AND 150", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0018", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM rooms)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Rooms;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0002", "sql1": "\nSELECT roomname,\n       roomid\nFROM rooms\nWHERE (baseprice >= 160\n       OR maxoccupancy < 2)\nORDER BY roomname\n", "sql2": "SELECT roomName,\n       RoomId\nFROM Rooms\nWHERE basePrice > 160\n  AND maxOccupancy > 2;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0014", "sql1": "\nSELECT `summaxoccupancy` AS `sum_maxoccupancy_`\nFROM\n  (SELECT `decor`,\n          SUM(`maxoccupancy`) AS `summaxoccupancy`\n   FROM `rooms`\n   GROUP BY `decor`)\nWHERE (`decor` = 'modern')\nORDER BY sum_maxoccupancy_\n", "sql2": "SELECT sum(maxOccupancy)\nFROM Rooms\nWHERE decor = 'modern';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0001", "sql1": "\nSELECT `roomname`\nFROM\n  (SELECT *\n   FROM `rooms`\n   WHERE (`decor` = 'modern'\n          AND baseprice != 160))\nWHERE (beds = 2\n       OR baseprice = 2)\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nWHERE basePrice < 160\n  AND beds = 2\n  AND decor = 'modern';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0021", "sql1": "\nSELECT roomname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM rooms\n      ORDER BY roomname)\n   LIMIT 1)\n", "sql2": "SELECT roomName\nFROM Rooms\nORDER BY maxOccupancy DESC\nLIMIT 1;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0020", "sql1": "\nSELECT bedtype,\n       n AS count___\nFROM\n  (SELECT bedtype,\n          COUNT(*) AS n\n   FROM rooms\n   GROUP BY bedtype)\nORDER BY bedtype\n", "sql2": "SELECT bedType,\n       count(*)\nFROM Rooms\nGROUP BY bedType;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0031", "sql1": "\nSELECT roomname\nFROM\n  (SELECT roomid,\n          roomname,\n          beds,\n          bedtype,\n          maxoccupancy,\n          baseprice,\n          decor,\n          AVG(baseprice) OVER () AS meanbaseprice\n   FROM rooms)\nWHERE (meanbaseprice <= baseprice)\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nWHERE basePrice >\n    (SELECT avg(basePrice)\n     FROM Rooms);", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0027", "sql1": "\nSELECT decor,\n       n AS count___\nFROM\n  (SELECT decor,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM rooms\n      WHERE (baseprice >= 120))\n   GROUP BY decor)\nORDER BY decor\n", "sql2": "SELECT decor,\n       count(*)\nFROM Rooms\nWHERE basePrice > 120\nGROUP BY decor;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0010", "sql1": "\nSELECT `roomname`,\n       `decor`\nFROM `rooms`\nWHERE (`bedtype` = 'King')\nORDER BY roomname\n", "sql2": "SELECT roomName,\n       decor\nFROM Rooms\nWHERE bedtype = 'King'\nORDER BY basePrice;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/inn_1/0026", "sql1": "\nSELECT roomname\nFROM rooms\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nORDER BY basePrice;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0009", "sql1": "\nSELECT `problem_description`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_first_name` AS `staff_first_name`,\n          `LHS`.`staff_last_name` AS `staff_last_name`,\n          `LHS`.`other_staff_details` AS `other_staff_details`,\n          `RHS`.`problem_id` AS `problem_id`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,\n          `RHS`.`date_problem_reported` AS `date_problem_reported`,\n          `RHS`.`date_problem_closed` AS `date_problem_closed`,\n          `RHS`.`problem_description` AS `problem_description`,\n          `RHS`.`other_problem_details` AS `other_problem_details`\n   FROM\n     (SELECT *\n      FROM `staff`\n      WHERE (`staff_first_name` = 'Christop')) AS LHS\n   INNER JOIN problems AS RHS ON (LHS.staff_id = RHS.reported_by_staff_id))\nORDER BY problem_description\n", "sql2": "SELECT T1.problem_description\nFROM problems AS T1\nJOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id\nWHERE T2.staff_first_name = 'Christop'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0013", "sql1": "\nSELECT n AS count___,\n       product_id\nFROM\n  (SELECT product_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_name AS product_name,\n             LHS.product_details AS product_details,\n             RHS.problem_id AS problem_id,\n             RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,\n             RHS.reported_by_staff_id AS reported_by_staff_id,\n             RHS.date_problem_reported AS date_problem_reported,\n             RHS.date_problem_closed AS date_problem_closed,\n             RHS.problem_description AS problem_description,\n             RHS.other_problem_details AS other_problem_details\n      FROM product AS LHS\n      INNER JOIN problems AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY product_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T2.product_id\nFROM problems AS T1\nJOIN product AS T2 ON T1.product_id = T2.product_id\nGROUP BY T2.product_id", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0004", "sql1": "\nSELECT problem_log_id,\n       log_entry_description\nFROM problem_log\nORDER BY problem_log_id\n", "sql2": "SELECT problem_log_id,\n       log_entry_description\nFROM problem_log", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0012", "sql1": "\nSELECT `problem_id`\nFROM `problems`\nWHERE (`date_problem_reported` <= parse_datetime('1978-06-26'))\nORDER BY problem_id\n", "sql2": "SELECT problem_id\nFROM problems\nWHERE date_problem_reported < '1978-06-26'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0008", "sql1": "\nSELECT product_id_other AS count___,\n       product_name\nFROM\n  (SELECT product_id,\n          product_name,\n          product_details,\n          product_id_other,\n          product_id AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_name AS product_name,\n             LHS.product_details AS product_details,\n             RHS.product_id AS product_id_other\n      FROM product AS LHS\n      INNER JOIN\n        (SELECT other_problem_details,\n                product_id,\n                COUNT(*) AS n\n         FROM problems\n         GROUP BY other_problem_details,\n                  product_id) AS RHS ON (LHS.product_id = RHS.n\n                                         AND LHS.product_details = RHS.other_problem_details)))\nORDER BY count___\n\n[   631.880][MainProcess][INFO] Statistics:\n[   631.881][MainProcess][INFO] \tAttempted programs: 178 (approx)\n[   631.881][MainProcess][INFO] \t\tRejected: 177 (approx)\n[   631.881][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   631.881][MainProcess][INFO] \t\tEmpty outputs: 60 (33.7%) (approx)\n[   631.881][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   631.881][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   631.881][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   631.881][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   631.881][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   631.881][MainProcess][INFO] \tTotal time spent in enumerator: 79.534486 (approx)\n[   631.881][MainProcess][INFO] \t\tEnumerated 2.238023 programs/s avg. (just enumeration time)\n[   631.881][MainProcess][INFO] \t\tEnumerated 0.282594 programs/s avg. (overall)\n[   631.881][MainProcess][INFO] \tTotal time spent in evaluation & testing: 474.580122 (approx)\n[   631.881][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 9.118346 (approx)\n[   631.881][MainProcess][INFO] Solution found: [summarise(input1, 'n = n()', \"'other_problem_details','product_id'\"), inner_join(input0, line0, \"'product_id' = 'n','product_details' = 'other_problem_details'\")]\n[   631.882][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 164, in endr\n    rlib.Rf_endEmbeddedR(fatal)\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT count(*),\n       T1.product_name\nFROM product AS T1\nJOIN problems AS T2 ON T1.product_id = T2.product_id\nGROUP BY T1.product_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0015", "sql1": "\nSELECT product_name\nFROM product\nORDER BY product_name\n", "sql2": "SELECT DISTINCT product_name\nFROM product\nORDER BY product_name", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0003", "sql1": "\nSELECT problem_log_id,\n       log_entry_date\nFROM problem_log\nWHERE (problem_id = 10)\nORDER BY problem_log_id\n", "sql2": "SELECT problem_log_id,\n       log_entry_date\nFROM problem_log\nWHERE problem_id = 10", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0018", "sql1": "\nSELECT `product_id`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `problem_id`,\n             `product_id`,\n             `closure_authorised_by_staff_id`,\n             `reported_by_staff_id`,\n             `date_problem_reported`,\n             `date_problem_closed`,\n             `problem_description`,\n             `other_problem_details`,\n             `staff_first_name`,\n             `staff_last_name`,\n             `staff_id`,\n             `problem_description` AS `other_staff_details`\n      FROM\n        (SELECT `problem_id`,\n                `product_id`,\n                `closure_authorised_by_staff_id`,\n                `reported_by_staff_id`,\n                `date_problem_reported`,\n                `date_problem_closed`,\n                `problem_description`,\n                `other_problem_details`,\n                `staff_first_name`,\n                `staff_last_name`,\n                `closure_authorised_by_staff_id` AS `staff_id`\n         FROM\n           (SELECT `LHS`.`problem_id` AS `problem_id`,\n                   `LHS`.`product_id` AS `product_id`,\n                   `LHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,\n                   `LHS`.`reported_by_staff_id` AS `reported_by_staff_id`,\n                   `LHS`.`date_problem_reported` AS `date_problem_reported`,\n                   `LHS`.`date_problem_closed` AS `date_problem_closed`,\n                   `LHS`.`problem_description` AS `problem_description`,\n                   `LHS`.`other_problem_details` AS `other_problem_details`,\n                   `RHS`.`staff_first_name` AS `staff_first_name`,\n                   `RHS`.`staff_last_name` AS `staff_last_name`\n            FROM `problems` AS `LHS`\n            INNER JOIN `staff` AS `RHS` ON (`LHS`.`closure_authorised_by_staff_id` = `RHS`.`staff_id`\n                                               AND `LHS`.`problem_description` = `RHS`.`other_staff_details`))))\n   WHERE (`staff_first_name` = 'Ashley'\n          OR `staff_last_name` = 'Medhurst'))\nWHERE (`staff_first_name` = 'Christop'\n       OR `staff_last_name` != 'Berge')\nORDER BY product_id\n", "sql2": "SELECT product_id\nFROM problems AS T1\nJOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id\nWHERE T2.staff_first_name = 'Christop'\n  AND T2.staff_last_name = 'Berge' INTERSECT\n  SELECT product_id\n  FROM problems AS T1\n  JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Ashley'\n  AND T2.staff_last_name = 'Medhurst'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0002", "sql1": "\nSELECT assigned_to_staff_id_other AS problem_log_id,\n       assigned_to_staff_id AS problem_id\nFROM\n  (SELECT LHS.problem_log_id AS problem_log_id,\n          LHS.assigned_to_staff_id AS assigned_to_staff_id,\n          LHS.problem_id AS problem_id,\n          LHS.problem_category_code AS problem_category_code,\n          LHS.problem_status_code AS problem_status_code,\n          LHS.log_entry_date AS log_entry_date,\n          LHS.log_entry_description AS log_entry_description,\n          LHS.log_entry_fix AS log_entry_fix,\n          LHS.other_log_details AS other_log_details,\n          RHS.problem_log_id AS problem_log_id_other,\n          RHS.assigned_to_staff_id AS assigned_to_staff_id_other,\n          RHS.problem_id AS problem_id_other,\n          RHS.problem_category_code AS problem_category_code_other,\n          RHS.problem_status_code AS problem_status_code_other,\n          RHS.log_entry_date AS log_entry_date_other,\n          RHS.log_entry_fix AS log_entry_fix_other\n   FROM problem_log AS LHS\n   INNER JOIN problem_log AS RHS ON (LHS.log_entry_description = RHS.log_entry_description\n                                        AND LHS.log_entry_fix = RHS.other_log_details))\nORDER BY problem_log_id\n\n[   636.716][MainProcess][INFO] Statistics:\n[   636.717][MainProcess][INFO] \tAttempted programs: 26 (approx)\n[   636.717][MainProcess][INFO] \t\tRejected: 25 (approx)\n[   636.717][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   636.717][MainProcess][INFO] \t\tEmpty outputs: 10 (38.5%) (approx)\n[   636.717][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   636.717][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   636.717][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   636.717][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   636.718][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   636.718][MainProcess][INFO] \tTotal time spent in enumerator: 0.353274 (approx)\n[   636.718][MainProcess][INFO] \t\tEnumerated 73.597341 programs/s avg. (just enumeration time)\n[   636.718][MainProcess][INFO] \t\tEnumerated 0.046428 programs/s avg. (overall)\n[   636.718][MainProcess][INFO] \tTotal time spent in evaluation & testing: 249.796611 (approx)\n[   636.718][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 0.237587 (approx)\n[   636.718][MainProcess][INFO] Solution found: [inner_join(input0, input0, \"'log_entry_description' = 'log_entry_description','log_entry_fix' = 'other_log_details'\")]\n[   636.718][MainProcess][INFO] Solution size: 1\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 163, in endr\n    rlib.R_gc()\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT problem_log_id,\n       problem_id\nFROM problem_log\nORDER BY log_entry_date\nLIMIT 1", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0001", "sql1": "\nSELECT problem_log_id\nFROM\n  (SELECT LHS.problem_log_id AS problem_log_id,\n          LHS.assigned_to_staff_id AS assigned_to_staff_id,\n          LHS.problem_id AS problem_id,\n          LHS.problem_category_code AS problem_category_code,\n          LHS.problem_status_code AS problem_status_code,\n          LHS.log_entry_date AS log_entry_date,\n          LHS.log_entry_description AS log_entry_description,\n          LHS.log_entry_fix AS log_entry_fix,\n          LHS.other_log_details AS other_log_details,\n          RHS.problem_log_id AS problem_log_id_other,\n          RHS.assigned_to_staff_id AS assigned_to_staff_id_other,\n          RHS.problem_id AS problem_id_other,\n          RHS.problem_category_code AS problem_category_code_other,\n          RHS.problem_status_code AS problem_status_code_other,\n          RHS.log_entry_date AS log_entry_date_other,\n          RHS.log_entry_fix AS log_entry_fix_other\n   FROM problem_log AS LHS\n   INNER JOIN problem_log AS RHS ON (LHS.log_entry_description = RHS.log_entry_description\n                                        AND LHS.log_entry_fix = RHS.other_log_details))\nORDER BY problem_log_id\n", "sql2": "SELECT problem_log_id\nFROM problem_log\nORDER BY log_entry_date DESC\nLIMIT 1", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0016", "sql1": "\nSELECT product_name\nFROM product\nORDER BY product_name\n", "sql2": "SELECT DISTINCT product_name\nFROM product\nORDER BY product_id", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0007", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT product_id,\n             product_name,\n             product_details,\n             product_id_other,\n             closure_authorised_by_staff_id,\n             reported_by_staff_id,\n             date_problem_reported,\n             date_problem_closed,\n             other_problem_details,\n             problem_id,\n             product_name AS problem_description\n      FROM\n        (SELECT product_id,\n                product_name,\n                product_details,\n                product_id_other,\n                closure_authorised_by_staff_id,\n                reported_by_staff_id,\n                date_problem_reported,\n                date_problem_closed,\n                other_problem_details,\n                product_id AS problem_id\n         FROM\n           (SELECT LHS.product_id AS product_id,\n                   LHS.product_name AS product_name,\n                   LHS.product_details AS product_details,\n                   RHS.product_id AS product_id_other,\n                   RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,\n                   RHS.reported_by_staff_id AS reported_by_staff_id,\n                   RHS.date_problem_reported AS date_problem_reported,\n                   RHS.date_problem_closed AS date_problem_closed,\n                   RHS.other_problem_details AS other_problem_details\n            FROM product AS LHS\n            INNER JOIN problems AS RHS ON (LHS.product_id = RHS.problem_id\n                                              AND LHS.product_name = RHS.problem_description)))))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM product AS T1\nJOIN problems AS T2 ON T1.product_id = T2.product_id\nWHERE T1.product_name = 'voluptatem'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0011", "sql1": "\nSELECT `problem_id`\nFROM `problems`\nWHERE (`date_problem_reported` >= parse_datetime('1978-06-26'))\nORDER BY problem_id\n", "sql2": "SELECT problem_id\nFROM problems\nWHERE date_problem_reported > '1978-06-26'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0010", "sql1": "\nSELECT `problem_id`\nFROM\n  (SELECT `staff_id`,\n          `staff_first_name`,\n          `staff_last_name`,\n          `other_staff_details`,\n          `problem_id`,\n          `product_id`,\n          `closure_authorised_by_staff_id`,\n          `date_problem_reported`,\n          `date_problem_closed`,\n          `problem_description`,\n          `other_problem_details`,\n          `staff_id` AS `reported_by_staff_id`\n   FROM\n     (SELECT `LHS`.`staff_id` AS `staff_id`,\n             `LHS`.`staff_first_name` AS `staff_first_name`,\n             `LHS`.`staff_last_name` AS `staff_last_name`,\n             `LHS`.`other_staff_details` AS `other_staff_details`,\n             `RHS`.`problem_id` AS `problem_id`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,\n             `RHS`.`date_problem_reported` AS `date_problem_reported`,\n             `RHS`.`date_problem_closed` AS `date_problem_closed`,\n             `RHS`.`problem_description` AS `problem_description`,\n             `RHS`.`other_problem_details` AS `other_problem_details`\n      FROM `staff` AS `LHS`\n      INNER JOIN `problems` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`reported_by_staff_id`)))\nWHERE (`staff_last_name` = 'Bosco')\nORDER BY problem_id\n", "sql2": "SELECT T1.problem_id\nFROM problems AS T1\nJOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id\nWHERE T2.staff_last_name = 'Bosco'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/tracking_software_problems/0006", "sql1": "\nSELECT `problem_id`,\n       `problem_log_id`\nFROM\n  (SELECT `LHS`.`problem_log_id` AS `problem_log_id`,\n          `LHS`.`assigned_to_staff_id` AS `assigned_to_staff_id`,\n          `LHS`.`problem_id` AS `problem_id`,\n          `LHS`.`problem_category_code` AS `problem_category_code`,\n          `LHS`.`problem_status_code` AS `problem_status_code`,\n          `LHS`.`log_entry_date` AS `log_entry_date`,\n          `LHS`.`log_entry_description` AS `log_entry_description`,\n          `LHS`.`log_entry_fix` AS `log_entry_fix`,\n          `LHS`.`other_log_details` AS `other_log_details`,\n          `RHS`.`staff_first_name` AS `staff_first_name`,\n          `RHS`.`staff_last_name` AS `staff_last_name`,\n          `RHS`.`other_staff_details` AS `other_staff_details`\n   FROM `problem_log` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `staff`\n      WHERE (`staff_first_name` = 'Rylan'\n             OR `staff_last_name` = 'Homenick')) AS RHS ON (LHS.assigned_to_staff_id = RHS.staff_id))\nORDER BY problem_id\n", "sql2": "SELECT DISTINCT T2.problem_id,\n                T2.problem_log_id\nFROM staff AS T1\nJOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id\nWHERE T1.staff_first_name = 'Rylan'\n  AND T1.staff_last_name = 'Homenick'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0009", "sql1": "\nSELECT DISTINCT residence\nFROM\n  (SELECT occupation,\n          residence,\n          COUNT(*) AS n\n   FROM player\n   GROUP BY occupation,\n            residence)\nWHERE (n = 2)\nORDER BY residence\n", "sql2": "SELECT Residence\nFROM player\nGROUP BY Residence\nHAVING COUNT(*) >= 2", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0005", "sql1": "\nSELECT `sponsor_name`\nFROM `player`\nWHERE (`residence` = 'Brandon'\n       OR `residence` = 'Birtle')\nORDER BY sponsor_name\n", "sql2": "SELECT Sponsor_name\nFROM player\nWHERE Residence = 'Brandon'\n  OR Residence = 'Birtle'", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0004", "sql1": "\nSELECT `player_name`,\n       `residence`\nFROM `player`\nWHERE (`occupation` != 'Researcher')\nORDER BY player_name\n", "sql2": "SELECT Player_name,\n       residence\nFROM player\nWHERE Occupation != 'Researcher'", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0003", "sql1": "\nSELECT gender,\n       occupation\nFROM player\nORDER BY gender\n", "sql2": "SELECT Gender,\n       Occupation\nFROM player", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0002", "sql1": "\nSELECT player_name\nFROM player\nORDER BY player_name\n", "sql2": "SELECT Player_name\nFROM player\nORDER BY Votes ASC", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0014", "sql1": "\nSELECT player_name\nFROM\n  (SELECT *\n   FROM player AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM player_coach AS RHS\n        WHERE (LHS.player_id = RHS.player_id) ))\nORDER BY player_name\n", "sql2": "SELECT Player_name\nFROM player\nWHERE Player_ID NOT IN\n    (SELECT Player_ID\n     FROM player_coach)", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM player\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM player", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0016", "sql1": "\nSELECT club_id,\n       club_name,\n       n AS count___\nFROM\n  (SELECT LHS.club_id AS club_id,\n          LHS.club_name AS club_name,\n          LHS.region AS region,\n          LHS.start_year AS start_year,\n          RHS.n AS n\n   FROM club AS LHS\n   INNER JOIN\n     (SELECT club_id,\n             COUNT(*) AS n\n      FROM coach\n      GROUP BY club_id) AS RHS ON (LHS.club_id = RHS.club_id))\nORDER BY club_id\n", "sql2": "SELECT T1.club_id,\n       T1.club_name,\n       count(*)\nFROM club AS T1\nJOIN coach AS T2 ON T1.club_id = T2.club_id\nGROUP BY T1.club_id", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0007", "sql1": "\nSELECT occupation,\n       n AS count___\nFROM\n  (SELECT occupation,\n          COUNT(*) AS n\n   FROM player\n   GROUP BY occupation)\nORDER BY occupation\n", "sql2": "SELECT Occupation,\n       COUNT(*)\nFROM player\nGROUP BY Occupation", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/riding_club/0006", "sql1": "\nSELECT player_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM player\n      ORDER BY votes DESC)\n   LIMIT 1)\n", "sql2": "SELECT Player_name\nFROM player\nORDER BY Votes DESC\nLIMIT 1", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0009", "sql1": "\nSELECT nationality\nFROM\n  (SELECT LHS.nationality AS nationality,\n          LHS.type AS TYPE,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.type AS type_other,\n          RHS.tonnage AS tonnage\n   FROM\n     (SELECT nationality,\n             TYPE,\n             COUNT(*) AS n\n      FROM ship\n      GROUP BY nationality,\n               TYPE) AS LHS\n   INNER JOIN ship AS RHS ON (LHS.n = RHS.ship_id\n                                 AND LHS.nationality = RHS.nationality))\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM ship\nGROUP BY Nationality\nHAVING COUNT(*) > 2", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0013", "sql1": "\nSELECT `fate`\nFROM\n  (SELECT `LHS`.`mission_id` AS `mission_id`,\n          `LHS`.`ship_id` AS `ship_id`,\n          `LHS`.`code` AS `code`,\n          `LHS`.`launched_year` AS `launched_year`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`speed_knots` AS `speed_knots`,\n          `LHS`.`fate` AS `fate`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`type` AS `type`,\n          `RHS`.`nationality` AS `nationality`,\n          `RHS`.`tonnage` AS `tonnage`\n   FROM `mission` AS `LHS`\n   INNER JOIN `ship` AS `RHS` ON (`LHS`.`ship_id` = `RHS`.`ship_id`))\nWHERE (`nationality` = 'United States')\nORDER BY fate\n", "sql2": "SELECT DISTINCT T1.Fate\nFROM mission AS T1\nJOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID\nWHERE T2.Nationality = 'United States'", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0005", "sql1": "\nSELECT `name`\nFROM `ship`\nWHERE (`nationality` != 'United States'\n       OR `nationality` != 'United Kingdom')\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nWHERE Nationality = 'United States'\n  OR Nationality = 'United Kingdom'", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0004", "sql1": "\nSELECT `name`\nFROM `ship`\nWHERE (`nationality` != 'United States')\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nWHERE Nationality != 'United States'", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.mission_id AS mission_id,\n          LHS.ship_id AS ship_id,\n          LHS.code AS code,\n          LHS.launched_year AS launched_year,\n          LHS.location AS LOCATION,\n          LHS.speed_knots AS speed_knots,\n          LHS.fate AS fate,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.nationality AS nationality,\n          LHS.tonnage AS tonnage\n   FROM\n     (SELECT LHS.mission_id AS mission_id,\n             LHS.ship_id AS ship_id,\n             LHS.code AS code,\n             LHS.launched_year AS launched_year,\n             LHS.location AS LOCATION,\n             LHS.speed_knots AS speed_knots,\n             LHS.fate AS fate,\n             RHS.name AS name,\n             RHS.type AS TYPE,\n             RHS.nationality AS nationality,\n             RHS.tonnage AS tonnage\n      FROM mission AS LHS\n      INNER JOIN ship AS RHS ON (LHS.ship_id = RHS.ship_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM mission\n      WHERE (launched_year >= 1928)) AS RHS ON (LHS.mission_id = RHS.mission_id\n                                                AND LHS.ship_id = RHS.ship_id\n                                                AND LHS.code = RHS.code\n                                                AND LHS.launched_year = RHS.launched_year\n                                                AND LHS.location = RHS.location\n                                                AND LHS.speed_knots = RHS.speed_knots\n                                                AND LHS.fate = RHS.fate))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM mission AS T1\nJOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID\nWHERE T1.Launched_Year > 1928", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0008", "sql1": "\nSELECT DISTINCT TYPE\nFROM\n  (SELECT LHS.nationality AS nationality,\n          LHS.type AS TYPE,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.type AS type_other,\n          RHS.tonnage AS tonnage\n   FROM\n     (SELECT nationality,\n             TYPE,\n             COUNT(*) AS n\n      FROM ship\n      GROUP BY nationality,\n               TYPE) AS LHS\n   INNER JOIN ship AS RHS ON (LHS.n = RHS.ship_id\n                                 AND LHS.nationality = RHS.nationality))\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM ship\nGROUP BY TYPE\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0015", "sql1": "\nSELECT TYPE\nFROM ship\nWHERE (tonnage > 6000\n       OR tonnage = 4000)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM ship\nWHERE Tonnage > 6000 INTERSECT\n  SELECT TYPE\n  FROM ship WHERE Tonnage < 4000", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0003", "sql1": "\nSELECT TYPE,\n       nationality\nFROM ship\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       Nationality\nFROM ship", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0002", "sql1": "\nSELECT name\nFROM ship\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nORDER BY Tonnage ASC", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM ship AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM mission AS RHS\n        WHERE (LHS.ship_id = RHS.ship_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nWHERE Ship_ID NOT IN\n    (SELECT Ship_ID\n     FROM mission)", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ship\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ship", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0007", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM ship\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       COUNT(*)\nFROM ship\nGROUP BY TYPE", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0011", "sql1": "\nSELECT code,\n       fate,\n       name\nFROM\n  (SELECT LHS.mission_id AS mission_id,\n          LHS.ship_id AS ship_id,\n          LHS.code AS code,\n          LHS.launched_year AS launched_year,\n          LHS.location AS LOCATION,\n          LHS.speed_knots AS speed_knots,\n          LHS.fate AS fate,\n          RHS.name AS name,\n          RHS.type AS TYPE,\n          RHS.nationality AS nationality,\n          RHS.tonnage AS tonnage\n   FROM mission AS LHS\n   INNER JOIN ship AS RHS ON (LHS.ship_id = RHS.ship_id))\nORDER BY code\n", "sql2": "SELECT T1.Code,\n       T1.Fate,\n       T2.Name\nFROM mission AS T1\nJOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0010", "sql1": "\nSELECT TYPE,\n       meantonnage AS avg_tonnage_\nFROM\n  (SELECT TYPE,\n          AVG(tonnage) AS meantonnage\n   FROM ship\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       avg(Tonnage)\nFROM ship\nGROUP BY TYPE", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/ship_mission/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM ship\n      ORDER BY tonnage DESC)\n   LIMIT 1)\n", "sql2": "SELECT Name\nFROM ship\nORDER BY Tonnage DESC\nLIMIT 1", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0025", "sql1": "\nSELECT student_id,\n       course_id,\n       registration_date\nFROM\n  (SELECT *\n   FROM student_course_registrations AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_course_attendance AS RHS\n        WHERE (LHS.student_id = RHS.student_id) ))\nORDER BY student_id\n", "sql2": "SELECT *\nFROM student_course_registrations\nWHERE student_id NOT IN\n    (SELECT student_id\n     FROM student_course_attendance)", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0013", "sql1": "\nSELECT student_id,\n       n AS count___\nFROM\n  (SELECT LHS.student_id AS student_id,\n          LHS.student_details AS student_details,\n          RHS.n AS n\n   FROM students AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             COUNT(*) AS n\n      FROM student_course_registrations\n      GROUP BY student_id) AS RHS ON (LHS.student_id = RHS.student_id))\nORDER BY student_id\n", "sql2": "SELECT T1.student_id,\n       count(*)\nFROM students AS T1\nJOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0005", "sql1": "\nSELECT student_id\nFROM student_course_attendance\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_attendance", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0004", "sql1": "\nSELECT student_id\nFROM\n  (SELECT *\n   FROM students AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_course_attendance AS RHS\n        WHERE (LHS.student_id = RHS.student_id) ))\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM students\nWHERE student_id NOT IN\n    (SELECT student_id\n     FROM student_course_attendance)", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0024", "sql1": "\nSELECT course_id\nFROM\n  (SELECT course_id\n   FROM student_course_attendance INTERSECT SELECT course_id\n   FROM student_course_registrations\n   WHERE (student_id = 121))\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM student_course_registrations\nWHERE student_id = 121\nUNION\nSELECT course_id\nFROM student_course_attendance\nWHERE student_id = 121", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0015", "sql1": "\nSELECT `candidate_id`\nFROM `candidate_assessments`\nWHERE (`asessment_outcome_code` = 'Pass')\nORDER BY candidate_id\n", "sql2": "SELECT candidate_id\nFROM candidate_assessments\nWHERE asessment_outcome_code = 'Pass'", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0003", "sql1": "\nSELECT first_name,\n       last_name\nFROM people\nORDER BY first_name\n", "sql2": "SELECT T2.first_name,\n       T2.last_name\nFROM candidates AS T1\nJOIN people AS T2 ON T1.candidate_id = T2.person_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0019", "sql1": "\nSELECT city\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          RHS.person_address_id AS person_address_id,\n          RHS.person_id AS person_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM addresses AS LHS\n   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY city\n", "sql2": "SELECT DISTINCT T1.city\nFROM addresses AS T1\nJOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0023", "sql1": "\nSELECT DISTINCT student_id\nFROM student_course_registrations\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_registrations\nUNION\nSELECT student_id\nFROM student_course_attendance", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0022", "sql1": "\nSELECT first_name\nFROM people\nORDER BY first_name\n", "sql2": "SELECT first_name\nFROM people\nORDER BY first_name", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0018", "sql1": "\nSELECT student_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM student_course_attendance\n         WHERE (course_id = 301\n                AND course_id != 1))\n      ORDER BY student_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT student_id\nFROM student_course_attendance\nWHERE course_id = 301\nORDER BY date_of_attendance DESC\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0002", "sql1": "\nSELECT student_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT student_id,\n                course_id,\n                registration_date,\n                COUNT(*) OVER () AS n\n         FROM student_course_registrations)\n      ORDER BY course_id)\n   LIMIT 1)\n", "sql2": "SELECT student_id\nFROM student_course_registrations\nGROUP BY student_id\nORDER BY count(*)\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0017", "sql1": "\nSELECT student_id\nFROM student_course_attendance\nWHERE (course_id <= 301)\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_attendance\nWHERE course_id = 301", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0021", "sql1": "\nSELECT course_name\nFROM courses\nORDER BY course_name\n", "sql2": "SELECT course_name\nFROM courses\nORDER BY course_name", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0020", "sql1": "\nSELECT DISTINCT city\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          LHS.student_id AS student_id,\n          LHS.student_details AS student_details,\n          RHS.person_address_id AS person_address_id,\n          RHS.person_id AS person_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM\n     (SELECT LHS.address_id AS address_id,\n             LHS.line_1 AS line_1,\n             LHS.line_2 AS line_2,\n             LHS.city AS city,\n             LHS.zip_postcode AS zip_postcode,\n             LHS.state_province_county AS state_province_county,\n             LHS.country AS country,\n             RHS.student_id AS student_id,\n             RHS.student_details AS student_details\n      FROM addresses AS LHS\n      CROSS JOIN students AS RHS) AS LHS\n   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY city\n", "sql2": "SELECT DISTINCT T1.city\nFROM addresses AS T1\nJOIN people_addresses AS T2 ON T1.address_id = T2.address_id\nJOIN students AS T3 ON T2.person_id = T3.student_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0007", "sql1": "\nSELECT student_details\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.student_id AS student_id,\n                LHS.student_details AS student_details,\n                RHS.course_id AS course_id,\n                RHS.registration_date AS registration_date\n         FROM students AS LHS\n         INNER JOIN student_course_registrations AS RHS ON (LHS.student_id = RHS.student_id))\n      ORDER BY registration_date DESC)\n   LIMIT 1)\n", "sql2": "SELECT T2.student_details\nFROM student_course_registrations AS T1\nJOIN students AS T2 ON T1.student_id = T2.student_id\nORDER BY T1.registration_date DESC\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0011", "sql1": "\nSELECT candidate_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM candidate_assessments\n      ORDER BY assessment_date DESC)\n   LIMIT 1)\n", "sql2": "SELECT candidate_id\nFROM candidate_assessments\nORDER BY assessment_date DESC\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/student_assessment/0010", "sql1": "\nSELECT DISTINCT `person_id` AS `candidate_id`\nFROM\n  (SELECT `LHS`.`candidate_id` AS `candidate_id`,\n          `LHS`.`candidate_details` AS `candidate_details`,\n          `RHS`.`person_id` AS `person_id`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`\n   FROM `candidates` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `people`\n      WHERE (`email_address` = 'stanley.monahan@example.org')) AS RHS)\nORDER BY candidate_id\n", "sql2": "SELECT T2.candidate_id\nFROM people AS T1\nJOIN candidates AS T2 ON T1.person_id = T2.candidate_id\nWHERE T1.email_address = 'stanley.monahan@example.org'", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0009", "sql1": "\nSELECT fault_short_name,\n       skill_description\nFROM\n  (SELECT LHS.skill_id AS skill_id,\n          LHS.skill_code AS skill_code,\n          LHS.skill_description AS skill_description,\n          LHS.part_fault_id AS part_fault_id,\n          LHS.part_id AS part_id,\n          LHS.fault_short_name AS fault_short_name,\n          LHS.fault_description AS fault_description,\n          LHS.other_fault_details AS other_fault_details\n   FROM\n     (SELECT LHS.skill_id AS skill_id,\n             LHS.skill_code AS skill_code,\n             LHS.skill_description AS skill_description,\n             RHS.part_fault_id AS part_fault_id,\n             RHS.part_id AS part_id,\n             RHS.fault_short_name AS fault_short_name,\n             RHS.fault_description AS fault_description,\n             RHS.other_fault_details AS other_fault_details\n      FROM skills AS LHS\n      CROSS JOIN part_faults AS RHS) AS LHS\n   INNER JOIN skills_required_to_fix AS RHS ON (LHS.skill_id = RHS.skill_id\n                                                   AND LHS.part_fault_id = RHS.part_fault_id))\nORDER BY fault_short_name\n", "sql2": "SELECT T1.fault_short_name,\n       T3.skill_description\nFROM Part_Faults AS T1\nJOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id\nJOIN Skills AS T3 ON T2.skill_id = T3.skill_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0025", "sql1": "\nSELECT asset_make,\n       asset_model,\n       asset_details\nFROM assets\nORDER BY asset_make\n", "sql2": "SELECT asset_make,\n       asset_model,\n       asset_details\nFROM Assets\nORDER BY asset_disposed_date ASC", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0013", "sql1": "\nSELECT last_name\nFROM maintenance_engineers\nORDER BY last_name\n", "sql2": "SELECT DISTINCT last_name\nFROM Maintenance_Engineers", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0029", "sql1": "\nSELECT DISTINCT gender\nFROM\n  (SELECT LHS.staff_id AS staff_id,\n          LHS.staff_name AS staff_name,\n          LHS.gender AS gender,\n          LHS.other_staff_details AS other_staff_details,\n          RHS.other_staff_details AS other_staff_details_other,\n          RHS.staff_name AS staff_name_other\n   FROM staff AS LHS\n   INNER JOIN\n     (SELECT other_staff_details,\n             staff_name,\n             COUNT(*) AS n\n      FROM staff\n      GROUP BY other_staff_details,\n               staff_name) AS RHS ON (LHS.staff_id = RHS.n))\nORDER BY gender\n", "sql2": "SELECT gender\nFROM staff\nGROUP BY gender\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0024", "sql1": "\nSELECT asset_model\nFROM assets\nORDER BY asset_model\n", "sql2": "SELECT DISTINCT asset_model\nFROM Assets", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0008", "sql1": "\nSELECT first_name,\n       last_name,\n       other_details,\n       skill_description\nFROM\n  (SELECT LHS.skill_id AS skill_id,\n          LHS.skill_code AS skill_code,\n          LHS.skill_description AS skill_description,\n          LHS.engineer_id AS engineer_id,\n          LHS.company_id AS company_id,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.other_details AS other_details\n   FROM\n     (SELECT LHS.skill_id AS skill_id,\n             LHS.skill_code AS skill_code,\n             LHS.skill_description AS skill_description,\n             RHS.engineer_id AS engineer_id,\n             RHS.company_id AS company_id,\n             RHS.first_name AS first_name,\n             RHS.last_name AS last_name,\n             RHS.other_details AS other_details\n      FROM skills AS LHS\n      CROSS JOIN maintenance_engineers AS RHS) AS LHS\n   INNER JOIN engineer_skills AS RHS ON (LHS.skill_id = RHS.skill_id\n                                            AND LHS.engineer_id = RHS.engineer_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T1.last_name,\n       T1.other_details,\n       T3.skill_description\nFROM Maintenance_Engineers AS T1\nJOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id\nJOIN Skills AS T3 ON T2.skill_id = T3.skill_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0015", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT *\n   FROM maintenance_engineers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM engineer_visits AS RHS\n        WHERE (LHS.engineer_id = RHS.engineer_id) ))\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Maintenance_Engineers\nWHERE engineer_id NOT IN\n    (SELECT engineer_id\n     FROM Engineer_Visits)", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0003", "sql1": "\nSELECT DISTINCT n AS count___,\n                supplier_company_id AS company_id\nFROM\n  (SELECT LHS.company_id AS company_id,\n          LHS.company_type AS company_type,\n          LHS.company_name AS company_name,\n          LHS.company_address AS company_address,\n          LHS.other_company_details AS other_company_details,\n          LHS.asset_id AS asset_id,\n          LHS.maintenance_contract_id AS maintenance_contract_id,\n          LHS.supplier_company_id AS supplier_company_id,\n          LHS.asset_details AS asset_details,\n          LHS.asset_make AS asset_make,\n          LHS.asset_model AS asset_model,\n          LHS.asset_acquired_date AS asset_acquired_date,\n          LHS.asset_disposed_date AS asset_disposed_date,\n          LHS.other_asset_details AS other_asset_details,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.company_type AS company_type,\n             LHS.company_name AS company_name,\n             LHS.company_address AS company_address,\n             LHS.other_company_details AS other_company_details,\n             RHS.asset_id AS asset_id,\n             RHS.maintenance_contract_id AS maintenance_contract_id,\n             RHS.supplier_company_id AS supplier_company_id,\n             RHS.asset_details AS asset_details,\n             RHS.asset_make AS asset_make,\n             RHS.asset_model AS asset_model,\n             RHS.asset_acquired_date AS asset_acquired_date,\n             RHS.asset_disposed_date AS asset_disposed_date,\n             RHS.other_asset_details AS other_asset_details\n      FROM third_party_companies AS LHS\n      CROSS JOIN assets AS RHS) AS LHS\n   INNER JOIN\n     (SELECT supplier_company_id,\n             COUNT(*) AS n\n      FROM assets\n      GROUP BY supplier_company_id) AS RHS ON (LHS.supplier_company_id = RHS.supplier_company_id))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.company_id\nFROM Third_Party_Companies AS T1\nJOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id\nGROUP BY T1.company_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0019", "sql1": "\nSELECT part_name\nFROM\n  (SELECT LHS.part_id AS part_id,\n          LHS.part_name AS part_name,\n          LHS.chargeable_yn AS chargeable_yn,\n          LHS.chargeable_amount AS chargeable_amount,\n          LHS.other_part_details AS other_part_details,\n          RHS.other_fault_details AS other_fault_details,\n          RHS.part_id AS part_id_other\n   FROM parts AS LHS\n   INNER JOIN\n     (SELECT other_fault_details,\n             part_id,\n             COUNT(*) AS n\n      FROM part_faults\n      GROUP BY other_fault_details,\n               part_id) AS RHS ON (LHS.part_id = RHS.n))\nORDER BY part_name\n", "sql2": "SELECT T1.part_name\nFROM Parts AS T1\nJOIN Part_Faults AS T2 ON T1.part_id = T2.part_id\nGROUP BY T1.part_name\nORDER BY count(*) ASC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0023", "sql1": "\nSELECT skill_id,\n       skill_description\nFROM\n  (SELECT LHS.skill_id AS skill_id,\n          LHS.skill_code AS skill_code,\n          LHS.skill_description AS skill_description,\n          RHS.skill_id AS skill_id_other\n   FROM skills AS LHS\n   INNER JOIN\n     (SELECT skill_id,\n             COUNT(*) AS n\n      FROM skills_required_to_fix\n      GROUP BY skill_id) AS RHS ON (LHS.skill_id = RHS.n))\nORDER BY skill_id\n", "sql2": "SELECT T1.skill_id,\n       T1.skill_description\nFROM Skills AS T1\nJOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id\nGROUP BY T1.skill_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0022", "sql1": "\nSELECT n AS fault_log_entry_id,\n       fault_description,\n       fault_log_entry_datetime\nFROM\n  (SELECT fault_description,\n          fault_log_entry_datetime,\n          COUNT(*) AS n\n   FROM\n     (SELECT fault_log_entry_id,\n             part_fault_id,\n             fault_status,\n             asset_id,\n             fault_log_entry_datetime,\n             fault_description,\n             other_fault_details,\n             part_fault_id AS recorded_by_staff_id\n      FROM\n        (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,\n                LHS.part_fault_id AS part_fault_id,\n                LHS.fault_status AS fault_status,\n                RHS.asset_id AS asset_id,\n                RHS.fault_log_entry_datetime AS fault_log_entry_datetime,\n                RHS.fault_description AS fault_description,\n                RHS.other_fault_details AS other_fault_details\n         FROM fault_log_parts AS LHS\n         INNER JOIN fault_log AS RHS ON (LHS.fault_log_entry_id = RHS.fault_log_entry_id\n                                            AND LHS.part_fault_id = RHS.recorded_by_staff_id)))\n   GROUP BY fault_description,\n            fault_log_entry_datetime)\nORDER BY fault_log_entry_id\n", "sql2": "SELECT T1.fault_log_entry_id,\n       T1.fault_description,\n       T1.fault_log_entry_datetime\nFROM Fault_Log AS T1\nJOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id\nGROUP BY T1.fault_log_entry_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0002", "sql1": "\nSELECT n AS count___,\n       maintenance_contract_id\nFROM\n  (SELECT maintenance_contract_id,\n          other_contract_details,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.asset_id AS asset_id,\n             LHS.maintenance_contract_id AS maintenance_contract_id,\n             LHS.supplier_company_id AS supplier_company_id,\n             LHS.asset_details AS asset_details,\n             LHS.asset_make AS asset_make,\n             LHS.asset_model AS asset_model,\n             LHS.asset_acquired_date AS asset_acquired_date,\n             LHS.asset_disposed_date AS asset_disposed_date,\n             LHS.other_asset_details AS other_asset_details,\n             RHS.maintenance_contract_company_id AS maintenance_contract_company_id,\n             RHS.contract_start_date AS contract_start_date,\n             RHS.contract_end_date AS contract_end_date,\n             RHS.other_contract_details AS other_contract_details\n      FROM assets AS LHS\n      LEFT JOIN maintenance_contracts AS RHS ON (LHS.maintenance_contract_id = RHS.maintenance_contract_id))\n   GROUP BY maintenance_contract_id,\n            other_contract_details)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.maintenance_contract_id\nFROM Maintenance_Contracts AS T1\nJOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id\nGROUP BY T1.maintenance_contract_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0014", "sql1": "\nSELECT DISTINCT fault_status\nFROM fault_log_parts\nORDER BY fault_status\n", "sql2": "SELECT DISTINCT fault_status\nFROM Fault_Log_Parts", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0017", "sql1": "\nSELECT asset_acquired_date\nFROM\n  (SELECT maintenance_contract_id AS asset_id,\n          maintenance_contract_id,\n          supplier_company_id,\n          asset_details,\n          asset_make,\n          asset_model,\n          asset_acquired_date,\n          asset_disposed_date,\n          other_asset_details,\n          supplier_company_id_other,\n          asset_details_other,\n          asset_make_other,\n          asset_model_other,\n          asset_acquired_date_other,\n          asset_disposed_date_other,\n          other_asset_details_other\n   FROM\n     (SELECT LHS.asset_id AS asset_id,\n             LHS.maintenance_contract_id AS maintenance_contract_id,\n             LHS.supplier_company_id AS supplier_company_id,\n             LHS.asset_details AS asset_details,\n             LHS.asset_make AS asset_make,\n             LHS.asset_model AS asset_model,\n             LHS.asset_acquired_date AS asset_acquired_date,\n             LHS.asset_disposed_date AS asset_disposed_date,\n             LHS.other_asset_details AS other_asset_details,\n             RHS.supplier_company_id AS supplier_company_id_other,\n             RHS.asset_details AS asset_details_other,\n             RHS.asset_make AS asset_make_other,\n             RHS.asset_model AS asset_model_other,\n             RHS.asset_acquired_date AS asset_acquired_date_other,\n             RHS.asset_disposed_date AS asset_disposed_date_other,\n             RHS.other_asset_details AS other_asset_details_other\n      FROM assets AS LHS\n      INNER JOIN assets AS RHS ON (LHS.maintenance_contract_id = RHS.asset_id\n                                      AND LHS.supplier_company_id = RHS.maintenance_contract_id)))\nORDER BY asset_acquired_date\n", "sql2": "SELECT asset_acquired_date\nFROM Assets\nORDER BY asset_acquired_date ASC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0016", "sql1": "\nSELECT asset_id,\n       asset_details,\n       asset_make,\n       asset_model\nFROM assets\nORDER BY asset_id\n", "sql2": "SELECT asset_id,\n       asset_details,\n       asset_make,\n       asset_model\nFROM Assets", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0031", "sql1": "\nSELECT asset_model\nFROM\n  (SELECT *\n   FROM assets AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM fault_log AS RHS\n        WHERE (LHS.asset_id = RHS.asset_id) ))\nORDER BY asset_model\n", "sql2": "SELECT asset_model\nFROM Assets\nWHERE asset_id NOT IN\n    (SELECT asset_id\n     FROM Fault_Log)", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0011", "sql1": "\nSELECT fault_description,\n       fault_status\nFROM\n  (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,\n          LHS.asset_id AS asset_id,\n          LHS.recorded_by_staff_id AS recorded_by_staff_id,\n          LHS.fault_log_entry_datetime AS fault_log_entry_datetime,\n          LHS.fault_description AS fault_description,\n          LHS.other_fault_details AS other_fault_details,\n          RHS.part_fault_id AS part_fault_id,\n          RHS.fault_status AS fault_status\n   FROM fault_log AS LHS\n   INNER JOIN fault_log_parts AS RHS ON (LHS.fault_log_entry_id = RHS.fault_log_entry_id))\nORDER BY fault_description\n", "sql2": "SELECT T1.fault_description,\n       T2.fault_status\nFROM Fault_Log AS T1\nJOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0010", "sql1": "\nSELECT part_name,\n       n AS count___\nFROM\n  (SELECT part_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.part_id AS part_id,\n             LHS.part_name AS part_name,\n             LHS.chargeable_yn AS chargeable_yn,\n             LHS.chargeable_amount AS chargeable_amount,\n             LHS.other_part_details AS other_part_details,\n             RHS.asset_id AS asset_id\n      FROM parts AS LHS\n      INNER JOIN asset_parts AS RHS ON (LHS.part_id = RHS.part_id))\n   GROUP BY part_name)\nORDER BY part_name\n", "sql2": "SELECT T1.part_name,\n       count(*)\nFROM Parts AS T1\nJOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id\nGROUP BY T1.part_name", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0026", "sql1": "\nSELECT part_id,\n       chargeable_amount\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM parts\n      ORDER BY chargeable_amount)\n   LIMIT 1)\n", "sql2": "SELECT part_id,\n       chargeable_amount\nFROM Parts\nORDER BY chargeable_amount ASC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/assets_maintenance/0030", "sql1": "\nSELECT staff_name,\n       n AS count___\nFROM\n  (SELECT LHS.staff_id AS staff_id,\n          LHS.staff_name AS staff_name,\n          LHS.gender AS gender,\n          LHS.other_staff_details AS other_staff_details,\n          RHS.other_visit_details AS other_visit_details,\n          RHS.n AS n\n   FROM staff AS LHS\n   INNER JOIN\n     (SELECT contact_staff_id,\n             other_visit_details,\n             COUNT(*) AS n\n      FROM engineer_visits\n      GROUP BY contact_staff_id,\n               other_visit_details) AS RHS ON (LHS.staff_id = RHS.contact_staff_id))\nORDER BY staff_name\n\n[   698.207][MainProcess][INFO] Statistics:\n[   698.208][MainProcess][INFO] \tAttempted programs: 637 (approx)\n[   698.208][MainProcess][INFO] \t\tRejected: 636 (approx)\n[   698.208][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   698.208][MainProcess][INFO] \t\tEmpty outputs: 489 (76.8%) (approx)\n[   698.208][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   698.208][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   698.208][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   698.208][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   698.208][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   698.208][MainProcess][INFO] \tTotal time spent in enumerator: 121.693597 (approx)\n[   698.208][MainProcess][INFO] \t\tEnumerated 5.234458 programs/s avg. (just enumeration time)\n[   698.208][MainProcess][INFO] \t\tEnumerated 0.918913 programs/s avg. (overall)\n[   698.209][MainProcess][INFO] \tTotal time spent in evaluation & testing: 170.682313 (approx)\n[   698.209][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 67.616240 (approx)\n[   698.209][MainProcess][INFO] Solution found: [summarise(input1, 'n = n()', \"'contact_staff_id','other_visit_details'\"), inner_join(input0, line0, \"'staff_id' = 'contact_staff_id'\")]\n[   698.209][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 164, in endr\n    rlib.Rf_endEmbeddedR(fatal)\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT T1.staff_name,\n       count(*)\nFROM Staff AS T1\nJOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id\nGROUP BY T1.staff_name", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0025", "sql1": "\nSELECT DISTINCT AVG(followers) OVER () AS avg_followers_\nFROM\n  (SELECT *\n   FROM user_profiles AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM tweets AS RHS\n        WHERE (LHS.uid = RHS.uid) ))\nORDER BY avg_followers_\n", "sql2": "SELECT avg(followers)\nFROM user_profiles\nWHERE UID NOT IN\n    (SELECT UID\n     FROM tweets)", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0013", "sql1": "\nSELECT name,\n       email\nFROM\n  (SELECT email,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT f1,\n             f2,\n             name,\n             email,\n             partitionid,\n             followers,\n             f1 AS UID\n      FROM\n        (SELECT LHS.f1 AS f1,\n                LHS.f2 AS f2,\n                RHS.name AS name,\n                RHS.email AS email,\n                RHS.partitionid AS partitionid,\n                RHS.followers AS followers\n         FROM follows AS LHS\n         INNER JOIN user_profiles AS RHS ON (LHS.f1 = RHS.uid)))\n   GROUP BY email,\n            name)\nWHERE (n > 1)\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.email\nFROM user_profiles AS T1\nJOIN follows AS T2 ON T1.uid = T2.f1\nGROUP BY T2.f1\nHAVING count(*) > 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0005", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT f1,\n          COUNT(*) AS n\n   FROM follows\n   GROUP BY f1)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM follows\nGROUP BY f1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM follows\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM follows", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0012", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `f1`,\n          `f2`,\n          `name`,\n          `email`,\n          `partitionid`,\n          `followers`,\n          `f1` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`f1` AS `f1`,\n             `LHS`.`f2` AS `f2`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`email` AS `email`,\n             `RHS`.`partitionid` AS `partitionid`,\n             `RHS`.`followers` AS `followers`\n      FROM `follows` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM\n           (SELECT `uid`,\n                   `name`,\n                   `email`,\n                   `partitionid`,\n                   `followers`,\n                   COUNT(DISTINCT `name`) OVER () AS `n_distinct`\n            FROM `user_profiles`)\n         WHERE (`name` != 'Tyler Swift')) AS RHS ON (LHS.f1 = RHS.n_distinct\n                                                     AND LHS.f2 = RHS.uid)))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM user_profiles AS T1\nJOIN follows AS T2 ON T1.uid = T2.f1\nGROUP BY T2.f1\nHAVING count(*) >\n  (SELECT count(*)\n   FROM user_profiles AS T1\n   JOIN follows AS T2 ON T1.uid = T2.f1\n   WHERE T1.name = 'Tyler Swift')", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0024", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT followers,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.uid AS UID,\n             LHS.text AS text,\n             LHS.createdate AS createdate,\n             RHS.name AS name,\n             RHS.email AS email,\n             RHS.partitionid AS partitionid,\n             RHS.followers AS followers\n      FROM tweets AS LHS\n      INNER JOIN user_profiles AS RHS ON (LHS.uid = RHS.uid))\n   GROUP BY followers,\n            name)\nWHERE (n != 1)\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM user_profiles AS T1\nJOIN tweets AS T2 ON T1.uid = T2.uid\nGROUP BY T2.uid\nHAVING count(*) > 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM user_profiles\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM user_profiles", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0019", "sql1": "\nSELECT name,\n       followers\nFROM user_profiles\nORDER BY name\n", "sql2": "SELECT name,\n       followers\nFROM user_profiles\nORDER BY followers DESC", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0022", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.uid AS UID,\n          LHS.name AS name,\n          LHS.email AS email,\n          LHS.partitionid AS partitionid,\n          LHS.followers AS followers,\n          RHS.n AS n\n   FROM user_profiles AS LHS\n   INNER JOIN\n     (SELECT UID,\n             COUNT(*) AS n\n      FROM tweets\n      GROUP BY UID) AS RHS ON (LHS.uid = RHS.uid))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM user_profiles AS T1\nJOIN tweets AS T2 ON T1.uid = T2.uid\nGROUP BY T2.uid", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0018", "sql1": "\nSELECT name,\n       email\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM user_profiles\n      ORDER BY followers)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       email\nFROM user_profiles\nORDER BY followers\nLIMIT 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0002", "sql1": "\nSELECT `uid` AS `partitionid`\nFROM `user_profiles`\nWHERE (`name` = 'Iron Man')\nORDER BY partitionid\n", "sql2": "SELECT partitionid\nFROM user_profiles\nWHERE name = 'Iron Man'", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT followers,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.uid AS UID,\n             LHS.text AS text,\n             LHS.createdate AS createdate,\n             RHS.name AS name,\n             RHS.email AS email,\n             RHS.partitionid AS partitionid,\n             RHS.followers AS followers\n      FROM tweets AS LHS\n      INNER JOIN user_profiles AS RHS ON (LHS.uid = RHS.uid))\n   GROUP BY followers,\n            name)\nWHERE (n != 1)\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM user_profiles AS T1\nJOIN tweets AS T2 ON T1.uid = T2.uid\nGROUP BY T2.uid\nHAVING count(*) > 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0001", "sql1": "\nSELECT `email`\nFROM `user_profiles`\nWHERE (`name` = 'Mary')\nORDER BY email\n", "sql2": "SELECT email\nFROM user_profiles\nWHERE name = 'Mary'", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM user_profiles\n      ORDER BY name DESC)\n   LIMIT 1)\n", "sql2": "SELECT name\nFROM user_profiles\nORDER BY followers DESC\nLIMIT 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0021", "sql1": "\nSELECT text\nFROM tweets\nORDER BY text\n", "sql2": "SELECT text\nFROM tweets\nORDER BY createdate", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM user_profiles\n      ORDER BY followers DESC)\n   LIMIT 5)\n", "sql2": "SELECT name\nFROM user_profiles\nORDER BY followers DESC\nLIMIT 5", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0016", "sql1": "\nSELECT `f1`\nFROM\n  (SELECT `f1`,\n          `f2`,\n          `name`,\n          `email`,\n          `partitionid`,\n          `followers`,\n          `f2` AS `uid`\n   FROM\n     (SELECT `LHS`.`f1` AS `f1`,\n             `LHS`.`f2` AS `f2`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`email` AS `email`,\n             `RHS`.`partitionid` AS `partitionid`,\n             `RHS`.`followers` AS `followers`\n      FROM `follows` AS `LHS`\n      INNER JOIN `user_profiles` AS `RHS` ON (`LHS`.`f2` = `RHS`.`uid`)))\nWHERE (`name` = 'Mary'\n       OR `name` = 'Susan')\nORDER BY f1\n", "sql2": "SELECT T2.f1\nFROM user_profiles AS T1\nJOIN follows AS T2 ON T1.uid = T2.f2\nWHERE T1.name = 'Mary'\n  OR T1.name = 'Susan'", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0027", "sql1": "\nSELECT DISTINCT MAX(followers) OVER () AS max_followers_,\n                                    sumfollowers AS sum_followers_\nFROM\n  (SELECT UID,\n          name,\n          email,\n          partitionid,\n          followers,\n          SUM(followers) OVER () AS sumfollowers\n   FROM user_profiles)\nORDER BY max_followers_\n", "sql2": "SELECT max(followers),\n       sum(followers)\nFROM user_profiles", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT UID) OVER () AS count_distinct_uid_\nFROM tweets\nORDER BY count_distinct_uid_\n", "sql2": "SELECT count(DISTINCT UID)\nFROM tweets", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0011", "sql1": "\nSELECT name,\n       email\nFROM user_profiles\nWHERE (followers >= 1000)\nORDER BY name\n", "sql2": "SELECT name,\n       email\nFROM user_profiles\nWHERE followers > 1000", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0006", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM tweets\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM tweets", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/twitter_1/0026", "sql1": "\nSELECT DISTINCT AVG(followers) OVER () AS avg_followers_\nFROM\n  (SELECT *\n   FROM user_profiles AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM tweets AS RHS\n        WHERE (LHS.uid = RHS.uid) ))\nORDER BY avg_followers_\n", "sql2": "SELECT avg(followers)\nFROM user_profiles\nWHERE UID IN\n    (SELECT UID\n     FROM tweets)", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM body_builder AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Total DESC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0005", "sql1": "\nSELECT clean_jerk\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM body_builder\n      ORDER BY snatch DESC)\n   LIMIT 1)\n", "sql2": "SELECT Clean_Jerk\nFROM body_builder\nORDER BY Total DESC\nLIMIT 1", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0004", "sql1": "\nSELECT meansnatch AS avg_snatch_\nFROM\n  (SELECT AVG(snatch) AS meansnatch\n   FROM body_builder)\nORDER BY avg_snatch_\n", "sql2": "SELECT avg(Snatch)\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0024", "sql1": "\nSELECT snatch AS min_snatch_\nFROM\n  (SELECT MIN(snatch) AS snatch\n   FROM body_builder)\nORDER BY min_snatch_\n", "sql2": "SELECT min(snatch)\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM\n     (SELECT *\n      FROM body_builder\n      WHERE (total > 300.0)) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Total > 300", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0015", "sql1": "\nSELECT birth_place\nFROM\n  (SELECT LHS.birth_date AS birth_date,\n          LHS.birth_place AS birth_place,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_place AS birth_place_other\n   FROM\n     (SELECT birth_date,\n             birth_place,\n             COUNT(*) AS n\n      FROM people\n      GROUP BY birth_date,\n               birth_place) AS LHS\n   INNER JOIN people AS RHS ON (LHS.n = RHS.people_id\n                                   AND LHS.birth_date = RHS.birth_date))\nORDER BY birth_place\n", "sql2": "SELECT Birth_Place\nFROM people\nGROUP BY Birth_Place\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0003", "sql1": "\nSELECT snatch,\n       clean_jerk\nFROM body_builder\nORDER BY snatch\n", "sql2": "SELECT Snatch,\n       Clean_Jerk\nFROM body_builder\nORDER BY Snatch ASC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0019", "sql1": "\nSELECT name,\n       birth_place\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM body_builder AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name,\n       birth_place\nFROM people\nEXCEPT\nSELECT T1.Name,\n       T1.birth_place\nFROM people AS T1\nJOIN body_builder AS T2 ON T1.people_id = T2.people_id", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0018", "sql1": "\nSELECT body_builder_id,\n       people_id,\n       snatch,\n       clean_jerk,\n       total\nFROM body_builder\nORDER BY body_builder_id\n", "sql2": "SELECT *\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0002", "sql1": "\nSELECT total\nFROM body_builder\nORDER BY total\n", "sql2": "SELECT Total\nFROM body_builder\nORDER BY Total ASC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0014", "sql1": "\nSELECT birth_place,\n       n AS count___\nFROM\n  (SELECT birth_place,\n          height,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY birth_place,\n            height)\nORDER BY birth_place\n", "sql2": "SELECT Birth_Place,\n       COUNT(*)\nFROM people\nGROUP BY Birth_Place", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM body_builder\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0017", "sql1": "\nSELECT height,\n       weight\nFROM people\nORDER BY height\n", "sql2": "SELECT Height,\n       Weight\nFROM people\nORDER BY Height DESC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0021", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT name,\n          total,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.body_builder_id AS body_builder_id,\n                LHS.people_id AS people_id,\n                LHS.snatch AS snatch,\n                LHS.clean_jerk AS clean_jerk,\n                LHS.total AS total,\n                RHS.people_id AS people_id_other,\n                RHS.name AS name,\n                RHS.height AS height,\n                RHS.weight AS weight,\n                RHS.birth_date AS birth_date,\n                RHS.birth_place AS birth_place\n         FROM body_builder AS LHS\n         CROSS JOIN people AS RHS)\n      WHERE (people_id = people_id_other))\n   GROUP BY name,\n            total)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM people\nWHERE people_id NOT IN\n    (SELECT People_ID\n     FROM body_builder)", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0020", "sql1": "\nSELECT n AS count_distinct_birth_place_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM people)\nORDER BY count_distinct_birth_place_\n", "sql2": "SELECT count(DISTINCT Birth_Place)\nFROM people", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM body_builder AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0011", "sql1": "\nSELECT height\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM\n     (SELECT *\n      FROM body_builder\n      WHERE (total < 315.0)) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY height\n", "sql2": "SELECT T2.Height\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Total < 315", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/body_builder/0006", "sql1": "\nSELECT birth_date\nFROM people\nORDER BY birth_date\n", "sql2": "SELECT Birth_Date\nFROM People\nORDER BY Height ASC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0009", "sql1": "\nSELECT team\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM player\n      ORDER BY age DESC)\n   LIMIT 5)\n", "sql2": "SELECT Team\nFROM player\nORDER BY Age DESC\nLIMIT 5", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0013", "sql1": "\nSELECT LOCATION,\n       nickname\nFROM\n  (SELECT LHS.school_id AS school_id,\n          LHS.nickname AS nickname,\n          LHS.colors AS colors,\n          LHS.league AS league,\n          LHS.class AS CLASS,\n          LHS.division AS division,\n          RHS.school AS school,\n          RHS.location AS LOCATION,\n          RHS.enrollment AS enrollment,\n          RHS.founded AS founded,\n          RHS.denomination AS denomination,\n          RHS.boys_or_girls AS boys_or_girls,\n          RHS.day_or_boarding AS day_or_boarding,\n          RHS.year_entered_competition AS year_entered_competition,\n          RHS.school_colors AS school_colors\n   FROM school_details AS LHS\n   INNER JOIN school AS RHS ON (LHS.school_id = RHS.school_id))\nORDER BY LOCATION\n", "sql2": "SELECT T1.Location,\n       T2.Nickname\nFROM school AS T1\nJOIN school_details AS T2 ON T1.School_ID = T2.School_ID", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0005", "sql1": "\nSELECT meanenrollment AS avg_enrollment_\nFROM\n  (SELECT AVG(enrollment) AS meanenrollment\n   FROM school)\nORDER BY avg_enrollment_\n", "sql2": "SELECT avg(Enrollment)\nFROM school", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0004", "sql1": "\nSELECT `enrollment`\nFROM `school`\nWHERE (`denomination` != 'Catholic')\nORDER BY enrollment\n", "sql2": "SELECT Enrollment\nFROM school\nWHERE Denomination != 'Catholic'", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0008", "sql1": "\nSELECT team\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM player\n      ORDER BY age DESC)\n   LIMIT 1)\n", "sql2": "SELECT Team\nFROM player\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0015", "sql1": "\nSELECT denomination,\n       n AS count___\nFROM\n  (SELECT day_or_boarding,\n          denomination,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY day_or_boarding,\n            denomination)\nORDER BY denomination\n", "sql2": "SELECT Denomination,\n       COUNT(*)\nFROM school\nGROUP BY Denomination\nORDER BY COUNT(*) DESC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0003", "sql1": "\nSELECT LOCATION\nFROM school\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM school\nORDER BY Founded DESC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0019", "sql1": "\nSELECT `nickname`\nFROM `school_details`\nWHERE (`division` != 'Division 1')\nORDER BY nickname\n", "sql2": "SELECT Nickname\nFROM school_details\nWHERE Division != 'Division 1'", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0018", "sql1": "\nSELECT denomination\nFROM school\nWHERE (founded < 1890.0\n       AND founded < 1900.0)\nORDER BY denomination\n", "sql2": "SELECT Denomination\nFROM school\nWHERE Founded < 1890 INTERSECT\n  SELECT Denomination\n  FROM school WHERE Founded > 1900", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0002", "sql1": "\nSELECT LOCATION\nFROM school\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM school\nORDER BY Enrollment ASC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0014", "sql1": "\nSELECT denomination,\n       n AS count___\nFROM\n  (SELECT day_or_boarding,\n          denomination,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY day_or_boarding,\n            denomination)\nORDER BY denomination\n", "sql2": "SELECT Denomination,\n       COUNT(*)\nFROM school\nGROUP BY Denomination", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM school)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM school", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0020", "sql1": "\nSELECT denomination\nFROM\n  (SELECT day_or_boarding,\n          denomination,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY day_or_boarding,\n            denomination)\nWHERE (n > 1)\nORDER BY denomination\n", "sql2": "SELECT Denomination\nFROM school\nGROUP BY Denomination\nHAVING COUNT(*) > 1", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0016", "sql1": "\nSELECT school_colors\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM school\n      ORDER BY day_or_boarding DESC)\n   LIMIT 1)\n", "sql2": "SELECT School_Colors\nFROM school\nORDER BY Enrollment DESC\nLIMIT 1", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0007", "sql1": "\nSELECT n_distinct AS count_distinct_position_\nFROM\n  (SELECT COUNT(DISTINCT POSITION) AS n_distinct\n   FROM player)\nORDER BY count_distinct_position_\n", "sql2": "SELECT count(DISTINCT POSITION)\nFROM player", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0010", "sql1": "\nSELECT team,\n       LOCATION\nFROM\n  (SELECT LHS.school_id AS school_id,\n          LHS.school AS school,\n          LHS.location AS LOCATION,\n          LHS.enrollment AS enrollment,\n          LHS.founded AS founded,\n          LHS.denomination AS denomination,\n          LHS.boys_or_girls AS boys_or_girls,\n          LHS.day_or_boarding AS day_or_boarding,\n          LHS.year_entered_competition AS year_entered_competition,\n          LHS.school_colors AS school_colors,\n          RHS.player_id AS player_id,\n          RHS.player AS player,\n          RHS.team AS team,\n          RHS.age AS age,\n          RHS.position AS POSITION\n   FROM school AS LHS\n   INNER JOIN player AS RHS ON (LHS.school_id = RHS.school_id))\nORDER BY team\n", "sql2": "SELECT T1.Team,\n       T2.Location\nFROM player AS T1\nJOIN school AS T2 ON T1.School_ID = T2.School_ID", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider/school_player/0006", "sql1": "\nSELECT team\nFROM player\nORDER BY team\n", "sql2": "SELECT Team\nFROM player\nORDER BY Team ASC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0005", "sql1": "\nSELECT `id`,\n       `market_share`\nFROM `browser`\nWHERE (`name` = 'Safari')\nORDER BY id\n", "sql2": "SELECT id,\n       market_share\nFROM browser\nWHERE name = 'Safari'", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0008", "sql1": "\nSELECT accelerator_id AS id,\n       name\nFROM\n  (SELECT accelerator_id,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT id,\n             name,\n             operating_system,\n             client,\n             CONNECTION,\n             browser_id,\n             compatible_since_year,\n             id AS accelerator_id\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.name AS name,\n                LHS.operating_system AS operating_system,\n                LHS.client AS client,\n                LHS.connection AS CONNECTION,\n                RHS.browser_id AS browser_id,\n                RHS.compatible_since_year AS compatible_since_year\n         FROM web_client_accelerator AS LHS\n         INNER JOIN accelerator_compatible_browser AS RHS ON (LHS.id = RHS.accelerator_id)))\n   GROUP BY accelerator_id,\n            name)\nWHERE (n >= 2)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.Name\nFROM web_client_accelerator AS T1\nJOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id\nGROUP BY T1.id\nHAVING count(*) >= 2", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0003", "sql1": "\nSELECT id,\n       name,\n       market_share\nFROM browser\nORDER BY id\n", "sql2": "SELECT id,\n       name,\n       market_share\nFROM browser", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0018", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.market_share AS market_share,\n          RHS.id AS id_other,\n          RHS.name AS name_other,\n          RHS.operating_system AS operating_system,\n          RHS.client AS client,\n          RHS.connection AS CONNECTION,\n          RHS.compatible_since_year AS compatible_since_year,\n          RHS.accelerator_id AS accelerator_id\n   FROM browser AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             operating_system,\n             client,\n             CONNECTION,\n             browser_id,\n             compatible_since_year,\n             id AS accelerator_id\n      FROM\n        (SELECT LHS.id AS id,\n                LHS.name AS name,\n                LHS.operating_system AS operating_system,\n                LHS.client AS client,\n                LHS.connection AS CONNECTION,\n                RHS.browser_id AS browser_id,\n                RHS.compatible_since_year AS compatible_since_year\n         FROM web_client_accelerator AS LHS\n         INNER JOIN accelerator_compatible_browser AS RHS ON (LHS.id = RHS.accelerator_id))) AS RHS ON (LHS.id = RHS.browser_id))\nORDER BY name___1\n", "sql2": "SELECT T2.name,\n       T3.name\nFROM accelerator_compatible_browser AS T1\nJOIN browser AS T2 ON T1.browser_id = T2.id\nJOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id\nORDER BY T1.compatible_since_year DESC", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0002", "sql1": "\nSELECT name\nFROM browser\nORDER BY name\n", "sql2": "SELECT name\nFROM browser\nORDER BY market_share DESC", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0001", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT market_share) AS n_distinct\n   FROM\n     (SELECT *\n      FROM browser\n      WHERE (market_share >= 5.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM browser\nWHERE market_share >= 5", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0017", "sql1": "\nSELECT operating_system,\n       n AS count___\nFROM\n  (SELECT operating_system,\n          COUNT(*) AS n\n   FROM web_client_accelerator\n   GROUP BY operating_system)\nORDER BY operating_system\n", "sql2": "SELECT Operating_system,\n       count(*)\nFROM web_client_accelerator\nGROUP BY Operating_system", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT client) OVER () AS count_distinct_client_\nFROM web_client_accelerator\nORDER BY count_distinct_client_\n", "sql2": "SELECT count(DISTINCT client)\nFROM web_client_accelerator", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/browser_web/0006", "sql1": "\nSELECT `name`,\n       `operating_system`\nFROM `web_client_accelerator`\nWHERE (`connection` != 'Broadband')\nORDER BY name\n", "sql2": "SELECT name,\n       operating_system\nFROM web_client_accelerator\nWHERE CONNECTION != 'Broadband'", "schema": "spider/browser_web/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0009", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.actor_id AS actor_id,\n          LHS.name AS name,\n          LHS.musical_id AS musical_id,\n          LHS.character AS CHARACTER,\n          LHS.duration AS duration,\n          LHS.age AS age,\n          RHS.name AS name_other,\n          RHS.year AS YEAR,\n          RHS.award AS award,\n          RHS.category AS category,\n          RHS.nominee AS nominee,\n          RHS.result AS RESULT\n   FROM actor AS LHS\n   INNER JOIN musical AS RHS ON (LHS.musical_id = RHS.musical_id))\nORDER BY name___1\n", "sql2": "SELECT T1.Name,\n       T2.Name\nFROM actor AS T1\nJOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0005", "sql1": "\nSELECT CHARACTER\nFROM actor\nORDER BY CHARACTER\n", "sql2": "SELECT CHARACTER\nFROM actor\nORDER BY age DESC", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0004", "sql1": "\nSELECT name\nFROM actor\nWHERE (age != 20)\nORDER BY name\n", "sql2": "SELECT Name\nFROM actor\nWHERE Age != 20", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0008", "sql1": "\nSELECT DISTINCT `nominee`\nFROM `musical`\nWHERE (`award` = 'Tony Award')\nORDER BY nominee\n", "sql2": "SELECT DISTINCT Nominee\nFROM musical\nWHERE Award != 'Tony Award'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0015", "sql1": "\nSELECT nominee\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT nominee,\n                YEAR,\n                MAX(n) AS n\n         FROM\n           (SELECT nominee,\n                   YEAR,\n                   COUNT(*) AS n\n            FROM musical\n            GROUP BY nominee,\n                     YEAR)\n         GROUP BY nominee,\n                  YEAR)\n      ORDER BY YEAR)\n   LIMIT 1)\n", "sql2": "SELECT Nominee\nFROM musical\nGROUP BY Nominee\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0003", "sql1": "\nSELECT CHARACTER,\n       duration\nFROM actor\nORDER BY CHARACTER\n", "sql2": "SELECT CHARACTER,\n       Duration\nFROM actor", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0019", "sql1": "\nSELECT DISTINCT `nominee`\nFROM `musical`\nWHERE (`award` != 'Tony Award'\n       OR `award` != 'Drama Desk Award')\nORDER BY nominee\n", "sql2": "SELECT Nominee\nFROM musical\nWHERE Award = 'Tony Award' INTERSECT\n  SELECT Nominee\n  FROM musical WHERE Award = 'Drama Desk Award'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM musical AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM actor AS RHS\n        WHERE (LHS.musical_id = RHS.musical_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM musical\nWHERE Musical_ID NOT IN\n    (SELECT Musical_ID\n     FROM actor)", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0002", "sql1": "\nSELECT name\nFROM actor\nORDER BY name\n", "sql2": "SELECT Name\nFROM actor\nORDER BY Name ASC", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0014", "sql1": "\nSELECT nominee,\n       n AS count___\nFROM\n  (SELECT nominee,\n          YEAR,\n          COUNT(*) AS n\n   FROM musical\n   GROUP BY nominee,\n            YEAR)\nORDER BY nominee\n", "sql2": "SELECT Nominee,\n       COUNT(*)\nFROM musical\nGROUP BY Nominee", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM actor)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM actor", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0017", "sql1": "\nSELECT nominee\nFROM\n  (SELECT nominee,\n          COUNT(*) AS n\n   FROM musical\n   GROUP BY nominee)\nWHERE (n > 2)\nORDER BY nominee\n", "sql2": "SELECT Nominee\nFROM musical\nGROUP BY Nominee\nHAVING COUNT(*) > 2", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0020", "sql1": "\nSELECT `nominee`\nFROM `musical`\nWHERE (`award` = 'Tony Award')\nORDER BY nominee\n", "sql2": "SELECT Nominee\nFROM musical\nWHERE Award = 'Tony Award'\n  OR Award = 'Cleavant Derricks'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0016", "sql1": "\nSELECT RESULT\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT RESULT,\n                YEAR,\n                MAX(n) AS n\n         FROM\n           (SELECT RESULT,\n                   YEAR,\n                   COUNT(*) AS n\n            FROM musical\n            GROUP BY RESULT,\n                     YEAR)\n         GROUP BY RESULT,\n                  YEAR)\n      ORDER BY YEAR)\n   LIMIT 1)\n", "sql2": "SELECT RESULT\nFROM musical\nGROUP BY RESULT\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0007", "sql1": "\nSELECT `name`\nFROM `musical`\nWHERE (`nominee` = 'Bob Fosse')\nORDER BY name\n", "sql2": "SELECT Name\nFROM musical\nWHERE Nominee = 'Bob Fosse'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0011", "sql1": "\nSELECT name\nFROM actor\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM actor AS T1\nJOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID\nORDER BY T2.Year DESC", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0010", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `actor` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `musical`\n           WHERE (`name` != 'The Phantom of the Opera')) AS RHS\n        WHERE (LHS.musical_id = RHS.musical_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM actor AS T1\nJOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID\nWHERE T2.Name = 'The Phantom of the Opera'", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/musical/0006", "sql1": "\nSELECT duration\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT CHARACTER,\n                duration,\n                MAX(age) AS age\n         FROM actor\n         GROUP BY CHARACTER,\n                  duration)\n      ORDER BY CHARACTER)\n   LIMIT 1)\n", "sql2": "SELECT Duration\nFROM actor\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/musical/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0009", "sql1": "\nSELECT official_name,\n       status\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT city_id,\n                official_name,\n                status,\n                area_km_2,\n                MAX(population) OVER () AS population,\n                                     census_ranking\n         FROM city)\n      ORDER BY status)\n   LIMIT 1)\n", "sql2": "SELECT Official_Name,\n       Status\nFROM city\nORDER BY Population DESC\nLIMIT 1", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0013", "sql1": "\nSELECT theme\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.official_name AS official_name,\n          LHS.status AS status,\n          LHS.area_km_2 AS area_km_2,\n          LHS.population AS population,\n          LHS.census_ranking AS census_ranking,\n          RHS.year AS YEAR,\n          RHS.theme AS theme,\n          RHS.host_city_id AS host_city_id,\n          RHS.hosts AS hosts\n   FROM\n     (SELECT *\n      FROM city\n      WHERE (population > 1000.0)) AS LHS\n   INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.competition_id))\nORDER BY theme\n", "sql2": "SELECT T2.Theme\nFROM city AS T1\nJOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID\nWHERE T1.Population > 1000", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0004", "sql1": "\nSELECT theme\nFROM farm_competition\nORDER BY theme\n", "sql2": "SELECT Theme\nFROM farm_competition\nORDER BY YEAR ASC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0008", "sql1": "\nSELECT official_name\nFROM city\nORDER BY official_name\n", "sql2": "SELECT Official_Name\nFROM city\nORDER BY Population DESC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0015", "sql1": "\nSELECT DISTINCT status\nFROM city\nORDER BY status\n", "sql2": "SELECT Status\nFROM city\nGROUP BY Status\nORDER BY COUNT(*) ASC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0003", "sql1": "\nSELECT `hosts`\nFROM `farm_competition`\nWHERE (`theme` != 'Aliens')\nORDER BY hosts\n", "sql2": "SELECT Hosts\nFROM farm_competition\nWHERE Theme != 'Aliens'", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0019", "sql1": "\nSELECT official_name\nFROM city\nWHERE (population >= 1500.0\n       OR population < 500.0)\nORDER BY official_name\n", "sql2": "SELECT Official_Name\nFROM city\nWHERE Population > 1500\n  OR Population < 500", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0018", "sql1": "\nSELECT DISTINCT status\nFROM city\nWHERE (population < 1500.0\n       OR population <= 500.0)\nORDER BY status\n", "sql2": "SELECT Status\nFROM city\nWHERE Population > 1500 INTERSECT\n  SELECT Status\n  FROM city WHERE Population < 500", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0002", "sql1": "\nSELECT total_horses\nFROM farm\nORDER BY total_horses\n", "sql2": "SELECT Total_Horses\nFROM farm\nORDER BY Total_Horses ASC", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0014", "sql1": "\nSELECT status,\n       meanpopulation AS avg_population_\nFROM\n  (SELECT status,\n          AVG(population) AS meanpopulation\n   FROM city\n   GROUP BY status)\nORDER BY status\n", "sql2": "SELECT Status,\n       avg(Population)\nFROM city\nGROUP BY Status", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM farm\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM farm", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0020", "sql1": "\nSELECT `census_ranking`\nFROM `city`\nWHERE (`status` != 'Village')\nORDER BY census_ranking\n", "sql2": "SELECT Census_Ranking\nFROM city\nWHERE Status != 'Village'", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0016", "sql1": "\nSELECT status\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT status,\n                MAX(n) AS maxn\n         FROM\n           (SELECT city_id,\n                   status,\n                   COUNT(*) AS n\n            FROM city\n            GROUP BY city_id,\n                     status)\n         GROUP BY status)\n      ORDER BY status DESC)\n   LIMIT 1)\n", "sql2": "SELECT Status\nFROM city\nGROUP BY Status\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0007", "sql1": "\nSELECT n_distinct AS count_distinct_status_\nFROM\n  (SELECT COUNT(DISTINCT status) AS n_distinct\n   FROM city)\nORDER BY count_distinct_status_\n", "sql2": "SELECT count(DISTINCT Status)\nFROM city", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0010", "sql1": "\nSELECT YEAR,\n       official_name\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.official_name AS official_name,\n          LHS.status AS status,\n          LHS.area_km_2 AS area_km_2,\n          LHS.population AS population,\n          LHS.census_ranking AS census_ranking,\n          RHS.competition_id AS competition_id,\n          RHS.year AS YEAR,\n          RHS.theme AS theme,\n          RHS.hosts AS hosts\n   FROM city AS LHS\n   INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.host_city_id))\nORDER BY YEAR\n", "sql2": "SELECT T2.Year,\n       T1.Official_Name\nFROM city AS T1\nJOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/farm/0006", "sql1": "\nSELECT DISTINCT MAX(cows) OVER () AS max_cows_,\n                               mincows AS min_cows_\nFROM\n  (SELECT farm_id,\n          YEAR,\n          total_horses,\n          working_horses,\n          total_cattle,\n          oxen,\n          bulls,\n          cows,\n          pigs,\n          sheep_and_goats,\n          MIN(cows) OVER () AS mincows\n   FROM farm)\nORDER BY max_cows_\n", "sql2": "SELECT max(Cows),\n       min(Cows)\nFROM farm", "schema": "spider/farm/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0013", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_t1_injury_\nFROM\n  (SELECT injury,\n          COUNT(DISTINCT injury) AS n_distinct\n   FROM\n     (SELECT *\n      FROM injury_accident AS LHS\n      WHERE EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM game\n              WHERE (season > 2010)) AS RHS\n           WHERE (LHS.id = RHS.id) ))\n   GROUP BY injury)\nORDER BY count_distinct_t1_injury_\n", "sql2": "SELECT count(DISTINCT T1.injury)\nFROM injury_accident AS T1\nJOIN game AS T2 ON T1.game_id = T2.id\nWHERE T2.season > 2010", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0005", "sql1": "\nSELECT average_attendance\nFROM stadium\nWHERE (capacity_percentage > 100.0)\nORDER BY average_attendance\n", "sql2": "SELECT average_attendance\nFROM stadium\nWHERE capacity_percentage > 100", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0004", "sql1": "\nSELECT DISTINCT home_games AS max_home_games_,\n                minhome_games AS min_home_games_,\n                AVG(home_games) OVER () AS avg_home_games_\nFROM\n  (SELECT capacity_percentage,\n          MAX(home_games) OVER () AS home_games,\n                               minhome_games\n   FROM\n     (SELECT capacity_percentage,\n             home_games,\n             MIN(home_games) AS minhome_games\n      FROM stadium\n      GROUP BY capacity_percentage,\n               home_games))\nORDER BY max_home_games_\n", "sql2": "SELECT max(home_games),\n       min(home_games),\n       avg(home_games)\nFROM stadium", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0003", "sql1": "\nSELECT season,\n       home_team,\n       away_team\nFROM game\nORDER BY season\n", "sql2": "SELECT season,\n       home_team,\n       away_team\nFROM game", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0018", "sql1": "\nSELECT date, player\nFROM\n  (SELECT LHS.stadium_id AS stadium_id,\n          LHS.id AS id,\n          LHS.season AS season,\n          LHS.date AS date,\n          LHS.home_team AS home_team,\n          LHS.away_team AS away_team,\n          LHS.score AS score,\n          LHS.competition AS competition,\n          RHS.id AS id_other,\n          RHS.player AS player,\n          RHS.injury AS injury,\n          RHS.number_of_matches AS number_of_matches,\n          RHS.source AS SOURCE\n   FROM game AS LHS\n   INNER JOIN injury_accident AS RHS ON (LHS.id = RHS.game_id))\nORDER BY date\n", "sql2": "SELECT T1.date,\n       T2.player\nFROM game AS T1\nJOIN injury_accident AS T2 ON T1.id = T2.game_id\nORDER BY T1.season DESC", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0002", "sql1": "\nSELECT date\nFROM game\nORDER BY date\n", "sql2": "SELECT Date\nFROM game\nORDER BY home_team DESC", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0007", "sql1": "\nSELECT `season`\nFROM\n  (SELECT `stadium_id`,\n          `id`,\n          `season`,\n          `date`,\n          `home_team`,\n          `away_team`,\n          `score`,\n          `competition`,\n          `id_other`,\n          `player`,\n          `injury`,\n          `number_of_matches`,\n          `source`,\n          `id` AS `game_id`\n   FROM\n     (SELECT `LHS`.`stadium_id` AS `stadium_id`,\n             `LHS`.`id` AS `id`,\n             `LHS`.`season` AS `season`,\n             `LHS`.`date` AS `date`,\n             `LHS`.`home_team` AS `home_team`,\n             `LHS`.`away_team` AS `away_team`,\n             `LHS`.`score` AS `score`,\n             `LHS`.`competition` AS `competition`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`player` AS `player`,\n             `RHS`.`injury` AS `injury`,\n             `RHS`.`number_of_matches` AS `number_of_matches`,\n             `RHS`.`source` AS `source`\n      FROM `game` AS `LHS`\n      INNER JOIN `injury_accident` AS `RHS` ON (`LHS`.`id` = `RHS`.`game_id`)))\nWHERE (`player` = 'Walter Samuel')\nORDER BY season\n", "sql2": "SELECT T1.season\nFROM game AS T1\nJOIN injury_accident AS T2 ON T1.id = T2.game_id\nWHERE T2.player = 'Walter Samuel'", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0011", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_source_\nFROM\n  (SELECT number_of_matches,\n          COUNT(DISTINCT SOURCE) AS n_distinct\n   FROM injury_accident\n   GROUP BY number_of_matches)\nORDER BY count_distinct_source_\n", "sql2": "SELECT count(DISTINCT SOURCE)\nFROM injury_accident", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_injury/0006", "sql1": "\nSELECT `player`,\n       `number_of_matches`,\n       `source`\nFROM `injury_accident`\nWHERE (`injury` != 'Knee problem')\nORDER BY player\n", "sql2": "SELECT player,\n       number_of_matches,\n       SOURCE\nFROM injury_accident\nWHERE injury != 'Knee problem'", "schema": "spider/game_injury/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0009", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          RHS.departmentid AS departmentid,\n          RHS.name AS name_other,\n          RHS.head AS head,\n          RHS.primaryaffiliation AS primaryaffiliation,\n          RHS.department AS department\n   FROM physician AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT departmentid,\n                name,\n                head,\n                physician,\n                primaryaffiliation,\n                departmentid AS department\n         FROM\n           (SELECT LHS.departmentid AS departmentid,\n                   LHS.name AS name,\n                   LHS.head AS head,\n                   RHS.physician AS physician,\n                   RHS.primaryaffiliation AS primaryaffiliation\n            FROM department AS LHS\n            INNER JOIN affiliated_with AS RHS ON (LHS.departmentid = RHS.department)))\n      WHERE (primaryaffiliation = 1)) AS RHS ON (LHS.employeeid = RHS.physician))\nORDER BY name___1\n", "sql2": "SELECT T1.name,\n       T3.name\nFROM physician AS T1\nJOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician\nJOIN department AS T3 ON T2.department = T3.DepartmentID\nWHERE T2.PrimaryAffiliation = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0033", "sql1": "\nSELECT name\nFROM\n  (SELECT departmentid,\n          name,\n          head,\n          department,\n          primaryaffiliation,\n          departmentid AS physician\n   FROM\n     (SELECT LHS.departmentid AS departmentid,\n             LHS.name AS name,\n             LHS.head AS head,\n             RHS.department AS department,\n             RHS.primaryaffiliation AS primaryaffiliation\n      FROM department AS LHS\n      INNER JOIN affiliated_with AS RHS ON (LHS.departmentid = RHS.physician)))\nWHERE (primaryaffiliation = 1)\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.name\nFROM affiliated_with AS T1\nJOIN department AS T2 ON T1.department = T2.departmentid\nWHERE PrimaryAffiliation = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0005", "sql1": "\nSELECT name,\n       phone\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.address AS address,\n          LHS.phone AS phone,\n          LHS.insuranceid AS insuranceid,\n          LHS.pcp AS pcp,\n          RHS.physician AS physician,\n          RHS.n AS n\n   FROM patient AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT patient,\n                physician,\n                COUNT(*) AS n\n         FROM appointment\n         GROUP BY patient,\n                  physician)\n      WHERE (n != 1)) AS RHS ON (LHS.ssn = RHS.patient))\nORDER BY name\n", "sql2": "SELECT name,\n       phone\nFROM appointment AS T1\nJOIN patient AS T2 ON T1.patient = T2.ssn\nGROUP BY T1.patient\nHAVING count(*) > 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0029", "sql1": "\nSELECT name\nFROM nurse\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.name\nFROM undergoes AS T1\nJOIN nurse AS T2 ON T1.AssistingNurse = T2.EmployeeID", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0028", "sql1": "\nSELECT name\nFROM nurse\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM nurse\nORDER BY name", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0004", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.address AS address,\n          LHS.phone AS phone,\n          LHS.insuranceid AS insuranceid,\n          LHS.pcp AS pcp,\n          RHS.appointmentid AS appointmentid,\n          RHS.prepnurse AS prepnurse,\n          RHS.physician AS physician,\n          RHS.start AS START, RHS.end AS END,\n                              RHS.examinationroom AS examinationroom\n   FROM patient AS LHS\n   INNER JOIN appointment AS RHS ON (LHS.ssn = RHS.patient))\nORDER BY name\n", "sql2": "SELECT name\nFROM appointment AS T1\nJOIN patient AS T2 ON T1.patient = T2.ssn", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0032", "sql1": "\nSELECT physician,\n       department\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          LHS.departmentid AS departmentid,\n          LHS.head AS head,\n          RHS.physician AS physician,\n          RHS.department AS department,\n          RHS.primaryaffiliation AS primaryaffiliation\n   FROM\n     (SELECT LHS.employeeid AS employeeid,\n             LHS.name AS name,\n             LHS.position AS POSITION,\n             LHS.ssn AS ssn,\n             RHS.departmentid AS departmentid,\n             RHS.head AS head\n      FROM physician AS LHS\n      INNER JOIN department AS RHS ON (LHS.name = RHS.name)) AS LHS\n   CROSS JOIN\n     (SELECT *\n      FROM affiliated_with\n      WHERE (primaryaffiliation = 1)) AS RHS)\nORDER BY physician\n", "sql2": "SELECT physician,\n       department\nFROM affiliated_with\nWHERE primaryaffiliation = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0024", "sql1": "\nSELECT DISTINCT code AS count___,\n                name\nFROM\n  (SELECT LHS.code AS code,\n          LHS.name AS name,\n          LHS.brand AS brand,\n          LHS.description AS description,\n          RHS.appointment AS appointment,\n          RHS.n AS n\n   FROM medication AS LHS\n   INNER JOIN\n     (SELECT appointment,\n             medication,\n             COUNT(*) AS n\n      FROM prescribes\n      GROUP BY appointment,\n               medication) AS RHS ON (LHS.code = RHS.medication))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM medication AS T1\nJOIN prescribes AS T2 ON T1.code = T2.medication\nGROUP BY T1.brand", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0049", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM appointment)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM appointment", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0019", "sql1": "\nSELECT DISTINCT n AS count___,\n                blockcode\nFROM\n  (SELECT LHS.blockfloor AS blockfloor,\n          LHS.blockcode AS blockcode,\n          LHS.roomnumber AS roomnumber,\n          LHS.roomtype AS roomtype,\n          LHS.unavailable AS unavailable,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.blockfloor AS blockfloor,\n             LHS.blockcode AS blockcode,\n             RHS.roomnumber AS roomnumber,\n             RHS.roomtype AS roomtype,\n             RHS.unavailable AS unavailable\n      FROM block AS LHS\n      INNER JOIN room AS RHS ON (LHS.blockfloor = RHS.blockfloor\n                                    AND LHS.blockcode = RHS.blockcode)) AS LHS\n   CROSS JOIN\n     (SELECT COUNT(*) AS n\n      FROM block) AS RHS)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.blockcode\nFROM BLOCK AS T1\nJOIN room AS T2 ON T1.blockfloor = T2.blockfloor\nAND T1.blockcode = T2.blockcode\nGROUP BY T1.blockcode", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0034", "sql1": "\nSELECT employeeid AS nurse\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.registered AS registered,\n          LHS.ssn AS ssn,\n          RHS.blockfloor AS blockfloor,\n          RHS.blockcode AS blockcode,\n          RHS.oncallstart AS oncallstart,\n          RHS.oncallend AS oncallend\n   FROM nurse AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM on_call\n      WHERE (blockcode < 1\n             OR blockcode = blockfloor)) AS RHS ON (LHS.employeeid = RHS.nurse))\nORDER BY nurse\n", "sql2": "SELECT nurse\nFROM on_call\nWHERE blockfloor = 1\n  AND blockcode = 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0022", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT `physician`,\n          `patient`,\n          `medication`,\n          `date`,\n          `appointment`,\n          `dose`,\n          `name`,\n          `brand`,\n          `description`,\n          `name_other`,\n          `position`,\n          `ssn`,\n          `physician` AS `employeeid`\n   FROM\n     (SELECT `LHS`.`physician` AS `physician`,\n             `LHS`.`patient` AS `patient`,\n             `LHS`.`medication` AS `medication`,\n             `LHS`.`date` AS `date`,\n             `LHS`.`appointment` AS `appointment`,\n             `LHS`.`dose` AS `dose`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`brand` AS `brand`,\n             `RHS`.`description` AS `description`,\n             `RHS`.`name_other` AS `name_other`,\n             `RHS`.`position` AS `position`,\n             `RHS`.`ssn` AS `ssn`\n      FROM `prescribes` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM\n           (SELECT *\n            FROM\n              (SELECT `LHS`.`code` AS `code`,\n                      `LHS`.`name` AS `name`,\n                      `LHS`.`brand` AS `brand`,\n                      `LHS`.`description` AS `description`,\n                      `RHS`.`employeeid` AS `employeeid`,\n                      `RHS`.`name` AS `name_other`,\n                      `RHS`.`position` AS `position`,\n                      `RHS`.`ssn` AS `ssn`\n               FROM `medication` AS `LHS`\n               CROSS JOIN `physician` AS `RHS`)\n            WHERE (`name` != `name_other`))\n         WHERE (`name` = 'Thesisin')) AS RHS ON (LHS.physician = RHS.employeeid\n                                                 AND LHS.medication = RHS.code)))\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name\nFROM physician AS T1\nJOIN prescribes AS T2 ON T1.employeeid = T2.physician\nJOIN medication AS T3 ON T3.code = T2.medication\nWHERE T3.name = 'Thesisin'", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0018", "sql1": "\nSELECT DISTINCT n AS count___,\n                blockfloor\nFROM\n  (SELECT LHS.blockfloor AS blockfloor,\n          LHS.blockcode AS blockcode,\n          LHS.roomnumber AS roomnumber,\n          LHS.roomtype AS roomtype,\n          LHS.unavailable AS unavailable,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.blockfloor AS blockfloor,\n             LHS.blockcode AS blockcode,\n             RHS.roomnumber AS roomnumber,\n             RHS.roomtype AS roomtype,\n             RHS.unavailable AS unavailable\n      FROM block AS LHS\n      INNER JOIN room AS RHS ON (LHS.blockfloor = RHS.blockfloor\n                                    AND LHS.blockcode = RHS.blockcode)) AS LHS\n   INNER JOIN\n     (SELECT blockfloor,\n             COUNT(*) AS n\n      FROM room\n      GROUP BY blockfloor) AS RHS ON (LHS.blockfloor = RHS.blockfloor))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.blockfloor\nFROM BLOCK AS T1\nJOIN room AS T2 ON T1.blockfloor = T2.blockfloor\nAND T1.blockcode = T2.blockcode\nGROUP BY T1.blockfloor", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0040", "sql1": "\nSELECT DISTINCT `meancost` AS `avg_t3_cost_`\nFROM\n  (SELECT `LHS`.`physician` AS `physician`,\n          `LHS`.`treatment` AS `treatment`,\n          `LHS`.`certificationdate` AS `certificationdate`,\n          `LHS`.`certificationexpires` AS `certificationexpires`,\n          `LHS`.`meancost` AS `meancost`,\n          `RHS`.`employeeid` AS `employeeid`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`ssn` AS `ssn`\n   FROM\n     (SELECT `LHS`.`physician` AS `physician`,\n             `LHS`.`treatment` AS `treatment`,\n             `LHS`.`certificationdate` AS `certificationdate`,\n             `LHS`.`certificationexpires` AS `certificationexpires`,\n             `RHS`.`meancost` AS `meancost`\n      FROM `trained_in` AS `LHS`\n      CROSS JOIN\n        (SELECT AVG(`cost`) AS `meancost`\n         FROM `procedures`) AS `RHS`) AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `physician`\n      WHERE (`name` != 'John Wen')) AS RHS)\nORDER BY avg_t3_cost_\n", "sql2": "SELECT avg(T3.cost)\nFROM physician AS T1\nJOIN trained_in AS T2 ON T1.employeeid = T2.physician\nJOIN procedures AS T3 ON T3.code = T2.treatment\nWHERE T1.name = 'John Wen'", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0037", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM procedures\n      ORDER BY cost)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM procedures\nORDER BY cost\nLIMIT 3", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0021", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT roomtype) OVER () AS count_distinct_roomtype_\nFROM room\nORDER BY count_distinct_roomtype_\n", "sql2": "SELECT count(DISTINCT roomtype)\nFROM room", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0020", "sql1": "\nSELECT DISTINCT blockcode\nFROM room\nWHERE (unavailable != 1)\nORDER BY blockcode\n", "sql2": "SELECT DISTINCT blockcode\nFROM room\nWHERE unavailable = 0", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0036", "sql1": "\nSELECT name,\n       cost\nFROM procedures\nORDER BY name\n", "sql2": "SELECT name,\n       cost\nFROM procedures\nORDER BY cost DESC", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0016", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          RHS.n AS n\n   FROM physician AS LHS\n   INNER JOIN\n     (SELECT pcp,\n             COUNT(*) AS n\n      FROM patient\n      GROUP BY pcp) AS RHS ON (LHS.employeeid = RHS.pcp))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM physician AS T1\nJOIN patient AS T2 ON T1.employeeid = T2.PCP\nGROUP BY T1.employeeid", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0050", "sql1": "\nSELECT name\nFROM nurse\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name\nFROM nurse AS T1\nJOIN on_call AS T2 ON T1.EmployeeID = T2.nurse", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.employeeid AS employeeid,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.ssn AS ssn,\n          RHS.appointmentid AS appointmentid,\n          RHS.patient AS patient,\n          RHS.prepnurse AS prepnurse,\n          RHS.start AS START, RHS.end AS END,\n                              RHS.examinationroom AS examinationroom\n   FROM physician AS LHS\n   INNER JOIN appointment AS RHS ON (LHS.employeeid = RHS.physician))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM appointment AS T1\nJOIN physician AS T2 ON T1.Physician = T2.EmployeeID", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0011", "sql1": "\nSELECT DISTINCT n AS count_patient_\nFROM\n  (SELECT patient,\n          room,\n          COUNT(*) AS n\n   FROM stay\n   GROUP BY patient,\n            room)\nWHERE (room > 112\n       OR room <= patient)\nORDER BY count_patient_\n", "sql2": "SELECT count(patient)\nFROM stay\nWHERE room = 112", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0006", "sql1": "\nSELECT appointmentid\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM appointment\n      ORDER BY END)\n   LIMIT 1)\n", "sql2": "SELECT appointmentid\nFROM appointment\nORDER BY\nSTART DESC\nLIMIT 1", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hospital_1/0030", "sql1": "\nSELECT name\nFROM medication\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM medication\nORDER BY name", "schema": "spider/hospital_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hospital_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0009", "sql1": "\nSELECT name,\n       manufacturer_id\nFROM manufacturer\nORDER BY name\n", "sql2": "SELECT name,\n       manufacturer_id\nFROM manufacturer\nORDER BY open_year", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0013", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.manufacturer_id AS manufacturer_id,\n          LHS.n AS n,\n          RHS.open_year AS open_year,\n          RHS.name AS name,\n          RHS.num_of_factories AS num_of_factories,\n          RHS.num_of_shops AS num_of_shops\n   FROM\n     (SELECT manufacturer_id,\n             COUNT(*) AS n\n      FROM furniture_manufacte\n      GROUP BY manufacturer_id) AS LHS\n   INNER JOIN manufacturer AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       t1.name\nFROM manufacturer AS t1\nJOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id\nGROUP BY t1.manufacturer_id", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0005", "sql1": "\nSELECT name,\n       num_of_component\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT furniture_id,\n                name,\n                num_of_component,\n                market_rate,\n                MIN(market_rate) OVER () AS minmarket_rate\n         FROM furniture)\n      ORDER BY market_rate)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       Num_of_Component\nFROM furniture\nORDER BY market_rate\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0004", "sql1": "\nSELECT num_of_component,\n       name\nFROM furniture\nWHERE (num_of_component > 10)\nORDER BY num_of_component\n", "sql2": "SELECT Num_of_Component,\n       name\nFROM furniture\nWHERE Num_of_Component > 10", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0012", "sql1": "\nSELECT manufacturer_id,\n       furniture_id AS num_of_shops\nFROM\n  (SELECT furniture_id,\n          manufacturer_id,\n          MAX(price_in_dollar) AS price_in_dollar\n   FROM\n     (SELECT manufacturer_id,\n             furniture_id,\n             price_in_dollar,\n             open_year,\n             name,\n             num_of_factories,\n             furniture_id AS num_of_shops\n      FROM\n        (SELECT LHS.manufacturer_id AS manufacturer_id,\n                LHS.furniture_id AS furniture_id,\n                LHS.price_in_dollar AS price_in_dollar,\n                RHS.open_year AS open_year,\n                RHS.name AS name,\n                RHS.num_of_factories AS num_of_factories\n         FROM furniture_manufacte AS LHS\n         INNER JOIN manufacturer AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id\n                                               AND LHS.furniture_id = RHS.num_of_shops)))\n   GROUP BY furniture_id,\n            manufacturer_id)\nORDER BY manufacturer_id\n", "sql2": "SELECT t1.manufacturer_id,\n       t1.num_of_shops\nFROM manufacturer AS t1\nJOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id\nORDER BY t2.Price_in_Dollar DESC\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0015", "sql1": "\nSELECT market_rate,\n       name\nFROM\n  (SELECT *\n   FROM furniture AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM furniture_manufacte AS RHS\n        WHERE (LHS.furniture_id = RHS.furniture_id) ))\nORDER BY market_rate\n", "sql2": "SELECT Market_Rate,\n       name\nFROM furniture\nWHERE Furniture_ID NOT IN\n    (SELECT Furniture_ID\n     FROM furniture_manufacte)", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0003", "sql1": "\nSELECT summarket_rate AS sum_market_rate_\nFROM\n  (SELECT SUM(market_rate) AS summarket_rate\n   FROM furniture)\nORDER BY sum_market_rate_\n", "sql2": "SELECT sum(market_rate)\nFROM furniture\nORDER BY market_rate DESC\nLIMIT 2", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0002", "sql1": "\nSELECT name,\n       furniture_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT furniture_id,\n                name,\n                MAX(market_rate) AS market_rate\n         FROM furniture\n         GROUP BY furniture_id,\n                  name)\n      ORDER BY furniture_id)\n   LIMIT 1)\n", "sql2": "SELECT name,\n       furniture_id\nFROM furniture\nORDER BY market_rate DESC\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0014", "sql1": "\nSELECT name,\n       price_in_dollar\nFROM\n  (SELECT LHS.manufacturer_id AS manufacturer_id,\n          LHS.furniture_id AS furniture_id,\n          LHS.price_in_dollar AS price_in_dollar,\n          RHS.name AS name,\n          RHS.num_of_component AS num_of_component,\n          RHS.market_rate AS market_rate\n   FROM furniture_manufacte AS LHS\n   LEFT JOIN furniture AS RHS ON (LHS.furniture_id = RHS.furniture_id))\nORDER BY name\n", "sql2": "SELECT t1.name,\n       t2.price_in_dollar\nFROM furniture AS t1\nJOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0001", "sql1": "\nSELECT sumnum_of_component AS sum_num_of_component_\nFROM\n  (SELECT SUM(num_of_component) AS sumnum_of_component\n   FROM furniture)\nORDER BY sum_num_of_component_\n", "sql2": "SELECT sum(num_of_component)\nFROM furniture", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0007", "sql1": "\nSELECT DISTINCT open_year_other AS open_year,\n                name_other AS name\nFROM\n  (SELECT LHS.manufacturer_id AS manufacturer_id,\n          LHS.open_year AS open_year,\n          LHS.name AS name,\n          LHS.num_of_factories AS num_of_factories,\n          LHS.num_of_shops AS num_of_shops,\n          LHS.maxnum_of_shops AS maxnum_of_shops,\n          RHS.manufacturer_id AS manufacturer_id_other,\n          RHS.open_year AS open_year_other,\n          RHS.name AS name_other,\n          RHS.num_of_factories AS num_of_factories_other,\n          RHS.num_of_shops AS num_of_shops_other,\n          RHS.maxnum_of_shops AS maxnum_of_shops_other\n   FROM\n     (SELECT manufacturer_id,\n             open_year,\n             name,\n             num_of_factories,\n             num_of_shops,\n             MAX(num_of_shops) OVER () AS maxnum_of_shops\n      FROM manufacturer) AS LHS\n   CROSS JOIN\n     (SELECT manufacturer_id,\n             open_year,\n             name,\n             num_of_factories,\n             num_of_shops,\n             MAX(num_of_shops) OVER () AS maxnum_of_shops\n      FROM manufacturer) AS RHS)\nWHERE (maxnum_of_shops <= num_of_shops_other\n       AND maxnum_of_shops <= maxnum_of_shops_other)\nORDER BY open_year\n", "sql2": "SELECT open_year,\n       name\nFROM manufacturer\nORDER BY num_of_shops DESC\nLIMIT 1", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufacturer/0010", "sql1": "\nSELECT name,\n       open_year\nFROM manufacturer\nWHERE (num_of_shops >= 10\n       OR num_of_shops > num_of_factories)\nORDER BY name\n", "sql2": "SELECT name,\n       open_year\nFROM manufacturer\nWHERE num_of_shops > 10\n  OR Num_of_Factories < 10", "schema": "spider/manufacturer/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0009", "sql1": "\nSELECT meanhigh_temperature AS avg_high_temperature_,\n       day_of_week\nFROM\n  (SELECT day_of_week,\n          AVG(high_temperature) AS meanhigh_temperature\n   FROM weekly_weather\n   GROUP BY day_of_week)\nORDER BY avg_high_temperature_\n", "sql2": "SELECT avg(high_temperature),\n       day_of_week\nFROM weekly_weather\nGROUP BY day_of_week", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0005", "sql1": "\nSELECT `train_number`,\n       `time`\nFROM `train`\nWHERE (`origin` = 'Chennai'\n       AND `destination` = 'Guruvayur')\nORDER BY train_number\n", "sql2": "SELECT train_number,\n       TIME\nFROM train\nWHERE origin = 'Chennai'\n  AND destination = 'Guruvayur'", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0012", "sql1": "\nSELECT n_distinct AS count_distinct_services_\nFROM\n  (SELECT COUNT(DISTINCT services) AS n_distinct\n   FROM station)\nORDER BY count_distinct_services_\n", "sql2": "SELECT count(DISTINCT services)\nFROM station", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0003", "sql1": "\nSELECT `time`,\n       `train_number`\nFROM `train`\nWHERE (`destination` = 'Chennai')\nORDER BY TIME\n", "sql2": "SELECT TIME,\n       train_number\nFROM train\nWHERE destination = 'Chennai'\nORDER BY TIME", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0002", "sql1": "\nSELECT train_number,\n       name\nFROM train\nORDER BY train_number\n", "sql2": "SELECT train_number,\n       name\nFROM train\nORDER BY TIME", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0001", "sql1": "\nSELECT local_authority,\n       services\nFROM station\nORDER BY local_authority\n", "sql2": "SELECT local_authority,\n       services\nFROM station", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0016", "sql1": "\nSELECT origin\nFROM\n  (SELECT interval, origin,\n                    COUNT(*) AS n\n   FROM train\n   GROUP BY interval, origin)\nWHERE (n != 1)\nORDER BY origin\n", "sql2": "SELECT origin\nFROM train\nGROUP BY origin\nHAVING count(*) > 1", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.train_number AS train_number,\n          LHS.name AS name,\n          LHS.origin AS origin,\n          LHS.destination AS destination,\n          LHS.time AS TIME,\n          LHS.interval AS interval\n   FROM train AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS maxn\n      FROM\n        (SELECT station_id,\n                train_id,\n                COUNT(*) AS n\n         FROM route\n         GROUP BY station_id,\n                  train_id)) AS RHS ON (LHS.id = RHS.maxn))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM train AS t1\nJOIN route AS t2 ON t1.id = t2.train_id\nGROUP BY t2.train_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/station_weather/0006", "sql1": "\nSELECT origin,\n       n AS count___\nFROM\n  (SELECT origin,\n          COUNT(*) AS n\n   FROM train\n   GROUP BY origin)\nORDER BY origin\n", "sql2": "SELECT origin,\n       count(*)\nFROM train\nGROUP BY origin", "schema": "spider/station_weather/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0013", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM perpetrator\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM perpetrator\nGROUP BY Country", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0005", "sql1": "\nSELECT DISTINCT LOCATION\nFROM\n  (SELECT LHS.perpetrator_id AS perpetrator_id,\n          LHS.people_id AS people_id,\n          LHS.date AS date,\n          LHS.year AS YEAR,\n          LHS.location AS LOCATION,\n          LHS.country AS country,\n          LHS.killed AS killed,\n          LHS.injured AS injured,\n          LHS.maxkilled AS maxkilled,\n          RHS.perpetrator_id AS perpetrator_id_other,\n          RHS.people_id AS people_id_other,\n          RHS.date AS date_other,\n          RHS.year AS year_other,\n          RHS.location AS location_other,\n          RHS.country AS country_other,\n          RHS.killed AS killed_other,\n          RHS.injured AS injured_other,\n          RHS.maxkilled AS maxkilled_other\n   FROM\n     (SELECT perpetrator_id,\n             people_id, date, YEAR,\n                              LOCATION,\n                              country,\n                              killed,\n                              injured,\n                              MAX(killed) OVER () AS maxkilled\n      FROM perpetrator) AS LHS\n   CROSS JOIN\n     (SELECT perpetrator_id,\n             people_id, date, YEAR,\n                              LOCATION,\n                              country,\n                              killed,\n                              injured,\n                              MAX(killed) OVER () AS maxkilled\n      FROM perpetrator) AS RHS)\nWHERE (killed >= maxkilled_other\n       OR maxkilled != maxkilled_other)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM perpetrator\nORDER BY Killed DESC\nLIMIT 1", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0004", "sql1": "\nSELECT DISTINCT AVG(injured) OVER () AS avg_injured_\nFROM perpetrator\nORDER BY avg_injured_\n", "sql2": "SELECT avg(Injured)\nFROM perpetrator", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0012", "sql1": "\nSELECT height\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY height\n", "sql2": "SELECT T1.Height\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Injured DESC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0008", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`people_id` AS `people_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`home_town` AS `home_town`,\n          `RHS`.`perpetrator_id` AS `perpetrator_id`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`killed` AS `killed`,\n          `RHS`.`injured` AS `injured`\n   FROM `people` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `perpetrator`\n      WHERE (`country` != 'China')) AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nWHERE T2.Country != 'China'", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0015", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM perpetrator\n   GROUP BY country)\nWHERE (n >= 2)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM perpetrator\nGROUP BY Country\nHAVING COUNT(*) >= 2", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0003", "sql1": "\nSELECT injured\nFROM perpetrator\nORDER BY injured\n", "sql2": "SELECT Injured\nFROM perpetrator\nORDER BY Injured ASC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0019", "sql1": "\nSELECT n_distinct AS count_distinct_location_\nFROM\n  (SELECT COUNT(DISTINCT LOCATION) AS n_distinct\n   FROM perpetrator)\nORDER BY count_distinct_location_\n", "sql2": "SELECT count(DISTINCT LOCATION)\nFROM perpetrator", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0018", "sql1": "\nSELECT country\nFROM perpetrator\nWHERE (injured >= 50\n       AND injured > 20)\nORDER BY country\n", "sql2": "SELECT Country\nFROM perpetrator\nWHERE Injured > 50 INTERSECT\n  SELECT Country\n  FROM perpetrator WHERE Injured < 20", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0002", "sql1": "\nSELECT date\nFROM perpetrator\nORDER BY date\n", "sql2": "SELECT Date\nFROM perpetrator\nORDER BY Killed DESC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM perpetrator\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM perpetrator", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM perpetrator)", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0021", "sql1": "\nSELECT DISTINCT MAX(YEAR) OVER () AS max_year_\nFROM perpetrator\nORDER BY max_year_\n", "sql2": "SELECT max(YEAR)\nFROM perpetrator;", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0020", "sql1": "\nSELECT date\nFROM\n  (SELECT LHS.home_town AS home_town,\n          LHS.people_id AS people_id,\n          LHS.height AS height,\n          RHS.perpetrator_id AS perpetrator_id,\n          RHS.people_id AS people_id_other,\n          RHS.date AS date,\n          RHS.year AS YEAR,\n          RHS.location AS LOCATION,\n          RHS.country AS country,\n          RHS.killed AS killed\n   FROM\n     (SELECT home_town,\n             people_id,\n             MAX(height) AS height\n      FROM people\n      GROUP BY home_town,\n               people_id) AS LHS\n   INNER JOIN perpetrator AS RHS ON (LHS.people_id = RHS.injured))\nORDER BY date\n", "sql2": "SELECT T2.Date\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Height DESC\nLIMIT 1", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0016", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Year DESC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM perpetrator AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0011", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`people_id` AS `people_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`home_town` AS `home_town`,\n          `RHS`.`perpetrator_id` AS `perpetrator_id`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`killed` AS `killed`,\n          `RHS`.`injured` AS `injured`\n   FROM `people` AS `LHS`\n   LEFT JOIN `perpetrator` AS `RHS` ON (`LHS`.`people_id` = `RHS`.`people_id`))\nWHERE (`country` = 'China'\n       OR `country` = 'Japan')\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM people AS T1\nJOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID\nWHERE T2.Country = 'China'\n  OR T2.Country = 'Japan'", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/perpetrator/0006", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT Name\nFROM People\nORDER BY Height ASC", "schema": "spider/perpetrator/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0009", "sql1": "\nSELECT name,\n       damage_millions_usd\nFROM storm\nORDER BY name\n", "sql2": "SELECT name,\n       damage_millions_USD\nFROM storm\nORDER BY max_speed DESC", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0013", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.storm_id AS storm_id,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.dates_active AS dates_active,\n          RHS.max_speed AS max_speed,\n          RHS.damage_millions_usd AS damage_millions_usd,\n          RHS.number_deaths AS number_deaths\n   FROM\n     (SELECT storm_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY storm_id) AS LHS\n   INNER JOIN storm AS RHS ON (LHS.storm_id = RHS.storm_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM storm AS T1\nJOIN affected_region AS T2 ON T1.storm_id = T2.storm_id\nGROUP BY T1.storm_id", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0005", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM storm\n      WHERE (number_deaths != 0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM storm\nWHERE Number_Deaths > 0", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0004", "sql1": "\nSELECT `region_name`\nFROM `region`\nWHERE (`region_name` != 'Denmark')\nORDER BY region_name\n", "sql2": "SELECT region_name\nFROM region\nWHERE region_name != 'Denmark'", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0012", "sql1": "\nSELECT DISTINCT region_name,\n                n AS count___\nFROM\n  (SELECT LHS.region_id AS region_id,\n          LHS.region_code AS region_code,\n          LHS.region_name AS region_name,\n          LHS.storm_id AS storm_id,\n          LHS.number_city_affected AS number_city_affected,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.region_id AS region_id,\n             LHS.region_code AS region_code,\n             LHS.region_name AS region_name,\n             RHS.storm_id AS storm_id,\n             RHS.number_city_affected AS number_city_affected\n      FROM region AS LHS\n      INNER JOIN affected_region AS RHS ON (LHS.region_id = RHS.region_id)) AS LHS\n   INNER JOIN\n     (SELECT region_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY region_id) AS RHS ON (LHS.region_id = RHS.region_id))\nORDER BY region_name\n", "sql2": "SELECT T1.region_name,\n       count(*)\nFROM region AS T1\nJOIN affected_region AS T2 ON T1.region_id = T2.region_id\nGROUP BY T1.region_id", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM storm AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM affected_region AS RHS\n        WHERE (LHS.storm_id = RHS.storm_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM storm\nWHERE storm_id NOT IN\n    (SELECT storm_id\n     FROM affected_region)", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0003", "sql1": "\nSELECT region_name\nFROM region\nORDER BY region_name\n", "sql2": "SELECT region_name\nFROM region\nORDER BY region_name", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0019", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`storm_id` AS `storm_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`dates_active` AS `dates_active`,\n          `LHS`.`max_speed` AS `max_speed`,\n          `LHS`.`damage_millions_usd` AS `damage_millions_usd`,\n          `LHS`.`number_deaths` AS `number_deaths`,\n          `LHS`.`region_id` AS `region_id`,\n          `LHS`.`region_code` AS `region_code`,\n          `LHS`.`region_name` AS `region_name`,\n          `RHS`.`number_city_affected` AS `number_city_affected`\n   FROM\n     (SELECT `LHS`.`storm_id` AS `storm_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`dates_active` AS `dates_active`,\n             `LHS`.`max_speed` AS `max_speed`,\n             `LHS`.`damage_millions_usd` AS `damage_millions_usd`,\n             `LHS`.`number_deaths` AS `number_deaths`,\n             `RHS`.`region_id` AS `region_id`,\n             `RHS`.`region_code` AS `region_code`,\n             `RHS`.`region_name` AS `region_name`\n      FROM `storm` AS `LHS`\n      CROSS JOIN `region` AS `RHS`) AS `LHS`\n   INNER JOIN `affected_region` AS `RHS` ON (`LHS`.`storm_id` = `RHS`.`storm_id`\n                                                AND `LHS`.`region_id` = `RHS`.`region_id`))\nWHERE (`region_name` = 'Denmark')\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM affected_region AS T1\nJOIN region AS T2 ON T1.region_id = T2.region_id\nJOIN storm AS T3 ON T1.storm_id = T3.storm_id\nWHERE T2.region_name = 'Denmark'", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0018", "sql1": "\nSELECT region_name\nFROM\n  (SELECT LHS.storm_id AS storm_id,\n          LHS.name AS name,\n          LHS.dates_active AS dates_active,\n          LHS.max_speed AS max_speed,\n          LHS.damage_millions_usd AS damage_millions_usd,\n          LHS.number_deaths AS number_deaths,\n          LHS.region_id AS region_id,\n          LHS.region_code AS region_code,\n          LHS.region_name AS region_name,\n          RHS.number_city_affected AS number_city_affected\n   FROM\n     (SELECT LHS.storm_id AS storm_id,\n             LHS.name AS name,\n             LHS.dates_active AS dates_active,\n             LHS.max_speed AS max_speed,\n             LHS.damage_millions_usd AS damage_millions_usd,\n             LHS.number_deaths AS number_deaths,\n             RHS.region_id AS region_id,\n             RHS.region_code AS region_code,\n             RHS.region_name AS region_name\n      FROM storm AS LHS\n      CROSS JOIN region AS RHS) AS LHS\n   INNER JOIN affected_region AS RHS ON (LHS.storm_id = RHS.storm_id\n                                            AND LHS.region_id = RHS.region_id))\nWHERE (number_deaths > 10)\nORDER BY region_name\n", "sql2": "SELECT T2.region_name\nFROM affected_region AS T1\nJOIN region AS T2 ON T1.region_id = T2.region_id\nJOIN storm AS T3 ON T1.storm_id = T3.storm_id\nWHERE T3.number_deaths >= 10", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0002", "sql1": "\nSELECT region_code,\n       region_name\nFROM region\nORDER BY region_code\n", "sql2": "SELECT region_code,\n       region_name\nFROM region\nORDER BY region_code", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM region\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM region", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0020", "sql1": "\nSELECT DISTINCT region_name\nFROM\n  (SELECT LHS.region_id AS region_id,\n          LHS.region_code AS region_code,\n          LHS.region_name AS region_name,\n          RHS.storm_id AS storm_id\n   FROM region AS LHS\n   INNER JOIN\n     (SELECT storm_id,\n             COUNT(*) AS n\n      FROM affected_region\n      GROUP BY storm_id) AS RHS ON (LHS.region_id = RHS.n))\nORDER BY region_name\n", "sql2": "SELECT T1.region_name\nFROM region AS T1\nJOIN affected_region AS T2 ON T1.region_id = T2.region_id\nGROUP BY T1.region_id\nHAVING count(*) >= 2", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0011", "sql1": "\nSELECT region_name\nFROM\n  (SELECT *\n   FROM region AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM affected_region AS RHS\n        WHERE (LHS.region_id = RHS.region_id) ))\nORDER BY region_name\n", "sql2": "SELECT region_name\nFROM region\nWHERE region_id NOT IN\n    (SELECT region_id\n     FROM affected_region)", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0010", "sql1": "\nSELECT n_distinct AS count_distinct_region_id_\nFROM\n  (SELECT COUNT(DISTINCT region_id) AS n_distinct\n   FROM affected_region)\nORDER BY count_distinct_region_id_\n", "sql2": "SELECT count(DISTINCT region_id)\nFROM affected_region", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/storm_record/0006", "sql1": "\nSELECT name,\n       dates_active,\n       number_deaths\nFROM storm\nWHERE (number_deaths > 1)\nORDER BY name\n", "sql2": "SELECT name,\n       dates_active,\n       number_deaths\nFROM storm\nWHERE number_deaths >= 1", "schema": "spider/storm_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT aid,\n                name,\n                AVG(distance) AS meandistance\n         FROM aircraft\n         GROUP BY aid,\n                  name)\n      ORDER BY meandistance DESC)\n   LIMIT 7)\n", "sql2": "SELECT name\nFROM Aircraft\nWHERE distance >\n    (SELECT avg(distance)\n     FROM Aircraft)", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0025", "sql1": "\nSELECT flno\nFROM flight\nWHERE (distance > 2000.0)\nORDER BY flno\n", "sql2": "SELECT flno\nFROM Flight\nWHERE distance > 2000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0033", "sql1": "\nSELECT DISTINCT origin\nFROM\n  (SELECT flno,\n          origin,\n          destination,\n          distance,\n          departure_date,\n          arrival_date,\n          price,\n          aid,\n          n,\n          departure_date_other,\n          n AS maxn\n   FROM\n     (SELECT LHS.flno AS flno,\n             LHS.origin AS origin,\n             LHS.destination AS destination,\n             LHS.distance AS distance,\n             LHS.departure_date AS departure_date,\n             LHS.arrival_date AS arrival_date,\n             LHS.price AS price,\n             LHS.aid AS aid,\n             LHS.n AS n,\n             RHS.departure_date AS departure_date_other\n      FROM\n        (SELECT flno,\n                origin,\n                destination,\n                distance,\n                departure_date,\n                arrival_date,\n                price,\n                aid,\n                COUNT(*) OVER () AS n\n         FROM flight) AS LHS\n      INNER JOIN\n        (SELECT aid,\n                departure_date,\n                MAX(n) AS maxn\n         FROM\n           (SELECT flno,\n                   origin,\n                   destination,\n                   distance,\n                   departure_date,\n                   arrival_date,\n                   price,\n                   aid,\n                   COUNT(*) OVER () AS n\n            FROM flight)\n         GROUP BY aid,\n                  departure_date) AS RHS ON (LHS.n = RHS.maxn\n                                             AND LHS.flno = RHS.aid)))\nORDER BY origin\n", "sql2": "SELECT origin\nFROM Flight\nGROUP BY origin\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0044", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`aid` AS `aid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`distance` AS `distance`,\n                `RHS`.`eid` AS `eid`,\n                `RHS`.`name` AS `name_other`,\n                `RHS`.`salary` AS `salary`\n         FROM\n           (SELECT *\n            FROM `aircraft`\n            WHERE (`name` = 'Boeing 737-800')) AS LHS\n         CROSS JOIN employee AS RHS)\n      WHERE (name != name_other)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM certificate AS RHS\n        WHERE (LHS.aid = RHS.aid\n               AND LHS.eid = RHS.eid) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM Employee\nEXCEPT\nSELECT T1.name\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nJOIN Aircraft AS T3 ON T3.aid = T2.aid\nWHERE T3.name = 'Boeing 737-800'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0013", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT salary) AS n_distinct\n   FROM\n     (SELECT *\n      FROM employee\n      WHERE (salary > 100000.0\n             AND salary < 200000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employee\nWHERE salary BETWEEN 100000 AND 200000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0005", "sql1": "\nSELECT name,\n       distance\nFROM aircraft\nWHERE (aid = 12.0)\nORDER BY name\n", "sql2": "SELECT name,\n       distance\nFROM Aircraft\nWHERE aid = 12", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0029", "sql1": "\nSELECT flno\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM flight\n      ORDER BY price)\n   LIMIT 3)\n", "sql2": "SELECT flno\nFROM Flight\nORDER BY distance ASC\nLIMIT 3", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0028", "sql1": "\nSELECT DISTINCT flno,\n                distance\nFROM\n  (SELECT LHS.flno AS flno,\n          LHS.origin AS origin,\n          LHS.destination AS destination,\n          LHS.distance AS distance,\n          LHS.departure_date AS departure_date,\n          LHS.arrival_date AS arrival_date,\n          LHS.price AS price,\n          LHS.aid AS aid,\n          LHS.maxprice AS maxprice,\n          RHS.flno AS flno_other,\n          RHS.origin AS origin_other,\n          RHS.destination AS destination_other,\n          RHS.distance AS distance_other,\n          RHS.departure_date AS departure_date_other,\n          RHS.arrival_date AS arrival_date_other,\n          RHS.price AS price_other,\n          RHS.aid AS aid_other,\n          RHS.maxprice AS maxprice_other\n   FROM\n     (SELECT flno,\n             origin,\n             destination,\n             distance,\n             departure_date,\n             arrival_date,\n             price,\n             aid,\n             MAX(price) OVER () AS maxprice\n      FROM flight) AS LHS\n   CROSS JOIN\n     (SELECT flno,\n             origin,\n             destination,\n             distance,\n             departure_date,\n             arrival_date,\n             price,\n             aid,\n             MAX(price) OVER () AS maxprice\n      FROM flight) AS RHS)\nWHERE (price >= maxprice_other\n       AND price_other < maxprice_other)\nORDER BY flno\n", "sql2": "SELECT flno,\n       distance\nFROM Flight\nORDER BY price DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0004", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT distance) AS n_distinct\n   FROM\n     (SELECT *\n      FROM aircraft\n      WHERE (distance > 1000.0\n             AND distance < 5000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Aircraft\nWHERE distance BETWEEN 1000 AND 5000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0012", "sql1": "\nSELECT eid\nFROM employee\nWHERE (salary >= 100000.0)\nORDER BY eid\n", "sql2": "SELECT eid\nFROM Employee\nWHERE salary > 100000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0045", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.name AS name,\n          LHS.distance AS distance,\n          LHS.eid AS eid,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.aid AS aid,\n             LHS.name AS name,\n             LHS.distance AS distance,\n             LHS.eid AS eid,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.aid AS aid,\n                LHS.name AS name,\n                LHS.distance AS distance,\n                RHS.eid AS eid\n         FROM aircraft AS LHS\n         INNER JOIN certificate AS RHS ON (LHS.aid = RHS.aid)) AS LHS\n      INNER JOIN\n        (SELECT aid,\n                COUNT(*) AS n\n         FROM certificate\n         GROUP BY aid) AS RHS ON (LHS.aid = RHS.aid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT aid,\n                COUNT(*) AS n\n         FROM certificate\n         GROUP BY aid)) AS RHS ON (LHS.n = RHS.n))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Certificate AS T1\nJOIN Aircraft AS T2 ON T2.aid = T1.aid\nGROUP BY T1.aid\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0032", "sql1": "\nSELECT destination,\n       n AS count___\nFROM\n  (SELECT destination,\n          COUNT(*) AS n\n   FROM flight\n   GROUP BY destination)\nORDER BY destination\n", "sql2": "SELECT destination,\n       count(*)\nFROM Flight\nGROUP BY destination", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0024", "sql1": "\nSELECT `departure_date`,\n       `arrival_date`\nFROM `flight`\nWHERE (`origin` = 'Los Angeles'\n       AND `destination` = 'Honolulu')\nORDER BY departure_date\n", "sql2": "SELECT departure_date,\n       arrival_date\nFROM Flight\nWHERE origin = 'Los Angeles'\n  AND destination = 'Honolulu'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM aircraft\n      ORDER BY distance)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM Aircraft\nORDER BY distance\nLIMIT 3", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0042", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`eid` AS `eid`,\n          `LHS`.`aid` AS `aid`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`salary` AS `salary`\n   FROM\n     (SELECT *\n      FROM `certificate` AS `LHS`\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM `aircraft`\n              WHERE (`name` != 'Boeing 737-800')) AS RHS\n           WHERE (LHS.aid = RHS.aid) )) AS LHS\n   INNER JOIN employee AS RHS ON (LHS.eid = RHS.eid))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nJOIN Aircraft AS T3 ON T3.aid = T2.aid\nWHERE T3.name = 'Boeing 737-800'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0015", "sql1": "\nSELECT DISTINCT meansalary AS avg_salary_,\n                MAX(salary) OVER () AS max_salary_\nFROM\n  (SELECT eid,\n          name,\n          salary,\n          AVG(salary) OVER () AS meansalary\n   FROM employee)\nORDER BY avg_salary_\n", "sql2": "SELECT avg(salary),\n       max(salary)\nFROM Employee", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0003", "sql1": "\nSELECT aid\nFROM aircraft\nWHERE (distance >= 1000.0)\nORDER BY aid\n", "sql2": "SELECT aid\nFROM Aircraft\nWHERE distance > 1000", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0039", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT eid) OVER () AS count_distinct_eid_\nFROM certificate\nORDER BY count_distinct_eid_\n", "sql2": "SELECT count(DISTINCT eid)\nFROM Certificate", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0019", "sql1": "\nSELECT `eid`,\n       `salary`\nFROM `employee`\nWHERE (`name` = 'Mark Young')\nORDER BY eid\n", "sql2": "SELECT eid,\n       salary\nFROM Employee\nWHERE name = 'Mark Young'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0023", "sql1": "\nSELECT `origin`\nFROM `flight`\nWHERE (`destination` = 'Honolulu')\nORDER BY origin\n", "sql2": "SELECT origin\nFROM Flight\nWHERE destination = 'Honolulu'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0035", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.name AS name,\n          LHS.distance AS distance,\n          RHS.flno AS flno,\n          RHS.origin AS origin,\n          RHS.destination AS destination,\n          RHS.distance AS distance_other,\n          RHS.departure_date AS departure_date,\n          RHS.arrival_date AS arrival_date,\n          RHS.price AS price\n   FROM aircraft AS LHS\n   INNER JOIN flight AS RHS ON (LHS.aid = RHS.aid))\nWHERE (flno = 99.0)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nWHERE T1.flno = 99", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0022", "sql1": "\nSELECT `flno`\nFROM `flight`\nWHERE (`origin` = 'Los Angeles')\nORDER BY flno\n", "sql2": "SELECT flno\nFROM Flight\nWHERE origin = 'Los Angeles'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT eid,\n                name,\n                salary,\n                AVG(salary) OVER () AS meansalary\n         FROM employee)\n      ORDER BY salary DESC)\n   LIMIT 13)\n", "sql2": "SELECT name\nFROM Employee\nWHERE salary >\n    (SELECT avg(salary)\n     FROM Employee)", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0038", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.price AS price,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.distance AS distance\n   FROM\n     (SELECT aid,\n             price,\n             COUNT(*) AS n\n      FROM\n        (SELECT flno,\n                destination AS origin,\n                destination,\n                distance,\n                departure_date,\n                arrival_date,\n                price,\n                aid,\n                flno_other,\n                distance_other,\n                departure_date_other,\n                arrival_date_other,\n                price_other,\n                aid_other\n         FROM\n           (SELECT flno,\n                   origin,\n                   origin AS destination,\n                   distance,\n                   departure_date,\n                   arrival_date,\n                   price,\n                   aid,\n                   flno_other,\n                   distance_other,\n                   departure_date_other,\n                   arrival_date_other,\n                   price_other,\n                   aid_other\n            FROM\n              (SELECT LHS.flno AS flno,\n                      LHS.origin AS origin,\n                      LHS.destination AS destination,\n                      LHS.distance AS distance,\n                      LHS.departure_date AS departure_date,\n                      LHS.arrival_date AS arrival_date,\n                      LHS.price AS price,\n                      LHS.aid AS aid,\n                      RHS.flno AS flno_other,\n                      RHS.distance AS distance_other,\n                      RHS.departure_date AS departure_date_other,\n                      RHS.arrival_date AS arrival_date_other,\n                      RHS.price AS price_other,\n                      RHS.aid AS aid_other\n               FROM flight AS LHS\n               INNER JOIN flight AS RHS ON (LHS.origin = RHS.destination\n                                               AND LHS.destination = RHS.origin))))\n      GROUP BY aid,\n               price) AS LHS\n   LEFT JOIN aircraft AS RHS ON (LHS.aid = RHS.aid))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nGROUP BY T1.aid\nHAVING count(*) >= 2", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0002", "sql1": "\nSELECT name,\n       distance\nFROM aircraft\nORDER BY name\n", "sql2": "SELECT name,\n       distance\nFROM Aircraft", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0014", "sql1": "\nSELECT name,\n       salary\nFROM employee\nWHERE (eid = 242518965.0)\nORDER BY name\n", "sql2": "SELECT name,\n       salary\nFROM Employee\nWHERE eid = 242518965", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM aircraft\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Aircraft", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employee\n      ORDER BY salary)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM Employee\nORDER BY salary ASC\nLIMIT 3", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0040", "sql1": "\nSELECT eid\nFROM\n  (SELECT *\n   FROM employee AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM certificate AS RHS\n        WHERE (LHS.eid = RHS.eid) ))\nORDER BY eid\n", "sql2": "SELECT eid\nFROM Employee\nEXCEPT\nSELECT eid\nFROM Certificate", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0037", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.departure_date AS departure_date,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.distance AS distance\n   FROM\n     (SELECT aid,\n             departure_date,\n             COUNT(*) AS n\n      FROM flight\n      GROUP BY aid,\n               departure_date) AS LHS\n   INNER JOIN aircraft AS RHS ON (LHS.aid = RHS.aid))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nGROUP BY T1.aid", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0021", "sql1": "\nSELECT flno,\n       origin,\n       destination\nFROM flight\nORDER BY flno\n", "sql2": "SELECT flno,\n       origin,\n       destination\nFROM Flight\nORDER BY origin", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0020", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM flight\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Flight", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0036", "sql1": "\nSELECT `flno`\nFROM\n  (SELECT `LHS`.`flno` AS `flno`,\n          `LHS`.`origin` AS `origin`,\n          `LHS`.`destination` AS `destination`,\n          `LHS`.`distance` AS `distance`,\n          `LHS`.`departure_date` AS `departure_date`,\n          `LHS`.`arrival_date` AS `arrival_date`,\n          `LHS`.`price` AS `price`,\n          `LHS`.`aid` AS `aid`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`distance` AS `distance_other`\n   FROM `flight` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `aircraft`\n      WHERE (`name` = 'Airbus A340-300')) AS RHS ON (LHS.aid = RHS.aid))\nORDER BY flno\n", "sql2": "SELECT T1.flno\nFROM Flight AS T1\nJOIN Aircraft AS T2 ON T1.aid = T2.aid\nWHERE T2.name = 'Airbus A340-300'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0041", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`aid` AS `aid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`distance` AS `distance`,\n             `RHS`.`eid` AS `eid`\n      FROM `aircraft` AS `LHS`\n      INNER JOIN `certificate` AS `RHS` ON (`LHS`.`aid` = `RHS`.`aid`)) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `employee`\n           WHERE (`name` != 'John Williams')) AS RHS\n        WHERE (LHS.eid = RHS.eid) ))\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nJOIN Aircraft AS T3 ON T3.aid = T2.aid\nWHERE T1.name = 'John Williams'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0016", "sql1": "\nSELECT DISTINCT eid_other AS eid,\n                name_other AS name\nFROM\n  (SELECT LHS.eid AS eid,\n          LHS.name AS name,\n          LHS.salary AS salary,\n          LHS.maxsalary AS maxsalary,\n          RHS.eid AS eid_other,\n          RHS.name AS name_other,\n          RHS.salary AS salary_other,\n          RHS.maxsalary AS maxsalary_other\n   FROM\n     (SELECT eid,\n             name,\n             salary,\n             MAX(salary) OVER () AS maxsalary\n      FROM employee) AS LHS\n   CROSS JOIN\n     (SELECT eid,\n             name,\n             salary,\n             MAX(salary) OVER () AS maxsalary\n      FROM employee) AS RHS)\nWHERE (maxsalary = salary_other\n       OR salary_other >= maxsalary_other)\nORDER BY eid\n", "sql2": "SELECT eid,\n       name\nFROM Employee\nORDER BY salary DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0031", "sql1": "\nSELECT origin,\n       n AS count___\nFROM\n  (SELECT arrival_date,\n          origin,\n          COUNT(*) AS n\n   FROM flight\n   GROUP BY arrival_date,\n            origin)\nORDER BY origin\n", "sql2": "SELECT origin,\n       count(*)\nFROM Flight\nGROUP BY origin", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0027", "sql1": "\nSELECT origin,\n       destination\nFROM flight\nWHERE (price > 300.0)\nORDER BY origin\n", "sql2": "SELECT origin,\n       destination\nFROM Flight\nWHERE price > 300", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0007", "sql1": "\nSELECT DISTINCT aid,\n                name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.name AS name,\n          LHS.distance AS distance,\n          LHS.maxdistance AS maxdistance,\n          RHS.aid AS aid_other,\n          RHS.name AS name_other,\n          RHS.distance AS distance_other,\n          RHS.maxdistance AS maxdistance_other\n   FROM\n     (SELECT aid,\n             name,\n             distance,\n             MAX(distance) OVER () AS maxdistance\n      FROM aircraft) AS LHS\n   CROSS JOIN\n     (SELECT aid,\n             name,\n             distance,\n             MAX(distance) OVER () AS maxdistance\n      FROM aircraft) AS RHS)\nWHERE (distance = maxdistance_other\n       OR distance_other > maxdistance_other)\nORDER BY aid\n", "sql2": "SELECT aid,\n       name\nFROM Aircraft\nORDER BY distance DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0011", "sql1": "\nSELECT name,\n       salary\nFROM employee\nORDER BY name\n", "sql2": "SELECT name,\n       salary\nFROM Employee\nORDER BY salary", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0046", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.aid AS aid,\n          LHS.name AS name,\n          LHS.distance AS distance,\n          RHS.eid AS eid,\n          RHS.n AS n\n   FROM aircraft AS LHS\n   INNER JOIN\n     (SELECT eid,\n             aid,\n             COUNT(*) OVER () AS n\n      FROM certificate) AS RHS ON (LHS.aid = RHS.aid))\nWHERE (distance >= 5000.0\n       OR n <= 5)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Certificate AS T1\nJOIN Aircraft AS T2 ON T2.aid = T1.aid\nWHERE T2.distance > 5000\nGROUP BY T1.aid\nORDER BY count(*) >= 5", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0047", "sql1": "\nSELECT DISTINCT name,\n                salary\nFROM\n  (SELECT LHS.eid AS eid,\n          LHS.name AS name,\n          LHS.salary AS salary,\n          LHS.aid AS aid,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.eid AS eid,\n             LHS.name AS name,\n             LHS.salary AS salary,\n             LHS.aid AS aid,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.eid AS eid,\n                LHS.name AS name,\n                LHS.salary AS salary,\n                RHS.aid AS aid\n         FROM employee AS LHS\n         INNER JOIN certificate AS RHS ON (LHS.eid = RHS.eid)) AS LHS\n      INNER JOIN\n        (SELECT eid,\n                COUNT(*) AS n\n         FROM certificate\n         GROUP BY eid) AS RHS ON (LHS.eid = RHS.eid)) AS LHS\n   INNER JOIN\n     (SELECT eid,\n             MAX(n) OVER () AS n\n      FROM\n        (SELECT eid,\n                COUNT(*) AS n\n         FROM certificate\n         GROUP BY eid)) AS RHS ON (LHS.eid = RHS.eid\n                                   AND LHS.n = RHS.n))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.salary\nFROM Employee AS T1\nJOIN Certificate AS T2 ON T1.eid = T2.eid\nGROUP BY T1.eid\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employee\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employee", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_1/0026", "sql1": "\nSELECT `meanprice` AS `avg_price_`\nFROM\n  (SELECT `destination`,\n          `origin`,\n          AVG(`price`) AS `meanprice`\n   FROM\n     (SELECT *\n      FROM `flight`\n      WHERE (`origin` = 'Los Angeles'\n             AND `destination` = 'Honolulu'))\n   GROUP BY destination,\n            origin)\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM Flight\nWHERE origin = 'Los Angeles'\n  AND destination = 'Honolulu'", "schema": "spider/flight_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0033", "sql1": "\nSELECT name,\n       price\nFROM products\nWHERE (price >= 180.0)\nORDER BY name\n", "sql2": "SELECT name,\n       price\nFROM products\nWHERE price >= 180\nORDER BY price DESC,\n         name ASC", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0013", "sql1": "\nSELECT DISTINCT name,\n                headquarter,\n                founder\nFROM\n  (SELECT LHS.code AS code,\n          LHS.name AS name,\n          LHS.headquarter AS headquarter,\n          LHS.founder AS founder,\n          LHS.revenue AS revenue,\n          LHS.maxrevenue AS maxrevenue,\n          RHS.code AS code_other,\n          RHS.name AS name_other,\n          RHS.headquarter AS headquarter_other,\n          RHS.founder AS founder_other,\n          RHS.revenue AS revenue_other\n   FROM\n     (SELECT code,\n             name,\n             headquarter,\n             founder,\n             revenue,\n             MAX(revenue) OVER () AS maxrevenue\n      FROM manufacturers) AS LHS\n   CROSS JOIN manufacturers AS RHS)\nWHERE (revenue = maxrevenue\n       AND revenue != revenue_other)\nORDER BY name\n", "sql2": "SELECT name,\n       headquarter,\n       founder\nFROM manufacturers\nORDER BY revenue DESC\nLIMIT 1", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0005", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `headquarter`,\n          COUNT(DISTINCT `founder`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `manufacturers`\n      WHERE (`founder` = 'Andy'))\n   GROUP BY headquarter)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM manufacturers\nWHERE founder = 'Andy'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0029", "sql1": "\nSELECT code,\n       name,\n       price,\n       manufacturer\nFROM products\nWHERE (price > 60.0\n       AND price <= 120.0)\nORDER BY code\n", "sql2": "SELECT *\nFROM products\nWHERE price BETWEEN 60 AND 120", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0028", "sql1": "\nSELECT name\nFROM products\nWHERE (price < 200.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM products\nWHERE price <= 200", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0032", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM products\nWHERE (price >= 180.0)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products\nWHERE price >= 180", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT code,\n                name,\n                headquarter,\n                founder,\n                revenue,\n                AVG(revenue) OVER () AS meanrevenue\n         FROM manufacturers)\n      ORDER BY revenue DESC)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM manufacturers\nWHERE revenue >\n    (SELECT avg(revenue)\n     FROM manufacturers)", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0003", "sql1": "\nSELECT name,\n       headquarter\nFROM manufacturers\nORDER BY name\n", "sql2": "SELECT name,\n       headquarter\nFROM manufacturers\nORDER BY revenue DESC", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0019", "sql1": "\nSELECT name,\n       revenue AS max_revenue_,\n       headquarter\nFROM\n  (SELECT headquarter,\n          name,\n          MAX(revenue) AS revenue\n   FROM manufacturers\n   GROUP BY headquarter,\n            name)\nORDER BY name\n", "sql2": "SELECT name,\n       max(revenue),\n       Headquarter\nFROM manufacturers\nGROUP BY Headquarter", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0035", "sql1": "\nSELECT meanprice AS avg_price_,\n       manufacturer\nFROM\n  (SELECT manufacturer,\n          AVG(price) AS meanprice\n   FROM products\n   GROUP BY manufacturer)\nORDER BY avg_price_\n", "sql2": "SELECT AVG(Price),\n       Manufacturer\nFROM Products\nGROUP BY Manufacturer", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0018", "sql1": "\nSELECT sumrevenue AS sum_revenue_,\n       founder\nFROM\n  (SELECT founder,\n          SUM(revenue) AS sumrevenue\n   FROM manufacturers\n   GROUP BY founder)\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue),\n       founder\nFROM manufacturers\nGROUP BY founder", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0038", "sql1": "\nSELECT name,\n       price\nFROM\n  (SELECT LHS.price AS price,\n          RHS.code AS code,\n          RHS.name AS name,\n          RHS.manufacturer AS manufacturer\n   FROM\n     (SELECT MIN(price) AS price\n      FROM products) AS LHS\n   LEFT JOIN products AS RHS ON (LHS.price = RHS.price))\nORDER BY name\n", "sql2": "SELECT name,\n       price\nFROM Products\nORDER BY price ASC\nLIMIT 1", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0002", "sql1": "\nSELECT `headquarter`\nFROM `manufacturers`\nWHERE (`founder` = 'James')\nORDER BY headquarter\n", "sql2": "SELECT headquarter\nFROM manufacturers\nWHERE founder = 'James'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0014", "sql1": "\nSELECT name,\n       headquarter,\n       revenue\nFROM manufacturers\nORDER BY name\n", "sql2": "SELECT name,\n       headquarter,\n       revenue\nFROM manufacturers\nORDER BY revenue DESC", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0001", "sql1": "\nSELECT `founder`\nFROM `manufacturers`\nWHERE (`name` = 'Sony')\nORDER BY founder\n", "sql2": "SELECT founder\nFROM manufacturers\nWHERE name = 'Sony'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0021", "sql1": "\nSELECT meanprice AS avg_t1_price_,\n       name\nFROM\n  (SELECT code,\n          name,\n          AVG(price) AS meanprice\n   FROM\n     (SELECT code,\n             name,\n             headquarter,\n             founder,\n             revenue,\n             code_other,\n             name_other,\n             price,\n             code AS manufacturer\n      FROM\n        (SELECT LHS.code AS code,\n                LHS.name AS name,\n                LHS.headquarter AS headquarter,\n                LHS.founder AS founder,\n                LHS.revenue AS revenue,\n                RHS.code AS code_other,\n                RHS.name AS name_other,\n                RHS.price AS price\n         FROM manufacturers AS LHS\n         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))\n   GROUP BY code,\n            name)\nORDER BY avg_t1_price_\n", "sql2": "SELECT avg(T1.price),\n       T2.name\nFROM products AS T1\nJOIN manufacturers AS T2 ON T1.Manufacturer = T2.code\nGROUP BY T2.name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0020", "sql1": "\nSELECT sumrevenue AS sum_revenue_,\n       name\nFROM\n  (SELECT name,\n          SUM(revenue) AS sumrevenue\n   FROM manufacturers\n   GROUP BY name)\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue),\n       name\nFROM manufacturers\nGROUP BY name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0036", "sql1": "\nSELECT meanprice AS avg_t1_price_,\n       name\nFROM\n  (SELECT code,\n          name,\n          AVG(price) AS meanprice\n   FROM\n     (SELECT code,\n             name,\n             headquarter,\n             founder,\n             revenue,\n             code_other,\n             name_other,\n             price,\n             code AS manufacturer\n      FROM\n        (SELECT LHS.code AS code,\n                LHS.name AS name,\n                LHS.headquarter AS headquarter,\n                LHS.founder AS founder,\n                LHS.revenue AS revenue,\n                RHS.code AS code_other,\n                RHS.name AS name_other,\n                RHS.price AS price\n         FROM manufacturers AS LHS\n         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))\n   GROUP BY code,\n            name)\nORDER BY avg_t1_price_\n", "sql2": "SELECT avg(T1.Price),\n       T2.name\nFROM products AS T1\nJOIN Manufacturers AS T2 ON T1.manufacturer = T2.code\nGROUP BY T2.name", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0031", "sql1": "\nSELECT DISTINCT AVG(price) OVER () AS avg_price_\nFROM products\nWHERE (manufacturer = 2\n       OR price <= 2.0)\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM products\nWHERE Manufacturer = 2", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0027", "sql1": "\nSELECT name,\n       price\nFROM products\nORDER BY name\n", "sql2": "SELECT name,\n       price\nFROM products", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0007", "sql1": "\nSELECT headquarter\nFROM manufacturers\nORDER BY headquarter\n", "sql2": "SELECT DISTINCT headquarter\nFROM manufacturers", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0011", "sql1": "\nSELECT DISTINCT SUM(`revenue`) OVER () AS `sum_revenue_`\nFROM `manufacturers`\nWHERE (`headquarter` = 'Tokyo'\n       OR `headquarter` = 'Taiwan')\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue)\nFROM manufacturers\nWHERE Headquarter = 'Tokyo'\n  OR Headquarter = 'Taiwan'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0010", "sql1": "\nSELECT name\nFROM manufacturers\nWHERE (revenue >= 100.0\n       AND revenue < 150.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM manufacturers\nWHERE revenue BETWEEN 100 AND 150", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0006", "sql1": "\nSELECT `revenue` AS `sum_revenue_`\nFROM\n  (SELECT `code`,\n          `name`,\n          `headquarter`,\n          `founder`,\n          `revenue`,\n          SUM(`revenue`) OVER () AS `sumrevenue`\n   FROM `manufacturers`)\nWHERE (`headquarter` = 'Austin'\n       OR sumrevenue <= revenue)\nORDER BY sum_revenue_\n", "sql2": "SELECT sum(revenue)\nFROM manufacturers\nWHERE headquarter = 'Austin'", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0026", "sql1": "\nSELECT name\nFROM products\nORDER BY name\n", "sql2": "SELECT Name\nFROM Products", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/manufactory_1/0030", "sql1": "\nSELECT meanprice AS avg_price_\nFROM\n  (SELECT AVG(price) AS meanprice\n   FROM products)\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM products", "schema": "spider/manufactory_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/manufactory_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0009", "sql1": "\nSELECT `other_details`\nFROM `locations`\nWHERE (`location_name` = 'UK Gallery')\nORDER BY other_details\n", "sql2": "SELECT Other_Details\nFROM LOCATIONS\nWHERE Location_Name = 'UK Gallery'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0033", "sql1": "\nSELECT how_to_get_there,\n       n AS count___\nFROM\n  (SELECT how_to_get_there,\n          COUNT(*) AS n\n   FROM tourist_attractions\n   GROUP BY how_to_get_there)\nORDER BY how_to_get_there\n", "sql2": "SELECT How_to_Get_There,\n       COUNT(*)\nFROM Tourist_Attractions\nGROUP BY How_to_Get_There", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0013", "sql1": "\nSELECT `name`\nFROM `tourist_attractions`\nWHERE (`how_to_get_there` = 'bus')\nORDER BY name\n", "sql2": "SELECT Name\nFROM TOURIST_ATTRACTIONS\nWHERE How_to_Get_There = 'bus'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0005", "sql1": "\nSELECT tourist_details\nFROM visitors\nORDER BY tourist_details\n", "sql2": "SELECT Tourist_Details\nFROM VISITORS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0029", "sql1": "\nSELECT other_hotel_details\nFROM\n  (SELECT LHS.hotel_id AS hotel_id,\n          LHS.star_rating_code AS star_rating_code,\n          LHS.pets_allowed_yn AS pets_allowed_yn,\n          LHS.price_range AS price_range,\n          LHS.other_hotel_details AS other_hotel_details,\n          RHS.star_rating_code AS star_rating_code_other,\n          RHS.price_range AS price_range_other,\n          RHS.other_hotel_details AS other_hotel_details_other\n   FROM hotels AS LHS\n   INNER JOIN hotels AS RHS ON (LHS.hotel_id = RHS.hotel_id\n                                   AND LHS.star_rating_code = RHS.pets_allowed_yn))\nORDER BY other_hotel_details\n", "sql2": "SELECT other_hotel_details\nFROM HOTELS\nORDER BY price_range DESC\nLIMIT 3", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0028", "sql1": "\nSELECT hotel_id,\n       star_rating_code\nFROM hotels\nORDER BY hotel_id\n", "sql2": "SELECT hotel_id,\n       star_rating_code\nFROM HOTELS\nORDER BY price_range ASC", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0004", "sql1": "\nSELECT name,\n       other_details\nFROM staff\nORDER BY name\n", "sql2": "SELECT Name,\n       Other_Details\nFROM Staff", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0012", "sql1": "\nSELECT visit_date\nFROM visits\nORDER BY visit_date\n", "sql2": "SELECT DISTINCT Visit_Date\nFROM VISITS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0024", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `LHS`.`visit_id` AS `visit_id`,\n          `LHS`.`tourist_id` AS `tourist_id`,\n          `LHS`.`visit_date` AS `visit_date`,\n          `LHS`.`visit_details` AS `visit_details`,\n          `RHS`.`tourist_details` AS `tourist_details`\n   FROM\n     (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n             `LHS`.`attraction_type_code` AS `attraction_type_code`,\n             `LHS`.`location_id` AS `location_id`,\n             `LHS`.`how_to_get_there` AS `how_to_get_there`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`description` AS `description`,\n             `LHS`.`opening_hours` AS `opening_hours`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`visit_id` AS `visit_id`,\n             `RHS`.`tourist_id` AS `tourist_id`,\n             `RHS`.`visit_date` AS `visit_date`,\n             `RHS`.`visit_details` AS `visit_details`\n      FROM `tourist_attractions` AS `LHS`\n      INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `visitors`\n      WHERE (`tourist_details` = 'Vincent')) AS RHS ON (LHS.tourist_id = RHS.tourist_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nJOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID\nWHERE T3.Tourist_Details = 'Vincent'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0008", "sql1": "\nSELECT `address`\nFROM `locations`\nWHERE (`location_name` = 'UK Gallery')\nORDER BY address\n", "sql2": "SELECT Address\nFROM LOCATIONS\nWHERE Location_Name = 'UK Gallery'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0042", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM visitors AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM visits AS RHS\n        WHERE (LHS.tourist_id = RHS.tourist_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Visitors\nWHERE Tourist_ID NOT IN\n    (SELECT Tourist_ID\n     FROM Visits)", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0003", "sql1": "\nSELECT location_name\nFROM locations\nORDER BY location_name\n", "sql2": "SELECT DISTINCT Location_Name\nFROM LOCATIONS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0039", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`location_name` AS `location_name`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN `locations` AS `RHS` ON (`LHS`.`location_id` = `RHS`.`location_id`))\nWHERE (`address` = '254 Ottilie Junction'\n       OR `how_to_get_there` = 'bus')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM Locations AS T1\nJOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID\nWHERE T1.Address = '254 Ottilie Junction'\n  OR T2.How_to_Get_There = 'bus'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0019", "sql1": "\nSELECT description AS royal_family_details,\n       how_to_get_there\nFROM\n  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,\n          LHS.attraction_type_code AS attraction_type_code,\n          LHS.location_id AS location_id,\n          LHS.how_to_get_there AS how_to_get_there,\n          LHS.name AS name,\n          LHS.description AS description,\n          LHS.opening_hours AS opening_hours,\n          LHS.other_details AS other_details,\n          RHS.royal_family_details AS royal_family_details\n   FROM tourist_attractions AS LHS\n   INNER JOIN royal_family AS RHS ON (LHS.tourist_attraction_id = RHS.royal_family_id))\nORDER BY royal_family_details\n", "sql2": "SELECT T1.Royal_Family_Details,\n       T2.How_to_Get_There\nFROM ROYAL_FAMILY AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0023", "sql1": "\nSELECT `visit_date`,\n       `visit_details`\nFROM\n  (SELECT `LHS`.`tourist_id` AS `tourist_id`,\n          `LHS`.`tourist_details` AS `tourist_details`,\n          `RHS`.`visit_id` AS `visit_id`,\n          `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `RHS`.`visit_date` AS `visit_date`,\n          `RHS`.`visit_details` AS `visit_details`\n   FROM `visitors` AS `LHS`\n   INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_id` = `RHS`.`tourist_id`))\nWHERE (`tourist_details` = 'Vincent')\nORDER BY visit_date\n", "sql2": "SELECT T2.Visit_Date,\n       T2.Visit_Details\nFROM VISITORS AS T1\nJOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID\nWHERE T1.Tourist_Details = 'Vincent'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0022", "sql1": "\nSELECT DISTINCT `market_details`\nFROM\n  (SELECT `LHS`.`market_id` AS `market_id`,\n          `LHS`.`market_details` AS `market_details`,\n          `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `RHS`.`attraction_type_code` AS `attraction_type_code`,\n          `RHS`.`location_id` AS `location_id`,\n          `RHS`.`how_to_get_there` AS `how_to_get_there`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`description` AS `description`,\n          `RHS`.`opening_hours` AS `opening_hours`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `street_markets` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `tourist_attractions`\n      WHERE (`how_to_get_there` != 'walk'\n             AND `how_to_get_there` = 'bus')) AS RHS)\nORDER BY market_details\n", "sql2": "SELECT T1.Market_Details\nFROM Street_Markets AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID\nWHERE T2.How_to_Get_There = 'walk'\n  OR T2.How_to_Get_There = 'bus'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0018", "sql1": "\nSELECT `name`,\n       `description`\nFROM\n  (SELECT *\n   FROM `photos` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `tourist_attractions`\n           WHERE (`name` != 'film festival')) AS RHS\n        WHERE (LHS.tourist_attraction_id = RHS.tourist_attraction_id) ))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T1.Description\nFROM PHOTOS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nWHERE T2.Name = 'film festival'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0038", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `LHS`.`feature_id` AS `feature_id`,\n          `RHS`.`feature_details` AS `feature_details`\n   FROM\n     (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n             `LHS`.`attraction_type_code` AS `attraction_type_code`,\n             `LHS`.`location_id` AS `location_id`,\n             `LHS`.`how_to_get_there` AS `how_to_get_there`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`description` AS `description`,\n             `LHS`.`opening_hours` AS `opening_hours`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`feature_id` AS `feature_id`\n      FROM `tourist_attractions` AS `LHS`\n      INNER JOIN `tourist_attraction_features` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `features`\n      WHERE (`feature_details` = 'park'\n             OR `feature_details` = 'shopping')) AS RHS ON (LHS.feature_id = RHS.feature_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id\nJOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID\nWHERE T3.feature_Details = 'park'\nUNION\nSELECT T1.Name\nFROM Tourist_Attractions AS T1\nJOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id\nJOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID\nWHERE T3.feature_Details = 'shopping'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0002", "sql1": "\nSELECT price_range\nFROM hotels\nORDER BY price_range\n", "sql2": "SELECT price_range\nFROM HOTELS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0014", "sql1": "\nSELECT `name`,\n       `description` AS `opening_hours`\nFROM `tourist_attractions`\nWHERE (`how_to_get_there` = 'bus'\n       OR `how_to_get_there` = 'walk')\nORDER BY name\n", "sql2": "SELECT Name,\n       Opening_Hours\nFROM TOURIST_ATTRACTIONS\nWHERE How_to_Get_There = 'bus'\n  OR How_to_Get_There = 'walk'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM hotels\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM HOTELS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0037", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`location_name` AS `location_name`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN `locations` AS `RHS` ON (`LHS`.`location_id` = `RHS`.`location_id`))\nWHERE (`address` = '660 Shea Crescent'\n       OR `how_to_get_there` = 'walk')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM Locations AS T1\nJOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID\nWHERE T1.Address = '660 Shea Crescent'\n  OR T2.How_to_Get_There = 'walk'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0021", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`staff_id` AS `staff_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `tourist_attractions` AS `LHS`\n   INNER JOIN `staff` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`))\nWHERE (`name` = 'US museum')\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM STAFF AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID\nWHERE T2.Name = 'US museum'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0020", "sql1": "\nSELECT `shop_details`\nFROM\n  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,\n          `LHS`.`attraction_type_code` AS `attraction_type_code`,\n          `LHS`.`location_id` AS `location_id`,\n          `LHS`.`how_to_get_there` AS `how_to_get_there`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`opening_hours` AS `opening_hours`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`shop_details` AS `shop_details`\n   FROM\n     (SELECT *\n      FROM `tourist_attractions`\n      WHERE (`how_to_get_there` = 'walk')) AS LHS\n   INNER JOIN shops AS RHS ON (LHS.tourist_attraction_id = RHS.shop_id))\nORDER BY shop_details\n", "sql2": "SELECT T1.Shop_Details\nFROM SHOPS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID\nWHERE T2.How_to_Get_There = 'walk'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0016", "sql1": "\nSELECT DISTINCT museum_details,\n                description AS opening_hours\nFROM\n  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,\n          LHS.attraction_type_code AS attraction_type_code,\n          LHS.location_id AS location_id,\n          LHS.how_to_get_there AS how_to_get_there,\n          LHS.name AS name,\n          LHS.description AS description,\n          LHS.opening_hours AS opening_hours,\n          LHS.other_details AS other_details,\n          RHS.museum_id AS museum_id,\n          RHS.museum_details AS museum_details\n   FROM tourist_attractions AS LHS\n   CROSS JOIN museums AS RHS)\nORDER BY museum_details\n", "sql2": "SELECT T1.Museum_Details,\n       T2.Opening_Hours\nFROM MUSEUMS AS T1\nJOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT name) OVER () AS count_distinct_name_\nFROM photos\nORDER BY count_distinct_name_\n", "sql2": "SELECT count(DISTINCT Name)\nFROM PHOTOS", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0006", "sql1": "\nSELECT price_range\nFROM hotels\nWHERE (star_rating_code = 5)\nORDER BY price_range\n", "sql2": "SELECT price_range\nFROM HOTELS\nWHERE star_rating_code = '5'", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Theme_park/0030", "sql1": "\nSELECT other_hotel_details,\n       star_rating_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM hotels\n      ORDER BY price_range)\n   LIMIT 3)\n", "sql2": "SELECT other_hotel_details,\n       star_rating_code\nFROM HOTELS\nORDER BY price_range ASC\nLIMIT 3", "schema": "spider/cre_Theme_park/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Theme_park/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0009", "sql1": "\nSELECT DISTINCT CLASS\nFROM race\nORDER BY CLASS\n", "sql2": "SELECT DISTINCT CLASS\nFROM race", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0012", "sql1": "\nSELECT CLASS\nFROM\n  (SELECT CLASS,\n          n,\n          MAX(n) OVER () AS maxn\n   FROM\n     (SELECT CLASS,\n             COUNT(*) AS n\n      FROM race\n      GROUP BY CLASS))\nWHERE (maxn = n)\nORDER BY CLASS\n", "sql2": "SELECT CLASS\nFROM race\nGROUP BY CLASS\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM race\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM race", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0003", "sql1": "\nSELECT name,\n       seating\nFROM track\nWHERE (year_opened >= 2000.0)\nORDER BY name\n", "sql2": "SELECT name,\n       seating\nFROM track\nWHERE year_opened > 2000\nORDER BY seating", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0002", "sql1": "\nSELECT name,\n       LOCATION\nFROM track\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION\nFROM track", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM track\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM track", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0007", "sql1": "\nSELECT LOCATION\nFROM track\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM track", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0011", "sql1": "\nSELECT CLASS,\n       n AS count___\nFROM\n  (SELECT CLASS,\n          COUNT(*) AS n\n   FROM race\n   GROUP BY CLASS)\nORDER BY CLASS\n", "sql2": "SELECT CLASS,\n       count(*)\nFROM race\nGROUP BY CLASS", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/race_track/0010", "sql1": "\nSELECT name,\n       CLASS, date\nFROM race\nORDER BY name\n", "sql2": "SELECT name,\n       CLASS , date\nFROM race", "schema": "spider/race_track/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0048", "sql1": "\nSELECT state\nFROM\n  (SELECT cname,\n          state,\n          enr,\n          MAX(enr) OVER () AS maxenr\n   FROM college)\nWHERE (maxenr > enr)\nORDER BY state\n", "sql2": "SELECT DISTINCT state\nFROM college\nWHERE enr <\n    (SELECT max(enr)\n     FROM college)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0009", "sql1": "\nSELECT n_distinct AS count_distinct_ppos_\nFROM\n  (SELECT COUNT(DISTINCT ppos) AS n_distinct\n   FROM tryout)\nORDER BY count_distinct_ppos_\n", "sql2": "SELECT count(DISTINCT pPos)\nFROM tryout", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0025", "sql1": "\nSELECT cname,\n       state,\n       enr AS min_enr_\nFROM\n  (SELECT cname,\n          state,\n          MIN(enr) AS enr\n   FROM college\n   GROUP BY cname,\n            state)\nORDER BY cname\n", "sql2": "SELECT cName,\n       state,\n       min(enr)\nFROM college\nGROUP BY state", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0033", "sql1": "\nSELECT `state`\nFROM\n  (SELECT `LHS`.`cname` AS `cname`,\n          `LHS`.`state` AS `state`,\n          `LHS`.`enr` AS `enr`,\n          `LHS`.`pid` AS `pid`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`pname` AS `pname`,\n          `RHS`.`ycard` AS `ycard`,\n          `RHS`.`hs` AS `hs`\n   FROM\n     (SELECT `LHS`.`cname` AS `cname`,\n             `LHS`.`state` AS `state`,\n             `LHS`.`enr` AS `enr`,\n             `RHS`.`pid` AS `pid`,\n             `RHS`.`ppos` AS `ppos`,\n             `RHS`.`decision` AS `decision`\n      FROM `college` AS `LHS`\n      INNER JOIN `tryout` AS `RHS` ON (`LHS`.`cname` = `RHS`.`cname`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `player`\n      WHERE (`pname` = 'Charles')) AS RHS ON (LHS.pid = RHS.pid))\nORDER BY state\n", "sql2": "SELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nJOIN player AS T3 ON T2.pID = T3.pID\nWHERE T3.pName = 'Charles'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0013", "sql1": "\nSELECT `enr` AS `avg_enr_`\nFROM `college`\nWHERE (`state` = 'FL')\nORDER BY avg_enr_\n", "sql2": "SELECT avg(enr)\nFROM College\nWHERE state = 'FL'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0005", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM college\n      WHERE (enr >= 15000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM College\nWHERE enr > 15000", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0052", "sql1": "\nSELECT n_distinct AS count_distinct_state_\nFROM\n  (SELECT COUNT(DISTINCT enr) AS n_distinct\n   FROM\n     (SELECT cname,\n             state,\n             enr,\n             cname_other,\n             state_other,\n             enr_other,\n             AVG(enr) OVER () AS meanenr\n      FROM\n        (SELECT *\n         FROM\n           (SELECT LHS.cname AS cname,\n                   LHS.state AS state,\n                   LHS.enr AS enr,\n                   RHS.cname AS cname_other,\n                   RHS.state AS state_other,\n                   RHS.enr AS enr_other\n            FROM college AS LHS\n            CROSS JOIN college AS RHS)\n         WHERE (state != state_other\n                AND enr > enr_other))))\nORDER BY count_distinct_state_\n", "sql2": "SELECT count(DISTINCT state)\nFROM college\nWHERE enr >\n    (SELECT avg(enr)\n     FROM college)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0029", "sql1": "\nSELECT pname\nFROM\n  (SELECT LHS.pid AS pid,\n          LHS.pname AS pname,\n          LHS.ycard AS ycard,\n          LHS.hs AS hs,\n          RHS.cname AS cname,\n          RHS.ppos AS ppos,\n          RHS.decision AS decision\n   FROM player AS LHS\n   INNER JOIN tryout AS RHS ON (LHS.pid = RHS.pid))\nORDER BY pname\n", "sql2": "SELECT T1.pName\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nORDER BY T1.pName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0028", "sql1": "\nSELECT `pname`,\n       `cname`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`pname` AS `pname`,\n          `RHS`.`ycard` AS `ycard`,\n          `RHS`.`hs` AS `hs`\n   FROM `tryout` AS `LHS`\n   INNER JOIN `player` AS `RHS` ON (`LHS`.`pid` = `RHS`.`pid`))\nWHERE (`decision` = 'yes')\nORDER BY pname\n", "sql2": "SELECT T1.pName,\n       T2.cName\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0053", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_state_\nFROM\n  (SELECT cname,\n          COUNT(DISTINCT state) AS n_distinct\n   FROM\n     (SELECT cname,\n             state,\n             enr,\n             AVG(enr) OVER () AS meanenr\n      FROM college)\n   GROUP BY cname)\nORDER BY count_distinct_state_\n", "sql2": "SELECT count(DISTINCT state)\nFROM college\nWHERE enr <\n    (SELECT avg(enr)\n     FROM college)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0004", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM player\n      WHERE (hs > 1000.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Player\nWHERE HS > 1000", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0045", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `tryout`\n         WHERE (`ppos` = 'mid'\n                OR `ppos` = 'goalie'))\n      ORDER BY cname DESC)\n   LIMIT 1)\n", "sql2": "SELECT cName\nFROM tryout\nWHERE pPos = 'mid'\nEXCEPT\nSELECT cName\nFROM tryout\nWHERE pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0032", "sql1": "\nSELECT `pname`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`pname` AS `pname`,\n          `LHS`.`ycard` AS `ycard`,\n          `LHS`.`hs` AS `hs`,\n          `RHS`.`cname` AS `cname`,\n          `RHS`.`ppos` AS `ppos`,\n          `RHS`.`decision` AS `decision`\n   FROM `player` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `tryout`\n      WHERE (`decision` = 'yes'\n             AND `ppos` = 'striker')) AS RHS ON (LHS.pid = RHS.pid))\nORDER BY pname\n", "sql2": "SELECT T1.pName\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T2.decision = 'yes'\n  AND T2.pPos = 'striker'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0024", "sql1": "\nSELECT cname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM college\n      ORDER BY enr DESC)\n   LIMIT 3)\n", "sql2": "SELECT cName\nFROM college\nORDER BY enr DESC\nLIMIT 3", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0008", "sql1": "\nSELECT n_distinct AS count_distinct_cname_\nFROM\n  (SELECT COUNT(DISTINCT cname) AS n_distinct\n   FROM tryout)\nORDER BY count_distinct_cname_\n", "sql2": "SELECT count(DISTINCT cName)\nFROM tryout", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0049", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM\n           (SELECT `cname`,\n                   `state`,\n                   `enr`,\n                   MIN(`enr`) OVER () AS `minenr`\n            FROM `college`)\n         WHERE (`state` != 'FL'\n                OR minenr = enr))\n      ORDER BY enr DESC)\n   LIMIT 1)\n", "sql2": "SELECT DISTINCT cName\nFROM college\nWHERE enr >\n    (SELECT min(enr)\n     FROM college\n     WHERE state = 'FL')", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0042", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `tryout`\n         WHERE (`ppos` = 'goalie'\n                OR `ppos` = 'mid'))\n      ORDER BY decision)\n   LIMIT 1)\n", "sql2": "SELECT cName\nFROM tryout\nWHERE pPos = 'goalie' INTERSECT\n  SELECT cName\n  FROM tryout WHERE pPos = 'mid'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM college\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM College", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0039", "sql1": "\nSELECT DISTINCT pname\nFROM\n  (SELECT LHS.pid AS pid,\n          LHS.pname AS pname,\n          LHS.ycard AS ycard,\n          LHS.hs AS hs,\n          LHS.cname AS cname,\n          LHS.ppos AS ppos,\n          LHS.decision AS decision,\n          RHS.state AS state,\n          RHS.enr AS enr\n   FROM\n     (SELECT LHS.pid AS pid,\n             LHS.pname AS pname,\n             LHS.ycard AS ycard,\n             LHS.hs AS hs,\n             RHS.cname AS cname,\n             RHS.ppos AS ppos,\n             RHS.decision AS decision\n      FROM player AS LHS\n      INNER JOIN tryout AS RHS ON (LHS.pid = RHS.pid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(cname) OVER () AS cname,\n                             state,\n                             enr\n      FROM college) AS RHS ON (LHS.cname = RHS.cname))\nORDER BY pname\n", "sql2": "SELECT T2.pName\nFROM tryout AS T1\nJOIN player AS T2 ON T1.pID = T2.pID\nWHERE T1.cName =\n    (SELECT cName\n     FROM college\n     ORDER BY enr DESC\n     LIMIT 1)", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0019", "sql1": "\nSELECT `pname`\nFROM `player`\nWHERE (`ycard` = 'yes')\nORDER BY pname\n", "sql2": "SELECT pName\nFROM Player\nWHERE yCard = 'yes'\nORDER BY HS DESC", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0023", "sql1": "\nSELECT hs AS min_t2_hs_,\n       ppos\nFROM\n  (SELECT ppos,\n          MIN(hs) AS hs\n   FROM\n     (SELECT LHS.pid AS pid,\n             LHS.pname AS pname,\n             LHS.ycard AS ycard,\n             LHS.hs AS hs,\n             RHS.cname AS cname,\n             RHS.ppos AS ppos,\n             RHS.decision AS decision\n      FROM player AS LHS\n      INNER JOIN tryout AS RHS ON (LHS.pid = RHS.pid))\n   GROUP BY ppos)\nORDER BY min_t2_hs_\n", "sql2": "SELECT min(T2.HS),\n       T1.pPos\nFROM tryout AS T1\nJOIN player AS T2 ON T1.pID = T2.pID\nGROUP BY T1.pPos", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0022", "sql1": "\nSELECT n AS count___,\n       cname\nFROM\n  (SELECT cname,\n          COUNT(*) AS n\n   FROM tryout\n   GROUP BY cname)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       cName\nFROM tryout\nGROUP BY cName\nORDER BY count(*) DESC", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0018", "sql1": "\nSELECT cname\nFROM college\nWHERE (enr > 18000.0)\nORDER BY cname\n", "sql2": "SELECT cName\nFROM College\nWHERE enr > 18000\nORDER BY cName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0038", "sql1": "\nSELECT `cname`\nFROM `tryout`\nWHERE (`decision` = 'yes'\n       AND `ppos` = 'goalie')\nORDER BY cname\n", "sql2": "SELECT cName\nFROM tryout\nWHERE decision = 'yes'\n  AND pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0002", "sql1": "\nSELECT DISTINCT AVG(enr) OVER () AS avg_enr_\nFROM college\nORDER BY avg_enr_\n", "sql2": "SELECT avg(enr)\nFROM College", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0014", "sql1": "\nSELECT pname\nFROM player\nWHERE (hs >= 500.0\n       AND hs < 1500.0)\nORDER BY pname\n", "sql2": "SELECT pName\nFROM Player\nWHERE HS BETWEEN 500 AND 1500", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0001", "sql1": "\nSELECT DISTINCT SUM(enr) OVER () AS sum_enr_\nFROM college\nORDER BY sum_enr_\n", "sql2": "SELECT sum(enr)\nFROM College", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0017", "sql1": "\nSELECT cname,\n       state,\n       enr\nFROM college\nORDER BY cname\n", "sql2": "SELECT *\nFROM College\nORDER BY enr", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0040", "sql1": "\nSELECT `state`,\n       `enr`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`enr` AS `enr`\n   FROM\n     (SELECT *\n      FROM `tryout`\n      WHERE (`decision` = 'yes')) AS LHS\n   INNER JOIN college AS RHS ON (LHS.cname = RHS.cname))\nORDER BY state\n", "sql2": "SELECT DISTINCT T1.state,\n                T1.enr\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0021", "sql1": "\nSELECT DISTINCT ppos\nFROM\n  (SELECT LHS.pid AS pid,\n          LHS.cname AS cname,\n          LHS.ppos AS ppos,\n          LHS.decision AS decision,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.pid AS pid,\n             LHS.cname AS cname,\n             LHS.ppos AS ppos,\n             LHS.decision AS decision,\n             RHS.n AS n\n      FROM tryout AS LHS\n      INNER JOIN\n        (SELECT pid,\n                COUNT(*) AS n\n         FROM tryout\n         GROUP BY pid) AS RHS ON (LHS.pid = RHS.pid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT pid,\n                COUNT(*) AS n\n         FROM tryout\n         GROUP BY pid)) AS RHS ON (LHS.n = RHS.n))\nORDER BY ppos\n", "sql2": "SELECT pPos\nFROM tryout\nGROUP BY pPos\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0020", "sql1": "\nSELECT DISTINCT cname\nFROM tryout\nORDER BY cname\n", "sql2": "SELECT DISTINCT cName\nFROM tryout\nORDER BY cName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0036", "sql1": "\nSELECT DISTINCT MAX(hs) OVER () AS max_t1_hs_,\n                             ppos\nFROM\n  (SELECT LHS.pid AS pid,\n          LHS.cname AS cname,\n          LHS.ppos AS ppos,\n          LHS.decision AS decision,\n          RHS.pname AS pname,\n          RHS.ycard AS ycard,\n          RHS.hs AS hs\n   FROM tryout AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM player\n      WHERE (hs >= 1000.0)) AS RHS ON (LHS.pid = RHS.pid))\nORDER BY max_t1_hs_\n", "sql2": "SELECT max(T1.HS),\n       pPos\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T1.HS > 1000\nGROUP BY T2.pPos", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0041", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT *\n   FROM `college`\n   WHERE (`enr` > 13000.0\n          OR `enr` < 15000.0))\nWHERE (`state` = 'AZ'\n       OR `state` = 'LA')\nORDER BY cname\n", "sql2": "SELECT cName\nFROM College\nWHERE enr < 13000\n  AND state = 'AZ'\nUNION\nSELECT cName\nFROM College\nWHERE enr > 15000\n  AND state = 'LA'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0016", "sql1": "\nSELECT `cname`,\n       `enr`\nFROM `college`\nWHERE (`state` = 'LA'\n       AND enr != 10000.0)\nORDER BY cname\n", "sql2": "SELECT cName,\n       enr\nFROM College\nWHERE enr > 10000\n  AND state = 'LA'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0031", "sql1": "\nSELECT `state`\nFROM\n  (SELECT *\n   FROM `college` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `tryout`\n           WHERE (`ppos` != 'striker')) AS RHS\n        WHERE (LHS.cname = RHS.cname) ))\nORDER BY state\n", "sql2": "SELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.pPos = 'striker'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0027", "sql1": "\nSELECT `state`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`enr` AS `enr`\n   FROM\n     (SELECT *\n      FROM `tryout`\n      WHERE (`decision` = 'yes')) AS LHS\n   INNER JOIN college AS RHS ON (LHS.cname = RHS.cname))\nORDER BY state\n", "sql2": "SELECT DISTINCT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0050", "sql1": "\nSELECT `cname`\nFROM\n  (SELECT `cname`,\n          `state`,\n          `enr`,\n          MAX(`enr`) OVER () AS `maxenr`\n   FROM `college`)\nWHERE (`state` != 'FL'\n       AND maxenr = enr)\nORDER BY cname\n", "sql2": "SELECT cName\nFROM college\nWHERE enr >\n    (SELECT max(enr)\n     FROM college\n     WHERE state = 'FL')", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0007", "sql1": "\nSELECT pname,\n       hs\nFROM player\nWHERE (hs < 1500.0)\nORDER BY pname\n", "sql2": "SELECT pName,\n       HS\nFROM Player\nWHERE HS < 1500", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0011", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `pid`,\n          `cname`,\n          `ppos`,\n          `decision`,\n          COUNT(DISTINCT `ppos`) OVER () AS `n_distinct`\n   FROM `tryout`)\nWHERE (`ppos` = 'goalie')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM tryout\nWHERE pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0046", "sql1": "\nSELECT `state`\nFROM\n  (SELECT *\n   FROM `college` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `tryout`\n           WHERE (`ppos` != 'mid'\n                  OR `ppos` = 'goalie')) AS RHS\n        WHERE (LHS.cname = RHS.cname) ))\nORDER BY state\n", "sql2": "SELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.pPos = 'mid'\nEXCEPT\nSELECT T1.state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName\nWHERE T2.pPos = 'goalie'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0010", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `decision`,\n          COUNT(*) AS `n`\n   FROM `tryout`\n   GROUP BY `decision`)\nWHERE (`decision` = 'yes')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM tryout\nWHERE decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0006", "sql1": "\nSELECT meanhs AS avg_hs_\nFROM\n  (SELECT AVG(hs) AS meanhs\n   FROM player)\nORDER BY avg_hs_\n", "sql2": "SELECT avg(HS)\nFROM Player", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0026", "sql1": "\nSELECT state\nFROM college\nORDER BY state\n", "sql2": "SELECT DISTINCT state\nFROM college AS T1\nJOIN tryout AS T2 ON T1.cName = T2.cName", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_2/0030", "sql1": "\nSELECT `pname`,\n       `hs`\nFROM\n  (SELECT `LHS`.`pid` AS `pid`,\n          `LHS`.`cname` AS `cname`,\n          `LHS`.`ppos` AS `ppos`,\n          `LHS`.`decision` AS `decision`,\n          `RHS`.`pname` AS `pname`,\n          `RHS`.`ycard` AS `ycard`,\n          `RHS`.`hs` AS `hs`\n   FROM `tryout` AS `LHS`\n   INNER JOIN `player` AS `RHS` ON (`LHS`.`pid` = `RHS`.`pid`))\nWHERE (`decision` = 'yes')\nORDER BY pname\n", "sql2": "SELECT T1.pName,\n       T1.HS\nFROM player AS T1\nJOIN tryout AS T2 ON T1.pID = T2.pID\nWHERE T2.decision = 'yes'", "schema": "spider/soccer_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/soccer_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0048", "sql1": "\nSELECT DISTINCT id,\n                name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.lat AS lat,\n          LHS.long AS long,\n          LHS.dock_count AS dock_count,\n          LHS.city AS city,\n          LHS.installation_date AS installation_date,\n          RHS.bikes_available AS bikes_available,\n          RHS.docks_available AS docks_available,\n          RHS.time AS TIME\n   FROM station AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM status\n      WHERE (bikes_available > 12)) AS RHS ON (LHS.id = RHS.station_id))\nORDER BY id\n", "sql2": "SELECT DISTINCT T1.id,\n                T1.name\nFROM station AS T1\nJOIN status AS T2 ON T1.id = T2.station_id\nWHERE T2.bikes_available > 12", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0009", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT bike_id) OVER () AS count_distinct_bike_id_\nFROM trip\nORDER BY count_distinct_bike_id_\n", "sql2": "SELECT count(DISTINCT bike_id)\nFROM trip", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0012", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.lat AS lat,\n          LHS.long AS long,\n          LHS.dock_count AS dock_count,\n          LHS.city AS city,\n          LHS.installation_date AS installation_date,\n          RHS.bikes_available AS bikes_available,\n          RHS.docks_available AS docks_available,\n          RHS.time AS TIME\n   FROM station AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM status\n      WHERE (bikes_available = 7)) AS RHS ON (LHS.id = RHS.station_id))\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name\nFROM station AS T1\nJOIN status AS T2 ON T1.id = T2.station_id\nWHERE T2.bikes_available = 7", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0003", "sql1": "\nSELECT city,\n       lat AS max_lat_\nFROM\n  (SELECT city,\n          MAX(lat) AS lat\n   FROM station\n   GROUP BY city)\nORDER BY city\n", "sql2": "SELECT city,\n       max(lat)\nFROM station\nGROUP BY city", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0035", "sql1": "\nSELECT city,\n       n AS count___\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM station\n   GROUP BY city)\nWHERE (n > 15)\nORDER BY city\n", "sql2": "SELECT city,\n       COUNT(*)\nFROM station\nGROUP BY city\nHAVING COUNT(*) >= 15", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0038", "sql1": "\nSELECT DISTINCT city\nFROM\n  (SELECT city,\n          lat,\n          MAX(lat) AS maxlat\n   FROM station\n   GROUP BY city,\n            lat)\nORDER BY city\n", "sql2": "SELECT city\nFROM station\nGROUP BY city\nORDER BY max(lat) DESC", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0002", "sql1": "\nSELECT `name`\nFROM `station`\nWHERE (`lat` < '37.5')\nORDER BY name\n", "sql2": "SELECT name\nFROM station\nWHERE lat < 37.5", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0043", "sql1": "\nSELECT DISTINCT start_station_name\nFROM trip\nWHERE (duration <= 100)\nORDER BY start_station_name\n", "sql2": "SELECT DISTINCT start_station_name\nFROM trip\nWHERE duration < 100", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0017", "sql1": "\nSELECT `station_id` AS `id`\nFROM\n  (SELECT `city`,\n          `station_id`,\n          AVG(`bikes_available`) AS `meanbikes_available`\n   FROM\n     (SELECT `id`,\n             `name`,\n             `lat`,\n             `long`,\n             `dock_count`,\n             `city`,\n             `installation_date`,\n             `bikes_available`,\n             `docks_available`,\n             `time`,\n             `id` AS `station_id`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`lat` AS `lat`,\n                `LHS`.`long` AS `long`,\n                `LHS`.`dock_count` AS `dock_count`,\n                `LHS`.`city` AS `city`,\n                `LHS`.`installation_date` AS `installation_date`,\n                `RHS`.`bikes_available` AS `bikes_available`,\n                `RHS`.`docks_available` AS `docks_available`,\n                `RHS`.`time` AS `time`\n         FROM `station` AS `LHS`\n         INNER JOIN `status` AS `RHS` ON (`LHS`.`id` = `RHS`.`station_id`)))\n   GROUP BY `city`,\n            `station_id`)\nWHERE (`city` = 'San Francisco'\n       AND meanbikes_available > 10.0)\nORDER BY id\n", "sql2": "SELECT id\nFROM station\nWHERE city = 'San Francisco' INTERSECT\n  SELECT station_id\n  FROM status\nGROUP BY station_id\nHAVING avg(bikes_available) > 10", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0036", "sql1": "\nSELECT start_station_id,\n       start_station_name\nFROM\n  (SELECT start_station_id,\n          start_station_name,\n          COUNT(*) AS n\n   FROM trip\n   GROUP BY start_station_id,\n            start_station_name)\nWHERE (n >= 200)\nORDER BY start_station_id\n", "sql2": "SELECT start_station_id,\n       start_station_name\nFROM trip\nGROUP BY start_station_name\nHAVING COUNT(*) >= 200", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0027", "sql1": "\nSELECT id_other AS id,\n       installation_date\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.lat AS lat,\n          LHS.long AS long,\n          LHS.dock_count AS dock_count,\n          LHS.city AS city,\n          LHS.installation_date AS installation_date,\n          RHS.id AS id_other,\n          RHS.duration AS duration,\n          RHS.start_date AS start_date,\n          RHS.start_station_name AS start_station_name,\n          RHS.start_station_id AS start_station_id,\n          RHS.end_date AS end_date,\n          RHS.end_station_name AS end_station_name,\n          RHS.bike_id AS bike_id,\n          RHS.subscription_type AS subscription_type,\n          RHS.zip_code AS zip_code\n   FROM station AS LHS\n   INNER JOIN trip AS RHS ON (LHS.id = RHS.end_station_id))\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T2.installation_date\nFROM trip AS T1\nJOIN station AS T2 ON T1.end_station_id = T2.id", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0050", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`lat` AS `lat`,\n          `LHS`.`long` AS `long`,\n          `LHS`.`dock_count` AS `dock_count`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`installation_date` AS `installation_date`,\n          `RHS`.`bike_id` AS `bike_id`,\n          `RHS`.`end_station_id` AS `end_station_id`,\n          `RHS`.`n` AS `n`\n   FROM `station` AS `LHS`\n   CROSS JOIN\n     (SELECT `bike_id`,\n             `end_station_id`,\n             COUNT(*) AS `n`\n      FROM `trip`\n      GROUP BY `bike_id`,\n               `end_station_id`) AS `RHS`)\nWHERE (`city` = 'Palo Alto'\n       OR n = 100)\nORDER BY name\n", "sql2": "SELECT name\nFROM station\nWHERE city = 'Palo Alto'\nEXCEPT\nSELECT end_station_name\nFROM trip\nGROUP BY end_station_name\nHAVING count(*) > 100", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0011", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `city`,\n          COUNT(*) AS `n`\n   FROM `station`\n   GROUP BY `city`)\nWHERE (`city` = 'Mountain View')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM station\nWHERE city = 'Mountain View'", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0046", "sql1": "\nSELECT `date`\nFROM `weather`\nWHERE (`mean_sea_level_pressure_inches` <= 31.0\n       AND `mean_sea_level_pressure_inches` >= '30.3')\nORDER BY date\n", "sql2": "SELECT date\nFROM weather\nWHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0047", "sql1": "\nSELECT date, cloud_cover AS max_temperature_f___min_temperature_f\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM weather\n      ORDER BY min_temperature_f DESC)\n   LIMIT 1)\n", "sql2": "SELECT date , max_temperature_f - min_temperature_f\nFROM weather\nORDER BY max_temperature_f - min_temperature_f\nLIMIT 1", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0010", "sql1": "\nSELECT n_distinct AS count_distinct_city_\nFROM\n  (SELECT COUNT(DISTINCT city) AS n_distinct\n   FROM station)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM station", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/bike_1/0006", "sql1": "\nSELECT id\nFROM\n  (SELECT LHS.id AS id,\n          LHS.duration AS duration,\n          LHS.start_date AS start_date,\n          LHS.start_station_name AS start_station_name,\n          LHS.start_station_id AS start_station_id,\n          LHS.end_date AS end_date,\n          LHS.end_station_name AS end_station_name,\n          LHS.end_station_id AS end_station_id,\n          LHS.bike_id AS bike_id,\n          LHS.subscription_type AS subscription_type,\n          LHS.zip_code AS zip_code\n   FROM trip AS LHS\n   INNER JOIN\n     (SELECT MIN(duration) AS duration\n      FROM trip) AS RHS ON (LHS.duration = RHS.duration))\nORDER BY id\n", "sql2": "SELECT id\nFROM trip\nORDER BY duration\nLIMIT 1", "schema": "spider/bike_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0009", "sql1": "\nSELECT POSITION\nFROM pilot\nWHERE (join_year < 2000\n       AND join_year < 2005)\nORDER BY POSITION\n", "sql2": "SELECT POSITION\nFROM pilot\nWHERE Join_Year < 2000 INTERSECT\n  SELECT POSITION\n  FROM pilot WHERE Join_Year > 2005", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0013", "sql1": "\nSELECT pilot_name,\n       n AS count___\nFROM\n  (SELECT pilot_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.pilot_id AS pilot_id,\n             LHS.pilot_name AS pilot_name,\n             LHS.rank AS rank,\n             LHS.age AS age,\n             LHS.nationality AS nationality,\n             LHS.position AS POSITION,\n             LHS.join_year AS join_year,\n             LHS.team AS team,\n             RHS.record_id AS record_id,\n             RHS.aircraft_id AS aircraft_id,\n             RHS.date AS date\n      FROM pilot AS LHS\n      INNER JOIN pilot_record AS RHS ON (LHS.pilot_id = RHS.pilot_id))\n   GROUP BY pilot_name)\nORDER BY pilot_name\n", "sql2": "SELECT T2.Pilot_name,\n       COUNT(*)\nFROM pilot_record AS T1\nJOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID\nGROUP BY T2.Pilot_name", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0005", "sql1": "\nSELECT `pilot_name`\nFROM `pilot`\nWHERE (`team` = 'Bradley'\n       OR `team` = 'Fordham')\nORDER BY pilot_name\n", "sql2": "SELECT Pilot_name\nFROM pilot\nWHERE Team = 'Bradley'\n  OR Team = 'Fordham'", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0004", "sql1": "\nSELECT DISTINCT POSITION\nFROM pilot\nWHERE (age > 30)\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT POSITION\nFROM pilot\nWHERE Age > 30", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0012", "sql1": "\nSELECT fleet_series\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.order_year AS order_year,\n          LHS.manufacturer AS manufacturer,\n          LHS.model AS model,\n          LHS.fleet_series AS fleet_series,\n          LHS.powertrain AS powertrain,\n          LHS.fuel_propulsion AS fuel_propulsion,\n          LHS.record_id AS record_id,\n          LHS.pilot_id AS pilot_id,\n          LHS.date AS date,\n          RHS.pilot_name AS pilot_name,\n          RHS.rank AS rank,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.position AS POSITION,\n          RHS.join_year AS join_year,\n          RHS.team AS team\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.order_year AS order_year,\n             LHS.manufacturer AS manufacturer,\n             LHS.model AS model,\n             LHS.fleet_series AS fleet_series,\n             LHS.powertrain AS powertrain,\n             LHS.fuel_propulsion AS fuel_propulsion,\n             RHS.record_id AS record_id,\n             RHS.pilot_id AS pilot_id,\n             RHS.date AS date\n      FROM aircraft AS LHS\n      INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM pilot\n      WHERE (age < 34)) AS RHS ON (LHS.pilot_id = RHS.pilot_id))\nORDER BY fleet_series\n", "sql2": "SELECT T2.Fleet_Series\nFROM pilot_record AS T1\nJOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID\nWHERE T3.Age < 34", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0008", "sql1": "\nSELECT nationality\nFROM\n  (SELECT LHS.pilot_id AS pilot_id,\n          LHS.pilot_name AS pilot_name,\n          LHS.rank AS rank,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.position AS POSITION,\n          LHS.join_year AS join_year,\n          LHS.team AS team\n   FROM pilot AS LHS\n   INNER JOIN\n     (SELECT POSITION,\n             MAX(n) AS n\n      FROM\n        (SELECT age,\n                POSITION,\n                COUNT(*) AS n\n         FROM pilot\n         GROUP BY age,\n                  POSITION)\n      GROUP BY POSITION) AS RHS ON (LHS.pilot_id = RHS.n\n                                    AND LHS.position = RHS.position))\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM pilot\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0015", "sql1": "\nSELECT pilot_name\nFROM\n  (SELECT *\n   FROM pilot AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM pilot_record AS RHS\n        WHERE (LHS.pilot_id = RHS.pilot_id) ))\nORDER BY pilot_name\n", "sql2": "SELECT Pilot_name\nFROM pilot\nWHERE Pilot_ID NOT IN\n    (SELECT Pilot_ID\n     FROM pilot_record)", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0003", "sql1": "\nSELECT POSITION,\n       team\nFROM pilot\nORDER BY POSITION\n", "sql2": "SELECT POSITION,\n       Team\nFROM pilot", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0002", "sql1": "\nSELECT pilot_name\nFROM pilot\nORDER BY pilot_name\n", "sql2": "SELECT Pilot_name\nFROM pilot\nORDER BY Rank ASC", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM pilot\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM pilot", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0007", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM pilot\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM pilot\nGROUP BY Nationality", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0011", "sql1": "\nSELECT pilot_name,\n       fleet_series\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.order_year AS order_year,\n          LHS.manufacturer AS manufacturer,\n          LHS.model AS model,\n          LHS.fleet_series AS fleet_series,\n          LHS.powertrain AS powertrain,\n          LHS.fuel_propulsion AS fuel_propulsion,\n          LHS.pilot_id AS pilot_id,\n          LHS.pilot_name AS pilot_name,\n          LHS.rank AS rank,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.position AS POSITION,\n          LHS.join_year AS join_year,\n          LHS.team AS team,\n          RHS.record_id AS record_id,\n          RHS.date AS date\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.order_year AS order_year,\n             LHS.manufacturer AS manufacturer,\n             LHS.model AS model,\n             LHS.fleet_series AS fleet_series,\n             LHS.powertrain AS powertrain,\n             LHS.fuel_propulsion AS fuel_propulsion,\n             RHS.pilot_id AS pilot_id,\n             RHS.pilot_name AS pilot_name,\n             RHS.rank AS rank,\n             RHS.age AS age,\n             RHS.nationality AS nationality,\n             RHS.position AS POSITION,\n             RHS.join_year AS join_year,\n             RHS.team AS team\n      FROM aircraft AS LHS\n      CROSS JOIN pilot AS RHS) AS LHS\n   INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id\n                                         AND LHS.pilot_id = RHS.pilot_id))\nORDER BY pilot_name\n", "sql2": "SELECT T3.Pilot_name,\n       T2.Fleet_Series\nFROM pilot_record AS T1\nJOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID\nORDER BY T3.Rank", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0010", "sql1": "\nSELECT pilot_name,\n       model\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.order_year AS order_year,\n          LHS.manufacturer AS manufacturer,\n          LHS.model AS model,\n          LHS.fleet_series AS fleet_series,\n          LHS.powertrain AS powertrain,\n          LHS.fuel_propulsion AS fuel_propulsion,\n          LHS.pilot_id AS pilot_id,\n          LHS.pilot_name AS pilot_name,\n          LHS.rank AS rank,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.position AS POSITION,\n          LHS.join_year AS join_year,\n          LHS.team AS team,\n          RHS.record_id AS record_id,\n          RHS.date AS date\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.order_year AS order_year,\n             LHS.manufacturer AS manufacturer,\n             LHS.model AS model,\n             LHS.fleet_series AS fleet_series,\n             LHS.powertrain AS powertrain,\n             LHS.fuel_propulsion AS fuel_propulsion,\n             RHS.pilot_id AS pilot_id,\n             RHS.pilot_name AS pilot_name,\n             RHS.rank AS rank,\n             RHS.age AS age,\n             RHS.nationality AS nationality,\n             RHS.position AS POSITION,\n             RHS.join_year AS join_year,\n             RHS.team AS team\n      FROM aircraft AS LHS\n      CROSS JOIN pilot AS RHS) AS LHS\n   INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id\n                                         AND LHS.pilot_id = RHS.pilot_id))\nORDER BY pilot_name\n", "sql2": "SELECT T3.Pilot_name,\n       T2.Model\nFROM pilot_record AS T1\nJOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/pilot_record/0006", "sql1": "\nSELECT join_year\nFROM\n  (SELECT LHS.pilot_id AS pilot_id,\n          LHS.pilot_name AS pilot_name,\n          LHS.rank AS rank,\n          LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.position AS POSITION,\n          LHS.join_year AS join_year,\n          LHS.team AS team,\n          RHS.pilot_id AS pilot_id_other,\n          RHS.pilot_name AS pilot_name_other,\n          RHS.age AS age_other,\n          RHS.nationality AS nationality_other,\n          RHS.position AS position_other,\n          RHS.team AS team_other\n   FROM pilot AS LHS\n   INNER JOIN\n     (SELECT pilot_id,\n             pilot_name,\n             MIN(rank) OVER () AS rank,\n                            age,\n                            nationality,\n                            POSITION,\n                            join_year,\n                            team\n      FROM pilot) AS RHS ON (LHS.join_year = RHS.join_year\n                                AND LHS.rank = RHS.rank))\nORDER BY join_year\n", "sql2": "SELECT Join_Year\nFROM pilot\nORDER BY Rank ASC\nLIMIT 1", "schema": "spider/pilot_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0009", "sql1": "\nSELECT customer_id\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM accounts AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_id\n", "sql2": "SELECT customer_id\nFROM Customers\nEXCEPT\nSELECT customer_id\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0025", "sql1": "\nSELECT DISTINCT product_size\nFROM products\nORDER BY product_size\n", "sql2": "SELECT DISTINCT product_size\nFROM Products", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0005", "sql1": "\nSELECT `account_name`,\n       `other_account_details`\nFROM\n  (SELECT *\n   FROM `accounts` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`customer_first_name` != 'Meaghan'\n                  OR `customer_last_name` != 'Keeling')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY account_name\n", "sql2": "SELECT T1.account_name,\n       T1.other_account_details\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.customer_first_name = 'Meaghan'\n  AND T2.customer_last_name = 'Keeling'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0029", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM invoices\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Invoices", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0004", "sql1": "\nSELECT `account_id`,\n       `date_account_opened`,\n       `account_name`,\n       `other_account_details`\nFROM\n  (SELECT `LHS`.`account_id` AS `account_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`date_account_opened` AS `date_account_opened`,\n          `LHS`.`account_name` AS `account_name`,\n          `LHS`.`other_account_details` AS `other_account_details`,\n          `RHS`.`customer_first_name` AS `customer_first_name`,\n          `RHS`.`customer_middle_initial` AS `customer_middle_initial`,\n          `RHS`.`customer_last_name` AS `customer_last_name`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`login_password` AS `login_password`,\n          `RHS`.`phone_number` AS `phone_number`,\n          `RHS`.`town_city` AS `town_city`,\n          `RHS`.`state_county_province` AS `state_county_province`,\n          `RHS`.`country` AS `country`\n   FROM `accounts` AS `LHS`\n   LEFT JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_first_name` = 'Meaghan')\nORDER BY account_id\n", "sql2": "SELECT T1.account_id,\n       T1.date_account_opened,\n       T1.account_name,\n       T1.other_account_details\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.customer_first_name = 'Meaghan'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0012", "sql1": "\nSELECT customer_id,\n       customer_first_name,\n       customer_last_name,\n       n AS count___\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.n AS n,\n          RHS.customer_first_name AS customer_first_name,\n          RHS.customer_middle_initial AS customer_middle_initial,\n          RHS.customer_last_name AS customer_last_name,\n          RHS.gender AS gender,\n          RHS.email_address AS email_address,\n          RHS.login_name AS login_name,\n          RHS.login_password AS login_password,\n          RHS.phone_number AS phone_number,\n          RHS.town_city AS town_city,\n          RHS.state_county_province AS state_county_province,\n          RHS.country AS country\n   FROM\n     (SELECT customer_id,\n             COUNT(*) AS n\n      FROM accounts\n      GROUP BY customer_id) AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_id\n", "sql2": "SELECT T1.customer_id,\n       T2.customer_first_name,\n       T2.customer_last_name,\n       count(*)\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0024", "sql1": "\nSELECT account_id,\n       account_name\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.customer_id AS customer_id,\n          LHS.date_account_opened AS date_account_opened,\n          LHS.account_name AS account_name,\n          LHS.other_account_details AS other_account_details,\n          RHS.n AS n\n   FROM accounts AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT account_id,\n                COUNT(*) AS n\n         FROM financial_transactions\n         GROUP BY account_id)\n      WHERE (n = 4)) AS RHS ON (LHS.account_id = RHS.account_id))\nORDER BY account_id\n", "sql2": "SELECT T1.account_id,\n       T2.account_name\nFROM Financial_transactions AS T1\nJOIN Accounts AS T2 ON T1.account_id = T2.account_id\nGROUP BY T1.account_id\nHAVING count(*) >= 4", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0008", "sql1": "\nSELECT DISTINCT customer_first_name,\n                customer_last_name,\n                phone_number\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_first_name AS customer_first_name,\n          LHS.customer_middle_initial AS customer_middle_initial,\n          LHS.customer_last_name AS customer_last_name,\n          LHS.gender AS gender,\n          LHS.email_address AS email_address,\n          LHS.login_name AS login_name,\n          LHS.login_password AS login_password,\n          LHS.phone_number AS phone_number,\n          LHS.town_city AS town_city,\n          LHS.state_county_province AS state_county_province,\n          LHS.country AS country,\n          RHS.account_id AS account_id,\n          RHS.date_account_opened AS date_account_opened,\n          RHS.account_name AS account_name,\n          RHS.other_account_details AS other_account_details\n   FROM customers AS LHS\n   INNER JOIN accounts AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_first_name\n", "sql2": "SELECT DISTINCT T1.customer_first_name,\n                T1.customer_last_name,\n                T1.phone_number\nFROM Customers AS T1\nJOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0015", "sql1": "\nSELECT gender,\n       n AS count___\nFROM\n  (SELECT gender,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY gender)\nORDER BY gender\n", "sql2": "SELECT gender,\n       count(*)\nFROM Customers\nGROUP BY gender", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0003", "sql1": "\nSELECT account_id,\n       date_account_opened,\n       account_name,\n       other_account_details\nFROM accounts\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       date_account_opened,\n       account_name,\n       other_account_details\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0039", "sql1": "\nSELECT order_id,\n       n_distinct AS count_distinct_product_id_\nFROM\n  (SELECT order_id,\n          other_order_item_details,\n          COUNT(DISTINCT product_id) AS n_distinct\n   FROM order_items\n   GROUP BY order_id,\n            other_order_item_details)\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       count(DISTINCT product_id)\nFROM Order_items\nGROUP BY order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0023", "sql1": "\nSELECT n AS account_id\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT invoice_number,\n             MAX(n) AS maxn\n      FROM\n        (SELECT invoice_number,\n                transaction_type,\n                COUNT(*) AS n\n         FROM financial_transactions\n         GROUP BY invoice_number,\n                  transaction_type)\n      GROUP BY invoice_number))\nORDER BY account_id\n", "sql2": "SELECT account_id\nFROM Financial_transactions\nGROUP BY account_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0034", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM products AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM order_items AS RHS\n        WHERE (LHS.product_id = RHS.product_id) ))\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM Products\nEXCEPT\nSELECT T1.product_name\nFROM Products AS T1\nJOIN Order_items AS T2 ON T1.product_id = T2.product_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0022", "sql1": "\nSELECT account_name,\n       account_id,\n       n AS count___\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.n AS n,\n          RHS.customer_id AS customer_id,\n          RHS.date_account_opened AS date_account_opened,\n          RHS.account_name AS account_name,\n          RHS.other_account_details AS other_account_details\n   FROM\n     (SELECT account_id,\n             COUNT(*) AS n\n      FROM financial_transactions\n      GROUP BY account_id) AS LHS\n   INNER JOIN accounts AS RHS ON (LHS.account_id = RHS.account_id))\nORDER BY account_name\n", "sql2": "SELECT T2.account_name,\n       T1.account_id,\n       count(*)\nFROM Financial_transactions AS T1\nJOIN Accounts AS T2 ON T1.account_id = T2.account_id\nGROUP BY T1.account_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0018", "sql1": "\nSELECT account_id AS count___\nFROM\n  (SELECT transaction_id,\n          account_id,\n          invoice_number,\n          transaction_type,\n          transaction_date,\n          transaction_amount,\n          transaction_comment,\n          other_transaction_details,\n          customer_id,\n          date_account_opened,\n          account_name,\n          other_account_details,\n          transaction_id AS n_distinct\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.account_id AS account_id,\n             LHS.invoice_number AS invoice_number,\n             LHS.transaction_type AS transaction_type,\n             LHS.transaction_date AS transaction_date,\n             LHS.transaction_amount AS transaction_amount,\n             LHS.transaction_comment AS transaction_comment,\n             LHS.other_transaction_details AS other_transaction_details,\n             RHS.customer_id AS customer_id,\n             RHS.date_account_opened AS date_account_opened,\n             RHS.account_name AS account_name,\n             RHS.other_account_details AS other_account_details\n      FROM financial_transactions AS LHS\n      INNER JOIN\n        (SELECT account_id,\n                customer_id,\n                date_account_opened,\n                account_name,\n                other_account_details,\n                COUNT(DISTINCT account_name) OVER () AS n_distinct\n         FROM accounts) AS RHS ON (LHS.account_id = RHS.account_id\n                                      AND LHS.transaction_id = RHS.n_distinct)))\nWHERE (account_name != 337\n       OR n_distinct < 337)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Financial_transactions AS T1\nJOIN Accounts AS T2 ON T1.account_id = T2.account_id\nWHERE T2.account_name = '337'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0038", "sql1": "\nSELECT DISTINCT product_name,\n                n AS count___\nFROM\n  (SELECT LHS.order_id AS order_id,\n          LHS.customer_id AS customer_id,\n          LHS.date_order_placed AS date_order_placed,\n          LHS.order_details AS order_details,\n          LHS.product_id AS product_id,\n          LHS.parent_product_id AS parent_product_id,\n          LHS.production_type_code AS production_type_code,\n          LHS.unit_price AS unit_price,\n          LHS.product_name AS product_name,\n          LHS.product_color AS product_color,\n          LHS.product_size AS product_size,\n          RHS.other_order_item_details AS other_order_item_details,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.date_order_placed AS date_order_placed,\n             LHS.order_details AS order_details,\n             RHS.product_id AS product_id,\n             RHS.parent_product_id AS parent_product_id,\n             RHS.production_type_code AS production_type_code,\n             RHS.unit_price AS unit_price,\n             RHS.product_name AS product_name,\n             RHS.product_color AS product_color,\n             RHS.product_size AS product_size\n      FROM orders AS LHS\n      CROSS JOIN products AS RHS) AS LHS\n   INNER JOIN\n     (SELECT other_order_item_details,\n             product_id,\n             COUNT(*) AS n\n      FROM order_items\n      GROUP BY other_order_item_details,\n               product_id) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY product_name\n", "sql2": "SELECT T2.product_name,\n       count(*)\nFROM Order_items AS T1\nJOIN Products AS T2 ON T1.product_id = T2.product_id\nJOIN Orders AS T3 ON T3.order_id = T1.order_id\nGROUP BY T2.product_name", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0002", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT customer_id) OVER () AS count_distinct_customer_id_\nFROM accounts\nORDER BY count_distinct_customer_id_\n", "sql2": "SELECT count(DISTINCT customer_id)\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0014", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0037", "sql1": "\nSELECT product_id,\n       n_distinct AS count_distinct_order_id_\nFROM\n  (SELECT other_order_item_details,\n          product_id,\n          COUNT(DISTINCT order_id) AS n_distinct\n   FROM order_items\n   GROUP BY other_order_item_details,\n            product_id)\nORDER BY product_id\n", "sql2": "SELECT product_id,\n       count(DISTINCT order_id)\nFROM Order_items\nGROUP BY product_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0021", "sql1": "\nSELECT transaction_type,\n       sumtransaction_amount AS sum_transaction_amount_\nFROM\n  (SELECT other_transaction_details,\n          transaction_type,\n          SUM(transaction_amount) AS sumtransaction_amount\n   FROM financial_transactions\n   GROUP BY other_transaction_details,\n            transaction_type)\nORDER BY transaction_type\n", "sql2": "SELECT transaction_type,\n       sum(transaction_amount)\nFROM Financial_transactions\nGROUP BY transaction_type", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0036", "sql1": "\nSELECT order_id,\n       n AS count___\nFROM\n  (SELECT order_id,\n          COUNT(*) AS n\n   FROM order_items\n   GROUP BY order_id)\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       count(*)\nFROM Order_items\nGROUP BY order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM financial_transactions\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Financial_transactions", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0031", "sql1": "\nSELECT order_id,\n       n AS count___\nFROM\n  (SELECT order_id,\n          COUNT(*) AS n\n   FROM invoices\n   GROUP BY order_id)\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       count(*)\nFROM Invoices\nGROUP BY order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0027", "sql1": "\nSELECT invoice_number,\n       n AS count___\nFROM\n  (SELECT invoice_number,\n          transaction_comment,\n          COUNT(*) AS n\n   FROM financial_transactions\n   GROUP BY invoice_number,\n            transaction_comment)\nORDER BY invoice_number\n", "sql2": "SELECT invoice_number,\n       count(*)\nFROM Financial_transactions\nGROUP BY invoice_number", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0010", "sql1": "\nSELECT n AS count___,\n       customer_id\nFROM\n  (SELECT customer_id,\n          COUNT(*) AS n\n   FROM accounts\n   GROUP BY customer_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       customer_id\nFROM Accounts\nGROUP BY customer_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0006", "sql1": "\nSELECT customer_first_name,\n       customer_last_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_first_name AS customer_first_name,\n          LHS.customer_middle_initial AS customer_middle_initial,\n          LHS.customer_last_name AS customer_last_name,\n          LHS.gender AS gender,\n          LHS.email_address AS email_address,\n          LHS.login_name AS login_name,\n          LHS.login_password AS login_password,\n          LHS.phone_number AS phone_number,\n          LHS.town_city AS town_city,\n          LHS.state_county_province AS state_county_province,\n          LHS.country AS country,\n          RHS.account_id AS account_id,\n          RHS.date_account_opened AS date_account_opened,\n          RHS.account_name AS account_name,\n          RHS.other_account_details AS other_account_details\n   FROM customers AS LHS\n   LEFT JOIN accounts AS RHS ON (LHS.customer_id = RHS.customer_id))\nWHERE (account_name = 900)\nORDER BY customer_first_name\n", "sql2": "SELECT T2.customer_first_name,\n       T2.customer_last_name\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.account_name = '900'", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0026", "sql1": "\nSELECT DISTINCT product_color\nFROM products\nORDER BY product_color\n", "sql2": "SELECT DISTINCT product_color\nFROM Products", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_invoices/0030", "sql1": "\nSELECT invoice_date,\n       order_id,\n       order_details\nFROM\n  (SELECT LHS.invoice_number AS invoice_number,\n          LHS.order_id AS order_id,\n          LHS.invoice_date AS invoice_date,\n          RHS.customer_id AS customer_id,\n          RHS.date_order_placed AS date_order_placed,\n          RHS.order_details AS order_details\n   FROM invoices AS LHS\n   LEFT JOIN orders AS RHS ON (LHS.order_id = RHS.order_id))\nORDER BY invoice_date\n", "sql2": "SELECT T1.invoice_date,\n       T1.order_id,\n       T2.order_details\nFROM Invoices AS T1\nJOIN Orders AS T2 ON T1.order_id = T2.order_id", "schema": "spider/customers_and_invoices/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_invoices/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0009", "sql1": "\nSELECT creation\nFROM\n  (SELECT department_id,\n          name,\n          creation,\n          ranking,\n          budget_in_billions,\n          num_employees,\n          name_other,\n          department_id AS n\n   FROM\n     (SELECT LHS.department_id AS department_id,\n             LHS.name AS name,\n             LHS.creation AS creation,\n             LHS.ranking AS ranking,\n             LHS.budget_in_billions AS budget_in_billions,\n             LHS.num_employees AS num_employees,\n             RHS.name AS name_other\n      FROM department AS LHS\n      INNER JOIN\n        (SELECT name,\n                num_employees,\n                COUNT(*) AS n\n         FROM department\n         GROUP BY name,\n                  num_employees) AS RHS ON (LHS.department_id = RHS.n\n                                            AND LHS.num_employees = RHS.num_employees)))\nORDER BY creation\n", "sql2": "SELECT creation\nFROM department\nGROUP BY creation\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0013", "sql1": "\nSELECT `age`\nFROM\n  (SELECT `LHS`.`head_id` AS `head_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`born_state` AS `born_state`,\n          `LHS`.`age` AS `age`,\n          `RHS`.`department_id` AS `department_id`,\n          `RHS`.`temporary_acting` AS `temporary_acting`\n   FROM `head` AS `LHS`\n   INNER JOIN `management` AS `RHS` ON (`LHS`.`head_id` = `RHS`.`head_id`))\nWHERE (`temporary_acting` = 'Yes')\nORDER BY age\n", "sql2": "SELECT DISTINCT T1.age\nFROM management AS T2\nJOIN head AS T1 ON T1.head_id = T2.head_id\nWHERE T2.temporary_acting = 'Yes'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0008", "sql1": "\nSELECT born_state\nFROM\n  (SELECT born_state,\n          COUNT(*) AS n\n   FROM head\n   GROUP BY born_state)\nWHERE (n >= 3)\nORDER BY born_state\n", "sql2": "SELECT born_state\nFROM head\nGROUP BY born_state\nHAVING count(*) >= 3", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0003", "sql1": "\nSELECT creation,\n       name,\n       budget_in_billions\nFROM department\nORDER BY creation\n", "sql2": "SELECT creation,\n       name,\n       budget_in_billions\nFROM department", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0002", "sql1": "\nSELECT name,\n       born_state,\n       age\nFROM head\nORDER BY name\n", "sql2": "SELECT name,\n       born_state,\n       age\nFROM head\nORDER BY age", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0014", "sql1": "\nSELECT `born_state`\nFROM\n  (SELECT `LHS`.`department_id` AS `department_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`creation` AS `creation`,\n          `LHS`.`ranking` AS `ranking`,\n          `LHS`.`budget_in_billions` AS `budget_in_billions`,\n          `LHS`.`num_employees` AS `num_employees`,\n          `LHS`.`head_id` AS `head_id`,\n          `LHS`.`temporary_acting` AS `temporary_acting`,\n          `RHS`.`name_other` AS `name_other`,\n          `RHS`.`born_state` AS `born_state`,\n          `RHS`.`age` AS `age`\n   FROM\n     (SELECT `LHS`.`department_id` AS `department_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`creation` AS `creation`,\n             `LHS`.`ranking` AS `ranking`,\n             `LHS`.`budget_in_billions` AS `budget_in_billions`,\n             `LHS`.`num_employees` AS `num_employees`,\n             `RHS`.`head_id` AS `head_id`,\n             `RHS`.`temporary_acting` AS `temporary_acting`\n      FROM `department` AS `LHS`\n      INNER JOIN `management` AS `RHS` ON (`LHS`.`department_id` = `RHS`.`department_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`department_id` AS `department_id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`creation` AS `creation`,\n                `LHS`.`ranking` AS `ranking`,\n                `LHS`.`budget_in_billions` AS `budget_in_billions`,\n                `LHS`.`num_employees` AS `num_employees`,\n                `RHS`.`head_id` AS `head_id`,\n                `RHS`.`name` AS `name_other`,\n                `RHS`.`born_state` AS `born_state`,\n                `RHS`.`age` AS `age`\n         FROM\n           (SELECT *\n            FROM `department`\n            WHERE (`name` != 'Treasury'\n                   AND `name` = 'Homeland Security')) AS LHS\n         CROSS JOIN head AS RHS)\n      WHERE (name != name_other)) AS RHS ON (LHS.department_id = RHS.department_id\n                                             AND LHS.name = RHS.name\n                                             AND LHS.creation = RHS.creation\n                                             AND LHS.ranking = RHS.ranking\n                                             AND LHS.budget_in_billions = RHS.budget_in_billions\n                                             AND LHS.num_employees = RHS.num_employees\n                                             AND LHS.head_id = RHS.head_id))\nORDER BY born_state\n", "sql2": "SELECT T3.born_state\nFROM department AS T1\nJOIN management AS T2 ON T1.department_id = T2.department_id\nJOIN head AS T3 ON T2.head_id = T3.head_id\nWHERE T1.name = 'Treasury' INTERSECT\n  SELECT T3.born_state\n  FROM department AS T1\n  JOIN management AS T2 ON T1.department_id = T2.department_id\n  JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0001", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT age) AS n_distinct\n   FROM\n     (SELECT *\n      FROM head\n      WHERE (age <= 56.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM head\nWHERE age > 56", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0007", "sql1": "\nSELECT `creation`\nFROM\n  (SELECT `LHS`.`department_id` AS `department_id`,\n          `LHS`.`head_id` AS `head_id`,\n          `LHS`.`temporary_acting` AS `temporary_acting`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`creation` AS `creation`,\n          `RHS`.`ranking` AS `ranking`,\n          `RHS`.`budget_in_billions` AS `budget_in_billions`,\n          `RHS`.`num_employees` AS `num_employees`\n   FROM\n     (SELECT *\n      FROM `management` AS `LHS`\n      WHERE EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM `head`\n              WHERE (`born_state` = 'Alabama')) AS RHS\n           WHERE (LHS.head_id = RHS.head_id) )) AS LHS\n   LEFT JOIN department AS RHS ON (LHS.department_id = RHS.department_id))\nORDER BY creation\n", "sql2": "SELECT DISTINCT T1.creation\nFROM department AS T1\nJOIN management AS T2 ON T1.department_id = T2.department_id\nJOIN head AS T3 ON T2.head_id = T3.head_id\nWHERE T3.born_state = 'Alabama'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT temporary_acting) OVER () AS count_distinct_temporary_acting_\nFROM management\nORDER BY count_distinct_temporary_acting_\n", "sql2": "SELECT count(DISTINCT temporary_acting)\nFROM management", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0010", "sql1": "\nSELECT `name`,\n       `num_employees`\nFROM\n  (SELECT `LHS`.`department_id` AS `department_id`,\n          `LHS`.`head_id` AS `head_id`,\n          `LHS`.`temporary_acting` AS `temporary_acting`,\n          `RHS`.`department_id` AS `department_id_other`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`creation` AS `creation`,\n          `RHS`.`budget_in_billions` AS `budget_in_billions`,\n          `RHS`.`num_employees` AS `num_employees`\n   FROM\n     (SELECT *\n      FROM `management`\n      WHERE (`temporary_acting` = 'Yes')) AS LHS\n   INNER JOIN department AS RHS ON (LHS.department_id = RHS.ranking))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.num_employees\nFROM department AS T1\nJOIN management AS T2 ON T1.department_id = T2.department_id\nWHERE T2.temporary_acting = 'Yes'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_management/0006", "sql1": "\nSELECT `name`\nFROM `head`\nWHERE (`born_state` != 'California')\nORDER BY name\n", "sql2": "SELECT name\nFROM head\nWHERE born_state != 'California'", "schema": "spider/department_management/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0009", "sql1": "\nSELECT DISTINCT nationality\nFROM journalist\nWHERE (years_working > 10\n       OR years_working < 3)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM journalist\nWHERE Years_working > 10 INTERSECT\n  SELECT Nationality\n  FROM journalist WHERE Years_working < 3", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0005", "sql1": "\nSELECT meanyears_working AS avg_years_working_\nFROM\n  (SELECT AVG(years_working) AS meanyears_working\n   FROM journalist)\nORDER BY avg_years_working_\n", "sql2": "SELECT avg(Years_working)\nFROM journalist", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0004", "sql1": "\nSELECT `name`\nFROM `journalist`\nWHERE (`nationality` = 'England'\n       OR `nationality` = 'Wales')\nORDER BY name\n", "sql2": "SELECT Name\nFROM journalist\nWHERE Nationality = 'England'\n  OR Nationality = 'Wales'", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0008", "sql1": "\nSELECT DISTINCT nationality_other AS nationality\nFROM\n  (SELECT LHS.age AS age,\n          LHS.nationality AS nationality,\n          LHS.maxn AS maxn,\n          RHS.age AS age_other,\n          RHS.nationality AS nationality_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT age,\n             nationality,\n             MAX(n) AS maxn\n      FROM\n        (SELECT age,\n                nationality,\n                COUNT(*) AS n\n         FROM journalist\n         GROUP BY age,\n                  nationality)\n      GROUP BY age,\n               nationality) AS LHS\n   CROSS JOIN\n     (SELECT age,\n             nationality,\n             MAX(n) AS maxn\n      FROM\n        (SELECT age,\n                nationality,\n                COUNT(*) AS n\n         FROM journalist\n         GROUP BY age,\n                  nationality)\n      GROUP BY age,\n               nationality) AS RHS)\nWHERE (maxn < maxn_other)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM journalist\nGROUP BY Nationality\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM journalist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM news_report AS RHS\n        WHERE (LHS.journalist_id = RHS.journalist_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM journalist\nWHERE journalist_ID NOT IN\n    (SELECT journalist_ID\n     FROM news_report)", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0003", "sql1": "\nSELECT nationality,\n       age\nFROM journalist\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       Age\nFROM journalist", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0018", "sql1": "\nSELECT venue,\n       name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM event\n      ORDER BY event_attendance DESC)\n   LIMIT 2)\n", "sql2": "SELECT venue,\n       name\nFROM event\nORDER BY Event_Attendance DESC\nLIMIT 2", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0002", "sql1": "\nSELECT name\nFROM journalist\nORDER BY name\n", "sql2": "SELECT Name\nFROM journalist\nORDER BY Years_working ASC", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM journalist\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM journalist", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0016", "sql1": "\nSELECT DISTINCT AVG(event_attendance) OVER () AS avg_event_attendance_,\n                                           maxevent_attendance AS max_event_attendance_\nFROM\n  (SELECT event_id, date, venue,\n                          name,\n                          event_attendance,\n                          MAX(event_attendance) OVER () AS maxevent_attendance\n   FROM event)\nORDER BY avg_event_attendance_\n", "sql2": "SELECT avg(Event_Attendance),\n       max(Event_Attendance)\nFROM event", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0007", "sql1": "\nSELECT nationality,\n       n AS count___\nFROM\n  (SELECT nationality,\n          COUNT(*) AS n\n   FROM journalist\n   GROUP BY nationality)\nORDER BY nationality\n", "sql2": "SELECT Nationality,\n       COUNT(*)\nFROM journalist\nGROUP BY Nationality", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0010", "sql1": "\nSELECT date, name,\n             venue\nFROM event\nORDER BY date\n", "sql2": "SELECT Date , Name,\n              venue\nFROM event\nORDER BY Event_Attendance DESC", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/news_report/0006", "sql1": "\nSELECT DISTINCT nationality_other AS nationality\nFROM\n  (SELECT LHS.journalist_id AS journalist_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          LHS.years_working AS years_working,\n          RHS.journalist_id AS journalist_id_other,\n          RHS.name AS name_other,\n          RHS.nationality AS nationality_other,\n          RHS.age AS age_other,\n          RHS.years_working AS years_working_other\n   FROM\n     (SELECT journalist_id,\n             name,\n             nationality,\n             age,\n             MAX(years_working) OVER () AS years_working\n      FROM journalist) AS LHS\n   CROSS JOIN journalist AS RHS)\nWHERE (years_working <= years_working_other)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM journalist\nORDER BY Years_working DESC\nLIMIT 1", "schema": "spider/news_report/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0025", "sql1": "\nSELECT g_name,\n       rating\nFROM genre\nORDER BY g_name\n", "sql2": "SELECT g_name,\n       rating\nFROM genre\nORDER BY g_name", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0013", "sql1": "\nSELECT DISTINCT `artist_name`\nFROM\n  (SELECT `LHS`.`song_name` AS `song_name`,\n          `LHS`.`artist_name` AS `artist_name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`f_id` AS `f_id`,\n          `LHS`.`genre_is` AS `genre_is`,\n          `LHS`.`rating` AS `rating`,\n          `LHS`.`languages` AS `languages`,\n          `LHS`.`releasedate` AS `releasedate`,\n          `LHS`.`resolution` AS `resolution`,\n          `RHS`.`artist_name` AS `artist_name_other`,\n          `RHS`.`country` AS `country_other`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`preferred_genre` AS `preferred_genre`\n   FROM\n     (SELECT *\n      FROM `song`\n      WHERE (`country` = 'UK'\n             AND `languages` = 'english')) AS LHS\n   CROSS JOIN artist AS RHS)\nWHERE (country != country_other\n       OR languages != country_other)\nORDER BY artist_name\n", "sql2": "SELECT artist_name\nFROM artist\nWHERE country = 'UK' INTERSECT\n  SELECT artist_name\n  FROM song WHERE languages = 'english'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0005", "sql1": "\nSELECT artist_name,\n       country\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM song\n           WHERE (rating >= 9.0)) AS RHS\n        WHERE (LHS.artist_name = RHS.artist_name\n               AND LHS.country = RHS.country) ))\nORDER BY artist_name\n", "sql2": "SELECT DISTINCT T1.artist_name,\n                T1.country\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T2.rating > 9", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0049", "sql1": "\nSELECT `artist_name`\nFROM `song`\nWHERE (`languages` = 'english'\n       AND rating <= 8.0)\nORDER BY artist_name\n", "sql2": "SELECT DISTINCT artist_name\nFROM song\nWHERE languages = 'english'\nEXCEPT\nSELECT DISTINCT artist_name\nFROM song\nWHERE rating > 8", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0015", "sql1": "\nSELECT `country`\nFROM\n  (SELECT `song_name`,\n          `artist_name`,\n          `country`,\n          `f_id`,\n          `genre_is`,\n          `rating`,\n          `languages`,\n          `releasedate`,\n          `resolution`,\n          `country_other`,\n          `gender`,\n          `genre_is` AS `preferred_genre`\n   FROM\n     (SELECT `LHS`.`song_name` AS `song_name`,\n             `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`f_id` AS `f_id`,\n             `LHS`.`genre_is` AS `genre_is`,\n             `LHS`.`rating` AS `rating`,\n             `LHS`.`languages` AS `languages`,\n             `LHS`.`releasedate` AS `releasedate`,\n             `LHS`.`resolution` AS `resolution`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`gender` AS `gender`\n      FROM `song` AS `LHS`\n      INNER JOIN `artist` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`\n                                          AND `LHS`.`genre_is` = `RHS`.`preferred_genre`)))\nWHERE (`gender` = 'Female'\n       AND `languages` = 'bangla')\nORDER BY country\n", "sql2": "SELECT T1.country\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T1.gender = 'Female'\n  AND T2.languages = 'bangla'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0003", "sql1": "\nSELECT `song_name`\nFROM `song`\nWHERE (`languages` = 'english')\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nWHERE languages = 'english'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0039", "sql1": "\nSELECT `artist_name`,\n       `n` AS `count___`\nFROM\n  (SELECT `LHS`.`country` AS `country`,\n          `LHS`.`languages` AS `languages`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`artist_name` AS `artist_name`,\n          `RHS`.`gender` AS `gender`,\n          `RHS`.`preferred_genre` AS `preferred_genre`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `country`,\n                `languages`,\n                COUNT(*) AS `n`\n         FROM `song`\n         GROUP BY `country`,\n                  `languages`)\n      WHERE (`languages` = 'english'\n             OR n < 1)) AS LHS\n   LEFT JOIN artist AS RHS ON (LHS.country = RHS.country))\nORDER BY artist_name\n", "sql2": "SELECT T1.artist_name,\n       count(*)\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T2.languages = 'english'\nGROUP BY T2.artist_name\nHAVING count(*) >= 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0022", "sql1": "\nSELECT `song_name_other` AS `song_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`song_name` AS `song_name`,\n             `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`f_id` AS `f_id`,\n             `LHS`.`genre_is` AS `genre_is`,\n             `LHS`.`rating` AS `rating`,\n             `LHS`.`languages` AS `languages`,\n             `LHS`.`releasedate` AS `releasedate`,\n             `LHS`.`resolution` AS `resolution`,\n             `RHS`.`song_name` AS `song_name_other`,\n             `RHS`.`artist_name` AS `artist_name_other`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`f_id` AS `f_id_other`,\n             `RHS`.`genre_is` AS `genre_is_other`,\n             `RHS`.`rating` AS `rating_other`,\n             `RHS`.`languages` AS `languages_other`,\n             `RHS`.`releasedate` AS `releasedate_other`,\n             `RHS`.`resolution` AS `resolution_other`\n      FROM `song` AS `LHS`\n      CROSS JOIN `song` AS `RHS`)\n   WHERE (`genre_is` != `genre_is_other`\n          AND `rating` >= `rating_other`))\nWHERE (`genre_is` = 'blues')\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nWHERE rating <\n    (SELECT max(rating)\n     FROM song\n     WHERE genre_is = 'blues')", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0018", "sql1": "\nSELECT meanrating AS avg_rating_,\n       languages\nFROM\n  (SELECT languages,\n          releasedate,\n          AVG(rating) AS meanrating\n   FROM song\n   GROUP BY languages,\n            releasedate)\nORDER BY avg_rating_\n", "sql2": "SELECT avg(rating),\n       languages\nFROM song\nGROUP BY languages", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0002", "sql1": "\nSELECT f_id\nFROM\n  (SELECT LHS.f_id AS f_id,\n          LHS.artist_name AS artist_name,\n          LHS.file_size AS file_size,\n          LHS.duration AS duration,\n          LHS.formats AS formats,\n          LHS.maxduration AS maxduration,\n          RHS.f_id AS f_id_other,\n          RHS.artist_name AS artist_name_other,\n          RHS.formats AS formats_other\n   FROM\n     (SELECT f_id,\n             artist_name,\n             file_size,\n             duration,\n             formats,\n             MAX(duration) OVER () AS maxduration\n      FROM files) AS LHS\n   INNER JOIN files AS RHS ON (LHS.file_size = RHS.file_size\n                                  AND LHS.maxduration = RHS.duration))\nORDER BY f_id\n", "sql2": "SELECT f_id\nFROM files\nORDER BY duration DESC\nLIMIT 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0017", "sql1": "\nSELECT n AS count___,\n       gender\nFROM\n  (SELECT gender,\n          COUNT(*) AS n\n   FROM artist\n   GROUP BY gender)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       gender\nFROM artist\nGROUP BY gender", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0040", "sql1": "\nSELECT artist_name,\n       country\nFROM\n  (SELECT song_name,\n          artist_name,\n          country,\n          f_id,\n          genre_is,\n          rating,\n          languages,\n          releasedate,\n          resolution,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT *\n      FROM song AS LHS\n      WHERE EXISTS\n          (SELECT 1\n           FROM artist AS RHS\n           WHERE (LHS.artist_name = RHS.artist_name\n                  AND LHS.country = RHS.country) )))\nWHERE (resolution > 900.0\n       OR n < 1)\nORDER BY artist_name\n", "sql2": "SELECT T1.artist_name,\n       T1.country\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T2.resolution > 900\nGROUP BY T2.artist_name\nHAVING count(*) >= 1", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0020", "sql1": "\nSELECT n AS count___,\n       formats\nFROM\n  (SELECT formats,\n          COUNT(*) AS n\n   FROM files\n   GROUP BY formats)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       formats\nFROM files\nGROUP BY formats", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0031", "sql1": "\nSELECT `artist_name`\nFROM `artist`\nWHERE (`country` = 'UK'\n       AND `gender` = 'Male')\nORDER BY artist_name\n", "sql2": "SELECT artist_name\nFROM artist\nWHERE country = 'UK'\n  AND gender = 'Male'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0027", "sql1": "\nSELECT `f_id`\nFROM\n  (SELECT `LHS`.`f_id` AS `f_id`,\n          `LHS`.`artist_name` AS `artist_name`,\n          `LHS`.`file_size` AS `file_size`,\n          `LHS`.`duration` AS `duration`,\n          `LHS`.`formats` AS `formats`,\n          `RHS`.`song_name` AS `song_name`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`genre_is` AS `genre_is`,\n          `RHS`.`rating` AS `rating`,\n          `RHS`.`languages` AS `languages`,\n          `RHS`.`releasedate` AS `releasedate`,\n          `RHS`.`resolution` AS `resolution`\n   FROM `files` AS `LHS`\n   INNER JOIN `song` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`\n                                     AND `LHS`.`f_id` = `RHS`.`f_id`))\nWHERE (`formats` = 'mp4'\n       OR resolution > 720.0)\nORDER BY f_id\n", "sql2": "SELECT f_id\nFROM files\nWHERE formats = 'mp4'\nUNION\nSELECT f_id\nFROM song\nWHERE resolution > 720", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0050", "sql1": "\nSELECT DISTINCT `artist_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`gender` AS `gender`,\n             `LHS`.`preferred_genre` AS `preferred_genre`,\n             `RHS`.`song_name` AS `song_name`,\n             `RHS`.`artist_name` AS `artist_name_other`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`f_id` AS `f_id`,\n             `RHS`.`genre_is` AS `genre_is`,\n             `RHS`.`rating` AS `rating`,\n             `RHS`.`languages` AS `languages`,\n             `RHS`.`releasedate` AS `releasedate`,\n             `RHS`.`resolution` AS `resolution`\n      FROM `artist` AS `LHS`\n      CROSS JOIN `song` AS `RHS`)\n   WHERE (`country` != `country_other`))\nWHERE (`country` = 'Bangladesh'\n       AND rating > 7.0)\nORDER BY artist_name\n", "sql2": "SELECT DISTINCT artist_name\nFROM artist\nWHERE country = 'Bangladesh'\nEXCEPT\nSELECT DISTINCT artist_name\nFROM song\nWHERE rating > 7", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0011", "sql1": "\nSELECT `meanrating` AS `avg_t2_rating_`\nFROM\n  (SELECT `gender`,\n          `languages`,\n          AVG(`rating`) AS `meanrating`\n   FROM\n     (SELECT `LHS`.`song_name` AS `song_name`,\n             `LHS`.`artist_name` AS `artist_name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`f_id` AS `f_id`,\n             `LHS`.`genre_is` AS `genre_is`,\n             `LHS`.`rating` AS `rating`,\n             `LHS`.`languages` AS `languages`,\n             `LHS`.`releasedate` AS `releasedate`,\n             `LHS`.`resolution` AS `resolution`,\n             `RHS`.`country` AS `country_other`,\n             `RHS`.`gender` AS `gender`,\n             `RHS`.`preferred_genre` AS `preferred_genre`\n      FROM `song` AS `LHS`\n      INNER JOIN `artist` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`))\n   GROUP BY `gender`,\n            `languages`)\nWHERE (`gender` = 'Female')\nORDER BY avg_t2_rating_\n", "sql2": "SELECT avg(T2.rating)\nFROM artist AS T1\nJOIN song AS T2 ON T1.artist_name = T2.artist_name\nWHERE T1.gender = 'Female'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0047", "sql1": "\nSELECT `f_id`,\n       `genre_is`,\n       `artist_name`\nFROM `song`\nWHERE (`languages` = 'english')\nORDER BY f_id\n", "sql2": "SELECT f_id,\n       genre_is,\n       artist_name\nFROM song\nWHERE languages = 'english'\nORDER BY rating", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0010", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `artist`\n      WHERE (`country` = 'Bangladesh')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artist\nWHERE country = 'Bangladesh'", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/music_1/0026", "sql1": "\nSELECT song_name\nFROM song\nORDER BY song_name\n", "sql2": "SELECT song_name\nFROM song\nORDER BY resolution", "schema": "spider/music_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/music_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0009", "sql1": "\nSELECT `store_name`\nFROM\n  (SELECT `LHS`.`store_id` AS `store_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`area_size` AS `area_size`,\n          `LHS`.`number_of_product_category` AS `number_of_product_category`,\n          `LHS`.`ranking` AS `ranking`,\n          `LHS`.`district_id` AS `district_id`,\n          `LHS`.`district_name` AS `district_name`,\n          `LHS`.`headquartered_city` AS `headquartered_city`,\n          `LHS`.`city_population` AS `city_population`,\n          `LHS`.`city_area` AS `city_area`\n   FROM\n     (SELECT `LHS`.`store_id` AS `store_id`,\n             `LHS`.`store_name` AS `store_name`,\n             `LHS`.`type` AS `type`,\n             `LHS`.`area_size` AS `area_size`,\n             `LHS`.`number_of_product_category` AS `number_of_product_category`,\n             `LHS`.`ranking` AS `ranking`,\n             `RHS`.`district_id` AS `district_id`,\n             `RHS`.`district_name` AS `district_name`,\n             `RHS`.`headquartered_city` AS `headquartered_city`,\n             `RHS`.`city_population` AS `city_population`,\n             `RHS`.`city_area` AS `city_area`\n      FROM `store` AS `LHS`\n      CROSS JOIN `district` AS `RHS`) AS `LHS`\n   INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`\n                                               AND `LHS`.`district_id` = `RHS`.`district_id`))\nWHERE (`district_name` = 'Khanewal District')\nORDER BY store_name\n", "sql2": "SELECT t1.store_name\nFROM store AS t1\nJOIN store_district AS t2 ON t1.store_id = t2.store_id\nJOIN district AS t3 ON t2.district_id = t3.district_id\nWHERE t3.district_name = 'Khanewal District'", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0005", "sql1": "\nSELECT DISTINCT district_name\nFROM\n  (SELECT LHS.district_id AS district_id,\n          LHS.district_name AS district_name,\n          LHS.headquartered_city AS headquartered_city,\n          LHS.city_population AS city_population,\n          LHS.city_area AS city_area,\n          LHS.maxcity_population AS maxcity_population,\n          RHS.district_id AS district_id_other,\n          RHS.district_name AS district_name_other,\n          RHS.headquartered_city AS headquartered_city_other,\n          RHS.city_population AS city_population_other,\n          RHS.city_area AS city_area_other,\n          RHS.maxcity_population AS maxcity_population_other\n   FROM\n     (SELECT district_id,\n             district_name,\n             headquartered_city,\n             city_population,\n             city_area,\n             MAX(city_population) OVER () AS maxcity_population\n      FROM district) AS LHS\n   CROSS JOIN\n     (SELECT district_id,\n             district_name,\n             headquartered_city,\n             city_population,\n             city_area,\n             MAX(city_population) OVER () AS maxcity_population\n      FROM district) AS RHS)\nWHERE (city_population >= maxcity_population\n       AND city_population <= maxcity_population_other)\nORDER BY district_name\n", "sql2": "SELECT district_name\nFROM district\nORDER BY city_population DESC\nLIMIT 1", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0004", "sql1": "\nSELECT district_name\nFROM district\nWHERE (city_area >= 10.0\n       OR city_population <= 100000.0)\nORDER BY district_name\n", "sql2": "SELECT district_name\nFROM district\nWHERE city_area > 10\n  OR City_Population > 100000", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0008", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM store\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       count(*)\nFROM store\nGROUP BY TYPE", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0015", "sql1": "\nSELECT DISTINCT `product`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`product` AS `product`,\n          `LHS`.`dimensions` AS `dimensions`,\n          `LHS`.`dpi` AS `dpi`,\n          `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,\n          `LHS`.`max_page_size` AS `max_page_size`,\n          `LHS`.`interface` AS `interface`,\n          `LHS`.`store_id` AS `store_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`area_size` AS `area_size`,\n          `LHS`.`number_of_product_category` AS `number_of_product_category`,\n          `LHS`.`ranking` AS `ranking`\n   FROM\n     (SELECT `LHS`.`product_id` AS `product_id`,\n             `LHS`.`product` AS `product`,\n             `LHS`.`dimensions` AS `dimensions`,\n             `LHS`.`dpi` AS `dpi`,\n             `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,\n             `LHS`.`max_page_size` AS `max_page_size`,\n             `LHS`.`interface` AS `interface`,\n             `RHS`.`store_id` AS `store_id`,\n             `RHS`.`store_name` AS `store_name`,\n             `RHS`.`type` AS `type`,\n             `RHS`.`area_size` AS `area_size`,\n             `RHS`.`number_of_product_category` AS `number_of_product_category`,\n             `RHS`.`ranking` AS `ranking`\n      FROM `product` AS `LHS`\n      CROSS JOIN `store` AS `RHS`) AS `LHS`\n   INNER JOIN `store_product` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`\n                                              AND `LHS`.`store_id` = `RHS`.`store_id`))\nWHERE (`store_name` != 'Miramichi')\nORDER BY product\n", "sql2": "SELECT t1.product\nFROM product AS t1\nJOIN store_product AS t2 ON t1.product_id = t2.product_id\nJOIN store AS t3 ON t2.store_id = t3.store_id\nWHERE t3.store_name = 'Miramichi'", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0003", "sql1": "\nSELECT district_name,\n       city_population\nFROM district\nWHERE (city_population >= 200000.0\n       AND city_population <= 2000000.0)\nORDER BY district_name\n", "sql2": "SELECT District_name,\n       City_Population\nFROM district\nWHERE City_Population BETWEEN 200000 AND 2000000", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0002", "sql1": "\nSELECT max_page_size\nFROM\n  (SELECT dpi,\n          max_page_size,\n          COUNT(*) AS n\n   FROM product\n   GROUP BY dpi,\n            max_page_size)\nWHERE (n >= 3)\nORDER BY max_page_size\n", "sql2": "SELECT max_page_size\nFROM product\nGROUP BY max_page_size\nHAVING count(*) > 3", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0014", "sql1": "\nSELECT meanpages_per_minute_color AS avg_pages_per_minute_color_\nFROM\n  (SELECT dpi,\n          interface,\n          AVG(pages_per_minute_color) AS meanpages_per_minute_color\n   FROM product\n   GROUP BY dpi,\n            interface)\nORDER BY avg_pages_per_minute_color_\n", "sql2": "SELECT avg(pages_per_minute_color)\nFROM product", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0001", "sql1": "\nSELECT district_name\nFROM district\nORDER BY district_name\n", "sql2": "SELECT DISTINCT District_name\nFROM district\nORDER BY city_area DESC", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0017", "sql1": "\nSELECT `product`\nFROM `product`\nWHERE (`max_page_size` = 'A4'\n       OR pages_per_minute_color = 5.0)\nORDER BY product\n", "sql2": "SELECT product\nFROM product\nWHERE max_page_size = 'A4'\n  OR pages_per_minute_color < 5", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0020", "sql1": "\nSELECT product\nFROM\n  (SELECT product_id,\n          product,\n          dimensions,\n          dpi,\n          pages_per_minute_color,\n          max_page_size,\n          interface,\n          COUNT(*) OVER () AS n\n   FROM product)\nORDER BY product\n", "sql2": "SELECT product\nFROM product\nWHERE product !=\n    (SELECT max_page_size\n     FROM product\n     GROUP BY max_page_size\n     ORDER BY count(*) DESC\n     LIMIT 1)", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0016", "sql1": "\nSELECT `product`\nFROM `product`\nWHERE (`max_page_size` = 'A4'\n       AND pages_per_minute_color < 5.0)\nORDER BY product\n", "sql2": "SELECT product\nFROM product\nWHERE max_page_size = 'A4'\n  AND pages_per_minute_color < 5", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0007", "sql1": "\nSELECT DISTINCT SUM(city_population) OVER () AS sum_city_population_\nFROM district\nORDER BY sum_city_population_\n", "sql2": "SELECT sum(city_population)\nFROM district\nORDER BY city_area DESC\nLIMIT 3", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_product/0011", "sql1": "\nSELECT `headquartered_city`\nFROM\n  (SELECT `LHS`.`store_id` AS `store_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`area_size` AS `area_size`,\n          `LHS`.`number_of_product_category` AS `number_of_product_category`,\n          `LHS`.`ranking` AS `ranking`,\n          `LHS`.`district_id` AS `district_id`,\n          `LHS`.`district_name` AS `district_name`,\n          `LHS`.`headquartered_city` AS `headquartered_city`,\n          `LHS`.`city_population` AS `city_population`,\n          `LHS`.`city_area` AS `city_area`\n   FROM\n     (SELECT `LHS`.`store_id` AS `store_id`,\n             `LHS`.`store_name` AS `store_name`,\n             `LHS`.`type` AS `type`,\n             `LHS`.`area_size` AS `area_size`,\n             `LHS`.`number_of_product_category` AS `number_of_product_category`,\n             `LHS`.`ranking` AS `ranking`,\n             `RHS`.`district_id` AS `district_id`,\n             `RHS`.`district_name` AS `district_name`,\n             `RHS`.`headquartered_city` AS `headquartered_city`,\n             `RHS`.`city_population` AS `city_population`,\n             `RHS`.`city_area` AS `city_area`\n      FROM `store` AS `LHS`\n      CROSS JOIN `district` AS `RHS`) AS `LHS`\n   INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`\n                                               AND `LHS`.`district_id` = `RHS`.`district_id`))\nWHERE (`store_name` = 'Blackville')\nORDER BY headquartered_city\n", "sql2": "SELECT t3.headquartered_city\nFROM store AS t1\nJOIN store_district AS t2 ON t1.store_id = t2.store_id\nJOIN district AS t3 ON t2.district_id = t3.district_id\nWHERE t1.store_name = 'Blackville'", "schema": "spider/store_product/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0009", "sql1": "\nSELECT nationality\nFROM host\nWHERE (age = 45)\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM HOST\nWHERE Age > 45 INTERSECT\n  SELECT Nationality\n  FROM HOST WHERE Age < 35", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0004", "sql1": "\nSELECT `first_year`,\n       `last_year`\nFROM `party`\nWHERE (`party_theme` = 'Spring'\n       OR `party_theme` = 'Teqnology')\nORDER BY first_year\n", "sql2": "SELECT First_year,\n       Last_year\nFROM party\nWHERE Party_Theme = 'Spring'\n  OR Party_Theme = 'Teqnology'", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0012", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.host_id AS host_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          LHS.party_id AS party_id,\n          LHS.is_main_in_charge AS is_main_in_charge,\n          RHS.party_theme AS party_theme,\n          RHS.location AS LOCATION,\n          RHS.first_year AS first_year,\n          RHS.last_year AS last_year,\n          RHS.number_of_hosts AS number_of_hosts,\n          RHS.party_theme_other AS party_theme_other,\n          RHS.location_other AS location_other,\n          RHS.first_year_other AS first_year_other,\n          RHS.number_of_hosts_other AS number_of_hosts_other\n   FROM\n     (SELECT LHS.host_id AS host_id,\n             LHS.name AS name,\n             LHS.nationality AS nationality,\n             LHS.age AS age,\n             RHS.party_id AS party_id,\n             RHS.is_main_in_charge AS is_main_in_charge\n      FROM host AS LHS\n      INNER JOIN party_host AS RHS ON (LHS.host_id = RHS.host_id)) AS LHS\n   INNER JOIN\n     (SELECT party_id,\n             party_theme,\n             LOCATION,\n             first_year,\n             first_year AS last_year,\n             number_of_hosts,\n             party_theme_other,\n             location_other,\n             first_year_other,\n             number_of_hosts_other\n      FROM\n        (SELECT number_of_hosts AS party_id,\n                party_theme,\n                LOCATION,\n                first_year,\n                last_year,\n                number_of_hosts,\n                party_theme_other,\n                location_other,\n                first_year_other,\n                number_of_hosts_other\n         FROM\n           (SELECT LHS.party_id AS party_id,\n                   LHS.party_theme AS party_theme,\n                   LHS.location AS LOCATION,\n                   LHS.first_year AS first_year,\n                   LHS.last_year AS last_year,\n                   LHS.number_of_hosts AS number_of_hosts,\n                   RHS.party_theme AS party_theme_other,\n                   RHS.location AS location_other,\n                   RHS.first_year AS first_year_other,\n                   RHS.number_of_hosts AS number_of_hosts_other\n            FROM party AS LHS\n            INNER JOIN party AS RHS ON (LHS.number_of_hosts = RHS.party_id\n                                           AND LHS.first_year = RHS.last_year)))) AS RHS ON (LHS.party_id = RHS.party_id))\nORDER BY LOCATION\n", "sql2": "SELECT T3.Location\nFROM party_host AS T1\nJOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID\nJOIN party AS T3 ON T1.Party_ID = T3.Party_ID\nWHERE T2.Age > 50", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM host AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM party_host AS RHS\n        WHERE (LHS.host_id = RHS.host_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM HOST\nWHERE Host_ID NOT IN\n    (SELECT Host_ID\n     FROM party_host)", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0003", "sql1": "\nSELECT party_theme,\n       LOCATION\nFROM party\nORDER BY party_theme\n", "sql2": "SELECT Party_Theme,\n       LOCATION\nFROM party", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0002", "sql1": "\nSELECT party_theme\nFROM party\nORDER BY party_theme\n", "sql2": "SELECT Party_Theme\nFROM party\nORDER BY Number_of_hosts ASC", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0014", "sql1": "\nSELECT name,\n       nationality\nFROM\n  (SELECT LHS.host_id AS host_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          LHS.maxage AS maxage,\n          RHS.host_id AS host_id_other,\n          RHS.name AS name_other,\n          RHS.nationality AS nationality_other,\n          RHS.age AS age_other,\n          RHS.maxage AS maxage_other\n   FROM\n     (SELECT host_id,\n             name,\n             nationality,\n             age,\n             MAX(age) OVER () AS maxage\n      FROM host) AS LHS\n   CROSS JOIN\n     (SELECT host_id,\n             name,\n             nationality,\n             age,\n             MAX(age) OVER () AS maxage\n      FROM host) AS RHS)\nWHERE (age = maxage\n       AND age_other = maxage_other)\nORDER BY name\n", "sql2": "SELECT Name,\n       Nationality\nFROM HOST\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM party)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM party", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0010", "sql1": "\nSELECT party_theme,\n       name\nFROM\n  (SELECT LHS.party_id AS party_id,\n          LHS.party_theme AS party_theme,\n          LHS.location AS LOCATION,\n          LHS.first_year AS first_year,\n          LHS.last_year AS last_year,\n          LHS.number_of_hosts AS number_of_hosts,\n          LHS.host_id AS host_id,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.age AS age,\n          RHS.is_main_in_charge AS is_main_in_charge\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.party_theme AS party_theme,\n             LHS.location AS LOCATION,\n             LHS.first_year AS first_year,\n             LHS.last_year AS last_year,\n             LHS.number_of_hosts AS number_of_hosts,\n             RHS.host_id AS host_id,\n             RHS.name AS name,\n             RHS.nationality AS nationality,\n             RHS.age AS age\n      FROM party AS LHS\n      CROSS JOIN host AS RHS) AS LHS\n   INNER JOIN party_host AS RHS ON (LHS.party_id = RHS.party_id\n                                       AND LHS.host_id = RHS.host_id))\nORDER BY party_theme\n", "sql2": "SELECT T3.Party_Theme,\n       T2.Name\nFROM party_host AS T1\nJOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID\nJOIN party AS T3 ON T1.Party_ID = T3.Party_ID", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_host/0006", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.party_id AS party_id,\n          LHS.party_theme AS party_theme,\n          LHS.location AS LOCATION,\n          LHS.first_year AS first_year,\n          LHS.last_year AS last_year,\n          LHS.number_of_hosts AS number_of_hosts\n   FROM party AS LHS\n   INNER JOIN\n     (SELECT party_id,\n             party_theme,\n             LOCATION,\n             first_year,\n             last_year,\n             MAX(number_of_hosts) OVER () AS number_of_hosts\n      FROM party) AS RHS ON (LHS.party_id = RHS.party_id\n                                AND LHS.party_theme = RHS.party_theme\n                                AND LHS.location = RHS.location\n                                AND LHS.first_year = RHS.first_year\n                                AND LHS.last_year = RHS.last_year\n                                AND LHS.number_of_hosts = RHS.number_of_hosts))\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM party\nORDER BY Number_of_hosts DESC\nLIMIT 1", "schema": "spider/party_host/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0013", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM ship)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ship", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0005", "sql1": "\nSELECT name,\n       CLASS,\n       rank\nFROM captain\nORDER BY name\n", "sql2": "SELECT name,\n       CLASS,\n       rank\nFROM captain", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0004", "sql1": "\nSELECT name\nFROM captain\nORDER BY name\n", "sql2": "SELECT name\nFROM captain\nORDER BY age DESC", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0008", "sql1": "\nSELECT `name`\nFROM `captain`\nWHERE (`rank` = 'Midshipman'\n       OR `rank` = 'Lieutenant')\nORDER BY name\n", "sql2": "SELECT name\nFROM captain\nWHERE rank = 'Midshipman'\n  OR rank = 'Lieutenant'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0015", "sql1": "\nSELECT n AS count___,\n       flag\nFROM\n  (SELECT flag,\n          COUNT(*) AS n\n   FROM ship\n   GROUP BY flag)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       flag\nFROM ship\nGROUP BY flag", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0019", "sql1": "\nSELECT built_year\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT built_year,\n                CLASS,\n                MAX(n) AS n\n         FROM\n           (SELECT ship_id,\n                   name,\n                   TYPE,\n                   built_year,\n                   CLASS,\n                   flag,\n                   COUNT(*) OVER () AS n\n            FROM ship)\n         GROUP BY built_year,\n                  CLASS)\n      ORDER BY CLASS DESC)\n   LIMIT 1)\n", "sql2": "SELECT built_year\nFROM ship\nGROUP BY built_year\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0023", "sql1": "\nSELECT `name`,\n       `flag`\nFROM\n  (SELECT *\n   FROM `ship` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `captain`\n           WHERE (`rank` = 'Midshipman')) AS RHS\n        WHERE (LHS.ship_id = RHS.ship_id) ))\nORDER BY name\n", "sql2": "SELECT name,\n       flag\nFROM ship\nWHERE ship_id NOT IN\n    (SELECT ship_id\n     FROM captain\n     WHERE rank = 'Midshipman')", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0018", "sql1": "\nSELECT `type`\nFROM `ship`\nWHERE (`flag` != 'Panama'\n       OR `flag` = 'Malta')\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM ship\nWHERE flag = 'Panama' INTERSECT\n  SELECT TYPE\n  FROM ship WHERE flag = 'Malta'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0002", "sql1": "\nSELECT n AS count___,\n       rank\nFROM\n  (SELECT rank,\n          COUNT(*) AS n\n   FROM captain\n   GROUP BY rank)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       rank\nFROM captain\nGROUP BY rank", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0001", "sql1": "\nSELECT n_distinct AS count_distinct_rank_\nFROM\n  (SELECT COUNT(DISTINCT rank) AS n_distinct\n   FROM captain)\nORDER BY count_distinct_rank_\n", "sql2": "SELECT count(DISTINCT rank)\nFROM captain", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0017", "sql1": "\nSELECT name\nFROM ship\nORDER BY name\n", "sql2": "SELECT name\nFROM ship\nORDER BY built_year,\n         CLASS", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0021", "sql1": "\nSELECT name,\n       CLASS\nFROM\n  (SELECT *\n   FROM ship AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM captain AS RHS\n        WHERE (LHS.ship_id = RHS.ship_id) ))\nORDER BY name\n", "sql2": "SELECT name,\n       CLASS\nFROM ship\nWHERE ship_id NOT IN\n    (SELECT ship_id\n     FROM captain)", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.ship_id AS ship_id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.built_year AS built_year,\n          LHS.class AS CLASS,\n          LHS.flag AS flag,\n          RHS.n AS n\n   FROM ship AS LHS\n   INNER JOIN\n     (SELECT ship_id,\n             COUNT(*) AS n\n      FROM captain\n      GROUP BY ship_id) AS RHS ON (LHS.ship_id = RHS.ship_id))\nWHERE (n > 1)\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM ship AS t1\nJOIN captain AS t2 ON t1.ship_id = t2.ship_id\nGROUP BY t2.ship_id\nHAVING count(*) > 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0016", "sql1": "\nSELECT flag\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT CLASS,\n                flag,\n                MAX(n) AS n\n         FROM\n           (SELECT ship_id,\n                   name,\n                   TYPE,\n                   built_year,\n                   CLASS,\n                   flag,\n                   COUNT(*) OVER () AS n\n            FROM ship)\n         GROUP BY CLASS,\n                  flag)\n      ORDER BY CLASS DESC)\n   LIMIT 1)\n", "sql2": "SELECT flag\nFROM ship\nGROUP BY flag\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0007", "sql1": "\nSELECT CLASS\nFROM\n  (SELECT CLASS,\n          COUNT(*) AS n\n   FROM captain\n   GROUP BY CLASS)\nWHERE (n >= 2)\nORDER BY CLASS\n", "sql2": "SELECT CLASS\nFROM captain\nGROUP BY CLASS\nHAVING count(*) > 2", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0011", "sql1": "\nSELECT `rank`\nFROM\n  (SELECT *\n   FROM `captain` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `captain`\n           WHERE (`class` = 'Third-rate ship of the line')) AS RHS\n        WHERE (LHS.rank = RHS.rank) ))\nORDER BY rank\n", "sql2": "SELECT rank\nFROM captain\nEXCEPT\nSELECT rank\nFROM captain\nWHERE CLASS = 'Third-rate ship of the line'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0010", "sql1": "\nSELECT DISTINCT `rank`\nFROM `captain`\nWHERE (`class` = 'Cutter'\n       OR `class` = 'Armed schooner')\nORDER BY rank\n", "sql2": "SELECT rank\nFROM captain\nWHERE CLASS = 'Cutter' INTERSECT\n  SELECT rank\n  FROM captain WHERE CLASS = 'Armed schooner'", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_1/0006", "sql1": "\nSELECT DISTINCT rank\nFROM\n  (SELECT captain_id,\n          name,\n          ship_id,\n          age,\n          CLASS,\n          rank,\n          captain_id_other,\n          captain_id AS maxn\n   FROM\n     (SELECT LHS.captain_id AS captain_id,\n             LHS.name AS name,\n             LHS.ship_id AS ship_id,\n             LHS.age AS age,\n             LHS.class AS CLASS,\n             LHS.rank AS rank,\n             RHS.captain_id AS captain_id_other\n      FROM captain AS LHS\n      INNER JOIN\n        (SELECT captain_id,\n                n,\n                MAX(n) OVER () AS maxn\n         FROM\n           (SELECT captain_id,\n                   COUNT(*) AS n\n            FROM captain\n            GROUP BY captain_id)) AS RHS ON (LHS.captain_id = RHS.maxn\n                                             AND LHS.ship_id = RHS.n)))\nORDER BY rank\n", "sql2": "SELECT rank\nFROM captain\nGROUP BY rank\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/ship_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0009", "sql1": "\nSELECT DISTINCT product_type_code\nFROM\n  (SELECT product_id,\n          product_type_code,\n          product_name,\n          product_price,\n          COUNT(*) OVER () AS n\n   FROM products)\nWHERE (n >= 2)\nORDER BY product_type_code\n", "sql2": "SELECT Product_Type_Code\nFROM Products\nGROUP BY Product_Type_Code\nHAVING COUNT(*) >= 2", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0013", "sql1": "\nSELECT product_name\nFROM\n  (SELECT event_id,\n          product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_type_code AS product_type_code,\n             LHS.product_name AS product_name,\n             LHS.product_price AS product_price,\n             RHS.product_in_event_id AS product_in_event_id,\n             RHS.event_id AS event_id\n      FROM products AS LHS\n      INNER JOIN products_in_events AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY event_id,\n            product_name)\nWHERE (n = 2)\nORDER BY product_name\n", "sql2": "SELECT T1.Product_Name\nFROM Products AS T1\nJOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID\nGROUP BY T1.Product_Name\nHAVING COUNT(*) >= 2", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0005", "sql1": "\nSELECT meanproduct_price AS avg_product_price_\nFROM\n  (SELECT AVG(product_price) AS meanproduct_price\n   FROM products)\nORDER BY avg_product_price_\n", "sql2": "SELECT avg(Product_Price)\nFROM Products", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0004", "sql1": "\nSELECT `product_price`\nFROM `products`\nWHERE (`product_name` = 'Trading Policy')\nORDER BY product_price\n", "sql2": "SELECT Product_Price\nFROM Products\nWHERE Product_Name = 'Dining'\n  OR Product_Name = 'Trading Policy'", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0012", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_in_event_id AS product_in_event_id,\n             LHS.event_id AS event_id,\n             LHS.product_id AS product_id,\n             RHS.product_type_code AS product_type_code,\n             RHS.product_name AS product_name,\n             RHS.product_price AS product_price\n      FROM products_in_events AS LHS\n      INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY product_name)\nORDER BY product_name\n", "sql2": "SELECT T1.Product_Name,\n       COUNT(*)\nFROM Products AS T1\nJOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID\nGROUP BY T1.Product_Name\nORDER BY COUNT(*) DESC", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0008", "sql1": "\nSELECT product_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT product_name,\n                product_type_code,\n                MAX(n) AS n\n         FROM\n           (SELECT product_name,\n                   product_type_code,\n                   COUNT(*) AS n\n            FROM products\n            GROUP BY product_name,\n                     product_type_code)\n         GROUP BY product_name,\n                  product_type_code)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT Product_Type_Code\nFROM Products\nGROUP BY Product_Type_Code\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0015", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM products AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM products_in_events AS RHS\n        WHERE (LHS.product_id = RHS.product_id) ))\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nWHERE Product_ID NOT IN\n    (SELECT Product_ID\n     FROM Products_in_Events)", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0003", "sql1": "\nSELECT product_name,\n       product_type_code\nFROM products\nORDER BY product_name\n", "sql2": "SELECT Product_Name,\n       Product_Type_Code\nFROM Products", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0002", "sql1": "\nSELECT product_name\nFROM products\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nORDER BY Product_Price ASC", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM products\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Products", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0007", "sql1": "\nSELECT product_type_code,\n       n AS count___\nFROM\n  (SELECT product_type_code,\n          COUNT(*) AS n\n   FROM products\n   GROUP BY product_type_code)\nORDER BY product_type_code\n", "sql2": "SELECT Product_Type_Code,\n       COUNT(*)\nFROM Products\nGROUP BY Product_Type_Code", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0011", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT product_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_in_event_id AS product_in_event_id,\n             LHS.event_id AS event_id,\n             LHS.product_id AS product_id,\n             RHS.product_type_code AS product_type_code,\n             RHS.product_name AS product_name,\n             RHS.product_price AS product_price\n      FROM products_in_events AS LHS\n      INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY product_name)\nORDER BY product_name\n", "sql2": "SELECT T1.Product_Name,\n       COUNT(*)\nFROM Products AS T1\nJOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID\nGROUP BY T1.Product_Name", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0010", "sql1": "\nSELECT product_type_code\nFROM products\nWHERE (product_price > 4500.0\n       AND product_price > 3000.0)\nORDER BY product_type_code\n", "sql2": "SELECT Product_Type_Code\nFROM Products\nWHERE Product_Price > 4500 INTERSECT\n  SELECT Product_Type_Code\n  FROM Products WHERE Product_Price < 3000", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/solvency_ii/0006", "sql1": "\nSELECT product_name\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product_type_code AS product_type_code,\n          LHS.product_name AS product_name,\n          LHS.product_price AS product_price,\n          RHS.product_price AS product_price_other\n   FROM products AS LHS\n   CROSS JOIN\n     (SELECT MAX(product_price) AS product_price\n      FROM products) AS RHS)\nWHERE (product_price >= product_price_other)\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nORDER BY Product_Price DESC\nLIMIT 1", "schema": "spider/solvency_ii/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/solvency_ii/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0009", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `product_category_code`,\n          COUNT(*) AS `n`\n   FROM `products`\n   GROUP BY `product_category_code`)\nWHERE (`product_category_code` = 'Seeds')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products\nWHERE product_category_code = 'Seeds'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0033", "sql1": "\nSELECT `product_category_code` AS `product_category_description`\nFROM `ref_product_categories`\nWHERE (`product_category_code` = 'Spices')\nORDER BY product_category_description\n", "sql2": "SELECT product_category_description\nFROM ref_product_categories\nWHERE product_category_code = 'Spices'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0013", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`color_description` = 'yellow')\nORDER BY product_name\n", "sql2": "SELECT T1.product_name\nFROM products AS T1\nJOIN ref_colors AS T2 ON T1.color_code = T2.color_code\nWHERE T2.color_description = 'yellow'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0005", "sql1": "\nSELECT color_description\nFROM ref_colors\nORDER BY color_description\n", "sql2": "SELECT color_description\nFROM ref_colors", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0004", "sql1": "\nSELECT product_name,\n       typical_buying_price\nFROM products\nORDER BY product_name\n", "sql2": "SELECT product_name,\n       typical_buying_price\nFROM products", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0012", "sql1": "\nSELECT `product_category_code`\nFROM `products`\nWHERE (`product_name` = 'flax')\nORDER BY product_category_code\n", "sql2": "SELECT product_category_code\nFROM products\nWHERE product_name = 'flax'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0032", "sql1": "\nSELECT `unit_of_measure`\nFROM `ref_product_categories`\nWHERE (`product_category_code` = 'Herbs')\nORDER BY unit_of_measure\n", "sql2": "SELECT unit_of_measure\nFROM ref_product_categories\nWHERE product_category_code = 'Herbs'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0024", "sql1": "\nSELECT `characteristic_name`\nFROM\n  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n          `LHS`.`characteristic_name` AS `characteristic_name`,\n          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_characteristic_value` AS `product_characteristic_value`\n   FROM\n     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,\n             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,\n             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,\n             `LHS`.`characteristic_name` AS `characteristic_name`,\n             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`color_code` AS `color_code`,\n             `RHS`.`product_category_code` AS `product_category_code`,\n             `RHS`.`product_name` AS `product_name`,\n             `RHS`.`typical_buying_price` AS `typical_buying_price`,\n             `RHS`.`typical_selling_price` AS `typical_selling_price`,\n             `RHS`.`product_description` AS `product_description`,\n             `RHS`.`other_product_details` AS `other_product_details`\n      FROM `characteristics` AS `LHS`\n      CROSS JOIN `products` AS `RHS`) AS `LHS`\n   INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`\n                                                        AND `LHS`.`product_id` = `RHS`.`product_id`))\nWHERE (`product_name` = 'sesame'\n       AND `characteristic_type_code` = 'Grade')\nORDER BY characteristic_name\n", "sql2": "SELECT t3.characteristic_name\nFROM products AS t1\nJOIN product_characteristics AS t2 ON t1.product_id = t2.product_id\nJOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id\nWHERE t1.product_name = 'sesame'\n  AND t3.characteristic_type_code = 'Grade'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0008", "sql1": "\nSELECT `product_name`,\n       `color_description`,\n       `product_description`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products`\n      WHERE (`product_category_code` = 'Herbs')) AS RHS ON (LHS.color_code = RHS.color_code))\nORDER BY product_name\n", "sql2": "SELECT T1.product_name,\n       T2.color_description,\n       T1.product_description\nFROM products AS T1\nJOIN Ref_colors AS T2 ON T1.color_code = T2.color_code\nWHERE product_category_code = 'Herbs'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0015", "sql1": "\nSELECT `color_description`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`color_description` AS `color_description`\n   FROM `products` AS `LHS`\n   LEFT JOIN `ref_colors` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`product_name` = 'catnip')\nORDER BY color_description\n", "sql2": "SELECT t2.color_description\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t1.product_name = 'catnip'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM characteristics\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CHARACTERISTICS", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0035", "sql1": "\nSELECT `unit_of_measure`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_category_description` AS `product_category_description`,\n          `RHS`.`unit_of_measure` AS `unit_of_measure`\n   FROM\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'cumin')) AS LHS\n   LEFT JOIN ref_product_categories AS RHS ON (LHS.product_category_code = RHS.product_category_code))\nORDER BY unit_of_measure\n", "sql2": "SELECT t2.unit_of_measure\nFROM products AS t1\nJOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code\nWHERE t1.product_name = 'cumin'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0034", "sql1": "\nSELECT `product_category_code` AS `product_category_description`,\n       `unit_of_measure`\nFROM `ref_product_categories`\nWHERE (`product_category_code` = 'Herbs')\nORDER BY product_category_description\n", "sql2": "SELECT product_category_description,\n       unit_of_measure\nFROM ref_product_categories\nWHERE product_category_code = 'Herbs'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0018", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `LHS`.`color_code` AS `color_code`,\n          `LHS`.`color_description` AS `color_description`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`product_category_code` AS `product_category_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`typical_buying_price` AS `typical_buying_price`,\n          `RHS`.`typical_selling_price` AS `typical_selling_price`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`other_product_details` AS `other_product_details`\n   FROM `ref_colors` AS `LHS`\n   INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`color_description` = 'white')\nORDER BY product_name\n", "sql2": "SELECT t1.product_name\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t2.color_description = 'white'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0002", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM ref_colors)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ref_colors", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0043", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM\n  (SELECT *\n   FROM ref_colors AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM products AS RHS\n        WHERE (LHS.color_code = RHS.color_code) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_colors\nWHERE color_code NOT IN\n    (SELECT color_code\n     FROM products)", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM products\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM products", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0036", "sql1": "\nSELECT `unit_of_measure`,\n       `product_category_code`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`product_category_description` AS `product_category_description`,\n          `RHS`.`unit_of_measure` AS `unit_of_measure`\n   FROM\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'chervil')) AS LHS\n   LEFT JOIN ref_product_categories AS RHS ON (LHS.product_category_code = RHS.product_category_code))\nORDER BY unit_of_measure\n", "sql2": "SELECT t2.unit_of_measure,\n       t2.product_category_code\nFROM products AS t1\nJOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code\nWHERE t1.product_name = 'chervil'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0041", "sql1": "\nSELECT characteristic_name,\n       other_characteristic_details,\n       characteristic_data_type\nFROM\n  (SELECT *\n   FROM characteristics AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM product_characteristics AS RHS\n        WHERE (LHS.characteristic_id = RHS.characteristic_id) ))\nORDER BY characteristic_name\n", "sql2": "SELECT characteristic_name,\n       other_characteristic_details,\n       characteristic_data_type\nFROM CHARACTERISTICS\nEXCEPT\nSELECT t1.characteristic_name,\n       t1.other_characteristic_details,\n       t1.characteristic_data_type\nFROM CHARACTERISTICS AS t1\nJOIN product_characteristics AS t2 ON t1.characteristic_id = t2.characteristic_id", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0016", "sql1": "\nSELECT `color_code`,\n       `color_description`\nFROM\n  (SELECT `LHS`.`product_id` AS `product_id`,\n          `LHS`.`color_code` AS `color_code`,\n          `LHS`.`product_category_code` AS `product_category_code`,\n          `LHS`.`product_name` AS `product_name`,\n          `LHS`.`typical_buying_price` AS `typical_buying_price`,\n          `LHS`.`typical_selling_price` AS `typical_selling_price`,\n          `LHS`.`product_description` AS `product_description`,\n          `LHS`.`other_product_details` AS `other_product_details`,\n          `RHS`.`color_description` AS `color_description`\n   FROM `products` AS `LHS`\n   LEFT JOIN `ref_colors` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`))\nWHERE (`product_name` = 'chervil')\nORDER BY color_code\n", "sql2": "SELECT t1.color_code,\n       t2.color_description\nFROM products AS t1\nJOIN ref_colors AS t2 ON t1.color_code = t2.color_code\nWHERE t1.product_name = 'chervil'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0007", "sql1": "\nSELECT `product_name`\nFROM `products`\nWHERE (`product_category_code` = 'Spices')\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM products\nWHERE product_category_code = 'Spices'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0011", "sql1": "\nSELECT `product_category_code`,\n       `typical_buying_price`\nFROM `products`\nWHERE (`product_name` = 'cumin')\nORDER BY product_category_code\n", "sql2": "SELECT product_category_code,\n       typical_buying_price\nFROM products\nWHERE product_name = 'cumin'", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_gen_characteristics/0006", "sql1": "\nSELECT DISTINCT characteristic_name\nFROM characteristics\nORDER BY characteristic_name\n", "sql2": "SELECT DISTINCT characteristic_name\nFROM CHARACTERISTICS", "schema": "spider/products_gen_characteristics/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_gen_characteristics/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0013", "sql1": "\nSELECT DISTINCT MAX(date_moved_in) OVER () AS max_date_moved_in_\nFROM residents\nORDER BY max_date_moved_in_\n", "sql2": "SELECT max(date_moved_in)\nFROM Residents", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0005", "sql1": "\nSELECT thing_id,\n       type_of_thing_code,\n       organization_details\nFROM\n  (SELECT LHS.organization_id AS organization_id,\n          LHS.parent_organization_id AS parent_organization_id,\n          LHS.organization_details AS organization_details,\n          RHS.thing_id AS thing_id,\n          RHS.type_of_thing_code AS type_of_thing_code,\n          RHS.service_type_code AS service_type_code,\n          RHS.service_details AS service_details\n   FROM organizations AS LHS\n   INNER JOIN things AS RHS ON (LHS.organization_id = RHS.organization_id))\nORDER BY thing_id\n", "sql2": "SELECT T1.thing_id,\n       T1.type_of_Thing_Code,\n       T2.organization_details\nFROM Things AS T1\nJOIN Organizations AS T2 ON T1.organization_id = T2.organization_id", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0012", "sql1": "\nSELECT organization_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM organizations\n      ORDER BY organization_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT organization_id\nFROM organizations\nEXCEPT\nSELECT parent_organization_id\nFROM organizations", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0015", "sql1": "\nSELECT customer_event_id,\n       date_moved_in,\n       property_id\nFROM customer_events\nORDER BY customer_event_id\n", "sql2": "SELECT customer_event_id,\n       date_moved_in,\n       property_id\nFROM customer_events", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0003", "sql1": "\nSELECT resident_id,\n       other_details,\n       n AS count___\nFROM\n  (SELECT LHS.resident_id AS resident_id,\n          LHS.property_id AS property_id,\n          LHS.date_moved_in AS date_moved_in,\n          LHS.date_moved_out AS date_moved_out,\n          LHS.other_details AS other_details,\n          RHS.property_id AS property_id_other,\n          RHS.n AS n\n   FROM residents AS LHS\n   INNER JOIN\n     (SELECT property_id,\n             resident_id,\n             COUNT(*) AS n\n      FROM residents_services\n      GROUP BY property_id,\n               resident_id) AS RHS ON (LHS.resident_id = RHS.resident_id))\nORDER BY resident_id\n", "sql2": "SELECT T1.resident_id,\n       T1.other_details,\n       count(*)\nFROM Residents AS T1\nJOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id\nGROUP BY T1.resident_id\nORDER BY count(*) DESC", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0002", "sql1": "\nSELECT DISTINCT `service_type_code`\nFROM\n  (SELECT `LHS`.`service_id` AS `service_id`,\n          `LHS`.`organization_id` AS `organization_id`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `LHS`.`service_details` AS `service_details`,\n          `RHS`.`parent_organization_id` AS `parent_organization_id`,\n          `RHS`.`organization_details` AS `organization_details`\n   FROM `services` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `organizations`\n      WHERE (`organization_details` = 'Denesik and Sons Party')) AS RHS ON (LHS.organization_id = RHS.organization_id))\nORDER BY service_type_code\n", "sql2": "SELECT DISTINCT T1.service_type_code\nFROM services AS T1\nJOIN organizations AS T2 ON T1.organization_id = T2.organization_id\nWHERE T2.organization_details = 'Denesik and Sons Party'", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0001", "sql1": "\nSELECT property_id,\n       n AS count___\nFROM\n  (SELECT LHS.property_id AS property_id,\n          LHS.n AS n,\n          RHS.property_type_code AS property_type_code,\n          RHS.property_address AS property_address,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT property_id,\n             COUNT(*) AS n\n      FROM residents\n      GROUP BY property_id) AS LHS\n   INNER JOIN properties AS RHS ON (LHS.property_id = RHS.property_id))\nORDER BY property_id\n", "sql2": "SELECT T1.property_id,\n       count(*)\nFROM properties AS T1\nJOIN residents AS T2 ON T1.property_id = T2.property_id\nGROUP BY T1.property_id", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0017", "sql1": "\nSELECT DISTINCT date_moved_in\nFROM residents\nORDER BY date_moved_in\n", "sql2": "SELECT DISTINCT date_moved_in\nFROM residents", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0007", "sql1": "\nSELECT date_moved_in,\n       customer_id,\n       customer_details\nFROM\n  (SELECT LHS.customer_event_id AS customer_event_id,\n          LHS.customer_id AS customer_id,\n          LHS.date_moved_in AS date_moved_in,\n          LHS.property_id AS property_id,\n          LHS.resident_id AS resident_id,\n          LHS.thing_id AS thing_id,\n          RHS.customer_details AS customer_details\n   FROM customer_events AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY date_moved_in\n", "sql2": "SELECT T2.date_moved_in,\n       T1.customer_id,\n       T1.customer_details\nFROM Customers AS T1\nJOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0011", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT status_of_thing_code) OVER () AS count_distinct_status_of_thing_code_\nFROM timed_status_of_things\nORDER BY count_distinct_status_of_thing_code_\n", "sql2": "SELECT count(DISTINCT Status_of_Thing_Code)\nFROM Timed_Status_of_Things", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_and_lot/0010", "sql1": "\nSELECT DISTINCT `n` AS `count_distinct_t2_location_code_`\nFROM\n  (SELECT `LHS`.`thing_id` AS `thing_id`,\n          `LHS`.`organization_id` AS `organization_id`,\n          `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `LHS`.`service_details` AS `service_details`,\n          `LHS`.`date_and_time` AS `date_and_time`,\n          `LHS`.`location_code` AS `location_code`,\n          `LHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`thing_id` AS `thing_id`,\n             `LHS`.`organization_id` AS `organization_id`,\n             `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n             `LHS`.`service_type_code` AS `service_type_code`,\n             `LHS`.`service_details` AS `service_details`,\n             `LHS`.`date_and_time` AS `date_and_time`,\n             `LHS`.`location_code` AS `location_code`,\n             `RHS`.`n` AS `n`\n      FROM\n        (SELECT `LHS`.`thing_id` AS `thing_id`,\n                `LHS`.`organization_id` AS `organization_id`,\n                `LHS`.`type_of_thing_code` AS `type_of_thing_code`,\n                `LHS`.`service_type_code` AS `service_type_code`,\n                `LHS`.`service_details` AS `service_details`,\n                `RHS`.`date_and_time` AS `date_and_time`,\n                `RHS`.`location_code` AS `location_code`\n         FROM `things` AS `LHS`\n         INNER JOIN `timed_locations_of_things` AS `RHS` ON (`LHS`.`thing_id` = `RHS`.`thing_id`)) AS `LHS`\n      INNER JOIN\n        (SELECT `service_details`,\n                COUNT(*) AS `n`\n         FROM `things`\n         GROUP BY `service_details`) AS `RHS` ON (`LHS`.`service_details` = `RHS`.`service_details`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `service_details`,\n                COUNT(*) AS `n`\n         FROM `things`\n         GROUP BY `service_details`)\n      WHERE (`service_details` != 'Unsatisfied')) AS RHS ON (LHS.service_details = RHS.service_details\n                                                             AND LHS.n = RHS.n))\nORDER BY count_distinct_t2_location_code_\n", "sql2": "SELECT count(DISTINCT T2.Location_Code)\nFROM Things AS T1\nJOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id\nWHERE T1.service_details = 'Unsatisfied'", "schema": "spider/local_govt_and_lot/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_and_lot/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0009", "sql1": "\nSELECT publisher\nFROM book_club\nWHERE (YEAR != 1989\n       AND YEAR = 1990)\nORDER BY publisher\n", "sql2": "SELECT publisher\nFROM book_club\nWHERE YEAR = 1989 INTERSECT\n  SELECT publisher\n  FROM book_club WHERE YEAR = 1990", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0013", "sql1": "\nSELECT title,\n       director\nFROM\n  (SELECT movie_id,\n          title,\n          YEAR,\n          director,\n          budget_million,\n          gross_worldwide,\n          MAX(gross_worldwide) OVER () AS maxgross_worldwide\n   FROM movie)\nWHERE (maxgross_worldwide <= 2000\n       OR maxgross_worldwide = gross_worldwide)\nORDER BY title\n", "sql2": "SELECT title,\n       director\nFROM movie\nWHERE YEAR <= 2000\nORDER BY gross_worldwide DESC\nLIMIT 1", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0005", "sql1": "\nSELECT publisher,\n       n AS count___\nFROM\n  (SELECT publisher,\n          COUNT(*) AS n\n   FROM book_club\n   GROUP BY publisher)\nORDER BY publisher\n", "sql2": "SELECT publisher,\n       count(*)\nFROM book_club\nGROUP BY publisher", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0004", "sql1": "\nSELECT YEAR,\n       book_title,\n       publisher\nFROM book_club\nORDER BY YEAR\n", "sql2": "SELECT YEAR,\n       book_title,\n       publisher\nFROM book_club\nORDER BY YEAR DESC", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0012", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT director) OVER () AS count__distinct_director_\nFROM movie\nORDER BY count__distinct_director_\n", "sql2": "SELECT COUNT (DISTINCT director)\nFROM movie", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0008", "sql1": "\nSELECT category\nFROM\n  (SELECT category,\n          YEAR,\n          COUNT(DISTINCT YEAR) AS n_distinct\n   FROM\n     (SELECT *\n      FROM book_club\n      WHERE (YEAR != 1989\n             OR YEAR < 2))\n   GROUP BY category,\n            YEAR)\nORDER BY category\n", "sql2": "SELECT category\nFROM book_club\nWHERE YEAR > 1989\nGROUP BY category\nHAVING count(*) >= 2", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0015", "sql1": "\nSELECT director\nFROM movie\nWHERE (YEAR < 1999\n       OR YEAR <= 2000)\nORDER BY director\n", "sql2": "SELECT director\nFROM movie\nWHERE YEAR = 1999\n  OR YEAR = 2000", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0003", "sql1": "\nSELECT DISTINCT publisher\nFROM book_club\nORDER BY publisher\n", "sql2": "SELECT DISTINCT publisher\nFROM book_club", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0002", "sql1": "\nSELECT book_title,\n       author_or_editor\nFROM book_club\nWHERE (YEAR != 1989)\nORDER BY book_title\n", "sql2": "SELECT book_title,\n       author_or_editor\nFROM book_club\nWHERE YEAR > 1989", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM book_club\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM book_club", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0007", "sql1": "\nSELECT category,\n       n AS count___\nFROM\n  (SELECT category,\n          YEAR,\n          COUNT(*) AS n\n   FROM book_club\n   GROUP BY category,\n            YEAR)\nORDER BY category\n", "sql2": "SELECT category,\n       count(*)\nFROM book_club\nGROUP BY category", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0011", "sql1": "\nSELECT title,\n       YEAR,\n       director\nFROM movie\nORDER BY title\n", "sql2": "SELECT title,\n       YEAR,\n       director\nFROM movie\nORDER BY budget_million", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/culture_company/0006", "sql1": "\nSELECT publisher\nFROM\n  (SELECT book_club_id,\n          maxn,\n          publisher,\n          book_club_id AS n\n   FROM\n     (SELECT LHS.book_club_id AS book_club_id,\n             LHS.maxn AS maxn,\n             RHS.publisher AS publisher\n      FROM\n        (SELECT book_club_id,\n                MAX(n) AS maxn\n         FROM\n           (SELECT book_club_id,\n                   publisher,\n                   COUNT(*) AS n\n            FROM book_club\n            GROUP BY book_club_id,\n                     publisher)\n         GROUP BY book_club_id) AS LHS\n      INNER JOIN\n        (SELECT book_club_id,\n                publisher,\n                COUNT(*) AS n\n         FROM book_club\n         GROUP BY book_club_id,\n                  publisher) AS RHS ON (LHS.book_club_id = RHS.n\n                                        AND LHS.maxn = RHS.book_club_id)))\nORDER BY publisher\n", "sql2": "SELECT publisher\nFROM book_club\nGROUP BY publisher\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/culture_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0009", "sql1": "\nSELECT name\nFROM pilot\nWHERE (age <= 30)\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nWHERE Age <= 30\nORDER BY Name DESC", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0004", "sql1": "\nSELECT `international_passengers`,\n       `domestic_passengers`\nFROM `airport`\nWHERE (`airport_name` = 'London Heathrow')\nORDER BY international_passengers\n", "sql2": "SELECT International_Passengers,\n       Domestic_Passengers\nFROM airport\nWHERE Airport_Name = 'London Heathrow'", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0008", "sql1": "\nSELECT name\nFROM pilot\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nORDER BY Name ASC", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0003", "sql1": "\nSELECT meaninternational_passengers AS avg_international_passengers_\nFROM\n  (SELECT AVG(international_passengers) AS meaninternational_passengers\n   FROM airport)\nORDER BY avg_international_passengers_\n", "sql2": "SELECT avg(International_Passengers)\nFROM airport", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0002", "sql1": "\nSELECT description\nFROM aircraft\nORDER BY description\n", "sql2": "SELECT Description\nFROM aircraft", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM aircraft\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM aircraft", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0016", "sql1": "\nSELECT name\nFROM pilot\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nORDER BY Age DESC", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0007", "sql1": "\nSELECT name\nFROM pilot\nWHERE (age >= 25)\nORDER BY name\n", "sql2": "SELECT Name\nFROM pilot\nWHERE Age >= 25", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0011", "sql1": "\nSELECT aircraft,\n       description\nFROM\n  (SELECT LHS.aircraft_id AS aircraft_id,\n          LHS.aircraft AS aircraft,\n          LHS.description AS description,\n          LHS.max_gross_weight AS max_gross_weight,\n          LHS.total_disk_area AS total_disk_area,\n          LHS.max_disk_loading AS max_disk_loading,\n          LHS.airport_id AS airport_id,\n          LHS.airport_name AS airport_name,\n          LHS.total_passengers AS total_passengers,\n          LHS.col___change_2007 AS col___change_2007,\n          LHS.international_passengers AS international_passengers,\n          LHS.domestic_passengers AS domestic_passengers,\n          LHS.transit_passengers AS transit_passengers,\n          LHS.aircraft_movements AS aircraft_movements,\n          LHS.freight_metric_tonnes AS freight_metric_tonnes,\n          LHS.id AS id\n   FROM\n     (SELECT LHS.aircraft_id AS aircraft_id,\n             LHS.aircraft AS aircraft,\n             LHS.description AS description,\n             LHS.max_gross_weight AS max_gross_weight,\n             LHS.total_disk_area AS total_disk_area,\n             LHS.max_disk_loading AS max_disk_loading,\n             LHS.airport_id AS airport_id,\n             LHS.airport_name AS airport_name,\n             LHS.total_passengers AS total_passengers,\n             LHS.col___change_2007 AS col___change_2007,\n             LHS.international_passengers AS international_passengers,\n             LHS.domestic_passengers AS domestic_passengers,\n             LHS.transit_passengers AS transit_passengers,\n             LHS.aircraft_movements AS aircraft_movements,\n             LHS.freight_metric_tonnes AS freight_metric_tonnes,\n             RHS.id AS id\n      FROM\n        (SELECT LHS.aircraft_id AS aircraft_id,\n                LHS.aircraft AS aircraft,\n                LHS.description AS description,\n                LHS.max_gross_weight AS max_gross_weight,\n                LHS.total_disk_area AS total_disk_area,\n                LHS.max_disk_loading AS max_disk_loading,\n                RHS.airport_id AS airport_id,\n                RHS.airport_name AS airport_name,\n                RHS.total_passengers AS total_passengers,\n                RHS.col___change_2007 AS col___change_2007,\n                RHS.international_passengers AS international_passengers,\n                RHS.domestic_passengers AS domestic_passengers,\n                RHS.transit_passengers AS transit_passengers,\n                RHS.aircraft_movements AS aircraft_movements,\n                RHS.freight_metric_tonnes AS freight_metric_tonnes\n         FROM aircraft AS LHS\n         CROSS JOIN airport AS RHS) AS LHS\n      INNER JOIN airport_aircraft AS RHS ON (LHS.aircraft_id = RHS.aircraft_id\n                                                AND LHS.airport_id = RHS.airport_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM airport\n      WHERE (total_passengers > 10000000.0)) AS RHS ON (LHS.airport_id = RHS.airport_id\n                                                        AND LHS.airport_name = RHS.airport_name\n                                                        AND LHS.total_passengers = RHS.total_passengers\n                                                        AND LHS.col___change_2007 = RHS.col___change_2007\n                                                        AND LHS.international_passengers = RHS.international_passengers\n                                                        AND LHS.domestic_passengers = RHS.domestic_passengers\n                                                        AND LHS.transit_passengers = RHS.transit_passengers\n                                                        AND LHS.aircraft_movements = RHS.aircraft_movements\n                                                        AND LHS.freight_metric_tonnes = RHS.freight_metric_tonnes))\nORDER BY aircraft\n", "sql2": "SELECT T1.Aircraft,\n       T1.Description\nFROM aircraft AS T1\nJOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID\nWHERE T3.Total_Passengers > 10000000", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/aircraft/0010", "sql1": "\nSELECT `aircraft`\nFROM\n  (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,\n          `LHS`.`aircraft` AS `aircraft`,\n          `LHS`.`description` AS `description`,\n          `LHS`.`max_gross_weight` AS `max_gross_weight`,\n          `LHS`.`total_disk_area` AS `total_disk_area`,\n          `LHS`.`max_disk_loading` AS `max_disk_loading`,\n          `LHS`.`id` AS `id`,\n          `LHS`.`airport_id` AS `airport_id`,\n          `RHS`.`airport_name` AS `airport_name`,\n          `RHS`.`total_passengers` AS `total_passengers`,\n          `RHS`.`col___change_2007` AS `col___change_2007`,\n          `RHS`.`international_passengers` AS `international_passengers`,\n          `RHS`.`domestic_passengers` AS `domestic_passengers`,\n          `RHS`.`transit_passengers` AS `transit_passengers`,\n          `RHS`.`aircraft_movements` AS `aircraft_movements`,\n          `RHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`\n   FROM\n     (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,\n             `LHS`.`aircraft` AS `aircraft`,\n             `LHS`.`description` AS `description`,\n             `LHS`.`max_gross_weight` AS `max_gross_weight`,\n             `LHS`.`total_disk_area` AS `total_disk_area`,\n             `LHS`.`max_disk_loading` AS `max_disk_loading`,\n             `RHS`.`id` AS `id`,\n             `RHS`.`airport_id` AS `airport_id`\n      FROM `aircraft` AS `LHS`\n      INNER JOIN `airport_aircraft` AS `RHS` ON (`LHS`.`aircraft_id` = `RHS`.`aircraft_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `airport`\n      WHERE (`airport_name` = 'London Gatwick')) AS RHS ON (LHS.airport_id = RHS.airport_id))\nORDER BY aircraft\n", "sql2": "SELECT T1.Aircraft\nFROM aircraft AS T1\nJOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID\nJOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID\nWHERE T3.Airport_Name = 'London Gatwick'", "schema": "spider/aircraft/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/aircraft/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0013", "sql1": "\nSELECT title,\n       directed_by\nFROM film\nORDER BY title\n", "sql2": "SELECT title,\n       directed_by\nFROM film", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0004", "sql1": "\nSELECT name,\n       openning_year,\n       capacity\nFROM cinema\nORDER BY name\n", "sql2": "SELECT name,\n       openning_year,\n       capacity\nFROM cinema", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0015", "sql1": "\nSELECT directed_by,\n       n AS count___\nFROM\n  (SELECT directed_by,\n          COUNT(*) AS n\n   FROM film\n   GROUP BY directed_by)\nORDER BY directed_by\n", "sql2": "SELECT directed_by,\n       count(*)\nFROM film\nGROUP BY directed_by", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM cinema\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM cinema", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0014", "sql1": "\nSELECT DISTINCT directed_by\nFROM film\nORDER BY directed_by\n", "sql2": "SELECT DISTINCT directed_by\nFROM film", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0007", "sql1": "\nSELECT name,\n       openning_year\nFROM cinema\nORDER BY name\n", "sql2": "SELECT name,\n       openning_year\nFROM cinema\nORDER BY openning_year DESC", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0010", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM cinema\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       count(*)\nFROM cinema\nGROUP BY LOCATION", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cinema/0006", "sql1": "\nSELECT DISTINCT LOCATION\nFROM cinema\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM cinema", "schema": "spider/cinema/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0009", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT *\n   FROM `wine` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `grapes`\n           WHERE (`color` = 'Red')) AS RHS\n        WHERE (LHS.grape = RHS.grape) ))\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.Name\nFROM GRAPES AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nWHERE T1.Color = 'Red'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0005", "sql1": "\nSELECT name,\n       score\nFROM wine\nORDER BY name\n", "sql2": "SELECT Name,\n       Score\nFROM WINE", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0004", "sql1": "\nSELECT grape,\n       appelation\nFROM wine\nORDER BY grape\n", "sql2": "SELECT Grape,\n       Appelation\nFROM WINE", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0012", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `area`,\n          `county`,\n          COUNT(*) AS `n`\n   FROM `appellations`\n   GROUP BY `area`,\n            `county`)\nWHERE (`county` = 'Napa')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM APPELLATIONS\nWHERE County = 'Napa'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0032", "sql1": "\nSELECT winery\nFROM\n  (SELECT state,\n          winery,\n          COUNT(*) AS n\n   FROM wine\n   GROUP BY state,\n            winery)\nWHERE (n >= 4)\nORDER BY winery\n", "sql2": "SELECT Winery\nFROM WINE\nGROUP BY Winery\nHAVING count(*) >= 4", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0008", "sql1": "\nSELECT name\nFROM wine\nWHERE (score > 90)\nORDER BY name\n", "sql2": "SELECT Name\nFROM WINE\nWHERE score > 90", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0003", "sql1": "\nSELECT name\nFROM wine\nWHERE (YEAR = 2008)\nORDER BY name\n", "sql2": "SELECT Name\nFROM WINE\nWHERE YEAR = '2008'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0019", "sql1": "\nSELECT n AS count___,\n       grape\nFROM\n  (SELECT grape,\n          COUNT(*) AS n\n   FROM wine\n   GROUP BY grape)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       Grape\nFROM WINE\nGROUP BY Grape", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0023", "sql1": "\nSELECT DISTINCT name\nFROM wine\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nORDER BY price", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0022", "sql1": "\nSELECT DISTINCT name\nFROM wine\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nORDER BY Name", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0002", "sql1": "\nSELECT winery\nFROM\n  (SELECT LHS.no AS NO,\n          LHS.grape AS grape,\n          LHS.winery AS winery,\n          LHS.appelation AS appelation,\n          LHS.state AS state,\n          LHS.name AS name,\n          LHS.year AS YEAR,\n          LHS.price AS price,\n          LHS.score AS score,\n          LHS.cases AS cases,\n          LHS.drink AS drink\n   FROM wine AS LHS\n   INNER JOIN\n     (SELECT state,\n             MIN(score) AS score\n      FROM wine\n      GROUP BY state) AS RHS ON (LHS.state = RHS.state\n                                 AND LHS.score = RHS.score))\nORDER BY winery\n", "sql2": "SELECT Winery\nFROM WINE\nORDER BY SCORE\nLIMIT 1", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0014", "sql1": "\nSELECT `name`,\n       `score`\nFROM\n  (SELECT *\n   FROM `wine` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `grapes`\n           WHERE (`color` = 'White')) AS RHS\n        WHERE (LHS.grape = RHS.grape) ))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T2.Score\nFROM GRAPES AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nWHERE T1.Color = 'White'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0001", "sql1": "\nSELECT grape AS name\nFROM\n  (SELECT LHS.no AS NO,\n          LHS.grape AS grape,\n          LHS.winery AS winery,\n          LHS.appelation AS appelation,\n          LHS.state AS state,\n          LHS.name AS name,\n          LHS.year AS YEAR,\n          LHS.price AS price,\n          LHS.score AS score,\n          LHS.cases AS cases,\n          LHS.drink AS drink\n   FROM wine AS LHS\n   INNER JOIN\n     (SELECT state,\n             MIN(score) AS score\n      FROM wine\n      GROUP BY state) AS RHS ON (LHS.state = RHS.state\n                                 AND LHS.score = RHS.score))\nORDER BY name\n", "sql2": "SELECT Name\nFROM WINE\nORDER BY Score\nLIMIT 1", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0017", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`grape` AS `grape`,\n          `LHS`.`color` AS `color`,\n          `RHS`.`no` AS `no`,\n          `RHS`.`winery` AS `winery`,\n          `RHS`.`appelation` AS `appelation`,\n          `RHS`.`state` AS `state`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`price` AS `price`,\n          `RHS`.`score` AS `score`,\n          `RHS`.`cases` AS `cases`,\n          `RHS`.`drink` AS `drink`\n   FROM `grapes` AS `LHS`\n   INNER JOIN `wine` AS `RHS` ON (`LHS`.`grape` = `RHS`.`grape`))\nWHERE (`color` = 'Red'\n       AND price > 50)\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM Grapes AS T1\nJOIN WINE AS T2 ON T1.Grape = T2.Grape\nWHERE T1.Color = 'Red'\n  AND T2.price > 50", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0037", "sql1": "\nSELECT grape,\n       winery,\n       YEAR\nFROM wine\nWHERE (price > 100)\nORDER BY grape\n", "sql2": "SELECT Grape,\n       Winery,\n       YEAR\nFROM WINE\nWHERE Price > 100\nORDER BY YEAR", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0020", "sql1": "\nSELECT meanprice AS avg_price_,\n       YEAR\nFROM\n  (SELECT state,\n          YEAR,\n          AVG(price) AS meanprice\n   FROM wine\n   GROUP BY state,\n            YEAR)\nORDER BY avg_price_\n", "sql2": "SELECT avg(Price),\n       YEAR\nFROM WINE\nGROUP BY YEAR", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0027", "sql1": "\nSELECT DISTINCT winery\nFROM wine\nWHERE (price >= 50\n       AND price <= 100)\nORDER BY winery\n", "sql2": "SELECT DISTINCT Winery\nFROM WINE\nWHERE Price BETWEEN 50 AND 100", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0007", "sql1": "\nSELECT price\nFROM wine\nWHERE (YEAR <= 2010)\nORDER BY price\n", "sql2": "SELECT Price\nFROM WINE\nWHERE YEAR < 2010", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `wine`\nWHERE (`winery` = 'Robert Biale')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM WINE\nWHERE Winery = 'Robert Biale'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0010", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`no` AS `no`,\n          `LHS`.`appelation` AS `appelation`,\n          `LHS`.`county` AS `county`,\n          `LHS`.`state` AS `state`,\n          `LHS`.`area` AS `area`,\n          `LHS`.`isava` AS `isava`,\n          `RHS`.`no` AS `no_other`,\n          `RHS`.`grape` AS `grape`,\n          `RHS`.`winery` AS `winery`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`price` AS `price`,\n          `RHS`.`score` AS `score`,\n          `RHS`.`cases` AS `cases`,\n          `RHS`.`drink` AS `drink`\n   FROM `appellations` AS `LHS`\n   INNER JOIN `wine` AS `RHS` ON (`LHS`.`appelation` = `RHS`.`appelation`\n                                     AND `LHS`.`state` = `RHS`.`state`))\nWHERE (`area` = 'North Coast')\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.Name\nFROM APPELLATIONs AS T1\nJOIN WINE AS T2 ON T1.Appelation = T2.Appelation\nWHERE T1.Area = 'North Coast'", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0006", "sql1": "\nSELECT area,\n       county\nFROM appellations\nORDER BY area\n", "sql2": "SELECT Area,\n       County\nFROM APPELLATIONS", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wine_1/0026", "sql1": "\nSELECT name\nFROM wine\nWHERE (YEAR <= 2000\n       OR YEAR >= 2010)\nORDER BY name\n", "sql2": "SELECT DISTINCT Name\nFROM WINE\nWHERE YEAR < 2000\n  OR YEAR > 2010", "schema": "spider/wine_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/wine_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0013", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM gas_station\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       count(*)\nFROM gas_station\nGROUP BY LOCATION\nORDER BY count(*)", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0004", "sql1": "\nSELECT company,\n       headquarters\nFROM company\nORDER BY company\n", "sql2": "SELECT company,\n       headquarters\nFROM company\nORDER BY market_value DESC", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0008", "sql1": "\nSELECT main_industry,\n       summarket_value AS sum_market_value_\nFROM\n  (SELECT main_industry,\n          SUM(market_value) AS summarket_value\n   FROM company\n   GROUP BY main_industry)\nORDER BY main_industry\n", "sql2": "SELECT main_industry,\n       sum(market_value)\nFROM company\nGROUP BY main_industry", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0003", "sql1": "\nSELECT `company`,\n       `main_industry`\nFROM `company`\nWHERE (`headquarters` != 'USA')\nORDER BY company\n", "sql2": "SELECT company,\n       main_industry\nFROM company\nWHERE headquarters != 'USA'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0019", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LHS.station_id AS station_id,\n          LHS.open_year AS open_year,\n          LHS.location AS LOCATION,\n          LHS.manager_name AS manager_name,\n          LHS.vice_manager_name AS vice_manager_name,\n          LHS.representative_name AS representative_name,\n          LHS.company_id AS company_id,\n          LHS.rank_of_the_year AS rank_of_the_year,\n          RHS.rank AS rank,\n          RHS.company AS company,\n          RHS.headquarters AS headquarters,\n          RHS.main_industry AS main_industry,\n          RHS.sales_billion AS sales_billion,\n          RHS.profits_billion AS profits_billion,\n          RHS.assets_billion AS assets_billion,\n          RHS.market_value AS market_value\n   FROM\n     (SELECT LHS.station_id AS station_id,\n             LHS.open_year AS open_year,\n             LHS.location AS LOCATION,\n             LHS.manager_name AS manager_name,\n             LHS.vice_manager_name AS vice_manager_name,\n             LHS.representative_name AS representative_name,\n             RHS.company_id AS company_id,\n             RHS.rank_of_the_year AS rank_of_the_year\n      FROM gas_station AS LHS\n      INNER JOIN station_company AS RHS ON (LHS.station_id = RHS.station_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM company\n      WHERE (market_value > 100.0)) AS RHS ON (LHS.company_id = RHS.company_id))\nORDER BY LOCATION\n", "sql2": "SELECT T3.location\nFROM station_company AS T1\nJOIN company AS T2 ON T1.company_id = T2.company_id\nJOIN gas_station AS T3 ON T1.station_id = T3.station_id\nWHERE T2.market_value > 100", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0022", "sql1": "\nSELECT `rank`,\n       `company`,\n       `market_value`\nFROM `company`\nWHERE (`main_industry` = 'Banking')\nORDER BY rank\n", "sql2": "SELECT rank,\n       company,\n       market_value\nFROM company\nWHERE main_industry = 'Banking'\nORDER BY sales_billion,\n         profits_billion", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0018", "sql1": "\nSELECT `manager_name`\nFROM\n  (SELECT `LHS`.`company_id` AS `company_id`,\n          `LHS`.`rank` AS `rank`,\n          `LHS`.`company` AS `company`,\n          `LHS`.`headquarters` AS `headquarters`,\n          `LHS`.`main_industry` AS `main_industry`,\n          `LHS`.`sales_billion` AS `sales_billion`,\n          `LHS`.`profits_billion` AS `profits_billion`,\n          `LHS`.`assets_billion` AS `assets_billion`,\n          `LHS`.`market_value` AS `market_value`,\n          `LHS`.`station_id` AS `station_id`,\n          `LHS`.`open_year` AS `open_year`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`manager_name` AS `manager_name`,\n          `LHS`.`vice_manager_name` AS `vice_manager_name`,\n          `LHS`.`representative_name` AS `representative_name`,\n          `LHS`.`rank_of_the_year` AS `rank_of_the_year`\n   FROM\n     (SELECT `LHS`.`company_id` AS `company_id`,\n             `LHS`.`rank` AS `rank`,\n             `LHS`.`company` AS `company`,\n             `LHS`.`headquarters` AS `headquarters`,\n             `LHS`.`main_industry` AS `main_industry`,\n             `LHS`.`sales_billion` AS `sales_billion`,\n             `LHS`.`profits_billion` AS `profits_billion`,\n             `LHS`.`assets_billion` AS `assets_billion`,\n             `LHS`.`market_value` AS `market_value`,\n             `LHS`.`station_id` AS `station_id`,\n             `LHS`.`open_year` AS `open_year`,\n             `LHS`.`location` AS `location`,\n             `LHS`.`manager_name` AS `manager_name`,\n             `LHS`.`vice_manager_name` AS `vice_manager_name`,\n             `LHS`.`representative_name` AS `representative_name`,\n             `RHS`.`rank_of_the_year` AS `rank_of_the_year`\n      FROM\n        (SELECT `LHS`.`company_id` AS `company_id`,\n                `LHS`.`rank` AS `rank`,\n                `LHS`.`company` AS `company`,\n                `LHS`.`headquarters` AS `headquarters`,\n                `LHS`.`main_industry` AS `main_industry`,\n                `LHS`.`sales_billion` AS `sales_billion`,\n                `LHS`.`profits_billion` AS `profits_billion`,\n                `LHS`.`assets_billion` AS `assets_billion`,\n                `LHS`.`market_value` AS `market_value`,\n                `RHS`.`station_id` AS `station_id`,\n                `RHS`.`open_year` AS `open_year`,\n                `RHS`.`location` AS `location`,\n                `RHS`.`manager_name` AS `manager_name`,\n                `RHS`.`vice_manager_name` AS `vice_manager_name`,\n                `RHS`.`representative_name` AS `representative_name`\n         FROM `company` AS `LHS`\n         CROSS JOIN `gas_station` AS `RHS`) AS `LHS`\n      INNER JOIN `station_company` AS `RHS` ON (`LHS`.`company_id` = `RHS`.`company_id`\n                                                   AND `LHS`.`station_id` = `RHS`.`station_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `company`\n      WHERE (`company` = 'ExxonMobil')) AS RHS ON (LHS.company_id = RHS.company_id\n                                                   AND LHS.rank = RHS.rank\n                                                   AND LHS.company = RHS.company\n                                                   AND LHS.headquarters = RHS.headquarters\n                                                   AND LHS.main_industry = RHS.main_industry\n                                                   AND LHS.sales_billion = RHS.sales_billion\n                                                   AND LHS.profits_billion = RHS.profits_billion\n                                                   AND LHS.assets_billion = RHS.assets_billion\n                                                   AND LHS.market_value = RHS.market_value))\nORDER BY manager_name\n", "sql2": "SELECT T3.manager_name\nFROM station_company AS T1\nJOIN company AS T2 ON T1.company_id = T2.company_id\nJOIN gas_station AS T3 ON T1.station_id = T3.station_id\nWHERE T2.company = 'ExxonMobil'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0002", "sql1": "\nSELECT company,\n       rank\nFROM company\nORDER BY company\n", "sql2": "SELECT company,\n       rank\nFROM company\nORDER BY Sales_billion DESC", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0014", "sql1": "\nSELECT `headquarters`\nFROM `company`\nWHERE (`main_industry` = 'Banking'\n       AND `main_industry` != 'Oil and gas')\nORDER BY headquarters\n", "sql2": "SELECT headquarters\nFROM company\nWHERE main_industry = 'Banking' INTERSECT\n  SELECT headquarters\n  FROM company WHERE main_industry = 'Oil and gas'", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM company\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM company", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0017", "sql1": "\nSELECT company,\n       main_industry\nFROM\n  (SELECT *\n   FROM company AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM station_company AS RHS\n        WHERE (LHS.company_id = RHS.company_id) ))\nORDER BY company\n", "sql2": "SELECT company,\n       main_industry\nFROM company\nWHERE company_id NOT IN\n    (SELECT company_id\n     FROM station_company)", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0021", "sql1": "\nSELECT LOCATION\nFROM gas_station\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM gas_station\nORDER BY open_year", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0016", "sql1": "\nSELECT company,\n       n AS count___\nFROM\n  (SELECT company,\n          profits_billion,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.rank AS rank,\n             LHS.company AS company,\n             LHS.headquarters AS headquarters,\n             LHS.main_industry AS main_industry,\n             LHS.sales_billion AS sales_billion,\n             LHS.profits_billion AS profits_billion,\n             LHS.assets_billion AS assets_billion,\n             LHS.market_value AS market_value,\n             RHS.station_id AS station_id,\n             RHS.rank_of_the_year AS rank_of_the_year\n      FROM company AS LHS\n      INNER JOIN station_company AS RHS ON (LHS.company_id = RHS.company_id))\n   GROUP BY company,\n            profits_billion)\nORDER BY company\n", "sql2": "SELECT T2.company,\n       count(*)\nFROM station_company AS T1\nJOIN company AS T2 ON T1.company_id = T2.company_id\nGROUP BY T1.company_id", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0007", "sql1": "\nSELECT headquarters,\n       n AS count___\nFROM\n  (SELECT headquarters,\n          COUNT(*) AS n\n   FROM company\n   GROUP BY headquarters)\nORDER BY headquarters\n", "sql2": "SELECT headquarters,\n       count(*)\nFROM company\nGROUP BY headquarters", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0011", "sql1": "\nSELECT station_id,\n       LOCATION,\n       manager_name\nFROM gas_station\nORDER BY station_id\n", "sql2": "SELECT station_id,\n       LOCATION,\n       manager_name\nFROM gas_station\nORDER BY open_year", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gas_company/0006", "sql1": "\nSELECT DISTINCT main_industry\nFROM company\nORDER BY main_industry\n", "sql2": "SELECT DISTINCT main_industry\nFROM company", "schema": "spider/gas_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0009", "sql1": "\nSELECT `age`\nFROM `person`\nWHERE (`job` = 'doctor'\n       OR `name` = 'Zach')\nORDER BY age\n", "sql2": "SELECT age\nFROM Person\nWHERE job = 'doctor'\n  AND name = 'Zach'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0025", "sql1": "\nSELECT friend AS name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          LHS.gender AS gender,\n          LHS.job AS job,\n          RHS.friend AS friend,\n          RHS.year AS YEAR\n   FROM\n     (SELECT *\n      FROM person\n      WHERE (age < 40\n             AND age <= 30)) AS LHS\n   INNER JOIN personfriend AS RHS ON (LHS.name = RHS.name))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend IN\n    (SELECT name\n     FROM Person\n     WHERE age > 40)\nEXCEPT\nSELECT T1.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend IN\n    (SELECT name\n     FROM Person\n     WHERE age < 30)", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0033", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`year` AS `year`\n   FROM\n     (SELECT *\n      FROM `person`\n      WHERE (`city` = 'new york city')) AS LHS\n   INNER JOIN personfriend AS RHS ON (LHS.name = RHS.friend))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.friend\nWHERE T1.city = 'new york city'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0013", "sql1": "\nSELECT meanage AS avg_age_,\n       job\nFROM\n  (SELECT gender,\n          job,\n          AVG(age) AS meanage\n   FROM person\n   GROUP BY gender,\n            job)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       job\nFROM Person\nGROUP BY job", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0005", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT job) OVER () AS count_distinct_job_\nFROM person\nORDER BY count_distinct_job_\n", "sql2": "SELECT count(DISTINCT job)\nFROM Person", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0029", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `person` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `personfriend`\n           WHERE (`friend` = 'Bob')) AS RHS\n        WHERE (LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Bob'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0028", "sql1": "\nSELECT `friend`\nFROM\n  (SELECT *\n   FROM `personfriend` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `person`\n           WHERE (`name` != 'Bob')) AS RHS\n        WHERE (LHS.name = RHS.name) ))\nORDER BY friend\n", "sql2": "SELECT T2.friend\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T1.name = 'Bob'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0004", "sql1": "\nSELECT n AS count_distinct_city_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM person)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM Person", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0012", "sql1": "\nSELECT meanage AS avg_age_,\n       gender\nFROM\n  (SELECT gender,\n          AVG(age) AS meanage\n   FROM person\n   GROUP BY gender)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       gender\nFROM Person\nGROUP BY gender", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0008", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`age` AS `age_other`,\n          `RHS`.`minage` AS `minage`\n   FROM `person` AS `LHS`\n   INNER JOIN\n     (SELECT `age`,\n             `gender`,\n             MIN(`age`) AS `minage`\n      FROM `person`\n      GROUP BY `age`,\n               `gender`) AS `RHS` ON (`LHS`.`gender` = `RHS`.`gender`))\nWHERE (`gender` = 'male'\n       AND minage > age)\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE gender = 'male'\n  AND age =\n    (SELECT min(age)\n     FROM person\n     WHERE gender = 'male' )", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0042", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_name_\nFROM\n  (SELECT LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          LHS.gender AS gender,\n          LHS.job AS job,\n          RHS.name AS name_other,\n          RHS.friend AS friend,\n          RHS.year AS YEAR,\n          RHS.n_distinct AS n_distinct\n   FROM person AS LHS\n   CROSS JOIN\n     (SELECT name,\n             friend,\n             YEAR,\n             COUNT(DISTINCT name) OVER () AS n_distinct\n      FROM personfriend) AS RHS)\nWHERE (name != city\n       OR city = name_other)\nORDER BY count_distinct_name_\n", "sql2": "SELECT count(DISTINCT name)\nFROM PersonFriend\nWHERE friend NOT IN\n    (SELECT name\n     FROM person\n     WHERE city = 'Austin')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0015", "sql1": "\nSELECT age AS min_age_,\n       job\nFROM\n  (SELECT job,\n          MIN(age) AS age\n   FROM person\n   GROUP BY job)\nORDER BY min_age_\n", "sql2": "SELECT min(age),\n       job\nFROM Person\nGROUP BY job", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0003", "sql1": "\nSELECT meanage AS avg_age_\nFROM\n  (SELECT AVG(age) AS meanage\n   FROM person)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age)\nFROM Person", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0039", "sql1": "\nSELECT `name`,\n       `age`,\n       `job`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `LHS`.`friend` AS `friend`,\n          `LHS`.`year` AS `year`,\n          `RHS`.`maxyear` AS `maxyear`\n   FROM\n     (SELECT `LHS`.`name` AS `name`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`gender` AS `gender`,\n             `LHS`.`job` AS `job`,\n             `RHS`.`friend` AS `friend`,\n             `RHS`.`year` AS `year`\n      FROM `person` AS `LHS`\n      INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`)) AS `LHS`\n   INNER JOIN\n     (SELECT `name`,\n             `year`,\n             MAX(`year`) AS `maxyear`\n      FROM `personfriend`\n      WHERE (`friend` = 'Alice')\n      GROUP BY name,\n               YEAR) AS RHS ON (LHS.name = RHS.name\n                                AND LHS.year = RHS.year))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.age,\n       T1.job\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Alice'\n  AND T2.year =\n    (SELECT max(YEAR)\n     FROM PersonFriend\n     WHERE friend = 'Alice')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0019", "sql1": "\nSELECT name,\n       job\nFROM person\nORDER BY name\n", "sql2": "SELECT name,\n       job\nFROM Person\nORDER BY name", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0023", "sql1": "\nSELECT `name`,\n       `age`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`friend` AS `friend`,\n          `RHS`.`year` AS `year`\n   FROM `person` AS `LHS`\n   INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`))\nWHERE (`friend` = 'Dan'\n       AND `friend` != 'Alice')\nORDER BY name\n", "sql2": "SELECT DISTINCT T1.name,\n                T1.age\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Dan'\n  OR T2.friend = 'Alice'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0034", "sql1": "\nSELECT friend AS name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM personfriend AS LHS\n         WHERE EXISTS\n             (SELECT 1\n              FROM\n                (SELECT name,\n                        age,\n                        city,\n                        gender,\n                        job,\n                        AVG(age) OVER () AS meanage\n                 FROM person) AS RHS\n              WHERE (LHS.name = RHS.name) ))\n      ORDER BY friend DESC)\n   LIMIT 1)\n", "sql2": "SELECT DISTINCT T2.name\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.friend\nWHERE T1.age <\n    (SELECT avg(age)\n     FROM person)", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0022", "sql1": "\nSELECT `name`,\n       `age`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`friend` AS `friend`,\n          `RHS`.`year` AS `year`\n   FROM `person` AS `LHS`\n   INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`))\nWHERE (`friend` = 'Dan'\n       AND `friend` != 'Alice')\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.age\nFROM Person AS T1\nJOIN PersonFriend AS T2 ON T1.name = T2.name\nWHERE T2.friend = 'Dan' INTERSECT\n  SELECT T1.name,\n         T1.age\n  FROM Person AS T1\n  JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0038", "sql1": "\nSELECT `name`\nFROM `personfriend`\nWHERE (`friend` = 'Alice')\nORDER BY name\n", "sql2": "SELECT name\nFROM PersonFriend\nWHERE friend = 'Alice'\n  AND YEAR =\n    (SELECT min(YEAR)\n     FROM PersonFriend\n     WHERE friend = 'Alice')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0002", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `name`,\n          `age`,\n          `city`,\n          `gender`,\n          `job`,\n          COUNT(DISTINCT `gender`) OVER () AS `n_distinct`\n   FROM `person`)\nWHERE (`gender` = 'female')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Person\nWHERE gender = 'female'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0014", "sql1": "\nSELECT `meanage` AS `avg_age_`,\n       `job`\nFROM\n  (SELECT `gender`,\n          `job`,\n          AVG(`age`) AS `meanage`\n   FROM `person`\n   GROUP BY `gender`,\n            `job`)\nWHERE (`gender` = 'male')\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       job\nFROM Person\nWHERE gender = 'male'\nGROUP BY job", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0043", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`year` AS `year`\n   FROM\n     (SELECT *\n      FROM `person`\n      WHERE (`name` = 'Alice')) AS LHS\n   INNER JOIN personfriend AS RHS ON (LHS.name = RHS.friend))\nORDER BY name\n", "sql2": "SELECT DISTINCT T4.name\nFROM PersonFriend AS T1\nJOIN Person AS T2 ON T1.name = T2.name\nJOIN PersonFriend AS T3 ON T1.friend = T3.name\nJOIN PersonFriend AS T4 ON T3.friend = T4.name\nWHERE T2.name = 'Alice'\n  AND T4.name != 'Alice'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0017", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`name` AS `name`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`job` AS `job`,\n          `LHS`.`minjob` AS `minjob`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`city` AS `city_other`,\n          `RHS`.`gender` AS `gender_other`,\n          `RHS`.`minjob` AS `minjob_other`\n   FROM\n     (SELECT `name`,\n             `age`,\n             `city`,\n             `gender`,\n             `job`,\n             MIN(`job`) OVER () AS `minjob`\n      FROM `person`\n      WHERE (`job` != 'engineer')) AS `LHS`\n   INNER JOIN\n     (SELECT `name`,\n             `age`,\n             `city`,\n             `gender`,\n             `job`,\n             MIN(`job`) OVER () AS `minjob`\n      FROM `person`\n      WHERE (`job` != 'engineer')) AS RHS ON (LHS.age = RHS.age\n                                              AND LHS.minjob = RHS.job))\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE age >\n    (SELECT min(age)\n     FROM person\n     WHERE job = 'engineer')\nORDER BY age", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0040", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM person AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM personfriend AS RHS\n        WHERE (LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM person\nEXCEPT\nSELECT name\nFROM PersonFriend", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0021", "sql1": "\nSELECT `name`\nFROM `person`\nWHERE (`gender` = 'male')\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE gender = 'male'\nORDER BY age", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0020", "sql1": "\nSELECT name\nFROM person\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nORDER BY age DESC", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0036", "sql1": "\nSELECT `friend`\nFROM\n  (SELECT `name`,\n          `friend`,\n          `year`,\n          MAX(`year`) OVER () AS `maxyear`\n   FROM `personfriend`)\nWHERE (`name` = 'Zach'\n       AND maxyear = YEAR)\nORDER BY friend\n", "sql2": "SELECT friend\nFROM PersonFriend\nWHERE name = 'Zach'\n  AND YEAR =\n    (SELECT max(YEAR)\n     FROM PersonFriend\n     WHERE name = 'Zach')", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0016", "sql1": "\nSELECT DISTINCT n AS count___,\n                gender\nFROM\n  (SELECT gender,\n          job,\n          COUNT(*) AS n\n   FROM person\n   GROUP BY gender,\n            job)\nWHERE (n < 40)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       gender\nFROM Person\nWHERE age < 40\nGROUP BY gender", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0027", "sql1": "\nSELECT name\nFROM\n  (SELECT name,\n          COUNT(*) AS n\n   FROM personfriend\n   GROUP BY name)\nWHERE (n <= 1)\nORDER BY name\n", "sql2": "SELECT name\nFROM PersonFriend\nGROUP BY name\nHAVING count(*) = 1", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0011", "sql1": "\nSELECT COUNT(*) OVER () AS `count___`\nFROM `person`\nWHERE (`job` != 'engineer'\n       AND age >= 30)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Person\nWHERE age > 30\n  AND job = 'engineer'", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0010", "sql1": "\nSELECT name\nFROM person\nWHERE (age < 30)\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE age < 30", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/network_2/0006", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.age AS age,\n          LHS.city AS city,\n          LHS.gender AS gender,\n          LHS.job AS job,\n          RHS.name AS name_other,\n          RHS.age AS age_other,\n          RHS.city AS city_other,\n          RHS.gender AS gender_other,\n          RHS.job AS job_other\n   FROM person AS LHS\n   CROSS JOIN\n     (SELECT name,\n             MAX(age) OVER () AS age,\n                           city,\n                           gender,\n                           job\n      FROM person) AS RHS)\nWHERE (age >= age_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM Person\nWHERE age =\n    (SELECT max(age)\n     FROM person)", "schema": "spider/network_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0009", "sql1": "\nSELECT player,\n       years_played\nFROM player\nORDER BY player\n", "sql2": "SELECT Player,\n       Years_Played\nFROM player", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0025", "sql1": "\nSELECT college\nFROM\n  (SELECT college,\n          COUNT(*) AS n\n   FROM match_season\n   GROUP BY college)\nWHERE (n = 2)\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nGROUP BY College\nHAVING count(*) >= 2", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0013", "sql1": "\nSELECT DISTINCT `position`\nFROM\n  (SELECT `country_id`,\n          `country_name`,\n          `capital`,\n          `official_native_language`,\n          `season`,\n          `player`,\n          `position`,\n          `team`,\n          `draft_pick_number`,\n          `draft_class`,\n          `college`,\n          `country_id` AS `country`\n   FROM\n     (SELECT `LHS`.`country_id` AS `country_id`,\n             `LHS`.`country_name` AS `country_name`,\n             `LHS`.`capital` AS `capital`,\n             `LHS`.`official_native_language` AS `official_native_language`,\n             `RHS`.`season` AS `season`,\n             `RHS`.`player` AS `player`,\n             `RHS`.`position` AS `position`,\n             `RHS`.`team` AS `team`,\n             `RHS`.`draft_pick_number` AS `draft_pick_number`,\n             `RHS`.`draft_class` AS `draft_class`,\n             `RHS`.`college` AS `college`\n      FROM `country` AS `LHS`\n      INNER JOIN `match_season` AS `RHS` ON (`LHS`.`country_id` = `RHS`.`country`)))\nWHERE (`capital` = 'Dublin')\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT T2.Position\nFROM country AS T1\nJOIN match_season AS T2 ON T1.Country_id = T2.Country\nWHERE T1.Capital = 'Dublin'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0005", "sql1": "\nSELECT `player`\nFROM\n  (SELECT `LHS`.`season` AS `season`,\n          `LHS`.`player` AS `player`,\n          `LHS`.`position` AS `position`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`team` AS `team`,\n          `LHS`.`draft_pick_number` AS `draft_pick_number`,\n          `LHS`.`draft_class` AS `draft_class`,\n          `LHS`.`college` AS `college`,\n          `RHS`.`player_id` AS `player_id`,\n          `RHS`.`years_played` AS `years_played`,\n          `RHS`.`total_wl` AS `total_wl`,\n          `RHS`.`singles_wl` AS `singles_wl`,\n          `RHS`.`doubles_wl` AS `doubles_wl`\n   FROM\n     (SELECT *\n      FROM `match_season`\n      WHERE (`college` = 'UCLA')) AS LHS\n   LEFT JOIN player AS RHS ON (LHS.player = RHS.player\n                                  AND LHS.team = RHS.team))\nORDER BY player\n", "sql2": "SELECT Player\nFROM match_season\nWHERE College = 'UCLA'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0029", "sql1": "\nSELECT DISTINCT `college_other` AS `college`\nFROM\n  (SELECT `season`,\n          `player`,\n          `position`,\n          `country`,\n          `team`,\n          `team` AS `draft_pick_number`,\n          `draft_class`,\n          `college`,\n          `season_other`,\n          `player_other`,\n          `position_other`,\n          `team_other`,\n          `draft_class_other`,\n          `college_other`\n   FROM\n     (SELECT `LHS`.`season` AS `season`,\n             `LHS`.`player` AS `player`,\n             `LHS`.`position` AS `position`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`team` AS `team`,\n             `LHS`.`draft_pick_number` AS `draft_pick_number`,\n             `LHS`.`draft_class` AS `draft_class`,\n             `LHS`.`college` AS `college`,\n             `RHS`.`season` AS `season_other`,\n             `RHS`.`player` AS `player_other`,\n             `RHS`.`position` AS `position_other`,\n             `RHS`.`team` AS `team_other`,\n             `RHS`.`draft_class` AS `draft_class_other`,\n             `RHS`.`college` AS `college_other`\n      FROM `match_season` AS `LHS`\n      INNER JOIN `match_season` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`\n                                                AND `LHS`.`team` = `RHS`.`draft_pick_number`)))\nWHERE (`position` = 'Midfielder'\n       AND `position` != 'Defender')\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nWHERE POSITION = 'Midfielder' INTERSECT\n  SELECT College\n  FROM match_season WHERE POSITION = 'Defender'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0004", "sql1": "\nSELECT DISTINCT POSITION\nFROM match_season\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT POSITION\nFROM match_season", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0024", "sql1": "\nSELECT DISTINCT college_other AS college\nFROM\n  (SELECT LHS.college AS college,\n          LHS.n AS n,\n          RHS.college AS college_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT college,\n             COUNT(*) AS n\n      FROM match_season\n      GROUP BY college) AS LHS\n   CROSS JOIN\n     (SELECT college,\n             COUNT(*) AS n\n      FROM match_season\n      GROUP BY college) AS RHS)\nWHERE (n < n_other)\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nGROUP BY College\nORDER BY count(*) DESC\nLIMIT 3", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0008", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT team) OVER () AS count_distinct_team_\nFROM match_season\nORDER BY count_distinct_team_\n", "sql2": "SELECT count(DISTINCT Team)\nFROM match_season", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0015", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `position`) OVER () AS `count_distinct_t1_official_native_language_`\nFROM\n  (SELECT `LHS`.`country_id` AS `country_id`,\n          `LHS`.`country_name` AS `country_name`,\n          `LHS`.`capital` AS `capital`,\n          `LHS`.`official_native_language` AS `official_native_language`,\n          `RHS`.`season` AS `season`,\n          `RHS`.`player` AS `player`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`team` AS `team`,\n          `RHS`.`draft_pick_number` AS `draft_pick_number`,\n          `RHS`.`draft_class` AS `draft_class`,\n          `RHS`.`college` AS `college`\n   FROM `country` AS `LHS`\n   CROSS JOIN `match_season` AS `RHS`)\nWHERE (`position` != 'Defender')\nORDER BY count_distinct_t1_official_native_language_\n", "sql2": "SELECT count(DISTINCT T1.Official_native_language)\nFROM country AS T1\nJOIN match_season AS T2 ON T1.Country_id = T2.Country\nWHERE T2.Position = 'Defender'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0019", "sql1": "\nSELECT `player`,\n       `years_played`\nFROM\n  (SELECT `LHS`.`team_id` AS `team_id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`player_id` AS `player_id`,\n          `RHS`.`player` AS `player`,\n          `RHS`.`years_played` AS `years_played`,\n          `RHS`.`total_wl` AS `total_wl`,\n          `RHS`.`singles_wl` AS `singles_wl`,\n          `RHS`.`doubles_wl` AS `doubles_wl`\n   FROM\n     (SELECT *\n      FROM `team`\n      WHERE (`name` = 'Columbus Crew')) AS LHS\n   INNER JOIN player AS RHS ON (LHS.team_id = RHS.team))\nORDER BY player\n", "sql2": "SELECT T1.Player,\n       T1.Years_Played\nFROM player AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id\nWHERE T2.Name = 'Columbus Crew'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0023", "sql1": "\nSELECT POSITION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT college,\n                POSITION,\n                MAX(n) AS n\n         FROM\n           (SELECT season,\n                   player,\n                   POSITION,\n                   country,\n                   team,\n                   draft_pick_number,\n                   draft_class,\n                   college,\n                   COUNT(*) OVER () AS n\n            FROM match_season)\n         GROUP BY college,\n                  POSITION)\n      ORDER BY college DESC)\n   LIMIT 1)\n", "sql2": "SELECT POSITION\nFROM match_season\nGROUP BY POSITION\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0022", "sql1": "\nSELECT player\nFROM match_season\nORDER BY player\n", "sql2": "SELECT player\nFROM match_season\nORDER BY College ASC", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0018", "sql1": "\nSELECT DISTINCT `team_id` AS `count_distinct_t1_college_`\nFROM\n  (SELECT `LHS`.`season` AS `season`,\n          `LHS`.`player` AS `player`,\n          `LHS`.`position` AS `position`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`team` AS `team`,\n          `LHS`.`draft_pick_number` AS `draft_pick_number`,\n          `LHS`.`draft_class` AS `draft_class`,\n          `LHS`.`college` AS `college`,\n          `RHS`.`team_id` AS `team_id`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`n` AS `n`\n   FROM `match_season` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM\n        (SELECT `team_id`,\n                `name`,\n                COUNT(*) OVER () AS `n`\n         FROM `team`)\n      WHERE (`name` = 'Columbus Crew')) AS RHS)\nORDER BY count_distinct_t1_college_\n", "sql2": "SELECT count(DISTINCT T1.College)\nFROM match_season AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id\nWHERE T2.Name = 'Columbus Crew'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0002", "sql1": "\nSELECT country_name,\n       capital\nFROM country\nORDER BY country_name\n", "sql2": "SELECT Country_name,\n       Capital\nFROM country", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0014", "sql1": "\nSELECT `official_native_language`\nFROM\n  (SELECT `country_id`,\n          `country_name`,\n          `capital`,\n          `official_native_language`,\n          `season`,\n          `player`,\n          `position`,\n          `team`,\n          `draft_pick_number`,\n          `draft_class`,\n          `college`,\n          `country_id` AS `country`\n   FROM\n     (SELECT `LHS`.`country_id` AS `country_id`,\n             `LHS`.`country_name` AS `country_name`,\n             `LHS`.`capital` AS `capital`,\n             `LHS`.`official_native_language` AS `official_native_language`,\n             `RHS`.`season` AS `season`,\n             `RHS`.`player` AS `player`,\n             `RHS`.`position` AS `position`,\n             `RHS`.`team` AS `team`,\n             `RHS`.`draft_pick_number` AS `draft_pick_number`,\n             `RHS`.`draft_class` AS `draft_class`,\n             `RHS`.`college` AS `college`\n      FROM `country` AS `LHS`\n      INNER JOIN `match_season` AS `RHS` ON (`LHS`.`country_id` = `RHS`.`country`)))\nWHERE (`college` = 'Maryland'\n       OR `college` = 'Duke')\nORDER BY official_native_language\n", "sql2": "SELECT T1.Official_native_language\nFROM country AS T1\nJOIN match_season AS T2 ON T1.Country_id = T2.Country\nWHERE T2.College = 'Maryland'\n  OR T2.College = 'Duke'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM country\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM country", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0017", "sql1": "\nSELECT `position`\nFROM\n  (SELECT `LHS`.`team_id` AS `team_id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`season` AS `season`,\n          `RHS`.`player` AS `player`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`draft_pick_number` AS `draft_pick_number`,\n          `RHS`.`draft_class` AS `draft_class`,\n          `RHS`.`college` AS `college`\n   FROM\n     (SELECT *\n      FROM `team`\n      WHERE (`name` = 'Ryley Goldner')) AS LHS\n   INNER JOIN match_season AS RHS ON (LHS.team_id = RHS.team))\nORDER BY POSITION\n", "sql2": "SELECT T1.Position\nFROM match_season AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id\nWHERE T2.Name = 'Ryley Goldner'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0020", "sql1": "\nSELECT POSITION,\n       n AS count___\nFROM\n  (SELECT POSITION,\n          COUNT(*) AS n\n   FROM match_season\n   GROUP BY POSITION)\nORDER BY POSITION\n", "sql2": "SELECT POSITION,\n       COUNT(*)\nFROM match_season\nGROUP BY POSITION", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0016", "sql1": "\nSELECT season,\n       player,\n       name\nFROM\n  (SELECT season,\n          player,\n          POSITION,\n          country,\n          team,\n          draft_pick_number,\n          draft_class,\n          college,\n          name,\n          player_other,\n          years_played,\n          total_wl,\n          singles_wl,\n          doubles_wl,\n          team_other,\n          country AS player_id\n   FROM\n     (SELECT LHS.season AS season,\n             LHS.player AS player,\n             LHS.position AS POSITION,\n             LHS.country AS country,\n             LHS.team AS team,\n             LHS.draft_pick_number AS draft_pick_number,\n             LHS.draft_class AS draft_class,\n             LHS.college AS college,\n             RHS.name AS name,\n             RHS.player AS player_other,\n             RHS.years_played AS years_played,\n             RHS.total_wl AS total_wl,\n             RHS.singles_wl AS singles_wl,\n             RHS.doubles_wl AS doubles_wl,\n             RHS.team AS team_other\n      FROM match_season AS LHS\n      INNER JOIN\n        (SELECT LHS.team_id AS team_id,\n                LHS.name AS name,\n                RHS.player_id AS player_id,\n                RHS.player AS player,\n                RHS.years_played AS years_played,\n                RHS.total_wl AS total_wl,\n                RHS.singles_wl AS singles_wl,\n                RHS.doubles_wl AS doubles_wl,\n                RHS.team AS team\n         FROM team AS LHS\n         CROSS JOIN player AS RHS) AS RHS ON (LHS.country = RHS.player_id\n                                                 AND LHS.team = RHS.team_id)))\nORDER BY season\n", "sql2": "SELECT T1.Season,\n       T1.Player,\n       T2.Name\nFROM match_season AS T1\nJOIN team AS T2 ON T1.Team = T2.Team_id", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0007", "sql1": "\nSELECT `draft_pick_number`,\n       `draft_class`\nFROM `match_season`\nWHERE (`position` = 'Defender')\nORDER BY draft_pick_number\n", "sql2": "SELECT Draft_Pick_Number,\n       Draft_Class\nFROM match_season\nWHERE POSITION = 'Defender'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0010", "sql1": "\nSELECT name\nFROM team\nORDER BY name\n", "sql2": "SELECT Name\nFROM Team", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0006", "sql1": "\nSELECT `position`\nFROM `match_season`\nWHERE (`college` != 'UCLA'\n       AND `college` = 'Duke')\nORDER BY POSITION\n", "sql2": "SELECT DISTINCT POSITION\nFROM match_season\nWHERE College = 'UCLA'\n  OR College = 'Duke'", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/match_season/0026", "sql1": "\nSELECT college\nFROM\n  (SELECT college,\n          COUNT(*) AS n\n   FROM match_season\n   GROUP BY college)\nWHERE (n = 2)\nORDER BY college\n", "sql2": "SELECT College\nFROM match_season\nGROUP BY College\nHAVING count(*) >= 2\nORDER BY College DESC", "schema": "spider/match_season/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0004", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `chip_model`,\n          `company_name`,\n          COUNT(*) AS `n`\n   FROM `phone`\n   GROUP BY `chip_model`,\n            `company_name`)\nWHERE (`company_name` = 'Nokia Corporation')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM phone\nWHERE Company_name = 'Nokia Corporation';", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0012", "sql1": "\nSELECT company_name\nFROM\n  (SELECT company_name,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY company_name)\nWHERE (n > 1)\nORDER BY company_name\n", "sql2": "SELECT Company_name\nFROM phone\nGROUP BY Company_name\nHAVING count(*) > 1;", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0024", "sql1": "\nSELECT model_name\nFROM chip_model\nORDER BY model_name\n", "sql2": "SELECT model_name\nFROM chip_model\nORDER BY launch_year", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0023", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `ram_mib`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `chip_model`\n      WHERE (`wifi` != 'No'))\n   GROUP BY ram_mib)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM chip_model\nWHERE wifi = 'No'", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0022", "sql1": "\nSELECT model_name,\n       launch_year,\n       ram_mib,\n       rom_mib,\n       slots,\n       wifi,\n       bluetooth\nFROM chip_model\nORDER BY model_name\n", "sql2": "SELECT *\nFROM chip_model", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0018", "sql1": "\nSELECT DISTINCT `hardware_model_name`\nFROM\n  (SELECT `LHS`.`graphics_mode` AS `graphics_mode`,\n          `LHS`.`char_cells` AS `char_cells`,\n          `LHS`.`pixels` AS `pixels`,\n          `LHS`.`hardware_colours` AS `hardware_colours`,\n          `LHS`.`used_kb` AS `used_kb`,\n          `LHS`.`map` AS `map`,\n          `LHS`.`type` AS `type`,\n          `RHS`.`company_name` AS `company_name`,\n          `RHS`.`hardware_model_name` AS `hardware_model_name`,\n          `RHS`.`accreditation_type` AS `accreditation_type`,\n          `RHS`.`accreditation_level` AS `accreditation_level`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`chip_model` AS `chip_model`,\n          `RHS`.`screen_mode` AS `screen_mode`\n   FROM `screen_mode` AS `LHS`\n   CROSS JOIN `phone` AS `RHS`)\nWHERE (`company_name` = 'Nokia Corporation'\n       AND `type` = 'Text')\nORDER BY hardware_model_name\n", "sql2": "SELECT DISTINCT T2.Hardware_Model_name\nFROM screen_mode AS T1\nJOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode\nWHERE t2.Company_name = 'Nokia Corporation'\n  AND T1.Type != 'Text';", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0002", "sql1": "\nSELECT model_name,\n       minram_mib AS ram_mib\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT launch_year,\n                model_name,\n                MIN(ram_mib) AS minram_mib\n         FROM chip_model\n         GROUP BY launch_year,\n                  model_name)\n      ORDER BY launch_year)\n   LIMIT 1)\n", "sql2": "SELECT Model_name,\n       RAM_MiB\nFROM chip_model\nORDER BY RAM_MiB ASC\nLIMIT 1;", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0001", "sql1": "\nSELECT model_name\nFROM chip_model\nWHERE (launch_year <= 2002.0\n       OR launch_year <= 2004.0)\nORDER BY model_name\n", "sql2": "SELECT Model_name\nFROM chip_model\nWHERE Launch_year BETWEEN 2002 AND 2004;", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0021", "sql1": "\nSELECT accreditation_level\nFROM\n  (SELECT accreditation_level,\n          accreditation_type,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY accreditation_level,\n            accreditation_type)\nWHERE (n > 3)\nORDER BY accreditation_level\n", "sql2": "SELECT Accreditation_level\nFROM phone\nGROUP BY Accreditation_level\nHAVING count(*) > 3", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_1/0020", "sql1": "\nSELECT accreditation_type,\n       n AS count___\nFROM\n  (SELECT accreditation_type,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY accreditation_type)\nORDER BY accreditation_type\n", "sql2": "SELECT Accreditation_type,\n       count(*)\nFROM phone\nGROUP BY Accreditation_type", "schema": "spider/phone_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0009", "sql1": "\nSELECT `response_received_date`\nFROM\n  (SELECT `LHS`.`grant_id` AS `grant_id`,\n          `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`grant_amount` AS `grant_amount`,\n          `LHS`.`grant_start_date` AS `grant_start_date`,\n          `LHS`.`grant_end_date` AS `grant_end_date`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`document_type_code` AS `document_type_code`,\n          `RHS`.`document_description` AS `document_description`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`sent_date` AS `sent_date`,\n          `RHS`.`response_received_date` AS `response_received_date`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `grants` AS `LHS`\n   INNER JOIN\n     (SELECT `LHS`.`document_type_code` AS `document_type_code`,\n             `LHS`.`document_description` AS `document_description`,\n             `RHS`.`document_id` AS `document_id`,\n             `RHS`.`grant_id` AS `grant_id`,\n             `RHS`.`sent_date` AS `sent_date`,\n             `RHS`.`response_received_date` AS `response_received_date`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `document_types` AS `LHS`\n      INNER JOIN `documents` AS `RHS` ON (`LHS`.`document_type_code` = `RHS`.`document_type_code`)) AS `RHS` ON (`LHS`.`grant_id` = `RHS`.`grant_id`))\nWHERE (`document_description` = 'Regular'\n       OR grant_amount > 100.0)\nORDER BY response_received_date\n", "sql2": "SELECT T1.response_received_date\nFROM Documents AS T1\nJOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code\nJOIN Grants AS T3 ON T1.grant_id = T3.grant_id\nWHERE T2.document_description = 'Regular'\n  OR T3.grant_amount > 100", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0013", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT role_code) OVER () AS count_distinct_role_code_\nFROM project_staff\nORDER BY count_distinct_role_code_\n", "sql2": "SELECT count(DISTINCT role_code)\nFROM Project_Staff", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0005", "sql1": "\nSELECT organisation_id,\n       organisation_details\nFROM\n  (SELECT organisation_details,\n          organisation_id,\n          SUM(grant_amount) AS sumgrant_amount\n   FROM\n     (SELECT LHS.grant_id AS grant_id,\n             LHS.organisation_id AS organisation_id,\n             LHS.grant_amount AS grant_amount,\n             LHS.grant_start_date AS grant_start_date,\n             LHS.grant_end_date AS grant_end_date,\n             LHS.other_details AS other_details,\n             RHS.organisation_type AS organisation_type,\n             RHS.organisation_details AS organisation_details\n      FROM grants AS LHS\n      INNER JOIN organisations AS RHS ON (LHS.organisation_id = RHS.organisation_id))\n   GROUP BY organisation_details,\n            organisation_id)\nWHERE (sumgrant_amount >= 6000.0)\nORDER BY organisation_id\n", "sql2": "SELECT T2.organisation_id,\n       T2.organisation_details\nFROM Grants AS T1\nJOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id\nGROUP BY T2.organisation_id\nHAVING sum(T1.grant_amount) > 6000", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0029", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `other_details`,\n          COUNT(DISTINCT `date_from`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `project_staff`\n      WHERE (`role_code` = 'leader'\n             OR `date_from` < parse_datetime('1989-04-24 23:51:54')))\n   GROUP BY other_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Project_Staff\nWHERE role_code = 'leader'\n  OR date_from < '1989-04-24 23:51:54'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0028", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `project_outcomes`\nWHERE (`outcome_code` = 'Patent')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Project_outcomes\nWHERE outcome_code = 'Patent'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0012", "sql1": "\nSELECT `date_from`,\n       `date_to`\nFROM `project_staff`\nWHERE (`role_code` = 'researcher')\nORDER BY date_from\n", "sql2": "SELECT date_from,\n       date_to\nFROM Project_Staff\nWHERE role_code = 'researcher'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0003", "sql1": "\nSELECT DISTINCT SUM(`grant_amount`) OVER () AS `sum_grant_amount_`\nFROM\n  (SELECT `LHS`.`grant_id` AS `grant_id`,\n          `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`grant_amount` AS `grant_amount`,\n          `LHS`.`grant_start_date` AS `grant_start_date`,\n          `LHS`.`grant_end_date` AS `grant_end_date`,\n          `LHS`.`other_details` AS `other_details`,\n          `LHS`.`organisation_type` AS `organisation_type`,\n          `LHS`.`organisation_type_description` AS `organisation_type_description`,\n          `RHS`.`organisation_details` AS `organisation_details`\n   FROM\n     (SELECT `LHS`.`grant_id` AS `grant_id`,\n             `LHS`.`organisation_id` AS `organisation_id`,\n             `LHS`.`grant_amount` AS `grant_amount`,\n             `LHS`.`grant_start_date` AS `grant_start_date`,\n             `LHS`.`grant_end_date` AS `grant_end_date`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`organisation_type` AS `organisation_type`,\n             `RHS`.`organisation_type_description` AS `organisation_type_description`\n      FROM `grants` AS `LHS`\n      CROSS JOIN `organisation_types` AS `RHS`) AS `LHS`\n   INNER JOIN `organisations` AS `RHS` ON (`LHS`.`organisation_id` = `RHS`.`organisation_id`\n                                              AND `LHS`.`organisation_type` = `RHS`.`organisation_type`))\nWHERE (`organisation_type_description` = 'Research')\nORDER BY sum_grant_amount_\n", "sql2": "SELECT sum(grant_amount)\nFROM Grants AS T1\nJOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id\nJOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type\nWHERE T3.organisation_type_description = 'Research'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0039", "sql1": "\nSELECT role_code\nFROM\n  (SELECT LHS.role_code AS role_code,\n          LHS.n AS n,\n          LHS.maxn AS maxn,\n          RHS.staff_id AS staff_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT role_code,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT role_code,\n                COUNT(*) AS n\n         FROM project_staff\n         GROUP BY role_code)) AS LHS\n   INNER JOIN project_staff AS RHS ON (LHS.maxn = RHS.project_id\n                                          AND LHS.role_code = RHS.role_code))\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM Project_Staff\nGROUP BY role_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0019", "sql1": "\nSELECT project_details,\n       project_id\nFROM\n  (SELECT LHS.outcome_details AS outcome_details,\n          LHS.project_id AS project_id,\n          LHS.maxn AS maxn,\n          RHS.project_details AS project_details\n   FROM\n     (SELECT outcome_details,\n             project_id,\n             MAX(n) AS maxn\n      FROM\n        (SELECT outcome_details,\n                project_id,\n                COUNT(*) AS n\n         FROM project_outcomes\n         GROUP BY outcome_details,\n                  project_id)\n      GROUP BY outcome_details,\n               project_id) AS LHS\n   INNER JOIN projects AS RHS ON (LHS.project_id = RHS.project_id\n                                     AND LHS.maxn = RHS.organisation_id))\nORDER BY project_details\n", "sql2": "SELECT T1.project_details,\n       T1.project_id\nFROM Projects AS T1\nJOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0035", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM tasks\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Tasks", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0034", "sql1": "\nSELECT staff_details\nFROM research_staff\nORDER BY staff_details\n", "sql2": "SELECT staff_details\nFROM Research_Staff\nORDER BY staff_details ASC", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0018", "sql1": "\nSELECT mindate_from AS date_from\nFROM\n  (SELECT MIN(date_from) AS mindate_from\n   FROM project_staff)\nORDER BY date_from\n", "sql2": "SELECT date_from\nFROM Project_Staff\nORDER BY date_from ASC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0038", "sql1": "\nSELECT outcome_description\nFROM\n  (SELECT LHS.project_id AS project_id,\n          LHS.outcome_code AS outcome_code,\n          LHS.outcome_details AS outcome_details,\n          RHS.outcome_description AS outcome_description\n   FROM project_outcomes AS LHS\n   INNER JOIN research_outcomes AS RHS ON (LHS.outcome_code = RHS.outcome_code))\nORDER BY outcome_description\n", "sql2": "SELECT T1.outcome_description\nFROM Research_outcomes AS T1\nJOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0014", "sql1": "\nSELECT sumgrant_amount AS sum_grant_amount_,\n       organisation_id\nFROM\n  (SELECT organisation_id,\n          SUM(grant_amount) AS sumgrant_amount\n   FROM grants\n   GROUP BY organisation_id)\nORDER BY sum_grant_amount_\n", "sql2": "SELECT sum(grant_amount),\n       organisation_id\nFROM Grants\nGROUP BY organisation_id", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0017", "sql1": "\nSELECT `role_description`\nFROM `staff_roles`\nWHERE (`role_code` = 'researcher')\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM Staff_Roles\nWHERE role_code = 'researcher'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0037", "sql1": "\nSELECT DISTINCT `role_code`\nFROM `project_staff`\nWHERE (`date_to` != parse_datetime('2003-04-19 15:06:20')\n       OR `date_from` != parse_datetime('2016-03-15 00:33:18'))\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM Project_Staff\nWHERE date_from > '2003-04-19 15:06:20'\n  AND date_to < '2016-03-15 00:33:18'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0020", "sql1": "\nSELECT project_details\nFROM\n  (SELECT *\n   FROM projects AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM project_outcomes AS RHS\n        WHERE (LHS.project_id = RHS.project_id) ))\nORDER BY project_details\n", "sql2": "SELECT project_details\nFROM Projects\nWHERE project_id NOT IN\n    (SELECT project_id\n     FROM Project_outcomes)", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0036", "sql1": "\nSELECT n AS count___,\n       project_details\nFROM\n  (SELECT project_details,\n          task_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.project_id AS project_id,\n             LHS.organisation_id AS organisation_id,\n             LHS.project_details AS project_details,\n             RHS.task_id AS task_id,\n             RHS.task_details AS task_details,\n             RHS.eg_agree_objectives AS eg_agree_objectives\n      FROM projects AS LHS\n      INNER JOIN tasks AS RHS ON (LHS.project_id = RHS.project_id))\n   GROUP BY project_details,\n            task_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.project_details\nFROM Projects AS T1\nJOIN Tasks AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0016", "sql1": "\nSELECT project_id,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT project_id,\n             COUNT(*) AS n\n      FROM project_staff\n      GROUP BY project_id) AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM projects AS RHS\n        WHERE (LHS.project_id = RHS.project_id) ))\nORDER BY project_id\n", "sql2": "SELECT T1.project_id,\n       count(*)\nFROM Project_Staff AS T1\nJOIN Projects AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id\nORDER BY count(*) ASC", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0031", "sql1": "\nSELECT `outcome_description`\nFROM\n  (SELECT `LHS`.`project_id` AS `project_id`,\n          `LHS`.`outcome_code` AS `outcome_code`,\n          `LHS`.`outcome_details` AS `outcome_details`,\n          `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`project_details` AS `project_details`,\n          `RHS`.`outcome_description` AS `outcome_description`\n   FROM\n     (SELECT `LHS`.`project_id` AS `project_id`,\n             `LHS`.`outcome_code` AS `outcome_code`,\n             `LHS`.`outcome_details` AS `outcome_details`,\n             `RHS`.`organisation_id` AS `organisation_id`,\n             `RHS`.`project_details` AS `project_details`\n      FROM `project_outcomes` AS `LHS`\n      INNER JOIN `projects` AS `RHS` ON (`LHS`.`project_id` = `RHS`.`project_id`)) AS `LHS`\n   INNER JOIN `research_outcomes` AS `RHS` ON (`LHS`.`outcome_code` = `RHS`.`outcome_code`))\nWHERE (`project_details` = 'sint')\nORDER BY outcome_description\n", "sql2": "SELECT T1.outcome_description\nFROM Research_outcomes AS T1\nJOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code\nJOIN Projects AS T3 ON T2.project_id = T3.project_id\nWHERE T3.project_details = 'sint'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0027", "sql1": "\nSELECT `organisation_details`\nFROM\n  (SELECT `LHS`.`organisation_type` AS `organisation_type`,\n          `LHS`.`organisation_type_description` AS `organisation_type_description`,\n          `RHS`.`organisation_id` AS `organisation_id`,\n          `RHS`.`organisation_details` AS `organisation_details`\n   FROM `organisation_types` AS `LHS`\n   INNER JOIN `organisations` AS `RHS` ON (`LHS`.`organisation_type` = `RHS`.`organisation_type`))\nWHERE (`organisation_type_description` = 'Sponsor')\nORDER BY organisation_details\n", "sql2": "SELECT organisation_details\nFROM Organisations AS T1\nJOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type\nWHERE T2.organisation_type_description = 'Sponsor'\nORDER BY organisation_details", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0007", "sql1": "\nSELECT DISTINCT organisation_type\nFROM\n  (SELECT LHS.organisation_id AS organisation_id,\n          LHS.organisation_type AS organisation_type,\n          LHS.organisation_details AS organisation_details,\n          LHS.staff_id AS staff_id,\n          LHS.employer_organisation_id AS employer_organisation_id,\n          LHS.staff_details AS staff_details,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.organisation_id AS organisation_id,\n             LHS.organisation_type AS organisation_type,\n             LHS.organisation_details AS organisation_details,\n             LHS.staff_id AS staff_id,\n             LHS.employer_organisation_id AS employer_organisation_id,\n             LHS.staff_details AS staff_details,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.organisation_id AS organisation_id,\n                LHS.organisation_type AS organisation_type,\n                LHS.organisation_details AS organisation_details,\n                RHS.staff_id AS staff_id,\n                RHS.employer_organisation_id AS employer_organisation_id,\n                RHS.staff_details AS staff_details\n         FROM organisations AS LHS\n         CROSS JOIN research_staff AS RHS) AS LHS\n      INNER JOIN\n        (SELECT organisation_type,\n                COUNT(*) AS n\n         FROM organisations\n         GROUP BY organisation_type) AS RHS ON (LHS.organisation_type = RHS.organisation_type)) AS LHS\n   INNER JOIN\n     (SELECT organisation_type,\n             MAX(n) OVER () AS n\n      FROM\n        (SELECT organisation_type,\n                COUNT(*) AS n\n         FROM organisations\n         GROUP BY organisation_type)) AS RHS ON (LHS.organisation_type = RHS.organisation_type\n                                                 AND LHS.n = RHS.n))\nORDER BY organisation_type\n", "sql2": "SELECT T1.organisation_type\nFROM Organisations AS T1\nJOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id\nGROUP BY T1.organisation_type\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0010", "sql1": "\nSELECT `project_details`\nFROM\n  (SELECT *\n   FROM `projects` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `project_staff`\n           WHERE (`role_code` = 'researcher')) AS RHS\n        WHERE (LHS.project_id = RHS.project_id) ))\nORDER BY project_details\n", "sql2": "SELECT project_details\nFROM Projects\nWHERE project_id NOT IN\n    (SELECT project_id\n     FROM Project_Staff\n     WHERE role_code = 'researcher' )", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0026", "sql1": "\nSELECT `organisation_type_description`\nFROM\n  (SELECT `LHS`.`organisation_id` AS `organisation_id`,\n          `LHS`.`organisation_type` AS `organisation_type`,\n          `LHS`.`organisation_details` AS `organisation_details`,\n          `RHS`.`organisation_type_description` AS `organisation_type_description`\n   FROM\n     (SELECT *\n      FROM `organisations`\n      WHERE (`organisation_details` = 'quo')) AS LHS\n   LEFT JOIN organisation_types AS RHS ON (LHS.organisation_type = RHS.organisation_type))\nORDER BY organisation_type_description\n", "sql2": "SELECT T1.organisation_type_description\nFROM organisation_Types AS T1\nJOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type\nWHERE T2.organisation_details = 'quo'", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_grants_for_research/0030", "sql1": "\nSELECT maxdate_to AS date_to\nFROM\n  (SELECT other_details,\n          MAX(date_to) AS maxdate_to\n   FROM project_staff\n   GROUP BY other_details)\nORDER BY date_to\n", "sql2": "SELECT date_to\nFROM Project_Staff\nORDER BY date_to DESC\nLIMIT 1", "schema": "spider/tracking_grants_for_research/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_grants_for_research/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0004", "sql1": "\nSELECT minister,\n       took_office,\n       left_office\nFROM party\nORDER BY minister\n", "sql2": "SELECT minister,\n       took_office,\n       left_office\nFROM party\nORDER BY left_office", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0003", "sql1": "\nSELECT n AS count_distinct_party_name_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM party)\nORDER BY count_distinct_party_name_\n", "sql2": "SELECT count(DISTINCT party_name)\nFROM party", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0019", "sql1": "\nSELECT party_name\nFROM\n  (SELECT party_name,\n          region_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.party_id AS party_id,\n             LHS.minister AS minister,\n             LHS.took_office AS took_office,\n             LHS.left_office AS left_office,\n             LHS.region_id AS region_id,\n             LHS.party_name AS party_name,\n             RHS.event_id AS event_id,\n             RHS.event_name AS event_name,\n             RHS.member_in_charge_id AS member_in_charge_id\n      FROM party AS LHS\n      LEFT JOIN party_events AS RHS ON (LHS.party_id = RHS.party_id))\n   GROUP BY party_name,\n            region_id)\nWHERE (n >= 2)\nORDER BY party_name\n", "sql2": "SELECT T2.party_name\nFROM party_events AS T1\nJOIN party AS T2 ON T1.party_id = T2.party_id\nGROUP BY T1.party_id\nHAVING count(*) >= 2", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0002", "sql1": "\nSELECT DISTINCT region_name\nFROM region\nORDER BY region_name\n", "sql2": "SELECT DISTINCT region_name\nFROM region\nORDER BY Label", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM region\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM region", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0021", "sql1": "\nSELECT event_name\nFROM\n  (SELECT event_name,\n          COUNT(*) AS n\n   FROM party_events\n   GROUP BY event_name)\nWHERE (n > 2)\nORDER BY event_name\n", "sql2": "SELECT event_name\nFROM party_events\nGROUP BY event_name\nHAVING count(*) > 2", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM party_events\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM party_events", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0007", "sql1": "\nSELECT minister,\n       party_name\nFROM party\nORDER BY minister\n", "sql2": "SELECT minister,\n       party_name\nFROM party\nORDER BY took_office DESC", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0011", "sql1": "\nSELECT DISTINCT party_name\nFROM\n  (SELECT LHS.party_name AS party_name,\n          LHS.maxn AS maxn,\n          RHS.member_id AS member_id,\n          RHS.member_name AS member_name,\n          RHS.in_office AS in_office\n   FROM\n     (SELECT party_name,\n             MAX(n) AS maxn\n      FROM\n        (SELECT minister,\n                party_name,\n                COUNT(*) AS n\n         FROM party\n         GROUP BY minister,\n                  party_name)\n      GROUP BY party_name) AS LHS\n   INNER JOIN member AS RHS ON (LHS.party_name = RHS.party_id))\nORDER BY party_name\n", "sql2": "SELECT T2.party_name\nFROM Member AS T1\nJOIN party AS T2 ON T1.party_id = T2.party_id\nGROUP BY T1.party_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/party_people/0006", "sql1": "\nSELECT `minister`\nFROM `party`\nWHERE (`party_name` != 'Progress Party')\nORDER BY minister\n", "sql2": "SELECT minister\nFROM party\nWHERE party_name != 'Progress Party'", "schema": "spider/party_people/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0009", "sql1": "\nSELECT phone_number\nFROM employees\nWHERE (salary >= 8000.0\n       AND salary <= 12000.0)\nORDER BY phone_number\n", "sql2": "SELECT phone_number\nFROM employees\nWHERE salary BETWEEN 8000 AND 12000", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0005", "sql1": "\nSELECT `department_id`,\n       `department_name`,\n       `manager_id`,\n       `location_id`\nFROM `departments`\nWHERE (`department_name` = 'Marketing')\nORDER BY department_id\n", "sql2": "SELECT *\nFROM departments\nWHERE department_name = 'Marketing'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0028", "sql1": "\nSELECT employee_id\nFROM\n  (SELECT department_id,\n          employee_id,\n          COUNT(*) AS n\n   FROM job_history\n   GROUP BY department_id,\n            employee_id)\nWHERE (n = 2)\nORDER BY employee_id\n", "sql2": "SELECT employee_id\nFROM job_history\nGROUP BY employee_id\nHAVING COUNT(*) >= 2", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0032", "sql1": "\nSELECT job_title,\n       meansalary AS avg_salary_\nFROM\n  (SELECT LHS.job_id AS job_id,\n          LHS.meansalary AS meansalary,\n          RHS.job_title AS job_title,\n          RHS.min_salary AS min_salary,\n          RHS.max_salary AS max_salary\n   FROM\n     (SELECT job_id,\n             AVG(salary) AS meansalary\n      FROM employees\n      GROUP BY job_id) AS LHS\n   INNER JOIN jobs AS RHS ON (LHS.job_id = RHS.job_id))\nORDER BY job_title\n", "sql2": "SELECT job_title,\n       AVG(salary)\nFROM employees AS T1\nJOIN jobs AS T2 ON T1.job_id = T2.job_id\nGROUP BY T2.job_title", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0042", "sql1": "\nSELECT `first_name`,\n       `job_id`\nFROM\n  (SELECT `LHS`.`employee_id` AS `employee_id`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`email` AS `email`,\n          `LHS`.`phone_number` AS `phone_number`,\n          `LHS`.`hire_date` AS `hire_date`,\n          `LHS`.`job_id` AS `job_id`,\n          `LHS`.`salary` AS `salary`,\n          `LHS`.`commission_pct` AS `commission_pct`,\n          `LHS`.`manager_id` AS `manager_id`,\n          `LHS`.`department_id` AS `department_id`,\n          `RHS`.`department_name` AS `department_name`,\n          `RHS`.`manager_id` AS `manager_id_other`,\n          `RHS`.`location_id` AS `location_id`\n   FROM `employees` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `departments`\n      WHERE (`department_name` = 'Finance')) AS RHS ON (LHS.department_id = RHS.department_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T1.job_id\nFROM employees AS T1\nJOIN departments AS T2 ON T1.department_id = T2.department_id\nWHERE T2.department_name = 'Finance'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0015", "sql1": "\nSELECT salary,\n       manager_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM employees\n      ORDER BY commission_pct)\n   LIMIT 107)\n", "sql2": "SELECT salary,\n       manager_id\nFROM employees\nWHERE manager_id != 'null'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0003", "sql1": "\nSELECT `first_name`,\n       `department_id`\nFROM `employees`\nWHERE (`last_name` = 'McEwen')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       department_id\nFROM employees\nWHERE last_name = 'McEwen'", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0019", "sql1": "\nSELECT job_title\nFROM jobs\nWHERE (min_salary > 9000.0)\nORDER BY job_title\n", "sql2": "SELECT job_title\nFROM jobs\nWHERE min_salary > 9000", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0034", "sql1": "\nSELECT minsalary AS min_salary_,\n       department_id\nFROM\n  (SELECT department_id,\n          MIN(salary) AS minsalary\n   FROM employees\n   GROUP BY department_id)\nORDER BY min_salary_\n", "sql2": "SELECT MIN(salary),\n       department_id\nFROM employees\nGROUP BY department_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0022", "sql1": "\nSELECT employee_id,\n       maxend_date AS max_end_date_\nFROM\n  (SELECT department_id,\n          employee_id,\n          MAX(end_date) AS maxend_date\n   FROM job_history\n   GROUP BY department_id,\n            employee_id)\nORDER BY employee_id\n", "sql2": "SELECT employee_id,\n       MAX(end_date)\nFROM job_history\nGROUP BY employee_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0038", "sql1": "\nSELECT department_name\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.email AS email,\n          LHS.phone_number AS phone_number,\n          LHS.hire_date AS hire_date,\n          LHS.job_id AS job_id,\n          LHS.salary AS salary,\n          LHS.commission_pct AS commission_pct,\n          LHS.manager_id AS manager_id,\n          LHS.department_id AS department_id,\n          RHS.department_name AS department_name,\n          RHS.location_id AS location_id\n   FROM employees AS LHS\n   INNER JOIN departments AS RHS ON (LHS.department_id = RHS.department_id\n                                        AND LHS.employee_id = RHS.manager_id))\nORDER BY department_name\n", "sql2": "SELECT DISTINCT T2.department_name\nFROM employees AS T1\nJOIN departments AS T2 ON T1.department_id = T2.department_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0002", "sql1": "\nSELECT first_name,\n       last_name,\n       salary\nFROM employees\nWHERE (salary < 6000.0)\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name,\n       salary\nFROM employees\nWHERE salary < 6000", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0014", "sql1": "\nSELECT first_name,\n       last_name\nFROM employees\nWHERE (department_id = 70.0\n       OR department_id = 90.0)\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM employees\nWHERE department_id = 70\n  OR department_id = 90", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0056", "sql1": "\nSELECT department_name,\n       city,\n       state_province\nFROM\n  (SELECT LHS.department_id AS department_id,\n          LHS.department_name AS department_name,\n          LHS.manager_id AS manager_id,\n          LHS.location_id AS location_id,\n          RHS.street_address AS street_address,\n          RHS.postal_code AS postal_code,\n          RHS.city AS city,\n          RHS.state_province AS state_province,\n          RHS.country_id AS country_id\n   FROM departments AS LHS\n   INNER JOIN locations AS RHS ON (LHS.location_id = RHS.location_id))\nORDER BY department_name\n", "sql2": "SELECT T1.department_name,\n       T2.city,\n       T2.state_province\nFROM departments AS T1\nJOIN locations AS T2 ON T2.location_id = T1.location_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0001", "sql1": "\nSELECT first_name,\n       department_name\nFROM\n  (SELECT LHS.department_id AS department_id,\n          LHS.department_name AS department_name,\n          LHS.manager_id AS manager_id,\n          LHS.location_id AS location_id,\n          RHS.employee_id AS employee_id,\n          RHS.first_name AS first_name,\n          RHS.last_name AS last_name,\n          RHS.email AS email,\n          RHS.phone_number AS phone_number,\n          RHS.hire_date AS hire_date,\n          RHS.job_id AS job_id,\n          RHS.salary AS salary,\n          RHS.commission_pct AS commission_pct,\n          RHS.manager_id AS manager_id_other\n   FROM departments AS LHS\n   INNER JOIN employees AS RHS ON (LHS.department_id = RHS.department_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T2.department_name\nFROM employees AS T1\nJOIN departments AS T2 ON T1.department_id = T2.department_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0041", "sql1": "\nSELECT employee_id,\n       job_title\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.email AS email,\n          LHS.phone_number AS phone_number,\n          LHS.hire_date AS hire_date,\n          LHS.job_id AS job_id,\n          LHS.salary AS salary,\n          LHS.commission_pct AS commission_pct,\n          LHS.manager_id AS manager_id,\n          LHS.department_id AS department_id,\n          RHS.job_title AS job_title,\n          RHS.min_salary AS min_salary,\n          RHS.max_salary AS max_salary\n   FROM\n     (SELECT *\n      FROM employees\n      WHERE (department_id = 80.0)) AS LHS\n   INNER JOIN jobs AS RHS ON (LHS.job_id = RHS.job_id))\nORDER BY employee_id\n", "sql2": "SELECT T1.employee_id,\n       T2.job_title\nFROM employees AS T1\nJOIN jobs AS T2 ON T1.job_id = T2.job_id\nWHERE T1.department_id = 80", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/hr_1/0026", "sql1": "\nSELECT country_id,\n       n AS count___\nFROM\n  (SELECT country_id,\n          COUNT(*) AS n\n   FROM locations\n   GROUP BY country_id)\nORDER BY country_id\n", "sql2": "SELECT country_id,\n       COUNT(*)\nFROM locations\nGROUP BY country_id", "schema": "spider/hr_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/hr_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0013", "sql1": "\nSELECT name\nFROM scientists\nORDER BY name\n", "sql2": "SELECT name\nFROM scientists\nORDER BY name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0005", "sql1": "\nSELECT meanhours AS avg_hours_\nFROM\n  (SELECT AVG(hours) AS meanhours\n   FROM projects)\nORDER BY avg_hours_\n", "sql2": "SELECT avg(hours)\nFROM projects", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_name_\nFROM projects\nORDER BY count_distinct_name_\n", "sql2": "SELECT count(DISTINCT name)\nFROM projects", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0015", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT code,\n          name,\n          hours,\n          n,\n          code AS project\n   FROM\n     (SELECT LHS.code AS code,\n             LHS.name AS name,\n             LHS.hours AS hours,\n             RHS.n AS n\n      FROM projects AS LHS\n      INNER JOIN\n        (SELECT project,\n                COUNT(*) AS n\n         FROM assignedto\n         GROUP BY project) AS RHS ON (LHS.code = RHS.project)))\nWHERE (hours > 300\n       AND n < hours)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM projects AS T1\nJOIN assignedto AS T2 ON T1.code = T2.project\nWHERE T1.hours > 300\nGROUP BY T1.name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0003", "sql1": "\nSELECT n AS count_distinct_scientist_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM assignedto)\nORDER BY count_distinct_scientist_\n", "sql2": "SELECT count(DISTINCT scientist)\nFROM assignedto", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0019", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM projects AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT code,\n                  name,\n                  hours,\n                  scientist,\n                  code AS project\n           FROM\n             (SELECT LHS.code AS code,\n                     LHS.name AS name,\n                     LHS.hours AS hours,\n                     RHS.scientist AS scientist\n              FROM projects AS LHS\n              INNER JOIN assignedto AS RHS ON (LHS.code = RHS.project))) AS RHS\n        WHERE (LHS.hours = RHS.hours\n               AND LHS.name = RHS.name) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM Projects\nWHERE Code NOT IN\n    (SELECT Project\n     FROM AssignedTo)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0023", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2,\n       hours\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          RHS.code AS code,\n          RHS.name AS name_other,\n          RHS.hours AS hours,\n          RHS.project AS project\n   FROM scientists AS LHS\n   INNER JOIN\n     (SELECT code,\n             name,\n             hours,\n             scientist,\n             code AS project\n      FROM\n        (SELECT LHS.code AS code,\n                LHS.name AS name,\n                LHS.hours AS hours,\n                RHS.scientist AS scientist\n         FROM projects AS LHS\n         INNER JOIN assignedto AS RHS ON (LHS.code = RHS.project))) AS RHS ON (LHS.ssn = RHS.scientist))\nORDER BY name___1\n", "sql2": "SELECT T1.Name,\n       T3.Name,\n       T3.Hours\nFROM Scientists AS T1\nJOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist\nJOIN Projects AS T3 ON T2.Project = T3.Code\nORDER BY T3.Name,\n         T1.Name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0022", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.ssn AS ssn,\n          LHS.name AS name,\n          LHS.scientist AS scientist,\n          LHS.project AS project,\n          RHS.maxhours AS maxhours\n   FROM\n     (SELECT LHS.ssn AS ssn,\n             LHS.name AS name,\n             RHS.scientist AS scientist,\n             RHS.project AS project\n      FROM scientists AS LHS\n      CROSS JOIN assignedto AS RHS) AS LHS\n   CROSS JOIN\n     (SELECT MAX(hours) AS maxhours\n      FROM projects) AS RHS)\nORDER BY name\n", "sql2": "SELECT name\nFROM scientists\nEXCEPT\nSELECT T3.name\nFROM assignedto AS T1\nJOIN projects AS T2 ON T1.project = T2.code\nJOIN scientists AS T3 ON T1.scientist = T3.SSN\nWHERE T2.hours =\n    (SELECT max(hours)\n     FROM projects)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0018", "sql1": "\nSELECT name\nFROM scientists\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM assignedto AS T1\nJOIN scientists AS T2 ON T1.scientist = T2.ssn", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0002", "sql1": "\nSELECT DISTINCT SUM(hours) OVER () AS sum_hours_\nFROM projects\nORDER BY sum_hours_\n", "sql2": "SELECT sum(hours)\nFROM projects", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0014", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.code AS code,\n          LHS.name AS name,\n          LHS.hours AS hours,\n          RHS.n AS n\n   FROM projects AS LHS\n   INNER JOIN\n     (SELECT project,\n             COUNT(*) AS n\n      FROM assignedto\n      GROUP BY project) AS RHS ON (LHS.code = RHS.project))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM projects AS T1\nJOIN assignedto AS T2 ON T1.code = T2.project\nGROUP BY T1.name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM scientists\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM scientists", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0021", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT ssn) AS n_distinct\n   FROM\n     (SELECT ssn,\n             name,\n             scientist,\n             name AS project\n      FROM\n        (SELECT LHS.ssn AS ssn,\n                LHS.name AS name,\n                RHS.scientist AS scientist\n         FROM scientists AS LHS\n         INNER JOIN assignedto AS RHS ON (LHS.name = RHS.project))))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM scientists\nWHERE ssn NOT IN\n    (SELECT scientist\n     FROM AssignedTo)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0016", "sql1": "\nSELECT DISTINCT n AS count___,\n                name\nFROM\n  (SELECT name,\n          scientist,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.ssn AS ssn,\n             LHS.name AS name,\n             RHS.scientist AS scientist,\n             RHS.project AS project\n      FROM scientists AS LHS\n      CROSS JOIN assignedto AS RHS)\n   GROUP BY name,\n            scientist)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM scientists AS T1\nJOIN assignedto AS T2 ON T1.ssn = T2.scientist\nGROUP BY T1.name", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT hours,\n                name,\n                AVG(hours) AS meanhours\n         FROM projects\n         GROUP BY hours,\n                  name)\n      ORDER BY hours DESC)\n   LIMIT 2)\n", "sql2": "SELECT name\nFROM projects\nWHERE hours >\n    (SELECT avg(hours)\n     FROM projects)", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0011", "sql1": "\nSELECT name\nFROM projects\nWHERE (hours >= 100\n       AND hours <= 300)\nORDER BY name\n", "sql2": "SELECT name\nFROM projects\nWHERE hours BETWEEN 100 AND 300", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/scientist_1/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.code AS code,\n          LHS.name AS name,\n          LHS.hours AS hours\n   FROM projects AS LHS\n   INNER JOIN\n     (SELECT MAX(hours) AS hours\n      FROM projects) AS RHS ON (LHS.hours = RHS.hours))\nORDER BY name\n", "sql2": "SELECT name\nFROM projects\nORDER BY hours DESC\nLIMIT 1", "schema": "spider/scientist_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/scientist_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0025", "sql1": "\nSELECT cname\nFROM\n  (SELECT LHS.cid AS cid,\n          LHS.n AS n,\n          RHS.cname AS cname,\n          RHS.credits AS credits,\n          RHS.instructor AS instructor,\n          RHS.days AS days,\n          RHS.hours AS hours,\n          RHS.dno AS dno\n   FROM\n     (SELECT *\n      FROM\n        (SELECT cid,\n                COUNT(*) AS n\n         FROM enrolled_in\n         GROUP BY cid)\n      WHERE (n >= 5)) AS LHS\n   INNER JOIN course AS RHS ON (LHS.cid = RHS.cid))\nORDER BY cname\n", "sql2": "SELECT T1.CName\nFROM COURSE AS T1\nJOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID\nGROUP BY T2.CID\nHAVING COUNT(*) >= 5", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0013", "sql1": "\nSELECT cid,\n       cname,\n       credits,\n       instructor,\n       days,\n       hours,\n       dno\nFROM course\nORDER BY cid\n", "sql2": "SELECT *\nFROM COURSE\nORDER BY Credits", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `department`\n      WHERE (`division` = 'AS')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM DEPARTMENT\nWHERE Division = 'AS'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0004", "sql1": "\nSELECT `cname`\nFROM `course`\nWHERE (`days` = 'MTW')\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nWHERE Days = 'MTW'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0012", "sql1": "\nSELECT `dname`\nFROM `department`\nWHERE (`building` = 'Mergenthaler')\nORDER BY dname\n", "sql2": "SELECT DName\nFROM DEPARTMENT\nWHERE Building = 'Mergenthaler'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0032", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`facid` AS `facid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`rank` AS `rank`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`phone` AS `phone`,\n          `LHS`.`room` AS `room`,\n          `LHS`.`building` AS `building`,\n          `RHS`.`dno` AS `dno`,\n          `RHS`.`division` AS `division`,\n          `RHS`.`dname` AS `dname`,\n          `RHS`.`room` AS `room_other`,\n          `RHS`.`building` AS `building_other`,\n          `RHS`.`dphone` AS `dphone`,\n          `RHS`.`appt_type` AS `appt_type`\n   FROM `faculty` AS `LHS`\n   INNER JOIN\n     (SELECT `LHS`.`dno` AS `dno`,\n             `LHS`.`division` AS `division`,\n             `LHS`.`dname` AS `dname`,\n             `LHS`.`room` AS `room`,\n             `LHS`.`building` AS `building`,\n             `LHS`.`dphone` AS `dphone`,\n             `LHS`.`facid` AS `facid`,\n             `LHS`.`appt_type` AS `appt_type`\n      FROM\n        (SELECT `LHS`.`dno` AS `dno`,\n                `LHS`.`division` AS `division`,\n                `LHS`.`dname` AS `dname`,\n                `LHS`.`room` AS `room`,\n                `LHS`.`building` AS `building`,\n                `LHS`.`dphone` AS `dphone`,\n                `RHS`.`facid` AS `facid`,\n                `RHS`.`appt_type` AS `appt_type`\n         FROM `department` AS `LHS`\n         INNER JOIN `member_of` AS `RHS` ON (`LHS`.`dno` = `RHS`.`dno`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `department`\n         WHERE (`dname` = 'Computer Science')) AS RHS ON (LHS.dno = RHS.dno\n                                                          AND LHS.division = RHS.division\n                                                          AND LHS.dname = RHS.dname\n                                                          AND LHS.room = RHS.room\n                                                          AND LHS.building = RHS.building\n                                                          AND LHS.dphone = RHS.dphone)) AS RHS ON (LHS.facid = RHS.facid))\nORDER BY lname\n", "sql2": "SELECT T2.Lname\nFROM DEPARTMENT AS T1\nJOIN FACULTY AS T2 ON T1.DNO = T3.DNO\nJOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID\nWHERE T1.DName = 'Computer Science'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0008", "sql1": "\nSELECT DISTINCT maxgradepoint AS max_gradepoint_,\n                MIN(gradepoint) OVER () AS min_gradepoint_\nFROM\n  (SELECT lettergrade,\n          gradepoint,\n          MAX(gradepoint) OVER () AS maxgradepoint\n   FROM gradeconversion)\nORDER BY max_gradepoint_\n", "sql2": "SELECT max(gradepoint),\n       min(gradepoint)\nFROM GRADECONVERSION", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0015", "sql1": "\nSELECT fname\nFROM student\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM STUDENT\nORDER BY Age DESC", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0003", "sql1": "\nSELECT cname\nFROM course\nWHERE (credits = 1)\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nWHERE Credits = 1", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0035", "sql1": "\nSELECT DISTINCT cname\nFROM\n  (SELECT *\n   FROM course\n   WHERE (hours = 4\n          OR credits = 3))\nWHERE (credits <= 3\n       OR credits <= 1)\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nWHERE Credits = 3\nUNION\nSELECT CName\nFROM COURSE\nWHERE Credits = 1\n  AND Hours = 4", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0018", "sql1": "\nSELECT `fname`\nFROM `faculty`\nWHERE (`rank` = 'Professor')\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM FACULTY\nWHERE Rank = 'Professor'\nORDER BY Fname", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM course\nWHERE (credits > 2)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COURSE\nWHERE Credits > 2", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0014", "sql1": "\nSELECT cname\nFROM course\nORDER BY cname\n", "sql2": "SELECT CName\nFROM COURSE\nORDER BY Credits", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM course)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COURSE", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0017", "sql1": "\nSELECT `lname`\nFROM `faculty`\nWHERE (`building` = 'Barton')\nORDER BY lname\n", "sql2": "SELECT Lname\nFROM FACULTY\nWHERE Building = 'Barton'\nORDER BY Lname", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0020", "sql1": "\nSELECT dname\nFROM\n  (SELECT *\n   FROM department AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM minor_in AS RHS\n        WHERE (LHS.dno = RHS.dno) ))\nORDER BY dname\n", "sql2": "SELECT DName\nFROM DEPARTMENT\nEXCEPT\nSELECT T1.DName\nFROM DEPARTMENT AS T1\nJOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0036", "sql1": "\nSELECT `dname`\nFROM\n  (SELECT *\n   FROM `department`\n   WHERE (`division` = 'EN'\n          OR `building` != 'NEB'))\nWHERE (`division` = 'AS'\n       OR `building` = 'NEB')\nORDER BY dname\n", "sql2": "SELECT DName\nFROM DEPARTMENT\nWHERE Division = 'AS'\nUNION\nSELECT DName\nFROM DEPARTMENT\nWHERE Division = 'EN'\n  AND Building = 'NEB'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0016", "sql1": "\nSELECT `lname`\nFROM `student`\nWHERE (`sex` = 'F')\nORDER BY lname\n", "sql2": "SELECT LName\nFROM STUDENT\nWHERE Sex = 'F'\nORDER BY Age DESC", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0031", "sql1": "\nSELECT fname,\n       lname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          LHS.dno AS dno\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             RHS.dno AS dno\n      FROM student AS LHS\n      INNER JOIN minor_in AS RHS ON (LHS.stuid = RHS.stuid)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM minor_in\n      WHERE (dno = 140)) AS RHS ON (LHS.stuid = RHS.stuid\n                                    AND LHS.dno = RHS.dno))\nORDER BY fname\n", "sql2": "SELECT T2.Fname,\n       T2.Lname\nFROM MINOR_IN AS T1\nJOIN STUDENT AS T2 ON T1.StuID = T2.StuID\nWHERE T1.DNO = 140", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0027", "sql1": "\nSELECT `dname`,\n       `room`\nFROM\n  (SELECT `LHS`.`dno` AS `dno`,\n          `LHS`.`division` AS `division`,\n          `LHS`.`dname` AS `dname`,\n          `LHS`.`room` AS `room`,\n          `LHS`.`building` AS `building`,\n          `LHS`.`dphone` AS `dphone`,\n          `RHS`.`cid` AS `cid`,\n          `RHS`.`cname` AS `cname`,\n          `RHS`.`credits` AS `credits`,\n          `RHS`.`instructor` AS `instructor`,\n          `RHS`.`days` AS `days`,\n          `RHS`.`hours` AS `hours`\n   FROM `department` AS `LHS`\n   INNER JOIN `course` AS `RHS` ON (`LHS`.`dno` = `RHS`.`dno`))\nWHERE (`cname` = 'INTRODUCTION TO COMPUTER SCIENCE')\nORDER BY dname\n", "sql2": "SELECT T2.Dname,\n       T2.Room\nFROM COURSE AS T1\nJOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO\nWHERE T1.CName = 'INTRODUCTION TO COMPUTER SCIENCE'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `stuid`) OVER () AS `count_distinct_stuid_`\nFROM `enrolled_in`\nWHERE (`grade` = 'B')\nORDER BY count_distinct_stuid_\n", "sql2": "SELECT COUNT(DISTINCT StuID)\nFROM ENROLLED_IN\nWHERE Grade = 'B'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0011", "sql1": "\nSELECT `room`\nFROM `faculty`\nWHERE (`rank` = 'Professor'\n       AND `building` = 'NEB')\nORDER BY room\n", "sql2": "SELECT Room\nFROM FACULTY\nWHERE Rank = 'Professor'\n  AND Building = 'NEB'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0010", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM `faculty`\nWHERE (`sex` = 'M'\n       AND `building` = 'NEB')\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM FACULTY\nWHERE sex = 'M'\n  AND Building = 'NEB'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0006", "sql1": "\nSELECT dphone\nFROM department\nWHERE (room = 268)\nORDER BY dphone\n", "sql2": "SELECT DPhone\nFROM DEPARTMENT\nWHERE Room = 268", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0026", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`facid` AS `facid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`rank` AS `rank`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`phone` AS `phone`,\n          `LHS`.`room` AS `room`,\n          `LHS`.`building` AS `building`,\n          `RHS`.`cid` AS `cid`,\n          `RHS`.`cname` AS `cname`,\n          `RHS`.`credits` AS `credits`,\n          `RHS`.`days` AS `days`,\n          `RHS`.`hours` AS `hours`,\n          `RHS`.`dno` AS `dno`\n   FROM `faculty` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `course`\n      WHERE (`cname` = 'COMPUTER LITERACY')) AS RHS ON (LHS.facid = RHS.instructor))\nORDER BY fname\n", "sql2": "SELECT T2.Fname,\n       T2.Lname\nFROM COURSE AS T1\nJOIN FACULTY AS T2 ON T1.Instructor = T2.FacID\nWHERE T1.CName = 'COMPUTER LITERACY'", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_3/0030", "sql1": "\nSELECT fname,\n       lname\nFROM\n  (SELECT LHS.facid AS facid,\n          LHS.dno AS dno,\n          LHS.appt_type AS appt_type,\n          RHS.lname AS lname,\n          RHS.fname AS fname,\n          RHS.rank AS rank,\n          RHS.sex AS sex,\n          RHS.phone AS phone,\n          RHS.room AS room,\n          RHS.building AS building\n   FROM\n     (SELECT *\n      FROM member_of\n      WHERE (dno = 520)) AS LHS\n   LEFT JOIN faculty AS RHS ON (LHS.facid = RHS.facid))\nORDER BY fname\n", "sql2": "SELECT T1.Fname,\n       T1.Lname\nFROM FACULTY AS T1\nJOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID\nWHERE T2.DNO = 520", "schema": "spider/college_3/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0009", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`channel_id` AS `channel_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`owner` AS `owner`,\n          `LHS`.`share_in_percent` AS `share_in_percent`,\n          `LHS`.`rating_in_percent` AS `rating_in_percent`,\n          `RHS`.`program_id` AS `program_id`,\n          `RHS`.`time_of_day` AS `time_of_day`\n   FROM `channel` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `broadcast`\n      WHERE (`time_of_day` = 'Morning')) AS RHS ON (LHS.channel_id = RHS.channel_id))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM channel AS t1\nJOIN broadcast AS t2 ON t1.channel_id = t2.channel_id\nWHERE t2.time_of_day = 'Morning'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0013", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `program` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `broadcast`\n           WHERE (`time_of_day` = 'Morning')) AS RHS\n        WHERE (LHS.program_id = RHS.program_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nEXCEPT\nSELECT t1.name\nFROM program AS t1\nJOIN broadcast AS t2 ON t1.program_id = t2.program_id\nWHERE t2.Time_of_day = 'Morning'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0005", "sql1": "\nSELECT name\nFROM program\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nORDER BY launch", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM program\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM program", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0012", "sql1": "\nSELECT `n_distinct` AS `count_distinct_program_id_`\nFROM\n  (SELECT `channel_id`,\n          `program_id`,\n          `time_of_day`,\n          COUNT(DISTINCT `time_of_day`) OVER () AS `n_distinct`\n   FROM `broadcast`)\nWHERE (`time_of_day` = 'Night'\n       AND n_distinct < program_id)\nORDER BY count_distinct_program_id_\n", "sql2": "SELECT count(DISTINCT program_id)\nFROM broadcast\nWHERE time_of_day = 'Night'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0015", "sql1": "\nSELECT origin\nFROM program\nORDER BY origin\n", "sql2": "SELECT origin\nFROM program\nORDER BY origin", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0003", "sql1": "\nSELECT DISTINCT OWNER\nFROM\n  (SELECT LHS.channel_id AS channel_id,\n          LHS.name AS name,\n          LHS.owner AS OWNER,\n          LHS.share_in_percent AS share_in_percent,\n          LHS.rating_in_percent AS rating_in_percent,\n          LHS.maxrating_in_percent AS maxrating_in_percent,\n          RHS.channel_id AS channel_id_other,\n          RHS.name AS name_other,\n          RHS.owner AS owner_other,\n          RHS.share_in_percent AS share_in_percent_other,\n          RHS.rating_in_percent AS rating_in_percent_other,\n          RHS.maxrating_in_percent AS maxrating_in_percent_other\n   FROM\n     (SELECT channel_id,\n             name,\n             OWNER,\n             share_in_percent,\n             rating_in_percent,\n             MAX(rating_in_percent) OVER () AS maxrating_in_percent\n      FROM channel) AS LHS\n   CROSS JOIN\n     (SELECT channel_id,\n             name,\n             OWNER,\n             share_in_percent,\n             rating_in_percent,\n             MAX(rating_in_percent) OVER () AS maxrating_in_percent\n      FROM channel) AS RHS)\nWHERE (rating_in_percent >= maxrating_in_percent_other\n       AND rating_in_percent_other != maxrating_in_percent_other)\nORDER BY OWNER\n", "sql2": "SELECT OWNER\nFROM channel\nORDER BY rating_in_percent DESC\nLIMIT 1", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0019", "sql1": "\nSELECT sumrating_in_percent AS sum_rating_in_percent_,\n       OWNER\nFROM\n  (SELECT OWNER,\n          SUM(rating_in_percent) AS sumrating_in_percent\n   FROM channel\n   GROUP BY OWNER)\nORDER BY sum_rating_in_percent_\n", "sql2": "SELECT sum(Rating_in_percent),\n       OWNER\nFROM channel\nGROUP BY OWNER", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM channel\n      ORDER BY share_in_percent DESC)\n   LIMIT 8)\n", "sql2": "SELECT name\nFROM channel\nWHERE OWNER = 'CCTV'\n  OR OWNER = 'HBS'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0002", "sql1": "\nSELECT name\nFROM channel\nORDER BY name\n", "sql2": "SELECT name\nFROM channel\nORDER BY rating_in_percent DESC", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0014", "sql1": "\nSELECT `owner`\nFROM\n  (SELECT `program_id`,\n          `name`,\n          `origin`,\n          `launch`,\n          `owner`,\n          `program_id_other`,\n          `time_of_day`,\n          `program_id` AS `channel_id`\n   FROM\n     (SELECT `LHS`.`program_id` AS `program_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`origin` AS `origin`,\n             `LHS`.`launch` AS `launch`,\n             `LHS`.`owner` AS `owner`,\n             `RHS`.`program_id` AS `program_id_other`,\n             `RHS`.`time_of_day` AS `time_of_day`\n      FROM `program` AS `LHS`\n      INNER JOIN `broadcast` AS `RHS` ON (`LHS`.`program_id` = `RHS`.`channel_id`)))\nWHERE (`time_of_day` != 'Morning'\n       OR `time_of_day` = 'Night')\nORDER BY OWNER\n", "sql2": "SELECT t1.owner\nFROM program AS t1\nJOIN broadcast AS t2 ON t1.program_id = t2.program_id\nWHERE t2.Time_of_day = 'Morning' INTERSECT\n  SELECT t1.owner\n  FROM program AS t1\n  JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = 'Night'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0017", "sql1": "\nSELECT `name`\nFROM `program`\nWHERE (`origin` != 'Beijing')\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nWHERE origin != 'Beijing'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0016", "sql1": "\nSELECT n AS count_distinct_owner_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT OWNER,\n             COUNT(*) AS n\n      FROM channel\n      GROUP BY OWNER))\nORDER BY count_distinct_owner_\n", "sql2": "SELECT count(DISTINCT OWNER)\nFROM channel", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.program_id AS program_id,\n          LHS.name AS name,\n          LHS.origin AS origin,\n          LHS.launch AS launch,\n          LHS.owner AS OWNER,\n          RHS.program_id AS program_id_other,\n          RHS.name AS name_other,\n          RHS.origin AS origin_other\n   FROM\n     (SELECT program_id,\n             name,\n             origin,\n             MAX(launch) OVER () AS launch,\n                              OWNER\n      FROM program) AS LHS\n   INNER JOIN program AS RHS ON (LHS.launch = RHS.launch\n                                    AND LHS.owner = RHS.owner))\nORDER BY name\n", "sql2": "SELECT name\nFROM program\nORDER BY launch DESC\nLIMIT 1", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0011", "sql1": "\nSELECT n AS count___,\n       time_of_day\nFROM\n  (SELECT time_of_day,\n          COUNT(*) AS n\n   FROM broadcast\n   GROUP BY time_of_day)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       time_of_day\nFROM broadcast\nGROUP BY time_of_day", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0010", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `channel_id`,\n             `name`,\n             `owner`,\n             `share_in_percent`,\n             `rating_in_percent`,\n             `channel_id_other`,\n             `time_of_day`,\n             `channel_id` AS `program_id`\n      FROM\n        (SELECT `LHS`.`channel_id` AS `channel_id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`owner` AS `owner`,\n                `LHS`.`share_in_percent` AS `share_in_percent`,\n                `LHS`.`rating_in_percent` AS `rating_in_percent`,\n                `RHS`.`channel_id` AS `channel_id_other`,\n                `RHS`.`time_of_day` AS `time_of_day`\n         FROM `channel` AS `LHS`\n         INNER JOIN `broadcast` AS `RHS` ON (`LHS`.`channel_id` = `RHS`.`program_id`))) AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `broadcast`\n           WHERE (`time_of_day` = 'Morning'\n                  OR `time_of_day` = 'Night')) AS RHS\n        WHERE (LHS.channel_id = RHS.channel_id\n               AND LHS.time_of_day = RHS.time_of_day\n               AND LHS.program_id = RHS.program_id) ))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM channel AS t1\nJOIN broadcast AS t2 ON t1.channel_id = t2.channel_id\nWHERE t2.time_of_day = 'Morning' INTERSECT\n  SELECT t1.name\n  FROM channel AS t1\n  JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night'", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/program_share/0006", "sql1": "\nSELECT name,\n       origin,\n       OWNER\nFROM program\nORDER BY name\n", "sql2": "SELECT name,\n       origin,\n       OWNER\nFROM program", "schema": "spider/program_share/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0009", "sql1": "\nSELECT DISTINCT n_distinct AS count_distinct_dept_name_\nFROM\n  (SELECT credits,\n          COUNT(DISTINCT dept_name) AS n_distinct\n   FROM course\n   GROUP BY credits)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name)\nFROM course", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0025", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT dept_name,\n                COUNT(*) AS n\n         FROM course\n         GROUP BY dept_name)\n      ORDER BY n DESC)\n   LIMIT 3)\n", "sql2": "SELECT dept_name\nFROM course\nGROUP BY dept_name\nORDER BY count(*) DESC\nLIMIT 3", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0072", "sql1": "\nSELECT `name`\nFROM `instructor`\nWHERE (`dept_name` = 'Comp. Sci.'\n       OR salary = 80000.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE dept_name = 'Comp. Sci.'\n  AND salary > 80000", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0033", "sql1": "\nSELECT title,\n       name\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.title AS title,\n          LHS.dept_name AS dept_name,\n          LHS.credits AS credits,\n          LHS.id AS id,\n          LHS.name AS name,\n          LHS.salary AS salary,\n          LHS.sec_id AS sec_id,\n          LHS.semester AS semester,\n          LHS.year AS YEAR\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.title AS title,\n             LHS.dept_name AS dept_name,\n             LHS.credits AS credits,\n             LHS.id AS id,\n             LHS.name AS name,\n             LHS.salary AS salary,\n             RHS.sec_id AS sec_id,\n             RHS.semester AS semester,\n             RHS.year AS YEAR\n      FROM\n        (SELECT LHS.course_id AS course_id,\n                LHS.title AS title,\n                LHS.dept_name AS dept_name,\n                LHS.credits AS credits,\n                RHS.id AS id,\n                RHS.name AS name,\n                RHS.salary AS salary\n         FROM course AS LHS\n         INNER JOIN instructor AS RHS ON (LHS.dept_name = RHS.dept_name)) AS LHS\n      INNER JOIN teaches AS RHS ON (LHS.course_id = RHS.course_id\n                                       AND LHS.id = RHS.id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM teaches\n      WHERE (YEAR = 2008.0)) AS RHS ON (LHS.course_id = RHS.course_id\n                                        AND LHS.id = RHS.id\n                                        AND LHS.sec_id = RHS.sec_id\n                                        AND LHS.semester = RHS.semester\n                                        AND LHS.year = RHS.year))\nORDER BY title\n", "sql2": "SELECT T1.title,\n       T3.name\nFROM course AS T1\nJOIN teaches AS T2 ON T1.course_id = T2.course_id\nJOIN instructor AS T3 ON T2.id = T3.id\nWHERE YEAR = 2008\nORDER BY T1.title", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0044", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT LHS.dept_name AS dept_name,\n          LHS.n AS n\n   FROM\n     (SELECT dept_name,\n             COUNT(*) AS n\n      FROM student\n      GROUP BY dept_name) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS maxn\n      FROM\n        (SELECT dept_name,\n                COUNT(*) AS n\n         FROM student\n         GROUP BY dept_name)) AS RHS ON (LHS.n = RHS.maxn))\nORDER BY dept_name\n", "sql2": "SELECT dept_name\nFROM student\nGROUP BY dept_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0013", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM course AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM prereq AS RHS\n           WHERE (LHS.course_id = RHS.course_id) )))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM course\nWHERE course_id NOT IN\n    (SELECT course_id\n     FROM prereq)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0005", "sql1": "\nSELECT dept_name,\n       building\nFROM\n  (SELECT *\n   FROM department AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT dept_name,\n                  building,\n                  MAX(budget) OVER () AS budget\n           FROM department) AS RHS\n        WHERE (LHS.dept_name = RHS.dept_name\n               AND LHS.building = RHS.building\n               AND LHS.budget = RHS.budget) ))\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       building\nFROM department\nORDER BY budget DESC\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0029", "sql1": "\nSELECT dept_name,\n       building\nFROM department\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       building\nFROM department\nORDER BY budget DESC", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0068", "sql1": "\nSELECT `name`,\n       `salary`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM\n           (SELECT `id`,\n                   `name`,\n                   `dept_name`,\n                   `salary`,\n                   AVG(`salary`) OVER () AS `meansalary`\n            FROM `instructor`)\n         WHERE (`dept_name` != 'Physics'\n                OR meansalary < salary))\n      ORDER BY salary)\n   LIMIT 44)\n", "sql2": "SELECT name,\n       salary\nFROM instructor\nWHERE salary <\n    (SELECT avg(salary)\n     FROM instructor\n     WHERE dept_name = 'Physics')", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0069", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`dept_name` AS `dept_name`,\n             `LHS`.`tot_cred` AS `tot_cred`,\n             `RHS`.`course_id` AS `course_id`,\n             `RHS`.`sec_id` AS `sec_id`,\n             `RHS`.`semester` AS `semester`,\n             `RHS`.`year` AS `year`,\n             `RHS`.`grade` AS `grade`\n      FROM `student` AS `LHS`\n      LEFT JOIN `takes` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`)) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `course`\n           WHERE (`dept_name` != 'Statistics')) AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM course AS T1\nJOIN takes AS T2 ON T1.course_id = T2.course_id\nJOIN student AS T3 ON T2.id = T3.id\nWHERE T1.dept_name = 'Statistics'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0028", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT *\n   FROM department AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT dept_name,\n                  building,\n                  MIN(budget) OVER () AS budget\n           FROM department) AS RHS\n        WHERE (LHS.dept_name = RHS.dept_name\n               AND LHS.building = RHS.building\n               AND LHS.budget = RHS.budget) ))\nORDER BY dept_name\n", "sql2": "SELECT dept_name\nFROM department\nORDER BY budget\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0004", "sql1": "\nSELECT building,\n       room_number\nFROM classroom\nWHERE (capacity >= 50.0\n       AND capacity <= 100.0)\nORDER BY building\n", "sql2": "SELECT building,\n       room_number\nFROM classroom\nWHERE capacity BETWEEN 50 AND 100", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0012", "sql1": "\nSELECT title,\n       credits,\n       dept_name\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.title AS title,\n          LHS.dept_name AS dept_name,\n          LHS.credits AS credits,\n          RHS.n AS n\n   FROM course AS LHS\n   INNER JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM prereq\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nWHERE (n != 1)\nORDER BY title\n", "sql2": "SELECT T1.title,\n       T1.credits,\n       T1.dept_name\nFROM course AS T1\nJOIN prereq AS T2 ON T1.course_id = T2.course_id\nGROUP BY T2.course_id\nHAVING count(*) > 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0045", "sql1": "\nSELECT n AS count___,\n       dept_name\nFROM\n  (SELECT dept_name,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY dept_name)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_name\nFROM student\nGROUP BY dept_name", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0032", "sql1": "\nSELECT name,\n       dept_name\nFROM student\nORDER BY name\n", "sql2": "SELECT name,\n       dept_name\nFROM student\nORDER BY tot_cred", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0073", "sql1": "\nSELECT name,\n       course_id\nFROM\n  (SELECT LHS.id AS id,\n          LHS.course_id AS course_id,\n          LHS.sec_id AS sec_id,\n          LHS.semester AS semester,\n          LHS.year AS YEAR,\n          RHS.name AS name,\n          RHS.dept_name AS dept_name,\n          RHS.salary AS salary\n   FROM teaches AS LHS\n   INNER JOIN instructor AS RHS ON (LHS.id = RHS.id))\nORDER BY name\n", "sql2": "SELECT name,\n       course_id\nFROM instructor AS T1\nJOIN teaches AS T2 ON T1.ID = T2.ID", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_s_id_\nFROM advisor\nORDER BY count_distinct_s_id_\n", "sql2": "SELECT count(DISTINCT s_id)\nFROM advisor", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0049", "sql1": "\nSELECT course_id\nFROM\n  (SELECT *\n   FROM course AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM prereq AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM course\nEXCEPT\nSELECT course_id\nFROM prereq", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0015", "sql1": "\nSELECT n_distinct AS count__distinct_id_\nFROM\n  (SELECT COUNT(DISTINCT id) AS n_distinct\n   FROM teaches)\nORDER BY count__distinct_id_\n", "sql2": "SELECT COUNT (DISTINCT id)\nFROM teaches", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0003", "sql1": "\nSELECT DISTINCT dept_name_other AS dept_name,\n                building_other AS building\nFROM\n  (SELECT LHS.dept_name AS dept_name,\n          LHS.building AS building,\n          LHS.budget AS budget,\n          LHS.meanbudget AS meanbudget,\n          RHS.dept_name AS dept_name_other,\n          RHS.building AS building_other,\n          RHS.budget AS budget_other,\n          RHS.meanbudget AS meanbudget_other\n   FROM\n     (SELECT dept_name,\n             building,\n             budget,\n             AVG(budget) OVER () AS meanbudget\n      FROM department) AS LHS\n   CROSS JOIN\n     (SELECT dept_name,\n             building,\n             budget,\n             AVG(budget) OVER () AS meanbudget\n      FROM department) AS RHS)\nWHERE (meanbudget = meanbudget_other\n       AND budget_other > meanbudget_other)\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       building\nFROM department\nWHERE budget >\n    (SELECT avg(budget)\n     FROM department)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0081", "sql1": "\nSELECT `n_distinct` AS `count__distinct_id_`\nFROM\n  (SELECT COUNT(DISTINCT `id`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `teaches`\n      WHERE (`semester` != 'Spring'\n             AND YEAR >= 2010.0)))\nORDER BY count__distinct_id_\n", "sql2": "SELECT COUNT (DISTINCT ID)\nFROM teaches\nWHERE semester = 'Spring'\n  AND YEAR = 2010", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0039", "sql1": "\nSELECT sumcredits AS sum_credits_,\n       dept_name\nFROM\n  (SELECT dept_name,\n          SUM(credits) AS sumcredits\n   FROM course\n   GROUP BY dept_name)\nORDER BY sum_credits_\n", "sql2": "SELECT sum(credits),\n       dept_name\nFROM course\nGROUP BY dept_name", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0022", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `course`\n         WHERE (`dept_name` = 'Statistics'\n                AND `dept_name` != 'Psychology'))\n      ORDER BY course_id DESC)\n   LIMIT 4)\n", "sql2": "SELECT title\nFROM course\nWHERE dept_name = 'Statistics'\nEXCEPT\nSELECT title\nFROM course\nWHERE dept_name = 'Psychology'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0059", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM instructor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teaches AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE id NOT IN\n    (SELECT id\n     FROM teaches)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0018", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `building`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `classroom`\n      WHERE (`building` = 'Lamberton'\n             AND capacity <= 50.0))\n   GROUP BY building)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM classroom\nWHERE building = 'Lamberton'\n  AND capacity < 50", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0038", "sql1": "\nSELECT title\nFROM\n  (SELECT title,\n          COUNT(*) AS n\n   FROM course\n   GROUP BY title)\nWHERE (n != 1)\nORDER BY title\n", "sql2": "SELECT title\nFROM course\nGROUP BY title\nHAVING count(*) > 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0080", "sql1": "\nSELECT salary\nFROM\n  (SELECT *\n   FROM instructor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT MAX(salary) AS salary\n           FROM instructor) AS RHS\n        WHERE (LHS.salary = RHS.salary) ))\nORDER BY salary\n", "sql2": "SELECT DISTINCT salary\nFROM instructor\nWHERE salary <\n    (SELECT max(salary)\n     FROM instructor)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0079", "sql1": "\nSELECT `course_id`\nFROM\n  (SELECT *\n   FROM `section`\n   WHERE (`year` = 2009.0\n          AND `year` != 2010.0))\nWHERE (`semester` = 'Fall'\n       OR `semester` != 'Spring')\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM SECTION\nWHERE semester = 'Fall'\n  AND YEAR = 2009\nEXCEPT\nSELECT course_id\nFROM SECTION\nWHERE semester = 'Spring'\n  AND YEAR = 2010", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0002", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `classroom`\n      WHERE (`building` != 'Lamberton')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM classroom\nWHERE building != 'Lamberton'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0014", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM course AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM prereq AS RHS\n        WHERE (LHS.course_id = RHS.course_id) ))\nORDER BY title\n", "sql2": "SELECT title\nFROM course\nWHERE course_id NOT IN\n    (SELECT course_id\n     FROM prereq)", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0001", "sql1": "\nSELECT DISTINCT building\nFROM classroom\nWHERE (capacity > 50.0)\nORDER BY building\n", "sql2": "SELECT DISTINCT building\nFROM classroom\nWHERE capacity > 50", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0060", "sql1": "\nSELECT id\nFROM\n  (SELECT *\n   FROM instructor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teaches AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY id\n", "sql2": "SELECT id\nFROM instructor\nEXCEPT\nSELECT id\nFROM teaches", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0076", "sql1": "\nSELECT name\nFROM instructor\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM instructor\nORDER BY name", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0021", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `course`\n         WHERE (`dept_name` = 'Statistics'\n                OR `dept_name` = 'Psychology'))\n      ORDER BY dept_name)\n   LIMIT 1)\n", "sql2": "SELECT title\nFROM course\nWHERE dept_name = 'Statistics' INTERSECT\n  SELECT title\n  FROM course WHERE dept_name = 'Psychology'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0077", "sql1": "\nSELECT `course_id`\nFROM\n  (SELECT *\n   FROM `section`\n   WHERE (`semester` = 'Fall'\n          OR `year` >= 2010.0))\nWHERE (`semester` = 'Spring'\n       OR YEAR = 2009.0)\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM SECTION\nWHERE semester = 'Fall'\n  AND YEAR = 2009\nUNION\nSELECT course_id\nFROM SECTION\nWHERE semester = 'Spring'\n  AND YEAR = 2010", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0061", "sql1": "\nSELECT `name`\nFROM\n  (SELECT *\n   FROM `instructor` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `teaches`\n           WHERE (`semester` = 'Spring')) AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE id NOT IN\n    (SELECT id\n     FROM teaches\n     WHERE semester = 'Spring')", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0041", "sql1": "\nSELECT n AS count___,\n       semester,\n       YEAR\nFROM\n  (SELECT semester,\n          YEAR,\n          COUNT(*) AS n\n   FROM section\n   GROUP BY semester,\n            YEAR)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       semester,\n       YEAR\nFROM SECTION\nGROUP BY semester,\n         YEAR", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0016", "sql1": "\nSELECT `sumbudget` AS `sum_budget_`\nFROM\n  (SELECT SUM(`budget`) AS `sumbudget`\n   FROM\n     (SELECT *\n      FROM `department`\n      WHERE (`dept_name` = 'Marketing'\n             OR `dept_name` = 'Finance')))\nORDER BY sum_budget_\n", "sql2": "SELECT sum(budget)\nFROM department\nWHERE dept_name = 'Marketing'\n  OR dept_name = 'Finance'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0082", "sql1": "\nSELECT dept_name,\n       meansalary AS avg__salary_\nFROM\n  (SELECT dept_name,\n          AVG(salary) AS meansalary\n   FROM instructor\n   GROUP BY dept_name)\nWHERE (meansalary > 42000.0)\nORDER BY dept_name\n", "sql2": "SELECT dept_name,\n       AVG (salary)\nFROM instructor\nGROUP BY dept_name\nHAVING AVG (salary) > 42000", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0031", "sql1": "\nSELECT id,\n       name,\n       dept_name,\n       salary\nFROM instructor\nORDER BY id\n", "sql2": "SELECT *\nFROM instructor\nORDER BY salary", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0027", "sql1": "\nSELECT title\nFROM course\nORDER BY title\n", "sql2": "SELECT title\nFROM course\nORDER BY title,\n         credits", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0007", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `classroom`\n      WHERE (`building` = 'Lamberton')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM classroom\nWHERE building = 'Lamberton'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0011", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.title AS title,\n          LHS.dept_name AS dept_name,\n          LHS.credits AS credits,\n          RHS.n AS n\n   FROM course AS LHS\n   INNER JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM prereq\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nWHERE (n = 2)\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM course AS T1\nJOIN prereq AS T2 ON T1.course_id = T2.course_id\nGROUP BY T2.course_id\nHAVING count(*) = 2", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0047", "sql1": "\nSELECT `i_id`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`dept_name` AS `dept_name`,\n          `LHS`.`tot_cred` AS `tot_cred`,\n          `RHS`.`i_id` AS `i_id`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`dept_name` = 'History')) AS LHS\n   INNER JOIN advisor AS RHS ON (LHS.id = RHS.s_id))\nORDER BY i_id\n", "sql2": "SELECT i_id\nFROM advisor AS T1\nJOIN student AS T2 ON T1.s_id = T2.id\nWHERE T2.dept_name = 'History'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0010", "sql1": "\nSELECT `n_distinct` AS `count_distinct_course_id_`\nFROM\n  (SELECT `dept_name`,\n          COUNT(DISTINCT `course_id`) AS `n_distinct`\n   FROM `course`\n   GROUP BY `dept_name`)\nWHERE (`dept_name` = 'Physics')\nORDER BY count_distinct_course_id_\n", "sql2": "SELECT count(DISTINCT course_id)\nFROM course\nWHERE dept_name = 'Physics'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0071", "sql1": "\nSELECT `name`\nFROM `instructor`\nWHERE (`dept_name` = 'Comp. Sci.')\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nWHERE dept_name = 'Comp. Sci.'", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_2/0030", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.dept_name AS dept_name,\n          LHS.salary AS salary,\n          RHS.id AS id_other,\n          RHS.name AS name_other,\n          RHS.dept_name AS dept_name_other\n   FROM instructor AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             dept_name,\n             MAX(salary) OVER () AS salary\n      FROM instructor) AS RHS ON (LHS.salary = RHS.salary))\nORDER BY name\n", "sql2": "SELECT name\nFROM instructor\nORDER BY salary DESC\nLIMIT 1", "schema": "spider/college_2/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/college_2/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0009", "sql1": "\nSELECT name\nFROM people\nWHERE (height > 200.0\n       OR height <= 190.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM people\nWHERE height > 200\n  OR height < 190", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0005", "sql1": "\nSELECT support_rate,\n       consider_rate,\n       oppose_rate\nFROM candidate\nORDER BY support_rate\n", "sql2": "SELECT Support_rate,\n       Consider_rate,\n       Oppose_rate\nFROM candidate\nORDER BY unsure_rate", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.sex AS sex,\n          LHS.name AS name,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          RHS.candidate_id AS candidate_id,\n          RHS.poll_source AS poll_source,\n          RHS.date AS date,\n          RHS.support_rate AS support_rate,\n          RHS.consider_rate AS consider_rate,\n          RHS.oppose_rate AS oppose_rate,\n          RHS.unsure_rate AS unsure_rate\n   FROM people AS LHS\n   INNER JOIN candidate AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM people AS t1\nJOIN candidate AS t2 ON t1.people_id = t2.people_id\nWHERE t2.support_rate < t2.oppose_rate", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0003", "sql1": "\nSELECT support_rate\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM candidate\n      ORDER BY support_rate DESC)\n   LIMIT 3)\n", "sql2": "SELECT support_rate\nFROM candidate\nORDER BY support_rate DESC\nLIMIT 3", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0018", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`candidate_id` AS `candidate_id`,\n          `LHS`.`people_id` AS `people_id`,\n          `LHS`.`poll_source` AS `poll_source`,\n          `LHS`.`date` AS `date`,\n          `LHS`.`support_rate` AS `support_rate`,\n          `LHS`.`consider_rate` AS `consider_rate`,\n          `LHS`.`oppose_rate` AS `oppose_rate`,\n          `LHS`.`unsure_rate` AS `unsure_rate`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`height` AS `height`,\n          `RHS`.`weight` AS `weight`\n   FROM `candidate` AS `LHS`\n   LEFT JOIN `people` AS `RHS` ON (`LHS`.`people_id` = `RHS`.`people_id`))\nWHERE (`sex` = 'F')\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM people AS t1\nJOIN candidate AS t2 ON t1.people_id = t2.people_id\nWHERE t1.sex = 'F'\nORDER BY t1.name", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM candidate AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM people\nWHERE people_id NOT IN\n    (SELECT people_id\n     FROM candidate)", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM candidate\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM candidate", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0020", "sql1": "\nSELECT people_id,\n       sex,\n       name,\n       date_of_birth,\n       height,\n       weight\nFROM people\nORDER BY people_id\n", "sql2": "SELECT *\nFROM people", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0007", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT name\nFROM people\nORDER BY date_of_birth", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0011", "sql1": "\nSELECT name,\n       sex\nFROM\n  (SELECT LHS.candidate_id AS candidate_id,\n          LHS.people_id AS people_id,\n          LHS.poll_source AS poll_source,\n          LHS.date AS date,\n          LHS.support_rate AS support_rate,\n          LHS.consider_rate AS consider_rate,\n          LHS.oppose_rate AS oppose_rate,\n          LHS.unsure_rate AS unsure_rate,\n          LHS.sex AS sex,\n          LHS.name AS name,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.height AS height,\n          LHS.weight AS weight\n   FROM\n     (SELECT LHS.candidate_id AS candidate_id,\n             LHS.people_id AS people_id,\n             LHS.poll_source AS poll_source,\n             LHS.date AS date,\n             LHS.support_rate AS support_rate,\n             LHS.consider_rate AS consider_rate,\n             LHS.oppose_rate AS oppose_rate,\n             LHS.unsure_rate AS unsure_rate,\n             RHS.sex AS sex,\n             RHS.name AS name,\n             RHS.date_of_birth AS date_of_birth,\n             RHS.height AS height,\n             RHS.weight AS weight\n      FROM candidate AS LHS\n      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(support_rate) AS support_rate\n      FROM candidate) AS RHS ON (LHS.support_rate = RHS.support_rate))\nORDER BY name\n", "sql2": "SELECT t1.name,\n       t1.sex\nFROM people AS t1\nJOIN candidate AS t2 ON t1.people_id = t2.people_id\nORDER BY t2.support_rate DESC\nLIMIT 1", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/candidate_poll/0006", "sql1": "\nSELECT poll_source\nFROM\n  (SELECT candidate_id,\n          people_id,\n          poll_source, date, support_rate,\n                             unsure_rate AS consider_rate,\n                             oppose_rate,\n                             unsure_rate,\n                             candidate_id_other,\n                             poll_source_other,\n                             date_other,\n                             support_rate_other,\n                             oppose_rate_other,\n                             unsure_rate_other\n   FROM\n     (SELECT candidate_id,\n             candidate_id AS people_id,\n             poll_source, date, support_rate,\n                                consider_rate,\n                                oppose_rate,\n                                unsure_rate,\n                                candidate_id_other,\n                                poll_source_other,\n                                date_other,\n                                support_rate_other,\n                                oppose_rate_other,\n                                unsure_rate_other\n      FROM\n        (SELECT LHS.candidate_id AS candidate_id,\n                LHS.people_id AS people_id,\n                LHS.poll_source AS poll_source,\n                LHS.date AS date,\n                LHS.support_rate AS support_rate,\n                LHS.consider_rate AS consider_rate,\n                LHS.oppose_rate AS oppose_rate,\n                LHS.unsure_rate AS unsure_rate,\n                RHS.candidate_id AS candidate_id_other,\n                RHS.poll_source AS poll_source_other,\n                RHS.date AS date_other,\n                RHS.support_rate AS support_rate_other,\n                RHS.oppose_rate AS oppose_rate_other,\n                RHS.unsure_rate AS unsure_rate_other\n         FROM candidate AS LHS\n         INNER JOIN candidate AS RHS ON (LHS.candidate_id = RHS.people_id\n                                            AND LHS.unsure_rate = RHS.consider_rate))))\nORDER BY poll_source\n", "sql2": "SELECT poll_source\nFROM candidate\nORDER BY oppose_rate DESC\nLIMIT 1", "schema": "spider/candidate_poll/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employees\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employees;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0025", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_status_code` AS `document_status_code`,\n          `RHS`.`document_type_code` AS `document_type_code`,\n          `RHS`.`receipt_date` AS `receipt_date`,\n          `RHS`.`receipt_number` AS `receipt_number`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `ref_shipping_agents` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_status_code` != 'done'\n             OR `document_type_code` = 'Paper')) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`))\nWHERE (`document_status_code` = 'done'\n       AND `shipping_agent_name` = 'USPS')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_status_code = 'done'\n  AND document_type_code = 'Paper' INTERSECT\n  SELECT document_id\n  FROM Documents\n  JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0033", "sql1": "\nSELECT document_id,\n       n_distinct AS count_distinct_employee_id_\nFROM\n  (SELECT document_id,\n          draft_number,\n          COUNT(DISTINCT employee_id) AS n_distinct\n   FROM circulation_history\n   GROUP BY document_id,\n            draft_number)\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       count(DISTINCT employee_id)\nFROM Circulation_History\nGROUP BY document_id;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0005", "sql1": "\nSELECT shipping_agent_name\nFROM ref_shipping_agents\nORDER BY shipping_agent_name\n", "sql2": "SELECT shipping_agent_name\nFROM Ref_Shipping_Agents;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0029", "sql1": "\nSELECT document_id,\n       n AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT document_id,\n                COUNT(*) AS n\n         FROM draft_copies\n         GROUP BY document_id)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT document_id,\n       count(*)\nFROM Draft_Copies\nGROUP BY document_id\nHAVING count(*) > 1;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0004", "sql1": "\nSELECT `document_type_description`\nFROM `ref_document_types`\nWHERE (`document_type_code` = 'Paper')\nORDER BY document_type_description\n", "sql2": "SELECT document_type_description\nFROM Ref_Document_Types\nWHERE document_type_code = 'Paper';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0012", "sql1": "\nSELECT DISTINCT role_description,\n                role_code,\n                n AS count___\nFROM\n  (SELECT LHS.role_code AS role_code,\n          LHS.role_description AS role_description,\n          LHS.employee_id AS employee_id,\n          LHS.employee_name AS employee_name,\n          LHS.other_details AS other_details,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.role_code AS role_code,\n             LHS.role_description AS role_description,\n             RHS.employee_id AS employee_id,\n             RHS.employee_name AS employee_name,\n             RHS.other_details AS other_details\n      FROM roles AS LHS\n      INNER JOIN employees AS RHS ON (LHS.role_code = RHS.role_code)) AS LHS\n   INNER JOIN\n     (SELECT role_code,\n             COUNT(*) AS n\n      FROM employees\n      GROUP BY role_code) AS RHS ON (LHS.role_code = RHS.role_code))\nORDER BY role_description\n", "sql2": "SELECT T1.role_description,\n       T2.role_code,\n       count(*)\nFROM ROLES AS T1\nJOIN Employees AS T2 ON T1.role_code = T2.role_code\nGROUP BY T2.role_code;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0032", "sql1": "\nSELECT employee_name,\n       employee_id AS count___\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.employee_name AS employee_name,\n          LHS.maxn AS maxn,\n          RHS.draft_number AS draft_number,\n          RHS.copy_number AS copy_number\n   FROM\n     (SELECT employee_id,\n             employee_name,\n             MAX(n) AS maxn\n      FROM\n        (SELECT employee_id,\n                employee_name,\n                COUNT(*) AS n\n         FROM employees\n         GROUP BY employee_id,\n                  employee_name)\n      GROUP BY employee_id,\n               employee_name) AS LHS\n   INNER JOIN circulation_history AS RHS ON (LHS.employee_id = RHS.employee_id\n                                                AND LHS.maxn = RHS.document_id))\nORDER BY employee_name\n", "sql2": "SELECT Employees.employee_name,\n       count(*)\nFROM Employees\nJOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id\nGROUP BY Circulation_History.document_id,\n         Circulation_History.draft_number,\n         Circulation_History.copy_number\nORDER BY count(*) DESC\nLIMIT 1;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0008", "sql1": "\nSELECT `role_description`\nFROM `roles`\nWHERE (`role_code` = 'ED')\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM ROLES\nWHERE role_code = 'ED';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0015", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `document_status_code`,\n          `document_type_code`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_status_code` = 'done'))\n   GROUP BY document_status_code,\n            document_type_code)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents\nWHERE document_status_code = 'done';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0003", "sql1": "\nSELECT document_type_code\nFROM ref_document_types\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Ref_Document_Types;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0019", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n          `LHS`.`document_id` AS `document_id`,\n          `LHS`.`document_status_code` AS `document_status_code`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`receipt_date` AS `receipt_date`,\n          `LHS`.`receipt_number` AS `receipt_number`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,\n             `LHS`.`shipping_agent_name` AS `shipping_agent_name`,\n             `LHS`.`shipping_agent_description` AS `shipping_agent_description`,\n             `RHS`.`document_id` AS `document_id`,\n             `RHS`.`document_status_code` AS `document_status_code`,\n             `RHS`.`document_type_code` AS `document_type_code`,\n             `RHS`.`receipt_date` AS `receipt_date`,\n             `RHS`.`receipt_number` AS `receipt_number`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `ref_shipping_agents` AS `LHS`\n      INNER JOIN `documents` AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT `shipping_agent_code`,\n             COUNT(*) AS `n`\n      FROM `documents`\n      GROUP BY `shipping_agent_code`) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`))\nWHERE (`shipping_agent_name` = 'USPS')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_Shipping_Agents\nJOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code\nWHERE Ref_Shipping_Agents.shipping_agent_name = 'USPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0023", "sql1": "\nSELECT mailing_date\nFROM documents_mailed\nWHERE (document_id = 7)\nORDER BY mailing_date\n", "sql2": "SELECT mailing_date\nFROM Documents_Mailed\nWHERE document_id = 7;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0022", "sql1": "\nSELECT address_details\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.address_details AS address_details,\n          RHS.document_id AS document_id,\n          RHS.mailing_date AS mailing_date\n   FROM addresses AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM documents_mailed\n      WHERE (document_id = 4)) AS RHS ON (LHS.address_id = RHS.mailed_to_address_id))\nORDER BY address_details\n", "sql2": "SELECT Addresses.address_details\nFROM Addresses\nJOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id\nWHERE document_id = 4;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0018", "sql1": "\nSELECT shipping_agent_name\nFROM\n  (SELECT LHS.shipping_agent_code AS shipping_agent_code,\n          LHS.shipping_agent_name AS shipping_agent_name,\n          LHS.shipping_agent_description AS shipping_agent_description,\n          RHS.document_id AS document_id,\n          RHS.document_status_code AS document_status_code,\n          RHS.document_type_code AS document_type_code,\n          RHS.receipt_date AS receipt_date,\n          RHS.receipt_number AS receipt_number,\n          RHS.other_details AS other_details\n   FROM ref_shipping_agents AS LHS\n   INNER JOIN documents AS RHS ON (LHS.shipping_agent_code = RHS.shipping_agent_code))\nWHERE (document_id = 2)\nORDER BY shipping_agent_name\n", "sql2": "SELECT Ref_Shipping_Agents.shipping_agent_name\nFROM Ref_Shipping_Agents\nJOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code\nWHERE Documents.document_id = 2;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0002", "sql1": "\nSELECT `document_status_description`\nFROM `ref_document_status`\nWHERE (`document_status_code` = 'working')\nORDER BY document_status_description\n", "sql2": "SELECT document_status_description\nFROM Ref_Document_Status\nWHERE document_status_code = 'working';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0001", "sql1": "\nSELECT document_status_code\nFROM ref_document_status\nORDER BY document_status_code\n", "sql2": "SELECT document_status_code\nFROM Ref_Document_Status;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0017", "sql1": "\nSELECT `document_id`\nFROM `documents`\nWHERE (`document_status_code` = 'done'\n       AND `document_type_code` = 'Paper')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_status_code = 'done'\n  AND document_type_code = 'Paper';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0021", "sql1": "\nSELECT receipt_date\nFROM documents\nWHERE (document_id = 3)\nORDER BY receipt_date\n", "sql2": "SELECT receipt_date\nFROM Documents\nWHERE document_id = 3;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0016", "sql1": "\nSELECT document_type_code\nFROM documents\nWHERE (document_id = 2)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Documents\nWHERE document_id = 2;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0031", "sql1": "\nSELECT employee_name\nFROM\n  (SELECT *\n   FROM employees AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM circulation_history AS RHS\n        WHERE (LHS.employee_id = RHS.employee_id) ))\nORDER BY employee_name\n", "sql2": "SELECT employee_name\nFROM Employees\nEXCEPT\nSELECT Employees.employee_name\nFROM Employees\nJOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0027", "sql1": "\nSELECT draft_number AS count___\nFROM\n  (SELECT document_id,\n          draft_number,\n          COUNT(DISTINCT document_id) AS n_distinct\n   FROM\n     (SELECT *\n      FROM draft_copies\n      WHERE (document_id < 2))\n   GROUP BY document_id,\n            draft_number)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Draft_Copies\nWHERE document_id = 2;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0007", "sql1": "\nSELECT role_code\nFROM roles\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM ROLES;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0011", "sql1": "\nSELECT document_id,\n       receipt_date\nFROM documents\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       receipt_date\nFROM Documents;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0010", "sql1": "\nSELECT `role_description`\nFROM\n  (SELECT `LHS`.`role_code` AS `role_code`,\n          `LHS`.`role_description` AS `role_description`,\n          `RHS`.`employee_id` AS `employee_id`,\n          `RHS`.`employee_name` AS `employee_name`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `roles` AS `LHS`\n   INNER JOIN `employees` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`))\nWHERE (`employee_name` = 'Koby')\nORDER BY role_description\n", "sql2": "SELECT T1.role_description\nFROM ROLES AS T1\nJOIN Employees AS T2 ON T1.role_code = T2.role_code\nWHERE T2.employee_name = 'Koby';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0006", "sql1": "\nSELECT `shipping_agent_code`\nFROM `ref_shipping_agents`\nWHERE (`shipping_agent_name` = 'UPS')\nORDER BY shipping_agent_code\n", "sql2": "SELECT shipping_agent_code\nFROM Ref_Shipping_Agents\nWHERE shipping_agent_name = 'UPS';", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0026", "sql1": "\nSELECT draft_details\nFROM document_drafts\nWHERE (document_id = 7)\nORDER BY draft_details\n", "sql2": "SELECT draft_details\nFROM Document_Drafts\nWHERE document_id = 7;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Control_Systems/0030", "sql1": "\nSELECT employee_name_other AS employee_name\nFROM\n  (SELECT LHS.employee_id AS employee_id,\n          LHS.role_code AS role_code,\n          LHS.employee_name AS employee_name,\n          LHS.other_details AS other_details,\n          RHS.document_id AS document_id,\n          RHS.draft_number AS draft_number,\n          RHS.employee_id AS employee_id_other,\n          RHS.role_code AS role_code_other,\n          RHS.employee_name AS employee_name_other,\n          RHS.other_details AS other_details_other\n   FROM employees AS LHS\n   INNER JOIN\n     (SELECT LHS.document_id AS document_id,\n             LHS.draft_number AS draft_number,\n             LHS.copy_number AS copy_number,\n             LHS.employee_id AS employee_id,\n             RHS.role_code AS role_code,\n             RHS.employee_name AS employee_name,\n             RHS.other_details AS other_details\n      FROM circulation_history AS LHS\n      INNER JOIN employees AS RHS ON (LHS.employee_id = RHS.employee_id)) AS RHS ON (LHS.employee_id = RHS.copy_number))\nORDER BY employee_name\n", "sql2": "SELECT Employees.employee_name\nFROM Employees\nJOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id\nWHERE Circulation_History.document_id = 1;", "schema": "spider/cre_Doc_Control_Systems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Control_Systems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0005", "sql1": "\nSELECT organized_by,\n       name\nFROM church\nWHERE (open_date < 1830\n       OR open_date <= 1840)\nORDER BY organized_by\n", "sql2": "SELECT organized_by,\n       name\nFROM church\nWHERE open_date BETWEEN 1830 AND 1840", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0008", "sql1": "\nSELECT `people_id` AS `count___`\nFROM\n  (SELECT `people_id`,\n          `name`,\n          `country`,\n          `is_male`,\n          `age`,\n          COUNT(*) OVER () AS `n`\n   FROM `people`)\nWHERE (`is_male` != 'F'\n       AND age = 30)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM people\nWHERE is_male = 'F'\n  AND age > 30", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0003", "sql1": "\nSELECT name\nFROM church\nORDER BY name\n", "sql2": "SELECT name\nFROM church\nORDER BY open_date DESC", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0019", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT country,\n       count(*)\nFROM people\nGROUP BY country", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0002", "sql1": "\nSELECT name,\n       open_date,\n       organized_by\nFROM church\nORDER BY name\n", "sql2": "SELECT name,\n       open_date,\n       organized_by\nFROM Church", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM church\n      WHERE (open_date != 1850)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Church\nWHERE Open_Date < 1850", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0017", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT YEAR,\n          COUNT(*) AS n\n   FROM wedding\n   GROUP BY YEAR)\nWHERE (YEAR >= 2016\n       OR n > 2016)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM wedding\nWHERE YEAR = 2016", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0020", "sql1": "\nSELECT female_id AS count__distinct_church_id_\nFROM\n  (SELECT church_id,\n          female_id,\n          COUNT(DISTINCT church_id) AS n_distinct\n   FROM wedding\n   GROUP BY church_id,\n            female_id)\nWHERE (church_id != 2016\n       AND n_distinct = church_id)\nORDER BY count__distinct_church_id_\n", "sql2": "SELECT COUNT (DISTINCT church_id)\nFROM wedding\nWHERE YEAR = 2016", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0007", "sql1": "\nSELECT name,\n       open_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM church\n      ORDER BY church_id DESC)\n   LIMIT 3)\n", "sql2": "SELECT name,\n       open_date\nFROM church\nORDER BY open_date DESC\nLIMIT 3", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wedding/0006", "sql1": "\nSELECT open_date,\n       n AS count___\nFROM\n  (SELECT church_id,\n          open_date,\n          COUNT(*) AS n\n   FROM church\n   GROUP BY church_id,\n            open_date)\nORDER BY open_date\n", "sql2": "SELECT open_date,\n       count(*)\nFROM church\nGROUP BY open_date", "schema": "spider/wedding/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0009", "sql1": "\nSELECT DISTINCT document_type_code\nFROM\n  (SELECT document_code,\n          document_structure_code,\n          document_type_code,\n          access_count,\n          document_name,\n          SUM(access_count) OVER () AS sumaccess_count\n   FROM documents)\nWHERE (access_count != 10000\n       OR sumaccess_count < access_count)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nGROUP BY document_type_code\nHAVING sum(access_count) > 10000", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0013", "sql1": "\nSELECT `meanaccess_count` AS `avg_t1_access_count_`\nFROM\n  (SELECT `functional_area_description`,\n          AVG(`access_count`) AS `meanaccess_count`\n   FROM\n     (SELECT `LHS`.`functional_area_code` AS `functional_area_code`,\n             `LHS`.`parent_functional_area_code` AS `parent_functional_area_code`,\n             `LHS`.`functional_area_description` AS `functional_area_description`,\n             `LHS`.`document_code` AS `document_code`,\n             `LHS`.`document_structure_code` AS `document_structure_code`,\n             `LHS`.`document_type_code` AS `document_type_code`,\n             `LHS`.`access_count` AS `access_count`,\n             `LHS`.`document_name` AS `document_name`\n      FROM\n        (SELECT `LHS`.`functional_area_code` AS `functional_area_code`,\n                `LHS`.`parent_functional_area_code` AS `parent_functional_area_code`,\n                `LHS`.`functional_area_description` AS `functional_area_description`,\n                `RHS`.`document_code` AS `document_code`,\n                `RHS`.`document_structure_code` AS `document_structure_code`,\n                `RHS`.`document_type_code` AS `document_type_code`,\n                `RHS`.`access_count` AS `access_count`,\n                `RHS`.`document_name` AS `document_name`\n         FROM `functional_areas` AS `LHS`\n         CROSS JOIN `documents` AS `RHS`) AS `LHS`\n      INNER JOIN `document_functional_areas` AS `RHS` ON (`LHS`.`functional_area_code` = `RHS`.`functional_area_code`\n                                                             AND `LHS`.`document_code` = `RHS`.`document_code`))\n   GROUP BY `functional_area_description`)\nWHERE (`functional_area_description` = 'Acknowledgement')\nORDER BY avg_t1_access_count_\n", "sql2": "SELECT avg(t1.access_count)\nFROM documents AS t1\nJOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code\nJOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code\nWHERE t3.functional_area_description = 'Acknowledgement'", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0005", "sql1": "\nSELECT meanaccess_count AS avg_access_count_\nFROM\n  (SELECT AVG(access_count) AS meanaccess_count\n   FROM documents)\nORDER BY avg_access_count_\n", "sql2": "SELECT avg(access_count)\nFROM documents", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0003", "sql1": "\nSELECT document_type_code\nFROM\n  (SELECT document_type_code,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_type_code)\nWHERE (n > 4)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nGROUP BY document_type_code\nHAVING count(*) > 4", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0022", "sql1": "\nSELECT DISTINCT document_type_code\nFROM\n  (SELECT document_code,\n          document_structure_code,\n          document_type_code,\n          access_count,\n          document_name,\n          COUNT(*) OVER () AS n\n   FROM documents)\nWHERE (n > 2)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nGROUP BY document_type_code\nHAVING count(*) > 2", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0002", "sql1": "\nSELECT DISTINCT document_name_other AS document_name,\n                maxaccess_count AS access_count\nFROM\n  (SELECT LHS.document_code AS document_code,\n          LHS.document_structure_code AS document_structure_code,\n          LHS.document_type_code AS document_type_code,\n          LHS.access_count AS access_count,\n          LHS.document_name AS document_name,\n          LHS.maxaccess_count AS maxaccess_count,\n          RHS.document_code AS document_code_other,\n          RHS.document_structure_code AS document_structure_code_other,\n          RHS.document_type_code AS document_type_code_other,\n          RHS.access_count AS access_count_other,\n          RHS.document_name AS document_name_other,\n          RHS.maxaccess_count AS maxaccess_count_other\n   FROM\n     (SELECT document_code,\n             document_structure_code,\n             document_type_code,\n             access_count,\n             document_name,\n             MAX(access_count) OVER () AS maxaccess_count\n      FROM documents) AS LHS\n   CROSS JOIN\n     (SELECT document_code,\n             document_structure_code,\n             document_type_code,\n             access_count,\n             document_name,\n             MAX(access_count) OVER () AS maxaccess_count\n      FROM documents) AS RHS)\nWHERE (maxaccess_count = access_count_other\n       AND access_count_other <= maxaccess_count_other)\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       access_count\nFROM documents\nORDER BY access_count DESC\nLIMIT 1", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0014", "sql1": "\nSELECT document_name\nFROM\n  (SELECT *\n   FROM documents AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT LHS.section_id AS section_id,\n                  LHS.image_id AS image_id,\n                  RHS.document_code AS document_code,\n                  RHS.section_sequence AS section_sequence,\n                  RHS.section_code AS section_code,\n                  RHS.section_title AS section_title\n           FROM document_sections_images AS LHS\n           INNER JOIN document_sections AS RHS ON (LHS.section_id = RHS.section_id)) AS RHS\n        WHERE (LHS.document_code = RHS.document_code) ))\nORDER BY document_name\n", "sql2": "SELECT document_name\nFROM documents\nEXCEPT\nSELECT t1.document_name\nFROM documents AS t1\nJOIN document_sections AS t2 ON t1.document_code = t2.document_code\nJOIN document_sections_images AS t3 ON t2.section_id = t3.section_id", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0001", "sql1": "\nSELECT document_name,\n       access_count\nFROM documents\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       access_count\nFROM documents\nORDER BY document_name", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0017", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM users\nWHERE (user_login = 1)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM users\nWHERE user_login = 1", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0021", "sql1": "\nSELECT n AS count___,\n       role_code\nFROM\n  (SELECT role_code,\n          COUNT(*) AS n\n   FROM users\n   GROUP BY role_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       role_code\nFROM users\nGROUP BY role_code", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0020", "sql1": "\nSELECT image_name,\n       image_url\nFROM images\nORDER BY image_name\n", "sql2": "SELECT image_name,\n       image_url\nFROM images\nORDER BY image_name", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0007", "sql1": "\nSELECT `document_type_code`\nFROM `documents`\nWHERE (`document_name` = 'David CV')\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM documents\nWHERE document_name = 'David CV'", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0011", "sql1": "\nSELECT document_name\nFROM\n  (SELECT *\n   FROM documents AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM document_sections AS RHS\n        WHERE (LHS.document_code = RHS.document_code) ))\nORDER BY document_name\n", "sql2": "SELECT document_name\nFROM documents\nWHERE document_code NOT IN\n    (SELECT document_code\n     FROM document_sections)", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/document_management/0010", "sql1": "\nSELECT `section_title`\nFROM\n  (SELECT *\n   FROM `document_sections` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `documents`\n           WHERE (`document_name` = 'David CV')) AS RHS\n        WHERE (LHS.document_code = RHS.document_code) ))\nORDER BY section_title\n", "sql2": "SELECT t2.section_title\nFROM documents AS t1\nJOIN document_sections AS t2 ON t1.document_code = t2.document_code\nWHERE t1.document_name = 'David CV'", "schema": "spider/document_management/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/document_management/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0009", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT credit_score,\n          cust_name,\n          SUM(amount) AS sumamount\n   FROM\n     (SELECT LHS.loan_id AS loan_id,\n             LHS.loan_type AS loan_type,\n             LHS.cust_id AS cust_id,\n             LHS.branch_id AS branch_id,\n             LHS.amount AS amount,\n             RHS.cust_name AS cust_name,\n             RHS.acc_type AS acc_type,\n             RHS.acc_bal AS acc_bal,\n             RHS.no_of_loans AS no_of_loans,\n             RHS.credit_score AS credit_score,\n             RHS.branch_id AS branch_id_other,\n             RHS.state AS state\n      FROM loan AS LHS\n      INNER JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id))\n   GROUP BY credit_score,\n            cust_name)\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nGROUP BY T1.cust_name\nORDER BY sum(T2.amount)", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0013", "sql1": "\nSELECT n_distinct AS count_distinct_acc_type_\nFROM\n  (SELECT COUNT(DISTINCT acc_type) AS n_distinct\n   FROM customer)\nORDER BY count_distinct_acc_type_\n", "sql2": "SELECT count(DISTINCT acc_type)\nFROM customer", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0005", "sql1": "\nSELECT meanno_of_customers AS avg_no_of_customers_\nFROM\n  (SELECT AVG(no_of_customers) AS meanno_of_customers\n   FROM bank)\nORDER BY avg_no_of_customers_\n", "sql2": "SELECT avg(no_of_customers)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0029", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state\n   FROM customer AS LHS\n   INNER JOIN\n     (SELECT cust_id,\n             COUNT(*) AS n\n      FROM loan\n      GROUP BY cust_id) AS RHS ON (LHS.branch_id = RHS.n\n                                   AND LHS.cust_id = RHS.cust_id))\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nGROUP BY T1.cust_name\nHAVING count(*) > 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0004", "sql1": "\nSELECT `no_of_customers` AS `avg_no_of_customers_`\nFROM\n  (SELECT `branch_id`,\n          `bname`,\n          `no_of_customers`,\n          `city`,\n          `state`,\n          AVG(`no_of_customers`) OVER () AS `meanno_of_customers`\n   FROM `bank`)\nWHERE (`state` = 'Utah')\nORDER BY avg_no_of_customers_\n", "sql2": "SELECT avg(no_of_customers)\nFROM bank\nWHERE state = 'Utah'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0012", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT state) OVER () AS count_distinct_state_\nFROM bank\nORDER BY count_distinct_state_\n", "sql2": "SELECT count(DISTINCT state)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0008", "sql1": "\nSELECT cust_name\nFROM customer\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nORDER BY acc_bal", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0015", "sql1": "\nSELECT DISTINCT SUM(`acc_bal`) OVER () AS `sum_acc_bal_`\nFROM `customer`\nWHERE (`state` = 'Utah'\n       OR `state` = 'Texas')\nORDER BY sum_acc_bal_\n", "sql2": "SELECT sum(acc_bal)\nFROM customer\nWHERE state = 'Utah'\n  OR state = 'Texas'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0003", "sql1": "\nSELECT DISTINCT SUM(`no_of_customers`) OVER () AS `sum_no_of_customers_`\nFROM `bank`\nWHERE (`city` = 'New York City')\nORDER BY sum_no_of_customers_\n", "sql2": "SELECT sum(no_of_customers)\nFROM bank\nWHERE city = 'New York City'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0019", "sql1": "\nSELECT `cust_name`\nFROM\n  (SELECT `cust_id`,\n          `cust_name`,\n          `acc_type`,\n          `acc_bal`,\n          `no_of_loans`,\n          `credit_score`,\n          `branch_id`,\n          `state`,\n          `loan_type`,\n          `cust_id_other`,\n          `branch_id_other`,\n          `amount`,\n          `cust_id` AS `loan_id`\n   FROM\n     (SELECT `LHS`.`cust_id` AS `cust_id`,\n             `LHS`.`cust_name` AS `cust_name`,\n             `LHS`.`acc_type` AS `acc_type`,\n             `LHS`.`acc_bal` AS `acc_bal`,\n             `LHS`.`no_of_loans` AS `no_of_loans`,\n             `LHS`.`credit_score` AS `credit_score`,\n             `LHS`.`branch_id` AS `branch_id`,\n             `LHS`.`state` AS `state`,\n             `RHS`.`loan_type` AS `loan_type`,\n             `RHS`.`cust_id` AS `cust_id_other`,\n             `RHS`.`branch_id` AS `branch_id_other`,\n             `RHS`.`amount` AS `amount`\n      FROM `customer` AS `LHS`\n      INNER JOIN `loan` AS `RHS` ON (`LHS`.`cust_id` = `RHS`.`loan_id`)))\nWHERE (`loan_type` = 'Mortgages'\n       AND `loan_type` != 'Auto')\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nWHERE loan_type = 'Mortgages' INTERSECT\n  SELECT T1.cust_name\n  FROM customer AS T1\n  JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0035", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT LHS.loan_id AS loan_id,\n          LHS.loan_type AS loan_type,\n          LHS.cust_id AS cust_id,\n          LHS.branch_id AS branch_id,\n          LHS.amount AS amount,\n          RHS.cust_name AS cust_name,\n          RHS.acc_type AS acc_type,\n          RHS.acc_bal AS acc_bal,\n          RHS.no_of_loans AS no_of_loans,\n          RHS.credit_score AS credit_score,\n          RHS.branch_id AS branch_id_other,\n          RHS.state AS state\n   FROM loan AS LHS\n   INNER JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id))\nWHERE (amount > 3000)\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nWHERE amount > 3000", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0034", "sql1": "\nSELECT DISTINCT cust_name,\n                credit_score\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state,\n          RHS.loan_id AS loan_id,\n          RHS.loan_type AS loan_type,\n          RHS.branch_id AS branch_id_other,\n          RHS.amount AS amount\n   FROM customer AS LHS\n   INNER JOIN loan AS RHS ON (LHS.cust_id = RHS.cust_id))\nORDER BY cust_name\n", "sql2": "SELECT DISTINCT T1.cust_name,\n                T1.credit_score\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0022", "sql1": "\nSELECT DISTINCT cust_name\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state,\n          LHS.mincredit_score AS mincredit_score,\n          RHS.cust_id AS cust_id_other,\n          RHS.cust_name AS cust_name_other,\n          RHS.acc_type AS acc_type_other,\n          RHS.acc_bal AS acc_bal_other,\n          RHS.no_of_loans AS no_of_loans_other,\n          RHS.credit_score AS credit_score_other,\n          RHS.branch_id AS branch_id_other,\n          RHS.state AS state_other,\n          RHS.mincredit_score AS mincredit_score_other\n   FROM\n     (SELECT cust_id,\n             cust_name,\n             acc_type,\n             acc_bal,\n             no_of_loans,\n             credit_score,\n             branch_id,\n             state,\n             MIN(credit_score) OVER () AS mincredit_score\n      FROM customer) AS LHS\n   CROSS JOIN\n     (SELECT cust_id,\n             cust_name,\n             acc_type,\n             acc_bal,\n             no_of_loans,\n             credit_score,\n             branch_id,\n             state,\n             MIN(credit_score) OVER () AS mincredit_score\n      FROM customer) AS RHS)\nWHERE (credit_score = mincredit_score_other\n       OR credit_score_other < mincredit_score_other)\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nORDER BY credit_score\nLIMIT 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0018", "sql1": "\nSELECT `cust_name`\nFROM\n  (SELECT `cust_id`,\n          `cust_name`,\n          `acc_type`,\n          `acc_bal`,\n          `no_of_loans`,\n          `credit_score`,\n          `branch_id`,\n          `state`,\n          `loan_type`,\n          `cust_id_other`,\n          `branch_id_other`,\n          `amount`,\n          `cust_id` AS `loan_id`\n   FROM\n     (SELECT `LHS`.`cust_id` AS `cust_id`,\n             `LHS`.`cust_name` AS `cust_name`,\n             `LHS`.`acc_type` AS `acc_type`,\n             `LHS`.`acc_bal` AS `acc_bal`,\n             `LHS`.`no_of_loans` AS `no_of_loans`,\n             `LHS`.`credit_score` AS `credit_score`,\n             `LHS`.`branch_id` AS `branch_id`,\n             `LHS`.`state` AS `state`,\n             `RHS`.`loan_type` AS `loan_type`,\n             `RHS`.`cust_id` AS `cust_id_other`,\n             `RHS`.`branch_id` AS `branch_id_other`,\n             `RHS`.`amount` AS `amount`\n      FROM `customer` AS `LHS`\n      INNER JOIN `loan` AS `RHS` ON (`LHS`.`cust_id` = `RHS`.`loan_id`)))\nWHERE (`loan_type` != 'Mortgages')\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nEXCEPT\nSELECT T1.cust_name\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nWHERE T2.loan_type = 'Mortgages'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0002", "sql1": "\nSELECT sumno_of_customers AS sum_no_of_customers_\nFROM\n  (SELECT SUM(no_of_customers) AS sumno_of_customers\n   FROM bank)\nORDER BY sum_no_of_customers_\n", "sql2": "SELECT sum(no_of_customers)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM bank\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0017", "sql1": "\nSELECT `cust_name`\nFROM `customer`\nWHERE (`acc_type` != 'saving')\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nEXCEPT\nSELECT cust_name\nFROM customer\nWHERE acc_type = 'saving'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0021", "sql1": "\nSELECT bname\nFROM\n  (SELECT LHS.branch_id AS branch_id,\n          LHS.bname AS bname,\n          LHS.no_of_customers AS no_of_customers,\n          LHS.city AS city,\n          LHS.state AS state,\n          LHS.maxno_of_customers AS maxno_of_customers,\n          RHS.branch_id AS branch_id_other,\n          RHS.bname AS bname_other,\n          RHS.no_of_customers AS no_of_customers_other,\n          RHS.city AS city_other,\n          RHS.state AS state_other\n   FROM\n     (SELECT branch_id,\n             bname,\n             no_of_customers,\n             city,\n             state,\n             MAX(no_of_customers) OVER () AS maxno_of_customers\n      FROM bank) AS LHS\n   CROSS JOIN bank AS RHS)\nWHERE (no_of_customers = maxno_of_customers\n       AND maxno_of_customers <= no_of_customers_other)\nORDER BY bname\n", "sql2": "SELECT bname\nFROM bank\nORDER BY no_of_customers DESC\nLIMIT 1", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0020", "sql1": "\nSELECT cust_name\nFROM\n  (SELECT credit_score,\n          cust_name,\n          AVG(credit_score) AS meancredit_score\n   FROM\n     (SELECT cust_id,\n             cust_name,\n             acc_type,\n             acc_bal,\n             no_of_loans,\n             credit_score,\n             no_of_loans AS branch_id,\n             state,\n             cust_id_other,\n             cust_name_other,\n             acc_type_other,\n             acc_bal_other,\n             no_of_loans_other,\n             credit_score_other\n      FROM\n        (SELECT LHS.cust_id AS cust_id,\n                LHS.cust_name AS cust_name,\n                LHS.acc_type AS acc_type,\n                LHS.acc_bal AS acc_bal,\n                LHS.no_of_loans AS no_of_loans,\n                LHS.credit_score AS credit_score,\n                LHS.branch_id AS branch_id,\n                LHS.state AS state,\n                RHS.cust_id AS cust_id_other,\n                RHS.cust_name AS cust_name_other,\n                RHS.acc_type AS acc_type_other,\n                RHS.acc_bal AS acc_bal_other,\n                RHS.no_of_loans AS no_of_loans_other,\n                RHS.credit_score AS credit_score_other\n         FROM customer AS LHS\n         INNER JOIN customer AS RHS ON (LHS.no_of_loans = RHS.branch_id\n                                           AND LHS.state = RHS.state)))\n   GROUP BY credit_score,\n            cust_name)\nORDER BY cust_name\n", "sql2": "SELECT cust_name\nFROM customer\nWHERE credit_score <\n    (SELECT avg(credit_score)\n     FROM customer)", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0027", "sql1": "\nSELECT acc_bal AS sum_acc_bal_,\n       state\nFROM customer\nWHERE (credit_score >= 100\n       OR credit_score >= acc_bal)\nORDER BY sum_acc_bal_\n", "sql2": "SELECT sum(acc_bal),\n       state\nFROM customer\nWHERE credit_score > 100\nGROUP BY state", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0007", "sql1": "\nSELECT `bname`\nFROM `bank`\nWHERE (`state` = 'New York')\nORDER BY bname\n", "sql2": "SELECT bname\nFROM bank\nWHERE state = 'New York'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0011", "sql1": "\nSELECT n_distinct AS count_distinct_city_\nFROM\n  (SELECT COUNT(DISTINCT city) AS n_distinct\n   FROM bank)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM bank", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0010", "sql1": "\nSELECT state,\n       acc_type,\n       credit_score\nFROM customer\nWHERE (no_of_loans <= 0)\nORDER BY state\n", "sql2": "SELECT state,\n       acc_type,\n       credit_score\nFROM customer\nWHERE no_of_loans = 0", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0006", "sql1": "\nSELECT `city`,\n       `state`\nFROM `bank`\nWHERE (`bname` = 'morningside')\nORDER BY city\n", "sql2": "SELECT city,\n       state\nFROM bank\nWHERE bname = 'morningside'", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0026", "sql1": "\nSELECT meanacc_bal AS avg_acc_bal_,\n       acc_type\nFROM\n  (SELECT acc_type,\n          state,\n          AVG(acc_bal) AS meanacc_bal\n   FROM\n     (SELECT *\n      FROM customer\n      WHERE (acc_bal > 50\n             AND credit_score <= 50))\n   GROUP BY acc_type,\n            state)\nORDER BY avg_acc_bal_\n", "sql2": "SELECT avg(acc_bal),\n       acc_type\nFROM customer\nWHERE credit_score < 50\nGROUP BY acc_type", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/loan_1/0030", "sql1": "\nSELECT cust_name,\n       acc_type\nFROM\n  (SELECT LHS.cust_id AS cust_id,\n          LHS.cust_name AS cust_name,\n          LHS.acc_type AS acc_type,\n          LHS.acc_bal AS acc_bal,\n          LHS.no_of_loans AS no_of_loans,\n          LHS.credit_score AS credit_score,\n          LHS.branch_id AS branch_id,\n          LHS.state AS state,\n          RHS.sumamount AS sumamount\n   FROM customer AS LHS\n   INNER JOIN\n     (SELECT cust_id,\n             SUM(amount) AS sumamount\n      FROM loan\n      WHERE (amount != 5000)\n      GROUP BY cust_id) AS RHS ON (LHS.cust_id = RHS.cust_id))\nORDER BY cust_name\n", "sql2": "SELECT T1.cust_name,\n       T1.acc_type\nFROM customer AS T1\nJOIN loan AS T2 ON T1.cust_id = T2.cust_id\nGROUP BY T1.cust_name\nHAVING sum(T2.amount) > 5000", "schema": "spider/loan_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0009", "sql1": "\nSELECT name,\n       LOCATION\nFROM\n  (SELECT LHS.railway_id AS railway_id,\n          LHS.railway AS railway,\n          LHS.builder AS builder,\n          LHS.built AS built,\n          LHS.wheels AS wheels,\n          LHS.location AS LOCATION,\n          LHS.objectnumber AS objectnumber,\n          RHS.train_id AS train_id,\n          RHS.train_num AS train_num,\n          RHS.name AS name,\n          RHS.\n   FROM AS\n   FROM,\n           RHS.arrival AS arrival\n   FROM railway AS LHS\n   INNER JOIN train AS RHS ON (LHS.railway_id = RHS.railway_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.Location\nFROM railway AS T1\nJOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0013", "sql1": "\nSELECT builder,\n       n AS count___\nFROM\n  (SELECT builder,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY builder)\nORDER BY builder\n", "sql2": "SELECT Builder,\n       COUNT(*)\nFROM railway\nGROUP BY Builder", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0005", "sql1": "\nSELECT DISTINCT AVG(age) OVER () AS avg_age_\nFROM manager\nORDER BY avg_age_\n", "sql2": "SELECT avg(Age)\nFROM manager", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0004", "sql1": "\nSELECT LEVEL AS max_level_\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LEVEL,\n                manager_id,\n                MAX(country) AS country\n         FROM manager\n         GROUP BY LEVEL,\n                  manager_id)\n      ORDER BY country)\n   LIMIT 1)\n", "sql2": "SELECT max(LEVEL)\nFROM manager\nWHERE Country != 'Australia '", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0015", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       COUNT(*)\nFROM railway\nGROUP BY LOCATION", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0003", "sql1": "\nSELECT wheels,\n       LOCATION\nFROM railway\nORDER BY wheels\n", "sql2": "SELECT Wheels,\n       LOCATION\nFROM railway", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0019", "sql1": "\nSELECT DISTINCT country\nFROM manager\nORDER BY country\n", "sql2": "SELECT DISTINCT Country\nFROM manager", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0018", "sql1": "\nSELECT DISTINCT country\nFROM manager\nWHERE (age < 50\n       AND age <= 46)\nORDER BY country\n", "sql2": "SELECT Country\nFROM manager\nWHERE Age > 50 INTERSECT\n  SELECT Country\n  FROM manager WHERE Age < 46", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0002", "sql1": "\nSELECT builder\nFROM railway\nORDER BY builder\n", "sql2": "SELECT Builder\nFROM railway\nORDER BY Builder ASC", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0014", "sql1": "\nSELECT DISTINCT builder\nFROM\n  (SELECT LHS.railway_id AS railway_id,\n          LHS.railway AS railway,\n          LHS.builder AS builder,\n          LHS.built AS built,\n          LHS.wheels AS wheels,\n          LHS.location AS LOCATION,\n          LHS.objectnumber AS objectnumber,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.railway_id AS railway_id,\n             LHS.railway AS railway,\n             LHS.builder AS builder,\n             LHS.built AS built,\n             LHS.wheels AS wheels,\n             LHS.location AS LOCATION,\n             LHS.objectnumber AS objectnumber,\n             RHS.n AS n\n      FROM railway AS LHS\n      INNER JOIN\n        (SELECT builder,\n                COUNT(*) AS n\n         FROM railway\n         GROUP BY builder) AS RHS ON (LHS.builder = RHS.builder)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT builder,\n                COUNT(*) AS n\n         FROM railway\n         GROUP BY builder)) AS RHS ON (LHS.n = RHS.n))\nORDER BY builder\n", "sql2": "SELECT Builder\nFROM railway\nGROUP BY Builder\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM railway)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM railway", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0017", "sql1": "\nSELECT objectnumber\nFROM\n  (SELECT *\n   FROM railway AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM train AS RHS\n        WHERE (LHS.railway_id = RHS.railway_id) ))\nORDER BY objectnumber\n", "sql2": "SELECT ObjectNumber\nFROM railway\nWHERE Railway_ID NOT IN\n    (SELECT Railway_ID\n     FROM train)", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0021", "sql1": "\nSELECT country\nFROM manager\nWHERE (age > 50\n       OR age < 46)\nORDER BY country\n", "sql2": "SELECT Country\nFROM manager\nWHERE Age > 50\n  OR Age < 46", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0020", "sql1": "\nSELECT working_year_starts\nFROM manager\nORDER BY working_year_starts\n", "sql2": "SELECT Working_year_starts\nFROM manager\nORDER BY LEVEL DESC", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0016", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM railway\n   GROUP BY LOCATION)\nWHERE (n > 1)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM railway\nGROUP BY LOCATION\nHAVING COUNT(*) > 1", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0007", "sql1": "\nSELECT name,\n       arrival\nFROM train\nORDER BY name\n", "sql2": "SELECT Name,\n       Arrival\nFROM train", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0010", "sql1": "\nSELECT `builder`\nFROM\n  (SELECT `LHS`.`train_id` AS `train_id`,\n          `LHS`.`train_num` AS `train_num`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`from` AS `from`,\n          `LHS`.`arrival` AS `arrival`,\n          `LHS`.`railway_id` AS `railway_id`,\n          `RHS`.`railway` AS `railway`,\n          `RHS`.`builder` AS `builder`,\n          `RHS`.`built` AS `built`,\n          `RHS`.`wheels` AS `wheels`,\n          `RHS`.`location` AS `location`,\n          `RHS`.`objectnumber` AS `objectnumber`\n   FROM\n     (SELECT *\n      FROM `train`\n      WHERE (`name` = 'Andaman Exp')) AS LHS\n   LEFT JOIN railway AS RHS ON (LHS.railway_id = RHS.railway_id))\nORDER BY builder\n", "sql2": "SELECT T1.Builder\nFROM railway AS T1\nJOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID\nWHERE T2.Name = 'Andaman Exp'", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/railway/0006", "sql1": "\nSELECT name\nFROM manager\nORDER BY name\n", "sql2": "SELECT Name\nFROM manager\nORDER BY LEVEL ASC", "schema": "spider/railway/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0009", "sql1": "\nSELECT DISTINCT MAX(stars) OVER () AS max_stars_,\n                                minstars AS min_stars_\nFROM\n  (SELECT rid,\n          mid,\n          stars,\n          ratingdate,\n          MIN(stars) OVER () AS minstars\n   FROM rating)\nORDER BY max_stars_\n", "sql2": "SELECT max(stars),\n       min(stars)\nFROM Rating", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0044", "sql1": "\nSELECT DISTINCT rid\nFROM\n  (SELECT *\n   FROM rating AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM rating\n           WHERE (stars = 4)) AS RHS\n        WHERE (LHS.rid = RHS.rid) ))\nORDER BY rid\n", "sql2": "SELECT rID\nFROM Rating\nEXCEPT\nSELECT rID\nFROM Rating\nWHERE stars = 4", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0013", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM movie AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM rating AS RHS\n        WHERE (LHS.mid = RHS.mid) ))\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE mID NOT IN\n    (SELECT mID\n     FROM Rating)", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0005", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM reviewer\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Reviewer", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0029", "sql1": "\nSELECT director\nFROM\n  (SELECT director,\n          COUNT(*) AS n\n   FROM movie\n   GROUP BY director)\nWHERE (n <= 1)\nORDER BY director\n", "sql2": "SELECT director\nFROM Movie\nGROUP BY director\nHAVING count(*) = 1", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0028", "sql1": "\nSELECT title,\n       YEAR\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM movie\n      ORDER BY YEAR DESC)\n   LIMIT 4)\n", "sql2": "SELECT T1.title,\n       T1.year\nFROM Movie AS T1\nJOIN Movie AS T2 ON T1.director = T2.director\nWHERE T1.title != T2.title", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0004", "sql1": "\nSELECT `director`\nFROM `movie`\nWHERE (`title` = 'Avatar')\nORDER BY director\n", "sql2": "SELECT director\nFROM Movie\nWHERE title = 'Avatar'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0012", "sql1": "\nSELECT name,\n       meanstars AS avg_t1_stars_\nFROM\n  (SELECT LHS.rid AS rid,\n          LHS.name AS name,\n          RHS.meanstars AS meanstars\n   FROM reviewer AS LHS\n   INNER JOIN\n     (SELECT rid,\n             AVG(stars) AS meanstars\n      FROM rating\n      GROUP BY rid) AS RHS ON (LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       avg(T1.stars)\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nGROUP BY T2.name", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0045", "sql1": "\nSELECT rid\nFROM rating\nWHERE (stars != 4)\nORDER BY rid\n", "sql2": "SELECT rID\nFROM Rating\nWHERE stars != 4", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0032", "sql1": "\nSELECT DISTINCT title,\n                meanstars AS avg_t1_stars_\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          LHS.rid AS rid,\n          LHS.stars AS stars,\n          LHS.ratingdate AS ratingdate,\n          LHS.meanstars AS meanstars\n   FROM\n     (SELECT LHS.mid AS mid,\n             LHS.title AS title,\n             LHS.year AS YEAR,\n             LHS.director AS director,\n             LHS.rid AS rid,\n             LHS.stars AS stars,\n             LHS.ratingdate AS ratingdate,\n             RHS.meanstars AS meanstars\n      FROM\n        (SELECT LHS.mid AS mid,\n                LHS.title AS title,\n                LHS.year AS YEAR,\n                LHS.director AS director,\n                RHS.rid AS rid,\n                RHS.stars AS stars,\n                RHS.ratingdate AS ratingdate\n         FROM movie AS LHS\n         INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid)) AS LHS\n      INNER JOIN\n        (SELECT mid,\n                AVG(stars) AS meanstars\n         FROM rating\n         GROUP BY mid) AS RHS ON (LHS.mid = RHS.mid)) AS LHS\n   INNER JOIN\n     (SELECT mid,\n             MAX(meanstars) OVER () AS meanstars\n      FROM\n        (SELECT mid,\n                AVG(stars) AS meanstars\n         FROM rating\n         GROUP BY mid)) AS RHS ON (LHS.mid = RHS.mid\n                                   AND LHS.meanstars = RHS.meanstars))\nORDER BY title\n", "sql2": "SELECT T2.title,\n       avg(T1.stars)\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nGROUP BY T1.mID\nORDER BY avg(T1.stars) DESC\nLIMIT 1", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0008", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM rating\n      WHERE (stars > 3)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Rating\nWHERE stars > 3", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0042", "sql1": "\nSELECT `mid`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `rating` AS `LHS`\n         WHERE NOT EXISTS\n             (SELECT 1\n              FROM\n                (SELECT *\n                 FROM `reviewer`\n                 WHERE (`name` = 'Brittany Harris')) AS RHS\n              WHERE (LHS.rid = RHS.rid) ))\n      ORDER BY ratingdate)\n   LIMIT 4)\n", "sql2": "SELECT mID\nFROM Rating\nEXCEPT\nSELECT T1.mID\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nWHERE T2.name = 'Brittany Harris'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0003", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT COUNT(DISTINCT YEAR) AS n_distinct\n   FROM\n     (SELECT *\n      FROM movie\n      WHERE (YEAR < 2000)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Movie\nWHERE YEAR < 2000", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0039", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.rid AS rid,\n          RHS.stars AS stars,\n          RHS.ratingdate AS ratingdate\n   FROM movie AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM rating\n      WHERE (stars >= 3\n             OR stars >= 5)) AS RHS ON (LHS.mid = RHS.mid))\nORDER BY title\n", "sql2": "SELECT T2.title\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nWHERE T1.stars BETWEEN 3 AND 5", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0023", "sql1": "\nSELECT DISTINCT `director`\nFROM\n  (SELECT `LHS`.`mid` AS `mid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`director` AS `director`,\n          `LHS`.`rid` AS `rid`,\n          `LHS`.`stars` AS `stars`,\n          `LHS`.`ratingdate` AS `ratingdate`,\n          `RHS`.`name` AS `name`\n   FROM\n     (SELECT `LHS`.`mid` AS `mid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`director` AS `director`,\n             `RHS`.`rid` AS `rid`,\n             `RHS`.`stars` AS `stars`,\n             `RHS`.`ratingdate` AS `ratingdate`\n      FROM `movie` AS `LHS`\n      INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `reviewer`\n      WHERE (`name` = 'Sarah Martinez')) AS RHS ON (LHS.rid = RHS.rid))\nORDER BY director\n", "sql2": "SELECT DISTINCT T2.director\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T3.name = 'Sarah Martinez'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0022", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `LHS`.`mid` AS `mid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`director` AS `director`,\n          `LHS`.`rid` AS `rid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`stars` AS `stars`,\n          `RHS`.`ratingdate` AS `ratingdate`\n   FROM\n     (SELECT `LHS`.`mid` AS `mid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`director` AS `director`,\n             `RHS`.`rid` AS `rid`,\n             `RHS`.`name` AS `name`\n      FROM `movie` AS `LHS`\n      CROSS JOIN `reviewer` AS `RHS`) AS `LHS`\n   INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`\n                                       AND `LHS`.`rid` = `RHS`.`rid`))\nWHERE (`title` = 'Gone with the Wind')\nORDER BY name\n", "sql2": "SELECT DISTINCT T3.name\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T2.title = 'Gone with the Wind'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0018", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`director` AS `director`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`maxyear` AS `maxyear`,\n          `RHS`.`mid` AS `mid`,\n          `RHS`.`title` AS `title`,\n          `RHS`.`year` AS `year_other`,\n          `RHS`.`director` AS `director_other`\n   FROM\n     (SELECT `director`,\n             `year`,\n             MAX(`year`) AS `maxyear`\n      FROM `movie`\n      WHERE (`director` != 'Steven Spielberg')\n      GROUP BY director,\n               YEAR) AS LHS\n   CROSS JOIN movie AS RHS)\nWHERE (maxyear != year_other\n       AND director = director_other)\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE YEAR >\n    (SELECT max(YEAR)\n     FROM Movie\n     WHERE director = 'Steven Spielberg')", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0002", "sql1": "\nSELECT `title`\nFROM `movie`\nWHERE (`director` = 'James Cameron'\n       AND YEAR >= 2000)\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE director = 'James Cameron'\n  AND YEAR > 2000", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0043", "sql1": "\nSELECT mid,\n       meanstars AS avg_stars_\nFROM\n  (SELECT mid,\n          meanstars,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT mid,\n             AVG(stars) AS meanstars\n      FROM rating\n      GROUP BY mid))\nWHERE (meanstars >= 2.0\n       AND meanstars <= n)\nORDER BY mid\n", "sql2": "SELECT mID,\n       avg(stars)\nFROM Rating\nGROUP BY mID\nHAVING count(*) >= 2", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0001", "sql1": "\nSELECT `title`\nFROM `movie`\nWHERE (`director` = 'Steven Spielberg')\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE director = 'Steven Spielberg'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0040", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.rid AS rid,\n          LHS.mid AS mid,\n          LHS.stars AS stars,\n          LHS.ratingdate AS ratingdate,\n          RHS.name AS name\n   FROM\n     (SELECT *\n      FROM rating\n      WHERE (stars > 3)) AS LHS\n   LEFT JOIN reviewer AS RHS ON (LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nWHERE T1.stars > 3", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0021", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.rid AS rid,\n          LHS.name AS name,\n          RHS.n AS n\n   FROM reviewer AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT rid,\n                COUNT(*) AS n\n         FROM rating\n         GROUP BY rid)\n      WHERE (n = 3)) AS RHS ON (LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM Rating AS T1\nJOIN Reviewer AS T2 ON T1.rID = T2.rID\nGROUP BY T1.rID\nHAVING COUNT(*) >= 3", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0020", "sql1": "\nSELECT name,\n       title,\n       stars,\n       ratingdate\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          LHS.rid AS rid,\n          LHS.name AS name,\n          RHS.stars AS stars,\n          RHS.ratingdate AS ratingdate\n   FROM\n     (SELECT LHS.mid AS mid,\n             LHS.title AS title,\n             LHS.year AS YEAR,\n             LHS.director AS director,\n             RHS.rid AS rid,\n             RHS.name AS name\n      FROM movie AS LHS\n      CROSS JOIN reviewer AS RHS) AS LHS\n   INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid\n                                   AND LHS.rid = RHS.rid))\nORDER BY name\n", "sql2": "SELECT T3.name,\n       T2.title,\n       T1.stars,\n       T1.ratingDate\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nORDER BY T3.name,\n         T2.title,\n         T1.stars", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0016", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.mid AS mid_other,\n          RHS.director AS director_other\n   FROM\n     (SELECT mid,\n             title,\n             MAX(YEAR) OVER () AS YEAR,\n                            director\n      FROM movie) AS LHS\n   INNER JOIN movie AS RHS ON (LHS.title = RHS.title\n                                  AND LHS.year = RHS.year))\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE YEAR =\n    (SELECT max(YEAR)\n     FROM Movie)", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0031", "sql1": "\nSELECT n AS count___,\n       director\nFROM\n  (SELECT director,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.mid AS mid,\n             LHS.title AS title,\n             LHS.year AS YEAR,\n             LHS.director AS director,\n             RHS.rid AS rid,\n             RHS.stars AS stars,\n             RHS.ratingdate AS ratingdate\n      FROM movie AS LHS\n      INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid))\n   GROUP BY director)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.director\nFROM Movie AS T1\nJOIN Rating AS T2 ON T1.mID = T2.mID\nGROUP BY T1.director", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0007", "sql1": "\nSELECT `rid`\nFROM `reviewer`\nWHERE (`name` = 'Daniel Lewis')\nORDER BY rid\n", "sql2": "SELECT rID\nFROM Reviewer\nWHERE name = 'Daniel Lewis'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0011", "sql1": "\nSELECT director,\n       title\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.rid AS rid,\n          RHS.stars AS stars,\n          RHS.ratingdate AS ratingdate\n   FROM movie AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM rating\n      WHERE (stars = 5)) AS RHS ON (LHS.mid = RHS.mid))\nORDER BY director\n", "sql2": "SELECT T1.director,\n       T1.title\nFROM Movie AS T1\nJOIN Rating AS T2 ON T1.mID = T2.mID\nWHERE T2.stars = 5", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0046", "sql1": "\nSELECT DISTINCT `title`\nFROM\n  (SELECT `LHS`.`mid` AS `mid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`director` AS `director`,\n          `LHS`.`rid` AS `rid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`stars` AS `stars`,\n          `RHS`.`ratingdate` AS `ratingdate`\n   FROM\n     (SELECT `LHS`.`mid` AS `mid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`director` AS `director`,\n             `RHS`.`rid` AS `rid`,\n             `RHS`.`name` AS `name`\n      FROM `movie` AS `LHS`\n      CROSS JOIN `reviewer` AS `RHS`) AS `LHS`\n   INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`\n                                       AND `LHS`.`rid` = `RHS`.`rid`))\nWHERE (`name` = 'Brittany Harris'\n       OR YEAR > 2000)\nORDER BY title\n", "sql2": "SELECT DISTINCT T2.title\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T3.name = 'Brittany Harris'\n  OR T2.year > 2000", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0047", "sql1": "\nSELECT `title`\nFROM `movie`\nWHERE (`director` = 'James Cameron'\n       OR YEAR <= 1980)\nORDER BY title\n", "sql2": "SELECT title\nFROM Movie\nWHERE director = 'James Cameron'\n  OR YEAR < 1980", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0026", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM `movie` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `LHS`.`rid` AS `rid`,\n                     `LHS`.`mid` AS `mid`,\n                     `LHS`.`stars` AS `stars`,\n                     `LHS`.`ratingdate` AS `ratingdate`,\n                     `RHS`.`name` AS `name`\n              FROM `rating` AS `LHS`\n              LEFT JOIN `reviewer` AS `RHS` ON (`LHS`.`rid` = `RHS`.`rid`))\n           WHERE (`name` = 'Chris Jackson')) AS RHS\n        WHERE (LHS.mid = RHS.mid) ))\nORDER BY title\n", "sql2": "SELECT DISTINCT title\nFROM Movie\nEXCEPT\nSELECT T2.title\nFROM Rating AS T1\nJOIN Movie AS T2 ON T1.mID = T2.mID\nJOIN Reviewer AS T3 ON T1.rID = T3.rID\nWHERE T3.name = 'Chris Jackson'", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/movie_1/0030", "sql1": "\nSELECT director\nFROM\n  (SELECT LHS.mid AS mid,\n          LHS.title AS title,\n          LHS.year AS YEAR,\n          LHS.director AS director,\n          RHS.director AS director_other,\n          RHS.n AS n\n   FROM movie AS LHS\n   CROSS JOIN\n     (SELECT *\n      FROM\n        (SELECT director,\n                COUNT(*) AS n\n         FROM movie\n         GROUP BY director)\n      WHERE (n <= 1)) AS RHS)\nWHERE (director = director_other)\nORDER BY director\n", "sql2": "SELECT director\nFROM Movie\nWHERE director != 'null'\nGROUP BY director\nHAVING count(*) = 1", "schema": "spider/movie_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0013", "sql1": "\nSELECT `company_id` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`iata` AS `iata`,\n          `LHS`.`icao` AS `icao`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n          `LHS`.`date` AS `date`,\n          `LHS`.`pilot` AS `pilot`,\n          `LHS`.`velocity` AS `velocity`,\n          `LHS`.`altitude` AS `altitude`,\n          `LHS`.`airport_id` AS `airport_id`,\n          `LHS`.`company_id` AS `company_id`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`iata` AS `iata`,\n             `LHS`.`icao` AS `icao`,\n             `LHS`.`name` AS `name`,\n             `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n             `RHS`.`date` AS `date`,\n             `RHS`.`pilot` AS `pilot`,\n             `RHS`.`velocity` AS `velocity`,\n             `RHS`.`altitude` AS `altitude`,\n             `RHS`.`airport_id` AS `airport_id`,\n             `RHS`.`company_id` AS `company_id`\n      FROM `airport` AS `LHS`\n      INNER JOIN `flight` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`)) AS `LHS`\n   INNER JOIN\n     (SELECT `airport_id`,\n             COUNT(*) AS `n`\n      FROM `flight`\n      GROUP BY `airport_id`) AS `RHS` ON (`LHS`.`airport_id` = `RHS`.`airport_id`))\nWHERE (`pilot` = 'Thompson'\n       AND n > id)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airport\nWHERE id NOT IN\n    (SELECT airport_id\n     FROM flight\n     WHERE pilot = 'Thompson' );", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0005", "sql1": "\nSELECT DISTINCT AVG(`velocity`) OVER () AS `avg_velocity_`\nFROM `flight`\nWHERE (`pilot` = 'Thompson')\nORDER BY avg_velocity_\n", "sql2": "SELECT avg(velocity)\nFROM flight\nWHERE pilot = 'Thompson'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0004", "sql1": "\nSELECT maxgroup_equity_shareholding AS max_group_equity_shareholding_\nFROM\n  (SELECT MAX(group_equity_shareholding) AS maxgroup_equity_shareholding\n   FROM operate_company)\nORDER BY max_group_equity_shareholding_\n", "sql2": "SELECT max(group_equity_shareholding)\nFROM operate_company", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0008", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT *\n   FROM operate_company AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM flight\n           WHERE (velocity != 200.0)) AS RHS\n        WHERE (LHS.id = RHS.id) ))\nORDER BY TYPE\n", "sql2": "SELECT DISTINCT T1.type\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id\nWHERE T2.velocity < 200", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0003", "sql1": "\nSELECT id,\n       country,\n       city,\n       name\nFROM airport\nORDER BY id\n", "sql2": "SELECT id,\n       country,\n       city,\n       name\nFROM airport\nORDER BY name", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0018", "sql1": "\nSELECT country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM airport\n   GROUP BY country)\nWHERE (n >= 2)\nORDER BY country\n", "sql2": "SELECT country\nFROM airport\nGROUP BY country\nHAVING count(*) > 2", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0002", "sql1": "\nSELECT vehicle_flight_number, date, pilot\nFROM flight\nORDER BY vehicle_flight_number\n", "sql2": "SELECT vehicle_flight_number , date , pilot\nFROM flight\nORDER BY altitude ASC", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0014", "sql1": "\nSELECT `pilot`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`principal_activities` AS `principal_activities`,\n          `LHS`.`incorporated_in` AS `incorporated_in`,\n          `LHS`.`group_equity_shareholding` AS `group_equity_shareholding`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`pilot` AS `pilot`,\n          `RHS`.`velocity` AS `velocity`,\n          `RHS`.`altitude` AS `altitude`,\n          `RHS`.`airport_id` AS `airport_id`\n   FROM\n     (SELECT *\n      FROM `operate_company`\n      WHERE (`principal_activities` = 'Cargo'\n             AND `principal_activities` != 'Catering services')) AS LHS\n   INNER JOIN flight AS RHS ON (LHS.id = RHS.company_id))\nORDER BY pilot\n", "sql2": "SELECT T2.pilot\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id\nWHERE T1.principal_activities = 'Cargo' INTERSECT\n  SELECT T2.pilot\n  FROM operate_company AS T1\n  JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT altitude,\n          velocity,\n          COUNT(*) AS n\n   FROM flight\n   GROUP BY altitude,\n            velocity)\nWHERE (n != 200\n       AND velocity >= 200.0)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM flight\nWHERE velocity > 200", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0017", "sql1": "\nSELECT n AS count___,\n       country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM airport\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       country\nFROM airport\nGROUP BY country", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0016", "sql1": "\nSELECT airport_id AS id,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.city AS city,\n          LHS.country AS country,\n          LHS.iata AS iata,\n          LHS.icao AS icao,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.principal_activities AS principal_activities,\n          LHS.incorporated_in AS incorporated_in,\n          LHS.group_equity_shareholding AS group_equity_shareholding,\n          RHS.airport_id AS airport_id,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.city AS city,\n             LHS.country AS country,\n             LHS.iata AS iata,\n             LHS.icao AS icao,\n             LHS.name AS name,\n             RHS.type AS TYPE,\n             RHS.principal_activities AS principal_activities,\n             RHS.incorporated_in AS incorporated_in,\n             RHS.group_equity_shareholding AS group_equity_shareholding\n      FROM airport AS LHS\n      INNER JOIN operate_company AS RHS ON (LHS.id = RHS.id\n                                               AND LHS.name = RHS.name)) AS LHS\n   CROSS JOIN\n     (SELECT airport_id,\n             COUNT(*) AS n\n      FROM flight\n      GROUP BY airport_id) AS RHS)\nORDER BY id\n", "sql2": "SELECT T3.id,\n       count(*)\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id\nJOIN airport AS T3 ON T2.airport_id = T3.id\nGROUP BY T3.id", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0007", "sql1": "\nSELECT `name`\nFROM `airport`\nWHERE (`country` != 'Iceland')\nORDER BY name\n", "sql2": "SELECT name\nFROM airport\nWHERE country != 'Iceland'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0011", "sql1": "\nSELECT DISTINCT `pilot`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`iata` AS `iata`,\n          `LHS`.`icao` AS `icao`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,\n          `RHS`.`date` AS `date`,\n          `RHS`.`pilot` AS `pilot`,\n          `RHS`.`velocity` AS `velocity`,\n          `RHS`.`altitude` AS `altitude`,\n          `RHS`.`airport_id` AS `airport_id`,\n          `RHS`.`company_id` AS `company_id`\n   FROM `airport` AS `LHS`\n   INNER JOIN `flight` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`))\nWHERE (`country` != 'United States'\n       OR `name` != 'Billund Airport')\nORDER BY pilot\n", "sql2": "SELECT DISTINCT T2.pilot\nFROM airport AS T1\nJOIN flight AS T2 ON T1.id = T2.airport_id\nWHERE T1.country = 'United States'\n  OR T1.name = 'Billund Airport'", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_company/0006", "sql1": "\nSELECT name,\n       TYPE\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.principal_activities AS principal_activities,\n          LHS.incorporated_in AS incorporated_in,\n          LHS.group_equity_shareholding AS group_equity_shareholding,\n          RHS.id AS id_other,\n          RHS.vehicle_flight_number AS vehicle_flight_number,\n          RHS.date AS date,\n          RHS.pilot AS pilot,\n          RHS.velocity AS velocity,\n          RHS.altitude AS altitude,\n          RHS.airport_id AS airport_id\n   FROM operate_company AS LHS\n   INNER JOIN flight AS RHS ON (LHS.id = RHS.company_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.type\nFROM operate_company AS T1\nJOIN flight AS t2 ON T1.id = T2.company_id", "schema": "spider/flight_company/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0033", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM campuses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM campuses", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0005", "sql1": "\nSELECT campus\nFROM campuses\nWHERE (YEAR > 1935\n       AND YEAR < 1939)\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE YEAR >= 1935\n  AND YEAR <= 1939", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0008", "sql1": "\nSELECT `campusfee`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`campus` AS `campus`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`county` AS `county`,\n          `LHS`.`year` AS `year`,\n          `RHS`.`year` AS `year_other`,\n          `RHS`.`campusfee` AS `campusfee`\n   FROM\n     (SELECT *\n      FROM `campuses`\n      WHERE (`campus` = 'San Francisco State University'\n             AND YEAR < 1996)) AS LHS\n   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))\nORDER BY campusfee\n", "sql2": "SELECT campusfee\nFROM campuses AS T1\nJOIN csu_fees AS T2 ON T1.id = t2.campus\nWHERE t1.campus = 'San Francisco State University'\n  AND T2.year = 1996", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0003", "sql1": "\nSELECT campus\nFROM campuses\nWHERE (YEAR = 1958)\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE YEAR = 1958", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0023", "sql1": "\nSELECT sumfaculty AS sum_faculty_\nFROM\n  (SELECT SUM(faculty) AS sumfaculty\n   FROM\n     (SELECT *\n      FROM faculty\n      WHERE (YEAR <= 2002\n             AND faculty < 2002.0)))\nORDER BY sum_faculty_\n", "sql2": "SELECT sum(faculty)\nFROM faculty\nWHERE YEAR = 2002", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0002", "sql1": "\nSELECT `campus`\nFROM `campuses`\nWHERE (`location` = 'Chico')\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE LOCATION = 'Chico'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0014", "sql1": "\nSELECT DISTINCT AVG(campusfee) OVER () AS avg_campusfee_\nFROM csu_fees\nWHERE (YEAR = 1996\n       OR campusfee = 1996)\nORDER BY avg_campusfee_\n", "sql2": "SELECT avg(campusfee)\nFROM csu_fees\nWHERE YEAR = 1996", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0001", "sql1": "\nSELECT `campus`\nFROM `campuses`\nWHERE (`county` = 'Los Angeles')\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE county = 'Los Angeles'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0020", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `county`,\n          COUNT(*) AS `n`\n   FROM `campuses`\n   GROUP BY `county`)\nWHERE (`county` = 'Los Angeles')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM campuses\nWHERE county = 'Los Angeles'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0007", "sql1": "\nSELECT `campusfee`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`campus` AS `campus`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`county` AS `county`,\n          `LHS`.`year` AS `year`,\n          `RHS`.`year` AS `year_other`,\n          `RHS`.`campusfee` AS `campusfee`\n   FROM\n     (SELECT *\n      FROM `campuses`\n      WHERE (`campus` = 'San Jose State University'\n             AND YEAR < 1996)) AS LHS\n   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))\nORDER BY campusfee\n", "sql2": "SELECT campusfee\nFROM campuses AS T1\nJOIN csu_fees AS T2 ON T1.id = t2.campus\nWHERE t1.campus = 'San Jose State University'\n  AND T2.year = 1996", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0010", "sql1": "\nSELECT `campus`\nFROM `campuses`\nWHERE (`county` = 'Los Angeles'\n       AND YEAR > 1950)\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE county = 'Los Angeles'\n  AND YEAR > 1950", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/csu_1/0006", "sql1": "\nSELECT `campus`\nFROM\n  (SELECT *\n   FROM `campuses`\n   WHERE (`county` = 'Los Angeles'\n          OR `county` = 'San Francisco'))\nWHERE (`location` = 'Northridge'\n       OR `location` = 'San Francisco')\nORDER BY campus\n", "sql2": "SELECT campus\nFROM campuses\nWHERE LOCATION = 'Northridge'\n  AND county = 'Los Angeles'\nUNION\nSELECT campus\nFROM campuses\nWHERE LOCATION = 'San Francisco'\n  AND county = 'San Francisco'", "schema": "spider/csu_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0009", "sql1": "\nSELECT headquarters\nFROM\n  (SELECT headquarters,\n          COUNT(*) AS n\n   FROM company\n   GROUP BY headquarters)\nWHERE (n >= 2)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM company\nGROUP BY Headquarters\nHAVING COUNT(*) >= 2", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0013", "sql1": "\nSELECT name_other AS name\nFROM\n  (SELECT LHS.company_id AS company_id,\n          LHS.people_id AS people_id,\n          LHS.year_working AS year_working,\n          LHS.name AS name,\n          LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.sales_in_billion AS sales_in_billion,\n          LHS.profits_in_billion AS profits_in_billion,\n          LHS.assets_in_billion AS assets_in_billion,\n          LHS.market_value_in_billion AS market_value_in_billion,\n          RHS.age AS age,\n          RHS.name AS name_other,\n          RHS.nationality AS nationality,\n          RHS.graduation_college AS graduation_college\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.people_id AS people_id,\n             LHS.year_working AS year_working,\n             RHS.name AS name,\n             RHS.headquarters AS headquarters,\n             RHS.industry AS industry,\n             RHS.sales_in_billion AS sales_in_billion,\n             RHS.profits_in_billion AS profits_in_billion,\n             RHS.assets_in_billion AS assets_in_billion,\n             RHS.market_value_in_billion AS market_value_in_billion\n      FROM employment AS LHS\n      LEFT JOIN company AS RHS ON (LHS.company_id = RHS.company_id)) AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nWHERE (sales_in_billion >= 200.0)\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM employment AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nJOIN company AS T3 ON T1.Company_ID = T3.Company_ID\nWHERE T3.Sales_in_Billion > 200", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0004", "sql1": "\nSELECT `name`\nFROM `company`\nWHERE (`industry` = 'Banking'\n       OR `industry` = 'Retailing')\nORDER BY name\n", "sql2": "SELECT Name\nFROM company\nWHERE Industry = 'Banking'\n  OR Industry = 'Retailing'", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0008", "sql1": "\nSELECT headquarters\nFROM\n  (SELECT LHS.n AS n,\n          RHS.headquarters AS headquarters,\n          RHS.n AS n_other\n   FROM\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT headquarters,\n                COUNT(*) AS n\n         FROM company\n         GROUP BY headquarters)) AS LHS\n   CROSS JOIN\n     (SELECT headquarters,\n             COUNT(*) AS n\n      FROM company\n      GROUP BY headquarters) AS RHS)\nWHERE (n <= n_other)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM company\nGROUP BY Headquarters\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM employment AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM employment)", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0003", "sql1": "\nSELECT headquarters,\n       industry\nFROM company\nORDER BY headquarters\n", "sql2": "SELECT Headquarters,\n       Industry\nFROM company", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0002", "sql1": "\nSELECT name\nFROM company\nORDER BY name\n", "sql2": "SELECT Name\nFROM company\nORDER BY Sales_in_Billion ASC", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0014", "sql1": "\nSELECT DISTINCT name,\n                n AS count___\nFROM\n  (SELECT LHS.company_id AS company_id,\n          LHS.name AS name,\n          LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.sales_in_billion AS sales_in_billion,\n          LHS.profits_in_billion AS profits_in_billion,\n          LHS.assets_in_billion AS assets_in_billion,\n          LHS.market_value_in_billion AS market_value_in_billion,\n          LHS.people_id AS people_id,\n          LHS.year_working AS year_working,\n          RHS.age AS age,\n          RHS.nationality AS nationality,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.name AS name,\n             LHS.headquarters AS headquarters,\n             LHS.industry AS industry,\n             LHS.sales_in_billion AS sales_in_billion,\n             LHS.profits_in_billion AS profits_in_billion,\n             LHS.assets_in_billion AS assets_in_billion,\n             LHS.market_value_in_billion AS market_value_in_billion,\n             RHS.people_id AS people_id,\n             RHS.year_working AS year_working\n      FROM company AS LHS\n      INNER JOIN employment AS RHS ON (LHS.company_id = RHS.company_id)) AS LHS\n   CROSS JOIN\n     (SELECT age,\n             nationality,\n             COUNT(*) AS n\n      FROM people\n      GROUP BY age,\n               nationality) AS RHS)\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       COUNT(*)\nFROM employment AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nJOIN company AS T3 ON T1.Company_ID = T3.Company_ID\nGROUP BY T3.Name", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0001", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `company_id`,\n          `name`,\n          `headquarters`,\n          `industry`,\n          `sales_in_billion`,\n          `profits_in_billion`,\n          `assets_in_billion`,\n          `market_value_in_billion`,\n          COUNT(DISTINCT `headquarters`) OVER () AS `n_distinct`\n   FROM `company`)\nWHERE (`headquarters` = 'USA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM company\nWHERE Headquarters = 'USA'", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0016", "sql1": "\nSELECT name\nFROM company\nWHERE (sales_in_billion >= 200.0)\nORDER BY name\n", "sql2": "SELECT name\nFROM company\nWHERE Sales_in_Billion > 200\nORDER BY Sales_in_Billion,\n         Profits_in_Billion DESC", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0007", "sql1": "\nSELECT headquarters,\n       n AS count___\nFROM\n  (SELECT headquarters,\n          COUNT(*) AS n\n   FROM company\n   GROUP BY headquarters)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters,\n       COUNT(*)\nFROM company\nGROUP BY Headquarters", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0011", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.age AS age,\n          LHS.name AS name,\n          LHS.nationality AS nationality,\n          LHS.graduation_college AS graduation_college,\n          RHS.company_id AS company_id,\n          RHS.name AS name_other,\n          RHS.headquarters AS headquarters,\n          RHS.industry AS industry,\n          RHS.sales_in_billion AS sales_in_billion,\n          RHS.profits_in_billion AS profits_in_billion,\n          RHS.assets_in_billion AS assets_in_billion,\n          RHS.market_value_in_billion AS market_value_in_billion,\n          RHS.year_working AS year_working\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT LHS.company_id AS company_id,\n             LHS.name AS name,\n             LHS.headquarters AS headquarters,\n             LHS.industry AS industry,\n             LHS.sales_in_billion AS sales_in_billion,\n             LHS.profits_in_billion AS profits_in_billion,\n             LHS.assets_in_billion AS assets_in_billion,\n             LHS.market_value_in_billion AS market_value_in_billion,\n             RHS.people_id AS people_id,\n             RHS.year_working AS year_working\n      FROM company AS LHS\n      INNER JOIN employment AS RHS ON (LHS.company_id = RHS.company_id)) AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name___1\n", "sql2": "SELECT T3.Name,\n       T2.Name\nFROM employment AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nJOIN company AS T3 ON T1.Company_ID = T3.Company_ID", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0010", "sql1": "\nSELECT DISTINCT `headquarters`\nFROM `company`\nWHERE (`industry` = 'Banking'\n       AND `industry` != 'Oil and gas')\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM company\nWHERE Industry = 'Banking' INTERSECT\n  SELECT Headquarters\n  FROM company WHERE Industry = 'Oil and gas'", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_employee/0006", "sql1": "\nSELECT headquarters\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT headquarters,\n                sales_in_billion,\n                MAX(sales_in_billion) AS maxsales_in_billion\n         FROM company\n         GROUP BY headquarters,\n                  sales_in_billion)\n      ORDER BY sales_in_billion DESC)\n   LIMIT 1)\n", "sql2": "SELECT Headquarters\nFROM company\nORDER BY Sales_in_Billion DESC\nLIMIT 1", "schema": "spider/company_employee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0033", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT card_type_code) OVER () AS count_distinct_card_type_code_\nFROM customers_cards\nORDER BY count_distinct_card_type_code_\n", "sql2": "SELECT count(DISTINCT card_type_code)\nFROM Customers_Cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0013", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT other_customer_details,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY other_customer_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0005", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM `accounts` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`customer_first_name` != 'Art'\n                  OR `customer_last_name` != 'Turcotte')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.customer_first_name = 'Art'\n  AND T2.customer_last_name = 'Turcotte'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0029", "sql1": "\nSELECT DISTINCT card_type_code\nFROM\n  (SELECT card_id,\n          card_type_code,\n          COUNT(*) AS n\n   FROM customers_cards\n   GROUP BY card_id,\n            card_type_code)\nWHERE (n != 5)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code\nFROM Customers_cards\nGROUP BY card_type_code\nHAVING count(*) >= 5", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0028", "sql1": "\nSELECT DISTINCT card_type_code\nFROM\n  (SELECT LHS.card_id AS card_id,\n          LHS.customer_id AS customer_id,\n          LHS.card_type_code AS card_type_code,\n          LHS.card_number AS card_number,\n          LHS.date_valid_from AS date_valid_from,\n          LHS.date_valid_to AS date_valid_to,\n          LHS.other_card_details AS other_card_details,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.card_id AS card_id,\n             LHS.customer_id AS customer_id,\n             LHS.card_type_code AS card_type_code,\n             LHS.card_number AS card_number,\n             LHS.date_valid_from AS date_valid_from,\n             LHS.date_valid_to AS date_valid_to,\n             LHS.other_card_details AS other_card_details,\n             RHS.n AS n\n      FROM customers_cards AS LHS\n      INNER JOIN\n        (SELECT card_type_code,\n                COUNT(*) AS n\n         FROM customers_cards\n         GROUP BY card_type_code) AS RHS ON (LHS.card_type_code = RHS.card_type_code)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT card_type_code,\n                COUNT(*) AS n\n         FROM customers_cards\n         GROUP BY card_type_code)) AS RHS ON (LHS.n = RHS.n))\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code\nFROM Customers_cards\nGROUP BY card_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0004", "sql1": "\nSELECT customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.customer_id AS customer_id,\n          LHS.account_name AS account_name,\n          LHS.other_account_details AS other_account_details,\n          RHS.customer_first_name AS customer_first_name,\n          RHS.customer_last_name AS customer_last_name,\n          RHS.customer_address AS customer_address,\n          RHS.customer_phone AS customer_phone,\n          RHS.customer_email AS customer_email,\n          RHS.other_customer_details AS other_customer_details\n   FROM accounts AS LHS\n   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nWHERE (account_name = 162)\nORDER BY customer_first_name\n", "sql2": "SELECT T2.customer_first_name,\n       T2.customer_last_name,\n       T2.customer_phone\nFROM Accounts AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.account_name = '162'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0012", "sql1": "\nSELECT n_distinct AS count_distinct_customer_id_\nFROM\n  (SELECT COUNT(DISTINCT customer_id) AS n_distinct\n   FROM accounts)\nORDER BY count_distinct_customer_id_\n", "sql2": "SELECT count(DISTINCT customer_id)\nFROM Accounts", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0032", "sql1": "\nSELECT DISTINCT card_type_code\nFROM customers_cards\nORDER BY card_type_code\n", "sql2": "SELECT DISTINCT card_type_code\nFROM Customers_Cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0015", "sql1": "\nSELECT `customer_phone`,\n       `customer_email`\nFROM `customers`\nWHERE (`customer_first_name` = 'Aniyah'\n       AND `customer_last_name` = 'Feest')\nORDER BY customer_phone\n", "sql2": "SELECT customer_phone,\n       customer_email\nFROM Customers\nWHERE customer_first_name = 'Aniyah'\n  AND customer_last_name = 'Feest'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0003", "sql1": "\nSELECT other_account_details\nFROM accounts\nWHERE (account_name = 338)\nORDER BY other_account_details\n", "sql2": "SELECT other_account_details\nFROM Accounts\nWHERE account_name = '338'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0019", "sql1": "\nSELECT customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_first_name AS customer_first_name,\n          LHS.customer_last_name AS customer_last_name,\n          LHS.customer_address AS customer_address,\n          LHS.customer_phone AS customer_phone,\n          LHS.customer_email AS customer_email,\n          LHS.other_customer_details AS other_customer_details,\n          RHS.card_id AS card_id,\n          RHS.card_type_code AS card_type_code,\n          RHS.card_number AS card_number,\n          RHS.date_valid_from AS date_valid_from,\n          RHS.date_valid_to AS date_valid_to,\n          RHS.other_card_details AS other_card_details\n   FROM customers AS LHS\n   INNER JOIN customers_cards AS RHS ON (LHS.customer_id = RHS.customer_id))\nWHERE (card_number = 4560596484842.0)\nORDER BY customer_first_name\n", "sql2": "SELECT T2.customer_first_name,\n       T2.customer_last_name,\n       T2.customer_phone\nFROM Customers_cards AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.card_number = '4560596484842'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0023", "sql1": "\nSELECT customer_id,\n       n AS count___\nFROM\n  (SELECT customer_id,\n          COUNT(*) AS n\n   FROM customers_cards\n   GROUP BY customer_id)\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       count(*)\nFROM Customers_cards\nGROUP BY customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0035", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT transaction_type) OVER () AS count_distinct_transaction_type_\nFROM financial_transactions\nORDER BY count_distinct_transaction_type_\n", "sql2": "SELECT count(DISTINCT transaction_type)\nFROM Financial_Transactions", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0034", "sql1": "\nSELECT DISTINCT transaction_type\nFROM financial_transactions\nORDER BY transaction_type\n", "sql2": "SELECT DISTINCT transaction_type\nFROM Financial_Transactions", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0018", "sql1": "\nSELECT date_valid_from,\n       date_valid_to\nFROM customers_cards\nWHERE (card_number = 4560596484842.0)\nORDER BY date_valid_from\n", "sql2": "SELECT date_valid_from,\n       date_valid_to\nFROM Customers_cards\nWHERE card_number = '4560596484842'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0038", "sql1": "\nSELECT transaction_type,\n       n AS count___\nFROM\n  (SELECT transaction_type,\n          COUNT(*) AS n\n   FROM financial_transactions\n   GROUP BY transaction_type)\nORDER BY transaction_type\n", "sql2": "SELECT transaction_type,\n       count(*)\nFROM Financial_transactions\nGROUP BY transaction_type", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0002", "sql1": "\nSELECT account_id,\n       customer_id,\n       account_name\nFROM accounts\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       customer_id,\n       account_name\nFROM Accounts", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0014", "sql1": "\nSELECT customer_id,\n       customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM customers\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       customer_first_name,\n       customer_last_name,\n       customer_phone\nFROM Customers", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0017", "sql1": "\nSELECT card_id,\n       customer_id,\n       card_type_code,\n       card_number\nFROM customers_cards\nORDER BY card_id\n", "sql2": "SELECT card_id,\n       customer_id,\n       card_type_code,\n       card_number\nFROM Customers_cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0040", "sql1": "\nSELECT account_id,\n       n AS count___\nFROM\n  (SELECT account_id,\n          COUNT(*) AS n\n   FROM financial_transactions\n   GROUP BY account_id)\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       count(*)\nFROM Financial_transactions\nGROUP BY account_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0037", "sql1": "\nSELECT card_type_code,\n       n AS count___\nFROM\n  (SELECT card_type_code,\n          transaction_comment,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.card_id AS card_id,\n             LHS.customer_id AS customer_id,\n             LHS.card_type_code AS card_type_code,\n             LHS.card_number AS card_number,\n             LHS.date_valid_from AS date_valid_from,\n             LHS.date_valid_to AS date_valid_to,\n             LHS.other_card_details AS other_card_details,\n             RHS.transaction_id AS transaction_id,\n             RHS.previous_transaction_id AS previous_transaction_id,\n             RHS.account_id AS account_id,\n             RHS.transaction_type AS transaction_type,\n             RHS.transaction_date AS transaction_date,\n             RHS.transaction_amount AS transaction_amount,\n             RHS.transaction_comment AS transaction_comment,\n             RHS.other_transaction_details AS other_transaction_details\n      FROM customers_cards AS LHS\n      INNER JOIN financial_transactions AS RHS ON (LHS.card_id = RHS.card_id))\n   GROUP BY card_type_code,\n            transaction_comment)\nORDER BY card_type_code\n", "sql2": "SELECT T2.card_type_code,\n       count(*)\nFROM Financial_transactions AS T1\nJOIN Customers_cards AS T2 ON T1.card_id = T2.card_id\nGROUP BY T2.card_type_code", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0021", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `card_type_code`,\n          COUNT(*) AS `n`\n   FROM `customers_cards`\n   GROUP BY `card_type_code`)\nWHERE (`card_type_code` = 'Debit')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers_cards\nWHERE card_type_code = 'Debit'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0036", "sql1": "\nSELECT DISTINCT AVG(transaction_amount) OVER () AS avg_transaction_amount_,\n                                             sumtransaction_amount AS sum_transaction_amount_\nFROM\n  (SELECT transaction_id,\n          previous_transaction_id,\n          account_id,\n          card_id,\n          transaction_type,\n          transaction_date,\n          transaction_amount,\n          transaction_comment,\n          other_transaction_details,\n          SUM(transaction_amount) OVER () AS sumtransaction_amount\n   FROM financial_transactions)\nORDER BY avg_transaction_amount_\n", "sql2": "SELECT avg(transaction_amount),\n       sum(transaction_amount)\nFROM Financial_transactions", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers_cards\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers_cards", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0031", "sql1": "\nSELECT `customer_id`,\n       `customer_first_name`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers_cards`\n           WHERE (`card_type_code` = 'Credit')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       customer_first_name\nFROM Customers\nEXCEPT\nSELECT T1.customer_id,\n       T2.customer_first_name\nFROM Customers_cards AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE card_type_code = 'Credit'", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0027", "sql1": "\nSELECT card_type_code,\n       n AS count___\nFROM\n  (SELECT card_type_code,\n          COUNT(*) AS n\n   FROM customers_cards\n   GROUP BY card_type_code)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code,\n       count(*)\nFROM Customers_cards\nGROUP BY card_type_code", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0007", "sql1": "\nSELECT customer_id,\n       n AS count___\nFROM\n  (SELECT LHS.n AS n,\n          RHS.customer_id AS customer_id,\n          RHS.n AS n_other\n   FROM\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM accounts\n         GROUP BY customer_id)) AS LHS\n   CROSS JOIN\n     (SELECT customer_id,\n             COUNT(*) AS n\n      FROM accounts\n      GROUP BY customer_id) AS RHS)\nWHERE (n <= n_other)\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       count(*)\nFROM Accounts\nGROUP BY customer_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0011", "sql1": "\nSELECT DISTINCT customer_first_name,\n                customer_last_name\nFROM\n  (SELECT LHS.account_id AS account_id,\n          LHS.customer_id AS customer_id,\n          LHS.account_name AS account_name,\n          LHS.other_account_details AS other_account_details,\n          RHS.customer_first_name AS customer_first_name,\n          RHS.customer_last_name AS customer_last_name,\n          RHS.customer_address AS customer_address,\n          RHS.customer_phone AS customer_phone,\n          RHS.customer_email AS customer_email,\n          RHS.other_customer_details AS other_customer_details\n   FROM accounts AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_first_name\n", "sql2": "SELECT DISTINCT T1.customer_first_name,\n                T1.customer_last_name\nFROM Customers AS T1\nJOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0010", "sql1": "\nSELECT customer_first_name,\n       customer_last_name\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM accounts AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_first_name\n", "sql2": "SELECT customer_first_name,\n       customer_last_name\nFROM Customers\nEXCEPT\nSELECT T1.customer_first_name,\n       T1.customer_last_name\nFROM Customers AS T1\nJOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0006", "sql1": "\nSELECT customer_id,\n       n AS count___\nFROM\n  (SELECT customer_id,\n          COUNT(*) AS n\n   FROM accounts\n   GROUP BY customer_id)\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       count(*)\nFROM Accounts\nGROUP BY customer_id", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_card_transactions/0030", "sql1": "\nSELECT card_type_code,\n       n_distinct AS count_distinct_customer_id_\nFROM\n  (SELECT card_type_code,\n          COUNT(DISTINCT customer_id) AS n_distinct\n   FROM customers_cards\n   GROUP BY card_type_code)\nORDER BY card_type_code\n", "sql2": "SELECT card_type_code,\n       count(DISTINCT customer_id)\nFROM Customers_cards\nGROUP BY card_type_code", "schema": "spider/customers_card_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_card_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0009", "sql1": "\nSELECT team\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM technician\n   GROUP BY team)\nWHERE (n >= 2)\nORDER BY team\n", "sql2": "SELECT Team\nFROM technician\nGROUP BY Team\nHAVING COUNT(*) >= 2", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0013", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT age,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.technician_id AS technician_id,\n             LHS.name AS name,\n             LHS.team AS team,\n             LHS.starting_year AS starting_year,\n             LHS.age AS age,\n             RHS.repair_id AS repair_id,\n             RHS.machine_id AS machine_id\n      FROM technician AS LHS\n      INNER JOIN repair_assignment AS RHS ON (LHS.technician_id = RHS.technician_id))\n   GROUP BY age,\n            name)\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       COUNT(*)\nFROM repair_assignment AS T1\nJOIN technician AS T2 ON T1.technician_ID = T2.technician_ID\nGROUP BY T2.Name", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0005", "sql1": "\nSELECT name\nFROM technician\nWHERE (age >= 36\n       AND age <= 37)\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nWHERE Age = 36\n  OR Age = 37", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0004", "sql1": "\nSELECT `name`\nFROM `technician`\nWHERE (`team` != 'NYY')\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nWHERE Team != 'NYY'", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0008", "sql1": "\nSELECT team\nFROM\n  (SELECT LHS.team AS team,\n          LHS.n AS n\n   FROM\n     (SELECT team,\n             COUNT(*) AS n\n      FROM technician\n      GROUP BY team) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS maxn\n      FROM\n        (SELECT team,\n                COUNT(*) AS n\n         FROM technician\n         GROUP BY team)) AS RHS ON (LHS.n = RHS.maxn))\nORDER BY team\n", "sql2": "SELECT Team\nFROM technician\nGROUP BY Team\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0015", "sql1": "\nSELECT `starting_year`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `technician`\n         WHERE (`team` != 'CLE'\n                AND `team` = 'CWS'))\n      ORDER BY technician_id)\n   LIMIT 1)\n", "sql2": "SELECT Starting_Year\nFROM technician\nWHERE Team = 'CLE' INTERSECT\n  SELECT Starting_Year\n  FROM technician WHERE Team = 'CWS'", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0003", "sql1": "\nSELECT team,\n       starting_year\nFROM technician\nORDER BY team\n", "sql2": "SELECT Team,\n       Starting_Year\nFROM technician", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0002", "sql1": "\nSELECT name\nFROM technician\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nORDER BY Age ASC", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM technician AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM repair_assignment AS RHS\n        WHERE (LHS.technician_id = RHS.technician_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM technician\nWHERE technician_id NOT IN\n    (SELECT technician_id\n     FROM repair_assignment)", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM technician\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM technician", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0007", "sql1": "\nSELECT team,\n       n AS count___\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM technician\n   GROUP BY team)\nORDER BY team\n", "sql2": "SELECT Team,\n       COUNT(*)\nFROM technician\nGROUP BY Team", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0011", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.machine_id AS machine_id,\n          LHS.making_year AS making_year,\n          LHS.class AS CLASS,\n          LHS.team AS team,\n          LHS.machine_series AS machine_series,\n          LHS.value_points AS value_points,\n          LHS.quality_rank AS quality_rank,\n          RHS.name AS name,\n          RHS.team AS team_other,\n          RHS.starting_year AS starting_year,\n          RHS.age AS age,\n          RHS.repair_id AS repair_id,\n          RHS.machine_id AS machine_id_other\n   FROM machine AS LHS\n   INNER JOIN\n     (SELECT LHS.technician_id AS technician_id,\n             LHS.name AS name,\n             LHS.team AS team,\n             LHS.starting_year AS starting_year,\n             LHS.age AS age,\n             RHS.repair_id AS repair_id,\n             RHS.machine_id AS machine_id\n      FROM technician AS LHS\n      INNER JOIN repair_assignment AS RHS ON (LHS.technician_id = RHS.technician_id)) AS RHS ON (LHS.machine_id = RHS.technician_id))\nORDER BY name\n", "sql2": "SELECT T3.Name\nFROM repair_assignment AS T1\nJOIN machine AS T2 ON T1.machine_id = T2.machine_id\nJOIN technician AS T3 ON T1.technician_ID = T3.technician_ID\nORDER BY T2.quality_rank", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0010", "sql1": "\nSELECT name,\n       machine_series\nFROM\n  (SELECT LHS.technician_id AS technician_id,\n          LHS.name AS name,\n          LHS.team AS team,\n          LHS.starting_year AS starting_year,\n          LHS.age AS age,\n          RHS.repair_id AS repair_id,\n          RHS.machine_id AS machine_id,\n          RHS.making_year AS making_year,\n          RHS.class AS CLASS,\n          RHS.team AS team_other,\n          RHS.machine_series AS machine_series,\n          RHS.value_points AS value_points,\n          RHS.quality_rank AS quality_rank\n   FROM technician AS LHS\n   INNER JOIN\n     (SELECT LHS.technician_id AS technician_id,\n             LHS.repair_id AS repair_id,\n             LHS.machine_id AS machine_id,\n             RHS.making_year AS making_year,\n             RHS.class AS CLASS,\n             RHS.team AS team,\n             RHS.machine_series AS machine_series,\n             RHS.value_points AS value_points,\n             RHS.quality_rank AS quality_rank\n      FROM repair_assignment AS LHS\n      INNER JOIN machine AS RHS ON (LHS.machine_id = RHS.machine_id)) AS RHS ON (LHS.technician_id = RHS.technician_id))\nORDER BY name\n", "sql2": "SELECT T3.Name,\n       T2.Machine_series\nFROM repair_assignment AS T1\nJOIN machine AS T2 ON T1.machine_id = T2.machine_id\nJOIN technician AS T3 ON T1.technician_ID = T3.technician_ID", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/machine_repair/0006", "sql1": "\nSELECT DISTINCT starting_year\nFROM\n  (SELECT LHS.technician_id AS technician_id,\n          LHS.name AS name,\n          LHS.team AS team,\n          LHS.starting_year AS starting_year,\n          LHS.age AS age,\n          RHS.technician_id AS technician_id_other,\n          RHS.name AS name_other,\n          RHS.starting_year AS starting_year_other,\n          RHS.age AS age_other\n   FROM technician AS LHS\n   INNER JOIN\n     (SELECT technician_id,\n             name,\n             team,\n             starting_year,\n             age,\n             MAX(age) OVER () AS maxage\n      FROM technician) AS RHS ON (LHS.age = RHS.maxage\n                                     AND LHS.team = RHS.team))\nORDER BY starting_year\n", "sql2": "SELECT Starting_Year\nFROM technician\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/machine_repair/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0009", "sql1": "\nSELECT card_number,\n       name,\n       hometown\nFROM member\nORDER BY card_number\n", "sql2": "SELECT card_number,\n       name,\n       hometown\nFROM member\nORDER BY LEVEL DESC", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM member AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM membership_register_branch AS RHS\n        WHERE (LHS.member_id = RHS.member_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM member\nWHERE member_id NOT IN\n    (SELECT member_id\n     FROM membership_register_branch)", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0005", "sql1": "\nSELECT open_year\nFROM\n  (SELECT open_year,\n          COUNT(*) AS n\n   FROM branch\n   GROUP BY open_year)\nWHERE (n > 2)\nORDER BY open_year\n", "sql2": "SELECT open_year\nFROM branch\nGROUP BY open_year\nHAVING count(*) >= 2", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0004", "sql1": "\nSELECT city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM branch\n      ORDER BY branch_id DESC)\n   LIMIT 2)\n", "sql2": "SELECT DISTINCT city\nFROM branch\nWHERE membership_amount >= 100", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_level_\nFROM\n  (SELECT LEVEL,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY LEVEL)\nORDER BY count_distinct_level_\n", "sql2": "SELECT count(DISTINCT LEVEL)\nFROM member", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM branch\n      ORDER BY membership_amount DESC)\n   LIMIT 3)\n", "sql2": "SELECT name\nFROM branch\nORDER BY membership_amount DESC\nLIMIT 3", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0002", "sql1": "\nSELECT name,\n       address_road,\n       city\nFROM branch\nORDER BY name\n", "sql2": "SELECT name,\n       address_road,\n       city\nFROM branch\nORDER BY open_year", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0017", "sql1": "\nSELECT city\nFROM branch\nWHERE (open_year = 2001)\nORDER BY city\n", "sql2": "SELECT city\nFROM branch\nWHERE open_year = 2001\n  AND membership_amount > 100", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0020", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.branch_id AS branch_id,\n          LHS.year AS YEAR,\n          LHS.total_pounds AS total_pounds,\n          LHS.n AS n,\n          RHS.card_number AS card_number,\n          RHS.name AS name,\n          RHS.hometown AS hometown,\n          RHS.level AS LEVEL\n   FROM\n     (SELECT LHS.member_id AS member_id,\n             LHS.branch_id AS branch_id,\n             LHS.year AS YEAR,\n             LHS.total_pounds AS total_pounds,\n             RHS.n AS n\n      FROM purchase AS LHS\n      INNER JOIN\n        (SELECT YEAR,\n                COUNT(*) AS n\n         FROM purchase\n         GROUP BY YEAR) AS RHS ON (LHS.year = RHS.year)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM member\n      WHERE (LEVEL < 6)) AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM purchase AS T1\nJOIN member AS T2 ON T1.member_id = T2.member_id\nWHERE T2.level = 6", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0016", "sql1": "\nSELECT name,\n       hometown\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.card_number AS card_number,\n          LHS.name AS name,\n          LHS.hometown AS hometown,\n          LHS.level AS LEVEL,\n          RHS.branch_id AS branch_id,\n          RHS.register_year AS register_year\n   FROM member AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM membership_register_branch\n      WHERE (register_year = 2016)) AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T2.name,\n       T2.hometown\nFROM membership_register_branch AS T1\nJOIN member AS T2 ON T1.member_id = T2.member_id\nWHERE T1.register_year = 2016", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/shop_membership/0010", "sql1": "\nSELECT LEVEL\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LEVEL,\n                MAX(n) AS maxn\n         FROM\n           (SELECT LEVEL,\n                   COUNT(*) AS n\n            FROM member\n            GROUP BY LEVEL)\n         GROUP BY LEVEL)\n      ORDER BY maxn DESC)\n   LIMIT 1)\n", "sql2": "SELECT LEVEL\nFROM member\nGROUP BY LEVEL\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/shop_membership/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0013", "sql1": "\nSELECT reign,\n       days_held\nFROM wrestler\nORDER BY reign\n", "sql2": "SELECT Reign,\n       Days_held\nFROM wrestler", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0005", "sql1": "\nSELECT name,\n       LOCATION\nFROM wrestler\nORDER BY name\n", "sql2": "SELECT Name,\n       LOCATION\nFROM wrestler", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0004", "sql1": "\nSELECT DISTINCT `reign`\nFROM `wrestler`\nWHERE (`location` != 'Tokyo , Japan')\nORDER BY reign\n", "sql2": "SELECT DISTINCT Reign\nFROM wrestler\nWHERE LOCATION != 'Tokyo , Japan'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.days_held AS days_held,\n          RHS.wrestler_id AS wrestler_id,\n          RHS.days_held AS days_held_other,\n          RHS.location AS LOCATION,\n          RHS.event AS event\n   FROM\n     (SELECT name,\n             MIN(days_held) AS days_held\n      FROM wrestler\n      GROUP BY name) AS LHS\n   INNER JOIN wrestler AS RHS ON (LHS.name = RHS.name\n                                     AND LHS.days_held = RHS.reign))\nORDER BY name\n", "sql2": "SELECT Name\nFROM wrestler\nORDER BY Days_held ASC\nLIMIT 1", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0019", "sql1": "\nSELECT n_distinct AS count__distinct_team_\nFROM\n  (SELECT COUNT(DISTINCT team) AS n_distinct\n   FROM elimination)\nORDER BY count__distinct_team_\n", "sql2": "SELECT COUNT (DISTINCT team)\nFROM elimination", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0018", "sql1": "\nSELECT `team`\nFROM `elimination`\nWHERE (`eliminated_by` = 'Orton'\n       AND `eliminated_by` != 'Benjamin')\nORDER BY team\n", "sql2": "SELECT Team\nFROM Elimination\nWHERE Eliminated_By = 'Orton' INTERSECT\n  SELECT Team\n  FROM Elimination WHERE Eliminated_By = 'Benjamin'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0002", "sql1": "\nSELECT name\nFROM wrestler\nORDER BY name\n", "sql2": "SELECT Name\nFROM wrestler\nORDER BY Days_held DESC", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0014", "sql1": "\nSELECT DISTINCT name_other AS name\nFROM\n  (SELECT LHS.wrestler_id AS wrestler_id,\n          LHS.name AS name,\n          LHS.reign AS reign,\n          LHS.days_held AS days_held,\n          LHS.location AS LOCATION,\n          LHS.event AS event,\n          RHS.wrestler_id AS wrestler_id_other,\n          RHS.name AS name_other,\n          RHS.reign AS reign_other,\n          RHS.location AS location_other,\n          RHS.event AS event_other\n   FROM wrestler AS LHS\n   INNER JOIN wrestler AS RHS ON (LHS.reign = RHS.days_held))\nORDER BY name\n", "sql2": "SELECT Name\nFROM wrestler\nWHERE Days_held < 100", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM wrestler\nORDER BY count___\nFrom cffi callback <function _processevents at 0x7fbc72314790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\nwrestler <- read_csv(\"tests-examples/spider/wrestler/tables/wrestler.csv\", skip=1, col_names=c('wrestler_id','name','reign','days_held','location','event'), col_types=cols(col_integer(),col_character(),col_character(),col_character(),col_character(),col_character()))\nwrestler <- copy_to(con, wrestler)\nexpected_output <- read_csv(\"tests-examples/spider/wrestler/tables/0001.csv\", skip=1, col_names=c('count___'), col_types=cols(col_integer()))\n\ndf1 <- wrestler %>% mutate(n = n())\nout <- df1 %>% select(count___ = n) %>% distinct() %>% arrange(count___)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM wrestler\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM wrestler", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0020", "sql1": "\nSELECT `time`\nFROM `elimination`\nWHERE (`eliminated_by` = 'Punk'\n       OR `eliminated_by` = 'Orton')\nORDER BY TIME\n", "sql2": "SELECT TIME\nFROM elimination\nWHERE Eliminated_By = 'Punk'\n  OR Eliminated_By = 'Orton'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0011", "sql1": "\nSELECT team,\n       n AS count___\nFROM\n  (SELECT team,\n          COUNT(*) AS n\n   FROM elimination\n   GROUP BY team)\nORDER BY team\n", "sql2": "SELECT Team,\n       COUNT(*)\nFROM elimination\nGROUP BY Team", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/wrestler/0006", "sql1": "\nSELECT `elimination_move`\nFROM `elimination`\nWHERE (`team` = 'Team Orton')\nORDER BY elimination_move\n", "sql2": "SELECT Elimination_Move\nFROM Elimination\nWHERE Team = 'Team Orton'", "schema": "spider/wrestler/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0009", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM performance\n   GROUP BY LOCATION)\nWHERE (n >= 2)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM performance\nGROUP BY LOCATION\nHAVING COUNT(*) >= 2", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0005", "sql1": "\nSELECT meanattendance AS avg_attendance_\nFROM\n  (SELECT AVG(attendance) AS meanattendance\n   FROM performance)\nORDER BY avg_attendance_\n", "sql2": "SELECT avg(Attendance)\nFROM performance", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0004", "sql1": "\nSELECT `attendance`\nFROM `performance`\nWHERE (`location` = 'TD Garden'\n       OR `location` = 'Bell Centre')\nORDER BY attendance\n", "sql2": "SELECT Attendance\nFROM performance\nWHERE LOCATION = 'TD Garden'\n  OR LOCATION = 'Bell Centre'", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0008", "sql1": "\nSELECT DISTINCT location_other AS LOCATION\nFROM\n  (SELECT LHS.location AS LOCATION,\n          LHS.n AS n,\n          LHS.maxn AS maxn,\n          RHS.location AS location_other,\n          RHS.n AS n_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT LOCATION,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT LOCATION,\n                COUNT(*) AS n\n         FROM performance\n         GROUP BY LOCATION)) AS LHS\n   CROSS JOIN\n     (SELECT LOCATION,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT LOCATION,\n                COUNT(*) AS n\n         FROM performance\n         GROUP BY LOCATION)) AS RHS)\nWHERE (n < maxn\n       AND maxn <= n_other)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM performance\nGROUP BY LOCATION\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0003", "sql1": "\nSELECT date, LOCATION\nFROM performance\nORDER BY date\n", "sql2": "SELECT Date , LOCATION\nFROM performance", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0002", "sql1": "\nSELECT HOST\nFROM performance\nORDER BY HOST\n", "sql2": "SELECT HOST\nFROM performance\nORDER BY Attendance ASC", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM performance\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM performance", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0007", "sql1": "\nSELECT LOCATION,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM performance\n   GROUP BY LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION,\n       COUNT(*)\nFROM performance\nGROUP BY LOCATION", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/performance_attendance/0006", "sql1": "\nSELECT date\nFROM\n  (SELECT LHS.performance_id AS performance_id,\n          LHS.date AS date,\n          LHS.host AS HOST,\n          LHS.location AS LOCATION,\n          LHS.attendance AS attendance,\n          LHS.maxattendance AS maxattendance,\n          RHS.performance_id AS performance_id_other,\n          RHS.host AS host_other,\n          RHS.location AS location_other,\n          RHS.maxattendance AS maxattendance_other\n   FROM\n     (SELECT performance_id, date, HOST,\n                                   LOCATION,\n                                   attendance,\n                                   MAX(attendance) OVER () AS maxattendance\n      FROM performance) AS LHS\n   INNER JOIN\n     (SELECT performance_id, date, HOST,\n                                   LOCATION,\n                                   attendance,\n                                   MAX(attendance) OVER () AS maxattendance\n      FROM performance) AS RHS ON (LHS.maxattendance = RHS.attendance\n                                      AND LHS.date = RHS.date))\nORDER BY date\n", "sql2": "SELECT Date\nFROM performance\nORDER BY Attendance DESC\nLIMIT 1", "schema": "spider/performance_attendance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0009", "sql1": "\nSELECT DISTINCT venue\nFROM debate\nORDER BY venue\n", "sql2": "SELECT DISTINCT Venue\nFROM debate", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0005", "sql1": "\nSELECT name\nFROM people\nWHERE (age < 35\n       OR age <= 36)\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE Age = 35\n  OR Age = 36", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0004", "sql1": "\nSELECT date\nFROM debate\nWHERE (num_of_audience >= 150)\nORDER BY date\n", "sql2": "SELECT Date\nFROM debate\nWHERE Num_of_Audience > 150", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0008", "sql1": "\nSELECT party\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT district,\n                party,\n                MAX(n) AS maxn\n         FROM\n           (SELECT district,\n                   party,\n                   COUNT(*) AS n\n            FROM people\n            GROUP BY district,\n                     party)\n         GROUP BY district,\n                  party)\n      ORDER BY maxn DESC)\n   LIMIT 1)\n", "sql2": "SELECT Party\nFROM people\nGROUP BY Party\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0003", "sql1": "\nSELECT date, venue\nFROM debate\nORDER BY date\n", "sql2": "SELECT Date , Venue\nFROM debate", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0002", "sql1": "\nSELECT venue\nFROM debate\nORDER BY venue\n", "sql2": "SELECT Venue\nFROM debate\nORDER BY Num_of_Audience ASC", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM debate\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM debate", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0007", "sql1": "\nSELECT party,\n       n AS count___\nFROM\n  (SELECT party,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY party)\nORDER BY party\n", "sql2": "SELECT Party,\n       COUNT(*)\nFROM people\nGROUP BY Party", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/debate/0006", "sql1": "\nSELECT party\nFROM\n  (SELECT LHS.age AS age,\n          RHS.people_id AS people_id,\n          RHS.district AS district,\n          RHS.name AS name,\n          RHS.party AS party,\n          RHS.age AS age_other\n   FROM\n     (SELECT MIN(age) AS age\n      FROM people) AS LHS\n   CROSS JOIN people AS RHS)\nWHERE (age = age_other)\nORDER BY party\n", "sql2": "SELECT Party\nFROM people\nORDER BY Age ASC\nLIMIT 1", "schema": "spider/debate/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0009", "sql1": "\nSELECT DISTINCT `fname`,\n                `lname`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`instid` AS `instid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`country` AS `country`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`instid` AS `instid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `authors` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `inst`\n      WHERE (`name` = 'University of Oxford')) AS RHS ON (LHS.instid = RHS.instid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT t1.fname,\n                t1.lname\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'University of Oxford'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0033", "sql1": "\nSELECT fname,\n       lname\nFROM authors\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM authors\nORDER BY lname", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0013", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`authid` AS `authid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `inst` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`name` = 'Indiana University')\nORDER BY title\n", "sql2": "SELECT DISTINCT t1.title\nFROM papers AS t1\nJOIN authorship AS t2 ON t1.paperid = t2.paperid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'Indiana University'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0005", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Aaron'\n       AND `lname` = 'Turon')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Aaron'\n  AND t1.lname = 'Turon'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0029", "sql1": "\nSELECT `fname`\nFROM `authors`\nWHERE (`lname` = 'Ueno')\nORDER BY fname\n", "sql2": "SELECT fname\nFROM authors\nWHERE lname = 'Ueno'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0028", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.paperid AS paperid,\n          LHS.title AS title,\n          LHS.authid AS authid,\n          LHS.instid AS instid,\n          LHS.authorder AS authorder\n   FROM\n     (SELECT LHS.paperid AS paperid,\n             LHS.title AS title,\n             RHS.authid AS authid,\n             RHS.instid AS instid,\n             RHS.authorder AS authorder\n      FROM papers AS LHS\n      INNER JOIN authorship AS RHS ON (LHS.paperid = RHS.paperid)) AS LHS\n   INNER JOIN\n     (SELECT authid,\n             instid,\n             paperid,\n             MAX(authorder) OVER () AS authorder\n      FROM authorship) AS RHS ON (LHS.paperid = RHS.paperid\n                                     AND LHS.authid = RHS.authid\n                                     AND LHS.instid = RHS.instid\n                                     AND LHS.authorder = RHS.authorder))\nORDER BY title\n", "sql2": "SELECT t2.title\nFROM authorship AS t1\nJOIN papers AS t2 ON t1.paperid = t2.paperid\nWHERE t1.authorder =\n    (SELECT max(authorder)\n     FROM authorship)", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0004", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Jeremy'\n       AND `lname` = 'Gibbons')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Jeremy'\n  AND t1.lname = 'Gibbons'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0032", "sql1": "\nSELECT lname\nFROM authors\nORDER BY lname\n", "sql2": "SELECT lname\nFROM authors\nORDER BY lname", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0008", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`authid` AS `authid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`authid` AS `authid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `inst` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `authors`\n      WHERE (`fname` = 'Katsuhiro'\n             OR `lname` = 'Ueno')) AS RHS ON (LHS.authid = RHS.authid))\nORDER BY name\n", "sql2": "SELECT DISTINCT t3.name\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t1.fname = 'Katsuhiro'\n  AND t1.lname = 'Ueno'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM papers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM papers", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0019", "sql1": "\nSELECT `title`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`paperid` AS `paperid`,\n             `LHS`.`title` AS `title`,\n             `RHS`.`authorder` AS `authorder`\n      FROM\n        (SELECT `LHS`.`instid` AS `instid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`country` AS `country`,\n                `LHS`.`authid` AS `authid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `RHS`.`paperid` AS `paperid`,\n                `RHS`.`title` AS `title`\n         FROM\n           (SELECT `LHS`.`instid` AS `instid`,\n                   `LHS`.`name` AS `name`,\n                   `LHS`.`country` AS `country`,\n                   `RHS`.`authid` AS `authid`,\n                   `RHS`.`lname` AS `lname`,\n                   `RHS`.`fname` AS `fname`\n            FROM `inst` AS `LHS`\n            CROSS JOIN `authors` AS `RHS`) AS `LHS`\n         CROSS JOIN `papers` AS `RHS`) AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                              AND `LHS`.`authid` = `RHS`.`authid`\n                                              AND `LHS`.`paperid` = `RHS`.`paperid`))\n   WHERE (`lname` = 'Turon'\n          AND `authorder` = 2))\nWHERE (`country` = 'USA'\n       OR `lname` != 'Turon')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nJOIN inst AS t4 ON t2.instid = t4.instid\nWHERE t4.country = 'USA'\n  AND t2.authorder = 2\n  AND t1.lname = 'Turon'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0018", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Stephanie'\n       AND `lname` = 'Weirich')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Stephanie'\n  AND t1.lname = 'Weirich'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM inst\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM inst", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0014", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`authid` AS `authid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `inst` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`name` = 'Google')\nORDER BY title\n", "sql2": "SELECT DISTINCT t1.title\nFROM papers AS t1\nJOIN authorship AS t2 ON t1.paperid = t2.paperid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'Google'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM authors\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM authors", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0017", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`fname` = 'Olin'\n       AND `lname` = 'Shivers')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Olin'\n  AND t1.lname = 'Shivers'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0020", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM\n        (SELECT `LHS`.`instid` AS `instid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`country` AS `country`,\n                `RHS`.`authid` AS `authid`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`\n         FROM `inst` AS `LHS`\n         CROSS JOIN `authors` AS `RHS`) AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                           AND `LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`country` = 'Japan'\n       AND `lname` = 'Ohori')\nORDER BY title\n", "sql2": "SELECT t3.title\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nJOIN inst AS t4 ON t2.instid = t4.instid\nWHERE t4.country = 'Japan'\n  AND t2.authorder = 1\n  AND t1.lname = 'Ohori'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0016", "sql1": "\nSELECT DISTINCT `n` AS `count_distinct_t1_title_`\nFROM\n  (SELECT `authid`,\n          `paperid`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`instid` AS `instid`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`country` AS `country`,\n                `LHS`.`paperid` AS `paperid`,\n                `LHS`.`title` AS `title`,\n                `RHS`.`authid` AS `authid`,\n                `RHS`.`authorder` AS `authorder`\n         FROM\n           (SELECT `LHS`.`instid` AS `instid`,\n                   `LHS`.`name` AS `name`,\n                   `LHS`.`country` AS `country`,\n                   `RHS`.`paperid` AS `paperid`,\n                   `RHS`.`title` AS `title`\n            FROM `inst` AS `LHS`\n            CROSS JOIN `papers` AS `RHS`) AS `LHS`\n         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`\n                                                 AND `LHS`.`paperid` = `RHS`.`paperid`))\n      WHERE (`name` = 'University of Pennsylvania'))\n   GROUP BY authid,\n            paperid)\nORDER BY count_distinct_t1_title_\n", "sql2": "SELECT count(DISTINCT t1.title)\nFROM papers AS t1\nJOIN authorship AS t2 ON t1.paperid = t2.paperid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'University of Pennsylvania'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0031", "sql1": "\nSELECT fname\nFROM authors\nORDER BY fname\n", "sql2": "SELECT fname\nFROM authors\nORDER BY fname", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0007", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`instid` AS `instid`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`authid` AS `authid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`\n   FROM\n     (SELECT `LHS`.`instid` AS `instid`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`authid` AS `authid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `inst` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `authors`\n      WHERE (`fname` = 'Matthias'\n             OR `lname` = 'Blume')) AS RHS ON (LHS.authid = RHS.authid))\nORDER BY name\n", "sql2": "SELECT DISTINCT t3.name\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t1.fname = 'Matthias'\n  AND t1.lname = 'Blume'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0011", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`title` AS `title`,\n          `RHS`.`instid` AS `instid`,\n          `RHS`.`authorder` AS `authorder`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`title` AS `title`\n      FROM `authors` AS `LHS`\n      CROSS JOIN `papers` AS `RHS`) AS `LHS`\n   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`\n                                           AND `LHS`.`paperid` = `RHS`.`paperid`))\nWHERE (`title` = 'Binders Unbound')\nORDER BY lname\n", "sql2": "SELECT t1.lname\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t3.title = 'Binders Unbound'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0010", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`authid` AS `authid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`instid` AS `instid`,\n          `LHS`.`paperid` AS `paperid`,\n          `LHS`.`authorder` AS `authorder`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`country` AS `country`\n   FROM\n     (SELECT `LHS`.`authid` AS `authid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `RHS`.`instid` AS `instid`,\n             `RHS`.`paperid` AS `paperid`,\n             `RHS`.`authorder` AS `authorder`\n      FROM `authors` AS `LHS`\n      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `inst`\n      WHERE (`name` = 'Google')) AS RHS ON (LHS.instid = RHS.instid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT t1.fname,\n                t1.lname\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN inst AS t3 ON t2.instid = t3.instid\nWHERE t3.name = 'Google'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0006", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `authid`,\n          `authorder`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`paperid` AS `paperid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`authid` AS `authid`,\n             `LHS`.`instid` AS `instid`,\n             `LHS`.`authorder` AS `authorder`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`\n      FROM\n        (SELECT `LHS`.`paperid` AS `paperid`,\n                `LHS`.`title` AS `title`,\n                `RHS`.`authid` AS `authid`,\n                `RHS`.`instid` AS `instid`,\n                `RHS`.`authorder` AS `authorder`\n         FROM `papers` AS `LHS`\n         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `authors`\n         WHERE (`fname` != 'Atsushi'\n                OR `lname` = 'Ohori')) AS RHS ON (LHS.authid = RHS.authid))\n   GROUP BY authid,\n            authorder)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM authors AS t1\nJOIN authorship AS t2 ON t1.authid = t2.authid\nJOIN papers AS t3 ON t2.paperid = t3.paperid\nWHERE t1.fname = 'Atsushi'\n  AND t1.lname = 'Ohori'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/icfp_1/0030", "sql1": "\nSELECT `lname`\nFROM `authors`\nWHERE (`fname` = 'Amal')\nORDER BY lname\n", "sql2": "SELECT lname\nFROM authors\nWHERE fname = 'Amal'", "schema": "spider/icfp_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0009", "sql1": "\nSELECT `date_test_taken`\nFROM `student_tests_taken`\nWHERE (`test_result` = 'Pass')\nORDER BY date_test_taken\n", "sql2": "SELECT date_test_taken\nFROM Student_Tests_Taken\nWHERE test_result = 'Pass'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0025", "sql1": "\nSELECT subject_id,\n       subject_name,\n       n AS count___\nFROM\n  (SELECT LHS.subject_id AS subject_id,\n          LHS.n AS n,\n          RHS.subject_name AS subject_name\n   FROM\n     (SELECT subject_id,\n             COUNT(*) AS n\n      FROM courses\n      GROUP BY subject_id) AS LHS\n   INNER JOIN subjects AS RHS ON (LHS.subject_id = RHS.subject_id))\nORDER BY subject_id\n", "sql2": "SELECT T1.subject_id,\n       T2.subject_name,\n       COUNT(*)\nFROM Courses AS T1\nJOIN Subjects AS T2 ON T1.subject_id = T2.subject_id\nGROUP BY T1.subject_id\nORDER BY COUNT(*) ASC", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0033", "sql1": "\nSELECT `date_of_enrolment`,\n       `date_of_completion`\nFROM\n  (SELECT `LHS`.`student_id` AS `student_id`,\n          `LHS`.`date_of_registration` AS `date_of_registration`,\n          `LHS`.`date_of_latest_logon` AS `date_of_latest_logon`,\n          `LHS`.`login_name` AS `login_name`,\n          `LHS`.`password` AS `password`,\n          `LHS`.`personal_name` AS `personal_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`family_name` AS `family_name`,\n          `RHS`.`registration_id` AS `registration_id`,\n          `RHS`.`course_id` AS `course_id`,\n          `RHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `RHS`.`date_of_completion` AS `date_of_completion`\n   FROM `students` AS `LHS`\n   INNER JOIN `student_course_enrolment` AS `RHS` ON (`LHS`.`student_id` = `RHS`.`student_id`))\nWHERE (`personal_name` = 'Karson')\nORDER BY date_of_enrolment\n", "sql2": "SELECT T1.date_of_enrolment,\n       T1.date_of_completion\nFROM Student_Course_Enrolment AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.personal_name = 'Karson'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0005", "sql1": "\nSELECT login_name,\n       family_name\nFROM course_authors_and_tutors\nORDER BY login_name\n", "sql2": "SELECT login_name,\n       family_name\nFROM Course_Authors_and_Tutors", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0029", "sql1": "\nSELECT course_name AS course_description,\n       course_description AS course_name\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.author_id AS author_id,\n          LHS.subject_id AS subject_id,\n          LHS.course_name AS course_name,\n          LHS.course_description AS course_description,\n          RHS.n AS n\n   FROM courses AS LHS\n   LEFT JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM student_course_enrolment\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nWHERE (n > 2)\nORDER BY course_description\n", "sql2": "SELECT T1.course_description,\n       T1.course_name\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name\nHAVING COUNT(*) > 2", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0004", "sql1": "\nSELECT address_line_1\nFROM course_authors_and_tutors\nORDER BY address_line_1\n", "sql2": "SELECT address_line_1\nFROM Course_Authors_and_Tutors", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0012", "sql1": "\nSELECT `date_of_latest_logon`\nFROM `students`\nWHERE (`family_name` = 'Jaskolski'\n       OR `family_name` = 'Langosh')\nORDER BY date_of_latest_logon\n", "sql2": "SELECT date_of_latest_logon\nFROM Students\nWHERE family_name = 'Jaskolski'\n  OR family_name = 'Langosh'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0032", "sql1": "\nSELECT `date_of_completion`\nFROM\n  (SELECT `LHS`.`registration_id` AS `registration_id`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`course_id` AS `course_id`,\n          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `LHS`.`date_of_completion` AS `date_of_completion`,\n          `RHS`.`date_test_taken` AS `date_test_taken`,\n          `RHS`.`test_result` AS `test_result`\n   FROM `student_course_enrolment` AS `LHS`\n   INNER JOIN `student_tests_taken` AS `RHS` ON (`LHS`.`registration_id` = `RHS`.`registration_id`))\nWHERE (`test_result` = 'Fail')\nORDER BY date_of_completion\n", "sql2": "SELECT T1.date_of_completion\nFROM Student_Course_Enrolment AS T1\nJOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id\nWHERE T2.test_result = 'Fail'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0024", "sql1": "\nSELECT subject_id,\n       subject_name,\n       n AS count___\nFROM\n  (SELECT LHS.subject_id AS subject_id,\n          LHS.n AS n,\n          RHS.subject_name AS subject_name\n   FROM\n     (SELECT subject_id,\n             COUNT(*) AS n\n      FROM courses\n      GROUP BY subject_id) AS LHS\n   INNER JOIN subjects AS RHS ON (LHS.subject_id = RHS.subject_id))\nORDER BY subject_id\n", "sql2": "SELECT T1.subject_id,\n       T2.subject_name,\n       COUNT(*)\nFROM Courses AS T1\nJOIN Subjects AS T2 ON T1.subject_id = T2.subject_id\nGROUP BY T1.subject_id", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_course_id_\nFROM student_course_enrolment\nORDER BY count_course_id_\n", "sql2": "SELECT count(course_id)\nFROM Student_Course_Enrolment", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0015", "sql1": "\nSELECT author_id,\n       author_tutor_atb,\n       login_name,\n       password,\n       personal_name,\n       middle_name,\n       family_name,\n       gender_mf,\n       address_line_1\nFROM course_authors_and_tutors\nORDER BY author_id\n", "sql2": "SELECT *\nFROM Course_Authors_and_Tutors\nORDER BY personal_name", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0003", "sql1": "\nSELECT `address_line_1`\nFROM `course_authors_and_tutors`\nWHERE (`personal_name` = 'Cathrine')\nORDER BY address_line_1\n", "sql2": "SELECT address_line_1\nFROM Course_Authors_and_Tutors\nWHERE personal_name = 'Cathrine'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0019", "sql1": "\nSELECT `address_line_1`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`author_id` AS `author_id`,\n          `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`course_name` AS `course_name`,\n          `LHS`.`course_description` AS `course_description`,\n          `RHS`.`author_tutor_atb` AS `author_tutor_atb`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`,\n          `RHS`.`personal_name` AS `personal_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`family_name` AS `family_name`,\n          `RHS`.`gender_mf` AS `gender_mf`,\n          `RHS`.`address_line_1` AS `address_line_1`\n   FROM\n     (SELECT *\n      FROM `courses`\n      WHERE (`course_name` = 'operating system'\n             OR `course_name` = 'data structure')) AS LHS\n   LEFT JOIN course_authors_and_tutors AS RHS ON (LHS.author_id = RHS.author_id))\nORDER BY address_line_1\n", "sql2": "SELECT T1.address_line_1\nFROM Course_Authors_and_Tutors AS T1\nJOIN Courses AS T2 ON T1.author_id = T2.author_id\nWHERE T2.course_name = 'operating system'\n  OR T2.course_name = 'data structure'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0023", "sql1": "\nSELECT `course_name`,\n       `course_description`\nFROM\n  (SELECT `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`subject_name` AS `subject_name`,\n          `RHS`.`course_id` AS `course_id`,\n          `RHS`.`author_id` AS `author_id`,\n          `RHS`.`course_name` AS `course_name`,\n          `RHS`.`course_description` AS `course_description`\n   FROM `subjects` AS `LHS`\n   LEFT JOIN `courses` AS `RHS` ON (`LHS`.`subject_id` = `RHS`.`subject_id`))\nWHERE (`subject_name` = 'Computer Science')\nORDER BY course_name\n", "sql2": "SELECT T1.course_name,\n       T1.course_description\nFROM Courses AS T1\nJOIN Subjects AS T2 ON T1.subject_id = T2.subject_id\nWHERE T2.subject_name = 'Computer Science'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0035", "sql1": "\nSELECT student_id,\n       login_name\nFROM\n  (SELECT LHS.student_id AS student_id,\n          LHS.date_of_registration AS date_of_registration,\n          LHS.date_of_latest_logon AS date_of_latest_logon,\n          LHS.login_name AS login_name,\n          LHS.password AS password,\n          LHS.personal_name AS personal_name,\n          LHS.middle_name AS middle_name,\n          LHS.family_name AS family_name,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.student_id AS student_id,\n             LHS.date_of_registration AS date_of_registration,\n             LHS.date_of_latest_logon AS date_of_latest_logon,\n             LHS.login_name AS login_name,\n             LHS.password AS password,\n             LHS.personal_name AS personal_name,\n             LHS.middle_name AS middle_name,\n             LHS.family_name AS family_name,\n             RHS.n AS n\n      FROM students AS LHS\n      INNER JOIN\n        (SELECT student_id,\n                COUNT(*) AS n\n         FROM student_course_enrolment\n         GROUP BY student_id) AS RHS ON (LHS.student_id = RHS.student_id)) AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             MAX(n) OVER () AS n\n      FROM\n        (SELECT student_id,\n                COUNT(*) AS n\n         FROM student_course_enrolment\n         GROUP BY student_id)) AS RHS ON (LHS.student_id = RHS.student_id\n                                          AND LHS.n = RHS.n))\nORDER BY student_id\n", "sql2": "SELECT T1.student_id,\n       T2.login_name\nFROM Student_Course_Enrolment AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0034", "sql1": "\nSELECT `date_of_enrolment`,\n       `date_of_completion`\nFROM\n  (SELECT `LHS`.`registration_id` AS `registration_id`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`course_id` AS `course_id`,\n          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `LHS`.`date_of_completion` AS `date_of_completion`,\n          `RHS`.`date_of_registration` AS `date_of_registration`,\n          `RHS`.`date_of_latest_logon` AS `date_of_latest_logon`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`,\n          `RHS`.`personal_name` AS `personal_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`family_name` AS `family_name`\n   FROM `student_course_enrolment` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `students`\n      WHERE (`family_name` = 'Zieme'\n             AND `personal_name` = 'Bernie')) AS RHS ON (LHS.student_id = RHS.student_id))\nORDER BY date_of_enrolment\n", "sql2": "SELECT T1.date_of_enrolment,\n       T1.date_of_completion\nFROM Student_Course_Enrolment AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.family_name = 'Zieme'\n  AND T2.personal_name = 'Bernie'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0022", "sql1": "\nSELECT `course_name`\nFROM\n  (SELECT *\n   FROM `courses` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `course_authors_and_tutors`\n           WHERE (`personal_name` != 'Julio')) AS RHS\n        WHERE (LHS.author_id = RHS.author_id) ))\nORDER BY course_name\n", "sql2": "SELECT T2.course_name\nFROM Course_Authors_and_Tutors AS T1\nJOIN Courses AS T2 ON T1.author_id = T2.author_id\nWHERE T1.personal_name = 'Julio'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0018", "sql1": "\nSELECT `login_name`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`author_id` AS `author_id`,\n          `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`course_name` AS `course_name`,\n          `LHS`.`course_description` AS `course_description`,\n          `RHS`.`author_tutor_atb` AS `author_tutor_atb`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`,\n          `RHS`.`personal_name` AS `personal_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`family_name` AS `family_name`,\n          `RHS`.`gender_mf` AS `gender_mf`,\n          `RHS`.`address_line_1` AS `address_line_1`\n   FROM\n     (SELECT *\n      FROM `courses`\n      WHERE (`course_name` = 'advanced database')) AS LHS\n   LEFT JOIN course_authors_and_tutors AS RHS ON (LHS.author_id = RHS.author_id))\nORDER BY login_name\n", "sql2": "SELECT T1.login_name\nFROM Course_Authors_and_Tutors AS T1\nJOIN Courses AS T2 ON T1.author_id = T2.author_id\nWHERE T2.course_name = 'advanced database'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0038", "sql1": "\nSELECT personal_name\nFROM\n  (SELECT *\n   FROM students AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_course_enrolment AS RHS\n        WHERE (LHS.student_id = RHS.student_id) ))\nORDER BY personal_name\n", "sql2": "SELECT personal_name\nFROM Students\nEXCEPT\nSELECT T1.personal_name\nFROM Students AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0002", "sql1": "\nSELECT `course_name` AS `course_description`\nFROM `courses`\nWHERE (`course_name` = 'database')\nORDER BY course_description\n", "sql2": "SELECT course_description\nFROM COURSES\nWHERE course_name = 'database'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0014", "sql1": "\nSELECT subject_name\nFROM subjects\nORDER BY subject_name\n", "sql2": "SELECT subject_name\nFROM SUBJECTS", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM courses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM COURSES", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0017", "sql1": "\nSELECT test_result,\n       n AS count___\nFROM\n  (SELECT test_result,\n          COUNT(*) AS n\n   FROM student_tests_taken\n   GROUP BY test_result)\nORDER BY test_result\n", "sql2": "SELECT test_result,\n       COUNT(*)\nFROM Student_Tests_Taken\nGROUP BY test_result\nORDER BY COUNT(*) DESC", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0016", "sql1": "\nSELECT personal_name,\n       family_name\nFROM students\nORDER BY personal_name\n", "sql2": "SELECT personal_name,\n       family_name\nFROM Students\nORDER BY family_name", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0031", "sql1": "\nSELECT `date_of_enrolment`\nFROM\n  (SELECT `LHS`.`registration_id` AS `registration_id`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`course_id` AS `course_id`,\n          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `LHS`.`date_of_completion` AS `date_of_completion`,\n          `RHS`.`date_test_taken` AS `date_test_taken`,\n          `RHS`.`test_result` AS `test_result`\n   FROM `student_course_enrolment` AS `LHS`\n   INNER JOIN `student_tests_taken` AS `RHS` ON (`LHS`.`registration_id` = `RHS`.`registration_id`))\nWHERE (`test_result` = 'Pass')\nORDER BY date_of_enrolment\n", "sql2": "SELECT T1.date_of_enrolment\nFROM Student_Course_Enrolment AS T1\nJOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id\nWHERE T2.test_result = 'Pass'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0027", "sql1": "\nSELECT course_name\nFROM\n  (SELECT course_name,\n          MAX(n) AS n\n   FROM\n     (SELECT course_name,\n             COUNT(*) AS n\n      FROM\n        (SELECT course_id,\n                author_id,\n                subject_id,\n                course_name,\n                course_description,\n                student_id,\n                date_of_enrolment,\n                date_of_completion,\n                subject_id AS registration_id\n         FROM\n           (SELECT author_id AS course_id,\n                   author_id,\n                   subject_id,\n                   course_name,\n                   course_description,\n                   student_id,\n                   date_of_enrolment,\n                   date_of_completion\n            FROM\n              (SELECT LHS.course_id AS course_id,\n                      LHS.author_id AS author_id,\n                      LHS.subject_id AS subject_id,\n                      LHS.course_name AS course_name,\n                      LHS.course_description AS course_description,\n                      RHS.student_id AS student_id,\n                      RHS.date_of_enrolment AS date_of_enrolment,\n                      RHS.date_of_completion AS date_of_completion\n               FROM courses AS LHS\n               INNER JOIN student_course_enrolment AS RHS ON (LHS.author_id = RHS.course_id\n                                                                 AND LHS.subject_id = RHS.registration_id))))\n      GROUP BY course_name)\n   GROUP BY course_name)\nORDER BY course_name\n", "sql2": "SELECT T1.course_name\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_\nFROM student_course_enrolment\nORDER BY count_distinct_student_id_\n", "sql2": "SELECT count(DISTINCT student_id)\nFROM Student_Course_Enrolment", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0011", "sql1": "\nSELECT `login_name`\nFROM `students`\nWHERE (`family_name` = 'Ward')\nORDER BY login_name\n", "sql2": "SELECT login_name\nFROM Students\nWHERE family_name = 'Ward'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `student_tests_taken`\nWHERE (`test_result` = 'Fail')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student_Tests_Taken\nWHERE test_result = 'Fail'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0006", "sql1": "\nSELECT date_of_enrolment,\n       date_of_completion\nFROM student_course_enrolment\nORDER BY date_of_enrolment\n", "sql2": "SELECT date_of_enrolment,\n       date_of_completion\nFROM Student_Course_Enrolment", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0026", "sql1": "\nSELECT `date_of_enrolment`\nFROM\n  (SELECT `LHS`.`course_id` AS `course_id`,\n          `LHS`.`author_id` AS `author_id`,\n          `LHS`.`subject_id` AS `subject_id`,\n          `LHS`.`course_name` AS `course_name`,\n          `LHS`.`course_description` AS `course_description`,\n          `RHS`.`registration_id` AS `registration_id`,\n          `RHS`.`student_id` AS `student_id`,\n          `RHS`.`date_of_enrolment` AS `date_of_enrolment`,\n          `RHS`.`date_of_completion` AS `date_of_completion`\n   FROM `courses` AS `LHS`\n   INNER JOIN `student_course_enrolment` AS `RHS` ON (`LHS`.`course_id` = `RHS`.`course_id`))\nWHERE (`course_name` = 'Spanish')\nORDER BY date_of_enrolment\n", "sql2": "SELECT T2.date_of_enrolment\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nWHERE T1.course_name = 'Spanish'", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_learning/0030", "sql1": "\nSELECT DISTINCT course_name,\n                n AS count___\nFROM\n  (SELECT LHS.course_id AS course_id,\n          LHS.author_id AS author_id,\n          LHS.subject_id AS subject_id,\n          LHS.course_name AS course_name,\n          LHS.course_description AS course_description,\n          LHS.registration_id AS registration_id,\n          LHS.student_id AS student_id,\n          LHS.date_of_enrolment AS date_of_enrolment,\n          LHS.date_of_completion AS date_of_completion,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.course_id AS course_id,\n             LHS.author_id AS author_id,\n             LHS.subject_id AS subject_id,\n             LHS.course_name AS course_name,\n             LHS.course_description AS course_description,\n             RHS.registration_id AS registration_id,\n             RHS.student_id AS student_id,\n             RHS.date_of_enrolment AS date_of_enrolment,\n             RHS.date_of_completion AS date_of_completion\n      FROM courses AS LHS\n      INNER JOIN student_course_enrolment AS RHS ON (LHS.course_id = RHS.course_id)) AS LHS\n   INNER JOIN\n     (SELECT course_id,\n             COUNT(*) AS n\n      FROM student_course_enrolment\n      GROUP BY course_id) AS RHS ON (LHS.course_id = RHS.course_id))\nORDER BY course_name\n", "sql2": "SELECT T1.course_name,\n       COUNT(*)\nFROM Courses AS T1\nJOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id\nGROUP BY T1.course_name", "schema": "spider/e_learning/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_learning/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0005", "sql1": "\nSELECT truck_details\nFROM trucks\nORDER BY truck_details\n", "sql2": "SELECT truck_details\nFROM trucks\nORDER BY truck_licence_number", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0004", "sql1": "\nSELECT n_distinct AS count_distinct_payment_method_\nFROM\n  (SELECT COUNT(DISTINCT payment_method) AS n_distinct\n   FROM customers)\nORDER BY count_distinct_payment_method_\n", "sql2": "SELECT count(DISTINCT payment_method)\nFROM customers", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0012", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM customers\n      ORDER BY date_became_customer)\n   LIMIT 5)\n", "sql2": "SELECT customer_name\nFROM Customers\nORDER BY date_became_customer\nLIMIT 5", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0008", "sql1": "\nSELECT `customer_email`,\n       `customer_name`\nFROM `customers`\nWHERE (`payment_method` = 'Visa')\nORDER BY customer_email\n", "sql2": "SELECT customer_email,\n       customer_name\nFROM customers\nWHERE payment_method = 'Visa'", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0003", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM customers)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0014", "sql1": "\nSELECT route_name\nFROM delivery_routes\nORDER BY route_name\n", "sql2": "SELECT route_name\nFROM Delivery_Routes\nORDER BY route_name", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0001", "sql1": "\nSELECT `actual_order_id`\nFROM `actual_orders`\nWHERE (`order_status_code` = 'Success')\nORDER BY actual_order_id\n", "sql2": "SELECT actual_order_id\nFROM actual_orders\nWHERE order_status_code = 'Success'", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0011", "sql1": "\nSELECT customer_name,\n       customer_phone,\n       customer_email\nFROM customers\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone,\n       customer_email\nFROM Customers\nORDER BY date_became_customer", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_deliveries/0006", "sql1": "\nSELECT product_name\nFROM\n  (SELECT *\n   FROM products AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT MAX(product_price) AS product_price\n           FROM products) AS RHS\n        WHERE (LHS.product_price = RHS.product_price) ))\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM products\nORDER BY product_price DESC\nLIMIT 1", "schema": "spider/customer_deliveries/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_deliveries/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0009", "sql1": "\nSELECT day_number,\n       calendar_date AS date_stored\nFROM\n  (SELECT LHS.calendar_date AS calendar_date,\n          LHS.day_number AS day_number,\n          RHS.document_id AS document_id,\n          RHS.document_type_code AS document_type_code,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM ref_calendar AS LHS\n   INNER JOIN all_documents AS RHS ON (LHS.calendar_date = RHS.date_stored))\nORDER BY day_number\n", "sql2": "SELECT T2.day_Number,\n       T1.Date_Stored\nFROM All_documents AS T1\nJOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0025", "sql1": "\nSELECT role_code\nFROM\n  (SELECT other_details,\n          role_code,\n          COUNT(*) AS n\n   FROM employees\n   GROUP BY other_details,\n            role_code)\nWHERE (n > 3)\nORDER BY role_code\n", "sql2": "SELECT role_code\nFROM Employees\nGROUP BY role_code\nHAVING count(*) >= 3", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0033", "sql1": "\nSELECT `date_in_location_from`,\n       `date_in_locaton_to`\nFROM\n  (SELECT *\n   FROM `document_locations` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `all_documents`\n           WHERE (`document_name` != 'Robin CV')) AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY date_in_location_from\n", "sql2": "SELECT T1.date_in_location_from,\n       T1.date_in_locaton_to\nFROM Document_locations AS T1\nJOIN All_documents AS T2 ON T1.document_id = T2.document_id\nWHERE T2.document_name = 'Robin CV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0013", "sql1": "\nSELECT `location_name`,\n       `location_description`\nFROM `ref_locations`\nWHERE (`location_code` = 'x')\nORDER BY location_name\n", "sql2": "SELECT location_name,\n       location_description\nFROM Ref_locations\nWHERE location_code = 'x'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0005", "sql1": "\nSELECT `document_type_name`,\n       `document_type_description`\nFROM `ref_document_types`\nWHERE (`document_type_code` = 'RV')\nORDER BY document_type_name\n", "sql2": "SELECT document_type_name,\n       document_type_description\nFROM Ref_document_types\nWHERE document_type_code = 'RV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0029", "sql1": "\nSELECT `employee_id`\nFROM\n  (SELECT `LHS`.`role_code` AS `role_code`,\n          `LHS`.`role_name` AS `role_name`,\n          `LHS`.`role_description` AS `role_description`,\n          `LHS`.`employee_id` AS `employee_id`,\n          `LHS`.`employee_name` AS `employee_name`,\n          `LHS`.`gender_mfu` AS `gender_mfu`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`other_details` AS `other_details`\n   FROM\n     (SELECT `LHS`.`role_code` AS `role_code`,\n             `LHS`.`role_name` AS `role_name`,\n             `LHS`.`role_description` AS `role_description`,\n             `RHS`.`employee_id` AS `employee_id`,\n             `RHS`.`employee_name` AS `employee_name`,\n             `RHS`.`gender_mfu` AS `gender_mfu`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `roles` AS `LHS`\n      INNER JOIN `employees` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `roles`\n      WHERE (`role_name` = 'Human Resource'\n             OR `role_name` = 'Manager')) AS RHS ON (LHS.role_code = RHS.role_code\n                                                     AND LHS.role_name = RHS.role_name\n                                                     AND LHS.role_description = RHS.role_description))\nORDER BY employee_id\n", "sql2": "SELECT T1.employee_id\nFROM Employees AS T1\nJOIN ROLES AS T2 ON T1.role_code = T2.role_code\nWHERE T2.role_name = 'Human Resource'\n  OR T2.role_name = 'Manager'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0028", "sql1": "\nSELECT `employee_name`\nFROM\n  (SELECT `LHS`.`role_code` AS `role_code`,\n          `LHS`.`role_name` AS `role_name`,\n          `LHS`.`role_description` AS `role_description`,\n          `RHS`.`employee_id` AS `employee_id`,\n          `RHS`.`employee_name` AS `employee_name`,\n          `RHS`.`gender_mfu` AS `gender_mfu`,\n          `RHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `roles` AS `LHS`\n   LEFT JOIN `employees` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`))\nWHERE (`role_name` = 'Editor')\nORDER BY employee_name\n", "sql2": "SELECT T1.employee_name\nFROM Employees AS T1\nJOIN ROLES AS T2 ON T1.role_code = T2.role_code\nWHERE T2.role_name = 'Editor'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0004", "sql1": "\nSELECT document_type_code,\n       document_type_name\nFROM ref_document_types\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       document_type_name\nFROM Ref_document_types", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0012", "sql1": "\nSELECT location_code,\n       location_name\nFROM ref_locations\nORDER BY location_code\n", "sql2": "SELECT location_code,\n       location_name\nFROM Ref_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0032", "sql1": "\nSELECT location_code,\n       date_in_location_from,\n       date_in_locaton_to\nFROM document_locations\nORDER BY location_code\n", "sql2": "SELECT location_code,\n       date_in_location_from,\n       date_in_locaton_to\nFROM Document_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0008", "sql1": "\nSELECT `date_stored`\nFROM `all_documents`\nWHERE (`document_name` = 'Marry CV')\nORDER BY date_stored\n", "sql2": "SELECT date_stored\nFROM All_documents\nWHERE Document_name = 'Marry CV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0042", "sql1": "\nSELECT DISTINCT destruction_authorised_by_employee_id\nFROM documents_to_be_destroyed\nORDER BY destruction_authorised_by_employee_id\n", "sql2": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID\nFROM Documents_to_be_destroyed", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0015", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM roles\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ROLES", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ref_document_types\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_document_types", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0039", "sql1": "\nSELECT destruction_authorised_by_employee_id,\n       n AS count___\nFROM\n  (SELECT destruction_authorised_by_employee_id,\n          other_details,\n          COUNT(*) AS n\n   FROM documents_to_be_destroyed\n   GROUP BY destruction_authorised_by_employee_id,\n            other_details)\nORDER BY destruction_authorised_by_employee_id\n", "sql2": "SELECT Destruction_Authorised_by_Employee_ID,\n       count(*)\nFROM Documents_to_be_destroyed\nGROUP BY Destruction_Authorised_by_Employee_ID", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0019", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM employees)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Employees", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0023", "sql1": "\nSELECT role_code,\n       n AS count___\nFROM\n  (SELECT role_code,\n          COUNT(*) AS n\n   FROM employees\n   GROUP BY role_code)\nORDER BY role_code\n", "sql2": "SELECT role_code,\n       count(*)\nFROM Employees\nGROUP BY role_code", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0035", "sql1": "\nSELECT DISTINCT location_code\nFROM\n  (SELECT LHS.date_in_locaton_to AS date_in_locaton_to,\n          LHS.location_code AS location_code,\n          LHS.maxn AS maxn,\n          RHS.date_in_locaton_to AS date_in_locaton_to_other,\n          RHS.location_code AS location_code_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT date_in_locaton_to,\n             location_code,\n             MAX(n) AS maxn\n      FROM\n        (SELECT date_in_locaton_to,\n                location_code,\n                COUNT(*) AS n\n         FROM document_locations\n         GROUP BY date_in_locaton_to,\n                  location_code)\n      GROUP BY date_in_locaton_to,\n               location_code) AS LHS\n   CROSS JOIN\n     (SELECT date_in_locaton_to,\n             location_code,\n             MAX(n) AS maxn\n      FROM\n        (SELECT date_in_locaton_to,\n                location_code,\n                COUNT(*) AS n\n         FROM document_locations\n         GROUP BY date_in_locaton_to,\n                  location_code)\n      GROUP BY date_in_locaton_to,\n               location_code) AS RHS)\nWHERE (maxn > maxn_other)\nORDER BY location_code\n", "sql2": "SELECT location_code\nFROM Document_locations\nGROUP BY location_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0034", "sql1": "\nSELECT location_code,\n       n AS count___\nFROM\n  (SELECT location_code,\n          COUNT(*) AS n\n   FROM document_locations\n   GROUP BY location_code)\nORDER BY location_code\n", "sql2": "SELECT location_code,\n       count(*)\nFROM Document_locations\nGROUP BY location_code", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0022", "sql1": "\nSELECT `employee_name`\nFROM `employees`\nWHERE (`role_code` = 'HR')\nORDER BY employee_name\n", "sql2": "SELECT employee_name\nFROM Employees\nWHERE role_code = 'HR'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0018", "sql1": "\nSELECT `role_description`\nFROM `roles`\nWHERE (`role_name` = 'Proof Reader')\nORDER BY role_description\n", "sql2": "SELECT role_description\nFROM ROLES\nWHERE role_name = 'Proof Reader'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0002", "sql1": "\nSELECT calendar_date,\n       day_number\nFROM ref_calendar\nORDER BY calendar_date\n", "sql2": "SELECT calendar_date,\n       day_Number\nFROM Ref_calendar", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0014", "sql1": "\nSELECT `location_code`\nFROM `ref_locations`\nWHERE (`location_name` = 'Canada')\nORDER BY location_code\n", "sql2": "SELECT location_code\nFROM Ref_locations\nWHERE location_name = 'Canada'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0043", "sql1": "\nSELECT DISTINCT destroyed_by_employee_id\nFROM documents_to_be_destroyed\nORDER BY destroyed_by_employee_id\n", "sql2": "SELECT DISTINCT Destroyed_by_Employee_ID\nFROM Documents_to_be_destroyed", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ref_calendar\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_calendar", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0017", "sql1": "\nSELECT `role_name`,\n       `role_description`\nFROM `roles`\nWHERE (`role_code` = 'MG')\nORDER BY role_name\n", "sql2": "SELECT role_name,\n       role_description\nFROM ROLES\nWHERE role_code = 'MG'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0040", "sql1": "\nSELECT destroyed_by_employee_id,\n       n AS count___\nFROM\n  (SELECT destroyed_by_employee_id,\n          COUNT(*) AS n\n   FROM documents_to_be_destroyed\n   GROUP BY destroyed_by_employee_id)\nORDER BY destroyed_by_employee_id\n", "sql2": "SELECT Destroyed_by_Employee_ID,\n       count(*)\nFROM Documents_to_be_destroyed\nGROUP BY Destroyed_by_Employee_ID", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0021", "sql1": "\nSELECT `employee_id`\nFROM `employees`\nWHERE (`employee_name` = 'Ebba')\nORDER BY employee_id\n", "sql2": "SELECT employee_ID\nFROM Employees\nWHERE employee_name = 'Ebba'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0020", "sql1": "\nSELECT `employee_name`,\n       `role_code`,\n       `date_of_birth`\nFROM `employees`\nWHERE (`employee_name` = 'Armani')\nORDER BY employee_name\n", "sql2": "SELECT employee_name,\n       role_code,\n       date_of_birth\nFROM Employees\nWHERE employee_Name = 'Armani'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0036", "sql1": "\nSELECT location_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT location_code,\n                COUNT(*) AS n\n         FROM document_locations\n         GROUP BY location_code)\n      ORDER BY n DESC)\n   LIMIT 3)\n", "sql2": "SELECT location_code\nFROM Document_locations\nGROUP BY location_code\nHAVING count(*) >= 3", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0016", "sql1": "\nSELECT role_code,\n       role_name,\n       role_description\nFROM roles\nORDER BY role_code\n", "sql2": "SELECT role_code,\n       role_name,\n       role_description\nFROM ROLES", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0031", "sql1": "\nSELECT `location_name`\nFROM\n  (SELECT `LHS`.`location_code` AS `location_code`,\n          `LHS`.`location_name` AS `location_name`,\n          `LHS`.`location_description` AS `location_description`,\n          `LHS`.`document_id` AS `document_id`,\n          `LHS`.`date_stored` AS `date_stored`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`document_name` AS `document_name`,\n          `LHS`.`document_description` AS `document_description`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`date_in_location_from` AS `date_in_location_from`,\n          `RHS`.`date_in_locaton_to` AS `date_in_locaton_to`\n   FROM\n     (SELECT `LHS`.`location_code` AS `location_code`,\n             `LHS`.`location_name` AS `location_name`,\n             `LHS`.`location_description` AS `location_description`,\n             `RHS`.`document_id` AS `document_id`,\n             `RHS`.`date_stored` AS `date_stored`,\n             `RHS`.`document_type_code` AS `document_type_code`,\n             `RHS`.`document_name` AS `document_name`,\n             `RHS`.`document_description` AS `document_description`,\n             `RHS`.`other_details` AS `other_details`\n      FROM `ref_locations` AS `LHS`\n      CROSS JOIN `all_documents` AS `RHS`) AS `LHS`\n   INNER JOIN `document_locations` AS `RHS` ON (`LHS`.`location_code` = `RHS`.`location_code`\n                                                   AND `LHS`.`document_id` = `RHS`.`document_id`))\nWHERE (`document_name` = 'Robin CV')\nORDER BY location_name\n", "sql2": "SELECT T3.location_name\nFROM All_documents AS T1\nJOIN Document_locations AS T2 ON T1.document_id = T2.document_id\nJOIN Ref_locations AS T3 ON T2.location_code = T3.location_code\nWHERE T1.document_name = 'Robin CV'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0027", "sql1": "\nSELECT `role_name`,\n       `role_description`\nFROM\n  (SELECT `LHS`.`employee_id` AS `employee_id`,\n          `LHS`.`role_code` AS `role_code`,\n          `LHS`.`employee_name` AS `employee_name`,\n          `LHS`.`gender_mfu` AS `gender_mfu`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`role_name` AS `role_name`,\n          `RHS`.`role_description` AS `role_description`\n   FROM `employees` AS `LHS`\n   LEFT JOIN `roles` AS `RHS` ON (`LHS`.`role_code` = `RHS`.`role_code`))\nWHERE (`employee_name` = 'Ebba')\nORDER BY role_name\n", "sql2": "SELECT T2.role_name,\n       T2.role_description\nFROM Employees AS T1\nJOIN ROLES AS T2 ON T1.role_code = T2.role_code\nWHERE T1.employee_name = 'Ebba'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0007", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `all_documents`\nWHERE (`document_type_code` = 'CV'\n       OR `document_type_code` != 'BK')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM All_documents\nWHERE document_type_code = 'CV'\n  OR document_type_code = 'BK'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ref_locations\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0010", "sql1": "\nSELECT `document_type_name`\nFROM\n  (SELECT `LHS`.`document_id` AS `document_id`,\n          `LHS`.`date_stored` AS `date_stored`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`document_name` AS `document_name`,\n          `LHS`.`document_description` AS `document_description`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`document_type_name` AS `document_type_name`,\n          `RHS`.`document_type_description` AS `document_type_description`\n   FROM\n     (SELECT *\n      FROM `all_documents`\n      WHERE (`document_name` = 'How to read a book')) AS LHS\n   INNER JOIN ref_document_types AS RHS ON (LHS.document_type_code = RHS.document_type_code))\nORDER BY document_type_name\n", "sql2": "SELECT T2.document_type_name\nFROM All_documents AS T1\nJOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code\nWHERE T1.document_name = 'How to read a book'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0006", "sql1": "\nSELECT `document_type_code`\nFROM `ref_document_types`\nWHERE (`document_type_name` = 'Paper')\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Ref_document_types\nWHERE document_type_name = 'Paper'", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Doc_Tracking_DB/0030", "sql1": "\nSELECT DISTINCT location_code\nFROM document_locations\nORDER BY location_code\n", "sql2": "SELECT DISTINCT location_code\nFROM Document_locations", "schema": "spider/cre_Doc_Tracking_DB/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Doc_Tracking_DB/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0009", "sql1": "\nSELECT festival_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM festival_detail\n      ORDER BY YEAR DESC)\n   LIMIT 3)\n", "sql2": "SELECT Festival_Name\nFROM festival_detail\nORDER BY YEAR DESC\nLIMIT 3", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0013", "sql1": "\nSELECT `festival_name`\nFROM\n  (SELECT `LHS`.`festival_id` AS `festival_id`,\n          `LHS`.`festival_name` AS `festival_name`,\n          `LHS`.`chair_name` AS `chair_name`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`year` AS `year`,\n          `LHS`.`num_of_audience` AS `num_of_audience`,\n          `LHS`.`artwork_id` AS `artwork_id`,\n          `LHS`.`type` AS `type`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`result` AS `result`\n   FROM\n     (SELECT `LHS`.`festival_id` AS `festival_id`,\n             `LHS`.`festival_name` AS `festival_name`,\n             `LHS`.`chair_name` AS `chair_name`,\n             `LHS`.`location` AS `location`,\n             `LHS`.`year` AS `year`,\n             `LHS`.`num_of_audience` AS `num_of_audience`,\n             `LHS`.`artwork_id` AS `artwork_id`,\n             `LHS`.`type` AS `type`,\n             `LHS`.`name` AS `name`,\n             `RHS`.`result` AS `result`\n      FROM\n        (SELECT `LHS`.`festival_id` AS `festival_id`,\n                `LHS`.`festival_name` AS `festival_name`,\n                `LHS`.`chair_name` AS `chair_name`,\n                `LHS`.`location` AS `location`,\n                `LHS`.`year` AS `year`,\n                `LHS`.`num_of_audience` AS `num_of_audience`,\n                `RHS`.`artwork_id` AS `artwork_id`,\n                `RHS`.`type` AS `type`,\n                `RHS`.`name` AS `name`\n         FROM `festival_detail` AS `LHS`\n         CROSS JOIN `artwork` AS `RHS`) AS `LHS`\n      INNER JOIN `nomination` AS `RHS` ON (`LHS`.`festival_id` = `RHS`.`festival_id`\n                                              AND `LHS`.`artwork_id` = `RHS`.`artwork_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `artwork`\n      WHERE (`type` = 'Program Talent Show')) AS RHS ON (LHS.artwork_id = RHS.artwork_id\n                                                         AND LHS.type = RHS.type\n                                                         AND LHS.name = RHS.name))\nORDER BY festival_name\n", "sql2": "SELECT T3.Festival_Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nWHERE T2.Type = 'Program Talent Show'", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0005", "sql1": "\nSELECT chair_name\nFROM festival_detail\nORDER BY chair_name\n", "sql2": "SELECT Chair_Name\nFROM festival_detail\nORDER BY YEAR ASC", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0004", "sql1": "\nSELECT festival_name,\n       LOCATION\nFROM festival_detail\nORDER BY festival_name\n", "sql2": "SELECT Festival_Name,\n       LOCATION\nFROM festival_detail", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.festival_id AS festival_id,\n          LHS.festival_name AS festival_name,\n          LHS.chair_name AS chair_name,\n          LHS.location AS LOCATION,\n          LHS.year AS YEAR,\n          LHS.num_of_audience AS num_of_audience,\n          LHS.artwork_id AS artwork_id,\n          LHS.type AS TYPE,\n          LHS.name AS name,\n          RHS.result AS RESULT\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             RHS.artwork_id AS artwork_id,\n             RHS.type AS TYPE,\n             RHS.name AS name\n      FROM festival_detail AS LHS\n      CROSS JOIN artwork AS RHS) AS LHS\n   INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                       AND LHS.artwork_id = RHS.artwork_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nORDER BY T3.Year", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0008", "sql1": "\nSELECT DISTINCT AVG(num_of_audience) OVER () AS avg_num_of_audience_\nFROM festival_detail\nORDER BY avg_num_of_audience_\n", "sql2": "SELECT avg(Num_of_Audience)\nFROM festival_detail", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0015", "sql1": "\nSELECT festival_id,\n       festival_name,\n       n AS count___\nFROM\n  (SELECT festival_id,\n          festival_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             LHS.artwork_id AS artwork_id,\n             LHS.type AS TYPE,\n             LHS.name AS name,\n             RHS.result AS RESULT\n      FROM\n        (SELECT LHS.festival_id AS festival_id,\n                LHS.festival_name AS festival_name,\n                LHS.chair_name AS chair_name,\n                LHS.location AS LOCATION,\n                LHS.year AS YEAR,\n                LHS.num_of_audience AS num_of_audience,\n                RHS.artwork_id AS artwork_id,\n                RHS.type AS TYPE,\n                RHS.name AS name\n         FROM festival_detail AS LHS\n         CROSS JOIN artwork AS RHS) AS LHS\n      INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                          AND LHS.artwork_id = RHS.artwork_id))\n   GROUP BY festival_id,\n            festival_name)\nORDER BY festival_id\n", "sql2": "SELECT T1.Festival_ID,\n       T3.Festival_Name,\n       COUNT(*)\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nGROUP BY T1.Festival_ID", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0003", "sql1": "\nSELECT `name`\nFROM `artwork`\nWHERE (`type` != 'Program Talent Show')\nORDER BY name\n", "sql2": "SELECT Name\nFROM artwork\nWHERE TYPE != 'Program Talent Show'", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0019", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artwork AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM nomination AS RHS\n        WHERE (LHS.artwork_id = RHS.artwork_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM Artwork\nWHERE Artwork_ID NOT IN\n    (SELECT Artwork_ID\n     FROM nomination)", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0018", "sql1": "\nSELECT YEAR\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT festival_id,\n                festival_name,\n                chair_name,\n                LOCATION,\n                YEAR,\n                num_of_audience,\n                COUNT(*) OVER () AS n\n         FROM festival_detail)\n      ORDER BY festival_name)\n   LIMIT 1)\n", "sql2": "SELECT YEAR\nFROM festival_detail\nGROUP BY YEAR\nHAVING COUNT(*) > 1", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0002", "sql1": "\nSELECT name\nFROM artwork\nORDER BY name\n", "sql2": "SELECT Name\nFROM artwork\nORDER BY Name ASC", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0014", "sql1": "\nSELECT DISTINCT festival_id,\n                festival_name\nFROM\n  (SELECT festival_id,\n          festival_name,\n          chair_name,\n          LOCATION,\n          YEAR,\n          num_of_audience,\n          artwork_id,\n          TYPE,\n          name,\n          RESULT,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             LHS.artwork_id AS artwork_id,\n             LHS.type AS TYPE,\n             LHS.name AS name,\n             RHS.result AS RESULT\n      FROM\n        (SELECT LHS.festival_id AS festival_id,\n                LHS.festival_name AS festival_name,\n                LHS.chair_name AS chair_name,\n                LHS.location AS LOCATION,\n                LHS.year AS YEAR,\n                LHS.num_of_audience AS num_of_audience,\n                RHS.artwork_id AS artwork_id,\n                RHS.type AS TYPE,\n                RHS.name AS name\n         FROM festival_detail AS LHS\n         CROSS JOIN artwork AS RHS) AS LHS\n      INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                          AND LHS.artwork_id = RHS.artwork_id)))\nWHERE (n >= 2)\nORDER BY festival_id\n", "sql2": "SELECT T1.Festival_ID,\n       T3.Festival_Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nGROUP BY T1.Festival_ID\nHAVING COUNT(*) >= 2", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM artwork\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artwork", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0017", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT LHS.type AS TYPE,\n          LHS.n AS n\n   FROM\n     (SELECT TYPE,\n             COUNT(*) AS n\n      FROM artwork\n      GROUP BY TYPE) AS LHS\n   INNER JOIN\n     (SELECT TYPE,\n             MAX(n) OVER () AS n\n      FROM\n        (SELECT TYPE,\n                COUNT(*) AS n\n         FROM artwork\n         GROUP BY TYPE)) AS RHS ON (LHS.type = RHS.type\n                                    AND LHS.n = RHS.n))\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM artwork\nGROUP BY TYPE\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0021", "sql1": "\nSELECT DISTINCT SUM(num_of_audience) OVER () AS sum_num_of_audience_\nFROM festival_detail\nORDER BY sum_num_of_audience_\n", "sql2": "SELECT sum(Num_of_Audience)\nFROM festival_detail", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0020", "sql1": "\nSELECT num_of_audience\nFROM festival_detail\nWHERE (YEAR >= 2008\n       OR YEAR > 2010)\nORDER BY num_of_audience\n", "sql2": "SELECT Num_of_Audience\nFROM festival_detail\nWHERE YEAR = 2008\n  OR YEAR = 2010", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0016", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM artwork\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       COUNT(*)\nFROM artwork\nGROUP BY TYPE", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0007", "sql1": "\nSELECT festival_name\nFROM festival_detail\nWHERE (YEAR = 2007)\nORDER BY festival_name\n", "sql2": "SELECT Festival_Name\nFROM festival_detail\nWHERE YEAR = 2007", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0011", "sql1": "\nSELECT DISTINCT TYPE\nFROM\n  (SELECT LHS.artwork_id AS artwork_id,\n          LHS.type AS TYPE,\n          LHS.name AS name,\n          LHS.festival_id AS festival_id,\n          LHS.result AS RESULT,\n          RHS.festival_name AS festival_name,\n          RHS.chair_name AS chair_name,\n          RHS.location AS LOCATION,\n          RHS.year AS YEAR,\n          RHS.num_of_audience AS num_of_audience\n   FROM\n     (SELECT LHS.artwork_id AS artwork_id,\n             LHS.type AS TYPE,\n             LHS.name AS name,\n             RHS.festival_id AS festival_id,\n             RHS.result AS RESULT\n      FROM artwork AS LHS\n      INNER JOIN nomination AS RHS ON (LHS.artwork_id = RHS.artwork_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM festival_detail\n      WHERE (YEAR = 2007)) AS RHS ON (LHS.festival_id = RHS.festival_id))\nORDER BY TYPE\n", "sql2": "SELECT DISTINCT T2.Type\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID\nWHERE T3.Year = 2007", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0010", "sql1": "\nSELECT name,\n       festival_name\nFROM\n  (SELECT LHS.festival_id AS festival_id,\n          LHS.festival_name AS festival_name,\n          LHS.chair_name AS chair_name,\n          LHS.location AS LOCATION,\n          LHS.year AS YEAR,\n          LHS.num_of_audience AS num_of_audience,\n          LHS.artwork_id AS artwork_id,\n          LHS.type AS TYPE,\n          LHS.name AS name,\n          RHS.result AS RESULT\n   FROM\n     (SELECT LHS.festival_id AS festival_id,\n             LHS.festival_name AS festival_name,\n             LHS.chair_name AS chair_name,\n             LHS.location AS LOCATION,\n             LHS.year AS YEAR,\n             LHS.num_of_audience AS num_of_audience,\n             RHS.artwork_id AS artwork_id,\n             RHS.type AS TYPE,\n             RHS.name AS name\n      FROM festival_detail AS LHS\n      CROSS JOIN artwork AS RHS) AS LHS\n   INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id\n                                       AND LHS.artwork_id = RHS.artwork_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T3.Festival_Name\nFROM nomination AS T1\nJOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID\nJOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entertainment_awards/0006", "sql1": "\nSELECT DISTINCT LOCATION\nFROM\n  (SELECT festival_id,\n          LOCATION,\n          MAX(num_of_audience) AS num_of_audience\n   FROM festival_detail\n   GROUP BY festival_id,\n            LOCATION)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM festival_detail\nORDER BY Num_of_Audience DESC\nLIMIT 1", "schema": "spider/entertainment_awards/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0009", "sql1": "\nSELECT product_type_code,\n       meanproduct_price AS avg_product_price_\nFROM\n  (SELECT product_type_code,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_type_code)\nORDER BY product_type_code\n", "sql2": "SELECT product_type_code,\n       avg(product_price)\nFROM products\nGROUP BY product_type_code", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0044", "sql1": "\nSELECT `product_name`\nFROM\n  (SELECT `product_id`,\n          `product_type_code`,\n          `product_name`,\n          `product_price`,\n          MAX(`product_price`) OVER () AS `maxproduct_price`\n   FROM `products`)\nWHERE (`product_type_code` = 'Hardware'\n       AND maxproduct_price = product_price)\nORDER BY product_name\n", "sql2": "SELECT product_name\nFROM products\nWHERE product_type_code = 'Hardware'\nORDER BY product_price DESC\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0013", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`order_id` AS `order_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`order_status_code` AS `order_status_code`,\n          `LHS`.`order_date` AS `order_date`,\n          `RHS`.`payment_method_code` AS `payment_method_code`,\n          `RHS`.`customer_code` AS `customer_code`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`customer_address` AS `customer_address`,\n          `RHS`.`customer_phone` AS `customer_phone`,\n          `RHS`.`customer_email` AS `customer_email`\n   FROM\n     (SELECT *\n      FROM `customer_orders`\n      WHERE (`order_status_code` = 'Pending')) AS LHS\n   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_name\n", "sql2": "SELECT DISTINCT T1.customer_name\nFROM customers AS T1\nJOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.order_status_code = 'Pending'\nORDER BY T2.customer_id", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0005", "sql1": "\nSELECT `staff_id`,\n       `staff_gender`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`department_id` AS `department_id`,\n          `LHS`.`date_assigned_from` AS `date_assigned_from`,\n          `LHS`.`job_title_code` AS `job_title_code`,\n          `LHS`.`date_assigned_to` AS `date_assigned_to`,\n          `RHS`.`staff_gender` AS `staff_gender`,\n          `RHS`.`staff_name` AS `staff_name`\n   FROM `staff_department_assignments` AS `LHS`\n   LEFT JOIN `staff` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`))\nWHERE (`job_title_code` = 'Department Manager')\nORDER BY staff_id\n", "sql2": "SELECT T1.staff_id,\n       T1.staff_gender\nFROM staff AS T1\nJOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.job_title_code = 'Department Manager'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0028", "sql1": "\nSELECT supplier_name,\n       supplier_phone\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.address_details AS address_details,\n          LHS.supplier_id AS supplier_id,\n          LHS.supplier_name AS supplier_name,\n          LHS.supplier_phone AS supplier_phone,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM\n     (SELECT LHS.address_id AS address_id,\n             LHS.address_details AS address_details,\n             RHS.supplier_id AS supplier_id,\n             RHS.supplier_name AS supplier_name,\n             RHS.supplier_phone AS supplier_phone\n      FROM addresses AS LHS\n      CROSS JOIN suppliers AS RHS) AS LHS\n   INNER JOIN supplier_addresses AS RHS ON (LHS.address_id = RHS.address_id\n                                               AND LHS.supplier_id = RHS.supplier_id))\nORDER BY supplier_name\n", "sql2": "SELECT T1.supplier_name,\n       T1.supplier_phone\nFROM Suppliers AS T1\nJOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id\nJOIN addresses AS T3 ON T2.address_id = T3.address_id\nORDER BY T3.address_details", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0004", "sql1": "\nSELECT address_details\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.address_details AS address_details,\n          RHS.customer_id AS customer_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM addresses AS LHS\n   INNER JOIN customer_addresses AS RHS ON (LHS.address_id = RHS.address_id))\nWHERE (customer_id = 10)\nORDER BY address_details\n", "sql2": "SELECT T1.address_details\nFROM addresses AS T1\nJOIN customer_addresses AS T2 ON T1.address_id = T2.address_id\nWHERE T2.customer_id = 10", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0024", "sql1": "\nSELECT `staff_id`\nFROM\n  (SELECT `staff_id`,\n          `department_id`,\n          `date_assigned_from`,\n          `job_title_code`,\n          `date_assigned_to`,\n          MAX(`date_assigned_to`) OVER () AS `maxdate_assigned_to`\n   FROM `staff_department_assignments`)\nWHERE (`job_title_code` != 'Clerical Staff'\n       OR maxdate_assigned_to > date_assigned_to)\nORDER BY staff_id\n", "sql2": "SELECT staff_id\nFROM Staff_Department_Assignments\nWHERE date_assigned_to <\n    (SELECT max(date_assigned_to)\n     FROM Staff_Department_Assignments\n     WHERE job_title_code = 'Clerical Staff')", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0003", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT product_type_code) OVER () AS count_distinct_product_type_code_\nFROM products\nORDER BY count_distinct_product_type_code_\n", "sql2": "SELECT count(DISTINCT product_type_code)\nFROM products", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0023", "sql1": "\nSELECT DISTINCT `customer_id`\nFROM\n  (SELECT `LHS`.`order_date` AS `order_date`,\n          `LHS`.`order_status_code` AS `order_status_code`,\n          `LHS`.`minorder_date` AS `minorder_date`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`order_status_code` AS `order_status_code_other`,\n          `RHS`.`order_date` AS `order_date_other`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `order_date`,\n                `order_status_code`,\n                MIN(`order_date`) AS `minorder_date`\n         FROM `customer_orders`\n         GROUP BY `order_date`,\n                  `order_status_code`)\n      WHERE (`order_status_code` = 'Cancelled'\n             OR minorder_date > order_date)) AS LHS\n   CROSS JOIN customer_orders AS RHS)\nWHERE (order_date = minorder_date\n       AND order_date <= order_date_other)\nORDER BY customer_id\n", "sql2": "SELECT DISTINCT customer_id\nFROM Customer_Orders\nWHERE order_date >\n    (SELECT min(order_date)\n     FROM Customer_Orders\n     WHERE order_status_code = 'Cancelled')", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0035", "sql1": "\nSELECT DISTINCT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method_code` AS `payment_method_code`,\n          `LHS`.`customer_code` AS `customer_code`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_address` AS `customer_address`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`customer_email` AS `customer_email`,\n          `LHS`.`order_id` AS `order_id`,\n          `LHS`.`order_status_code` AS `order_status_code`,\n          `LHS`.`order_date` AS `order_date`,\n          `LHS`.`order_item_id` AS `order_item_id`,\n          `LHS`.`product_id` AS `product_id`,\n          `RHS`.`product_type_code` AS `product_type_code`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_price` AS `product_price`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`payment_method_code` AS `payment_method_code`,\n             `LHS`.`customer_code` AS `customer_code`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`customer_address` AS `customer_address`,\n             `LHS`.`customer_phone` AS `customer_phone`,\n             `LHS`.`customer_email` AS `customer_email`,\n             `LHS`.`order_id` AS `order_id`,\n             `LHS`.`order_status_code` AS `order_status_code`,\n             `LHS`.`order_date` AS `order_date`,\n             `RHS`.`order_item_id` AS `order_item_id`,\n             `RHS`.`product_id` AS `product_id`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`payment_method_code` AS `payment_method_code`,\n                `LHS`.`customer_code` AS `customer_code`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `LHS`.`customer_address` AS `customer_address`,\n                `LHS`.`customer_phone` AS `customer_phone`,\n                `LHS`.`customer_email` AS `customer_email`,\n                `RHS`.`order_id` AS `order_id`,\n                `RHS`.`order_status_code` AS `order_status_code`,\n                `RHS`.`order_date` AS `order_date`\n         FROM `customers` AS `LHS`\n         INNER JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n      INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products`\n      WHERE (`product_name` = 'keyboard')) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY customer_name\n", "sql2": "SELECT DISTINCT T1.customer_name\nFROM customers AS T1\nJOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id\nJOIN order_items AS T3 ON T2.order_id = T3.order_id\nJOIN products AS T4 ON T3.product_id = T4.product_id\nWHERE T4.product_name = 'keyboard'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0022", "sql1": "\nSELECT product_name,\n       product_id\nFROM products\nWHERE (product_price > 600.0\n       AND product_price < 700.0)\nORDER BY product_name\n", "sql2": "SELECT product_name,\n       product_id\nFROM products\nWHERE product_price BETWEEN 600 AND 700", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0018", "sql1": "\nSELECT DISTINCT minn AS department_id\nFROM\n  (SELECT date_assigned_from,\n          MIN(n) AS minn\n   FROM\n     (SELECT date_assigned_from,\n             job_title_code,\n             COUNT(*) AS n\n      FROM staff_department_assignments\n      GROUP BY date_assigned_from,\n               job_title_code)\n   GROUP BY date_assigned_from)\nORDER BY department_id\n", "sql2": "SELECT department_id\nFROM staff_department_assignments\nGROUP BY department_id\nORDER BY count(*)\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0038", "sql1": "\nSELECT `order_id`,\n       `customer_id`\nFROM `customer_orders`\nWHERE (`order_status_code` = 'Cancelled')\nORDER BY order_id\n", "sql2": "SELECT order_id,\n       customer_id\nFROM customer_orders\nWHERE order_status_code = 'Cancelled'\nORDER BY order_date", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0002", "sql1": "\nSELECT product_id,\n       product_type_code\nFROM\n  (SELECT LHS.product_price AS product_price,\n          RHS.product_id AS product_id,\n          RHS.product_type_code AS product_type_code,\n          RHS.product_name AS product_name,\n          RHS.product_price AS product_price_other\n   FROM\n     (SELECT MIN(product_price) AS product_price\n      FROM products) AS LHS\n   CROSS JOIN products AS RHS)\nWHERE (product_price >= product_price_other)\nORDER BY product_id\n", "sql2": "SELECT product_id,\n       product_type_code\nFROM products\nORDER BY product_price\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0043", "sql1": "\nSELECT `meanproduct_price` AS `avg_product_price_`\nFROM\n  (SELECT `product_type_code`,\n          AVG(`product_price`) AS `meanproduct_price`\n   FROM `products`\n   GROUP BY `product_type_code`)\nWHERE (`product_type_code` = 'Clothes')\nORDER BY avg_product_price_\n", "sql2": "SELECT avg(product_price)\nFROM products\nWHERE product_type_code = 'Clothes'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0001", "sql1": "\nSELECT product_id\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM product_suppliers\n      ORDER BY total_amount_purchased DESC)\n   LIMIT 3)\n", "sql2": "SELECT product_id\nFROM product_suppliers\nORDER BY total_amount_purchased DESC\nLIMIT 3", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0017", "sql1": "\nSELECT n AS dept_store_chain_id\nFROM\n  (SELECT dept_store_chain_id,\n          n,\n          store_name,\n          store_address,\n          store_phone,\n          store_email,\n          dept_store_chain_id AS dept_store_id\n   FROM\n     (SELECT LHS.dept_store_chain_id AS dept_store_chain_id,\n             LHS.n AS n,\n             RHS.store_name AS store_name,\n             RHS.store_address AS store_address,\n             RHS.store_phone AS store_phone,\n             RHS.store_email AS store_email\n      FROM\n        (SELECT dept_store_chain_id,\n                COUNT(*) AS n\n         FROM department_stores\n         GROUP BY dept_store_chain_id) AS LHS\n      INNER JOIN department_stores AS RHS ON (LHS.dept_store_chain_id = RHS.dept_store_id\n                                                 AND LHS.n = RHS.dept_store_chain_id)))\nORDER BY dept_store_chain_id\n", "sql2": "SELECT dept_store_chain_id\nFROM department_stores\nGROUP BY dept_store_chain_id\nORDER BY count(*) DESC\nLIMIT 2", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0041", "sql1": "\nSELECT `staff_name`,\n       `staff_gender`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_gender` AS `staff_gender`,\n          `LHS`.`staff_name` AS `staff_name`,\n          `LHS`.`department_id` AS `department_id`,\n          `LHS`.`date_assigned_from` AS `date_assigned_from`,\n          `LHS`.`job_title_code` AS `job_title_code`,\n          `LHS`.`date_assigned_to` AS `date_assigned_to`\n   FROM\n     (SELECT `LHS`.`staff_id` AS `staff_id`,\n             `LHS`.`staff_gender` AS `staff_gender`,\n             `LHS`.`staff_name` AS `staff_name`,\n             `RHS`.`department_id` AS `department_id`,\n             `RHS`.`date_assigned_from` AS `date_assigned_from`,\n             `RHS`.`job_title_code` AS `job_title_code`,\n             `RHS`.`date_assigned_to` AS `date_assigned_to`\n      FROM `staff` AS `LHS`\n      INNER JOIN `staff_department_assignments` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `staff_department_assignments`\n      WHERE (`job_title_code` = 'Sales Person'\n             AND `job_title_code` != 'Clerical Staff')) AS RHS ON (LHS.staff_id = RHS.staff_id\n                                                                   AND LHS.department_id = RHS.department_id\n                                                                   AND LHS.date_assigned_from = RHS.date_assigned_from\n                                                                   AND LHS.job_title_code = RHS.job_title_code\n                                                                   AND LHS.date_assigned_to = RHS.date_assigned_to))\nORDER BY staff_name\n", "sql2": "SELECT T1.staff_name,\n       T1.staff_gender\nFROM staff AS T1\nJOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.job_title_code = 'Sales Person'\nEXCEPT\nSELECT T1.staff_name,\n       T1.staff_gender\nFROM staff AS T1\nJOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.job_title_code = 'Clerical Staff'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0016", "sql1": "\nSELECT `dept_store_chain_id` AS `dept_store_id`,\n       `store_name`\nFROM\n  (SELECT `LHS`.`dept_store_id` AS `dept_store_id`,\n          `LHS`.`dept_store_chain_id` AS `dept_store_chain_id`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`store_address` AS `store_address`,\n          `LHS`.`store_phone` AS `store_phone`,\n          `LHS`.`store_email` AS `store_email`,\n          `RHS`.`dept_store_id` AS `dept_store_id_other`,\n          `RHS`.`department_name` AS `department_name`\n   FROM `department_stores` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `departments`\n      WHERE (`department_name` = 'marketing'\n             AND `department_name` != 'managing')) AS RHS ON (LHS.dept_store_id = RHS.department_id))\nORDER BY dept_store_id\n", "sql2": "SELECT T2.dept_store_id,\n       T2.store_name\nFROM departments AS T1\nJOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id\nWHERE T1.department_name = 'marketing' INTERSECT\n  SELECT T2.dept_store_id,\n         T2.store_name\n  FROM departments AS T1\n  JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = 'managing'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0031", "sql1": "\nSELECT product_id,\n       product_name\nFROM products\nWHERE (product_price <= 600.0\n       OR product_price >= 900.0)\nORDER BY product_id\n", "sql2": "SELECT product_id,\n       product_name\nFROM products\nWHERE product_price < 600\n  OR product_price > 900", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0027", "sql1": "\nSELECT staff_name\nFROM\n  (SELECT staff_id,\n          staff_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.staff_id AS staff_id,\n             LHS.staff_gender AS staff_gender,\n             LHS.staff_name AS staff_name,\n             RHS.department_id AS department_id,\n             RHS.date_assigned_from AS date_assigned_from,\n             RHS.job_title_code AS job_title_code,\n             RHS.date_assigned_to AS date_assigned_to\n      FROM staff AS LHS\n      INNER JOIN staff_department_assignments AS RHS ON (LHS.staff_id = RHS.staff_id))\n   GROUP BY staff_id,\n            staff_name)\nWHERE (n > 1)\nORDER BY staff_name\n", "sql2": "SELECT T1.staff_name\nFROM staff AS T1\nJOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id\nGROUP BY T2.staff_id\nHAVING COUNT (*) > 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0007", "sql1": "\nSELECT order_item_id_other AS product_id\nFROM\n  (SELECT order_item_id AS order_id,\n          order_item_id,\n          n,\n          order_item_id_other\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.order_item_id AS order_item_id,\n             LHS.n AS n,\n             RHS.order_item_id AS order_item_id_other\n      FROM\n        (SELECT order_id,\n                order_item_id,\n                MAX(n) AS n\n         FROM\n           (SELECT order_id,\n                   order_item_id,\n                   COUNT(*) AS n\n            FROM order_items\n            GROUP BY order_id,\n                     order_item_id)\n         GROUP BY order_id,\n                  order_item_id) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_item_id = RHS.order_id\n                                           AND LHS.order_id = RHS.product_id)))\nORDER BY product_id\n", "sql2": "SELECT product_id\nFROM order_items\nGROUP BY product_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0010", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `dept_store_chain_name`,\n          `store_name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`dept_store_chain_id` AS `dept_store_chain_id`,\n             `LHS`.`dept_store_chain_name` AS `dept_store_chain_name`,\n             `RHS`.`dept_store_id` AS `dept_store_id`,\n             `RHS`.`store_name` AS `store_name`,\n             `RHS`.`store_address` AS `store_address`,\n             `RHS`.`store_phone` AS `store_phone`,\n             `RHS`.`store_email` AS `store_email`\n      FROM `department_store_chain` AS `LHS`\n      INNER JOIN `department_stores` AS `RHS` ON (`LHS`.`dept_store_chain_id` = `RHS`.`dept_store_chain_id`))\n   GROUP BY `dept_store_chain_name`,\n            `store_name`)\nWHERE (`dept_store_chain_name` = 'South')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM department_stores AS T1\nJOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id\nWHERE T2.dept_store_chain_name = 'South'", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/department_store/0006", "sql1": "\nSELECT payment_method_code,\n       n AS count___\nFROM\n  (SELECT payment_method_code,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       count(*)\nFROM customers\nGROUP BY payment_method_code", "schema": "spider/department_store/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/department_store/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0004", "sql1": "\nSELECT customer_name,\n       customer_phone\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM customer_address_history AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM customer_address_history)", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0008", "sql1": "\nSELECT customer_name,\n       customer_phone,\n       payment_method_code\nFROM customers\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone,\n       payment_method_code\nFROM customers\nORDER BY customer_number DESC", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0015", "sql1": "\nSELECT product_type_code,\n       product_name\nFROM products\nWHERE (product_price > 1000.0\n       OR product_price <= 500.0)\nORDER BY product_type_code\n", "sql2": "SELECT product_type_code,\n       product_name\nFROM products\nWHERE product_price > 1000\n  OR product_price < 500", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0003", "sql1": "\nSELECT state_province_county,\n       n AS count___\nFROM\n  (SELECT state_province_county,\n          COUNT(*) AS n\n   FROM addresses\n   GROUP BY state_province_county)\nORDER BY state_province_county\n", "sql2": "SELECT state_province_county,\n       count(*)\nFROM addresses\nGROUP BY state_province_county", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0002", "sql1": "\nSELECT city\nFROM addresses\nORDER BY city\n", "sql2": "SELECT DISTINCT city\nFROM addresses", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `addresses`\nWHERE (`country` = 'USA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM addresses\nWHERE country = 'USA'", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_products_contacts/0006", "sql1": "\nSELECT DISTINCT product_type_code\nFROM\n  (SELECT product_id,\n          product_type_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_type_code AS product_type_code,\n             LHS.product_name AS product_name,\n             LHS.product_price AS product_price,\n             RHS.product_type_code AS product_type_code_other,\n             RHS.product_name AS product_name_other\n      FROM products AS LHS\n      INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id\n                                        AND LHS.product_price = RHS.product_price))\n   GROUP BY product_id,\n            product_type_code)\nORDER BY product_type_code\n", "sql2": "SELECT product_type_code\nFROM products\nGROUP BY product_type_code\nHAVING count(*) >= 2", "schema": "spider/customers_and_products_contacts/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_products_contacts/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0033", "sql1": "\nSELECT major\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT lname,\n                major,\n                MAX(n) AS n\n         FROM\n           (SELECT lname,\n                   major,\n                   COUNT(*) AS n\n            FROM student\n            GROUP BY lname,\n                     major)\n         GROUP BY lname,\n                  major)\n      ORDER BY lname)\n   LIMIT 1)\n", "sql2": "SELECT Major\nFROM STUDENT\nGROUP BY major\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0013", "sql1": "\nSELECT DISTINCT registration_date,\n                election_cycle\nFROM voting_record\nORDER BY registration_date\n", "sql2": "SELECT DISTINCT Registration_Date,\n                Election_Cycle\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0005", "sql1": "\nSELECT lname\nFROM student\nWHERE (major = 50)\nORDER BY lname\n", "sql2": "SELECT LName\nFROM STUDENT\nWHERE Major = 50", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0029", "sql1": "\nSELECT advisor,\n       n AS count___\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nORDER BY advisor\n", "sql2": "SELECT Advisor,\n       count(*)\nFROM STUDENT\nGROUP BY Advisor", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0004", "sql1": "\nSELECT age AS max_age_\nFROM\n  (SELECT MAX(age) AS age\n   FROM student)\nORDER BY max_age_\n", "sql2": "SELECT max(Age)\nFROM STUDENT", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0012", "sql1": "\nSELECT DISTINCT `president_vote`\nFROM `voting_record`\nWHERE (`registration_date` = '08/30/2015')\nORDER BY president_vote\n", "sql2": "SELECT DISTINCT PRESIDENT_Vote\nFROM VOTING_RECORD\nWHERE Registration_Date = '08/30/2015'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0032", "sql1": "\nSELECT election_cycle,\n       n AS count___\nFROM\n  (SELECT election_cycle,\n          COUNT(*) AS n\n   FROM voting_record\n   GROUP BY election_cycle)\nORDER BY election_cycle\n", "sql2": "SELECT Election_Cycle,\n       count(*)\nFROM VOTING_RECORD\nGROUP BY Election_Cycle", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0008", "sql1": "\nSELECT `meanage` AS `avg_age_`\nFROM\n  (SELECT AVG(`age`) AS `meanage`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`sex` = 'F')))\nORDER BY avg_age_\n", "sql2": "SELECT avg(Age)\nFROM STUDENT\nWHERE Sex = 'F'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0015", "sql1": "\nSELECT DISTINCT lname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.stuid AS stuid_other,\n          RHS.registration_date AS registration_date,\n          RHS.election_cycle AS election_cycle,\n          RHS.president_vote AS president_vote,\n          RHS.vice_president_vote AS vice_president_vote,\n          RHS.secretary_vote AS secretary_vote,\n          RHS.treasurer_vote AS treasurer_vote,\n          RHS.class_senator_vote AS class_senator_vote\n   FROM student AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.class_president_vote))\nORDER BY lname\n", "sql2": "SELECT DISTINCT T1.LName\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_President_VOTE", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0003", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT president_vote) OVER () AS count_distinct_president_vote_\nFROM voting_record\nORDER BY count_distinct_president_vote_\n", "sql2": "SELECT count(DISTINCT President_Vote)\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0019", "sql1": "\nSELECT DISTINCT major\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.stuid AS stuid_other,\n          RHS.registration_date AS registration_date,\n          RHS.election_cycle AS election_cycle,\n          RHS.president_vote AS president_vote,\n          RHS.vice_president_vote AS vice_president_vote,\n          RHS.secretary_vote AS secretary_vote,\n          RHS.class_president_vote AS class_president_vote,\n          RHS.class_senator_vote AS class_senator_vote\n   FROM student AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.treasurer_vote))\nORDER BY major\n", "sql2": "SELECT DISTINCT T1.Major\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM voting_record\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0014", "sql1": "\nSELECT DISTINCT president_vote,\n                vice_president_vote\nFROM voting_record\nORDER BY president_vote\n", "sql2": "SELECT DISTINCT President_Vote,\n                VICE_President_Vote\nFROM VOTING_RECORD", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM STUDENT", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0021", "sql1": "\nSELECT DISTINCT fname,\n                lname\nFROM\n  (SELECT stuid,\n          lname,\n          fname,\n          age,\n          sex,\n          major,\n          advisor,\n          city_code,\n          stuid_other,\n          registration_date,\n          election_cycle,\n          president_vote,\n          secretary_vote,\n          treasurer_vote,\n          class_president_vote,\n          class_senator_vote,\n          stuid AS vice_president_vote\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             RHS.stuid AS stuid_other,\n             RHS.registration_date AS registration_date,\n             RHS.election_cycle AS election_cycle,\n             RHS.president_vote AS president_vote,\n             RHS.secretary_vote AS secretary_vote,\n             RHS.treasurer_vote AS treasurer_vote,\n             RHS.class_president_vote AS class_president_vote,\n             RHS.class_senator_vote AS class_senator_vote\n      FROM student AS LHS\n      INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.vice_president_vote)))\nWHERE (age = 18)\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname,\n                T1.LName\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE\nWHERE T1.age = 18", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0036", "sql1": "\nSELECT advisor\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nWHERE (n > 2)\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM STUDENT\nGROUP BY Advisor\nHAVING count(*) > 2", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0016", "sql1": "\nSELECT DISTINCT fname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          RHS.stuid AS stuid_other,\n          RHS.registration_date AS registration_date,\n          RHS.election_cycle AS election_cycle,\n          RHS.president_vote AS president_vote,\n          RHS.vice_president_vote AS vice_president_vote,\n          RHS.secretary_vote AS secretary_vote,\n          RHS.treasurer_vote AS treasurer_vote,\n          RHS.class_president_vote AS class_president_vote\n   FROM student AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.class_senator_vote))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_Senator_VOTE", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0031", "sql1": "\nSELECT major\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nWHERE (n <= 3)\nORDER BY major\n", "sql2": "SELECT Major\nFROM STUDENT\nGROUP BY Major\nHAVING COUNT(*) < 3", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0007", "sql1": "\nSELECT `major`\nFROM `student`\nWHERE (`sex` = 'M')\nORDER BY major\n", "sql2": "SELECT Major\nFROM STUDENT\nWHERE Sex = 'M'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0011", "sql1": "\nSELECT DISTINCT `secretary_vote`\nFROM `voting_record`\nWHERE (`election_cycle` = 'Fall')\nORDER BY secretary_vote\n", "sql2": "SELECT DISTINCT Secretary_Vote\nFROM VOTING_RECORD\nWHERE ELECTION_CYCLE = 'Fall'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0010", "sql1": "\nSELECT `advisor`\nFROM `student`\nWHERE (`city_code` = 'BAL')\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM STUDENT\nWHERE city_code = 'BAL'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0006", "sql1": "\nSELECT fname\nFROM student\nWHERE (age > 22)\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM STUDENT\nWHERE Age > 22", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0026", "sql1": "\nSELECT DISTINCT `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`stuid` AS `stuid_other`,\n          `RHS`.`registration_date` AS `registration_date`,\n          `RHS`.`election_cycle` AS `election_cycle`,\n          `RHS`.`president_vote` AS `president_vote`,\n          `RHS`.`secretary_vote` AS `secretary_vote`,\n          `RHS`.`treasurer_vote` AS `treasurer_vote`,\n          `RHS`.`class_president_vote` AS `class_president_vote`,\n          `RHS`.`class_senator_vote` AS `class_senator_vote`\n   FROM\n     (SELECT *\n      FROM `student`\n      WHERE (`city_code` != 'PIT')) AS LHS\n   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.vice_president_vote))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.Fname\nFROM STUDENT AS T1\nJOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote\nEXCEPT\nSELECT DISTINCT Fname\nFROM STUDENT\nWHERE city_code = 'PIT'", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/voter_2/0030", "sql1": "\nSELECT advisor\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nWHERE (n > 2)\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM STUDENT\nGROUP BY Advisor\nHAVING COUNT(*) > 2", "schema": "spider/voter_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0009", "sql1": "\nSELECT `nickname`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY nickname\n", "sql2": "SELECT nickname\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0025", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Customers;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0044", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `customer_id`,\n             `lesson_status_code`,\n             COUNT(*) AS `n`\n      FROM `lessons`\n      GROUP BY `customer_id`,\n               `lesson_status_code`) AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`first_name` != 'Ray')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Lessons AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.first_name = 'Ray'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0005", "sql1": "\nSELECT `date_of_birth`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY date_of_birth\n", "sql2": "SELECT date_of_birth\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0028", "sql1": "\nSELECT `customer_address_id` AS `count___`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `customer_id`,\n             `customer_address_id`,\n             `customer_status_code`,\n             `date_became_customer`,\n             `date_of_birth`,\n             `first_name`,\n             `last_name`,\n             `amount_outstanding`,\n             `email_address`,\n             `phone_number`,\n             `cell_mobile_phone_number`,\n             `lesson_id`,\n             `lesson_status_code`,\n             `staff_id`,\n             `vehicle_id`,\n             `lesson_date`,\n             `lesson_time`,\n             `price`,\n             COUNT(DISTINCT `last_name`) OVER () AS `n_distinct`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`customer_address_id` AS `customer_address_id`,\n                `LHS`.`customer_status_code` AS `customer_status_code`,\n                `LHS`.`date_became_customer` AS `date_became_customer`,\n                `LHS`.`date_of_birth` AS `date_of_birth`,\n                `LHS`.`first_name` AS `first_name`,\n                `LHS`.`last_name` AS `last_name`,\n                `LHS`.`amount_outstanding` AS `amount_outstanding`,\n                `LHS`.`email_address` AS `email_address`,\n                `LHS`.`phone_number` AS `phone_number`,\n                `LHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`,\n                `RHS`.`lesson_id` AS `lesson_id`,\n                `RHS`.`lesson_status_code` AS `lesson_status_code`,\n                `RHS`.`staff_id` AS `staff_id`,\n                `RHS`.`vehicle_id` AS `vehicle_id`,\n                `RHS`.`lesson_date` AS `lesson_date`,\n                `RHS`.`lesson_time` AS `lesson_time`,\n                `RHS`.`price` AS `price`\n         FROM `customers` AS `LHS`\n         LEFT JOIN `lessons` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)))\n   WHERE (`last_name` = 'Goodwin'\n          AND `lesson_status_code` = 'Completed'))\nWHERE (`first_name` != 'Rylan'\n       OR `lesson_status_code` = 'Completed')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Lessons AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.first_name = 'Rylan'\n  AND T2.last_name = 'Goodwin'\n  AND T1.lesson_status_code = 'Completed';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0004", "sql1": "\nSELECT first_name,\n       middle_name,\n       last_name\nFROM staff\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       middle_name,\n       last_name\nFROM Staff;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0012", "sql1": "\nSELECT `country`,\n       `state_province_county`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`first_name` = 'Janessa'\n       OR `last_name` = 'Sawayn')\nORDER BY country\n", "sql2": "SELECT T1.country,\n       T1.state_province_county\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0045", "sql1": "\nSELECT last_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_address_id AS customer_address_id,\n          LHS.customer_status_code AS customer_status_code,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.date_of_birth AS date_of_birth,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.amount_outstanding AS amount_outstanding,\n          LHS.email_address AS email_address,\n          LHS.phone_number AS phone_number,\n          LHS.cell_mobile_phone_number AS cell_mobile_phone_number,\n          RHS.staff_id AS staff_id,\n          RHS.staff_address_id AS staff_address_id,\n          RHS.nickname AS nickname,\n          RHS.first_name AS first_name_other,\n          RHS.middle_name AS middle_name,\n          RHS.date_of_birth AS date_of_birth_other,\n          RHS.date_joined_staff AS date_joined_staff,\n          RHS.date_left_staff AS date_left_staff\n   FROM customers AS LHS\n   INNER JOIN staff AS RHS ON (LHS.last_name = RHS.last_name))\nORDER BY last_name\n", "sql2": "SELECT last_name\nFROM Customers INTERSECT\nSELECT last_name\nFROM Staff", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0032", "sql1": "\nSELECT DISTINCT `country`\nFROM\n  (SELECT `LHS`.`address_id` AS `address_id`,\n          `LHS`.`line_1_number_building` AS `line_1_number_building`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`zip_postcode` AS `zip_postcode`,\n          `LHS`.`state_province_county` AS `state_province_county`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`customer_address_id` AS `customer_address_id`,\n          `RHS`.`customer_status_code` AS `customer_status_code`,\n          `RHS`.`date_became_customer` AS `date_became_customer`,\n          `RHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`amount_outstanding` AS `amount_outstanding`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`phone_number` AS `phone_number`,\n          `RHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`\n   FROM `addresses` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `customers`\n      WHERE (`first_name` = 'Carole'\n             OR `last_name` != 'Bernhard')) AS RHS)\nORDER BY country\n", "sql2": "SELECT T2.country\nFROM Customers AS T1\nJOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id\nWHERE T1.first_name = 'Carole'\n  AND T1.last_name = 'Bernhard'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0024", "sql1": "\nSELECT `date_became_customer`\nFROM `customers`\nWHERE (`first_name` = 'Carole'\n       AND `last_name` = 'Bernhard')\nORDER BY date_became_customer\n", "sql2": "SELECT date_became_customer\nFROM Customers\nWHERE first_name = 'Carole'\n  AND last_name = 'Bernhard';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0008", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `date_left_staff`,\n          `nickname`,\n          COUNT(DISTINCT `first_name`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `staff`\n      WHERE (`first_name` != 'Ludie'))\n   GROUP BY date_left_staff,\n            nickname)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Staff\nWHERE first_name = 'Ludie';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0042", "sql1": "\nSELECT `lesson_time` AS `sum_lesson_time_`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_address_id` AS `staff_address_id`,\n          `LHS`.`nickname` AS `nickname`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`date_joined_staff` AS `date_joined_staff`,\n          `LHS`.`date_left_staff` AS `date_left_staff`,\n          `RHS`.`lesson_id` AS `lesson_id`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`lesson_status_code` AS `lesson_status_code`,\n          `RHS`.`vehicle_id` AS `vehicle_id`,\n          `RHS`.`lesson_date` AS `lesson_date`,\n          `RHS`.`lesson_time` AS `lesson_time`,\n          `RHS`.`price` AS `price`\n   FROM `staff` AS `LHS`\n   INNER JOIN `lessons` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`))\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY sum_lesson_time_\n", "sql2": "SELECT sum(lesson_time)\nFROM Lessons AS T1\nJOIN Staff AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0015", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          `state_province_county`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `addresses`\n      WHERE (`state_province_county` = 'Georgia'))\n   GROUP BY country,\n            state_province_county)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Addresses\nWHERE state_province_county = 'Georgia';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0003", "sql1": "\nSELECT vehicle_details\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM vehicles\n      ORDER BY vehicle_details DESC)\n   LIMIT 1)\n", "sql2": "SELECT vehicle_details\nFROM Vehicles\nWHERE vehicle_id = 1;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0039", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `lesson_status_code`,\n          COUNT(*) AS `n`\n   FROM `lessons`\n   GROUP BY `lesson_status_code`)\nWHERE (`lesson_status_code` = 'Cancelled')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Lessons\nWHERE lesson_status_code = 'Cancelled';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0019", "sql1": "\nSELECT first_name,\n       last_name\nFROM customers\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Customers;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0023", "sql1": "\nSELECT `date_of_birth`\nFROM `customers`\nWHERE (`customer_status_code` = 'Good Customer')\nORDER BY date_of_birth\n", "sql2": "SELECT date_of_birth\nFROM Customers\nWHERE customer_status_code = 'Good Customer'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0035", "sql1": "\nSELECT `sumamount_payment` AS `sum_t1_amount_payment_`\nFROM\n  (SELECT `first_name`,\n          `last_name`,\n          SUM(`amount_payment`) AS `sumamount_payment`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_address_id` AS `customer_address_id`,\n             `LHS`.`customer_status_code` AS `customer_status_code`,\n             `LHS`.`date_became_customer` AS `date_became_customer`,\n             `LHS`.`date_of_birth` AS `date_of_birth`,\n             `LHS`.`first_name` AS `first_name`,\n             `LHS`.`last_name` AS `last_name`,\n             `LHS`.`amount_outstanding` AS `amount_outstanding`,\n             `LHS`.`email_address` AS `email_address`,\n             `LHS`.`phone_number` AS `phone_number`,\n             `LHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`,\n             `RHS`.`datetime_payment` AS `datetime_payment`,\n             `RHS`.`payment_method_code` AS `payment_method_code`,\n             `RHS`.`amount_payment` AS `amount_payment`\n      FROM `customers` AS `LHS`\n      INNER JOIN `customer_payments` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\n   GROUP BY `first_name`,\n            `last_name`)\nWHERE (`first_name` = 'Carole'\n       AND `last_name` = 'Bernhard')\nORDER BY sum_t1_amount_payment_\n", "sql2": "SELECT sum(T1.amount_payment)\nFROM Customer_Payments AS T1\nJOIN Customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.first_name = 'Carole'\n  AND T2.last_name = 'Bernhard'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0022", "sql1": "\nSELECT `customer_status_code`,\n       `cell_mobile_phone_number`,\n       `email_address`\nFROM `customers`\nWHERE (`first_name` = 'Marina'\n       OR `last_name` = 'Kohler')\nORDER BY customer_status_code\n", "sql2": "SELECT customer_status_code,\n       cell_mobile_phone_number,\n       email_address\nFROM Customers\nWHERE first_name = 'Marina'\n  OR last_name = 'Kohler'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0038", "sql1": "\nSELECT payment_method_code,\n       n AS count___\nFROM\n  (SELECT payment_method_code,\n          COUNT(*) AS n\n   FROM customer_payments\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       count(*)\nFROM Customer_Payments\nGROUP BY payment_method_code;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM vehicles\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Vehicles;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0014", "sql1": "\nSELECT `zip_postcode`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`first_name` = 'Janessa'\n       OR `last_name` = 'Sawayn')\nORDER BY zip_postcode\n", "sql2": "SELECT T1.zip_postcode\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0043", "sql1": "\nSELECT `price` AS `avg_price_`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_address_id` AS `staff_address_id`,\n          `LHS`.`nickname` AS `nickname`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `LHS`.`date_joined_staff` AS `date_joined_staff`,\n          `LHS`.`date_left_staff` AS `date_left_staff`,\n          `RHS`.`lesson_id` AS `lesson_id`,\n          `RHS`.`customer_id` AS `customer_id`,\n          `RHS`.`lesson_status_code` AS `lesson_status_code`,\n          `RHS`.`vehicle_id` AS `vehicle_id`,\n          `RHS`.`lesson_date` AS `lesson_date`,\n          `RHS`.`lesson_time` AS `lesson_time`,\n          `RHS`.`price` AS `price`\n   FROM `staff` AS `LHS`\n   INNER JOIN `lessons` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`))\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY avg_price_\n", "sql2": "SELECT avg(price)\nFROM Lessons AS T1\nJOIN Staff AS T2 ON T1.staff_id = T2.staff_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0001", "sql1": "\nSELECT vehicle_id\nFROM vehicles\nORDER BY vehicle_id\n", "sql2": "SELECT vehicle_id\nFROM Vehicles;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0021", "sql1": "\nSELECT phone_number,\n       email_address\nFROM customers\nWHERE (amount_outstanding >= 2000.0)\nORDER BY phone_number\n", "sql2": "SELECT phone_number,\n       email_address\nFROM Customers\nWHERE amount_outstanding > 2000;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0020", "sql1": "\nSELECT `email_address`,\n       `date_of_birth`\nFROM `customers`\nWHERE (`first_name` = 'Carole')\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       date_of_birth\nFROM Customers\nWHERE first_name = 'Carole'", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0016", "sql1": "\nSELECT `first_name`,\n       `last_name`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`city` = 'Damianfort')\nORDER BY first_name\n", "sql2": "SELECT T2.first_name,\n       T2.last_name\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T1.city = 'Damianfort';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0007", "sql1": "\nSELECT `date_left_staff`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY date_left_staff\n", "sql2": "SELECT date_left_staff\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0011", "sql1": "\nSELECT `city`\nFROM\n  (SELECT `address_id`,\n          `line_1_number_building`,\n          `city`,\n          `zip_postcode`,\n          `state_province_county`,\n          `country`,\n          `staff_id`,\n          `nickname`,\n          `first_name`,\n          `middle_name`,\n          `last_name`,\n          `date_of_birth`,\n          `date_joined_staff`,\n          `date_left_staff`,\n          `address_id` AS `staff_address_id`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`line_1_number_building` AS `line_1_number_building`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `RHS`.`staff_id` AS `staff_id`,\n             `RHS`.`nickname` AS `nickname`,\n             `RHS`.`first_name` AS `first_name`,\n             `RHS`.`middle_name` AS `middle_name`,\n             `RHS`.`last_name` AS `last_name`,\n             `RHS`.`date_of_birth` AS `date_of_birth`,\n             `RHS`.`date_joined_staff` AS `date_joined_staff`,\n             `RHS`.`date_left_staff` AS `date_left_staff`\n      FROM `addresses` AS `LHS`\n      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))\nWHERE (`first_name` = 'Janessa'\n       OR `last_name` = 'Sawayn')\nORDER BY city\n", "sql2": "SELECT T1.city\nFROM Addresses AS T1\nJOIN Staff AS T2 ON T1.address_id = T2.staff_address_id\nWHERE T2.first_name = 'Janessa'\n  AND T2.last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0046", "sql1": "\nSELECT first_name\nFROM\n  (SELECT *\n   FROM staff AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM lessons AS RHS\n        WHERE (LHS.staff_id = RHS.staff_id) ))\nORDER BY first_name\n", "sql2": "SELECT first_name\nFROM Staff\nEXCEPT\nSELECT T2.first_name\nFROM Lessons AS T1\nJOIN Staff AS T2 ON T1.staff_id = T2.staff_id", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0047", "sql1": "\nSELECT vehicle_id,\n       vehicle_details\nFROM\n  (SELECT vehicle_details,\n          vehicle_id,\n          MAX(n) AS maxn\n   FROM\n     (SELECT lesson_id,\n             customer_id,\n             lesson_status_code,\n             staff_id,\n             vehicle_id,\n             lesson_date,\n             lesson_time,\n             price,\n             vehicle_details,\n             lesson_id AS n\n      FROM\n        (SELECT LHS.lesson_id AS lesson_id,\n                LHS.customer_id AS customer_id,\n                LHS.lesson_status_code AS lesson_status_code,\n                LHS.staff_id AS staff_id,\n                LHS.vehicle_id AS vehicle_id,\n                LHS.lesson_date AS lesson_date,\n                LHS.lesson_time AS lesson_time,\n                LHS.price AS price,\n                RHS.vehicle_details AS vehicle_details\n         FROM lessons AS LHS\n         INNER JOIN\n           (SELECT vehicle_id,\n                   vehicle_details,\n                   COUNT(*) OVER () AS n\n            FROM vehicles) AS RHS ON (LHS.vehicle_id = RHS.vehicle_id\n                                         AND LHS.lesson_id = RHS.n)))\n   GROUP BY vehicle_details,\n            vehicle_id)\nORDER BY vehicle_id\n", "sql2": "SELECT T1.vehicle_id,\n       T1.vehicle_details\nFROM Vehicles AS T1\nJOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id\nGROUP BY T1.vehicle_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM staff\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Staff;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0006", "sql1": "\nSELECT `date_joined_staff`\nFROM `staff`\nWHERE (`first_name` = 'Janessa'\n       AND `last_name` = 'Sawayn')\nORDER BY date_joined_staff\n", "sql2": "SELECT date_joined_staff\nFROM Staff\nWHERE first_name = 'Janessa'\n  AND last_name = 'Sawayn';", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0026", "sql1": "\nSELECT customer_status_code,\n       n AS count___\nFROM\n  (SELECT customer_status_code,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY customer_status_code)\nORDER BY customer_status_code\n", "sql2": "SELECT customer_status_code,\n       count(*)\nFROM Customers\nGROUP BY customer_status_code;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/driving_school/0030", "sql1": "\nSELECT first_name,\n       last_name\nFROM customers\nWHERE (amount_outstanding >= 1000.0\n       AND amount_outstanding <= 3000.0)\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Customers\nWHERE amount_outstanding BETWEEN 1000 AND 3000;", "schema": "spider/driving_school/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/driving_school/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0004", "sql1": "\nSELECT DISTINCT SUM(enrollment) OVER () AS sum_enrollment_,\n                                     meanenrollment AS avg_enrollment_\nFROM\n  (SELECT school_id,\n          school_name,\n          LOCATION,\n          mascot,\n          enrollment,\n          ihsaa_class,\n          ihsaa_football_class,\n          county,\n          AVG(enrollment) OVER () AS meanenrollment\n   FROM school)\nORDER BY sum_enrollment_\n", "sql2": "SELECT sum(enrollment),\n       avg(enrollment)\nFROM school", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0015", "sql1": "\nSELECT amount,\n       donator_name\nFROM\n  (SELECT LHS.endowment_id AS endowment_id,\n          LHS.school_id AS school_id,\n          LHS.donator_name AS donator_name,\n          LHS.amount AS amount,\n          RHS.endowment_id AS endowment_id_other,\n          RHS.donator_name AS donator_name_other,\n          RHS.amount AS amount_other\n   FROM endowment AS LHS\n   INNER JOIN\n     (SELECT endowment_id,\n             school_id,\n             donator_name,\n             amount,\n             MAX(amount) OVER () AS maxamount\n      FROM endowment) AS RHS ON (LHS.school_id = RHS.school_id\n                                    AND LHS.amount = RHS.maxamount))\nORDER BY amount\nFrom cffi callback <function _processevents at 0x7f3f2146a790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\nTraceback (most recent call last):\n  File \"/home/boleli/Cubes/squares/dsl/interpreter.py\", line 96, in try_execute\n    robjects.r(script)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/robjects/__init__.py\", line 416, in __call__\n    res = self.eval(p)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/robjects/functions.py\", line 197, in __call__\n    return (super(SignatureTranslatedFunction, self)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/robjects/functions.py\", line 125, in __call__\n    res = super(Function, self).__call__(*new_args, **new_kwargs)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/conversion.py\", line 44, in _\n    cdata = function(*args, **kwargs)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface.py\", line 621, in __call__\n    raise embedded.RRuntimeError(_rinterface._geterrmessage())\nrpy2.rinterface_lib.embedded.RRuntimeError: Error: `x` and `y` must share the same src, set `copy` = TRUE (may be slow).\nRun `rlang::last_error()` to see where the error occurred.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"./sequential.py\", line 116, in <module>\n    main()\n  File \"./sequential.py\", line 97, in main\n    results.print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 102, in print_results\n    evaluation = interp.eval(solution, specification.input_table_names)\n  File \"/home/boleli/Cubes/squares/program.py\", line 68, in eval\n    new_var = method(tuple(self.transform_arg(arg, inputs, vars) for arg in line.arguments), self.filled_program(prog, line), li)\n  File \"/home/boleli/Cubes/squares/dsl/interpreter.py\", line 72, in wrapper\n    self.try_execute(script)\n  File \"/home/boleli/Cubes/squares/dsl/interpreter.py\", line 100, in try_execute\n    raise InterpreterError(e)\nsquares.tyrell.interpreter.error.InterpreterError: (RRuntimeError('Error: `x` and `y` must share the same src, set `copy` = TRUE (may be slow).\\nRun `rlang::last_error()` to see where the error occurred.\\n'),)\n", "sql2": "SELECT amount,\n       donator_name\nFROM endowment\nORDER BY amount DESC\nLIMIT 1", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0003", "sql1": "\nSELECT school_name,\n       LOCATION,\n       mascot\nFROM school\nORDER BY school_name\n", "sql2": "SELECT school_name,\n       LOCATION,\n       mascot\nFROM school", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0018", "sql1": "\nSELECT donator_name\nFROM endowment\nORDER BY donator_name\n", "sql2": "SELECT DISTINCT donator_name\nFROM endowment", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0002", "sql1": "\nSELECT school_name\nFROM school\nORDER BY school_name\n", "sql2": "SELECT school_name\nFROM school\nORDER BY school_name", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0014", "sql1": "\nSELECT donator_name\nFROM endowment\nWHERE (amount >= 9.0)\nORDER BY donator_name\n", "sql2": "SELECT donator_name\nFROM endowment\nEXCEPT\nSELECT donator_name\nFROM endowment\nWHERE amount < 9", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM school\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM school", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0010", "sql1": "\nSELECT donator_name,\n       sumamount AS sum_amount_\nFROM\n  (SELECT donator_name,\n          school_id,\n          SUM(amount) AS sumamount\n   FROM endowment\n   GROUP BY donator_name,\n            school_id)\nORDER BY donator_name\n", "sql2": "SELECT donator_name,\n       sum(amount)\nFROM endowment\nGROUP BY donator_name\nORDER BY sum(amount) DESC", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_finance/0006", "sql1": "\nSELECT school_name\nFROM\n  (SELECT LHS.enrollment AS enrollment,\n          RHS.school_id AS school_id,\n          RHS.school_name AS school_name,\n          RHS.location AS LOCATION,\n          RHS.mascot AS mascot,\n          RHS.ihsaa_class AS ihsaa_class,\n          RHS.ihsaa_football_class AS ihsaa_football_class,\n          RHS.county AS county\n   FROM\n     (SELECT MIN(enrollment) AS enrollment\n      FROM school) AS LHS\n   LEFT JOIN school AS RHS ON (LHS.enrollment = RHS.enrollment))\nORDER BY school_name\n", "sql2": "SELECT school_name\nFROM school\nORDER BY enrollment\nLIMIT 1", "schema": "spider/school_finance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0009", "sql1": "\nSELECT DISTINCT status\nFROM\n  (SELECT country_id,\n          status,\n          MAX(n) AS maxn\n   FROM\n     (SELECT roller_coaster_id,\n             name,\n             park,\n             country_id,\n             LENGTH,\n             height,\n             speed,\n             opened,\n             status,\n             COUNT(*) OVER () AS n\n      FROM roller_coaster)\n   GROUP BY country_id,\n            status)\nORDER BY status\n", "sql2": "SELECT Status\nFROM roller_coaster\nGROUP BY Status\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0005", "sql1": "\nSELECT status\nFROM roller_coaster\nWHERE (height <= 3300.0\n       AND height >= 100.0)\nORDER BY status\n", "sql2": "SELECT Status\nFROM roller_coaster\nWHERE LENGTH > 3300\n  OR Height > 100", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0004", "sql1": "\nSELECT `name`\nFROM `country`\nWHERE (`languages` != 'German')\nORDER BY name\n", "sql2": "SELECT Name\nFROM country\nWHERE Languages != 'German'", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0012", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.country_id AS country_id,\n          LHS.name AS name,\n          LHS.population AS population,\n          LHS.area AS area,\n          LHS.languages AS languages,\n          RHS.roller_coaster_id AS roller_coaster_id,\n          RHS.name AS name_other,\n          RHS.park AS park,\n          RHS.length AS LENGTH,\n          RHS.height AS height,\n          RHS.speed AS speed,\n          RHS.opened AS opened,\n          RHS.status AS status\n   FROM country AS LHS\n   INNER JOIN roller_coaster AS RHS ON (LHS.country_id = RHS.country_id))\nORDER BY name___1\n", "sql2": "SELECT T2.Name,\n       T1.Name\nFROM country AS T1\nJOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0008", "sql1": "\nSELECT DISTINCT status,\n                COUNT(*) OVER () AS count___\nFROM roller_coaster\nORDER BY status\n", "sql2": "SELECT Status,\n       COUNT(*)\nFROM roller_coaster\nGROUP BY Status", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0003", "sql1": "\nSELECT LENGTH,\n       height\nFROM roller_coaster\nORDER BY LENGTH\n", "sql2": "SELECT LENGTH,\n       Height\nFROM roller_coaster", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0002", "sql1": "\nSELECT name\nFROM roller_coaster\nORDER BY name\n", "sql2": "SELECT Name\nFROM roller_coaster\nORDER BY LENGTH ASC", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM roller_coaster\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM roller_coaster", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0011", "sql1": "\nSELECT park\nFROM\n  (SELECT LHS.roller_coaster_id AS roller_coaster_id,\n          LHS.name AS name,\n          LHS.park AS park,\n          LHS.country_id AS country_id,\n          LHS.length AS LENGTH,\n          LHS.height AS height,\n          LHS.speed AS speed,\n          LHS.opened AS opened,\n          LHS.status AS status,\n          RHS.status AS status_other,\n          RHS.speed AS speed_other\n   FROM roller_coaster AS LHS\n   CROSS JOIN\n     (SELECT status,\n             MAX(speed) AS speed\n      FROM roller_coaster\n      GROUP BY status) AS RHS)\nWHERE (speed = speed_other)\nORDER BY park\n", "sql2": "SELECT Park\nFROM roller_coaster\nORDER BY Speed DESC\nLIMIT 1", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/roller_coaster/0010", "sql1": "\nSELECT DISTINCT status\nFROM\n  (SELECT height,\n          status,\n          COUNT(*) AS n\n   FROM roller_coaster\n   GROUP BY height,\n            status)\nWHERE (n <= 2)\nORDER BY status\n", "sql2": "SELECT Status\nFROM roller_coaster\nGROUP BY Status\nHAVING COUNT(*) > 2", "schema": "spider/roller_coaster/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0009", "sql1": "\nSELECT theme\nFROM journal\nORDER BY theme\n", "sql2": "SELECT DISTINCT Theme\nFROM journal", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0013", "sql1": "\nSELECT editor_id,\n       name,\n       n AS count___\nFROM\n  (SELECT LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.n AS n\n   FROM editor AS LHS\n   INNER JOIN\n     (SELECT editor_id,\n             COUNT(*) AS n\n      FROM journal_committee\n      GROUP BY editor_id) AS RHS ON (LHS.editor_id = RHS.editor_id))\nORDER BY editor_id\n", "sql2": "SELECT T1.editor_id,\n       T1.Name,\n       COUNT(*)\nFROM editor AS T1\nJOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID\nGROUP BY T1.editor_id", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0005", "sql1": "\nSELECT name\nFROM editor\nWHERE (age >= 24.0\n       AND age <= 25.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nWHERE Age = 24\n  OR Age = 25", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0004", "sql1": "\nSELECT name\nFROM editor\nWHERE (age > 25.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nWHERE Age > 25", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.journal_id AS journal_id,\n          LHS.work_type AS work_type,\n          RHS.date AS date,\n          RHS.theme AS theme,\n          RHS.sales AS sales\n   FROM\n     (SELECT LHS.editor_id AS editor_id,\n             LHS.name AS name,\n             LHS.age AS age,\n             RHS.journal_id AS journal_id,\n             RHS.work_type AS work_type\n      FROM editor AS LHS\n      INNER JOIN journal_committee AS RHS ON (LHS.editor_id = RHS.editor_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM journal\n      WHERE (sales >= 3000)) AS RHS ON (LHS.journal_id = RHS.journal_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM journal_committee AS T1\nJOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID\nJOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID\nWHERE T3.Sales > 3000", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM editor AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM journal_committee AS RHS\n        WHERE (LHS.editor_id = RHS.editor_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nWHERE editor_id NOT IN\n    (SELECT editor_id\n     FROM journal_committee)", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0003", "sql1": "\nSELECT name,\n       age\nFROM editor\nORDER BY name\n", "sql2": "SELECT Name,\n       Age\nFROM editor", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0002", "sql1": "\nSELECT name\nFROM editor\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nORDER BY Age ASC", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.n AS n\n   FROM editor AS LHS\n   INNER JOIN\n     (SELECT editor_id,\n             COUNT(*) AS n\n      FROM journal_committee\n      GROUP BY editor_id) AS RHS ON (LHS.editor_id = RHS.editor_id))\nWHERE (n >= 2)\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM editor AS T1\nJOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID\nGROUP BY T1.Name\nHAVING COUNT(*) >= 2", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM editor\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM editor", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0017", "sql1": "\nSELECT `meansales` AS `avg_t1_sales_`\nFROM\n  (SELECT `work_type`,\n          AVG(`sales`) AS `meansales`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`journal_id` AS `journal_id`,\n                `LHS`.`date` AS `date`,\n                `LHS`.`theme` AS `theme`,\n                `LHS`.`sales` AS `sales`,\n                `RHS`.`editor_id` AS `editor_id`,\n                `RHS`.`work_type` AS `work_type`\n         FROM `journal` AS `LHS`\n         INNER JOIN `journal_committee` AS `RHS` ON (`LHS`.`journal_id` = `RHS`.`journal_id`))\n      WHERE (`work_type` = 'Photo'))\n   GROUP BY work_type)\nORDER BY avg_t1_sales_\n", "sql2": "SELECT avg(T1.sales)\nFROM journal AS T1\nJOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID\nWHERE T2.work_type = 'Photo'", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0016", "sql1": "\nSELECT date, theme,\n             sales\nFROM\n  (SELECT *\n   FROM journal AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM journal_committee AS RHS\n        WHERE (LHS.journal_id = RHS.journal_id) ))\nORDER BY date\n", "sql2": "SELECT date , theme,\n              sales\nFROM journal\nEXCEPT\nSELECT T1.date,\n       T1.theme,\n       T1.sales\nFROM journal AS T1\nJOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0007", "sql1": "\nSELECT age,\n       n AS count___\nFROM\n  (SELECT age,\n          name,\n          COUNT(*) AS n\n   FROM editor\n   GROUP BY age,\n            name)\nORDER BY age\n", "sql2": "SELECT Age,\n       COUNT(*)\nFROM editor\nGROUP BY Age", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0011", "sql1": "\nSELECT name,\n       age,\n       theme\nFROM\n  (SELECT LHS.journal_id AS journal_id,\n          LHS.date AS date,\n          LHS.theme AS theme,\n          LHS.sales AS sales,\n          LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.work_type AS work_type\n   FROM\n     (SELECT LHS.journal_id AS journal_id,\n             LHS.date AS date,\n             LHS.theme AS theme,\n             LHS.sales AS sales,\n             RHS.editor_id AS editor_id,\n             RHS.name AS name,\n             RHS.age AS age\n      FROM journal AS LHS\n      CROSS JOIN editor AS RHS) AS LHS\n   INNER JOIN journal_committee AS RHS ON (LHS.journal_id = RHS.journal_id\n                                              AND LHS.editor_id = RHS.editor_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T2.age,\n       T3.Theme\nFROM journal_committee AS T1\nJOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID\nJOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID\nORDER BY T3.Theme ASC", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0010", "sql1": "\nSELECT name,\n       theme\nFROM\n  (SELECT LHS.journal_id AS journal_id,\n          LHS.date AS date,\n          LHS.theme AS theme,\n          LHS.sales AS sales,\n          LHS.editor_id AS editor_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          RHS.work_type AS work_type\n   FROM\n     (SELECT LHS.journal_id AS journal_id,\n             LHS.date AS date,\n             LHS.theme AS theme,\n             LHS.sales AS sales,\n             RHS.editor_id AS editor_id,\n             RHS.name AS name,\n             RHS.age AS age\n      FROM journal AS LHS\n      CROSS JOIN editor AS RHS) AS LHS\n   INNER JOIN journal_committee AS RHS ON (LHS.journal_id = RHS.journal_id\n                                              AND LHS.editor_id = RHS.editor_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T3.Theme\nFROM journal_committee AS T1\nJOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID\nJOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/journal_committee/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.age AS age,\n          RHS.editor_id AS editor_id,\n          RHS.name AS name\n   FROM\n     (SELECT MIN(age) AS age\n      FROM editor) AS LHS\n   LEFT JOIN editor AS RHS ON (LHS.age = RHS.age))\nORDER BY name\n", "sql2": "SELECT Name\nFROM editor\nORDER BY Age ASC\nLIMIT 1", "schema": "spider/journal_committee/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0009", "sql1": "\nSELECT country\nFROM\n  (SELECT LHS.elevation AS elevation,\n          RHS.apid AS apid,\n          RHS.name AS name,\n          RHS.city AS city,\n          RHS.country AS country,\n          RHS.x AS x,\n          RHS.y AS y,\n          RHS.iata AS iata,\n          RHS.icao AS icao\n   FROM\n     (SELECT MAX(elevation) AS elevation\n      FROM airports) AS LHS\n   LEFT JOIN airports AS RHS ON (LHS.elevation = RHS.elevation))\nORDER BY country\n", "sql2": "SELECT country\nFROM airports\nORDER BY elevation DESC\nLIMIT 1", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0005", "sql1": "\nSELECT `maxelevation` AS `max_elevation_`\nFROM\n  (SELECT `country`,\n          MAX(`elevation`) AS `maxelevation`\n   FROM `airports`\n   GROUP BY `country`)\nWHERE (`country` = 'Iceland')\nORDER BY max_elevation_\n", "sql2": "SELECT max(elevation)\nFROM airports\nWHERE country = 'Iceland'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0028", "sql1": "\nSELECT city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM airports\n   GROUP BY city)\nWHERE (n > 2)\nORDER BY city\n", "sql2": "SELECT city\nFROM airports\nGROUP BY city\nHAVING count(*) > 2\nORDER BY count(*)", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0004", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `airlines`\n      WHERE (`country` = 'Russia'))\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airlines\nWHERE country = 'Russia'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0032", "sql1": "\nSELECT city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM airports\n   GROUP BY city)\nWHERE (n = 2)\nORDER BY city\n", "sql2": "SELECT city\nFROM airports\nGROUP BY city\nHAVING count(*) = 2", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0003", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM airlines)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM airlines", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0023", "sql1": "\nSELECT n AS count___,\n       country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM airports\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       country\nFROM airports\nGROUP BY country\nORDER BY count(*) DESC", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0002", "sql1": "\nSELECT `name`,\n       `city`,\n       `country`,\n       `elevation`\nFROM `airports`\nWHERE (`city` = 'New York')\nORDER BY name\n", "sql2": "SELECT name,\n       city,\n       country,\n       elevation\nFROM airports\nWHERE city = 'New York'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0001", "sql1": "\nSELECT `name`\nFROM `airports`\nWHERE (`city` = 'Goroka')\nORDER BY name\n", "sql2": "SELECT name\nFROM airports\nWHERE city = 'Goroka'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0031", "sql1": "\nSELECT meanelevation AS avg_elevation_,\n       country\nFROM\n  (SELECT country,\n          AVG(elevation) AS meanelevation\n   FROM airports\n   GROUP BY country)\nORDER BY avg_elevation_\n", "sql2": "SELECT avg(elevation),\n       country\nFROM airports\nGROUP BY country", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0011", "sql1": "\nSELECT `n_distinct` AS `count_distinct_city_`\nFROM\n  (SELECT `country`,\n          COUNT(DISTINCT `city`) AS `n_distinct`\n   FROM `airports`\n   GROUP BY `country`)\nWHERE (`country` = 'Greenland')\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM airports\nWHERE country = 'Greenland'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/flight_4/0006", "sql1": "\nSELECT `name`\nFROM `airports`\nWHERE (`country` = 'Cuba'\n       OR `country` = 'Argentina')\nORDER BY name\n", "sql2": "SELECT name\nFROM airports\nWHERE country = 'Cuba'\n  OR country = 'Argentina'", "schema": "spider/flight_4/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/flight_4/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0009", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `advisor`,\n          `fname`,\n          COUNT(DISTINCT `fname`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `student`\n         WHERE (`fname` != 'Linda'\n                OR `lname` = 'Smith')) AS RHS ON (LHS.stuid = RHS.stuid\n                                                  AND LHS.lname = RHS.lname\n                                                  AND LHS.fname = RHS.fname\n                                                  AND LHS.age = RHS.age\n                                                  AND LHS.sex = RHS.sex\n                                                  AND LHS.major = RHS.major\n                                                  AND LHS.advisor = RHS.advisor\n                                                  AND LHS.city_code = RHS.city_code))\n   GROUP BY advisor,\n            fname)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.fname = 'Linda'\n  AND t3.lname = 'Smith'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0025", "sql1": "\nSELECT `n_distinct` AS `count_distinct_t2_position_`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `clubid`,\n             COUNT(DISTINCT `position`) AS `n_distinct`\n      FROM `member_of_club`\n      GROUP BY `clubid`) AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `club`\n           WHERE (`clubname` = 'Bootup Baltimore')) AS RHS\n        WHERE (LHS.clubid = RHS.clubid) ))\nORDER BY count_distinct_t2_position_\n", "sql2": "SELECT count(DISTINCT t2.position)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nWHERE t1.clubname = 'Bootup Baltimore'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0033", "sql1": "\nSELECT `meanage` AS `avg_t3_age_`\nFROM\n  (SELECT `clubid`,\n          `major`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `club`\n         WHERE (`clubname` = 'Bootup Baltimore')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                             AND LHS.clubname = RHS.clubname\n                                                             AND LHS.clubdesc = RHS.clubdesc\n                                                             AND LHS.clublocation = RHS.clublocation))\n   GROUP BY clubid,\n            major)\nORDER BY avg_t3_age_\n", "sql2": "SELECT avg(t3.age)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0013", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND major = 600)\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t3.major = '600'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0005", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `club`\n      WHERE (`clubname` = 'Bootup Baltimore')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                          AND LHS.clubname = RHS.clubname\n                                                          AND LHS.clubdesc = RHS.clubdesc\n                                                          AND LHS.clublocation = RHS.clublocation))\nORDER BY lname\n", "sql2": "SELECT t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0029", "sql1": "\nSELECT `clubname`\nFROM\n  (SELECT `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`position` AS `position`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`stuid` AS `stuid`,\n             `RHS`.`position` AS `position`\n      FROM `club` AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`city_code` = 'HOU')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY clubname\n", "sql2": "SELECT DISTINCT t1.clubname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.city_code = 'HOU'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0028", "sql1": "\nSELECT `clubname`\nFROM\n  (SELECT `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`position` AS `position`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`stuid` AS `stuid`,\n             `RHS`.`position` AS `position`\n      FROM `club` AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`city_code` = 'BAL')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY clubname\n", "sql2": "SELECT DISTINCT t1.clubname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.city_code = 'BAL'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0004", "sql1": "\nSELECT DISTINCT fname\nFROM student\nORDER BY fname\n", "sql2": "SELECT DISTINCT fname\nFROM student", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0032", "sql1": "\nSELECT clubname\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.age AS age,\n          LHS.sex AS sex,\n          LHS.major AS major,\n          LHS.advisor AS advisor,\n          LHS.city_code AS city_code,\n          LHS.clubid AS clubid,\n          LHS.clubname AS clubname,\n          LHS.clubdesc AS clubdesc,\n          LHS.clublocation AS clublocation,\n          RHS.position AS POSITION\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             RHS.clubid AS clubid,\n             RHS.clubname AS clubname,\n             RHS.clubdesc AS clubdesc,\n             RHS.clublocation AS clublocation\n      FROM student AS LHS\n      CROSS JOIN club AS RHS) AS LHS\n   INNER JOIN member_of_club AS RHS ON (LHS.stuid = RHS.stuid\n                                           AND LHS.clubid = RHS.clubid))\nWHERE (advisor = 1121)\nORDER BY clubname\n", "sql2": "SELECT DISTINCT t1.clubname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.advisor = 1121", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0024", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Hopkins Student Enterprises'\n       OR `position` = 'CTO')\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Hopkins Student Enterprises'\n  AND t2.position = 'CTO'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0008", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))\n      WHERE (`clubname` = 'Pen and Paper Gaming')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Pen and Paper Gaming'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0019", "sql1": "\nSELECT `clublocation`\nFROM `club`\nWHERE (`clubname` = 'Pen and Paper Gaming')\nORDER BY clublocation\n", "sql2": "SELECT clublocation\nFROM club\nWHERE clubname = 'Pen and Paper Gaming'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0023", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND `position` = 'President')\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t2.position = 'President'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0035", "sql1": "\nSELECT `meanage` AS `avg_t3_age_`\nFROM\n  (SELECT `clublocation`,\n          `position`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `club`\n         WHERE (`clubname` = 'Tennis Club')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                        AND LHS.clubname = RHS.clubname\n                                                        AND LHS.clubdesc = RHS.clubdesc\n                                                        AND LHS.clublocation = RHS.clublocation))\n   GROUP BY clublocation,\n            POSITION)\nORDER BY avg_t3_age_\n", "sql2": "SELECT avg(t3.age)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0034", "sql1": "\nSELECT `meanage` AS `avg_t3_age_`\nFROM\n  (SELECT `clublocation`,\n          `position`,\n          AVG(`age`) AS `meanage`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `club`\n         WHERE (`clubname` = 'Hopkins Student Enterprises')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                                        AND LHS.clubname = RHS.clubname\n                                                                        AND LHS.clubdesc = RHS.clubdesc\n                                                                        AND LHS.clublocation = RHS.clublocation))\n   GROUP BY clublocation,\n            POSITION)\nORDER BY avg_t3_age_\n", "sql2": "SELECT avg(t3.age)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Hopkins Student Enterprises'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0022", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `clubid`,\n          `clublocation`,\n          COUNT(*) AS `n`\n   FROM `club`\n   GROUP BY `clubid`,\n            `clublocation`)\nWHERE (`clublocation` != 'HHH')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club\nWHERE clublocation = 'HHH'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0018", "sql1": "\nSELECT `clublocation`\nFROM `club`\nWHERE (`clubname` = 'Tennis Club')\nORDER BY clublocation\n", "sql2": "SELECT clublocation\nFROM club\nWHERE clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0002", "sql1": "\nSELECT clubname\nFROM club\nORDER BY clubname\n", "sql2": "SELECT clubname\nFROM club", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM club\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0017", "sql1": "\nSELECT `clubdesc`\nFROM `club`\nWHERE (`clubname` = 'Pen and Paper Gaming')\nORDER BY clubdesc\n", "sql2": "SELECT clubdesc\nFROM club\nWHERE clubname = 'Pen and Paper Gaming'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0021", "sql1": "\nSELECT `clubname`\nFROM `club`\nWHERE (`clublocation` = 'AKW')\nORDER BY clubname\n", "sql2": "SELECT clubname\nFROM club\nWHERE clublocation = 'AKW'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0020", "sql1": "\nSELECT `clublocation`\nFROM `club`\nWHERE (`clubname` = 'Hopkins Student Enterprises')\nORDER BY clublocation\n", "sql2": "SELECT clublocation\nFROM club\nWHERE clubname = 'Hopkins Student Enterprises'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0016", "sql1": "\nSELECT `clubdesc`\nFROM `club`\nWHERE (`clubname` = 'Tennis Club')\nORDER BY clubdesc\n", "sql2": "SELECT clubdesc\nFROM club\nWHERE clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0027", "sql1": "\nSELECT `clubid` AS `count___`\nFROM\n  (SELECT `stuid`,\n          `lname`,\n          `fname`,\n          `age`,\n          `sex`,\n          `major`,\n          `advisor`,\n          `city_code`,\n          `clubid`,\n          `clubname`,\n          `clubdesc`,\n          `clublocation`,\n          `position`,\n          COUNT(DISTINCT `clubname`) OVER () AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND age = 18)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t3.age < 18", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0007", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`position` AS `position`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT `clubdesc`,\n             `clubid`,\n             COUNT(DISTINCT `clubname`) AS `n_distinct`\n      FROM `club`\n      GROUP BY `clubdesc`,\n               `clubid`) AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`\n                                      AND `LHS`.`clubdesc` = `RHS`.`clubdesc`))\nWHERE (`clubname` != 'Tennis Club')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Tennis Club'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0011", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `RHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`clubid` AS `clubid`,\n             `RHS`.`clubname` AS `clubname`,\n             `RHS`.`clubdesc` AS `clubdesc`,\n             `RHS`.`clublocation` AS `clublocation`\n      FROM `student` AS `LHS`\n      CROSS JOIN `club` AS `RHS`) AS `LHS`\n   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                               AND `LHS`.`clubid` = `RHS`.`clubid`))\nWHERE (`clubname` = 'Bootup Baltimore'\n       AND `sex` = 'F')\nORDER BY fname\n", "sql2": "SELECT t3.fname,\n       t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Bootup Baltimore'\n  AND t3.sex = 'F'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0010", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `fname`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `LHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`clubid` AS `clubid`,\n                `LHS`.`clubname` AS `clubname`,\n                `LHS`.`clubdesc` AS `clubdesc`,\n                `LHS`.`clublocation` AS `clublocation`,\n                `RHS`.`position` AS `position`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`clubid` AS `clubid`,\n                   `RHS`.`clubname` AS `clubname`,\n                   `RHS`.`clubdesc` AS `clubdesc`,\n                   `RHS`.`clublocation` AS `clublocation`\n            FROM `student` AS `LHS`\n            CROSS JOIN `club` AS `RHS`) AS `LHS`\n         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `student`\n         WHERE (`fname` = 'Tracy'\n                AND `lname` = 'Kim')) AS RHS ON (LHS.stuid = RHS.stuid\n                                                 AND LHS.lname = RHS.lname\n                                                 AND LHS.fname = RHS.fname\n                                                 AND LHS.age = RHS.age\n                                                 AND LHS.sex = RHS.sex\n                                                 AND LHS.major = RHS.major\n                                                 AND LHS.advisor = RHS.advisor\n                                                 AND LHS.city_code = RHS.city_code)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t3.fname = 'Tracy'\n  AND t3.lname = 'Kim'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/club_1/0006", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`clubid` AS `clubid`,\n          `LHS`.`clubname` AS `clubname`,\n          `LHS`.`clubdesc` AS `clubdesc`,\n          `LHS`.`clublocation` AS `clublocation`,\n          `LHS`.`position` AS `position`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`clubid` AS `clubid`,\n             `LHS`.`clubname` AS `clubname`,\n             `LHS`.`clubdesc` AS `clubdesc`,\n             `LHS`.`clublocation` AS `clublocation`,\n             `RHS`.`position` AS `position`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`clubid` AS `clubid`,\n                `RHS`.`clubname` AS `clubname`,\n                `RHS`.`clubdesc` AS `clubdesc`,\n                `RHS`.`clublocation` AS `clublocation`\n         FROM `student` AS `LHS`\n         CROSS JOIN `club` AS `RHS`) AS `LHS`\n      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `club`\n      WHERE (`clubname` = 'Hopkins Student Enterprises')) AS RHS ON (LHS.clubid = RHS.clubid\n                                                                     AND LHS.clubname = RHS.clubname\n                                                                     AND LHS.clubdesc = RHS.clubdesc\n                                                                     AND LHS.clublocation = RHS.clublocation))\nORDER BY lname\n", "sql2": "SELECT t3.lname\nFROM club AS t1\nJOIN member_of_club AS t2 ON t1.clubid = t2.clubid\nJOIN student AS t3 ON t2.stuid = t3.stuid\nWHERE t1.clubname = 'Hopkins Student Enterprises'", "schema": "spider/club_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0025", "sql1": "\nSELECT name,\n       meantrust AS avg_trust_\nFROM\n  (SELECT name,\n          AVG(trust) AS meantrust\n   FROM\n     (SELECT u_id,\n             name,\n             source_u_id,\n             trust,\n             u_id AS target_u_id\n      FROM\n        (SELECT LHS.u_id AS u_id,\n                LHS.name AS name,\n                RHS.source_u_id AS source_u_id,\n                RHS.trust AS trust\n         FROM useracct AS LHS\n         INNER JOIN trust AS RHS ON (LHS.u_id = RHS.target_u_id)))\n   GROUP BY name)\nORDER BY name\n", "sql2": "SELECT T1.name,\n       avg(trust)\nFROM useracct AS T1\nJOIN trust AS T2 ON T1.u_id = T2.target_u_id\nGROUP BY T2.target_u_id", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM useracct\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM useracct", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0008", "sql1": "\nSELECT n_distinct AS count_distinct_i_id_\nFROM\n  (SELECT COUNT(DISTINCT i_id) AS n_distinct\n   FROM review)\nORDER BY count_distinct_i_id_\n", "sql2": "SELECT count(DISTINCT i_id)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM review\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0022", "sql1": "\nSELECT name,\n       rank AS count___\nFROM\n  (SELECT LHS.u_id AS u_id,\n          LHS.name AS name,\n          LHS.n AS n,\n          RHS.a_id AS a_id,\n          RHS.i_id AS i_id,\n          RHS.rank AS rank\n   FROM\n     (SELECT u_id,\n             name,\n             COUNT(*) OVER () AS n\n      FROM useracct) AS LHS\n   INNER JOIN review AS RHS ON (LHS.u_id = RHS.u_id\n                                   AND LHS.n = RHS.rating))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM useracct AS T1\nJOIN review AS T2 ON T1.u_id = T2.u_id\nGROUP BY T2.u_id", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0002", "sql1": "\nSELECT i_id,\n       title\nFROM item\nORDER BY i_id\n", "sql2": "SELECT *\nFROM item", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0001", "sql1": "\nSELECT `i_id`\nFROM `item`\nWHERE (`title` = 'orange')\nORDER BY i_id\n", "sql2": "SELECT i_id\nFROM item\nWHERE title = 'orange'", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0017", "sql1": "\nSELECT title\nFROM item\nORDER BY title\n", "sql2": "SELECT title\nFROM item\nORDER BY title", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0021", "sql1": "\nSELECT name,\n       meanrating AS avg_t2_rating_\nFROM\n  (SELECT LHS.u_id AS u_id,\n          LHS.name AS name,\n          RHS.meanrating AS meanrating\n   FROM useracct AS LHS\n   INNER JOIN\n     (SELECT u_id,\n             AVG(rating) AS meanrating\n      FROM review\n      GROUP BY u_id) AS RHS ON (LHS.u_id = RHS.u_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       avg(T2.rating)\nFROM useracct AS T1\nJOIN review AS T2 ON T1.u_id = T2.u_id\nGROUP BY T2.u_id", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0027", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM item AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM review AS RHS\n        WHERE (LHS.i_id = RHS.i_id) ))\nORDER BY title\n", "sql2": "SELECT title\nFROM item\nWHERE i_id NOT IN\n    (SELECT i_id\n     FROM review)", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0007", "sql1": "\nSELECT n_distinct AS count_distinct_u_id_\nFROM\n  (SELECT COUNT(DISTINCT u_id) AS n_distinct\n   FROM review)\nORDER BY count_distinct_u_id_\n", "sql2": "SELECT count(DISTINCT u_id)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0011", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.a_id AS a_id,\n          LHS.u_id AS u_id,\n          LHS.i_id AS i_id,\n          LHS.rating AS rating,\n          LHS.rank AS rank,\n          RHS.title AS title\n   FROM\n     (SELECT *\n      FROM review\n      WHERE (rating = 10)) AS LHS\n   LEFT JOIN item AS RHS ON (LHS.i_id = RHS.i_id))\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM item AS T1\nJOIN review AS T2 ON T1.i_id = T2.i_id\nWHERE T2.rating = 10", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM useracct AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM review AS RHS\n        WHERE (LHS.u_id = RHS.u_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM useracct\nWHERE u_id NOT IN\n    (SELECT u_id\n     FROM review)", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/epinions_1/0006", "sql1": "\nSELECT minrank AS min_rank_\nFROM\n  (SELECT MIN(rank) AS minrank\n   FROM review)\nORDER BY min_rank_\n", "sql2": "SELECT min(rank)\nFROM review", "schema": "spider/epinions_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/epinions_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0009", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.college_id AS college_id,\n          LHS.name AS name,\n          LHS.leader_name AS leader_name,\n          LHS.college_location AS college_location,\n          RHS.member_id AS member_id,\n          RHS.name AS name_other,\n          RHS.country AS country\n   FROM college AS LHS\n   INNER JOIN member AS RHS ON (LHS.college_id = RHS.college_id))\nORDER BY name___1\n", "sql2": "SELECT T2.Name,\n       T1.Name\nFROM college AS T1\nJOIN member AS T2 ON T1.College_ID = T2.College_ID", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.round_id AS round_id,\n          RHS.decoration_theme AS decoration_theme,\n          RHS.rank_in_round AS rank_in_round\n   FROM member AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM round\n      WHERE (rank_in_round > 3)) AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM member AS T1\nJOIN round AS T2 ON T1.Member_ID = T2.Member_ID\nWHERE T2.Rank_in_Round > 3", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0005", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM member\nGROUP BY Country", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0004", "sql1": "\nSELECT `name`\nFROM `member`\nWHERE (`country` != 'United States'\n       OR `country` != 'Canada')\nORDER BY name\n", "sql2": "SELECT Name\nFROM member\nWHERE Country = 'United States'\n  OR Country = 'Canada'", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0012", "sql1": "\nSELECT name,\n       decoration_theme\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.round_id AS round_id,\n          RHS.decoration_theme AS decoration_theme,\n          RHS.rank_in_round AS rank_in_round\n   FROM member AS LHS\n   INNER JOIN round AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T2.Decoration_Theme\nFROM member AS T1\nJOIN round AS T2 ON T1.Member_ID = T2.Member_ID", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0008", "sql1": "\nSELECT leader_name,\n       college_location\nFROM college\nORDER BY leader_name\n", "sql2": "SELECT Leader_Name,\n       College_Location\nFROM college", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM member AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM round AS RHS\n        WHERE (LHS.member_id = RHS.member_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM member\nWHERE Member_ID NOT IN\n    (SELECT Member_ID\n     FROM round)", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0003", "sql1": "\nSELECT name,\n       country\nFROM member\nORDER BY name\n", "sql2": "SELECT Name,\n       Country\nFROM member", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0002", "sql1": "\nSELECT name\nFROM member\nORDER BY name\n", "sql2": "SELECT Name\nFROM member\nORDER BY Name ASC", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.round_id AS round_id,\n          RHS.decoration_theme AS decoration_theme,\n          RHS.rank_in_round AS rank_in_round\n   FROM member AS LHS\n   INNER JOIN round AS RHS ON (LHS.member_id = RHS.member_id))\nORDER BY name\n", "sql2": "SELECT T1.Name\nFROM member AS T1\nJOIN round AS T2 ON T1.Member_ID = T2.Member_ID\nORDER BY Rank_in_Round ASC", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM member\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM member", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0007", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT LHS.member_id AS member_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.college_id AS college_id,\n          RHS.name AS name_other,\n          RHS.country AS country_other\n   FROM member AS LHS\n   INNER JOIN member AS RHS ON (LHS.college_id = RHS.college_id\n                                   AND LHS.member_id = RHS.member_id))\nORDER BY country\n", "sql2": "SELECT Country\nFROM member\nGROUP BY Country\nHAVING COUNT(*) > 2", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0011", "sql1": "\nSELECT DISTINCT `leader_name`\nFROM\n  (SELECT `LHS`.`college_id` AS `college_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`leader_name` AS `leader_name`,\n          `LHS`.`college_location` AS `college_location`,\n          `RHS`.`member_id` AS `member_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`country` AS `country`\n   FROM `college` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `member`\n      WHERE (`country` = 'Canada')) AS RHS ON (LHS.college_id = RHS.college_id))\nORDER BY leader_name\n", "sql2": "SELECT DISTINCT T1.Leader_Name\nFROM college AS T1\nJOIN member AS T2 ON T1.College_ID = T2.College_ID\nWHERE T2.Country = 'Canada'", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0010", "sql1": "\nSELECT name_other AS name,\n       college_location\nFROM\n  (SELECT LHS.college_id AS college_id,\n          LHS.name AS name,\n          LHS.leader_name AS leader_name,\n          LHS.college_location AS college_location,\n          RHS.member_id AS member_id,\n          RHS.name AS name_other,\n          RHS.country AS country\n   FROM college AS LHS\n   INNER JOIN member AS RHS ON (LHS.college_id = RHS.college_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.College_Location\nFROM college AS T1\nJOIN member AS T2 ON T1.College_ID = T2.College_ID\nORDER BY T2.Name ASC", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/decoration_competition/0006", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT country,\n          member_id,\n          MAX(n) AS n\n   FROM\n     (SELECT country,\n             member_id,\n             COUNT(*) AS n\n      FROM\n        (SELECT member_id,\n                name,\n                country,\n                member_id AS college_id,\n                member_id_other,\n                country_other\n         FROM\n           (SELECT LHS.member_id AS member_id,\n                   LHS.name AS name,\n                   LHS.country AS country,\n                   LHS.college_id AS college_id,\n                   RHS.member_id AS member_id_other,\n                   RHS.country AS country_other\n            FROM member AS LHS\n            INNER JOIN member AS RHS ON (LHS.member_id = RHS.college_id\n                                            AND LHS.name = RHS.name)))\n      GROUP BY country,\n               member_id)\n   GROUP BY country,\n            member_id)\nORDER BY country\n", "sql2": "SELECT Country\nFROM member\nGROUP BY Country\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/decoration_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/architecture/0012", "sql1": "\nSELECT `location`\nFROM `bridge`\nWHERE (`name` = 'Kolob Arch'\n       OR `name` = 'Rainbow Bridge')\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM bridge\nWHERE name = 'Kolob Arch'\n  OR name = 'Rainbow Bridge'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/architecture/0002", "sql1": "\nSELECT `name`,\n       `nationality`,\n       `id`\nFROM `architect`\nWHERE (`gender` = 'male')\nORDER BY name\n", "sql2": "SELECT name,\n       nationality,\n       id\nFROM architect\nWHERE gender = 'male'\nORDER BY name", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/architecture/0001", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `gender`,\n          `nationality`,\n          COUNT(DISTINCT `gender`) AS `n_distinct`\n   FROM `architect`\n   GROUP BY `gender`,\n            `nationality`)\nWHERE (`gender` != 'female')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM architect\nWHERE gender = 'female'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/architecture/0007", "sql1": "\nSELECT `name`\nFROM `mill`\nWHERE (`location` != 'Donceel')\nORDER BY name\n", "sql2": "SELECT name\nFROM mill\nWHERE LOCATION != 'Donceel'", "schema": "spider/architecture/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0009", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM station\n         WHERE (number_of_platforms < 15))\n      ORDER BY number_of_platforms DESC)\n   LIMIT 1)\n", "sql2": "SELECT LOCATION\nFROM station\nEXCEPT\nSELECT LOCATION\nFROM station\nWHERE number_of_platforms >= 15", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0013", "sql1": "\nSELECT name,\n       service\nFROM train\nORDER BY name\n", "sql2": "SELECT name,\n       service\nFROM train\nORDER BY TIME", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0004", "sql1": "\nSELECT `name`,\n       `total_passengers`\nFROM `station`\nWHERE (`location` != 'London')\nORDER BY name\n", "sql2": "SELECT name,\n       total_passengers\nFROM station\nWHERE LOCATION != 'London'", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0012", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM train\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM train", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0008", "sql1": "\nSELECT DISTINCT LOCATION\nFROM station\nWHERE (number_of_platforms > 15\n       AND number_of_platforms < 25)\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM station\nWHERE number_of_platforms >= 15\n  AND total_passengers > 25", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0015", "sql1": "\nSELECT name AS name___1,\n       name_other AS name___2\nFROM\n  (SELECT LHS.station_id AS station_id,\n          LHS.name AS name,\n          LHS.annual_entry_exit AS annual_entry_exit,\n          LHS.annual_interchanges AS annual_interchanges,\n          LHS.total_passengers AS total_passengers,\n          LHS.location AS LOCATION,\n          LHS.main_services AS main_services,\n          LHS.number_of_platforms AS number_of_platforms,\n          RHS.train_id AS train_id,\n          RHS.name AS name_other,\n          RHS.time AS TIME,\n          RHS.service AS service\n   FROM station AS LHS\n   INNER JOIN\n     (SELECT LHS.train_id AS train_id,\n             LHS.name AS name,\n             LHS.time AS TIME,\n             LHS.service AS service,\n             RHS.station_id AS station_id\n      FROM train AS LHS\n      INNER JOIN train_station AS RHS ON (LHS.train_id = RHS.train_id)) AS RHS ON (LHS.station_id = RHS.station_id))\nORDER BY name___1\n", "sql2": "SELECT T2.name,\n       T3.name\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nJOIN train AS T3 ON T3.train_id = T1.train_id", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0003", "sql1": "\nSELECT DISTINCT LOCATION\nFROM station\nORDER BY LOCATION\n", "sql2": "SELECT DISTINCT LOCATION\nFROM station", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0019", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT LOCATION,\n          COUNT(*) AS n\n   FROM station\n   GROUP BY LOCATION)\nWHERE (n <= 1)\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM station\nGROUP BY LOCATION\nHAVING count(*) = 1", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0023", "sql1": "\nSELECT name,\n       LOCATION\nFROM station\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION\nFROM station\nORDER BY Annual_entry_exit,\n         Annual_interchanges", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0022", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`station_id` AS `station_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`annual_entry_exit` AS `annual_entry_exit`,\n          `LHS`.`annual_interchanges` AS `annual_interchanges`,\n          `LHS`.`total_passengers` AS `total_passengers`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`main_services` AS `main_services`,\n          `LHS`.`number_of_platforms` AS `number_of_platforms`,\n          `RHS`.`train_id` AS `train_id`,\n          `RHS`.`station_id` AS `station_id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`time` AS `time`,\n          `RHS`.`service` AS `service`\n   FROM\n     (SELECT *\n      FROM `station`\n      WHERE (`location` != 'London')) AS LHS\n   CROSS JOIN\n     (SELECT LHS.train_id AS train_id,\n             LHS.station_id AS station_id,\n             RHS.name AS name,\n             RHS.time AS TIME,\n             RHS.service AS service\n      FROM train_station AS LHS\n      LEFT JOIN train AS RHS ON (LHS.train_id = RHS.train_id)) AS RHS)\nWHERE (station_id = station_id_other)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM train_station AS T1\nJOIN train AS T2 ON T1.train_id = T2.train_id\nWHERE T1.station_id NOT IN\n    (SELECT T4.station_id\n     FROM train_station AS T3\n     JOIN station AS T4 ON T3.station_id = T4.station_id\n     WHERE t4.location = 'London')", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT name,\n          total_passengers,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.train_id AS train_id,\n             LHS.station_id AS station_id,\n             RHS.name AS name,\n             RHS.annual_entry_exit AS annual_entry_exit,\n             RHS.annual_interchanges AS annual_interchanges,\n             RHS.total_passengers AS total_passengers,\n             RHS.location AS LOCATION,\n             RHS.main_services AS main_services,\n             RHS.number_of_platforms AS number_of_platforms\n      FROM train_station AS LHS\n      INNER JOIN station AS RHS ON (LHS.station_id = RHS.station_id))\n   GROUP BY name,\n            total_passengers)\nWHERE (n >= 2)\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nGROUP BY T1.station_id\nHAVING count(*) >= 2", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0002", "sql1": "\nSELECT name,\n       LOCATION,\n       number_of_platforms\nFROM station\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION,\n       number_of_platforms\nFROM station", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0014", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LOCATION,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.train_id AS train_id,\n             LHS.station_id AS station_id,\n             RHS.name AS name,\n             RHS.annual_entry_exit AS annual_entry_exit,\n             RHS.annual_interchanges AS annual_interchanges,\n             RHS.total_passengers AS total_passengers,\n             RHS.location AS LOCATION,\n             RHS.main_services AS main_services,\n             RHS.number_of_platforms AS number_of_platforms\n      FROM train_station AS LHS\n      INNER JOIN station AS RHS ON (LHS.station_id = RHS.station_id))\n   GROUP BY LOCATION,\n            name)\nORDER BY name\n", "sql2": "SELECT T2.name,\n       count(*)\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nGROUP BY T1.station_id", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM station\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM station", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.station_id AS station_id,\n          LHS.maxn AS maxn\n   FROM\n     (SELECT name,\n             station_id,\n             MAX(n) AS maxn\n      FROM\n        (SELECT name,\n                station_id,\n                COUNT(*) AS n\n         FROM station\n         GROUP BY name,\n                  station_id)\n      GROUP BY name,\n               station_id) AS LHS\n   INNER JOIN train_station AS RHS ON (LHS.station_id = RHS.station_id\n                                          AND LHS.maxn = RHS.train_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nGROUP BY T1.station_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM station AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM train_station AS RHS\n        WHERE (LHS.station_id = RHS.station_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM station\nWHERE station_id NOT IN\n    (SELECT station_id\n     FROM train_station)", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0016", "sql1": "\nSELECT `name_other` AS `name`,\n       `time`\nFROM\n  (SELECT `LHS`.`station_id` AS `station_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`annual_entry_exit` AS `annual_entry_exit`,\n          `LHS`.`annual_interchanges` AS `annual_interchanges`,\n          `LHS`.`total_passengers` AS `total_passengers`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`main_services` AS `main_services`,\n          `LHS`.`number_of_platforms` AS `number_of_platforms`,\n          `RHS`.`train_id` AS `train_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`time` AS `time`,\n          `RHS`.`service` AS `service`\n   FROM\n     (SELECT *\n      FROM `station`\n      WHERE (`location` = 'London')) AS LHS\n   INNER JOIN\n     (SELECT LHS.train_id AS train_id,\n             LHS.name AS name,\n             LHS.time AS TIME,\n             LHS.service AS service,\n             RHS.station_id AS station_id\n      FROM train AS LHS\n      INNER JOIN train_station AS RHS ON (LHS.train_id = RHS.train_id)) AS RHS ON (LHS.station_id = RHS.station_id))\nORDER BY name\n", "sql2": "SELECT T3.name,\n       T3.time\nFROM train_station AS T1\nJOIN station AS T2 ON T1.station_id = T2.station_id\nJOIN train AS T3 ON T3.train_id = T1.train_id\nWHERE T2.location = 'London'\nORDER BY T3.time DESC", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0011", "sql1": "\nSELECT name,\n       TIME,\n       service\nFROM train\nORDER BY name\n", "sql2": "SELECT name,\n       TIME,\n       service\nFROM train", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/train_station/0010", "sql1": "\nSELECT LOCATION\nFROM\n  (SELECT station_id,\n          name,\n          annual_entry_exit,\n          annual_interchanges,\n          total_passengers,\n          LOCATION,\n          main_services,\n          number_of_platforms,\n          name_other,\n          annual_entry_exit_other,\n          annual_interchanges_other,\n          total_passengers_other,\n          location_other,\n          number_of_platforms_other,\n          COUNT(*) OVER () AS n\n   FROM\n     (SELECT number_of_platforms AS station_id,\n             name,\n             annual_entry_exit,\n             annual_interchanges,\n             total_passengers,\n             LOCATION,\n             main_services,\n             number_of_platforms,\n             name_other,\n             annual_entry_exit_other,\n             annual_interchanges_other,\n             total_passengers_other,\n             location_other,\n             number_of_platforms_other\n      FROM\n        (SELECT LHS.station_id AS station_id,\n                LHS.name AS name,\n                LHS.annual_entry_exit AS annual_entry_exit,\n                LHS.annual_interchanges AS annual_interchanges,\n                LHS.total_passengers AS total_passengers,\n                LHS.location AS LOCATION,\n                LHS.main_services AS main_services,\n                LHS.number_of_platforms AS number_of_platforms,\n                RHS.name AS name_other,\n                RHS.annual_entry_exit AS annual_entry_exit_other,\n                RHS.annual_interchanges AS annual_interchanges_other,\n                RHS.total_passengers AS total_passengers_other,\n                RHS.location AS location_other,\n                RHS.number_of_platforms AS number_of_platforms_other\n         FROM station AS LHS\n         INNER JOIN station AS RHS ON (LHS.number_of_platforms = RHS.station_id\n                                          AND LHS.main_services = RHS.main_services))))\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM station\nGROUP BY LOCATION\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/train_station/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0009", "sql1": "\nSELECT DISTINCT allergytype\nFROM\n  (SELECT LHS.allergytype AS allergytype,\n          LHS.n AS n,\n          RHS.allergytype AS allergytype_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT allergytype,\n             COUNT(*) AS n\n      FROM allergy_type\n      GROUP BY allergytype) AS LHS\n   INNER JOIN\n     (SELECT allergytype,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT allergytype,\n                COUNT(*) AS n\n         FROM allergy_type\n         GROUP BY allergytype)) AS RHS ON (LHS.n = RHS.maxn))\nORDER BY allergytype\nFrom cffi callback <function _processevents at 0x7f07679d3790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\nallergy_type <- read_csv(\"tests-examples/spider/allergy_1/tables/allergy_type.csv\", skip=1, col_names=c('allergy','allergytype'), col_types=cols(col_character(),col_character()))\nallergy_type <- copy_to(con, allergy_type)\nexpected_output <- read_csv(\"tests-examples/spider/allergy_1/tables/0009.csv\", skip=1, col_names=c('allergytype'), col_types=cols(col_character()))\n\ndf1 <- allergy_type %>% group_by(allergytype) %>% summarise(n = n()) %>% ungroup()\ndf2 <- df1 %>% mutate(maxn = max(n))\ndf7 <- inner_join(df1, df2, by=c('n' = 'maxn'), suffix = c('', '.other'), na_matches='never') %>% mutate(maxn = n)\nout <- df7 %>% select(allergytype) %>% distinct() %>% arrange(allergytype)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT DISTINCT allergytype\nFROM\n  (SELECT LHS.allergytype AS allergytype,\n          LHS.n AS n,\n          RHS.allergytype AS allergytype_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT allergytype,\n             COUNT(*) AS n\n      FROM allergy_type\n      GROUP BY allergytype) AS LHS\n   INNER JOIN\n     (SELECT allergytype,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT allergytype,\n                COUNT(*) AS n\n         FROM allergy_type\n         GROUP BY allergytype)) AS RHS ON (LHS.n = RHS.maxn))\nORDER BY allergytype\n", "sql2": "SELECT allergytype\nFROM Allergy_type\nGROUP BY allergytype\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0025", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT sex,\n                stuid,\n                MAX(age) AS maxage\n         FROM student\n         GROUP BY sex,\n                  stuid)\n      ORDER BY maxage DESC)\n   LIMIT 1)\n", "sql2": "SELECT StuID\nFROM Student\nWHERE age =\n    (SELECT max(age)\n     FROM Student)", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0033", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `has_allergy`\nWHERE (`allergy` = 'Cat')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Has_allergy\nWHERE Allergy = 'Cat'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0013", "sql1": "\nSELECT n_distinct AS count_distinct_advisor_\nFROM\n  (SELECT COUNT(DISTINCT advisor) AS n_distinct\n   FROM student)\nORDER BY count_distinct_advisor_\n", "sql2": "SELECT count(DISTINCT advisor)\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0005", "sql1": "\nSELECT `allergy`\nFROM `allergy_type`\nWHERE (`allergytype` = 'food')\nORDER BY allergy\n", "sql2": "SELECT DISTINCT allergy\nFROM Allergy_type\nWHERE allergytype = 'food'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0029", "sql1": "\nSELECT meanage AS avg_age_,\n       sex\nFROM\n  (SELECT sex,\n          AVG(age) AS meanage\n   FROM student\n   GROUP BY sex)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       sex\nFROM Student\nGROUP BY sex", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0028", "sql1": "\nSELECT age,\n       n AS count___\nFROM\n  (SELECT age,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY age)\nORDER BY age\n", "sql2": "SELECT age,\n       count(*)\nFROM Student\nGROUP BY age", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0004", "sql1": "\nSELECT allergy,\n       allergytype\nFROM allergy_type\nORDER BY allergy\n", "sql2": "SELECT allergy,\n       allergytype\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0012", "sql1": "\nSELECT fname,\n       lname\nFROM student\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0032", "sql1": "\nSELECT advisor\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT advisor,\n                MAX(n) AS n\n         FROM\n           (SELECT advisor,\n                   COUNT(*) AS n\n            FROM student\n            GROUP BY advisor)\n         GROUP BY advisor)\n      ORDER BY n DESC)\n   LIMIT 1)\n", "sql2": "SELECT advisor\nFROM Student\nGROUP BY advisor\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0024", "sql1": "\nSELECT lname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT stuid,\n                lname,\n                fname,\n                age,\n                sex,\n                major,\n                advisor,\n                city_code,\n                MIN(age) OVER () AS minage\n         FROM student)\n      ORDER BY age)\n   LIMIT 1)\n", "sql2": "SELECT LName\nFROM Student\nWHERE age =\n    (SELECT min(age)\n     FROM Student)", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0008", "sql1": "\nSELECT allergytype,\n       n AS count___\nFROM\n  (SELECT allergytype,\n          COUNT(*) AS n\n   FROM allergy_type\n   GROUP BY allergytype)\nORDER BY allergytype\n", "sql2": "SELECT allergytype,\n       count(*)\nFROM Allergy_type\nGROUP BY allergytype", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0049", "sql1": "\nSELECT `fname`,\n       `major`\nFROM\n  (SELECT *\n   FROM `student` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `has_allergy`\n           WHERE (`allergy` = 'Soy')) AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY fname\n", "sql2": "SELECT fname,\n       major\nFROM Student\nWHERE StuID NOT IN\n    (SELECT StuID\n     FROM Has_allergy\n     WHERE Allergy = 'Soy')", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0042", "sql1": "\nSELECT `allergy`,\n       `allergytype`\nFROM\n  (SELECT `LHS`.`allergy` AS `allergy`,\n          `LHS`.`allergytype` AS `allergytype`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`allergy` AS `allergy`,\n             `LHS`.`allergytype` AS `allergytype`,\n             `LHS`.`stuid` AS `stuid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM\n        (SELECT `LHS`.`allergy` AS `allergy`,\n                `LHS`.`allergytype` AS `allergytype`,\n                `RHS`.`stuid` AS `stuid`\n         FROM `allergy_type` AS `LHS`\n         INNER JOIN `has_allergy` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`)) AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`fname` = 'Lisa')) AS RHS ON (LHS.stuid = RHS.stuid\n                                           AND LHS.lname = RHS.lname\n                                           AND LHS.fname = RHS.fname\n                                           AND LHS.age = RHS.age\n                                           AND LHS.sex = RHS.sex\n                                           AND LHS.major = RHS.major\n                                           AND LHS.advisor = RHS.advisor\n                                           AND LHS.city_code = RHS.city_code))\nORDER BY allergy\n", "sql2": "SELECT T1.Allergy,\n       T1.AllergyType\nFROM Allergy_type AS T1\nJOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy\nJOIN Student AS T3 ON T3.StuID = T2.StuID\nWHERE T3.Fname = 'Lisa'\nORDER BY T1.Allergy", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0015", "sql1": "\nSELECT DISTINCT city_code\nFROM student\nORDER BY city_code\n", "sql2": "SELECT DISTINCT city_code\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0003", "sql1": "\nSELECT DISTINCT allergytype\nFROM allergy_type\nORDER BY allergytype\n", "sql2": "SELECT DISTINCT allergytype\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0039", "sql1": "\nSELECT allergy,\n       n AS count___\nFROM\n  (SELECT allergy,\n          COUNT(*) AS n\n   FROM has_allergy\n   GROUP BY allergy)\nORDER BY allergy\n", "sql2": "SELECT Allergy,\n       count(*)\nFROM Has_allergy\nGROUP BY Allergy", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0019", "sql1": "\nSELECT stuid\nFROM student\nWHERE (age > 20)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE age > 20", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0035", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM has_allergy AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Has_allergy", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0034", "sql1": "\nSELECT stuid\nFROM\n  (SELECT stuid,\n          COUNT(*) AS n\n   FROM has_allergy\n   GROUP BY stuid)\nWHERE (n >= 2)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Has_allergy\nGROUP BY StuID\nHAVING count(*) >= 2", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0022", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `student`\nWHERE (`city_code` = 'HKG'\n       OR `city_code` = 'CHI')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE city_code = 'HKG'\n  OR city_code = 'CHI'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0018", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT age,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY age)\nWHERE (age = 18\n       OR n > age)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE age = 18", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0002", "sql1": "\nSELECT n_distinct AS count_distinct_allergytype_\nFROM\n  (SELECT COUNT(DISTINCT allergytype) AS n_distinct\n   FROM allergy_type)\nORDER BY count_distinct_allergytype_\n", "sql2": "SELECT count(DISTINCT allergytype)\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0014", "sql1": "\nSELECT DISTINCT major\nFROM student\nORDER BY major\n", "sql2": "SELECT DISTINCT Major\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0001", "sql1": "\nSELECT n_distinct AS count_distinct_allergy_\nFROM\n  (SELECT COUNT(DISTINCT allergy) AS n_distinct\n   FROM allergy_type)\nORDER BY count_distinct_allergy_\n", "sql2": "SELECT count(DISTINCT allergy)\nFROM Allergy_type", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0017", "sql1": "\nSELECT `stuid`\nFROM `student`\nWHERE (`sex` = 'M')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE Sex = 'M'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0040", "sql1": "\nSELECT allergytype,\n       n AS count___\nFROM\n  (SELECT allergytype,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.allergy AS allergy,\n             LHS.allergytype AS allergytype,\n             RHS.stuid AS stuid\n      FROM allergy_type AS LHS\n      INNER JOIN has_allergy AS RHS ON (LHS.allergy = RHS.allergy))\n   GROUP BY allergytype)\nORDER BY allergytype\n", "sql2": "SELECT T2.allergytype,\n       count(*)\nFROM Has_allergy AS T1\nJOIN Allergy_type AS T2 ON T1.allergy = T2.allergy\nGROUP BY T2.allergytype", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0037", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM `has_allergy` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `allergy_type`\n           WHERE (`allergytype` = 'food')) AS RHS\n        WHERE (LHS.allergy = RHS.allergy) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Has_allergy AS T1\nJOIN Allergy_type AS T2 ON T1.allergy = T2.allergy\nWHERE T2.allergytype = 'food'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0021", "sql1": "\nSELECT advisor\nFROM student\nWHERE (stuid = 1004)\nORDER BY advisor\n", "sql2": "SELECT Advisor\nFROM Student\nWHERE StuID = 1004", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0020", "sql1": "\nSELECT `city_code`\nFROM `student`\nWHERE (`lname` = 'Kim')\nORDER BY city_code\n", "sql2": "SELECT city_code\nFROM Student\nWHERE LName = 'Kim'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0036", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`allergy` AS `allergy`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`allergy` AS `allergy`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`n` AS `n`\n      FROM `has_allergy` AS `LHS`\n      CROSS JOIN\n        (SELECT `age`,\n                `sex`,\n                COUNT(*) AS `n`\n         FROM `student`\n         GROUP BY `age`,\n                  `sex`) AS `RHS`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`sex` != 'F')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                         AND `LHS`.`age` = `RHS`.`age`\n                                         AND `LHS`.`sex` = `RHS`.`sex`))\nWHERE (`allergy` = 'Milk'\n       OR `allergy` = 'Eggs')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM has_allergy AS T1\nJOIN Student AS T2 ON T1.StuID = T2.StuID\nWHERE T2.sex = 'F'\n  AND T1.allergy = 'Milk'\n  OR T1.allergy = 'Eggs'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0016", "sql1": "\nSELECT `fname`,\n       `lname`,\n       `age`\nFROM `student`\nWHERE (`sex` = 'F')\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname,\n       Age\nFROM Student\nWHERE Sex = 'F'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0031", "sql1": "\nSELECT advisor,\n       n AS count___\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nORDER BY advisor\n", "sql2": "SELECT advisor,\n       count(*)\nFROM Student\nGROUP BY advisor", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0027", "sql1": "\nSELECT major\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT lname,\n                major,\n                MAX(n) AS n\n         FROM\n           (SELECT lname,\n                   major,\n                   COUNT(*) AS n\n            FROM student\n            GROUP BY lname,\n                     major)\n         GROUP BY lname,\n                  major)\n      ORDER BY lname)\n   LIMIT 1)\n", "sql2": "SELECT major\nFROM Student\nGROUP BY major\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0007", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `allergy_type`\nWHERE (`allergytype` = 'animal')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Allergy_type\nWHERE allergytype = 'animal'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0046", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `allergytype`,\n          `sex`,\n          COUNT(DISTINCT `stuid`) AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`allergy` AS `allergy`,\n             `LHS`.`allergytype` AS `allergytype`,\n             `LHS`.`stuid` AS `stuid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`major` AS `major`,\n             `RHS`.`advisor` AS `advisor`,\n             `RHS`.`city_code` AS `city_code`\n      FROM\n        (SELECT `LHS`.`allergy` AS `allergy`,\n                `LHS`.`allergytype` AS `allergytype`,\n                `RHS`.`stuid` AS `stuid`\n         FROM `allergy_type` AS `LHS`\n         INNER JOIN `has_allergy` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`)) AS `LHS`\n      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\n   GROUP BY `allergytype`,\n            `sex`)\nWHERE (`sex` = 'M'\n       AND `allergytype` = 'food')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE sex = 'M'\n  AND StuID IN\n    (SELECT StuID\n     FROM Has_allergy AS T1\n     JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy\n     WHERE T2.allergytype = 'food')", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0047", "sql1": "\nSELECT DISTINCT `fname`,\n                `city_code`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`allergy` AS `allergy`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT *\n      FROM `has_allergy`\n      WHERE (`allergy` = 'Milk'\n             OR `allergy` = 'Cat')) AS LHS\n   LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY fname\n", "sql2": "SELECT DISTINCT T1.fname,\n                T1.city_code\nFROM Student AS T1\nJOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid\nWHERE T2.Allergy = 'Milk'\n  OR T2.Allergy = 'Cat'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0006", "sql1": "\nSELECT `allergytype`\nFROM `allergy_type`\nWHERE (`allergy` = 'Cat')\nORDER BY allergytype\n", "sql2": "SELECT allergytype\nFROM Allergy_type\nWHERE allergy = 'Cat'", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0026", "sql1": "\nSELECT major,\n       n AS count___\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nORDER BY major\n", "sql2": "SELECT major,\n       count(*)\nFROM Student\nGROUP BY major", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/allergy_1/0030", "sql1": "\nSELECT city_code,\n       n AS count___\nFROM\n  (SELECT city_code,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY city_code)\nORDER BY city_code\n", "sql2": "SELECT city_code,\n       count(*)\nFROM Student\nGROUP BY city_code", "schema": "spider/allergy_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_1/0002", "sql1": "\nSELECT DISTINCT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`name` AS `name`\n   FROM\n     (SELECT `id`,\n             COUNT(*) AS `n`\n      FROM `league`\n      WHERE (`name` != 'England')\n      GROUP BY id) AS LHS\n   INNER JOIN country AS RHS ON (LHS.id = RHS.id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Country AS T1\nJOIN League AS T2 ON T1.id = T2.country_id\nWHERE T1.name = 'England'", "schema": "spider/soccer_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/soccer_1/0001", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.id AS id,\n          LHS.country_id AS country_id,\n          LHS.name AS name,\n          RHS.name AS name_other\n   FROM league AS LHS\n   INNER JOIN country AS RHS ON (LHS.id = RHS.id))\nORDER BY name___1\n", "sql2": "SELECT T1.name,\n       T2.name\nFROM Country AS T1\nJOIN League AS T2 ON T1.id = T2.country_id", "schema": "spider/soccer_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM election\n           WHERE (votes >= 10000.0)) AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nWHERE Votes > 10000", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0005", "sql1": "\nSELECT name,\n       party\nFROM representative\nORDER BY name\n", "sql2": "SELECT Name,\n       Party\nFROM representative", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0012", "sql1": "\nSELECT lifespan\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY lifespan\n", "sql2": "SELECT T2.Lifespan\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nORDER BY Vote_Percent DESC", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0008", "sql1": "\nSELECT name, date\nFROM\n  (SELECT LHS.election_id AS election_id,\n          LHS.representative_id AS representative_id,\n          LHS.date AS date,\n          LHS.votes AS votes,\n          LHS.vote_percent AS vote_percent,\n          LHS.seats AS seats,\n          LHS.place AS place,\n          RHS.name AS name,\n          RHS.state AS state,\n          RHS.party AS party,\n          RHS.lifespan AS lifespan\n   FROM election AS LHS\n   INNER JOIN representative AS RHS ON (LHS.representative_id = RHS.representative_id))\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.Date\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0003", "sql1": "\nSELECT date, vote_percent\nFROM election\nORDER BY date\n", "sql2": "SELECT Date , Vote_Percent\nFROM election", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0019", "sql1": "\nSELECT DISTINCT `party`\nFROM `representative`\nWHERE (`state` != 'New York'\n       AND `state` = 'Pennsylvania')\nORDER BY party\n", "sql2": "SELECT Party\nFROM representative\nWHERE State = 'New York' INTERSECT\n  SELECT Party\n  FROM representative WHERE State = 'Pennsylvania'", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM representative\nWHERE Representative_ID NOT IN\n    (SELECT Representative_ID\n     FROM election)", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0002", "sql1": "\nSELECT votes\nFROM election\nORDER BY votes\n", "sql2": "SELECT Votes\nFROM election\nORDER BY Votes DESC", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0014", "sql1": "\nSELECT party,\n       n AS count___\nFROM\n  (SELECT party,\n          COUNT(*) AS n\n   FROM representative\n   GROUP BY party)\nORDER BY party\n", "sql2": "SELECT Party,\n       COUNT(*)\nFROM representative\nGROUP BY Party", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM election\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM election", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0017", "sql1": "\nSELECT state\nFROM\n  (SELECT state,\n          COUNT(*) AS n\n   FROM representative\n   GROUP BY state)\nWHERE (n >= 2)\nORDER BY state\n", "sql2": "SELECT State\nFROM representative\nGROUP BY State\nHAVING COUNT(*) >= 2", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0020", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT party) OVER () AS count_distinct_party_\nFROM representative\nORDER BY count_distinct_party_\n", "sql2": "SELECT count(DISTINCT Party)\nFROM representative", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0016", "sql1": "\nSELECT DISTINCT party\nFROM\n  (SELECT name,\n          party,\n          COUNT(*) AS n\n   FROM representative\n   GROUP BY name,\n            party)\nWHERE (n < 3)\nORDER BY party\n", "sql2": "SELECT Party\nFROM representative\nGROUP BY Party\nHAVING COUNT(*) >= 3", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0007", "sql1": "\nSELECT `lifespan`\nFROM `representative`\nWHERE (`state` = 'New York'\n       OR `state` = 'Indiana')\nORDER BY lifespan\n", "sql2": "SELECT Lifespan\nFROM representative\nWHERE State = 'New York'\n  OR State = 'Indiana'", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM representative AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM election AS RHS\n        WHERE (LHS.representative_id = RHS.representative_id) ))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM election AS T1\nJOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID\nORDER BY votes DESC", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election_representative/0006", "sql1": "\nSELECT `name`\nFROM `representative`\nWHERE (`party` != 'Republican')\nORDER BY name\n", "sql2": "SELECT Name\nFROM Representative\nWHERE Party != 'Republican'", "schema": "spider/election_representative/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0005", "sql1": "\nSELECT DISTINCT `venue`\nFROM\n  (SELECT `LHS`.`city_id` AS `city_id`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`hanzi` AS `hanzi`,\n          `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,\n          `LHS`.`regional_population` AS `regional_population`,\n          `LHS`.`gdp` AS `gdp`,\n          `LHS`.`match_id` AS `match_id`,\n          `LHS`.`date` AS `date`,\n          `LHS`.`venue` AS `venue`,\n          `LHS`.`score` AS `score`,\n          `LHS`.`result` AS `result`,\n          `LHS`.`competition` AS `competition`,\n          `RHS`.`year` AS `year`,\n          `RHS`.`host_city` AS `host_city`\n   FROM\n     (SELECT `LHS`.`city_id` AS `city_id`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`hanzi` AS `hanzi`,\n             `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,\n             `LHS`.`regional_population` AS `regional_population`,\n             `LHS`.`gdp` AS `gdp`,\n             `RHS`.`match_id` AS `match_id`,\n             `RHS`.`date` AS `date`,\n             `RHS`.`venue` AS `venue`,\n             `RHS`.`score` AS `score`,\n             `RHS`.`result` AS `result`,\n             `RHS`.`competition` AS `competition`\n      FROM `city` AS `LHS`\n      CROSS JOIN `match` AS `RHS`) AS `LHS`\n   INNER JOIN `hosting_city` AS `RHS` ON (`LHS`.`match_id` = `RHS`.`match_id`))\nWHERE (`city` = 'Nanjing ( Jiangsu )'\n       OR `competition` = '1994 FIFA World Cup qualification')\nORDER BY venue\n", "sql2": "SELECT T3.venue\nFROM city AS T1\nJOIN hosting_city AS T2 ON T1.city_id = T2.host_city\nJOIN MATCH AS T3 ON T2.match_id = T3.match_id\nWHERE T1.city = 'Nanjing ( Jiangsu )'\n  AND T3.competition = '1994 FIFA World Cup qualification'", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0004", "sql1": "\nSELECT DISTINCT city\nFROM\n  (SELECT LHS.city_id AS city_id,\n          LHS.city AS city,\n          LHS.hanzi AS hanzi,\n          LHS.hanyu_pinyin AS hanyu_pinyin,\n          LHS.regional_population AS regional_population,\n          LHS.gdp AS gdp,\n          RHS.host_city AS host_city,\n          RHS.n AS n\n   FROM city AS LHS\n   INNER JOIN\n     (SELECT host_city,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT host_city,\n                COUNT(*) AS n\n         FROM hosting_city\n         GROUP BY host_city)) AS RHS ON (LHS.city_id = RHS.maxn))\nORDER BY city\n", "sql2": "SELECT T1.city\nFROM city AS T1\nJOIN hosting_city AS T2 ON T1.city_id = T2.host_city\nGROUP BY T2.host_city\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0008", "sql1": "\nSELECT city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM city\n      ORDER BY regional_population DESC)\n   LIMIT 3)\n", "sql2": "SELECT city\nFROM city\nORDER BY regional_population DESC\nLIMIT 3", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0015", "sql1": "\nSELECT city\nFROM city\nWHERE (regional_population >= 10000000)\nORDER BY city\n", "sql2": "SELECT city\nFROM city\nWHERE regional_population > 10000000", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0019", "sql1": "\nSELECT gdp\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT gdp,\n                regional_population,\n                MAX(regional_population) AS maxregional_population\n         FROM city\n         GROUP BY gdp,\n                  regional_population)\n      ORDER BY regional_population DESC)\n   LIMIT 1)\n", "sql2": "SELECT gdp\nFROM city\nORDER BY Regional_Population DESC\nLIMIT 1", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0018", "sql1": "\nSELECT venue\nFROM match\nORDER BY venue\n", "sql2": "SELECT venue\nFROM MATCH\nORDER BY date DESC", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0002", "sql1": "\nSELECT `match_id`\nFROM `match`\nWHERE (`competition` = '1994 FIFA World Cup qualification')\nORDER BY match_id\n", "sql2": "SELECT match_id\nFROM MATCH\nWHERE competition = '1994 FIFA World Cup qualification'", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0001", "sql1": "\nSELECT host_city\nFROM\n  (SELECT LHS.year AS YEAR,\n          RHS.match_id AS match_id,\n          RHS.host_city AS host_city\n   FROM\n     (SELECT MAX(YEAR) AS YEAR\n      FROM hosting_city) AS LHS\n   LEFT JOIN hosting_city AS RHS ON (LHS.year = RHS.year))\nORDER BY host_city\n", "sql2": "SELECT host_city\nFROM hosting_city\nORDER BY YEAR DESC\nLIMIT 1", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0017", "sql1": "\nSELECT n AS count___,\n       competition\nFROM\n  (SELECT competition,\n          COUNT(*) AS n\n   FROM match\n   GROUP BY competition)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       Competition\nFROM MATCH\nGROUP BY Competition", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/city_record/0016", "sql1": "\nSELECT city\nFROM city\nWHERE (regional_population >= 10000000\n       OR regional_population < 5000000)\nORDER BY city\n", "sql2": "SELECT city\nFROM city\nWHERE regional_population > 10000000\nUNION\nSELECT city\nFROM city\nWHERE regional_population < 5000000", "schema": "spider/city_record/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0009", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `customer_id`,\n                     `outcome_code`,\n                     COUNT(*) AS `n`\n              FROM `mailshot_customers`\n              GROUP BY `customer_id`,\n                       `outcome_code`)\n           WHERE (`outcome_code` = 'Order'\n                  AND n >= 2)) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT T2.customer_name\nFROM mailshot_customers AS T1\nJOIN customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE outcome_code = 'Order'\nGROUP BY T1.customer_id\nHAVING count(*) >= 2", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0013", "sql1": "\nSELECT DISTINCT address_type_code\nFROM customer_addresses\nORDER BY address_type_code\n", "sql2": "SELECT DISTINCT address_type_code\nFROM customer_addresses", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0005", "sql1": "\nSELECT product_category,\n       n AS count___\nFROM\n  (SELECT product_category,\n          COUNT(*) AS n\n   FROM mailshot_campaigns\n   GROUP BY product_category)\nORDER BY product_category\n", "sql2": "SELECT product_category,\n       count(*)\nFROM mailshot_campaigns\nGROUP BY product_category", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0004", "sql1": "\nSELECT premises_type,\n       n AS count___\nFROM\n  (SELECT premises_type,\n          COUNT(*) AS n\n   FROM premises\n   GROUP BY premises_type)\nORDER BY premises_type\n", "sql2": "SELECT premises_type,\n       count(*)\nFROM premises\nGROUP BY premises_type", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0012", "sql1": "\nSELECT premises_type,\n       address_type_code\nFROM\n  (SELECT LHS.premise_id AS premise_id,\n          LHS.premises_type AS premises_type,\n          LHS.premise_details AS premise_details,\n          RHS.customer_id AS customer_id,\n          RHS.date_address_from AS date_address_from,\n          RHS.address_type_code AS address_type_code,\n          RHS.date_address_to AS date_address_to\n   FROM premises AS LHS\n   INNER JOIN customer_addresses AS RHS ON (LHS.premise_id = RHS.premise_id))\nORDER BY premises_type\n", "sql2": "SELECT T2.premises_type,\n       T1.address_type_code\nFROM customer_addresses AS T1\nJOIN premises AS T2 ON T1.premise_id = T2.premise_id", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0008", "sql1": "\nSELECT outcome_code,\n       n AS count___\nFROM\n  (SELECT outcome_code,\n          COUNT(*) AS n\n   FROM mailshot_customers\n   GROUP BY outcome_code)\nORDER BY outcome_code\n", "sql2": "SELECT outcome_code,\n       count(*)\nFROM mailshot_customers\nGROUP BY outcome_code", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0015", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`customer_email` AS `customer_email`,\n          `LHS`.`customer_address` AS `customer_address`,\n          `LHS`.`customer_login` AS `customer_login`,\n          `LHS`.`customer_password` AS `customer_password`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`order_status_code` AS `order_status_code`,\n          `RHS`.`shipping_method_code` AS `shipping_method_code`,\n          `RHS`.`order_placed_datetime` AS `order_placed_datetime`,\n          `RHS`.`order_delivered_datetime` AS `order_delivered_datetime`,\n          `RHS`.`order_shipping_charges` AS `order_shipping_charges`\n   FROM `customers` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `customer_orders`\n      WHERE (`shipping_method_code` = 'FedEx'\n             AND `order_status_code` = 'Paid')) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE shipping_method_code = 'FedEx'\n  AND order_status_code = 'Paid'", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0003", "sql1": "\nSELECT premises_type,\n       premise_details\nFROM premises\nORDER BY premises_type\n", "sql2": "SELECT premises_type,\n       premise_details\nFROM premises\nORDER BY premises_type", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0002", "sql1": "\nSELECT DISTINCT premises_type\nFROM premises\nORDER BY premises_type\n", "sql2": "SELECT DISTINCT premises_type\nFROM premises", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0014", "sql1": "\nSELECT `order_shipping_charges`,\n       `customer_id`\nFROM `customer_orders`\nWHERE (`order_status_code` = 'Cancelled'\n       OR `order_status_code` = 'Paid')\nORDER BY order_shipping_charges\n", "sql2": "SELECT order_shipping_charges,\n       customer_id\nFROM customer_orders\nWHERE order_status_code = 'Cancelled'\n  OR order_status_code = 'Paid'", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM premises\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM premises", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0007", "sql1": "\nSELECT `customer_name`,\n       `customer_phone`\nFROM\n  (SELECT `LHS`.`mailshot_id` AS `mailshot_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`outcome_code` AS `outcome_code`,\n          `LHS`.`mailshot_customer_date` AS `mailshot_customer_date`,\n          `RHS`.`payment_method` AS `payment_method`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`customer_phone` AS `customer_phone`,\n          `RHS`.`customer_email` AS `customer_email`,\n          `RHS`.`customer_address` AS `customer_address`,\n          `RHS`.`customer_login` AS `customer_login`,\n          `RHS`.`customer_password` AS `customer_password`\n   FROM `mailshot_customers` AS `LHS`\n   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`outcome_code` = 'No Response')\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name,\n       T1.customer_phone\nFROM customers AS T1\nJOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.outcome_code = 'No Response'", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_campaigns_ecommerce/0006", "sql1": "\nSELECT customer_name,\n       customer_phone\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM mailshot_customers AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name,\n       customer_phone\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM mailshot_customers)", "schema": "spider/customers_campaigns_ecommerce/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_campaigns_ecommerce/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0013", "sql1": "\nSELECT meanproduct_price AS avg_product_price_,\n       product_category_code\nFROM\n  (SELECT product_category_code,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_category_code)\nORDER BY avg_product_price_\n", "sql2": "SELECT avg(product_price),\n       product_category_code\nFROM products\nGROUP BY product_category_code", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0004", "sql1": "\nSELECT product_name,\n       n AS count___\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.parent_product_id AS parent_product_id,\n          LHS.product_category_code AS product_category_code,\n          LHS.date_product_first_available AS date_product_first_available,\n          LHS.date_product_discontinued AS date_product_discontinued,\n          LHS.product_name AS product_name,\n          LHS.product_description AS product_description,\n          LHS.product_price AS product_price,\n          RHS.complaint_outcome_code AS complaint_outcome_code,\n          RHS.n AS n\n   FROM products AS LHS\n   INNER JOIN\n     (SELECT complaint_outcome_code,\n             product_id,\n             COUNT(*) AS n\n      FROM complaints\n      GROUP BY complaint_outcome_code,\n               product_id) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY product_name\n", "sql2": "SELECT t1.product_name,\n       count(*)\nFROM products AS t1\nJOIN complaints AS t2 ON t1.product_id = t2.product_id\nGROUP BY t1.product_name", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0008", "sql1": "\nSELECT email_address,\n       phone_number\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM complaints AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       phone_number\nFROM customers\nWHERE customer_id NOT IN\n    (SELECT customer_id\n     FROM complaints)", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0015", "sql1": "\nSELECT complaint_status_code\nFROM\n  (SELECT complaint_outcome_code,\n          complaint_status_code,\n          COUNT(*) AS n\n   FROM complaints\n   GROUP BY complaint_outcome_code,\n            complaint_status_code)\nWHERE (n >= 3)\nORDER BY complaint_status_code\n", "sql2": "SELECT complaint_status_code\nFROM complaints\nGROUP BY complaint_status_code\nHAVING count(*) > 3", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0019", "sql1": "\nSELECT n_distinct AS count_distinct_complaint_type_code_\nFROM\n  (SELECT complaint_outcome_code,\n          COUNT(DISTINCT complaint_type_code) AS n_distinct\n   FROM complaints\n   GROUP BY complaint_outcome_code)\nORDER BY count_distinct_complaint_type_code_\n", "sql2": "SELECT count(DISTINCT complaint_type_code)\nFROM complaints", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0002", "sql1": "\nSELECT email_address,\n       phone_number\nFROM customers\nORDER BY email_address\n", "sql2": "SELECT email_address,\n       phone_number\nFROM customers\nORDER BY email_address,\n         phone_number", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0017", "sql1": "\nSELECT DISTINCT MAX(n) OVER () AS count___\nFROM\n  (SELECT customer_type_code,\n          COUNT(*) AS n\n   FROM customers\n   GROUP BY customer_type_code)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers\nGROUP BY customer_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0021", "sql1": "\nSELECT `complaint_status_code`,\n       `n_distinct` AS `count___`\nFROM\n  (SELECT `complaint_status_code`,\n          `complaint_type_code`,\n          COUNT(DISTINCT `complaint_type_code`) AS `n_distinct`\n   FROM `complaints`\n   GROUP BY `complaint_status_code`,\n            `complaint_type_code`)\nWHERE (`complaint_type_code` = 'Product Failure')\nORDER BY complaint_status_code\n", "sql2": "SELECT complaint_status_code,\n       count(*)\nFROM complaints\nWHERE complaint_type_code = 'Product Failure'\nGROUP BY complaint_status_code", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0020", "sql1": "\nSELECT `address_line_1`,\n       `address_line_2`\nFROM `customers`\nWHERE (`email_address` = 'vbogisich@example.org')\nORDER BY address_line_1\n", "sql2": "SELECT address_line_1,\n       address_line_2\nFROM customers\nWHERE email_address = 'vbogisich@example.org'", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0011", "sql1": "\nSELECT product_name,\n       product_category_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT product_category_code,\n                product_name,\n                MAX(product_price) AS maxproduct_price\n         FROM products\n         GROUP BY product_category_code,\n                  product_name)\n      ORDER BY maxproduct_price DESC)\n   LIMIT 1)\n", "sql2": "SELECT product_name,\n       product_category_code\nFROM products\nORDER BY product_price DESC\nLIMIT 1", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customer_complaints/0010", "sql1": "\nSELECT `product_description`\nFROM `products`\nWHERE (`product_name` = 'Chocolate')\nORDER BY product_description\n", "sql2": "SELECT product_description\nFROM products\nWHERE product_name = 'Chocolate'", "schema": "spider/customer_complaints/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customer_complaints/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/company_1/0005", "sql1": "\nSELECT fname,\n       lname\nFROM employee\nWHERE (salary > 30000)\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM employee\nWHERE salary > 30000", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_1/0004", "sql1": "\nSELECT `dname`\nFROM\n  (SELECT `LHS`.`dname` AS `dname`,\n          `LHS`.`dnumber` AS `dnumber`,\n          `LHS`.`mgr_ssn` AS `mgr_ssn`,\n          `LHS`.`mgr_start_date` AS `mgr_start_date`,\n          `RHS`.`dlocation` AS `dlocation`\n   FROM `department` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dept_locations`\n      WHERE (`dlocation` = 'Houston')) AS RHS ON (LHS.dnumber = RHS.dnumber))\nORDER BY dname\n", "sql2": "SELECT t1.dname\nFROM department AS t1\nJOIN dept_locations AS t2 ON t1.dnumber = t2.dnumber\nWHERE t2.dlocation = 'Houston'", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_1/0003", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `sex`,\n          COUNT(*) AS `n`\n   FROM `dependent`\n   GROUP BY `sex`)\nWHERE (`sex` = 'F')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM dependent\nWHERE sex = 'F'", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_1/0002", "sql1": "\nSELECT `dependent_name`\nFROM `dependent`\nWHERE (`relationship` = 'Spouse')\nORDER BY dependent_name\n", "sql2": "SELECT Dependent_name\nFROM dependent\nWHERE relationship = 'Spouse'", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_1/0001", "sql1": "\nSELECT dname\nFROM department\nORDER BY dname\n", "sql2": "SELECT dname\nFROM department\nORDER BY mgr_start_date", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_1/0007", "sql1": "\nSELECT fname,\n       lname,\n       address\nFROM employee\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname,\n       address\nFROM employee\nORDER BY Bdate", "schema": "spider/company_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0009", "sql1": "\nSELECT `document_type_code`,\n       `document_name`,\n       `document_description`\nFROM `documents`\nWHERE (`document_name` = 'Noel CV'\n       OR `document_name` = 'King Book')\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       document_name,\n       document_description\nFROM Documents\nWHERE document_name = 'Noel CV'\n  OR document_name = 'King Book'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0025", "sql1": "\nSELECT project_id,\n       project_details\nFROM projects\nORDER BY project_id\n", "sql2": "SELECT project_id,\n       project_details\nFROM Projects", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0033", "sql1": "\nSELECT budget_type_code,\n       budget_type_description,\n       document_id\nFROM\n  (SELECT LHS.budget_type_code AS budget_type_code,\n          LHS.budget_type_description AS budget_type_description,\n          RHS.document_id AS document_id,\n          RHS.document_details AS document_details\n   FROM ref_budget_codes AS LHS\n   INNER JOIN documents_with_expenses AS RHS ON (LHS.budget_type_code = RHS.budget_type_code))\nORDER BY budget_type_code\n", "sql2": "SELECT T2.budget_type_code,\n       T2.budget_type_description,\n       T1.document_id\nFROM Documents_with_expenses AS T1\nJOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0013", "sql1": "\nSELECT `document_name`,\n       `document_date`\nFROM\n  (SELECT `LHS`.`project_id` AS `project_id`,\n          `LHS`.`project_details` AS `project_details`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_type_code` AS `document_type_code`,\n          `RHS`.`document_date` AS `document_date`,\n          `RHS`.`document_name` AS `document_name`,\n          `RHS`.`document_description` AS `document_description`,\n          `RHS`.`other_details` AS `other_details`\n   FROM `projects` AS `LHS`\n   INNER JOIN `documents` AS `RHS` ON (`LHS`.`project_id` = `RHS`.`project_id`))\nWHERE (`project_details` = 'Graph Database project')\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       document_date\nFROM Documents AS T1\nJOIN projects AS T2 ON T1.project_id = T2.project_id\nWHERE T2.project_details = 'Graph Database project'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0005", "sql1": "\nSELECT STATEMENT_ID,\n       statement_details,\n       account_details\nFROM\n  (SELECT LHS.statement_id AS STATEMENT_ID,\n          LHS.statement_details AS statement_details,\n          RHS.account_id AS account_id,\n          RHS.account_details AS account_details\n   FROM statements AS LHS\n   INNER JOIN accounts AS RHS ON (LHS.statement_id = RHS.statement_id))\nORDER BY STATEMENT_ID\n", "sql2": "SELECT T1.statement_id,\n       T2.statement_details,\n       T1.account_details\nFROM Accounts AS T1\nJOIN Statements AS T2 ON T1.statement_id = T2.statement_id", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0029", "sql1": "\nSELECT budget_type_code,\n       budget_type_description\nFROM ref_budget_codes\nORDER BY budget_type_code\n", "sql2": "SELECT budget_type_code,\n       budget_type_description\nFROM Ref_budget_codes", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0028", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM ref_budget_codes)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Ref_budget_codes", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0004", "sql1": "\nSELECT STATEMENT_ID,\n       statement_details\nFROM statements\nORDER BY STATEMENT_ID\n", "sql2": "SELECT STATEMENT_ID,\n       statement_details\nFROM Statements", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0012", "sql1": "\nSELECT `n` AS `count___`,\n       `project_id`\nFROM\n  (SELECT `project_id`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_type_code` = 'BK'))\n   GROUP BY project_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       project_id\nFROM Documents\nWHERE document_type_code = 'BK'\nGROUP BY project_id", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0032", "sql1": "\nSELECT `document_id`\nFROM `documents_with_expenses`\nWHERE (`budget_type_code` = 'SF')\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents_with_expenses\nWHERE budget_type_code = 'SF'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0024", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM projects\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Projects", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0008", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM documents\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM statements\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Statements", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0019", "sql1": "\nSELECT document_type_code\nFROM\n  (SELECT document_type_code,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_type_code)\nWHERE (n < 3)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code\nFROM Documents\nGROUP BY document_type_code\nHAVING count(*) < 3", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0023", "sql1": "\nSELECT document_type_name,\n       document_type_description,\n       document_date\nFROM\n  (SELECT LHS.document_type_code AS document_type_code,\n          LHS.document_type_name AS document_type_name,\n          LHS.document_type_description AS document_type_description,\n          RHS.document_id AS document_id,\n          RHS.project_id AS project_id,\n          RHS.document_date AS document_date,\n          RHS.document_name AS document_name,\n          RHS.document_description AS document_description,\n          RHS.other_details AS other_details\n   FROM ref_document_types AS LHS\n   INNER JOIN documents AS RHS ON (LHS.document_type_code = RHS.document_type_code))\nORDER BY document_type_name\n", "sql2": "SELECT T1.document_type_name,\n       T1.document_type_description,\n       T2.Document_date\nFROM Ref_document_types AS T1\nJOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0035", "sql1": "\nSELECT budget_type_code,\n       n AS count___\nFROM\n  (SELECT budget_type_code,\n          COUNT(*) AS n\n   FROM documents_with_expenses\n   GROUP BY budget_type_code)\nORDER BY budget_type_code\n", "sql2": "SELECT budget_type_code,\n       count(*)\nFROM Documents_with_expenses\nGROUP BY budget_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0034", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT `LHS`.`budget_type_code` AS `budget_type_code`,\n          `LHS`.`budget_type_description` AS `budget_type_description`,\n          `RHS`.`document_id` AS `document_id`,\n          `RHS`.`document_details` AS `document_details`\n   FROM `ref_budget_codes` AS `LHS`\n   INNER JOIN `documents_with_expenses` AS `RHS` ON (`LHS`.`budget_type_code` = `RHS`.`budget_type_code`))\nWHERE (`budget_type_description` = 'Government')\nORDER BY document_id\n", "sql2": "SELECT T1.document_id\nFROM Documents_with_expenses AS T1\nJOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code\nWHERE T2.budget_type_Description = 'Government'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0022", "sql1": "\nSELECT `document_type_description`\nFROM `ref_document_types`\nWHERE (`document_type_name` = 'Film')\nORDER BY document_type_description\n", "sql2": "SELECT document_type_description\nFROM Ref_document_types\nWHERE document_type_name = 'Film'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0038", "sql1": "\nSELECT `document_id`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_type_code` = 'CV')) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM documents_with_expenses AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nWHERE document_type_code = 'CV'\nEXCEPT\nSELECT document_id\nFROM Documents_with_expenses", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0002", "sql1": "\nSELECT account_id,\n       account_details\nFROM accounts\nORDER BY account_id\n", "sql2": "SELECT account_id,\n       account_details\nFROM Accounts", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0014", "sql1": "\nSELECT project_id,\n       n AS count___\nFROM\n  (SELECT document_description,\n          project_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_description,\n            project_id)\nORDER BY project_id\n", "sql2": "SELECT project_id,\n       count(*)\nFROM Documents\nGROUP BY project_id", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Accounts", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0017", "sql1": "\nSELECT document_type_code,\n       n AS count___\nFROM\n  (SELECT document_type_code,\n          other_details,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY document_type_code,\n            other_details)\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       count(*)\nFROM Documents\nGROUP BY document_type_code", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0040", "sql1": "\nSELECT n_distinct AS count___\nFROM\n  (SELECT document_description,\n          COUNT(DISTINCT document_id) AS n_distinct\n   FROM\n     (SELECT *\n      FROM documents AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM documents_with_expenses AS RHS\n           WHERE (LHS.document_id = RHS.document_id) ))\n   GROUP BY document_description)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents\nWHERE document_id NOT IN\n    (SELECT document_id\n     FROM Documents_with_expenses)", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0037", "sql1": "\nSELECT document_id\nFROM\n  (SELECT *\n   FROM documents AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM documents_with_expenses AS RHS\n        WHERE (LHS.document_id = RHS.document_id) ))\nORDER BY document_id\n", "sql2": "SELECT document_id\nFROM Documents\nEXCEPT\nSELECT document_id\nFROM Documents_with_expenses", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0021", "sql1": "\nSELECT document_type_code,\n       document_type_name,\n       document_type_description\nFROM ref_document_types\nORDER BY document_type_code\n", "sql2": "SELECT document_type_code,\n       document_type_name,\n       document_type_description\nFROM Ref_document_types", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0020", "sql1": "\nSELECT `statement_details`,\n       `document_name`\nFROM\n  (SELECT `document_id`,\n          `document_type_code`,\n          `project_id`,\n          `document_date`,\n          `document_name`,\n          `document_description`,\n          `other_details`,\n          `statement_details`,\n          `document_id` AS `statement_id`\n   FROM\n     (SELECT `LHS`.`document_id` AS `document_id`,\n             `LHS`.`document_type_code` AS `document_type_code`,\n             `LHS`.`project_id` AS `project_id`,\n             `LHS`.`document_date` AS `document_date`,\n             `LHS`.`document_name` AS `document_name`,\n             `LHS`.`document_description` AS `document_description`,\n             `LHS`.`other_details` AS `other_details`,\n             `RHS`.`statement_details` AS `statement_details`\n      FROM `documents` AS `LHS`\n      INNER JOIN `statements` AS `RHS` ON (`LHS`.`document_id` = `RHS`.`statement_id`)))\nWHERE (`statement_details` = 'Private Project')\nORDER BY statement_details\n", "sql2": "SELECT T1.statement_details,\n       T2.document_name\nFROM Statements AS T1\nJOIN Documents AS T2 ON T1.statement_id = T2.document_id\nWHERE T1.statement_details = 'Private Project'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0036", "sql1": "\nSELECT budget_type_code\nFROM\n  (SELECT LHS.budget_type_code AS budget_type_code,\n          LHS.n AS n\n   FROM\n     (SELECT budget_type_code,\n             COUNT(*) AS n\n      FROM documents_with_expenses\n      GROUP BY budget_type_code) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS maxn\n      FROM\n        (SELECT budget_type_code,\n                COUNT(*) AS n\n         FROM documents_with_expenses\n         GROUP BY budget_type_code)) AS RHS ON (LHS.n = RHS.maxn))\nORDER BY budget_type_code\n", "sql2": "SELECT budget_type_code\nFROM Documents_with_expenses\nGROUP BY budget_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0016", "sql1": "\nSELECT project_id\nFROM\n  (SELECT project_id,\n          COUNT(*) AS n\n   FROM documents\n   GROUP BY project_id)\nWHERE (n >= 2)\nORDER BY project_id\n", "sql2": "SELECT project_id\nFROM Documents\nGROUP BY project_id\nHAVING count(*) >= 2", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0031", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM documents_with_expenses\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Documents_with_expenses", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0027", "sql1": "\nSELECT `project_details`\nFROM\n  (SELECT `LHS`.`document_id` AS `document_id`,\n          `LHS`.`document_type_code` AS `document_type_code`,\n          `LHS`.`project_id` AS `project_id`,\n          `LHS`.`document_date` AS `document_date`,\n          `LHS`.`document_name` AS `document_name`,\n          `LHS`.`document_description` AS `document_description`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`project_details` AS `project_details`\n   FROM\n     (SELECT *\n      FROM `documents`\n      WHERE (`document_name` = 'King Book')) AS LHS\n   LEFT JOIN projects AS RHS ON (LHS.project_id = RHS.project_id))\nORDER BY project_details\n", "sql2": "SELECT T1.project_details\nFROM Projects AS T1\nJOIN Documents AS T2 ON T1.project_id = T2.project_id\nWHERE T2.document_name = 'King Book'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0007", "sql1": "\nSELECT DISTINCT STATEMENT_ID,\n                statement_details\nFROM\n  (SELECT LHS.statement_id AS STATEMENT_ID,\n          LHS.statement_details AS statement_details,\n          LHS.account_id AS account_id,\n          LHS.account_details AS account_details,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.statement_id AS STATEMENT_ID,\n             LHS.statement_details AS statement_details,\n             LHS.account_id AS account_id,\n             LHS.account_details AS account_details,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.statement_id AS STATEMENT_ID,\n                LHS.statement_details AS statement_details,\n                RHS.account_id AS account_id,\n                RHS.account_details AS account_details\n         FROM statements AS LHS\n         INNER JOIN accounts AS RHS ON (LHS.statement_id = RHS.statement_id)) AS LHS\n      INNER JOIN\n        (SELECT STATEMENT_ID,\n                COUNT(*) AS n\n         FROM accounts\n         GROUP BY STATEMENT_ID) AS RHS ON (LHS.statement_id = RHS.statement_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT STATEMENT_ID,\n                COUNT(*) AS n\n         FROM accounts\n         GROUP BY STATEMENT_ID)) AS RHS ON (LHS.n = RHS.n))\nORDER BY STATEMENT_ID\n", "sql2": "SELECT T1.statement_id,\n       T2.statement_details\nFROM Accounts AS T1\nJOIN Statements AS T2 ON T1.statement_id = T2.statement_id\nGROUP BY T1.statement_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0011", "sql1": "\nSELECT `document_name`,\n       `document_id`\nFROM `documents`\nWHERE (`document_type_code` = 'BK')\nORDER BY document_name\n", "sql2": "SELECT document_name,\n       document_id\nFROM Documents\nWHERE document_type_code = 'BK'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0010", "sql1": "\nSELECT document_id,\n       document_name\nFROM documents\nORDER BY document_id\n", "sql2": "SELECT document_id,\n       document_name\nFROM Documents", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0006", "sql1": "\nSELECT STATEMENT_ID,\n       n AS count___\nFROM\n  (SELECT STATEMENT_ID,\n          COUNT(*) AS n\n   FROM accounts\n   GROUP BY STATEMENT_ID)\nORDER BY STATEMENT_ID\n", "sql2": "SELECT STATEMENT_ID,\n       count(*)\nFROM Accounts\nGROUP BY STATEMENT_ID", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0026", "sql1": "\nSELECT project_id,\n       project_details\nFROM\n  (SELECT LHS.project_id AS project_id,\n          LHS.project_details AS project_details,\n          RHS.document_description AS document_description,\n          RHS.n AS n\n   FROM projects AS LHS\n   INNER JOIN\n     (SELECT document_description,\n             project_id,\n             COUNT(*) AS n\n      FROM documents\n      GROUP BY document_description,\n               project_id) AS RHS ON (LHS.project_id = RHS.project_id))\nWHERE (n >= 2)\nORDER BY project_id\n", "sql2": "SELECT T1.project_id,\n       T1.project_details\nFROM Projects AS T1\nJOIN Documents AS T2 ON T1.project_id = T2.project_id\nGROUP BY T1.project_id\nHAVING count(*) > 2", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Docs_and_Epenses/0030", "sql1": "\nSELECT `budget_type_description`\nFROM `ref_budget_codes`\nWHERE (`budget_type_code` = 'ORG')\nORDER BY budget_type_description\n", "sql2": "SELECT budget_type_description\nFROM Ref_budget_codes\nWHERE budget_type_code = 'ORG'", "schema": "spider/cre_Docs_and_Epenses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Docs_and_Epenses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0009", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM policies AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_details\n", "sql2": "SELECT customer_details\nFROM customers\nEXCEPT\nSELECT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0013", "sql1": "\nSELECT `customer_details`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`policy_id` AS `policy_id`,\n          `RHS`.`policy_type_code` AS `policy_type_code`,\n          `RHS`.`start_date` AS `start_date`,\n          `RHS`.`end_date` AS `end_date`\n   FROM `customers` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `policies`\n      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.policy_type_code = 'Deputy'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0005", "sql1": "\nSELECT DISTINCT SUM(amount_piad) OVER () AS sum_amount_piad_,\n                                      meanamount_piad AS avg_amount_piad_\nFROM\n  (SELECT claim_header_id,\n          claim_status_code,\n          claim_type_code,\n          policy_id,\n          date_of_claim,\n          date_of_settlement,\n          amount_claimed,\n          amount_piad,\n          AVG(amount_piad) OVER () AS meanamount_piad\n   FROM claim_headers)\nORDER BY sum_amount_piad_\n", "sql2": "SELECT sum(amount_piad),\n       avg(amount_piad)\nFROM claim_headers", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0004", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT policy_type_code,\n          COUNT(*) AS n\n   FROM policies\n   GROUP BY policy_type_code)\nWHERE (n >= 2)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM policies\nGROUP BY policy_type_code\nHAVING count(*) > 2", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0008", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_details AS customer_details,\n          LHS.policy_id AS policy_id,\n          LHS.policy_type_code AS policy_type_code,\n          LHS.start_date AS start_date,\n          LHS.end_date AS end_date,\n          LHS.claim_header_id AS claim_header_id,\n          LHS.claim_status_code AS claim_status_code,\n          LHS.claim_type_code AS claim_type_code,\n          LHS.date_of_claim AS date_of_claim,\n          LHS.date_of_settlement AS date_of_settlement,\n          LHS.amount_claimed AS amount_claimed,\n          LHS.amount_piad AS amount_piad\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_details AS customer_details,\n             LHS.policy_id AS policy_id,\n             LHS.policy_type_code AS policy_type_code,\n             LHS.start_date AS start_date,\n             LHS.end_date AS end_date,\n             RHS.claim_header_id AS claim_header_id,\n             RHS.claim_status_code AS claim_status_code,\n             RHS.claim_type_code AS claim_type_code,\n             RHS.date_of_claim AS date_of_claim,\n             RHS.date_of_settlement AS date_of_settlement,\n             RHS.amount_claimed AS amount_claimed,\n             RHS.amount_piad AS amount_piad\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_details AS customer_details,\n                RHS.policy_id AS policy_id,\n                RHS.policy_type_code AS policy_type_code,\n                RHS.start_date AS start_date,\n                RHS.end_date AS end_date\n         FROM customers AS LHS\n         INNER JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN claim_headers AS RHS ON (LHS.policy_id = RHS.policy_id)) AS LHS\n   INNER JOIN\n     (SELECT claim_header_id,\n             claim_status_code,\n             claim_type_code,\n             policy_id,\n             date_of_claim,\n             date_of_settlement,\n             amount_claimed,\n             MIN(amount_piad) OVER () AS amount_piad\n      FROM claim_headers) AS RHS ON (LHS.policy_id = RHS.policy_id\n                                        AND LHS.claim_header_id = RHS.claim_header_id\n                                        AND LHS.claim_status_code = RHS.claim_status_code\n                                        AND LHS.claim_type_code = RHS.claim_type_code\n                                        AND LHS.date_of_claim = RHS.date_of_claim\n                                        AND LHS.date_of_settlement = RHS.date_of_settlement\n                                        AND LHS.amount_claimed = RHS.amount_claimed\n                                        AND LHS.amount_piad = RHS.amount_piad))\nORDER BY customer_details\n", "sql2": "SELECT t3.customer_details\nFROM claim_headers AS t1\nJOIN policies AS t2 ON t1.policy_id = t2.policy_id\nJOIN customers AS t3 ON t2.customer_id = t3.customer_id\nWHERE t1.amount_piad =\n    (SELECT min(amount_piad)\n     FROM claim_headers)", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0003", "sql1": "\nSELECT DISTINCT policy_type_code_other AS policy_type_code\nFROM\n  (SELECT LHS.policy_type_code AS policy_type_code,\n          LHS.n AS n,\n          LHS.maxn AS maxn,\n          RHS.policy_type_code AS policy_type_code_other,\n          RHS.n AS n_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT policy_type_code,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT policy_type_code,\n                COUNT(*) AS n\n         FROM policies\n         GROUP BY policy_type_code)) AS LHS\n   CROSS JOIN\n     (SELECT policy_type_code,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT policy_type_code,\n                COUNT(*) AS n\n         FROM policies\n         GROUP BY policy_type_code)) AS RHS)\nWHERE (maxn = maxn_other\n       AND n_other >= maxn_other)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM policies\nGROUP BY policy_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0019", "sql1": "\nSELECT n_distinct AS count_distinct_claim_outcome_code_\nFROM\n  (SELECT COUNT(DISTINCT claim_outcome_code) AS n_distinct\n   FROM claims_processing)\nORDER BY count_distinct_claim_outcome_code_\n", "sql2": "SELECT count(DISTINCT claim_outcome_code)\nFROM claims_processing", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0018", "sql1": "\nSELECT `claim_status_description`\nFROM `claims_processing_stages`\nWHERE (`claim_status_name` = 'Open')\nORDER BY claim_status_description\n", "sql2": "SELECT claim_status_description\nFROM claims_processing_stages\nWHERE claim_status_name = 'Open'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0002", "sql1": "\nSELECT `policy_type_code`\nFROM\n  (SELECT *\n   FROM `policies` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `customers`\n           WHERE (`customer_details` != 'Dayana Robel')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nWHERE t2.customer_details = 'Dayana Robel'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0014", "sql1": "\nSELECT `customer_details`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`policy_id` AS `policy_id`,\n          `RHS`.`policy_type_code` AS `policy_type_code`,\n          `RHS`.`start_date` AS `start_date`,\n          `RHS`.`end_date` AS `end_date`\n   FROM `customers` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `policies`\n      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT t2.customer_details\nFROM policies AS t1\nJOIN customers AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.policy_type_code = 'Deputy'\n  OR t1.policy_type_code = 'Uniform'", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0001", "sql1": "\nSELECT customer_details\nFROM customers\nORDER BY customer_details\n", "sql2": "SELECT customer_details\nFROM customers\nORDER BY customer_details", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0016", "sql1": "\nSELECT policy_type_code,\n       n AS count___\nFROM\n  (SELECT policy_type_code,\n          COUNT(*) AS n\n   FROM policies\n   GROUP BY policy_type_code)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code,\n       count(*)\nFROM policies\nGROUP BY policy_type_code", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0007", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_details AS customer_details,\n          LHS.policy_id AS policy_id,\n          LHS.policy_type_code AS policy_type_code,\n          LHS.start_date AS start_date,\n          LHS.end_date AS end_date,\n          LHS.claim_header_id AS claim_header_id,\n          LHS.claim_status_code AS claim_status_code,\n          LHS.claim_type_code AS claim_type_code,\n          LHS.date_of_claim AS date_of_claim,\n          LHS.date_of_settlement AS date_of_settlement,\n          LHS.amount_claimed AS amount_claimed,\n          LHS.amount_piad AS amount_piad\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_details AS customer_details,\n             LHS.policy_id AS policy_id,\n             LHS.policy_type_code AS policy_type_code,\n             LHS.start_date AS start_date,\n             LHS.end_date AS end_date,\n             RHS.claim_header_id AS claim_header_id,\n             RHS.claim_status_code AS claim_status_code,\n             RHS.claim_type_code AS claim_type_code,\n             RHS.date_of_claim AS date_of_claim,\n             RHS.date_of_settlement AS date_of_settlement,\n             RHS.amount_claimed AS amount_claimed,\n             RHS.amount_piad AS amount_piad\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_details AS customer_details,\n                RHS.policy_id AS policy_id,\n                RHS.policy_type_code AS policy_type_code,\n                RHS.start_date AS start_date,\n                RHS.end_date AS end_date\n         FROM customers AS LHS\n         INNER JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN claim_headers AS RHS ON (LHS.policy_id = RHS.policy_id)) AS LHS\n   INNER JOIN\n     (SELECT claim_header_id,\n             claim_status_code,\n             claim_type_code,\n             policy_id,\n             date_of_claim,\n             date_of_settlement,\n             MAX(amount_claimed) OVER () AS amount_claimed,\n                                      amount_piad\n      FROM claim_headers) AS RHS ON (LHS.policy_id = RHS.policy_id\n                                        AND LHS.claim_header_id = RHS.claim_header_id\n                                        AND LHS.claim_status_code = RHS.claim_status_code\n                                        AND LHS.claim_type_code = RHS.claim_type_code\n                                        AND LHS.date_of_claim = RHS.date_of_claim\n                                        AND LHS.date_of_settlement = RHS.date_of_settlement\n                                        AND LHS.amount_claimed = RHS.amount_claimed\n                                        AND LHS.amount_piad = RHS.amount_piad))\nORDER BY customer_details\n", "sql2": "SELECT t3.customer_details\nFROM claim_headers AS t1\nJOIN policies AS t2 ON t1.policy_id = t2.policy_id\nJOIN customers AS t3 ON t2.customer_id = t3.customer_id\nWHERE t1.amount_claimed =\n    (SELECT max(amount_claimed)\n     FROM claim_headers)", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_and_eClaims/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM claims_processing_stages\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM claims_processing_stages", "schema": "spider/insurance_and_eClaims/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_and_eClaims/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0013", "sql1": "\nSELECT DISTINCT customer_details,\n                customer_id\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_details AS customer_details,\n          LHS.policy_id AS policy_id,\n          LHS.policy_type_code AS policy_type_code,\n          LHS.start_date AS start_date,\n          LHS.end_date AS end_date,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_details AS customer_details,\n             LHS.policy_id AS policy_id,\n             LHS.policy_type_code AS policy_type_code,\n             LHS.start_date AS start_date,\n             LHS.end_date AS end_date,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_details AS customer_details,\n                RHS.policy_id AS policy_id,\n                RHS.policy_type_code AS policy_type_code,\n                RHS.start_date AS start_date,\n                RHS.end_date AS end_date\n         FROM customers AS LHS\n         INNER JOIN customer_policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customer_policies\n         GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customer_policies\n         GROUP BY customer_id)\n      WHERE (n != 1)) AS RHS ON (LHS.customer_id = RHS.customer_id\n                                 AND LHS.n = RHS.n))\nORDER BY customer_details\n", "sql2": "SELECT T1.customer_details,\n       T1.customer_id\nFROM Customers AS T1\nJOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id\nGROUP BY T1.customer_id\nHAVING count(*) > 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0005", "sql1": "\nSELECT minamount_settled AS amount_settled,\n       amount_claimed\nFROM\n  (SELECT LHS.claim_id AS claim_id,\n          LHS.policy_id AS policy_id,\n          LHS.date_claim_made AS date_claim_made,\n          LHS.date_claim_settled AS date_claim_settled,\n          LHS.amount_claimed AS amount_claimed,\n          LHS.amount_settled AS amount_settled,\n          LHS.minamount_settled AS minamount_settled,\n          RHS.policy_id AS policy_id_other,\n          RHS.date_claim_made AS date_claim_made_other,\n          RHS.date_claim_settled AS date_claim_settled_other,\n          RHS.amount_claimed AS amount_claimed_other\n   FROM\n     (SELECT claim_id,\n             policy_id,\n             date_claim_made,\n             date_claim_settled,\n             amount_claimed,\n             amount_settled,\n             MIN(amount_settled) OVER () AS minamount_settled\n      FROM claims) AS LHS\n   INNER JOIN claims AS RHS ON (LHS.claim_id = RHS.claim_id\n                                   AND LHS.minamount_settled = RHS.amount_settled))\nORDER BY amount_settled\n", "sql2": "SELECT Amount_Settled,\n       Amount_Claimed\nFROM Claims\nORDER BY Amount_Settled ASC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0004", "sql1": "\nSELECT amount_settled,\n       maxamount_claimed AS amount_claimed\nFROM\n  (SELECT claim_id,\n          policy_id,\n          date_claim_made,\n          date_claim_settled,\n          amount_claimed,\n          amount_settled,\n          amount_claimed AS maxamount_claimed,\n          claim_id_other,\n          policy_id_other,\n          date_claim_made_other,\n          date_claim_settled_other,\n          amount_settled_other\n   FROM\n     (SELECT LHS.claim_id AS claim_id,\n             LHS.policy_id AS policy_id,\n             LHS.date_claim_made AS date_claim_made,\n             LHS.date_claim_settled AS date_claim_settled,\n             LHS.amount_claimed AS amount_claimed,\n             LHS.amount_settled AS amount_settled,\n             LHS.maxamount_claimed AS maxamount_claimed,\n             RHS.claim_id AS claim_id_other,\n             RHS.policy_id AS policy_id_other,\n             RHS.date_claim_made AS date_claim_made_other,\n             RHS.date_claim_settled AS date_claim_settled_other,\n             RHS.amount_settled AS amount_settled_other\n      FROM\n        (SELECT claim_id,\n                policy_id,\n                date_claim_made,\n                date_claim_settled,\n                amount_claimed,\n                amount_settled,\n                MAX(amount_claimed) OVER () AS maxamount_claimed\n         FROM claims) AS LHS\n      INNER JOIN\n        (SELECT claim_id,\n                policy_id,\n                date_claim_made,\n                date_claim_settled,\n                amount_claimed,\n                amount_settled,\n                MAX(amount_claimed) OVER () AS maxamount_claimed\n         FROM claims) AS RHS ON (LHS.amount_claimed = RHS.maxamount_claimed\n                                    AND LHS.maxamount_claimed = RHS.amount_claimed)))\nORDER BY amount_settled\n", "sql2": "SELECT Amount_Settled,\n       Amount_Claimed\nFROM Claims\nORDER BY Amount_Claimed DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0012", "sql1": "\nSELECT DISTINCT SUM(amount_settled) OVER () AS sum_amount_settled_\nFROM settlements\nORDER BY sum_amount_settled_\n", "sql2": "SELECT sum(Amount_Settled)\nFROM Settlements", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0024", "sql1": "\nSELECT sumamount_claimed AS sum_amount_claimed_\nFROM\n  (SELECT SUM(amount_claimed) AS sumamount_claimed\n   FROM claims)\nORDER BY sum_amount_claimed_\n", "sql2": "SELECT sum(Amount_Claimed)\nFROM Claims", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0008", "sql1": "\nSELECT claim_id,\n       n AS count___\nFROM\n  (SELECT claim_id,\n          policy_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.settlement_id AS settlement_id,\n             LHS.claim_id AS claim_id,\n             LHS.date_claim_made AS date_claim_made,\n             LHS.date_claim_settled AS date_claim_settled,\n             LHS.amount_claimed AS amount_claimed,\n             LHS.amount_settled AS amount_settled,\n             LHS.customer_policy_id AS customer_policy_id,\n             RHS.policy_id AS policy_id\n      FROM settlements AS LHS\n      LEFT JOIN claims AS RHS ON (LHS.claim_id = RHS.claim_id\n                                     AND LHS.date_claim_made = RHS.date_claim_made\n                                     AND LHS.date_claim_settled = RHS.date_claim_settled\n                                     AND LHS.amount_claimed = RHS.amount_claimed\n                                     AND LHS.amount_settled = RHS.amount_settled))\n   GROUP BY claim_id,\n            policy_id)\nORDER BY claim_id\n", "sql2": "SELECT T1.Claim_id,\n       count(*)\nFROM Claims AS T1\nJOIN Settlements AS T2 ON T1.claim_id = T2.claim_id\nGROUP BY T1.claim_id", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0015", "sql1": "\nSELECT DISTINCT payment_method_code_other AS payment_method_code\nFROM\n  (SELECT LHS.payment_method_code AS payment_method_code,\n          LHS.n AS n,\n          LHS.maxn AS maxn,\n          RHS.payment_method_code AS payment_method_code_other,\n          RHS.n AS n_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT payment_method_code,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT payment_method_code,\n                COUNT(*) AS n\n         FROM payments\n         GROUP BY payment_method_code)) AS LHS\n   CROSS JOIN\n     (SELECT payment_method_code,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT payment_method_code,\n                COUNT(*) AS n\n         FROM payments\n         GROUP BY payment_method_code)) AS RHS)\nWHERE (n < maxn_other\n       AND maxn <= n_other)\nORDER BY payment_method_code\n", "sql2": "SELECT Payment_Method_Code\nFROM Payments\nGROUP BY Payment_Method_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0003", "sql1": "\nSELECT payment_method_code,\n       date_payment_made,\n       amount_payment\nFROM payments\nORDER BY payment_method_code\n", "sql2": "SELECT Payment_Method_Code,\n       Date_Payment_Made,\n       Amount_Payment\nFROM Payments\nORDER BY Date_Payment_Made ASC", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0019", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT end_date,\n                policy_type_code,\n                n,\n                MAX(n) OVER () AS maxn\n         FROM\n           (SELECT end_date,\n                   policy_type_code,\n                   COUNT(*) AS n\n            FROM customer_policies\n            GROUP BY end_date,\n                     policy_type_code))\n      ORDER BY maxn)\n   LIMIT 1)\n", "sql2": "SELECT Policy_Type_Code\nFROM Customer_Policies\nGROUP BY Policy_Type_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0022", "sql1": "\nSELECT customer_details\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM customer_policies AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_details\n", "sql2": "SELECT customer_details\nFROM Customers\nEXCEPT\nSELECT T1.customer_details\nFROM Customers AS T1\nJOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0018", "sql1": "\nSELECT customer_details\nFROM customers\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT customer_details\nFROM Customers", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0014", "sql1": "\nSELECT date_claim_made,\n       date_claim_settled\nFROM settlements\nORDER BY date_claim_made\n", "sql2": "SELECT Date_Claim_Made,\n       Date_Claim_Settled\nFROM Settlements", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0017", "sql1": "\nSELECT sumamount_payment AS sum_amount_payment_\nFROM\n  (SELECT SUM(amount_payment) AS sumamount_payment\n   FROM payments)\nORDER BY sum_amount_payment_\n", "sql2": "SELECT sum(Amount_Payment)\nFROM Payments", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0021", "sql1": "\nSELECT `payment_id`,\n       `date_payment_made`,\n       `amount_payment`\nFROM `payments`\nWHERE (`payment_method_code` = 'Visa')\nORDER BY payment_id\n", "sql2": "SELECT Payment_ID,\n       Date_Payment_Made,\n       Amount_Payment\nFROM Payments\nWHERE Payment_Method_Code = 'Visa'", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0020", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM settlements\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Settlements", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0016", "sql1": "\nSELECT payment_method_code\nFROM\n  (SELECT payment_method_code,\n          MIN(n) AS minn\n   FROM\n     (SELECT payment_method_code,\n             settlement_id,\n             COUNT(*) AS n\n      FROM\n        (SELECT payment_id,\n                payment_id AS settlement_id,\n                payment_method_code,\n                date_payment_made,\n                amount_payment,\n                payment_id_other,\n                payment_method_code_other,\n                date_payment_made_other,\n                amount_payment_other\n         FROM\n           (SELECT LHS.payment_id AS payment_id,\n                   LHS.settlement_id AS settlement_id,\n                   LHS.payment_method_code AS payment_method_code,\n                   LHS.date_payment_made AS date_payment_made,\n                   LHS.amount_payment AS amount_payment,\n                   RHS.payment_id AS payment_id_other,\n                   RHS.payment_method_code AS payment_method_code_other,\n                   RHS.date_payment_made AS date_payment_made_other,\n                   RHS.amount_payment AS amount_payment_other\n            FROM payments AS LHS\n            INNER JOIN payments AS RHS ON (LHS.payment_id = RHS.settlement_id)))\n      GROUP BY payment_method_code,\n               settlement_id)\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT Payment_Method_Code\nFROM Payments\nGROUP BY Payment_Method_Code\nORDER BY count(*) ASC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_policies/0011", "sql1": "\nSELECT DISTINCT MIN(date_claim_made) OVER () AS date_claim_made\nFROM claims\nORDER BY date_claim_made\n", "sql2": "SELECT Date_Claim_Made\nFROM Claims\nORDER BY Date_Claim_Made ASC\nLIMIT 1", "schema": "spider/insurance_policies/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_policies/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/county_public_safety/0005", "sql1": "\nSELECT crime_rate\nFROM county_public_safety\nORDER BY crime_rate\n", "sql2": "SELECT Crime_rate\nFROM county_public_safety\nORDER BY Police_officers ASC", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/county_public_safety/0015", "sql1": "\nSELECT police_force,\n       n AS count___\nFROM\n  (SELECT police_force,\n          COUNT(*) AS n\n   FROM county_public_safety\n   GROUP BY police_force)\nORDER BY police_force\nFrom cffi callback <function _processevents at 0x7feaefca4790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\ncounty_public_safety <- read_csv(\"tests-examples/spider/county_public_safety/tables/county_public_safety.csv\", skip=1, col_names=c('county_id','name','population','police_officers','residents_per_officer','case_burden','crime_rate','police_force','location'), col_types=cols(col_integer(),col_character(),col_integer(),col_integer(),col_integer(),col_integer(),col_double(),col_character(),col_character()))\ncounty_public_safety <- copy_to(con, county_public_safety)\nexpected_output <- read_csv(\"tests-examples/spider/county_public_safety/tables/0015.csv\", skip=1, col_names=c('police_force','count___'), col_types=cols(col_character(),col_integer()))\n\ndf1 <- county_public_safety %>% group_by(police_force) %>% summarise(n = n()) %>% ungroup()\nout <- df1 %>% select(police_force, count___ = n) %>% arrange(police_force)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT police_force,\n       n AS count___\nFROM\n  (SELECT police_force,\n          COUNT(*) AS n\n   FROM county_public_safety\n   GROUP BY police_force)\nORDER BY police_force\n", "sql2": "SELECT Police_force,\n       COUNT(*)\nFROM county_public_safety\nGROUP BY Police_force", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/county_public_safety/0018", "sql1": "\nSELECT DISTINCT `police_force`\nFROM `county_public_safety`\nWHERE (`location` != 'East'\n       AND `location` = 'West')\nORDER BY police_force\n", "sql2": "SELECT Police_force\nFROM county_public_safety\nWHERE LOCATION = 'East' INTERSECT\n  SELECT Police_force\n  FROM county_public_safety WHERE LOCATION = 'West'", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/county_public_safety/0002", "sql1": "\nSELECT name\nFROM county_public_safety\nORDER BY name\n", "sql2": "SELECT Name\nFROM county_public_safety\nORDER BY Population DESC", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/county_public_safety/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM county_public_safety\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM county_public_safety", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/county_public_safety/0007", "sql1": "\nSELECT hispanic\nFROM city\nWHERE (black > 10.0)\nORDER BY hispanic\n", "sql2": "SELECT Hispanic\nFROM city\nWHERE Black > 10", "schema": "spider/county_public_safety/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0009", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          `state`,\n          COUNT(*) AS `n`\n   FROM `park`\n   GROUP BY `country`,\n            `state`)\nWHERE (`state` = 'NY')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM park\nWHERE state = 'NY';", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0005", "sql1": "\nSELECT yearid,\n       n AS count___\nFROM\n  (SELECT yearid,\n          COUNT(*) AS n\n   FROM hall_of_fame\n   GROUP BY yearid)\nORDER BY yearid\n", "sql2": "SELECT yearid,\n       count(*)\nFROM hall_of_fame\nGROUP BY yearid;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0028", "sql1": "\nSELECT DISTINCT salary\nFROM salary\nWHERE (YEAR = 2010\n       OR YEAR = 2001)\nORDER BY salary\n", "sql2": "SELECT salary\nFROM salary\nWHERE YEAR = 2010\nUNION\nSELECT salary\nFROM salary\nWHERE YEAR = 2001", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0024", "sql1": "\nSELECT DISTINCT n_distinct AS count___\nFROM\n  (SELECT team_id_loser,\n          YEAR,\n          COUNT(DISTINCT YEAR) AS n_distinct\n   FROM\n     (SELECT *\n      FROM postseason\n      WHERE (YEAR > 1885\n             AND ties < 1))\n   GROUP BY team_id_loser,\n            YEAR)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM postseason\nWHERE YEAR = 1885\n  AND ties = 1;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0039", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `active`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `team_franchise`\n      WHERE (`active` = 'Y'))\n   GROUP BY active)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM team_franchise\nWHERE active = 'Y';", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0038", "sql1": "\nSELECT state\nFROM\n  (SELECT state,\n          COUNT(*) AS n\n   FROM park\n   GROUP BY state)\nWHERE (n > 2)\nORDER BY state\n", "sql2": "SELECT state\nFROM park\nGROUP BY state\nHAVING count(*) > 2;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0040", "sql1": "\nSELECT city\nFROM\n  (SELECT city,\n          COUNT(*) AS n\n   FROM park\n   GROUP BY city)\nWHERE (n >= 2\n       AND n <= 4)\nORDER BY city\n", "sql2": "SELECT city\nFROM park\nGROUP BY city\nHAVING count(*) BETWEEN 2 AND 4;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0006", "sql1": "\nSELECT YEAR,\n       meanattendance AS avg_attendance_\nFROM\n  (SELECT YEAR,\n          AVG(attendance) AS meanattendance\n   FROM home_game\n   GROUP BY YEAR)\nORDER BY YEAR\n", "sql2": "SELECT YEAR,\n       avg(attendance)\nFROM home_game\nGROUP BY YEAR;", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/baseball_1/0030", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `park_alias`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `park`\n      WHERE (`city` = 'Atlanta'))\n   GROUP BY park_alias)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM park\nWHERE city = 'Atlanta';", "schema": "spider/baseball_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0009", "sql1": "\nSELECT DISTINCT RANGE\nFROM mountain\nORDER BY RANGE\n", "sql2": "SELECT DISTINCT RANGE\nFROM mountain\nORDER BY Prominence DESC\nLIMIT 3", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0013", "sql1": "\nSELECT DISTINCT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`climber_id` AS `climber_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`points` AS `points`,\n          `LHS`.`mountain_id` AS `mountain_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`height` AS `height`,\n          `RHS`.`prominence` AS `prominence`,\n          `RHS`.`range` AS `range`,\n          `RHS`.`country` AS `country_other`\n   FROM `climber` AS `LHS`\n   INNER JOIN `mountain` AS `RHS` ON (`LHS`.`mountain_id` = `RHS`.`mountain_id`))\nWHERE (`country` = 'West Germany')\nORDER BY name\n", "sql2": "SELECT DISTINCT T2.Name\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID\nWHERE T1.Country = 'West Germany'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0005", "sql1": "\nSELECT n_distinct AS count_distinct_country_\nFROM\n  (SELECT COUNT(DISTINCT country) AS n_distinct\n   FROM climber)\nORDER BY count_distinct_country_\n", "sql2": "SELECT COUNT(DISTINCT Country)\nFROM climber", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0004", "sql1": "\nSELECT `points` AS `max_points_`\nFROM\n  (SELECT `country`,\n          MAX(`points`) AS `points`\n   FROM `climber`\n   GROUP BY `country`)\nWHERE (`country` = 'United Kingdom')\nORDER BY max_points_\n", "sql2": "SELECT max(Points)\nFROM climber\nWHERE Country = 'United Kingdom'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.mountain_id AS mountain_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.prominence AS prominence,\n          LHS.range AS RANGE,\n          LHS.country AS country,\n          RHS.mountain_id AS mountain_id_other,\n          RHS.prominence AS prominence_other,\n          RHS.range AS range_other,\n          RHS.country AS country_other\n   FROM\n     (SELECT mountain_id,\n             name,\n             MAX(height) OVER () AS height,\n                              prominence,\n                              RANGE,\n                              country\n      FROM mountain) AS LHS\n   INNER JOIN mountain AS RHS ON (LHS.height = RHS.height\n                                     AND LHS.name = RHS.name))\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nORDER BY Height DESC\nLIMIT 1", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0015", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM climber\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT Country,\n       COUNT(*)\nFROM climber\nGROUP BY Country", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0003", "sql1": "\nSELECT `name`\nFROM `climber`\nWHERE (`country` != 'Switzerland')\nORDER BY name\n", "sql2": "SELECT Name\nFROM climber\nWHERE Country != 'Switzerland'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0019", "sql1": "\nSELECT DISTINCT RANGE\nFROM\n  (SELECT LHS.mountain_id AS mountain_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.prominence AS prominence,\n          LHS.range AS RANGE,\n          LHS.country AS country,\n          LHS.n AS n,\n          RHS.name AS name_other\n   FROM\n     (SELECT mountain_id,\n             name,\n             height,\n             prominence,\n             RANGE,\n             country,\n             COUNT(*) OVER () AS n\n      FROM mountain) AS LHS\n   INNER JOIN\n     (SELECT country,\n             name,\n             MAX(n) AS n\n      FROM\n        (SELECT mountain_id,\n                name,\n                height,\n                prominence,\n                RANGE,\n                country,\n                COUNT(*) OVER () AS n\n         FROM mountain)\n      GROUP BY country,\n               name) AS RHS ON (LHS.mountain_id = RHS.n\n                                AND LHS.country = RHS.country))\nORDER BY RANGE\n", "sql2": "SELECT RANGE\nFROM mountain\nGROUP BY RANGE\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0018", "sql1": "\nSELECT country\nFROM mountain\nWHERE (height > 5600.0\n       OR height = 5200.0)\nORDER BY country\n", "sql2": "SELECT Country\nFROM mountain\nWHERE Height > 5600 INTERSECT\n  SELECT Country\n  FROM mountain WHERE Height < 5200", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0002", "sql1": "\nSELECT name\nFROM climber\nORDER BY name\n", "sql2": "SELECT Name\nFROM climber\nORDER BY Points DESC", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0014", "sql1": "\nSELECT `time`\nFROM\n  (SELECT `LHS`.`mountain_id` AS `mountain_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`prominence` AS `prominence`,\n          `LHS`.`range` AS `range`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`climber_id` AS `climber_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`country` AS `country_other`,\n          `RHS`.`time` AS `time`,\n          `RHS`.`points` AS `points`\n   FROM `mountain` AS `LHS`\n   INNER JOIN `climber` AS `RHS` ON (`LHS`.`mountain_id` = `RHS`.`mountain_id`))\nWHERE (`country` = 'Uganda')\nORDER BY TIME\n", "sql2": "SELECT T1.Time\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID\nWHERE T2.Country = 'Uganda'", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM climber)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM climber", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM mountain AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM climber AS RHS\n        WHERE (LHS.mountain_id = RHS.mountain_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nWHERE Mountain_ID NOT IN\n    (SELECT Mountain_ID\n     FROM climber)", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0020", "sql1": "\nSELECT name\nFROM mountain\nWHERE (height >= 5000.0\n       AND prominence != 1000.0)\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nWHERE Height > 5000\n  OR Prominence > 1000", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0016", "sql1": "\nSELECT country\nFROM\n  (SELECT country,\n          RANGE,\n          COUNT(*) AS n\n   FROM mountain\n   GROUP BY country,\n            RANGE)\nWHERE (n != 1)\nORDER BY country\n", "sql2": "SELECT Country\nFROM mountain\nGROUP BY Country\nHAVING COUNT(*) > 1", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0007", "sql1": "\nSELECT country\nFROM mountain\nWHERE (height >= 5000.0)\nORDER BY country\n", "sql2": "SELECT Country\nFROM mountain\nWHERE Height > 5000", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0011", "sql1": "\nSELECT name_other AS name,\n       height\nFROM\n  (SELECT LHS.mountain_id AS mountain_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.prominence AS prominence,\n          LHS.range AS RANGE,\n          LHS.country AS country,\n          RHS.climber_id AS climber_id,\n          RHS.name AS name_other,\n          RHS.country AS country_other,\n          RHS.time AS TIME,\n          RHS.points AS points\n   FROM mountain AS LHS\n   INNER JOIN climber AS RHS ON (LHS.mountain_id = RHS.mountain_id))\nORDER BY name\n", "sql2": "SELECT T1.Name,\n       T2.Height\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0010", "sql1": "\nSELECT name_other AS name___1,\n       name AS name___2\nFROM\n  (SELECT LHS.mountain_id AS mountain_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.prominence AS prominence,\n          LHS.range AS RANGE,\n          LHS.country AS country,\n          RHS.climber_id AS climber_id,\n          RHS.name AS name_other,\n          RHS.country AS country_other,\n          RHS.time AS TIME,\n          RHS.points AS points\n   FROM mountain AS LHS\n   INNER JOIN climber AS RHS ON (LHS.mountain_id = RHS.mountain_id))\nORDER BY name___1\n", "sql2": "SELECT T1.Name,\n       T2.Name\nFROM climber AS T1\nJOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/climbing/0006", "sql1": "\nSELECT name\nFROM mountain\nORDER BY name\n", "sql2": "SELECT Name\nFROM mountain\nORDER BY Name ASC", "schema": "spider/climbing/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0009", "sql1": "\nSELECT DISTINCT country\nFROM stadium\nWHERE (capacity < 60000\n       AND capacity <= 50000)\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nWHERE capacity > 60000 INTERSECT\n  SELECT country\n  FROM stadium WHERE capacity < 50000", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0013", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `id`,\n          `name`,\n          `capacity`,\n          `city`,\n          `country`,\n          `opening_year`,\n          COUNT(DISTINCT `country`) OVER () AS `n_distinct`\n   FROM `stadium`)\nWHERE (`country` != 'Russia')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM stadium\nWHERE country != 'Russia'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0005", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.capacity AS capacity,\n          LHS.city AS city,\n          LHS.country AS country,\n          LHS.opening_year AS opening_year\n   FROM stadium AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             MAX(capacity) OVER () AS capacity,\n                                city,\n                                country,\n                                opening_year\n      FROM stadium) AS RHS ON (LHS.id = RHS.id\n                                  AND LHS.name = RHS.name\n                                  AND LHS.capacity = RHS.capacity\n                                  AND LHS.city = RHS.city\n                                  AND LHS.country = RHS.country\n                                  AND LHS.opening_year = RHS.opening_year))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nORDER BY capacity DESC\nLIMIT 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0029", "sql1": "\nSELECT id,\n       name,\n       nationality,\n       meter_100,\n       meter_200,\n       meter_300,\n       meter_400,\n       meter_500,\n       meter_600,\n       meter_700,\n       TIME\nFROM swimmer\nORDER BY id\n", "sql2": "SELECT *\nFROM swimmer", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0004", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM stadium)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM stadium", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0012", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM stadium\n           WHERE (opening_year > 2006)) AS RHS\n        WHERE (LHS.country = RHS.country) ))\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nEXCEPT\nSELECT country\nFROM stadium\nWHERE opening_year > 2006", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0008", "sql1": "\nSELECT country\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM stadium\n   GROUP BY country)\nWHERE (n < 3)\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nGROUP BY country\nHAVING count(*) <= 3", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0015", "sql1": "\nSELECT n_distinct AS count_distinct_nationality_\nFROM\n  (SELECT COUNT(DISTINCT nationality) AS n_distinct\n   FROM swimmer)\nORDER BY count_distinct_nationality_\n", "sql2": "SELECT count(DISTINCT nationality)\nFROM swimmer", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0003", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.stadium_id AS stadium_id,\n          LHS.year AS YEAR,\n          LHS.maxyear AS maxyear,\n          RHS.id AS id_other,\n          RHS.name AS name_other,\n          RHS.stadium_id AS stadium_id_other,\n          RHS.year AS year_other,\n          RHS.maxyear AS maxyear_other\n   FROM\n     (SELECT id,\n             name,\n             stadium_id,\n             YEAR,\n             MAX(YEAR) OVER () AS maxyear\n      FROM event) AS LHS\n   CROSS JOIN\n     (SELECT id,\n             name,\n             stadium_id,\n             YEAR,\n             MAX(YEAR) OVER () AS maxyear\n      FROM event) AS RHS)\nWHERE (YEAR = maxyear\n       AND maxyear = maxyear_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM event\nORDER BY YEAR DESC\nLIMIT 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0018", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `id`,\n          `name`,\n          `nationality`,\n          `meter_100`,\n          `meter_200`,\n          `meter_300`,\n          `meter_400`,\n          `meter_500`,\n          `meter_600`,\n          `meter_700`,\n          `time`,\n          `id_other`,\n          `result`,\n          `event_id`,\n          `id` AS `swimmer_id`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`nationality` AS `nationality`,\n             `LHS`.`meter_100` AS `meter_100`,\n             `LHS`.`meter_200` AS `meter_200`,\n             `LHS`.`meter_300` AS `meter_300`,\n             `LHS`.`meter_400` AS `meter_400`,\n             `LHS`.`meter_500` AS `meter_500`,\n             `LHS`.`meter_600` AS `meter_600`,\n             `LHS`.`meter_700` AS `meter_700`,\n             `LHS`.`time` AS `time`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`result` AS `result`,\n             `RHS`.`event_id` AS `event_id`\n      FROM `swimmer` AS `LHS`\n      INNER JOIN `record` AS `RHS` ON (`LHS`.`id` = `RHS`.`swimmer_id`)))\nWHERE (`result` = 'Win')\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM swimmer AS t1\nJOIN record AS t2 ON t1.id = t2.swimmer_id\nWHERE RESULT = 'Win'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0002", "sql1": "\nSELECT name\nFROM event\nORDER BY name\n", "sql2": "SELECT name\nFROM event\nORDER BY YEAR DESC", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0014", "sql1": "\nSELECT name\nFROM swimmer\nORDER BY name\n", "sql2": "SELECT name\nFROM swimmer\nORDER BY meter_100", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM event\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM event", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0017", "sql1": "\nSELECT `meter_200`,\n       `meter_300`\nFROM `swimmer`\nWHERE (`nationality` = 'Australia')\nORDER BY meter_200\n", "sql2": "SELECT meter_200,\n       meter_300\nFROM swimmer\nWHERE nationality = 'Australia'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0021", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM stadium AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT id,\n                  name,\n                  capacity,\n                  city,\n                  country,\n                  opening_year,\n                  id_other,\n                  name_other,\n                  YEAR,\n                  id AS stadium_id\n           FROM\n             (SELECT LHS.id AS id,\n                     LHS.name AS name,\n                     LHS.capacity AS capacity,\n                     LHS.city AS city,\n                     LHS.country AS country,\n                     LHS.opening_year AS opening_year,\n                     RHS.id AS id_other,\n                     RHS.name AS name_other,\n                     RHS.year AS YEAR\n              FROM stadium AS LHS\n              INNER JOIN event AS RHS ON (LHS.id = RHS.stadium_id))) AS RHS\n        WHERE (LHS.id = RHS.id\n               AND LHS.opening_year = RHS.opening_year) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nWHERE id NOT IN\n    (SELECT stadium_id\n     FROM event)", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0020", "sql1": "\nSELECT `name`,\n       `capacity`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`capacity` AS `capacity`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`opening_year` AS `opening_year`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`year` AS `year`\n   FROM `stadium` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `event`\n      WHERE (`name` = 'World Junior')) AS RHS ON (LHS.id = RHS.stadium_id))\nORDER BY name\n", "sql2": "SELECT t1.name,\n       t1.capacity\nFROM stadium AS t1\nJOIN event AS t2 ON t1.id = t2.stadium_id\nWHERE t2.name = 'World Junior'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0016", "sql1": "\nSELECT nationality,\n       id AS count___\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT id,\n                name,\n                nationality,\n                meter_100,\n                meter_200,\n                meter_300,\n                meter_400,\n                meter_500,\n                meter_600,\n                meter_700,\n                TIME,\n                COUNT(*) OVER () AS n\n         FROM swimmer)\n      ORDER BY meter_600 DESC)\n   LIMIT 1)\n", "sql2": "SELECT nationality,\n       count(*)\nFROM swimmer\nGROUP BY nationality\nHAVING count(*) > 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0007", "sql1": "\nSELECT country\nFROM\n  (SELECT *\n   FROM\n     (SELECT country,\n             opening_year,\n             COUNT(*) AS n\n      FROM stadium\n      GROUP BY country,\n               opening_year) AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT MAX(n) AS n\n           FROM\n             (SELECT country,\n                     opening_year,\n                     COUNT(*) AS n\n              FROM stadium\n              GROUP BY country,\n                       opening_year)) AS RHS\n        WHERE (LHS.n = RHS.n) ))\nORDER BY country\n", "sql2": "SELECT country\nFROM stadium\nGROUP BY country\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0011", "sql1": "\nSELECT country,\n       n AS count___\nFROM\n  (SELECT country,\n          COUNT(*) AS n\n   FROM stadium\n   GROUP BY country)\nORDER BY country\n", "sql2": "SELECT country,\n       count(*)\nFROM stadium\nGROUP BY country", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_city_\nFROM stadium\nWHERE (opening_year < 2006)\nORDER BY count_distinct_city_\n", "sql2": "SELECT count(DISTINCT city)\nFROM stadium\nWHERE opening_year < 2006", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT id,\n          name,\n          capacity,\n          city,\n          country,\n          opening_year,\n          AVG(capacity) OVER () AS meancapacity\n   FROM stadium)\nWHERE (meancapacity > capacity)\nORDER BY name\n", "sql2": "SELECT name\nFROM stadium\nWHERE capacity <\n    (SELECT avg(capacity)\n     FROM stadium)", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0026", "sql1": "\nSELECT DISTINCT `name`\nFROM\n  (SELECT `id`,\n          `name`,\n          `nationality`,\n          `meter_100`,\n          `meter_200`,\n          `meter_300`,\n          `meter_400`,\n          `meter_500`,\n          `meter_600`,\n          `meter_700`,\n          `time`,\n          `id_other`,\n          `result`,\n          `swimmer_id`,\n          `id` AS `event_id`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`nationality` AS `nationality`,\n             `LHS`.`meter_100` AS `meter_100`,\n             `LHS`.`meter_200` AS `meter_200`,\n             `LHS`.`meter_300` AS `meter_300`,\n             `LHS`.`meter_400` AS `meter_400`,\n             `LHS`.`meter_500` AS `meter_500`,\n             `LHS`.`meter_600` AS `meter_600`,\n             `LHS`.`meter_700` AS `meter_700`,\n             `LHS`.`time` AS `time`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`result` AS `result`,\n             `RHS`.`swimmer_id` AS `swimmer_id`\n      FROM `swimmer` AS `LHS`\n      INNER JOIN `record` AS `RHS` ON (`LHS`.`id` = `RHS`.`event_id`)))\nWHERE (`result` != 'Win'\n       OR `result` = 'Loss')\nORDER BY name\n", "sql2": "SELECT t1.name\nFROM swimmer AS t1\nJOIN record AS t2 ON t1.id = t2.swimmer_id\nWHERE RESULT = 'Win' INTERSECT\n  SELECT t1.name\n  FROM swimmer AS t1\n  JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/swimming/0030", "sql1": "\nSELECT meancapacity AS avg_capacity_\nFROM\n  (SELECT AVG(capacity) AS meancapacity\n   FROM\n     (SELECT *\n      FROM stadium\n      WHERE (opening_year = 2005\n             OR opening_year >= capacity)))\nORDER BY avg_capacity_\n", "sql2": "SELECT avg(capacity)\nFROM stadium\nWHERE opening_year = 2005", "schema": "spider/swimming/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0009", "sql1": "\nSELECT product_details\nFROM products\nORDER BY product_details\n", "sql2": "SELECT DISTINCT product_details\nFROM products", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0025", "sql1": "\nSELECT channel_code,\n       contact_number\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM customer_contact_channels\n      ORDER BY active_from_date)\n   LIMIT 17)\n", "sql2": "SELECT channel_code,\n       contact_number\nFROM customer_contact_channels\nWHERE active_to_date - active_from_date =\n    (SELECT active_to_date - active_from_date\n     FROM customer_contact_channels\n     ORDER BY (active_to_date - active_from_date) DESC\n     LIMIT 1)", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0033", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `customer_orders`\nWHERE (`order_details` = 'Second time')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customer_orders\nWHERE order_details = 'Second time'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0005", "sql1": "\nSELECT date_became_customer\nFROM customers\nWHERE (customer_id >= 10\n       OR customer_id > 20)\nORDER BY date_became_customer\n", "sql2": "SELECT date_became_customer\nFROM customers\nWHERE customer_id BETWEEN 10 AND 20", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0029", "sql1": "\nSELECT payment_method\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.payment_method AS payment_method,\n          LHS.customer_name AS customer_name,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.other_customer_details AS other_customer_details,\n          LHS.order_id AS order_id,\n          LHS.order_status AS order_status,\n          LHS.order_date AS order_date,\n          LHS.order_details AS order_details,\n          LHS.product_id AS product_id,\n          LHS.order_quantity AS order_quantity\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.payment_method AS payment_method,\n             LHS.customer_name AS customer_name,\n             LHS.date_became_customer AS date_became_customer,\n             LHS.other_customer_details AS other_customer_details,\n             LHS.order_id AS order_id,\n             LHS.order_status AS order_status,\n             LHS.order_date AS order_date,\n             LHS.order_details AS order_details,\n             RHS.product_id AS product_id,\n             RHS.order_quantity AS order_quantity\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.payment_method AS payment_method,\n                LHS.customer_name AS customer_name,\n                LHS.date_became_customer AS date_became_customer,\n                LHS.other_customer_details AS other_customer_details,\n                RHS.order_id AS order_id,\n                RHS.order_status AS order_status,\n                RHS.order_date AS order_date,\n                RHS.order_details AS order_details\n         FROM customers AS LHS\n         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS LHS\n   INNER JOIN\n     (SELECT order_id,\n             product_id,\n             MIN(order_quantity) OVER () AS order_quantity\n      FROM order_items) AS RHS ON (LHS.order_id = RHS.order_id\n                                      AND LHS.product_id = RHS.product_id\n                                      AND LHS.order_quantity = RHS.order_quantity))\nORDER BY payment_method\n", "sql2": "SELECT t1.payment_method\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nJOIN order_items AS t3 ON t2.order_id = t3.order_id\nGROUP BY t1.customer_name\nORDER BY sum(t3.order_quantity)\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0004", "sql1": "\nSELECT `customer_name`\nFROM `customers`\nWHERE (`payment_method` = 'Cash')\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nWHERE payment_method = 'Cash'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0032", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT `customer_id`) OVER () AS `count_distinct_customer_id_`\nFROM `customer_orders`\nWHERE (`order_status` = 'Cancelled')\nORDER BY count_distinct_customer_id_\n", "sql2": "SELECT count(DISTINCT customer_id)\nFROM customer_orders\nWHERE order_status = 'Cancelled'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0008", "sql1": "\nSELECT DISTINCT payment_method\nFROM customers\nORDER BY payment_method\n", "sql2": "SELECT DISTINCT payment_method\nFROM customers", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0023", "sql1": "\nSELECT DISTINCT MAX(`active_to_date`) OVER () AS `max_t2_active_to_date_`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`channel_code` AS `channel_code`,\n          `LHS`.`active_from_date` AS `active_from_date`,\n          `LHS`.`active_to_date` AS `active_to_date`,\n          `LHS`.`contact_number` AS `contact_number`,\n          `RHS`.`payment_method` AS `payment_method`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`date_became_customer` AS `date_became_customer`,\n          `RHS`.`other_customer_details` AS `other_customer_details`\n   FROM `customer_contact_channels` AS `LHS`\n   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Tillman Ernser')\nORDER BY max_t2_active_to_date_\n", "sql2": "SELECT max(t2.active_to_date)\nFROM customers AS t1\nJOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_name = 'Tillman Ernser'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0034", "sql1": "\nSELECT `customer_name`,\n       `order_date`\nFROM\n  (SELECT `LHS`.`order_id` AS `order_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`order_status` AS `order_status`,\n          `LHS`.`order_date` AS `order_date`,\n          `LHS`.`order_details` AS `order_details`,\n          `RHS`.`payment_method` AS `payment_method`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`date_became_customer` AS `date_became_customer`,\n          `RHS`.`other_customer_details` AS `other_customer_details`\n   FROM\n     (SELECT *\n      FROM `customer_orders`\n      WHERE (`order_status` = 'Delivered')) AS LHS\n   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name,\n       t2.order_date\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nWHERE order_status = 'Delivered'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0022", "sql1": "\nSELECT DISTINCT `channel_code`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `RHS`.`channel_code` AS `channel_code`,\n          `RHS`.`active_from_date` AS `active_from_date`,\n          `RHS`.`active_to_date` AS `active_to_date`,\n          `RHS`.`contact_number` AS `contact_number`\n   FROM `customers` AS `LHS`\n   LEFT JOIN `customer_contact_channels` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Tillman Ernser')\nORDER BY channel_code\n", "sql2": "SELECT DISTINCT channel_code\nFROM customers AS t1\nJOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_name = 'Tillman Ernser'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0018", "sql1": "\nSELECT city\nFROM addresses\nWHERE (zip_postcode = 255)\nORDER BY city\n", "sql2": "SELECT city\nFROM addresses\nWHERE zip_postcode = 255", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0038", "sql1": "\nSELECT product_details\nFROM\n  (SELECT product_id,\n          product_details,\n          product_id_other,\n          order_quantity,\n          n,\n          product_id AS order_id\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_details AS product_details,\n             RHS.product_id AS product_id_other,\n             RHS.order_quantity AS order_quantity,\n             RHS.n AS n\n      FROM products AS LHS\n      INNER JOIN\n        (SELECT order_id,\n                product_id,\n                order_quantity,\n                COUNT(*) OVER () AS n\n         FROM order_items) AS RHS ON (LHS.product_id = RHS.order_id)))\nORDER BY product_details\n", "sql2": "SELECT t2.product_details\nFROM order_items AS t1\nJOIN products AS t2 ON t1.product_id = t2.product_id\nGROUP BY t1.product_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0014", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`address_id` AS `address_id`,\n          `LHS`.`address_content` AS `address_content`,\n          `LHS`.`city` AS `city`,\n          `LHS`.`zip_postcode` AS `zip_postcode`,\n          `LHS`.`state_province_county` AS `state_province_county`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`other_address_details` AS `other_address_details`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `RHS`.`date_address_from` AS `date_address_from`,\n          `RHS`.`address_type` AS `address_type`,\n          `RHS`.`date_address_to` AS `date_address_to`\n   FROM\n     (SELECT `LHS`.`address_id` AS `address_id`,\n             `LHS`.`address_content` AS `address_content`,\n             `LHS`.`city` AS `city`,\n             `LHS`.`zip_postcode` AS `zip_postcode`,\n             `LHS`.`state_province_county` AS `state_province_county`,\n             `LHS`.`country` AS `country`,\n             `LHS`.`other_address_details` AS `other_address_details`,\n             `RHS`.`customer_id` AS `customer_id`,\n             `RHS`.`payment_method` AS `payment_method`,\n             `RHS`.`customer_name` AS `customer_name`,\n             `RHS`.`date_became_customer` AS `date_became_customer`,\n             `RHS`.`other_customer_details` AS `other_customer_details`\n      FROM `addresses` AS `LHS`\n      CROSS JOIN `customers` AS `RHS`) AS `LHS`\n   INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`address_id`\n                                                   AND `LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`state_province_county` = 'Colorado')\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id\nJOIN addresses AS t3 ON t2.address_id = t3.address_id\nWHERE t3.state_province_county = 'Colorado'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0043", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM customer_orders AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nEXCEPT\nSELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0001", "sql1": "\nSELECT customer_name\nFROM customers\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0017", "sql1": "\nSELECT city\nFROM addresses\nORDER BY city\n", "sql2": "SELECT DISTINCT city\nFROM addresses", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0040", "sql1": "\nSELECT `address_content`\nFROM\n  (SELECT *\n   FROM `addresses`\n   WHERE (`city` = 'East Julianaside'\n          OR `city` = 'Gleasonmouth'))\nWHERE (`state_province_county` = 'Texas'\n       OR `state_province_county` = 'Arizona')\nORDER BY address_content\n", "sql2": "SELECT address_content\nFROM addresses\nWHERE city = 'East Julianaside'\n  AND state_province_county = 'Texas'\nUNION\nSELECT address_content\nFROM addresses\nWHERE city = 'Gleasonmouth'\n  AND state_province_county = 'Arizona'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0021", "sql1": "\nSELECT channel_code\nFROM\n  (SELECT channel_code,\n          COUNT(DISTINCT customer_id) AS n_distinct\n   FROM customer_contact_channels\n   GROUP BY channel_code)\nWHERE (n_distinct <= 5)\nORDER BY channel_code\n", "sql2": "SELECT channel_code\nFROM customer_contact_channels\nGROUP BY channel_code\nHAVING count(customer_id) < 5", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0020", "sql1": "\nSELECT DISTINCT country\nFROM\n  (SELECT address_id,\n          address_content,\n          city,\n          zip_postcode,\n          state_province_county,\n          country,\n          other_address_details,\n          COUNT(DISTINCT address_id) OVER () AS n_distinct\n   FROM addresses)\nWHERE (address_id >= 4\n       OR n_distinct >= address_id)\nORDER BY country\n", "sql2": "SELECT country\nFROM addresses\nGROUP BY country\nHAVING count(address_id) > 4", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0041", "sql1": "\nSELECT `customer_name`\nFROM `customers`\nWHERE (`payment_method` != 'Cash')\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nWHERE payment_method != 'Cash'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0027", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.payment_method AS payment_method,\n          LHS.customer_name AS customer_name,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.other_customer_details AS other_customer_details,\n          LHS.order_id AS order_id,\n          LHS.order_status AS order_status,\n          LHS.order_date AS order_date,\n          LHS.order_details AS order_details,\n          LHS.product_id AS product_id,\n          LHS.order_quantity AS order_quantity\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.payment_method AS payment_method,\n             LHS.customer_name AS customer_name,\n             LHS.date_became_customer AS date_became_customer,\n             LHS.other_customer_details AS other_customer_details,\n             LHS.order_id AS order_id,\n             LHS.order_status AS order_status,\n             LHS.order_date AS order_date,\n             LHS.order_details AS order_details,\n             RHS.product_id AS product_id,\n             RHS.order_quantity AS order_quantity\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.payment_method AS payment_method,\n                LHS.customer_name AS customer_name,\n                LHS.date_became_customer AS date_became_customer,\n                LHS.other_customer_details AS other_customer_details,\n                RHS.order_id AS order_id,\n                RHS.order_status AS order_status,\n                RHS.order_date AS order_date,\n                RHS.order_details AS order_details\n         FROM customers AS LHS\n         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(order_quantity) AS order_quantity\n      FROM order_items) AS RHS ON (LHS.order_quantity = RHS.order_quantity))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id\nJOIN order_items AS t3 ON t2.order_id = t3.order_id\nWHERE t3.order_quantity =\n    (SELECT max(order_quantity)\n     FROM order_items)", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/customers_and_addresses/0026", "sql1": "\nSELECT `customer_name`,\n       `active_from_date`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`payment_method` AS `payment_method`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`date_became_customer` AS `date_became_customer`,\n          `LHS`.`other_customer_details` AS `other_customer_details`,\n          `LHS`.`channel_code` AS `channel_code`,\n          `LHS`.`active_from_date` AS `active_from_date`,\n          `LHS`.`active_to_date` AS `active_to_date`,\n          `LHS`.`contact_number` AS `contact_number`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`payment_method` AS `payment_method`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`date_became_customer` AS `date_became_customer`,\n             `LHS`.`other_customer_details` AS `other_customer_details`,\n             `RHS`.`channel_code` AS `channel_code`,\n             `RHS`.`active_from_date` AS `active_from_date`,\n             `RHS`.`active_to_date` AS `active_to_date`,\n             `RHS`.`contact_number` AS `contact_number`\n      FROM `customers` AS `LHS`\n      INNER JOIN `customer_contact_channels` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `customer_contact_channels`\n      WHERE (`channel_code` = 'Email')) AS RHS ON (LHS.customer_id = RHS.customer_id\n                                                   AND LHS.channel_code = RHS.channel_code\n                                                   AND LHS.active_from_date = RHS.active_from_date\n                                                   AND LHS.active_to_date = RHS.active_to_date\n                                                   AND LHS.contact_number = RHS.contact_number))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name,\n       t2.active_from_date\nFROM customers AS t1\nJOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id\nWHERE t2.channel_code = 'Email'", "schema": "spider/customers_and_addresses/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/customers_and_addresses/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0009", "sql1": "\nSELECT `meanamount_of_transaction` AS `avg_amount_of_transaction_`\nFROM\n  (SELECT `other_details`,\n          `transaction_type_code`,\n          AVG(`amount_of_transaction`) AS `meanamount_of_transaction`\n   FROM `transactions`\n   GROUP BY `other_details`,\n            `transaction_type_code`)\nWHERE (`transaction_type_code` = 'SALE')\nORDER BY avg_amount_of_transaction_\n", "sql2": "SELECT avg(amount_of_transaction)\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'SALE'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0033", "sql1": "\nSELECT transaction_type_code\nFROM\n  (SELECT investor_id,\n          transaction_type_code,\n          MAX(n) AS maxn\n   FROM\n     (SELECT transaction_id,\n             investor_id,\n             transaction_type_code,\n             date_of_transaction,\n             amount_of_transaction,\n             share_count,\n             other_details,\n             transaction_type_code_other,\n             date_of_transaction_other,\n             amount_of_transaction_other,\n             share_count_other,\n             other_details_other,\n             COUNT(*) OVER () AS n\n      FROM\n        (SELECT investor_id AS transaction_id,\n                investor_id,\n                transaction_type_code,\n                date_of_transaction,\n                amount_of_transaction,\n                share_count,\n                other_details,\n                transaction_type_code_other,\n                date_of_transaction_other,\n                amount_of_transaction_other,\n                share_count_other,\n                other_details_other\n         FROM\n           (SELECT transaction_id,\n                   transaction_id AS investor_id,\n                   transaction_type_code,\n                   date_of_transaction,\n                   amount_of_transaction,\n                   share_count,\n                   other_details,\n                   transaction_type_code_other,\n                   date_of_transaction_other,\n                   amount_of_transaction_other,\n                   share_count_other,\n                   other_details_other\n            FROM\n              (SELECT LHS.transaction_id AS transaction_id,\n                      LHS.investor_id AS investor_id,\n                      LHS.transaction_type_code AS transaction_type_code,\n                      LHS.date_of_transaction AS date_of_transaction,\n                      LHS.amount_of_transaction AS amount_of_transaction,\n                      LHS.share_count AS share_count,\n                      LHS.other_details AS other_details,\n                      RHS.transaction_type_code AS transaction_type_code_other,\n                      RHS.date_of_transaction AS date_of_transaction_other,\n                      RHS.amount_of_transaction AS amount_of_transaction_other,\n                      RHS.share_count AS share_count_other,\n                      RHS.other_details AS other_details_other\n               FROM transactions AS LHS\n               INNER JOIN transactions AS RHS ON (LHS.transaction_id = RHS.investor_id\n                                                     AND LHS.investor_id = RHS.transaction_id)))))\n   GROUP BY investor_id,\n            transaction_type_code)\nORDER BY transaction_type_code\n", "sql2": "SELECT transaction_type_code\nFROM TRANSACTIONS\nGROUP BY transaction_type_code\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0013", "sql1": "\nSELECT DISTINCT date_of_transaction_other AS date_of_transaction\nFROM\n  (SELECT LHS.transaction_id AS transaction_id,\n          LHS.investor_id AS investor_id,\n          LHS.transaction_type_code AS transaction_type_code,\n          LHS.date_of_transaction AS date_of_transaction,\n          LHS.amount_of_transaction AS amount_of_transaction,\n          LHS.share_count AS share_count,\n          LHS.other_details AS other_details,\n          RHS.transaction_id AS transaction_id_other,\n          RHS.investor_id AS investor_id_other,\n          RHS.transaction_type_code AS transaction_type_code_other,\n          RHS.date_of_transaction AS date_of_transaction_other,\n          RHS.amount_of_transaction AS amount_of_transaction_other,\n          RHS.share_count AS share_count_other,\n          RHS.other_details AS other_details_other\n   FROM\n     (SELECT *\n      FROM transactions\n      WHERE (amount_of_transaction > 100.0\n             OR amount_of_transaction > 1000.0)) AS LHS\n   CROSS JOIN transactions AS RHS)\nWHERE (share_count != share_count_other\n       OR amount_of_transaction < amount_of_transaction_other)\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction\nFROM TRANSACTIONS\nWHERE share_count > 100\n  OR amount_of_transaction > 1000", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0005", "sql1": "\nSELECT date_of_transaction,\n       share_count\nFROM transactions\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction,\n       share_count\nFROM TRANSACTIONS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0029", "sql1": "\nSELECT lot_id,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT lot_id,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.lot_id AS lot_id,\n             RHS.investor_id AS investor_id,\n             RHS.transaction_type_code AS transaction_type_code,\n             RHS.date_of_transaction AS date_of_transaction,\n             RHS.amount_of_transaction AS amount_of_transaction,\n             RHS.share_count AS share_count,\n             RHS.other_details AS other_details\n      FROM transactions_lots AS LHS\n      INNER JOIN transactions AS RHS ON (LHS.transaction_id = RHS.transaction_id))\n   GROUP BY lot_id)\nORDER BY lot_id\n", "sql2": "SELECT T2.lot_id,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS AS T1\nJOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id\nGROUP BY T2.lot_id\nORDER BY avg(amount_of_transaction)", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0028", "sql1": "\nSELECT lot_id,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT lot_id,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.lot_id AS lot_id,\n             RHS.investor_id AS investor_id,\n             RHS.transaction_type_code AS transaction_type_code,\n             RHS.date_of_transaction AS date_of_transaction,\n             RHS.amount_of_transaction AS amount_of_transaction,\n             RHS.share_count AS share_count,\n             RHS.other_details AS other_details\n      FROM transactions_lots AS LHS\n      INNER JOIN transactions AS RHS ON (LHS.transaction_id = RHS.transaction_id))\n   GROUP BY lot_id)\nORDER BY lot_id\n", "sql2": "SELECT T2.lot_id,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS AS T1\nJOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id\nGROUP BY T2.lot_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0004", "sql1": "\nSELECT DISTINCT MAX(amount_of_transaction) OVER () AS max_amount_of_transaction_\nFROM transactions\nORDER BY max_amount_of_transaction_\n", "sql2": "SELECT max(amount_of_transaction)\nFROM TRANSACTIONS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0008", "sql1": "\nSELECT `date_of_transaction`\nFROM `transactions`\nWHERE (`transaction_type_code` = 'SALE')\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'SALE'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0003", "sql1": "\nSELECT DISTINCT lot_details\nFROM lots\nORDER BY lot_details\n", "sql2": "SELECT DISTINCT lot_details\nFROM LOTS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0039", "sql1": "\nSELECT date_of_transaction\nFROM transactions\nWHERE (amount_of_transaction != 100.0)\nORDER BY date_of_transaction\n", "sql2": "SELECT date_of_transaction\nFROM TRANSACTIONS\nWHERE share_count >= 100\n  OR amount_of_transaction >= 100", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0019", "sql1": "\nSELECT purchase_details\nFROM\n  (SELECT transaction_id,\n          investor_id,\n          transaction_type_code,\n          date_of_transaction,\n          amount_of_transaction,\n          share_count,\n          other_details,\n          purchase_details,\n          transaction_id AS purchase_transaction_id\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.investor_id AS investor_id,\n             LHS.transaction_type_code AS transaction_type_code,\n             LHS.date_of_transaction AS date_of_transaction,\n             LHS.amount_of_transaction AS amount_of_transaction,\n             LHS.share_count AS share_count,\n             LHS.other_details AS other_details,\n             RHS.purchase_details AS purchase_details\n      FROM transactions AS LHS\n      INNER JOIN purchases AS RHS ON (LHS.transaction_id = RHS.purchase_transaction_id)))\nWHERE (amount_of_transaction > 10000.0)\nORDER BY purchase_details\n", "sql2": "SELECT T1.purchase_details\nFROM PURCHASES AS T1\nJOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id\nWHERE T2.amount_of_transaction > 10000", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0023", "sql1": "\nSELECT transaction_type_code,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT other_details,\n          transaction_type_code,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM transactions\n   GROUP BY other_details,\n            transaction_type_code)\nORDER BY transaction_type_code\n", "sql2": "SELECT transaction_type_code,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS\nGROUP BY transaction_type_code", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0034", "sql1": "\nSELECT transaction_type_description\nFROM\n  (SELECT LHS.transaction_type_code AS transaction_type_code,\n          LHS.transaction_type_description AS transaction_type_description,\n          LHS.n AS n,\n          RHS.investor_id AS investor_id,\n          RHS.date_of_transaction AS date_of_transaction,\n          RHS.amount_of_transaction AS amount_of_transaction,\n          RHS.share_count AS share_count,\n          RHS.other_details AS other_details\n   FROM\n     (SELECT transaction_type_code,\n             transaction_type_description,\n             MAX(n) OVER () AS n\n      FROM\n        (SELECT transaction_type_code,\n                transaction_type_description,\n                COUNT(*) OVER () AS n\n         FROM ref_transaction_types)) AS LHS\n   INNER JOIN transactions AS RHS ON (LHS.n = RHS.transaction_id\n                                         AND LHS.transaction_type_code = RHS.transaction_type_code))\nORDER BY transaction_type_description\n", "sql2": "SELECT T1.transaction_type_description\nFROM Ref_Transaction_Types AS T1\nJOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code\nGROUP BY T1.transaction_type_code\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0022", "sql1": "\nSELECT `lot_details`\nFROM\n  (SELECT `lot_id`,\n          `investor_id`,\n          `lot_details`,\n          `investor_id_other`,\n          `transaction_type_code`,\n          `date_of_transaction`,\n          `amount_of_transaction`,\n          `share_count`,\n          `other_details`,\n          `lot_id` AS `transaction_id`,\n          `lot_id_other`\n   FROM\n     (SELECT `LHS`.`lot_id` AS `lot_id`,\n             `LHS`.`investor_id` AS `investor_id`,\n             `LHS`.`lot_details` AS `lot_details`,\n             `LHS`.`investor_id_other` AS `investor_id_other`,\n             `LHS`.`transaction_type_code` AS `transaction_type_code`,\n             `LHS`.`date_of_transaction` AS `date_of_transaction`,\n             `LHS`.`amount_of_transaction` AS `amount_of_transaction`,\n             `LHS`.`share_count` AS `share_count`,\n             `LHS`.`other_details` AS `other_details`,\n             `LHS`.`transaction_id` AS `transaction_id`,\n             `RHS`.`lot_id` AS `lot_id_other`\n      FROM\n        (SELECT `lot_id`,\n                `investor_id`,\n                `lot_details`,\n                `investor_id_other`,\n                `transaction_type_code`,\n                `date_of_transaction`,\n                `amount_of_transaction`,\n                `share_count`,\n                `other_details`,\n                `lot_id` AS `transaction_id`\n         FROM\n           (SELECT `LHS`.`lot_id` AS `lot_id`,\n                   `LHS`.`investor_id` AS `investor_id`,\n                   `LHS`.`lot_details` AS `lot_details`,\n                   `RHS`.`investor_id` AS `investor_id_other`,\n                   `RHS`.`transaction_type_code` AS `transaction_type_code`,\n                   `RHS`.`date_of_transaction` AS `date_of_transaction`,\n                   `RHS`.`amount_of_transaction` AS `amount_of_transaction`,\n                   `RHS`.`share_count` AS `share_count`,\n                   `RHS`.`other_details` AS `other_details`\n            FROM `lots` AS `LHS`\n            INNER JOIN `transactions` AS `RHS` ON (`LHS`.`lot_id` = `RHS`.`transaction_id`))) AS `LHS`\n      INNER JOIN `transactions_lots` AS `RHS` ON (`LHS`.`lot_id` = `RHS`.`transaction_id`)))\nWHERE (`transaction_type_code` = 'PUR')\nORDER BY lot_details\n", "sql2": "SELECT T1.lot_details\nFROM LOTS AS T1\nJOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id\nJOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id\nWHERE T3.share_count > 100\n  AND T3.transaction_type_code = 'PUR'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0018", "sql1": "\nSELECT `lot_details`\nFROM\n  (SELECT `LHS`.`investor_id` AS `investor_id`,\n          `LHS`.`investor_details` AS `investor_details`,\n          `RHS`.`lot_id` AS `lot_id`,\n          `RHS`.`lot_details` AS `lot_details`\n   FROM `investors` AS `LHS`\n   INNER JOIN `lots` AS `RHS` ON (`LHS`.`investor_id` = `RHS`.`investor_id`))\nWHERE (`investor_details` = 'l')\nORDER BY lot_details\n", "sql2": "SELECT T2.lot_details\nFROM INVESTORS AS T1\nJOIN LOTS AS T2 ON T1.investor_id = T2.investor_id\nWHERE T1.Investor_details = 'l'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0002", "sql1": "\nSELECT investor_details\nFROM investors\nORDER BY investor_details\n", "sql2": "SELECT Investor_details\nFROM INVESTORS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM investors\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM INVESTORS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0017", "sql1": "\nSELECT lot_details,\n       investor_id\nFROM lots\nORDER BY lot_details\n", "sql2": "SELECT lot_details,\n       investor_id\nFROM LOTS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0037", "sql1": "\nSELECT investor_id\nFROM\n  (SELECT investor_details,\n          investor_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.investor_id AS investor_id,\n             LHS.transaction_type_code AS transaction_type_code,\n             LHS.date_of_transaction AS date_of_transaction,\n             LHS.amount_of_transaction AS amount_of_transaction,\n             LHS.share_count AS share_count,\n             LHS.other_details AS other_details,\n             RHS.investor_details AS investor_details\n      FROM transactions AS LHS\n      INNER JOIN investors AS RHS ON (LHS.investor_id = RHS.investor_id))\n   GROUP BY investor_details,\n            investor_id)\nWHERE (n >= 2)\nORDER BY investor_id\n", "sql2": "SELECT T2.investor_id\nFROM INVESTORS AS T1\nJOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id\nGROUP BY T2.investor_id\nHAVING COUNT(*) >= 2", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0020", "sql1": "\nSELECT sales_details,\n       date_of_transaction\nFROM\n  (SELECT transaction_id,\n          investor_id,\n          transaction_type_code,\n          date_of_transaction,\n          amount_of_transaction,\n          share_count,\n          other_details,\n          sales_details,\n          transaction_id AS sales_transaction_id\n   FROM\n     (SELECT LHS.transaction_id AS transaction_id,\n             LHS.investor_id AS investor_id,\n             LHS.transaction_type_code AS transaction_type_code,\n             LHS.date_of_transaction AS date_of_transaction,\n             LHS.amount_of_transaction AS amount_of_transaction,\n             LHS.share_count AS share_count,\n             LHS.other_details AS other_details,\n             RHS.sales_details AS sales_details\n      FROM transactions AS LHS\n      INNER JOIN sales AS RHS ON (LHS.transaction_id = RHS.sales_transaction_id)))\nWHERE (amount_of_transaction <= 3000.0)\nORDER BY sales_details\n", "sql2": "SELECT T1.sales_details,\n       T2.date_of_transaction\nFROM SALES AS T1\nJOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id\nWHERE T2.amount_of_transaction < 3000", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0041", "sql1": "\nSELECT DISTINCT lot_details\nFROM\n  (SELECT *\n   FROM lots AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT LHS.transaction_id AS transaction_id,\n                  LHS.lot_id AS lot_id,\n                  RHS.investor_id AS investor_id,\n                  RHS.lot_details AS lot_details\n           FROM transactions_lots AS LHS\n           LEFT JOIN lots AS RHS ON (LHS.lot_id = RHS.lot_id)) AS RHS\n        WHERE (LHS.lot_details = RHS.lot_details) ))\nORDER BY lot_details\n", "sql2": "SELECT lot_details\nFROM Lots\nEXCEPT\nSELECT T1.lot_details\nFROM Lots AS T1\nJOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT transaction_type_code) OVER () AS count_distinct_transaction_type_code_\nFROM transactions\nORDER BY count_distinct_transaction_type_code_\n", "sql2": "SELECT COUNT(DISTINCT transaction_type_code)\nFROM TRANSACTIONS", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0031", "sql1": "\nSELECT investor_id,\n       n AS count___\nFROM\n  (SELECT investor_id,\n          COUNT(*) AS n\n   FROM transactions\n   GROUP BY investor_id)\nORDER BY investor_id\n", "sql2": "SELECT investor_id,\n       COUNT(*)\nFROM TRANSACTIONS\nGROUP BY investor_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0027", "sql1": "\nSELECT investor_id,\n       meanamount_of_transaction AS avg_amount_of_transaction_\nFROM\n  (SELECT investor_id,\n          other_details,\n          AVG(amount_of_transaction) AS meanamount_of_transaction\n   FROM transactions\n   GROUP BY investor_id,\n            other_details)\nORDER BY investor_id\n", "sql2": "SELECT investor_id,\n       avg(amount_of_transaction)\nFROM TRANSACTIONS\nGROUP BY investor_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0007", "sql1": "\nSELECT `transaction_id`\nFROM `transactions`\nWHERE (`transaction_type_code` = 'PUR')\nORDER BY transaction_id\n", "sql2": "SELECT transaction_id\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'PUR'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0011", "sql1": "\nSELECT DISTINCT `minamount_of_transaction` AS `min_amount_of_transaction_`\nFROM\n  (SELECT `transaction_id`,\n          `investor_id`,\n          `transaction_type_code`,\n          `date_of_transaction`,\n          `amount_of_transaction`,\n          `share_count`,\n          `other_details`,\n          MIN(`amount_of_transaction`) OVER () AS `minamount_of_transaction`\n   FROM `transactions`)\nWHERE (`transaction_type_code` != 'PUR'\n       OR minamount_of_transaction <= 50.0)\nORDER BY min_amount_of_transaction_\n", "sql2": "SELECT min(amount_of_transaction)\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'PUR'\n  AND share_count > 50", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0010", "sql1": "\nSELECT `transaction_type_description`\nFROM `ref_transaction_types`\nWHERE (`transaction_type_code` = 'PUR')\nORDER BY transaction_type_description\n", "sql2": "SELECT transaction_type_description\nFROM Ref_Transaction_Types\nWHERE transaction_type_code = 'PUR'", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_share_transactions/0030", "sql1": "\nSELECT `investor_id`,\n       `n` AS `count___`\nFROM\n  (SELECT `investor_id`,\n          `transaction_type_code`,\n          COUNT(*) AS `n`\n   FROM `transactions`\n   GROUP BY `investor_id`,\n            `transaction_type_code`)\nWHERE (`transaction_type_code` = 'SALE')\nORDER BY investor_id\n", "sql2": "SELECT investor_id,\n       COUNT(*)\nFROM TRANSACTIONS\nWHERE transaction_type_code = 'SALE'\nGROUP BY investor_id", "schema": "spider/tracking_share_transactions/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_share_transactions/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0033", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_\nFROM plays_games\nORDER BY count_distinct_stuid_\n", "sql2": "SELECT count(DISTINCT StuID)\nFROM Plays_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0013", "sql1": "\nSELECT fname\nFROM student\nWHERE (major = 600)\nORDER BY fname\n", "sql2": "SELECT Fname\nFROM Student\nWHERE Major = 600", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0005", "sql1": "\nSELECT `gname`\nFROM `video_games`\nWHERE (`gtype` = 'Collectible card game')\nORDER BY gname\n", "sql2": "SELECT gname\nFROM Video_games\nWHERE gtype = 'Collectible card game'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0029", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM `student` AS `LHS`\n   INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\nWHERE (`sex` = 'F'\n       AND `sportname` = 'Football')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE sex = 'F' INTERSECT\n  SELECT StuID\n  FROM Sportsinfo WHERE sportname = 'Football'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0028", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM `student` AS `LHS`\n   INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))\nWHERE (`onscholarship` = 'Y'\n       AND major = 600)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE major = 600 INTERSECT\n  SELECT StuID\n  FROM Sportsinfo WHERE onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0004", "sql1": "\nSELECT gname,\n       gtype\nFROM video_games\nORDER BY gname\n", "sql2": "SELECT gname,\n       gtype\nFROM Video_games\nORDER BY gname", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0012", "sql1": "\nSELECT stuid\nFROM student\nWHERE (advisor = 1121)\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE Advisor = 1121", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0008", "sql1": "\nSELECT gtype,\n       n AS count___\nFROM\n  (SELECT gtype,\n          COUNT(*) AS n\n   FROM video_games\n   GROUP BY gtype)\nORDER BY gtype\n", "sql2": "SELECT gtype,\n       count(*)\nFROM Video_games\nGROUP BY gtype", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0015", "sql1": "\nSELECT advisor\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor)\nWHERE (n >= 2)\nORDER BY advisor\n", "sql2": "SELECT advisor\nFROM Student\nGROUP BY advisor\nHAVING count(*) >= 2", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0003", "sql1": "\nSELECT gtype\nFROM video_games\nORDER BY gtype\n", "sql2": "SELECT DISTINCT gtype\nFROM Video_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0039", "sql1": "\nSELECT gname\nFROM\n  (SELECT gname,\n          SUM(hours_played) AS sumhours_played\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.gameid AS gameid,\n                LHS.gname AS gname,\n                LHS.gtype AS gtype,\n                RHS.stuid AS stuid,\n                RHS.hours_played AS hours_played\n         FROM video_games AS LHS\n         INNER JOIN plays_games AS RHS ON (LHS.gameid = RHS.gameid))\n      WHERE (hours_played >= 1000))\n   GROUP BY gname)\nORDER BY gname\n", "sql2": "SELECT gname\nFROM Plays_games AS T1\nJOIN Video_games AS T2 ON T1.gameid = T2.gameid\nGROUP BY T1.gameid\nHAVING sum(hours_played) >= 1000", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0019", "sql1": "\nSELECT `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `RHS`.`sportname` AS `sportname`,\n          `RHS`.`hoursperweek` AS `hoursperweek`,\n          `RHS`.`gamesplayed` AS `gamesplayed`,\n          `RHS`.`onscholarship` AS `onscholarship`\n   FROM `student` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `sportsinfo`\n      WHERE (`onscholarship` = 'Y')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY lname\n", "sql2": "SELECT T2.Lname\nFROM Sportsinfo AS T1\nJOIN Student AS T2 ON T1.StuID = T2.StuID\nWHERE T1.onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0035", "sql1": "\nSELECT DISTINCT stuid\nFROM\n  (SELECT LHS.stuid AS stuid,\n          LHS.sportname AS sportname,\n          LHS.hoursperweek AS hoursperweek,\n          LHS.gamesplayed AS gamesplayed,\n          LHS.onscholarship AS onscholarship,\n          RHS.gameid AS gameid,\n          RHS.hours_played AS hours_played\n   FROM sportsinfo AS LHS\n   INNER JOIN plays_games AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Sportsinfo INTERSECT\nSELECT StuID\nFROM Plays_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0034", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM plays_games AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Plays_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0022", "sql1": "\nSELECT sportname,\n       n AS count___\nFROM\n  (SELECT sportname,\n          COUNT(*) AS n\n   FROM sportsinfo\n   GROUP BY sportname)\nORDER BY sportname\n", "sql2": "SELECT sportname,\n       count(*)\nFROM Sportsinfo\nGROUP BY sportname", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0018", "sql1": "\nSELECT `stuid`\nFROM `sportsinfo`\nWHERE (`onscholarship` = 'Y')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Sportsinfo\nWHERE onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_gtype_\nFROM video_games\nORDER BY count_distinct_gtype_\n", "sql2": "SELECT count(DISTINCT gtype)\nFROM Video_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM video_games\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Video_games", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0017", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_\nFROM sportsinfo\nORDER BY count_distinct_stuid_\n", "sql2": "SELECT count(DISTINCT StuID)\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0040", "sql1": "\nSELECT `gname`\nFROM\n  (SELECT `LHS`.`gameid` AS `gameid`,\n          `LHS`.`gname` AS `gname`,\n          `LHS`.`gtype` AS `gtype`,\n          `LHS`.`stuid` AS `stuid`,\n          `LHS`.`hours_played` AS `hours_played`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT `LHS`.`gameid` AS `gameid`,\n             `LHS`.`gname` AS `gname`,\n             `LHS`.`gtype` AS `gtype`,\n             `RHS`.`stuid` AS `stuid`,\n             `RHS`.`hours_played` AS `hours_played`\n      FROM `video_games` AS `LHS`\n      INNER JOIN `plays_games` AS `RHS` ON (`LHS`.`gameid` = `RHS`.`gameid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`lname` = 'Smith'\n             OR `fname` = 'Linda')) AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY gname\n", "sql2": "SELECT Gname\nFROM Plays_games AS T1\nJOIN Video_games AS T2 ON T1.gameid = T2.gameid\nJOIN Student AS T3 ON T3.Stuid = T1.Stuid\nWHERE T3.Lname = 'Smith'\n  AND T3.Fname = 'Linda'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0037", "sql1": "\nSELECT stuid,\n       sumhours_played AS sum_hours_played_\nFROM\n  (SELECT stuid,\n          SUM(hours_played) AS sumhours_played\n   FROM plays_games\n   GROUP BY stuid)\nORDER BY stuid\n", "sql2": "SELECT Stuid,\n       sum(hours_played)\nFROM Plays_games\nGROUP BY Stuid", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0021", "sql1": "\nSELECT `sumgamesplayed` AS `sum_gamesplayed_`\nFROM\n  (SELECT `onscholarship`,\n          `sportname`,\n          SUM(`gamesplayed`) AS `sumgamesplayed`\n   FROM `sportsinfo`\n   GROUP BY `onscholarship`,\n            `sportname`)\nWHERE (`sportname` = 'Football'\n       AND `onscholarship` = 'Y')\nORDER BY sum_gamesplayed_\n", "sql2": "SELECT sum(gamesplayed)\nFROM Sportsinfo\nWHERE sportname = 'Football'\n  AND onscholarship = 'Y'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0020", "sql1": "\nSELECT sumgamesplayed AS sum_gamesplayed_\nFROM\n  (SELECT SUM(gamesplayed) AS sumgamesplayed\n   FROM sportsinfo)\nORDER BY sum_gamesplayed_\n", "sql2": "SELECT sum(gamesplayed)\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0036", "sql1": "\nSELECT gameid,\n       sumhours_played AS sum_hours_played_\nFROM\n  (SELECT gameid,\n          SUM(hours_played) AS sumhours_played\n   FROM plays_games\n   GROUP BY gameid)\nORDER BY gameid\n", "sql2": "SELECT gameid,\n       sum(hours_played)\nFROM Plays_games\nGROUP BY gameid", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0041", "sql1": "\nSELECT `lname`,\n       `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`sportname` AS `sportname`,\n          `LHS`.`hoursperweek` AS `hoursperweek`,\n          `LHS`.`gamesplayed` AS `gamesplayed`,\n          `LHS`.`onscholarship` AS `onscholarship`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`age` AS `age`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`major` AS `major`,\n          `RHS`.`advisor` AS `advisor`,\n          `RHS`.`city_code` AS `city_code`\n   FROM\n     (SELECT *\n      FROM `sportsinfo`\n      WHERE (`sportname` = 'Football'\n             OR `sportname` = 'Lacrosse')) AS LHS\n   LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))\nORDER BY lname\n", "sql2": "SELECT T2.lname,\n       T2.fname\nFROM SportsInfo AS T1\nJOIN Student AS T2 ON T1.StuID = T2.StuID\nWHERE T1.SportName = 'Football'\n  OR T1.SportName = 'Lacrosse'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT sportname) OVER () AS count_distinct_sportname_\nFROM sportsinfo\nORDER BY count_distinct_sportname_\n", "sql2": "SELECT count(DISTINCT sportname)\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0027", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM sportsinfo AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Sportsinfo", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0007", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT `gtype`,\n          COUNT(DISTINCT `gtype`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `video_games`\n      WHERE (`gtype` = 'Massively multiplayer online game'))\n   GROUP BY gtype)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Video_games\nWHERE gtype = 'Massively multiplayer online game'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0011", "sql1": "\nSELECT `stuid`\nFROM `student`\nWHERE (`city_code` = 'CHI')\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nWHERE city_code = 'CHI'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0010", "sql1": "\nSELECT gtype\nFROM\n  (SELECT n AS gameid,\n          gtype,\n          n,\n          gtype_other\n   FROM\n     (SELECT gameid,\n             gtype,\n             gameid AS n,\n             gtype_other\n      FROM\n        (SELECT LHS.gameid AS gameid,\n                LHS.gtype AS gtype,\n                LHS.n AS n,\n                RHS.gtype AS gtype_other\n         FROM\n           (SELECT gameid,\n                   gtype,\n                   COUNT(*) AS n\n            FROM video_games\n            GROUP BY gameid,\n                     gtype) AS LHS\n         INNER JOIN\n           (SELECT gameid,\n                   gtype,\n                   COUNT(*) AS n\n            FROM video_games\n            GROUP BY gameid,\n                     gtype) AS RHS ON (LHS.gameid = RHS.n\n                                       AND LHS.n = RHS.gameid))))\nORDER BY gtype\n", "sql2": "SELECT gtype\nFROM Video_games\nGROUP BY gtype\nORDER BY count(*)\nLIMIT 1", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/game_1/0006", "sql1": "\nSELECT `gtype`\nFROM `video_games`\nWHERE (`gname` = 'Call of Destiny')\nORDER BY gtype\n", "sql2": "SELECT gtype\nFROM Video_games\nWHERE gname = 'Call of Destiny'", "schema": "spider/game_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0009", "sql1": "\nSELECT `marketing_region_descriptrion`\nFROM `marketing_regions`\nWHERE (`marketing_region_name` = 'China')\nORDER BY marketing_region_descriptrion\n", "sql2": "SELECT Marketing_Region_Descriptrion\nFROM Marketing_Regions\nWHERE Marketing_Region_Name = 'China'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0013", "sql1": "\nSELECT `customer_phone`\nFROM `performers`\nWHERE (`customer_name` = 'Ashley')\nORDER BY customer_phone\n", "sql2": "SELECT Customer_Phone\nFROM PERFORMERS\nWHERE Customer_Name = 'Ashley'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0005", "sql1": "\nSELECT `customer_phone`,\n       `customer_email_address`\nFROM `customers`\nWHERE (`customer_name` = 'Harold')\nORDER BY customer_phone\n", "sql2": "SELECT Customer_Phone,\n       Customer_Email_Address\nFROM CUSTOMERS\nWHERE Customer_Name = 'Harold'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0028", "sql1": "\nSELECT actual_delivery_date\nFROM\n  (SELECT LHS.order_id AS order_id,\n          LHS.customer_id AS customer_id,\n          LHS.store_id AS store_id,\n          LHS.order_date AS order_date,\n          LHS.planned_delivery_date AS planned_delivery_date,\n          LHS.actual_delivery_date AS actual_delivery_date,\n          LHS.other_order_details AS other_order_details,\n          RHS.order_item_id AS order_item_id,\n          RHS.product_id AS product_id,\n          RHS.order_quantity AS order_quantity,\n          RHS.other_item_details AS other_item_details\n   FROM customer_orders AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM order_items\n      WHERE (order_quantity = 1)) AS RHS ON (LHS.order_id = RHS.order_id))\nORDER BY actual_delivery_date\n", "sql2": "SELECT T1.Actual_Delivery_Date\nFROM Customer_Orders AS T1\nJOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID\nWHERE T2.Order_Quantity = 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM customers\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CUSTOMERS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0012", "sql1": "\nSELECT product_name\nFROM products\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM Products\nORDER BY Product_Price ASC", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0024", "sql1": "\nSELECT product_name,\n       meanproduct_price AS avg_product_price_\nFROM\n  (SELECT product_description,\n          product_name,\n          AVG(product_price) AS meanproduct_price\n   FROM products\n   GROUP BY product_description,\n            product_name)\nORDER BY product_name\n", "sql2": "SELECT Product_Name,\n       avg(Product_Price)\nFROM PRODUCTS\nGROUP BY Product_Name", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0008", "sql1": "\nSELECT DISTINCT payment_method_code\nFROM invoices\nORDER BY payment_method_code\n", "sql2": "SELECT DISTINCT payment_method_code\nFROM INVOICES", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0015", "sql1": "\nSELECT DISTINCT payment_method_code\nFROM\n  (SELECT order_quantity,\n          payment_method_code,\n          MAX(n) AS n\n   FROM\n     (SELECT order_quantity,\n             payment_method_code,\n             COUNT(*) AS n\n      FROM\n        (SELECT invoice_id,\n                order_item_id AS order_id,\n                payment_method_code,\n                product_id,\n                order_quantity,\n                other_item_details,\n                order_item_id,\n                invoice_id_other,\n                payment_method_code_other,\n                order_quantity_other,\n                other_item_details_other,\n                order_item_id_other\n         FROM\n           (SELECT invoice_id,\n                   order_id,\n                   payment_method_code,\n                   order_id AS product_id,\n                   order_quantity,\n                   other_item_details,\n                   order_item_id,\n                   invoice_id_other,\n                   payment_method_code_other,\n                   order_quantity_other,\n                   other_item_details_other,\n                   order_item_id_other\n            FROM\n              (SELECT LHS.invoice_id AS invoice_id,\n                      LHS.order_id AS order_id,\n                      LHS.payment_method_code AS payment_method_code,\n                      LHS.product_id AS product_id,\n                      LHS.order_quantity AS order_quantity,\n                      LHS.other_item_details AS other_item_details,\n                      LHS.order_item_id AS order_item_id,\n                      RHS.invoice_id AS invoice_id_other,\n                      RHS.payment_method_code AS payment_method_code_other,\n                      RHS.order_quantity AS order_quantity_other,\n                      RHS.other_item_details AS other_item_details_other,\n                      RHS.order_item_id AS order_item_id_other\n               FROM invoices AS LHS\n               INNER JOIN invoices AS RHS ON (LHS.order_id = RHS.product_id\n                                                 AND LHS.order_item_id = RHS.order_id))))\n      GROUP BY order_quantity,\n               payment_method_code)\n   GROUP BY order_quantity,\n            payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code\nFROM INVOICES\nGROUP BY payment_method_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0003", "sql1": "\nSELECT planned_delivery_date,\n       actual_delivery_date\nFROM bookings\nORDER BY planned_delivery_date\n", "sql2": "SELECT Planned_Delivery_Date,\n       Actual_Delivery_Date\nFROM BOOKINGS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0019", "sql1": "\nSELECT service_type_description\nFROM\n  (SELECT LHS.service_type_code AS service_type_code,\n          LHS.parent_service_type_code AS parent_service_type_code,\n          LHS.service_type_description AS service_type_description,\n          RHS.service_id AS service_id,\n          RHS.workshop_group_id AS workshop_group_id,\n          RHS.product_description AS product_description,\n          RHS.product_name AS product_name,\n          RHS.product_price AS product_price,\n          RHS.other_product_service_details AS other_product_service_details\n   FROM ref_service_types AS LHS\n   INNER JOIN services AS RHS ON (LHS.service_type_code = RHS.service_type_code))\nWHERE (product_price >= 100.0)\nORDER BY service_type_description\n", "sql2": "SELECT T1.Service_Type_Description\nFROM Ref_Service_Types AS T1\nJOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code\nWHERE T2.Product_Price > 100", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0023", "sql1": "\nSELECT `store_phone`,\n       `store_email_address`\nFROM\n  (SELECT `LHS`.`workshop_group_id` AS `workshop_group_id`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`currency_code` AS `currency_code`,\n          `LHS`.`marketing_region_code` AS `marketing_region_code`,\n          `LHS`.`store_name` AS `store_name`,\n          `LHS`.`store_phone` AS `store_phone`,\n          `LHS`.`store_email_address` AS `store_email_address`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`service_id` AS `service_id`,\n          `RHS`.`service_type_code` AS `service_type_code`,\n          `RHS`.`product_description` AS `product_description`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_price` AS `product_price`,\n          `RHS`.`other_product_service_details` AS `other_product_service_details`\n   FROM `drama_workshop_groups` AS `LHS`\n   LEFT JOIN `services` AS `RHS` ON (`LHS`.`workshop_group_id` = `RHS`.`workshop_group_id`))\nWHERE (`product_name` = 'film')\nORDER BY store_phone\n", "sql2": "SELECT T1.Store_Phone,\n       T1.Store_Email_Address\nFROM Drama_Workshop_Groups AS T1\nJOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID\nWHERE T2.Product_Name = 'film'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0034", "sql1": "\nSELECT marketing_region_code\nFROM\n  (SELECT marketing_region_code,\n          n,\n          MAX(n) OVER () AS maxn\n   FROM\n     (SELECT marketing_region_code,\n             COUNT(*) AS n\n      FROM drama_workshop_groups\n      GROUP BY marketing_region_code))\nWHERE (maxn <= n)\nORDER BY marketing_region_code\n", "sql2": "SELECT Marketing_Region_Code\nFROM Drama_Workshop_Groups\nGROUP BY Marketing_Region_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0022", "sql1": "\nSELECT store_phone,\n       store_email_address\nFROM\n  (SELECT LHS.workshop_group_id AS workshop_group_id,\n          LHS.address_id AS address_id,\n          LHS.currency_code AS currency_code,\n          LHS.marketing_region_code AS marketing_region_code,\n          LHS.store_name AS store_name,\n          LHS.store_phone AS store_phone,\n          LHS.store_email_address AS store_email_address,\n          LHS.other_details AS other_details,\n          RHS.service_id AS service_id,\n          RHS.service_type_code AS service_type_code,\n          RHS.product_description AS product_description,\n          RHS.product_name AS product_name,\n          RHS.product_price AS product_price,\n          RHS.other_product_service_details AS other_product_service_details\n   FROM drama_workshop_groups AS LHS\n   INNER JOIN services AS RHS ON (LHS.workshop_group_id = RHS.workshop_group_id))\nORDER BY store_phone\n", "sql2": "SELECT T1.Store_Phone,\n       T1.Store_Email_Address\nFROM Drama_Workshop_Groups AS T1\nJOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0018", "sql1": "\nSELECT `marketing_region_name`\nFROM\n  (SELECT `LHS`.`marketing_region_code` AS `marketing_region_code`,\n          `LHS`.`marketing_region_name` AS `marketing_region_name`,\n          `LHS`.`marketing_region_descriptrion` AS `marketing_region_descriptrion`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`store_id` AS `store_id`,\n          `RHS`.`address_id` AS `address_id`,\n          `RHS`.`store_name` AS `store_name`,\n          `RHS`.`store_phone` AS `store_phone`,\n          `RHS`.`store_email_address` AS `store_email_address`,\n          `RHS`.`other_details` AS `other_details_other`\n   FROM `marketing_regions` AS `LHS`\n   INNER JOIN `stores` AS `RHS` ON (`LHS`.`marketing_region_code` = `RHS`.`marketing_region_code`))\nWHERE (`store_name` = 'Rob Dinning')\nORDER BY marketing_region_name\n", "sql2": "SELECT T1.Marketing_Region_Name\nFROM Marketing_Regions AS T1\nJOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code\nWHERE T2.Store_Name = 'Rob Dinning'", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0002", "sql1": "\nSELECT order_date\nFROM bookings\nORDER BY order_date\n", "sql2": "SELECT Order_Date\nFROM BOOKINGS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0014", "sql1": "\nSELECT payment_method_code,\n       n AS count___\nFROM\n  (SELECT payment_method_code,\n          COUNT(*) AS n\n   FROM invoices\n   GROUP BY payment_method_code)\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       count(*)\nFROM INVOICES\nGROUP BY payment_method_code", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM bookings\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM BOOKINGS", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0040", "sql1": "\nSELECT DISTINCT MAX(n) OVER () AS product_id\nFROM\n  (SELECT product_id,\n          COUNT(*) AS n\n   FROM invoices\n   GROUP BY product_id)\nORDER BY product_id\n", "sql2": "SELECT Product_ID\nFROM INVOICES\nGROUP BY Product_ID\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0020", "sql1": "\nSELECT service_type_description,\n       service_type_code,\n       n AS count___\nFROM\n  (SELECT service_type_code,\n          service_type_description,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.service_id AS service_id,\n             LHS.service_type_code AS service_type_code,\n             LHS.workshop_group_id AS workshop_group_id,\n             LHS.product_description AS product_description,\n             LHS.product_name AS product_name,\n             LHS.product_price AS product_price,\n             LHS.other_product_service_details AS other_product_service_details,\n             RHS.parent_service_type_code AS parent_service_type_code,\n             RHS.service_type_description AS service_type_description\n      FROM services AS LHS\n      INNER JOIN ref_service_types AS RHS ON (LHS.service_type_code = RHS.service_type_code))\n   GROUP BY service_type_code,\n            service_type_description)\nORDER BY service_type_description\n", "sql2": "SELECT T1.Service_Type_Description,\n       T2.Service_Type_Code,\n       COUNT(*)\nFROM Ref_Service_Types AS T1\nJOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code\nGROUP BY T2.Service_Type_Code", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0036", "sql1": "\nSELECT status_code\nFROM\n  (SELECT LHS.store_id AS store_id,\n          LHS.workshop_group_id AS workshop_group_id,\n          LHS.maxn AS maxn,\n          RHS.customer_id AS customer_id,\n          RHS.status_code AS status_code,\n          RHS.store_id AS store_id_other,\n          RHS.order_date AS order_date,\n          RHS.planned_delivery_date AS planned_delivery_date,\n          RHS.actual_delivery_date AS actual_delivery_date,\n          RHS.other_order_details AS other_order_details\n   FROM\n     (SELECT store_id,\n             workshop_group_id,\n             MAX(n) AS maxn\n      FROM\n        (SELECT booking_id,\n                customer_id,\n                workshop_group_id,\n                status_code,\n                store_id,\n                order_date,\n                planned_delivery_date,\n                actual_delivery_date,\n                other_order_details,\n                COUNT(*) OVER () AS n\n         FROM bookings)\n      GROUP BY store_id,\n               workshop_group_id) AS LHS\n   INNER JOIN bookings AS RHS ON (LHS.store_id = RHS.booking_id\n                                     AND LHS.workshop_group_id = RHS.workshop_group_id))\nORDER BY status_code\n\n[   764.127][MainProcess][INFO] Statistics:\n[   768.486][MainProcess][INFO] \tAttempted programs: 570 (approx)\n[   768.486][MainProcess][INFO] \t\tRejected: 569 (approx)\n[   768.486][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   768.486][MainProcess][INFO] \t\tEmpty outputs: 31 (5.4%) (approx)\n[   768.486][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   768.486][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   768.486][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   768.486][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   768.486][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   768.486][MainProcess][INFO] \tTotal time spent in enumerator: 67.187015 (approx)\n[   768.486][MainProcess][INFO] \t\tEnumerated 8.483782 programs/s avg. (just enumeration time)\n[   768.486][MainProcess][INFO] \t\tEnumerated 0.843441 programs/s avg. (overall)\n[   768.486][MainProcess][INFO] \tTotal time spent in evaluation & testing: 253.333747 (approx)\n[   768.486][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 0.755708 (approx)\n[   768.487][MainProcess][INFO] Solution found: [mutate(input0, 'n = n()'), summarise(line0, 'maxn = max(n)', \"'store_id','workshop_group_id'\"), inner_join(line1, input0, \"'store_id' = 'booking_id','workshop_group_id' = 'workshop_group_id'\")]\n[   768.487][MainProcess][INFO] Solution size: 3\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 163, in endr\n    rlib.R_gc()\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT Status_Code\nFROM BOOKINGS\nGROUP BY Status_Code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0011", "sql1": "\nSELECT DISTINCT product_name_other AS product_name\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product_name AS product_name,\n          LHS.product_price AS product_price,\n          LHS.product_description AS product_description,\n          LHS.other_product_service_details AS other_product_service_details,\n          LHS.maxproduct_price AS maxproduct_price,\n          RHS.product_id AS product_id_other,\n          RHS.product_name AS product_name_other,\n          RHS.product_price AS product_price_other,\n          RHS.product_description AS product_description_other,\n          RHS.other_product_service_details AS other_product_service_details_other,\n          RHS.maxproduct_price AS maxproduct_price_other\n   FROM\n     (SELECT product_id,\n             product_name,\n             product_price,\n             product_description,\n             other_product_service_details,\n             MAX(product_price) OVER () AS maxproduct_price\n      FROM products) AS LHS\n   CROSS JOIN\n     (SELECT product_id,\n             product_name,\n             product_price,\n             product_description,\n             other_product_service_details,\n             MAX(product_price) OVER () AS maxproduct_price\n      FROM products) AS RHS)\nWHERE (product_price_other = maxproduct_price_other)\nORDER BY product_name\n", "sql2": "SELECT Product_Name\nFROM PRODUCTS\nORDER BY Product_Price DESC\nLIMIT 1", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0010", "sql1": "\nSELECT DISTINCT product_name\nFROM\n  (SELECT product_id,\n          product_name,\n          product_price,\n          product_description,\n          other_product_service_details,\n          AVG(product_price) OVER () AS meanproduct_price\n   FROM products)\nWHERE (meanproduct_price <= product_price)\nORDER BY product_name\n", "sql2": "SELECT DISTINCT Product_Name\nFROM PRODUCTS\nWHERE Product_Price >\n    (SELECT avg(Product_Price)\n     FROM PRODUCTS)", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0006", "sql1": "\nSELECT store_name\nFROM drama_workshop_groups\nORDER BY store_name\n", "sql2": "SELECT Store_Name\nFROM Drama_Workshop_Groups", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/cre_Drama_Workshop_Groups/0030", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT currency_code) OVER () AS count_distinct_currency_code_\nFROM drama_workshop_groups\nORDER BY count_distinct_currency_code_\n", "sql2": "SELECT count(DISTINCT Currency_Code)\nFROM Drama_Workshop_Groups", "schema": "spider/cre_Drama_Workshop_Groups/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/cre_Drama_Workshop_Groups/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0009", "sql1": "\nSELECT n_distinct AS count_distinct_governor_\nFROM\n  (SELECT COUNT(DISTINCT governor) AS n_distinct\n   FROM party)\nORDER BY count_distinct_governor_\n", "sql2": "SELECT count(DISTINCT Governor)\nFROM party", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0025", "sql1": "\nSELECT DISTINCT county_name\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          LHS.maxpopulation AS maxpopulation,\n          RHS.county_id AS county_id_other,\n          RHS.county_name AS county_name_other,\n          RHS.population AS population_other,\n          RHS.zip_code AS zip_code_other,\n          RHS.maxpopulation AS maxpopulation_other\n   FROM\n     (SELECT county_id,\n             county_name,\n             population,\n             zip_code,\n             MAX(population) OVER () AS maxpopulation\n      FROM county) AS LHS\n   CROSS JOIN\n     (SELECT county_id,\n             county_name,\n             population,\n             zip_code,\n             MAX(population) OVER () AS maxpopulation\n      FROM county) AS RHS)\nWHERE (population >= maxpopulation_other)\nORDER BY county_name\n", "sql2": "SELECT County_name\nFROM county\nORDER BY Population DESC\nLIMIT 1", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0013", "sql1": "\nSELECT delegate,\n       county_name\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          RHS.election_id AS election_id,\n          RHS.counties_represented AS counties_represented,\n          RHS.delegate AS delegate,\n          RHS.party AS party,\n          RHS.first_elected AS first_elected,\n          RHS.committee AS committee\n   FROM county AS LHS\n   INNER JOIN election AS RHS ON (LHS.county_id = RHS.district))\nORDER BY delegate\n", "sql2": "SELECT T2.Delegate,\n       T1.County_name\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0005", "sql1": "\nSELECT DISTINCT district\nFROM election\nORDER BY district\n", "sql2": "SELECT DISTINCT District\nFROM election", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0012", "sql1": "\nSELECT election_id,\n       counties_represented,\n       district,\n       delegate,\n       party,\n       first_elected,\n       committee\nFROM election\nORDER BY election_id\n", "sql2": "SELECT *\nFROM election", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0024", "sql1": "\nSELECT county_name\nFROM county\nORDER BY county_name\n", "sql2": "SELECT County_name\nFROM county\nORDER BY County_name DESC", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0008", "sql1": "\nSELECT delegate,\n       committee\nFROM election\nORDER BY delegate\n", "sql2": "SELECT Delegate,\n       Committee\nFROM election", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0015", "sql1": "\nSELECT DISTINCT n AS count_distinct_t2_delegate_\nFROM\n  (SELECT LHS.county_id AS county_id,\n          LHS.county_name AS county_name,\n          LHS.population AS population,\n          LHS.zip_code AS zip_code,\n          LHS.election_id AS election_id,\n          LHS.counties_represented AS counties_represented,\n          LHS.district AS district,\n          LHS.delegate AS delegate,\n          LHS.party AS party,\n          LHS.first_elected AS first_elected,\n          LHS.committee AS committee,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.county_id AS county_id,\n             LHS.county_name AS county_name,\n             LHS.population AS population,\n             LHS.zip_code AS zip_code,\n             RHS.election_id AS election_id,\n             RHS.counties_represented AS counties_represented,\n             RHS.district AS district,\n             RHS.delegate AS delegate,\n             RHS.party AS party,\n             RHS.first_elected AS first_elected,\n             RHS.committee AS committee\n      FROM county AS LHS\n      CROSS JOIN election AS RHS) AS LHS\n   CROSS JOIN\n     (SELECT COUNT(*) AS n\n      FROM county\n      WHERE (population != 50000.0)) AS RHS)\nORDER BY count_distinct_t2_delegate_\n", "sql2": "SELECT count(DISTINCT T2.Delegate)\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nWHERE T1.Population > 50000", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0003", "sql1": "\nSELECT meanpopulation AS avg_population_\nFROM\n  (SELECT AVG(population) AS meanpopulation\n   FROM county)\nORDER BY avg_population_\n", "sql2": "SELECT avg(Population)\nFROM county", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0023", "sql1": "\nSELECT county_name\nFROM county\nORDER BY county_name\n", "sql2": "SELECT County_name\nFROM county\nORDER BY Population ASC", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0034", "sql1": "\nSELECT `committee`\nFROM\n  (SELECT `election_id`,\n          `counties_represented`,\n          `district`,\n          `delegate`,\n          `party`,\n          `first_elected`,\n          `committee`,\n          `party_other`,\n          `governor`,\n          `lieutenant_governor`,\n          `comptroller`,\n          `attorney_general`,\n          `us_senate`,\n          `election_id` AS `party_id`\n   FROM\n     (SELECT `LHS`.`election_id` AS `election_id`,\n             `LHS`.`counties_represented` AS `counties_represented`,\n             `LHS`.`district` AS `district`,\n             `LHS`.`delegate` AS `delegate`,\n             `LHS`.`party` AS `party`,\n             `LHS`.`first_elected` AS `first_elected`,\n             `LHS`.`committee` AS `committee`,\n             `RHS`.`party` AS `party_other`,\n             `RHS`.`governor` AS `governor`,\n             `RHS`.`lieutenant_governor` AS `lieutenant_governor`,\n             `RHS`.`comptroller` AS `comptroller`,\n             `RHS`.`attorney_general` AS `attorney_general`,\n             `RHS`.`us_senate` AS `us_senate`\n      FROM `election` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `party`\n         WHERE (`party` = 'Democratic'\n                OR `party` = 'Liberal')) AS RHS ON (LHS.election_id = RHS.party_id\n                                                    AND LHS.first_elected = RHS.year)))\nORDER BY committee\n", "sql2": "SELECT T1.Committee\nFROM election AS T1\nJOIN party AS T2 ON T1.Party = T2.Party_ID\nWHERE T2.Party = 'Democratic' INTERSECT\n  SELECT T1.Committee\n  FROM election AS T1\n  JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = 'Liberal'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0002", "sql1": "\nSELECT county_name,\n       population\nFROM county\nORDER BY county_name\n", "sql2": "SELECT County_name,\n       Population\nFROM county", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM county\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM county", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0016", "sql1": "\nSELECT `county_name`\nFROM\n  (SELECT `LHS`.`county_id` AS `county_id`,\n          `LHS`.`county_name` AS `county_name`,\n          `LHS`.`population` AS `population`,\n          `LHS`.`zip_code` AS `zip_code`,\n          `RHS`.`election_id` AS `election_id`,\n          `RHS`.`counties_represented` AS `counties_represented`,\n          `RHS`.`delegate` AS `delegate`,\n          `RHS`.`party` AS `party`,\n          `RHS`.`first_elected` AS `first_elected`,\n          `RHS`.`committee` AS `committee`\n   FROM `county` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `election`\n      WHERE (`committee` = 'Appropriations')) AS RHS ON (LHS.county_id = RHS.district))\nORDER BY county_name\n", "sql2": "SELECT T1.County_name\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nWHERE T2.Committee = 'Appropriations'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0027", "sql1": "\nSELECT county_name\nFROM\n  (SELECT county_id,\n          county_name,\n          population,\n          zip_code,\n          n,\n          county_id AS district\n   FROM\n     (SELECT LHS.county_id AS county_id,\n             LHS.county_name AS county_name,\n             LHS.population AS population,\n             LHS.zip_code AS zip_code,\n             RHS.n AS n\n      FROM county AS LHS\n      INNER JOIN\n        (SELECT district,\n                COUNT(*) AS n\n         FROM election\n         GROUP BY district) AS RHS ON (LHS.county_id = RHS.district)))\nWHERE (n >= 2)\nORDER BY county_name\n", "sql2": "SELECT T1.County_name\nFROM county AS T1\nJOIN election AS T2 ON T1.County_id = T2.District\nGROUP BY T1.County_id\nHAVING COUNT(*) >= 2", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0007", "sql1": "\nSELECT delegate\nFROM election\nWHERE (district = 1)\nORDER BY delegate\n", "sql2": "SELECT Delegate\nFROM election\nWHERE District = 1", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0011", "sql1": "\nSELECT DISTINCT `year`\nFROM `party`\nWHERE (`governor` = 'Eliot Spitzer')\nORDER BY YEAR\n", "sql2": "SELECT DISTINCT YEAR\nFROM party\nWHERE Governor = 'Eliot Spitzer'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0010", "sql1": "\nSELECT `lieutenant_governor`,\n       `comptroller`\nFROM `party`\nWHERE (`party` = 'Democratic')\nORDER BY lieutenant_governor\n", "sql2": "SELECT Lieutenant_Governor,\n       Comptroller\nFROM party\nWHERE Party = 'Democratic'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0006", "sql1": "\nSELECT `zip_code`\nFROM `county`\nWHERE (`county_name` = 'Howard')\nORDER BY zip_code\n", "sql2": "SELECT Zip_code\nFROM county\nWHERE County_name = 'Howard'", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0026", "sql1": "\nSELECT county_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM county\n      ORDER BY population)\n   LIMIT 3)\n", "sql2": "SELECT County_name\nFROM county\nORDER BY Population ASC\nLIMIT 3", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/election/0030", "sql1": "\nSELECT attorney_general AS governor\nFROM\n  (SELECT LHS.attorney_general AS attorney_general,\n          LHS.n AS n\n   FROM\n     (SELECT attorney_general,\n             COUNT(*) AS n\n      FROM party\n      GROUP BY attorney_general) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT attorney_general,\n                COUNT(*) AS n\n         FROM party\n         GROUP BY attorney_general)) AS RHS ON (LHS.n = RHS.n))\nORDER BY governor\n", "sql2": "SELECT Governor\nFROM party\nGROUP BY Governor\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/election/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0009", "sql1": "\nSELECT publication_date\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM publication\n      ORDER BY price)\n   LIMIT 3)\n", "sql2": "SELECT Publication_Date\nFROM publication\nORDER BY Price ASC\nLIMIT 3", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0013", "sql1": "\nSELECT publisher\nFROM\n  (SELECT publisher,\n          COUNT(*) AS n\n   FROM publication\n   GROUP BY publisher)\nWHERE (n > 1)\nORDER BY publisher\n", "sql2": "SELECT Publisher\nFROM publication\nGROUP BY Publisher\nHAVING COUNT(*) > 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0005", "sql1": "\nSELECT title,\n       issues\nFROM book\nORDER BY title\n", "sql2": "SELECT Title,\n       Issues\nFROM book", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0004", "sql1": "\nSELECT `title`\nFROM `book`\nWHERE (`writer` != 'Elaine Lee')\nORDER BY title\n", "sql2": "SELECT Title\nFROM book\nWHERE Writer != 'Elaine Lee'", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0012", "sql1": "\nSELECT title\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.title AS title,\n          RHS.issues AS issues,\n          RHS.writer AS writer\n   FROM publication AS LHS\n   INNER JOIN book AS RHS ON (LHS.book_id = RHS.book_id))\nORDER BY title\n", "sql2": "SELECT T1.Title\nFROM book AS T1\nJOIN publication AS T2 ON T1.Book_ID = T2.Book_ID\nORDER BY T2.Price DESC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0008", "sql1": "\nSELECT DISTINCT publisher\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.publication_id AS publication_id_other,\n          RHS.book_id AS book_id_other,\n          RHS.publisher AS publisher_other,\n          RHS.publication_date AS publication_date_other,\n          RHS.price AS price_other\n   FROM publication AS LHS\n   CROSS JOIN\n     (SELECT publication_id,\n             book_id,\n             publisher,\n             publication_date,\n             MAX(price) OVER () AS price\n      FROM publication) AS RHS)\nWHERE (price >= price_other)\nORDER BY publisher\n", "sql2": "SELECT Publisher\nFROM publication\nORDER BY Price DESC\nLIMIT 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0015", "sql1": "\nSELECT publication_date\nFROM\n  (SELECT book_id,\n          publication_date,\n          MAX(n) AS n\n   FROM\n     (SELECT publication_id,\n             book_id,\n             publisher,\n             publication_date,\n             price,\n             book_id_other,\n             publication_id AS n\n      FROM\n        (SELECT LHS.publication_id AS publication_id,\n                LHS.book_id AS book_id,\n                LHS.publisher AS publisher,\n                LHS.publication_date AS publication_date,\n                LHS.price AS price,\n                RHS.book_id AS book_id_other\n         FROM publication AS LHS\n         INNER JOIN\n           (SELECT book_id,\n                   COUNT(*) AS n\n            FROM publication\n            GROUP BY book_id) AS RHS ON (LHS.publication_id = RHS.n)))\n   GROUP BY book_id,\n            publication_date)\nORDER BY publication_date\n", "sql2": "SELECT Publication_Date\nFROM publication\nGROUP BY Publication_Date\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0003", "sql1": "\nSELECT title\nFROM book\nORDER BY title\n", "sql2": "SELECT Title\nFROM book\nORDER BY Issues ASC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0019", "sql1": "\nSELECT n_distinct AS count__distinct_publication_date_\nFROM\n  (SELECT COUNT(DISTINCT publication_date) AS n_distinct\n   FROM publication)\nORDER BY count__distinct_publication_date_\n", "sql2": "SELECT COUNT (DISTINCT Publication_Date)\nFROM publication", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0018", "sql1": "\nSELECT publisher\nFROM publication\nWHERE (price >= 10000000.0\n       AND price != 5000000.0)\nORDER BY publisher\n", "sql2": "SELECT Publisher\nFROM publication\nWHERE Price > 10000000 INTERSECT\n  SELECT Publisher\n  FROM publication WHERE Price < 5000000", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0002", "sql1": "\nSELECT writer\nFROM book\nORDER BY writer\n", "sql2": "SELECT Writer\nFROM book\nORDER BY Writer ASC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0014", "sql1": "\nSELECT publisher,\n       n AS count___\nFROM\n  (SELECT publisher,\n          COUNT(*) AS n\n   FROM publication\n   GROUP BY publisher)\nORDER BY publisher\n", "sql2": "SELECT Publisher,\n       COUNT(*)\nFROM publication\nGROUP BY Publisher", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM book\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM book", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0017", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM book AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM publication AS RHS\n        WHERE (LHS.book_id = RHS.book_id) ))\nORDER BY title\n", "sql2": "SELECT Title\nFROM book\nWHERE Book_ID NOT IN\n    (SELECT Book_ID\n     FROM publication)", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0020", "sql1": "\nSELECT `price`\nFROM `publication`\nWHERE (`publisher` = 'Wiley')\nORDER BY price\n", "sql2": "SELECT Price\nFROM publication\nWHERE Publisher = 'Person'\n  OR Publisher = 'Wiley'", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0016", "sql1": "\nSELECT writer\nFROM\n  (SELECT writer,\n          COUNT(*) AS n\n   FROM book\n   GROUP BY writer)\nWHERE (n != 1)\nORDER BY writer\n", "sql2": "SELECT Writer\nFROM book\nGROUP BY Writer\nHAVING COUNT(*) > 1", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0007", "sql1": "\nSELECT publisher\nFROM publication\nWHERE (price >= 5000000.0)\nORDER BY publisher\n", "sql2": "SELECT DISTINCT Publisher\nFROM publication\nWHERE Price > 5000000", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0011", "sql1": "\nSELECT writer\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.title AS title,\n          RHS.issues AS issues,\n          RHS.writer AS writer\n   FROM\n     (SELECT *\n      FROM publication\n      WHERE (price >= 4000000.0)) AS LHS\n   LEFT JOIN book AS RHS ON (LHS.book_id = RHS.book_id))\nORDER BY writer\n", "sql2": "SELECT T1.Writer\nFROM book AS T1\nJOIN publication AS T2 ON T1.Book_ID = T2.Book_ID\nWHERE T2.Price > 4000000", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0010", "sql1": "\nSELECT title,\n       publication_date\nFROM\n  (SELECT LHS.publication_id AS publication_id,\n          LHS.book_id AS book_id,\n          LHS.publisher AS publisher,\n          LHS.publication_date AS publication_date,\n          LHS.price AS price,\n          RHS.title AS title,\n          RHS.issues AS issues,\n          RHS.writer AS writer\n   FROM publication AS LHS\n   INNER JOIN book AS RHS ON (LHS.book_id = RHS.book_id))\nORDER BY title\n", "sql2": "SELECT T1.Title,\n       T2.Publication_Date\nFROM book AS T1\nJOIN publication AS T2 ON T1.Book_ID = T2.Book_ID", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/book_2/0006", "sql1": "\nSELECT publication_date\nFROM publication\nORDER BY publication_date\n", "sql2": "SELECT Publication_Date\nFROM publication\nORDER BY Price DESC", "schema": "spider/book_2/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0009", "sql1": "\nSELECT song\nFROM volume\nWHERE (weeks_on_top != 1.0)\nORDER BY song\n", "sql2": "SELECT Song\nFROM volume\nWHERE Weeks_on_Top > 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0025", "sql1": "\nSELECT DISTINCT famous_title\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM artist AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nWHERE (weeks_on_top > 2.0)\nORDER BY famous_title\n", "sql2": "SELECT T1.Famous_Title\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T2.Weeks_on_Top > 2 INTERSECT\n  SELECT T1.Famous_Title\n  FROM artist AS T1\n  JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0013", "sql1": "\nSELECT `song`\nFROM\n  (SELECT `LHS`.`volume_id` AS `volume_id`,\n          `LHS`.`volume_issue` AS `volume_issue`,\n          `LHS`.`issue_date` AS `issue_date`,\n          `LHS`.`weeks_on_top` AS `weeks_on_top`,\n          `LHS`.`song` AS `song`,\n          `LHS`.`artist_id` AS `artist_id`,\n          `RHS`.`music_festival` AS `music_festival`,\n          `RHS`.`date_of_ceremony` AS `date_of_ceremony`,\n          `RHS`.`category` AS `category`,\n          `RHS`.`volume` AS `volume`,\n          `RHS`.`result` AS `result`\n   FROM `volume` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `music_festival`\n      WHERE (`result` = 'Nominated')) AS RHS ON (LHS.volume_id = RHS.id))\nORDER BY song\n", "sql2": "SELECT T2.Song\nFROM music_festival AS T1\nJOIN volume AS T2 ON T1.Volume = T2.Volume_ID\nWHERE T1.Result = 'Nominated'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0005", "sql1": "\nSELECT DISTINCT famous_release_date\nFROM artist\nORDER BY famous_release_date\n", "sql2": "SELECT distinct(Famous_Release_date)\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0029", "sql1": "\nSELECT issue_date\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM artist AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nWHERE (age <= 23)\nORDER BY issue_date\n", "sql2": "SELECT Issue_Date\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.age <= 23", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0028", "sql1": "\nSELECT RESULT,\n       n AS count___\nFROM\n  (SELECT date_of_ceremony,\n          RESULT,\n          COUNT(*) AS n\n   FROM music_festival\n   GROUP BY date_of_ceremony,\n            RESULT)\nORDER BY RESULT\n", "sql2": "SELECT RESULT,\n       COUNT(*)\nFROM music_festival\nGROUP BY RESULT\nORDER BY COUNT(*) DESC", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0004", "sql1": "\nSELECT `famous_title`\nFROM `artist`\nWHERE (`artist` = 'Triumfall')\nORDER BY famous_title\n", "sql2": "SELECT Famous_Title\nFROM artist\nWHERE Artist = 'Triumfall'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0012", "sql1": "\nSELECT date_of_ceremony\nFROM\n  (SELECT volume_id,\n          volume_issue,\n          issue_date,\n          weeks_on_top,\n          song,\n          artist_id,\n          music_festival,\n          date_of_ceremony,\n          category,\n          RESULT,\n          volume_id AS volume\n   FROM\n     (SELECT LHS.volume_id AS volume_id,\n             LHS.volume_issue AS volume_issue,\n             LHS.issue_date AS issue_date,\n             LHS.weeks_on_top AS weeks_on_top,\n             LHS.song AS song,\n             LHS.artist_id AS artist_id,\n             RHS.music_festival AS music_festival,\n             RHS.date_of_ceremony AS date_of_ceremony,\n             RHS.category AS category,\n             RHS.result AS RESULT\n      FROM volume AS LHS\n      INNER JOIN music_festival AS RHS ON (LHS.volume_id = RHS.volume\n                                              AND LHS.artist_id = RHS.id)))\nORDER BY date_of_ceremony\n", "sql2": "SELECT T1.Date_of_ceremony\nFROM music_festival AS T1\nJOIN volume AS T2 ON T1.Volume = T2.Volume_ID\nWHERE T2.Weeks_on_Top > 2", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0024", "sql1": "\nSELECT famous_title\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM volume AS RHS\n        WHERE (LHS.artist_id = RHS.artist_id) ))\nORDER BY famous_title\n", "sql2": "SELECT Famous_Title\nFROM artist\nWHERE Artist_ID NOT IN\n    (SELECT Artist_ID\n     FROM volume)", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0008", "sql1": "\nSELECT DISTINCT maxweeks_on_top AS max_weeks_on_top_,\n                MIN(weeks_on_top) OVER () AS min_weeks_on_top_\nFROM\n  (SELECT volume_id,\n          volume_issue,\n          issue_date,\n          weeks_on_top,\n          song,\n          artist_id,\n          MAX(weeks_on_top) OVER () AS maxweeks_on_top\n   FROM volume)\nORDER BY max_weeks_on_top_\n", "sql2": "SELECT max(Weeks_on_Top),\n       min(Weeks_on_Top)\nFROM volume", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0015", "sql1": "\nSELECT song\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM artist AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nWHERE (age >= 32)\nORDER BY song\n", "sql2": "SELECT T2.Song\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.age >= 32", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0003", "sql1": "\nSELECT meanage AS avg_age_\nFROM\n  (SELECT AVG(age) AS meanage\n   FROM artist)\nORDER BY avg_age_\n", "sql2": "SELECT avg(Age)\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0019", "sql1": "\nSELECT famous_release_date\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.artist AS artist,\n          LHS.age AS age,\n          LHS.famous_title AS famous_title,\n          LHS.famous_release_date AS famous_release_date,\n          LHS.maxage AS maxage,\n          RHS.artist_id AS artist_id_other,\n          RHS.artist AS artist_other,\n          RHS.age AS age_other,\n          RHS.famous_release_date AS famous_release_date_other\n   FROM\n     (SELECT artist_id,\n             artist,\n             age,\n             famous_title,\n             famous_release_date,\n             MAX(age) OVER () AS maxage\n      FROM artist) AS LHS\n   INNER JOIN\n     (SELECT artist_id,\n             artist,\n             age,\n             famous_title,\n             famous_release_date,\n             MAX(age) OVER () AS maxage\n      FROM artist) AS RHS ON (LHS.age = RHS.maxage\n                                 AND LHS.famous_title = RHS.famous_title))\nORDER BY famous_release_date\n", "sql2": "SELECT Famous_Release_date\nFROM artist\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0023", "sql1": "\nSELECT DISTINCT song\nFROM\n  (SELECT volume_id,\n          volume_issue,\n          issue_date,\n          weeks_on_top,\n          song,\n          volume_id AS artist_id,\n          maxweeks_on_top,\n          volume_id_other,\n          volume_issue_other,\n          issue_date_other,\n          song_other,\n          maxweeks_on_top_other\n   FROM\n     (SELECT LHS.volume_id AS volume_id,\n             LHS.volume_issue AS volume_issue,\n             LHS.issue_date AS issue_date,\n             LHS.weeks_on_top AS weeks_on_top,\n             LHS.song AS song,\n             LHS.artist_id AS artist_id,\n             LHS.maxweeks_on_top AS maxweeks_on_top,\n             RHS.volume_id AS volume_id_other,\n             RHS.volume_issue AS volume_issue_other,\n             RHS.issue_date AS issue_date_other,\n             RHS.song AS song_other,\n             RHS.maxweeks_on_top AS maxweeks_on_top_other\n      FROM\n        (SELECT volume_id,\n                volume_issue,\n                issue_date,\n                weeks_on_top,\n                song,\n                artist_id,\n                MAX(weeks_on_top) OVER () AS maxweeks_on_top\n         FROM volume) AS LHS\n      INNER JOIN\n        (SELECT volume_id,\n                volume_issue,\n                issue_date,\n                weeks_on_top,\n                song,\n                artist_id,\n                MAX(weeks_on_top) OVER () AS maxweeks_on_top\n         FROM volume) AS RHS ON (LHS.volume_id = RHS.artist_id\n                                    AND LHS.maxweeks_on_top = RHS.weeks_on_top)))\nORDER BY song\n", "sql2": "SELECT Song\nFROM volume\nORDER BY Weeks_on_Top DESC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0022", "sql1": "\nSELECT DISTINCT category\nFROM\n  (SELECT category,\n          RESULT,\n          COUNT(*) AS n\n   FROM music_festival\n   GROUP BY category,\n            RESULT)\nWHERE (n > 1)\nORDER BY category\n", "sql2": "SELECT Category\nFROM music_festival\nGROUP BY Category\nHAVING COUNT(*) > 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0018", "sql1": "\nSELECT famous_title,\n       age\nFROM artist\nORDER BY famous_title\n", "sql2": "SELECT Famous_Title,\n       Age\nFROM artist\nORDER BY Age DESC", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0002", "sql1": "\nSELECT age\nFROM artist\nORDER BY age\n", "sql2": "SELECT Age\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0014", "sql1": "\nSELECT `issue_date`\nFROM\n  (SELECT `LHS`.`artist_id` AS `artist_id`,\n          `LHS`.`artist` AS `artist`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`famous_title` AS `famous_title`,\n          `LHS`.`famous_release_date` AS `famous_release_date`,\n          `RHS`.`volume_id` AS `volume_id`,\n          `RHS`.`volume_issue` AS `volume_issue`,\n          `RHS`.`issue_date` AS `issue_date`,\n          `RHS`.`weeks_on_top` AS `weeks_on_top`,\n          `RHS`.`song` AS `song`\n   FROM `artist` AS `LHS`\n   INNER JOIN `volume` AS `RHS` ON (`LHS`.`artist_id` = `RHS`.`artist_id`))\nWHERE (`artist` = 'Gorgoroth')\nORDER BY issue_date\n", "sql2": "SELECT T2.Issue_Date\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.Artist = 'Gorgoroth'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM artist\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artist", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0021", "sql1": "\nSELECT RESULT\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT id,\n                music_festival,\n                date_of_ceremony,\n                category,\n                volume,\n                RESULT,\n                MAX(n) OVER () AS n\n         FROM\n           (SELECT id,\n                   music_festival,\n                   date_of_ceremony,\n                   category,\n                   volume,\n                   RESULT,\n                   COUNT(*) OVER () AS n\n            FROM music_festival))\n      ORDER BY volume)\n   LIMIT 1)\n", "sql2": "SELECT RESULT\nFROM music_festival\nGROUP BY RESULT\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0020", "sql1": "\nSELECT category,\n       n AS count___\nFROM\n  (SELECT category,\n          date_of_ceremony,\n          COUNT(*) AS n\n   FROM music_festival\n   GROUP BY category,\n            date_of_ceremony)\nORDER BY category\n", "sql2": "SELECT Category,\n       COUNT(*)\nFROM music_festival\nGROUP BY Category", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0016", "sql1": "\nSELECT weeks_on_top AS avg_t2_weeks_on_top_\nFROM\n  (SELECT LHS.age AS age,\n          LHS.artist_id AS artist_id,\n          LHS.meanage AS meanage,\n          RHS.volume_id AS volume_id,\n          RHS.volume_issue AS volume_issue,\n          RHS.issue_date AS issue_date,\n          RHS.weeks_on_top AS weeks_on_top,\n          RHS.song AS song\n   FROM\n     (SELECT *\n      FROM\n        (SELECT age,\n                artist_id,\n                AVG(age) AS meanage\n         FROM artist\n         GROUP BY age,\n                  artist_id)\n      WHERE (age < 25\n             AND meanage >= age)) AS LHS\n   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))\nORDER BY avg_t2_weeks_on_top_\n", "sql2": "SELECT avg(T2.Weeks_on_Top)\nFROM artist AS T1\nJOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID\nWHERE T1.age <= 25", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0007", "sql1": "\nSELECT `category`\nFROM `music_festival`\nWHERE (`result` = 'Awarded')\nORDER BY category\n", "sql2": "SELECT Category\nFROM music_festival\nWHERE RESULT = 'Awarded'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0011", "sql1": "\nSELECT n_distinct AS count_distinct_artist_id_\nFROM\n  (SELECT COUNT(DISTINCT artist_id) AS n_distinct\n   FROM volume)\nORDER BY count_distinct_artist_id_\n", "sql2": "SELECT COUNT(DISTINCT Artist_ID)\nFROM volume", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0010", "sql1": "\nSELECT song\nFROM volume\nORDER BY song\n", "sql2": "SELECT Song\nFROM volume\nORDER BY Song", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0006", "sql1": "\nSELECT date_of_ceremony,\n       RESULT\nFROM music_festival\nORDER BY date_of_ceremony\n", "sql2": "SELECT Date_of_ceremony,\n       RESULT\nFROM music_festival", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/music_4/0026", "sql1": "\nSELECT `date_of_ceremony`\nFROM `music_festival`\nWHERE (`category` = 'Best Song'\n       AND `result` = 'Awarded')\nORDER BY date_of_ceremony\n", "sql2": "SELECT Date_of_ceremony\nFROM music_festival\nWHERE Category = 'Best Song'\n  AND RESULT = 'Awarded'", "schema": "spider/music_4/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0025", "sql1": "\nSELECT name,\n       balance\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.custid AS custid,\n                LHS.balance AS balance,\n                RHS.name AS name\n         FROM savings AS LHS\n         INNER JOIN accounts AS RHS ON (LHS.custid = RHS.custid))\n      ORDER BY custid)\n   LIMIT 3)\n", "sql2": "SELECT T1.name,\n       T2.balance\nFROM accounts AS T1\nJOIN savings AS T2 ON T1.custid = T2.custid\nORDER BY T2.balance DESC\nLIMIT 3", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0005", "sql1": "\nSELECT COUNT(*) OVER () AS count___\nFROM\n  (SELECT AVG(balance) AS meanbalance\n   FROM savings)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM savings\nWHERE balance >\n    (SELECT avg(balance)\n     FROM savings)", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0004", "sql1": "\nSELECT DISTINCT AVG(balance) OVER () AS avg_balance_\nFROM checking\nORDER BY avg_balance_\n", "sql2": "SELECT avg(balance)\nFROM checking", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0008", "sql1": "\nSELECT `balance` AS `balance___1`,\n       `balance_other` AS `balance___2`\nFROM\n  (SELECT `LHS`.`custid` AS `custid`,\n          `LHS`.`balance` AS `balance`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`balance` AS `balance_other`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`custid` AS `custid`,\n                `LHS`.`balance` AS `balance`,\n                `RHS`.`name` AS `name`\n         FROM `checking` AS `LHS`\n         LEFT JOIN `accounts` AS `RHS` ON (`LHS`.`custid` = `RHS`.`custid`))\n      WHERE (`name` = 'Brown')) AS LHS\n   INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid))\nORDER BY balance___1\n", "sql2": "SELECT T2.balance,\n       T3.balance\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nJOIN savings AS T3 ON T1.custid = T3.custid\nWHERE T1.name = 'Brown'", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0015", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          LHS.balance AS balance,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.custid AS custid,\n             LHS.name AS name,\n             RHS.balance AS balance\n      FROM accounts AS LHS\n      INNER JOIN checking AS RHS ON (LHS.custid = RHS.custid)) AS LHS\n   INNER JOIN\n     (SELECT name,\n             COUNT(*) AS n\n      FROM accounts\n      GROUP BY name) AS RHS ON (LHS.name = RHS.name))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nGROUP BY T1.name", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0003", "sql1": "\nSELECT DISTINCT SUM(balance) OVER () AS sum_balance_\nFROM checking\nORDER BY sum_balance_\n", "sql2": "SELECT sum(balance)\nFROM checking", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0022", "sql1": "\nSELECT balance_other AS balance___1,\n       balance AS balance___2,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          LHS.balance AS balance,\n          RHS.custid AS custid_other,\n          RHS.balance AS balance_other\n   FROM\n     (SELECT LHS.custid AS custid,\n             LHS.name AS name,\n             RHS.balance AS balance\n      FROM accounts AS LHS\n      INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid)) AS LHS\n   CROSS JOIN checking AS RHS)\nWHERE (custid = custid_other)\nORDER BY balance___1\n", "sql2": "SELECT T2.balance,\n       T3.balance,\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nJOIN savings AS T3 ON T1.custid = T3.custid\nORDER BY T2.balance + T3.balance DESC", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0002", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM accounts\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM accounts", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0001", "sql1": "\nSELECT DISTINCT SUM(`balance`) OVER () AS `sum_t2_balance_`\nFROM\n  (SELECT *\n   FROM `savings` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `accounts`\n           WHERE (`name` = 'Brown')) AS RHS\n        WHERE (LHS.custid = RHS.custid) ))\nORDER BY sum_t2_balance_\n", "sql2": "SELECT sum(T2.balance)\nFROM accounts AS T1\nJOIN savings AS T2 ON T1.custid = T2.custid\nWHERE T1.name != 'Brown'", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT name,\n                AVG(balance) AS meanbalance\n         FROM\n           (SELECT LHS.custid AS custid,\n                   LHS.name AS name,\n                   RHS.balance AS balance\n            FROM accounts AS LHS\n            LEFT JOIN checking AS RHS ON (LHS.custid = RHS.custid))\n         GROUP BY name)\n      ORDER BY meanbalance)\n   LIMIT 4)\n", "sql2": "SELECT T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nWHERE T2.balance <\n    (SELECT avg(balance)\n     FROM checking)", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0021", "sql1": "\nSELECT balance AS balance___1,\n       balance_other AS balance___2,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          RHS.balance AS balance,\n          RHS.balance_other AS balance_other\n   FROM accounts AS LHS\n   INNER JOIN\n     (SELECT LHS.custid AS custid,\n             LHS.balance AS balance,\n             RHS.balance AS balance_other\n      FROM checking AS LHS\n      INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid)) AS RHS ON (LHS.custid = RHS.custid))\nORDER BY balance___1\n", "sql2": "SELECT T2.balance,\n       T3.balance,\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nJOIN savings AS T3 ON T1.custid = T3.custid", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0016", "sql1": "\nSELECT sumbalance AS sum_t2_balance_,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.name AS name,\n          RHS.sumbalance AS sumbalance\n   FROM accounts AS LHS\n   INNER JOIN\n     (SELECT custid,\n             SUM(balance) AS sumbalance\n      FROM savings\n      GROUP BY custid) AS RHS ON (LHS.custid = RHS.custid))\nORDER BY sum_t2_balance_\n", "sql2": "SELECT sum(T2.balance),\n       T1.name\nFROM accounts AS T1\nJOIN savings AS T2 ON T1.custid = T2.custid\nGROUP BY T1.name", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0011", "sql1": "\nSELECT name\nFROM accounts\nORDER BY name\n", "sql2": "SELECT name\nFROM accounts\nORDER BY name", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/small_bank_1/0006", "sql1": "\nSELECT custid,\n       name\nFROM\n  (SELECT LHS.custid AS custid,\n          LHS.balance AS balance,\n          LHS.name AS name,\n          LHS.maxbalance AS maxbalance,\n          RHS.custid AS custid_other,\n          RHS.balance AS balance_other\n   FROM\n     (SELECT custid,\n             balance,\n             name,\n             MAX(balance) OVER () AS maxbalance\n      FROM\n        (SELECT LHS.custid AS custid,\n                LHS.balance AS balance,\n                RHS.name AS name\n         FROM checking AS LHS\n         INNER JOIN accounts AS RHS ON (LHS.custid = RHS.custid))) AS LHS\n   CROSS JOIN checking AS RHS)\nWHERE (balance = balance_other\n       AND maxbalance != balance_other)\nORDER BY custid\n", "sql2": "SELECT T1.custid,\n       T1.name\nFROM accounts AS T1\nJOIN checking AS T2 ON T1.custid = T2.custid\nWHERE T2.balance <\n    (SELECT max(balance)\n     FROM checking)", "schema": "spider/small_bank_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/small_bank_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0009", "sql1": "\nSELECT participant_type_code\nFROM\n  (SELECT LHS.participant_type_code AS participant_type_code,\n          LHS.n AS n,\n          RHS.n AS n_other\n   FROM\n     (SELECT participant_type_code,\n             COUNT(*) AS n\n      FROM participants\n      GROUP BY participant_type_code) AS LHS\n   CROSS JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT participant_type_code,\n                COUNT(*) AS n\n         FROM participants\n         GROUP BY participant_type_code)) AS RHS)\nWHERE (n >= n_other)\nORDER BY participant_type_code\n", "sql2": "SELECT participant_type_code\nFROM participants\nGROUP BY participant_type_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0013", "sql1": "\nSELECT DISTINCT `service_type_code`\nFROM\n  (SELECT `LHS`.`service_id` AS `service_id`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `RHS`.`event_id` AS `event_id`,\n          `RHS`.`event_details` AS `event_details`\n   FROM `services` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `events`\n      WHERE (`event_details` = 'Success'\n             OR `event_details` != 'Fail')) AS RHS ON (LHS.service_id = RHS.service_id))\nORDER BY service_type_code\n", "sql2": "SELECT T1.service_type_code\nFROM services AS T1\nJOIN EVENTS AS T2 ON T1.service_id = T2.service_id\nWHERE T2.event_details = 'Success' INTERSECT\n  SELECT T1.service_type_code\n  FROM services AS T1\n  JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `participants`\n      WHERE (`participant_type_code` = 'Organizer')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM participants\nWHERE participant_type_code = 'Organizer'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0004", "sql1": "\nSELECT participant_id,\n       participant_type_code,\n       participant_details\nFROM participants\nORDER BY participant_id\n", "sql2": "SELECT Participant_ID,\n       Participant_Type_Code,\n       Participant_Details\nFROM Participants", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0012", "sql1": "\nSELECT `event_id`\nFROM\n  (SELECT *\n   FROM `events` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM\n             (SELECT `LHS`.`participant_id` AS `participant_id`,\n                     `LHS`.`participant_type_code` AS `participant_type_code`,\n                     `LHS`.`participant_details` AS `participant_details`,\n                     `LHS`.`event_id` AS `event_id`,\n                     `LHS`.`service_id` AS `service_id`,\n                     `LHS`.`event_details` AS `event_details`\n              FROM\n                (SELECT `LHS`.`participant_id` AS `participant_id`,\n                        `LHS`.`participant_type_code` AS `participant_type_code`,\n                        `LHS`.`participant_details` AS `participant_details`,\n                        `RHS`.`event_id` AS `event_id`,\n                        `RHS`.`service_id` AS `service_id`,\n                        `RHS`.`event_details` AS `event_details`\n                 FROM `participants` AS `LHS`\n                 CROSS JOIN `events` AS `RHS`) AS `LHS`\n              INNER JOIN `participants_in_events` AS `RHS` ON (`LHS`.`participant_id` = `RHS`.`participant_id`\n                                                                  AND `LHS`.`event_id` = `RHS`.`event_id`))\n           WHERE (`participant_details` = 'Kenyatta Kuhn')) AS RHS\n        WHERE (LHS.event_id = RHS.event_id\n               AND LHS.service_id = RHS.service_id) ))\nORDER BY event_id\n", "sql2": "SELECT event_id\nFROM EVENTS\nEXCEPT\nSELECT T1.event_id\nFROM Participants_in_Events AS T1\nJOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID\nWHERE Participant_Details = 'Kenyatta Kuhn'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0015", "sql1": "\nSELECT n_distinct AS count_distinct_participant_id_\nFROM\n  (SELECT COUNT(DISTINCT participant_id) AS n_distinct\n   FROM participants_in_events)\nORDER BY count_distinct_participant_id_\n", "sql2": "SELECT count(DISTINCT participant_id)\nFROM participants_in_Events", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0003", "sql1": "\nSELECT participant_id,\n       participant_type_code,\n       n AS count___\nFROM\n  (SELECT LHS.participant_id AS participant_id,\n          LHS.n AS n,\n          RHS.participant_type_code AS participant_type_code,\n          RHS.participant_details AS participant_details\n   FROM\n     (SELECT participant_id,\n             COUNT(*) AS n\n      FROM participants_in_events\n      GROUP BY participant_id) AS LHS\n   LEFT JOIN participants AS RHS ON (LHS.participant_id = RHS.participant_id))\nORDER BY participant_id\n", "sql2": "SELECT T1.Participant_ID,\n       T1.Participant_Type_Code,\n       count(*)\nFROM Participants AS T1\nJOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID\nGROUP BY T1.Participant_ID", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0002", "sql1": "\nSELECT event_id,\n       event_details\nFROM\n  (SELECT LHS.event_id AS event_id,\n          LHS.service_id AS service_id,\n          LHS.event_details AS event_details,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.event_id AS event_id,\n             LHS.service_id AS service_id,\n             LHS.event_details AS event_details,\n             RHS.n AS n\n      FROM events AS LHS\n      INNER JOIN\n        (SELECT event_id,\n                COUNT(*) AS n\n         FROM participants_in_events\n         GROUP BY event_id) AS RHS ON (LHS.event_id = RHS.event_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT event_id,\n                COUNT(*) AS n\n         FROM participants_in_events\n         GROUP BY event_id)\n      WHERE (n != 1)) AS RHS ON (LHS.event_id = RHS.event_id\n                                 AND LHS.n = RHS.n))\nORDER BY event_id\n", "sql2": "SELECT T1.event_id,\n       T1.event_details\nFROM EVENTS AS T1\nJOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID\nGROUP BY T1.Event_ID\nHAVING count(*) > 1", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0014", "sql1": "\nSELECT event_id AS count___\nFROM\n  (SELECT LHS.event_id AS event_id,\n          LHS.service_id AS service_id,\n          LHS.event_details AS event_details,\n          RHS.participant_id AS participant_id\n   FROM events AS LHS\n   INNER JOIN\n     (SELECT participant_id,\n             COUNT(DISTINCT event_id) AS n_distinct\n      FROM participants_in_events\n      GROUP BY participant_id) AS RHS ON (LHS.event_id = RHS.n_distinct))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM EVENTS\nWHERE event_id NOT IN\n    (SELECT event_id\n     FROM Participants_in_Events)", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0001", "sql1": "\nSELECT `event_details`\nFROM\n  (SELECT `LHS`.`service_id` AS `service_id`,\n          `LHS`.`service_type_code` AS `service_type_code`,\n          `RHS`.`event_id` AS `event_id`,\n          `RHS`.`event_details` AS `event_details`\n   FROM\n     (SELECT *\n      FROM `services`\n      WHERE (`service_type_code` = 'Marriage')) AS LHS\n   LEFT JOIN events AS RHS ON (LHS.service_id = RHS.service_id))\nORDER BY event_details\n", "sql2": "SELECT T1.event_details\nFROM EVENTS AS T1\nJOIN Services AS T2 ON T1.Service_ID = T2.Service_ID\nWHERE T2.Service_Type_Code = 'Marriage'", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0007", "sql1": "\nSELECT service_id,\n       event_details\nFROM events\nORDER BY service_id\n", "sql2": "SELECT service_id,\n       event_details\nFROM EVENTS", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0011", "sql1": "\nSELECT event_id\nFROM\n  (SELECT event_id,\n          n,\n          MAX(n) OVER () AS maxn\n   FROM\n     (SELECT event_id,\n             COUNT(*) AS n\n      FROM participants_in_events\n      GROUP BY event_id))\nWHERE (maxn <= n)\nORDER BY event_id\n", "sql2": "SELECT Event_ID\nFROM Participants_in_Events\nGROUP BY Event_ID\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_in_alabama/0006", "sql1": "\nSELECT service_type_code\nFROM services\nORDER BY service_type_code\n", "sql2": "SELECT service_type_code\nFROM services\nORDER BY service_type_code", "schema": "spider/local_govt_in_alabama/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_in_alabama/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0009", "sql1": "\nSELECT shop_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT shop_id,\n                shop_name,\n                MAX(open_year) AS maxopen_year\n         FROM shop\n         GROUP BY shop_id,\n                  shop_name)\n      ORDER BY shop_id DESC)\n   LIMIT 1)\n", "sql2": "SELECT Shop_Name\nFROM shop\nORDER BY Open_Year DESC\nLIMIT 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0005", "sql1": "\nSELECT meanquantity AS avg_quantity_\nFROM\n  (SELECT AVG(quantity) AS meanquantity\n   FROM stock)\nORDER BY avg_quantity_\n", "sql2": "SELECT avg(Quantity)\nFROM stock", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0004", "sql1": "\nSELECT shop_name\nFROM shop\nORDER BY shop_name\n", "sql2": "SELECT Shop_Name\nFROM shop\nORDER BY Open_Year ASC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0008", "sql1": "\nSELECT `open_date`,\n       `open_year`\nFROM `shop`\nWHERE (`shop_name` = 'Apple')\nORDER BY open_date\n", "sql2": "SELECT Open_Date,\n       Open_Year\nFROM shop\nWHERE Shop_Name = 'Apple'", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0015", "sql1": "\nSELECT DISTINCT software_platform\nFROM device\nORDER BY software_platform\n", "sql2": "SELECT Software_Platform\nFROM device\nGROUP BY Software_Platform\nORDER BY COUNT(*) DESC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0003", "sql1": "\nSELECT `carrier`\nFROM `device`\nWHERE (`software_platform` != 'Android')\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM device\nWHERE Software_Platform != 'Android'", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0019", "sql1": "\nSELECT carrier\nFROM\n  (SELECT *\n   FROM device AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM stock AS RHS\n        WHERE (LHS.device_id = RHS.device_id) ))\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM device\nWHERE Device_ID NOT IN\n    (SELECT Device_ID\n     FROM stock)", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0002", "sql1": "\nSELECT carrier\nFROM device\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM device\nORDER BY Carrier ASC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0014", "sql1": "\nSELECT software_platform,\n       n AS count___\nFROM\n  (SELECT software_platform,\n          COUNT(*) AS n\n   FROM device\n   GROUP BY software_platform)\nORDER BY software_platform\n", "sql2": "SELECT Software_Platform,\n       COUNT(*)\nFROM device\nGROUP BY Software_Platform", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM device\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM device", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0017", "sql1": "\nSELECT shop_name\nFROM\n  (SELECT *\n   FROM shop AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM stock AS RHS\n        WHERE (LHS.shop_id = RHS.shop_id) ))\nORDER BY shop_name\n", "sql2": "SELECT Shop_Name\nFROM shop\nWHERE Shop_ID NOT IN\n    (SELECT Shop_ID\n     FROM stock)", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0020", "sql1": "\nSELECT DISTINCT carrier\nFROM\n  (SELECT LHS.device_id AS device_id,\n          LHS.device AS device,\n          LHS.carrier AS carrier,\n          LHS.package_version AS package_version,\n          LHS.applications AS applications,\n          LHS.software_platform AS software_platform,\n          RHS.shop_id AS shop_id,\n          RHS.n AS n\n   FROM device AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT device_id,\n                shop_id,\n                COUNT(*) AS n\n         FROM stock\n         GROUP BY device_id,\n                  shop_id)\n      WHERE (n >= 1)) AS RHS ON (LHS.device_id = RHS.device_id))\nORDER BY carrier\n", "sql2": "SELECT T2.Carrier\nFROM stock AS T1\nJOIN device AS T2 ON T1.Device_ID = T2.Device_ID\nGROUP BY T1.Device_ID\nHAVING COUNT(*) > 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0016", "sql1": "\nSELECT software_platform\nFROM\n  (SELECT LHS.device AS device,\n          LHS.software_platform AS software_platform,\n          LHS.maxn AS maxn,\n          RHS.carrier AS carrier,\n          RHS.package_version AS package_version,\n          RHS.applications AS applications,\n          RHS.software_platform AS software_platform_other\n   FROM\n     (SELECT device,\n             software_platform,\n             MAX(n) AS maxn\n      FROM\n        (SELECT device,\n                software_platform,\n                COUNT(*) AS n\n         FROM device\n         GROUP BY device,\n                  software_platform)\n      GROUP BY device,\n               software_platform) AS LHS\n   INNER JOIN device AS RHS ON (LHS.maxn = RHS.device_id\n                                   AND LHS.device = RHS.device))\nORDER BY software_platform\n", "sql2": "SELECT Software_Platform\nFROM device\nGROUP BY Software_Platform\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0007", "sql1": "\nSELECT n_distinct AS count_distinct_software_platform_\nFROM\n  (SELECT COUNT(DISTINCT software_platform) AS n_distinct\n   FROM device)\nORDER BY count_distinct_software_platform_\n", "sql2": "SELECT count(DISTINCT Software_Platform)\nFROM device", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0011", "sql1": "\nSELECT shop_name\nFROM\n  (SELECT shop_id,\n          shop_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.shop_id AS shop_id,\n             LHS.shop_name AS shop_name,\n             LHS.location AS LOCATION,\n             LHS.open_date AS open_date,\n             LHS.open_year AS open_year,\n             RHS.device_id AS device_id,\n             RHS.quantity AS quantity\n      FROM shop AS LHS\n      INNER JOIN stock AS RHS ON (LHS.shop_id = RHS.shop_id))\n   GROUP BY shop_id,\n            shop_name)\nWHERE (n > 1)\nORDER BY shop_name\n", "sql2": "SELECT T2.Shop_Name\nFROM stock AS T1\nJOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID\nGROUP BY T1.Shop_ID\nHAVING COUNT(*) > 1", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0010", "sql1": "\nSELECT shop_name,\n       carrier\nFROM\n  (SELECT LHS.device_id AS device_id,\n          LHS.device AS device,\n          LHS.carrier AS carrier,\n          LHS.package_version AS package_version,\n          LHS.applications AS applications,\n          LHS.software_platform AS software_platform,\n          LHS.shop_id AS shop_id,\n          LHS.shop_name AS shop_name,\n          LHS.location AS LOCATION,\n          LHS.open_date AS open_date,\n          LHS.open_year AS open_year,\n          RHS.quantity AS quantity\n   FROM\n     (SELECT LHS.device_id AS device_id,\n             LHS.device AS device,\n             LHS.carrier AS carrier,\n             LHS.package_version AS package_version,\n             LHS.applications AS applications,\n             LHS.software_platform AS software_platform,\n             RHS.shop_id AS shop_id,\n             RHS.shop_name AS shop_name,\n             RHS.location AS LOCATION,\n             RHS.open_date AS open_date,\n             RHS.open_year AS open_year\n      FROM device AS LHS\n      CROSS JOIN shop AS RHS) AS LHS\n   INNER JOIN stock AS RHS ON (LHS.device_id = RHS.device_id\n                                  AND LHS.shop_id = RHS.shop_id))\nORDER BY shop_name\n", "sql2": "SELECT T3.Shop_Name,\n       T2.Carrier\nFROM stock AS T1\nJOIN device AS T2 ON T1.Device_ID = T2.Device_ID\nJOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/device/0006", "sql1": "\nSELECT shop_name,\n       LOCATION\nFROM shop\nORDER BY shop_name\n", "sql2": "SELECT Shop_Name,\n       LOCATION\nFROM shop\nORDER BY Shop_Name ASC", "schema": "spider/device/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0009", "sql1": "\nSELECT name\nFROM club\nORDER BY name\n", "sql2": "SELECT name\nFROM club\nORDER BY name DESC", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0025", "sql1": "\nSELECT `country`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM `competition`\n         WHERE (`competition_type` = 'Friendly'\n                OR `competition_type` = 'Tournament'))\n      ORDER BY competition_type DESC)\n   LIMIT 1)\n", "sql2": "SELECT country\nFROM competition\nWHERE competition_type = 'Friendly' INTERSECT\n  SELECT country\n  FROM competition WHERE competition_type = 'Tournament'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0013", "sql1": "\nSELECT POSITION,\n       meanpoints AS avg_points_\nFROM\n  (SELECT POSITION,\n          AVG(points) AS meanpoints\n   FROM player\n   GROUP BY POSITION)\nORDER BY POSITION\n", "sql2": "SELECT POSITION,\n       avg(Points)\nFROM player\nGROUP BY POSITION", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0005", "sql1": "\nSELECT DISTINCT `year`\nFROM `competition`\nWHERE (`competition_type` != 'Tournament')\nORDER BY YEAR\n", "sql2": "SELECT DISTINCT YEAR\nFROM competition\nWHERE Competition_type != 'Tournament'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0004", "sql1": "\nSELECT competition_type,\n       country\nFROM competition\nORDER BY competition_type\n", "sql2": "SELECT Competition_type,\n       Country\nFROM competition", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0012", "sql1": "\nSELECT `meanpoints` AS `avg_t2_points_`\nFROM\n  (SELECT `club_id`,\n          AVG(`points`) AS `meanpoints`\n   FROM\n     (SELECT *\n      FROM `player` AS `LHS`\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM\n             (SELECT *\n              FROM `club`\n              WHERE (`name` != 'AIB')) AS RHS\n           WHERE (LHS.club_id = RHS.club_id) ))\n   GROUP BY club_id)\nORDER BY avg_t2_points_\n", "sql2": "SELECT avg(T2.Points)\nFROM club AS T1\nJOIN player AS T2 ON T1.Club_ID = T2.Club_ID\nWHERE T1.name = 'AIB'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0008", "sql1": "\nSELECT name\nFROM club\nORDER BY name\n", "sql2": "SELECT name\nFROM club\nORDER BY Start_year ASC", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0015", "sql1": "\nSELECT competition_type,\n       n AS count___\nFROM\n  (SELECT competition_type,\n          COUNT(*) AS n\n   FROM competition\n   GROUP BY competition_type)\nORDER BY competition_type\n", "sql2": "SELECT Competition_type,\n       COUNT(*)\nFROM competition\nGROUP BY Competition_type", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0003", "sql1": "\nSELECT DISTINCT AVG(gold) OVER () AS avg_gold_\nFROM club_rank\nORDER BY avg_gold_\n", "sql2": "SELECT avg(Gold)\nFROM club_rank", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0019", "sql1": "\nSELECT POSITION\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.club_id AS club_id,\n          LHS.apps AS apps,\n          LHS.tries AS tries,\n          LHS.goals AS goals,\n          LHS.points AS points,\n          RHS.player_id AS player_id_other,\n          RHS.name AS name_other,\n          RHS.club_id AS club_id_other,\n          RHS.apps AS apps_other,\n          RHS.goals AS goals_other,\n          RHS.points AS points_other\n   FROM\n     (SELECT *\n      FROM player\n      WHERE (points < 20.0\n             OR points >= 10.0)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM player\n      WHERE (points < 20.0\n             OR points >= 10.0)) AS RHS ON (LHS.position = RHS.position\n                                            AND LHS.points = RHS.tries))\nORDER BY POSITION\n", "sql2": "SELECT POSITION\nFROM player\nWHERE Points > 20 INTERSECT\n  SELECT POSITION\n  FROM player WHERE Points < 10", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0022", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.club_id AS club_id,\n          LHS.apps AS apps,\n          LHS.tries AS tries,\n          LHS.goals AS goals,\n          LHS.points AS points,\n          LHS.meanpoints AS meanpoints,\n          RHS.player_id AS player_id_other,\n          RHS.name AS name_other,\n          RHS.position AS position_other,\n          RHS.club_id AS club_id_other,\n          RHS.apps AS apps_other,\n          RHS.tries AS tries_other,\n          RHS.goals AS goals_other,\n          RHS.points AS points_other,\n          RHS.meanpoints AS meanpoints_other\n   FROM\n     (SELECT player_id,\n             name,\n             POSITION,\n             club_id,\n             apps,\n             tries,\n             goals,\n             points,\n             AVG(points) OVER () AS meanpoints\n      FROM player) AS LHS\n   CROSS JOIN\n     (SELECT player_id,\n             name,\n             POSITION,\n             club_id,\n             apps,\n             tries,\n             goals,\n             points,\n             AVG(points) OVER () AS meanpoints\n      FROM player) AS RHS)\nWHERE (points >= meanpoints_other\n       AND points_other > meanpoints_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM player\nWHERE points >\n    (SELECT avg(points)\n     FROM player)", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0018", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM club AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM player AS RHS\n        WHERE (LHS.club_id = RHS.club_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM CLub\nWHERE Club_ID NOT IN\n    (SELECT Club_ID\n     FROM player)", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0002", "sql1": "\nSELECT region\nFROM club\nORDER BY region\n", "sql2": "SELECT DISTINCT Region\nFROM club\nORDER BY Region ASC", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0014", "sql1": "\nSELECT POSITION\nFROM\n  (SELECT points,\n          POSITION,\n          AVG(points) AS meanpoints\n   FROM player\n   GROUP BY points,\n            POSITION)\nWHERE (points >= 20.0\n       OR meanpoints < points)\nORDER BY POSITION\n", "sql2": "SELECT POSITION\nFROM player\nGROUP BY name\nHAVING avg(Points) >= 20", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM club\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0017", "sql1": "\nSELECT competition_type\nFROM\n  (SELECT competition_type,\n          COUNT(*) AS n\n   FROM competition\n   GROUP BY competition_type)\nWHERE (n < 5)\nORDER BY competition_type\n", "sql2": "SELECT Competition_type\nFROM competition\nGROUP BY Competition_type\nHAVING COUNT(*) <= 5", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0021", "sql1": "\nSELECT n_distinct AS count_distinct_position_\nFROM\n  (SELECT COUNT(DISTINCT POSITION) AS n_distinct\n   FROM player)\nORDER BY count_distinct_position_\n", "sql2": "SELECT count(DISTINCT POSITION)\nFROM player", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0020", "sql1": "\nSELECT DISTINCT SUM(points) OVER () AS sum_points_\nFROM player\nORDER BY sum_points_\n", "sql2": "SELECT sum(Points)\nFROM player", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0016", "sql1": "\nSELECT competition_type\nFROM\n  (SELECT competition_type,\n          YEAR,\n          MAX(n) AS n\n   FROM\n     (SELECT competition_id,\n             YEAR,\n             competition_type,\n             country,\n             competition_id_other,\n             competition_id AS n\n      FROM\n        (SELECT LHS.competition_id AS competition_id,\n                LHS.year AS YEAR,\n                LHS.competition_type AS competition_type,\n                LHS.country AS country,\n                RHS.competition_id AS competition_id_other\n         FROM competition AS LHS\n         INNER JOIN\n           (SELECT competition_id,\n                   COUNT(*) AS n\n            FROM competition\n            GROUP BY competition_id) AS RHS ON (LHS.competition_id = RHS.n)))\n   GROUP BY competition_type,\n            YEAR)\nORDER BY competition_type\n", "sql2": "SELECT Competition_type\nFROM competition\nGROUP BY Competition_type\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0007", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT bronze,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM club_rank\n      WHERE (total < 10.0))\n   GROUP BY bronze)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM club_rank\nWHERE Total < 10", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0011", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`club_id` AS `club_id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`region` AS `region`,\n          `LHS`.`start_year` AS `start_year`,\n          `RHS`.`player_id` AS `player_id`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`position` AS `position`,\n          `RHS`.`apps` AS `apps`,\n          `RHS`.`tries` AS `tries`,\n          `RHS`.`goals` AS `goals`,\n          `RHS`.`points` AS `points`\n   FROM `club` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `player`\n      WHERE (`position` = 'Right Wing')) AS RHS ON (LHS.club_id = RHS.club_id))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM club AS T1\nJOIN player AS T2 ON T1.Club_ID = T2.Club_ID\nWHERE T2.Position = 'Right Wing'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0010", "sql1": "\nSELECT name_other AS name,\n       player_id\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.name AS name,\n          LHS.position AS POSITION,\n          LHS.club_id AS club_id,\n          LHS.apps AS apps,\n          LHS.tries AS tries,\n          LHS.goals AS goals,\n          LHS.points AS points,\n          RHS.name AS name_other,\n          RHS.region AS region,\n          RHS.start_year AS start_year\n   FROM player AS LHS\n   INNER JOIN club AS RHS ON (LHS.club_id = RHS.club_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T2.Player_id\nFROM club AS T1\nJOIN player AS T2 ON T1.Club_ID = T2.Club_ID", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0006", "sql1": "\nSELECT DISTINCT MAX(silver) OVER () AS max_silver_,\n                                 minsilver AS min_silver_\nFROM\n  (SELECT rank,\n          club_id,\n          gold,\n          silver,\n          bronze,\n          total,\n          MIN(silver) OVER () AS minsilver\n   FROM club_rank)\nORDER BY max_silver_\n", "sql2": "SELECT max(Silver),\n       min(Silver)\nFROM club_rank", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/sports_competition/0026", "sql1": "\nSELECT DISTINCT `country`\nFROM\n  (SELECT *\n   FROM `competition` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `competition`\n           WHERE (`competition_type` = 'Friendly')) AS RHS\n        WHERE (LHS.country = RHS.country\n               AND LHS.year = RHS.year) ))\nORDER BY country\n", "sql2": "SELECT country\nFROM competition\nEXCEPT\nSELECT country\nFROM competition\nWHERE competition_type = 'Friendly'", "schema": "spider/sports_competition/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0005", "sql1": "\nSELECT meanscores AS avg_scores_\nFROM\n  (SELECT AVG(scores) AS meanscores\n   FROM submission)\nORDER BY avg_scores_\n", "sql2": "SELECT avg(Scores)\nFROM submission", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0004", "sql1": "\nSELECT `author`\nFROM `submission`\nWHERE (`college` = 'Florida'\n       OR `college` = 'Temple')\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nWHERE College = 'Florida'\n  OR College = 'Temple'", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0012", "sql1": "\nSELECT DISTINCT author,\n                n AS count_distinct_t1_workshop_id_\nFROM\n  (SELECT LHS.submission_id AS submission_id,\n          LHS.scores AS scores,\n          LHS.author AS author,\n          LHS.college AS college,\n          LHS.workshop_id AS workshop_id,\n          LHS.result AS RESULT,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.submission_id AS submission_id,\n             LHS.scores AS scores,\n             LHS.author AS author,\n             LHS.college AS college,\n             RHS.workshop_id AS workshop_id,\n             RHS.result AS RESULT\n      FROM submission AS LHS\n      INNER JOIN acceptance AS RHS ON (LHS.submission_id = RHS.submission_id)) AS LHS\n   INNER JOIN\n     (SELECT submission_id,\n             COUNT(*) AS n\n      FROM acceptance\n      GROUP BY submission_id) AS RHS ON (LHS.submission_id = RHS.submission_id))\nORDER BY author\n", "sql2": "SELECT T2.Author,\n       COUNT(DISTINCT T1.workshop_id)\nFROM acceptance AS T1\nJOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID\nGROUP BY T2.Author", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0015", "sql1": "\nSELECT author\nFROM\n  (SELECT *\n   FROM submission AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM acceptance AS RHS\n        WHERE (LHS.submission_id = RHS.submission_id) ))\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nWHERE Submission_ID NOT IN\n    (SELECT Submission_ID\n     FROM acceptance)", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0003", "sql1": "\nSELECT author,\n       college\nFROM submission\nORDER BY author\n", "sql2": "SELECT Author,\n       College\nFROM submission", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0002", "sql1": "\nSELECT author\nFROM submission\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nORDER BY Scores ASC", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0014", "sql1": "\nSELECT date, venue\nFROM workshop\nORDER BY date\n", "sql2": "SELECT Date , Venue\nFROM workshop\nORDER BY Venue", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM submission\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM submission", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0007", "sql1": "\nSELECT college,\n       n AS count___\nFROM\n  (SELECT author,\n          college,\n          COUNT(*) AS n\n   FROM submission\n   GROUP BY author,\n            college)\nORDER BY college\n", "sql2": "SELECT College,\n       COUNT(*)\nFROM submission\nGROUP BY College", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0010", "sql1": "\nSELECT author,\n       RESULT\nFROM\n  (SELECT LHS.submission_id AS submission_id,\n          LHS.workshop_id AS workshop_id,\n          LHS.result AS RESULT,\n          RHS.scores AS scores,\n          RHS.author AS author,\n          RHS.college AS college\n   FROM acceptance AS LHS\n   LEFT JOIN submission AS RHS ON (LHS.submission_id = RHS.submission_id))\nORDER BY author\n", "sql2": "SELECT T2.Author,\n       T1.Result\nFROM acceptance AS T1\nJOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/workshop_paper/0006", "sql1": "\nSELECT author\nFROM\n  (SELECT LHS.submission_id AS submission_id,\n          LHS.scores AS scores,\n          LHS.author AS author,\n          LHS.college AS college,\n          LHS.maxscores AS maxscores,\n          RHS.submission_id AS submission_id_other,\n          RHS.college AS college_other,\n          RHS.maxscores AS maxscores_other\n   FROM\n     (SELECT submission_id,\n             scores,\n             author,\n             college,\n             MAX(scores) OVER () AS maxscores\n      FROM submission) AS LHS\n   INNER JOIN\n     (SELECT submission_id,\n             scores,\n             author,\n             college,\n             MAX(scores) OVER () AS maxscores\n      FROM submission) AS RHS ON (LHS.author = RHS.author\n                                     AND LHS.maxscores = RHS.scores))\nORDER BY author\n", "sql2": "SELECT Author\nFROM submission\nORDER BY Scores DESC\nLIMIT 1", "schema": "spider/workshop_paper/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0009", "sql1": "\nSELECT `order_id`,\n       `order_status`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`order_status` AS `order_status`,\n          `RHS`.`date_order_placed` AS `date_order_placed`,\n          `RHS`.`order_details` AS `order_details`\n   FROM `customers` AS `LHS`\n   INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Jeramie')\nORDER BY order_id\n", "sql2": "SELECT T2.order_id,\n       T2.order_status\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.customer_name = 'Jeramie'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0025", "sql1": "\nSELECT `invoice_number`\nFROM `invoices`\nWHERE (`invoice_date` < parse_datetime('1989-09-03')\n       OR `invoice_date` >= parse_datetime('2007-12-25'))\nORDER BY invoice_number\n", "sql2": "SELECT invoice_number\nFROM invoices\nWHERE invoice_date < '1989-09-03'\n  OR invoice_date > '2007-12-25'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0005", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `orders`\n           WHERE (`order_status` = 'Packing')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT DISTINCT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.order_status = 'Packing'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0028", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT customer_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_name AS customer_name,\n             LHS.customer_details AS customer_details,\n             RHS.order_id AS order_id,\n             RHS.order_status AS order_status,\n             RHS.date_order_placed AS date_order_placed,\n             RHS.order_details AS order_details\n      FROM customers AS LHS\n      INNER JOIN orders AS RHS ON (LHS.customer_id = RHS.customer_id))\n   GROUP BY customer_name)\nWHERE (n <= 2)\nORDER BY customer_name\n", "sql2": "SELECT T2.customer_name\nFROM orders AS T1\nJOIN customers AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T2.customer_id\nHAVING count(*) <= 2", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0004", "sql1": "\nSELECT order_item_id\nFROM order_items\nWHERE (product_id = 11)\nORDER BY order_item_id\n", "sql2": "SELECT order_item_id\nFROM order_items\nWHERE product_id = 11", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0012", "sql1": "\nSELECT `product_id`\nFROM\n  (SELECT *\n   FROM `order_items` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `orders`\n           WHERE (`date_order_placed` >= parse_datetime('1975-01-01')\n                  AND `date_order_placed` <= parse_datetime('1976-01-01'))) AS RHS\n        WHERE (LHS.order_id = RHS.order_id) ))\nORDER BY product_id\n", "sql2": "SELECT DISTINCT T2.product_id\nFROM orders AS T1\nJOIN order_items AS T2 ON T1.order_id = T2.order_id\nWHERE T1.date_order_placed >= '1975-01-01'\n  AND T1.date_order_placed <= '1976-01-01'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0008", "sql1": "\nSELECT DISTINCT n AS customer_id\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_name AS customer_name,\n          LHS.customer_details AS customer_details,\n          RHS.order_id AS order_id,\n          RHS.order_status AS order_status,\n          RHS.date_order_placed AS date_order_placed,\n          RHS.order_details AS order_details,\n          RHS.n AS n\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT order_id,\n             customer_id,\n             order_status,\n             date_order_placed,\n             order_details,\n             COUNT(*) OVER () AS n\n      FROM orders) AS RHS ON (LHS.customer_id = RHS.customer_id))\nORDER BY customer_id\n", "sql2": "SELECT T1.customer_id\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T1.customer_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0015", "sql1": "\nSELECT date_order_placed\nFROM\n  (SELECT *\n   FROM orders AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM shipments\n           WHERE (shipment_tracking_number = 3452)) AS RHS\n        WHERE (LHS.order_id = RHS.order_id) ))\nORDER BY date_order_placed\n", "sql2": "SELECT T1.date_order_placed\nFROM orders AS T1\nJOIN shipments AS T2 ON T1.order_id = T2.order_id\nWHERE T2.shipment_tracking_number = 3452", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0003", "sql1": "\nSELECT order_id\nFROM shipments\nWHERE (shipment_tracking_number = 3452)\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM shipments\nWHERE shipment_tracking_number = '3452'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0019", "sql1": "\nSELECT `order_id`\nFROM `shipments`\nWHERE (`shipment_date` >= parse_datetime('2000-01-01'))\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM shipments\nWHERE shipment_date > '2000-01-01'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0023", "sql1": "\nSELECT maxn AS order_id\nFROM\n  (SELECT order_item_details,\n          MAX(n) AS maxn\n   FROM\n     (SELECT order_item_details,\n             COUNT(*) AS n\n      FROM\n        (SELECT *\n         FROM order_items AS LHS\n         WHERE EXISTS\n             (SELECT 1\n              FROM orders AS RHS\n              WHERE (LHS.order_id = RHS.order_id) ))\n      GROUP BY order_item_details)\n   GROUP BY order_item_details)\nORDER BY order_id\n", "sql2": "SELECT T1.order_id\nFROM orders AS T1\nJOIN order_items AS T2 ON T1.order_id = T2.order_id\nGROUP BY T1.order_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0022", "sql1": "\nSELECT order_id\nFROM orders\nORDER BY order_id\n", "sql2": "SELECT DISTINCT order_id\nFROM orders\nORDER BY date_order_placed", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0001", "sql1": "\nSELECT order_id\nFROM\n  (SELECT order_id,\n          order_id AS customer_id,\n          order_status,\n          date_order_placed,\n          order_details,\n          order_status_other\n   FROM\n     (SELECT LHS.order_id AS order_id,\n             LHS.customer_id AS customer_id,\n             LHS.order_status AS order_status,\n             LHS.date_order_placed AS date_order_placed,\n             LHS.order_details AS order_details,\n             RHS.order_status AS order_status_other\n      FROM orders AS LHS\n      INNER JOIN\n        (SELECT customer_id,\n                order_status,\n                MAX(date_order_placed) AS maxdate_order_placed\n         FROM orders\n         GROUP BY customer_id,\n                  order_status) AS RHS ON (LHS.order_id = RHS.customer_id\n                                           AND LHS.date_order_placed = RHS.maxdate_order_placed)))\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM orders\nORDER BY date_order_placed DESC\nLIMIT 1", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0021", "sql1": "\nSELECT DISTINCT product_name\nFROM products\nORDER BY product_name\n", "sql2": "SELECT DISTINCT product_name\nFROM products\nORDER BY product_name", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0020", "sql1": "\nSELECT DISTINCT order_id_other AS order_id\nFROM\n  (SELECT LHS.shipment_id AS shipment_id,\n          LHS.order_id AS order_id,\n          LHS.invoice_number AS invoice_number,\n          LHS.shipment_tracking_number AS shipment_tracking_number,\n          LHS.shipment_date AS shipment_date,\n          LHS.other_shipment_details AS other_shipment_details,\n          LHS.maxshipment_date AS maxshipment_date,\n          RHS.shipment_id AS shipment_id_other,\n          RHS.order_id AS order_id_other,\n          RHS.invoice_number AS invoice_number_other,\n          RHS.shipment_tracking_number AS shipment_tracking_number_other,\n          RHS.shipment_date AS shipment_date_other,\n          RHS.other_shipment_details AS other_shipment_details_other,\n          RHS.maxshipment_date AS maxshipment_date_other\n   FROM\n     (SELECT shipment_id,\n             order_id,\n             invoice_number,\n             shipment_tracking_number,\n             shipment_date,\n             other_shipment_details,\n             MAX(shipment_date) OVER () AS maxshipment_date\n      FROM shipments) AS LHS\n   CROSS JOIN\n     (SELECT shipment_id,\n             order_id,\n             invoice_number,\n             shipment_tracking_number,\n             shipment_date,\n             other_shipment_details,\n             MAX(shipment_date) OVER () AS maxshipment_date\n      FROM shipments) AS RHS)\nWHERE (maxshipment_date > maxshipment_date_other\n       OR shipment_date_other >= maxshipment_date_other)\nORDER BY order_id\n", "sql2": "SELECT order_id\nFROM shipments\nWHERE shipment_date =\n    (SELECT max(shipment_date)\n     FROM shipments)", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0016", "sql1": "\nSELECT date_order_placed\nFROM\n  (SELECT LHS.shipment_id AS shipment_id,\n          LHS.order_id AS order_id,\n          LHS.invoice_number AS invoice_number,\n          LHS.shipment_tracking_number AS shipment_tracking_number,\n          LHS.shipment_date AS shipment_date,\n          LHS.other_shipment_details AS other_shipment_details,\n          RHS.customer_id AS customer_id,\n          RHS.order_status AS order_status,\n          RHS.date_order_placed AS date_order_placed,\n          RHS.order_details AS order_details\n   FROM\n     (SELECT *\n      FROM shipments\n      WHERE (invoice_number = 10)) AS LHS\n   LEFT JOIN orders AS RHS ON (LHS.order_id = RHS.order_id))\nORDER BY date_order_placed\n", "sql2": "SELECT T1.date_order_placed\nFROM orders AS T1\nJOIN shipments AS T2 ON T1.order_id = T2.order_id\nWHERE T2.invoice_number = 10", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0027", "sql1": "\nSELECT customer_name,\n       n AS count___\nFROM\n  (SELECT customer_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_name AS customer_name,\n             LHS.customer_details AS customer_details,\n             RHS.order_id AS order_id,\n             RHS.order_status AS order_status,\n             RHS.date_order_placed AS date_order_placed,\n             RHS.order_details AS order_details\n      FROM customers AS LHS\n      INNER JOIN orders AS RHS ON (LHS.customer_id = RHS.customer_id))\n   GROUP BY customer_name)\nWHERE (n >= 2)\nORDER BY customer_name\n", "sql2": "SELECT T2.customer_name,\n       count(*)\nFROM orders AS T1\nJOIN customers AS T2 ON T1.customer_id = T2.customer_id\nGROUP BY T2.customer_id\nHAVING count(*) >= 2", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0011", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`order_id` AS `order_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`order_status` AS `order_status`,\n          `LHS`.`date_order_placed` AS `date_order_placed`,\n          `LHS`.`order_details` AS `order_details`,\n          `RHS`.`customer_name` AS `customer_name`,\n          `RHS`.`customer_details` AS `customer_details`\n   FROM `orders` AS `LHS`\n   LEFT JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`date_order_placed` > parse_datetime('2009-01-01')\n       AND `date_order_placed` < parse_datetime('2010-01-01'))\nORDER BY customer_name\n", "sql2": "SELECT T1.customer_name\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.date_order_placed >= '2009-01-01'\n  AND T2.date_order_placed <= '2010-01-01'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0010", "sql1": "\nSELECT `date_order_placed`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`customer_details` AS `customer_details`,\n          `RHS`.`order_id` AS `order_id`,\n          `RHS`.`order_status` AS `order_status`,\n          `RHS`.`date_order_placed` AS `date_order_placed`,\n          `RHS`.`order_details` AS `order_details`\n   FROM `customers` AS `LHS`\n   INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Jeramie')\nORDER BY date_order_placed\n", "sql2": "SELECT T2.date_order_placed\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T1.customer_name = 'Jeramie'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0006", "sql1": "\nSELECT `customer_details`\nFROM\n  (SELECT *\n   FROM `customers` AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `orders`\n           WHERE (`order_status` = 'On Road')) AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_details\n", "sql2": "SELECT DISTINCT T1.customer_details\nFROM customers AS T1\nJOIN orders AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.order_status = 'On Road'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_orders/0026", "sql1": "\nSELECT DISTINCT `invoice_details`\nFROM `invoices`\nWHERE (`invoice_date` < parse_datetime('1989-09-03')\n       OR `invoice_date` >= parse_datetime('2007-12-25'))\nORDER BY invoice_details\n", "sql2": "SELECT DISTINCT invoice_details\nFROM invoices\nWHERE invoice_date < '1989-09-03'\n  OR invoice_date > '2007-12-25'", "schema": "spider/tracking_orders/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_orders/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0009", "sql1": "\nSELECT home_city\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT *\n         FROM driver\n         WHERE (age <= 40))\n      ORDER BY home_city)\n   LIMIT 3)\n", "sql2": "SELECT home_city\nFROM driver\nEXCEPT\nSELECT home_city\nFROM driver\nWHERE age > 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0005", "sql1": "\nSELECT DISTINCT home_city\nFROM driver\nORDER BY home_city\n", "sql2": "SELECT DISTINCT home_city\nFROM driver", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0004", "sql1": "\nSELECT name\nFROM driver\nORDER BY name\n", "sql2": "SELECT name\nFROM driver\nORDER BY age DESC", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0012", "sql1": "\nSELECT school,\n       name\nFROM\n  (SELECT LHS.driver_id AS driver_id,\n          LHS.name AS name,\n          LHS.party AS party,\n          LHS.home_city AS home_city,\n          LHS.age AS age,\n          LHS.school_id AS school_id,\n          LHS.grade AS grade,\n          LHS.school AS school,\n          LHS.location AS LOCATION,\n          LHS.type AS TYPE,\n          RHS.years_working AS years_working,\n          RHS.if_full_time AS if_full_time\n   FROM\n     (SELECT LHS.driver_id AS driver_id,\n             LHS.name AS name,\n             LHS.party AS party,\n             LHS.home_city AS home_city,\n             LHS.age AS age,\n             RHS.school_id AS school_id,\n             RHS.grade AS grade,\n             RHS.school AS school,\n             RHS.location AS LOCATION,\n             RHS.type AS TYPE\n      FROM driver AS LHS\n      CROSS JOIN school AS RHS) AS LHS\n   INNER JOIN school_bus AS RHS ON (LHS.driver_id = RHS.driver_id\n                                       AND LHS.school_id = RHS.school_id))\nORDER BY school\n", "sql2": "SELECT T2.school,\n       T3.name\nFROM school_bus AS T1\nJOIN school AS T2 ON T1.school_id = T2.school_id\nJOIN driver AS T3 ON T1.driver_id = T3.driver_id", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0008", "sql1": "\nSELECT home_city\nFROM\n  (SELECT home_city,\n          party,\n          COUNT(DISTINCT age) AS n_distinct\n   FROM\n     (SELECT *\n      FROM driver\n      WHERE (age = 40\n             AND age >= 2))\n   GROUP BY home_city,\n            party)\nORDER BY home_city\n", "sql2": "SELECT home_city\nFROM driver\nWHERE age > 40\nGROUP BY home_city\nHAVING count(*) >= 2", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0003", "sql1": "\nSELECT party,\n       n AS count___\nFROM\n  (SELECT party,\n          COUNT(*) AS n\n   FROM driver\n   GROUP BY party)\nORDER BY party\n", "sql2": "SELECT party,\n       count(*)\nFROM driver\nGROUP BY party", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0002", "sql1": "\nSELECT name,\n       home_city,\n       age\nFROM driver\nORDER BY name\n", "sql2": "SELECT name,\n       home_city,\n       age\nFROM driver", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0014", "sql1": "\nSELECT school,\n       TYPE\nFROM\n  (SELECT *\n   FROM school AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM school_bus AS RHS\n        WHERE (LHS.school_id = RHS.school_id) ))\nORDER BY school\n", "sql2": "SELECT school,\n       TYPE\nFROM school\nWHERE school_id NOT IN\n    (SELECT school_id\n     FROM school_bus)", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM driver\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM driver", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0017", "sql1": "\nSELECT `name`\nFROM `driver`\nWHERE (`home_city` = 'Hartford'\n       AND age < 40)\nORDER BY name\n", "sql2": "SELECT name\nFROM driver\nWHERE home_city = 'Hartford'\n  AND age < 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0016", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `driver`\nWHERE (`home_city` != 'Hartford'\n       OR age != 40)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM driver\nWHERE home_city = 'Hartford'\n  OR age < 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0007", "sql1": "\nSELECT `party`\nFROM `driver`\nWHERE (`home_city` = 'Hartford'\n       AND age > 40)\nORDER BY party\n", "sql2": "SELECT party\nFROM driver\nWHERE home_city = 'Hartford'\n  AND age > 40", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0011", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY TYPE)\nWHERE (n = 2)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM school\nGROUP BY TYPE\nHAVING count(*) = 2", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_bus/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM driver AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM school_bus AS RHS\n        WHERE (LHS.driver_id = RHS.driver_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM driver\nWHERE driver_id NOT IN\n    (SELECT driver_id\n     FROM school_bus)", "schema": "spider/school_bus/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0013", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.building_id AS building_id,\n          LHS.name AS name,\n          LHS.street_address AS street_address,\n          LHS.years_as_tallest AS years_as_tallest,\n          LHS.height_feet AS height_feet,\n          LHS.floors AS floors,\n          RHS.n AS n\n   FROM building AS LHS\n   INNER JOIN\n     (SELECT building_id,\n             COUNT(*) AS n\n      FROM institution\n      GROUP BY building_id) AS RHS ON (LHS.building_id = RHS.building_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM building AS T1\nJOIN institution AS T2 ON T1.building_id = T2.building_id\nGROUP BY T1.building_id", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM building AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM institution\n           WHERE (founded >= 2003.0)) AS RHS\n        WHERE (LHS.building_id = RHS.building_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM building\nEXCEPT\nSELECT T1.name\nFROM building AS T1\nJOIN institution AS T2 ON T1.building_id = T2.building_id\nWHERE T2.founded = 2003", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0015", "sql1": "\nSELECT DISTINCT TYPE\nFROM institution\nORDER BY TYPE\n", "sql2": "SELECT DISTINCT TYPE\nFROM institution", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0003", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.building_id AS building_id,\n          LHS.name AS name,\n          LHS.street_address AS street_address,\n          LHS.years_as_tallest AS years_as_tallest,\n          LHS.height_feet AS height_feet,\n          LHS.floors AS floors\n   FROM building AS LHS\n   INNER JOIN\n     (SELECT MAX(height_feet) AS maxheight_feet\n      FROM building) AS RHS ON (LHS.height_feet = RHS.maxheight_feet))\nORDER BY name\n", "sql2": "SELECT name\nFROM building\nORDER BY height_feet DESC\nLIMIT 1", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0002", "sql1": "\nSELECT name,\n       street_address,\n       floors\nFROM building\nORDER BY name\n", "sql2": "SELECT name,\n       street_address,\n       floors\nFROM building\nORDER BY floors", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM building\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM building", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0007", "sql1": "\nSELECT `institution`,\n       `location`\nFROM `institution`\nWHERE (`type` = 'Private'\n       AND founded > 1990.0)\nORDER BY institution\n", "sql2": "SELECT institution,\n       LOCATION\nFROM institution\nWHERE founded > 1990\n  AND TYPE = 'Private'", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0010", "sql1": "\nSELECT TYPE\nFROM institution\nWHERE (founded >= 1990.0\n       AND enrollment != 1000)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM institution\nWHERE founded > 1990\n  AND enrollment >= 1000", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/protein_institute/0006", "sql1": "\nSELECT name\nFROM building\nWHERE (height_feet != 200\n       AND floors > 20)\nORDER BY name\n", "sql2": "SELECT name\nFROM building\nWHERE height_feet >= 200\n  AND floors >= 20", "schema": "spider/protein_institute/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0009", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `building`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `faculty`\n      WHERE (`rank` = 'Professor'\n             AND `building` = 'NEB'))\n   GROUP BY building)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty\nWHERE Rank = 'Professor'\n  AND building = 'NEB'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0033", "sql1": "\nSELECT fname,\n       lname,\n       n AS count___,\n       facid\nFROM\n  (SELECT LHS.facid AS facid,\n          LHS.lname AS lname,\n          LHS.fname AS fname,\n          LHS.rank AS rank,\n          LHS.sex AS sex,\n          LHS.phone AS phone,\n          LHS.room AS room,\n          LHS.building AS building,\n          RHS.n AS n\n   FROM faculty AS LHS\n   INNER JOIN\n     (SELECT facid,\n             COUNT(*) AS n\n      FROM faculty_participates_in\n      GROUP BY facid) AS RHS ON (LHS.facid = RHS.facid))\nORDER BY fname\n", "sql2": "SELECT T1.fname,\n       T1.lname,\n       count(*),\n       T1.FacID\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nGROUP BY T1.FacID", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0044", "sql1": "\nSELECT DISTINCT `stuid`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`actid` AS `actid`,\n          `RHS`.`activity_name` AS `activity_name`\n   FROM `participates_in` AS `LHS`\n   LEFT JOIN `activity` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`))\nWHERE (`activity_name` != 'Canoeing'\n       OR `activity_name` = 'Kayaking')\nORDER BY stuid\n", "sql2": "SELECT T1.stuid\nFROM participates_in AS T1\nJOIN activity AS T2 ON T2.actid = T2.actid\nWHERE T2.activity_name = 'Canoeing' INTERSECT\n  SELECT T1.stuid\n  FROM participates_in AS T1\n  JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0013", "sql1": "\nSELECT `building`\nFROM\n  (SELECT `building`,\n          `rank`,\n          COUNT(*) AS `n`\n   FROM `faculty`\n   GROUP BY `building`,\n            `rank`)\nWHERE (`rank` = 'Professor'\n       AND n >= 10)\nORDER BY building\n", "sql2": "SELECT building\nFROM Faculty\nWHERE rank = 'Professor'\nGROUP BY building\nHAVING count(*) >= 10", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0005", "sql1": "\nSELECT `fname`,\n       `lname`,\n       `phone`\nFROM `faculty`\nWHERE (`sex` = 'F')\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname,\n       phone\nFROM Faculty\nWHERE Sex = 'F'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0029", "sql1": "\nSELECT facid\nFROM\n  (SELECT *\n   FROM faculty AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM faculty_participates_in AS RHS\n        WHERE (LHS.facid = RHS.facid) ))\nORDER BY facid\n", "sql2": "SELECT FacID\nFROM Faculty\nEXCEPT\nSELECT FacID\nFROM Faculty_participates_in", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0028", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT facid) OVER () AS count_distinct_facid_\nFROM faculty_participates_in\nORDER BY count_distinct_facid_\n", "sql2": "SELECT count(DISTINCT FacID)\nFROM Faculty_participates_in", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0004", "sql1": "\nSELECT rank,\n       fname,\n       lname\nFROM faculty\nORDER BY rank\n", "sql2": "SELECT rank,\n       Fname,\n       Lname\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0032", "sql1": "\nSELECT `activity_name`\nFROM\n  (SELECT `LHS`.`actid` AS `actid`,\n          `LHS`.`activity_name` AS `activity_name`,\n          `LHS`.`facid` AS `facid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`rank` AS `rank`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`phone` AS `phone`,\n          `RHS`.`room` AS `room`,\n          `RHS`.`building` AS `building`\n   FROM\n     (SELECT `LHS`.`actid` AS `actid`,\n             `LHS`.`activity_name` AS `activity_name`,\n             `RHS`.`facid` AS `facid`\n      FROM `activity` AS `LHS`\n      INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `faculty`\n      WHERE (`fname` = 'Mark'\n             AND `lname` = 'Giuliano')) AS RHS ON (LHS.facid = RHS.facid))\nORDER BY activity_name\n", "sql2": "SELECT T3.activity_name\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nJOIN Activity AS T3 ON T3.actid = T2.actid\nWHERE T1.fname = 'Mark'\n  AND T1.lname = 'Giuliano'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0024", "sql1": "\nSELECT advisor AS facid\nFROM\n  (SELECT advisor,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM student AS LHS\n      WHERE NOT EXISTS\n          (SELECT 1\n           FROM faculty AS RHS\n           WHERE (LHS.fname = RHS.fname\n                  AND LHS.lname = RHS.lname) ))\n   GROUP BY advisor)\nWHERE (n >= 2)\nORDER BY facid\n", "sql2": "SELECT T1.FacID\nFROM Faculty AS T1\nJOIN Student AS T2 ON T1.FacID = T2.advisor\nGROUP BY T1.FacID\nHAVING count(*) >= 2", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0008", "sql1": "\nSELECT `phone`,\n       `room`,\n       `building`\nFROM `faculty`\nWHERE (`fname` = 'Jerry'\n       OR `lname` = 'Prince')\nORDER BY phone\n", "sql2": "SELECT phone,\n       room,\n       building\nFROM Faculty\nWHERE Fname = 'Jerry'\n  AND Lname = 'Prince'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0015", "sql1": "\nSELECT rank,\n       sex,\n       n AS count___\nFROM\n  (SELECT rank,\n          sex,\n          COUNT(*) AS n\n   FROM faculty\n   GROUP BY rank,\n            sex)\nORDER BY rank\n", "sql2": "SELECT rank,\n       sex,\n       count(*)\nFROM Faculty\nGROUP BY rank,\n         sex", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0003", "sql1": "\nSELECT DISTINCT building\nFROM faculty\nORDER BY building\n", "sql2": "SELECT DISTINCT building\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0019", "sql1": "\nSELECT `stuid`\nFROM\n  (SELECT `stuid`,\n          `lname`,\n          `fname`,\n          `age`,\n          `sex`,\n          `major`,\n          `advisor`,\n          `city_code`,\n          `lname_other`,\n          `fname_other`,\n          `rank`,\n          `sex_other`,\n          `phone`,\n          `room`,\n          `building`,\n          `advisor` AS `facid`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`lname` AS `lname_other`,\n             `RHS`.`fname` AS `fname_other`,\n             `RHS`.`rank` AS `rank`,\n             `RHS`.`sex` AS `sex_other`,\n             `RHS`.`phone` AS `phone`,\n             `RHS`.`room` AS `room`,\n             `RHS`.`building` AS `building`\n      FROM `student` AS `LHS`\n      INNER JOIN `faculty` AS `RHS` ON (`LHS`.`advisor` = `RHS`.`facid`)))\nWHERE (`rank` = 'Professor')\nORDER BY stuid\n", "sql2": "SELECT T2.StuID\nFROM Faculty AS T1\nJOIN Student AS T2 ON T1.FacID = T2.advisor\nWHERE T1.rank = 'Professor'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0034", "sql1": "\nSELECT activity_name,\n       n AS count___\nFROM\n  (SELECT LHS.actid AS actid,\n          LHS.n AS n,\n          RHS.activity_name AS activity_name\n   FROM\n     (SELECT actid,\n             COUNT(*) AS n\n      FROM faculty_participates_in\n      GROUP BY actid) AS LHS\n   LEFT JOIN activity AS RHS ON (LHS.actid = RHS.actid))\nORDER BY activity_name\n", "sql2": "SELECT T1.activity_name,\n       count(*)\nFROM Activity AS T1\nJOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID\nGROUP BY T1.actID", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0038", "sql1": "\nSELECT DISTINCT stuid\nFROM\n  (SELECT *\n   FROM participates_in AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM student\n           WHERE (age < 20)) AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Participates_in INTERSECT\nSELECT StuID\nFROM Student\nWHERE age < 20", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0002", "sql1": "\nSELECT DISTINCT rank\nFROM faculty\nORDER BY rank\n", "sql2": "SELECT DISTINCT rank\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0014", "sql1": "\nSELECT rank,\n       n AS count___\nFROM\n  (SELECT rank,\n          COUNT(*) AS n\n   FROM faculty\n   GROUP BY rank)\nORDER BY rank\n", "sql2": "SELECT rank,\n       count(*)\nFROM Faculty\nGROUP BY rank", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0043", "sql1": "\nSELECT DISTINCT `lname`\nFROM\n  (SELECT `LHS`.`actid` AS `actid`,\n          `LHS`.`activity_name` AS `activity_name`,\n          `LHS`.`facid` AS `facid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`rank` AS `rank`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`phone` AS `phone`,\n          `RHS`.`room` AS `room`,\n          `RHS`.`building` AS `building`\n   FROM\n     (SELECT `LHS`.`actid` AS `actid`,\n             `LHS`.`activity_name` AS `activity_name`,\n             `RHS`.`facid` AS `facid`\n      FROM `activity` AS `LHS`\n      INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`\n   INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`))\nWHERE (`activity_name` = 'Canoeing'\n       OR `activity_name` != 'Kayaking')\nORDER BY lname\n", "sql2": "SELECT T1.lname\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nJOIN activity AS T3 ON T2.actid = T2.actid\nWHERE T3.activity_name = 'Canoeing' INTERSECT\n  SELECT T1.lname\n  FROM Faculty AS T1\n  JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\n  JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM faculty\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0017", "sql1": "\nSELECT `sex`,\n       `n` AS `count___`\nFROM\n  (SELECT `rank`,\n          `sex`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `faculty`\n      WHERE (`rank` = 'AsstProf'))\n   GROUP BY rank,\n            sex)\nORDER BY sex\n", "sql2": "SELECT sex,\n       count(*)\nFROM Faculty\nWHERE rank = 'AsstProf'\nGROUP BY sex", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0040", "sql1": "\nSELECT DISTINCT activity_name\nFROM\n  (SELECT LHS.actid AS actid,\n          LHS.activity_name AS activity_name,\n          LHS.stuid AS stuid,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.actid AS actid,\n             LHS.activity_name AS activity_name,\n             LHS.stuid AS stuid,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.actid AS actid,\n                LHS.activity_name AS activity_name,\n                RHS.stuid AS stuid\n         FROM activity AS LHS\n         INNER JOIN participates_in AS RHS ON (LHS.actid = RHS.actid)) AS LHS\n      INNER JOIN\n        (SELECT actid,\n                COUNT(*) AS n\n         FROM participates_in\n         GROUP BY actid) AS RHS ON (LHS.actid = RHS.actid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT actid,\n                COUNT(*) AS n\n         FROM participates_in\n         GROUP BY actid)) AS RHS ON (LHS.n = RHS.n))\nORDER BY activity_name\n", "sql2": "SELECT T1.activity_name\nFROM Activity AS T1\nJOIN Participates_in AS T2 ON T1.actID = T2.actID\nGROUP BY T1.actID\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0037", "sql1": "\nSELECT stuid\nFROM\n  (SELECT *\n   FROM student AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM participates_in AS RHS\n        WHERE (LHS.stuid = RHS.stuid) ))\nORDER BY stuid\n", "sql2": "SELECT StuID\nFROM Student\nEXCEPT\nSELECT StuID\nFROM Participates_in", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0036", "sql1": "\nSELECT DISTINCT activity_name\nFROM\n  (SELECT LHS.actid AS actid,\n          LHS.activity_name AS activity_name,\n          LHS.facid AS facid,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.actid AS actid,\n             LHS.activity_name AS activity_name,\n             LHS.facid AS facid,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.actid AS actid,\n                LHS.activity_name AS activity_name,\n                RHS.facid AS facid\n         FROM activity AS LHS\n         INNER JOIN faculty_participates_in AS RHS ON (LHS.actid = RHS.actid)) AS LHS\n      INNER JOIN\n        (SELECT actid,\n                COUNT(*) AS n\n         FROM faculty_participates_in\n         GROUP BY actid) AS RHS ON (LHS.actid = RHS.actid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT actid,\n                COUNT(*) AS n\n         FROM faculty_participates_in\n         GROUP BY actid)) AS RHS ON (LHS.n = RHS.n))\nORDER BY activity_name\n", "sql2": "SELECT T1.activity_name\nFROM Activity AS T1\nJOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID\nGROUP BY T1.actID\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0041", "sql1": "\nSELECT DISTINCT `lname`\nFROM\n  (SELECT `LHS`.`actid` AS `actid`,\n          `LHS`.`activity_name` AS `activity_name`,\n          `LHS`.`facid` AS `facid`,\n          `RHS`.`lname` AS `lname`,\n          `RHS`.`fname` AS `fname`,\n          `RHS`.`rank` AS `rank`,\n          `RHS`.`sex` AS `sex`,\n          `RHS`.`phone` AS `phone`,\n          `RHS`.`room` AS `room`,\n          `RHS`.`building` AS `building`\n   FROM\n     (SELECT `LHS`.`actid` AS `actid`,\n             `LHS`.`activity_name` AS `activity_name`,\n             `RHS`.`facid` AS `facid`\n      FROM `activity` AS `LHS`\n      INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`\n   INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`))\nWHERE (`activity_name` = 'Canoeing'\n       OR `activity_name` != 'Kayaking')\nORDER BY lname\n", "sql2": "SELECT DISTINCT T1.lname\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nJOIN activity AS T3 ON T2.actid = T2.actid\nWHERE T3.activity_name = 'Canoeing'\n  OR T3.activity_name = 'Kayaking'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0031", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `sex`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`facid` AS `facid`,\n             `LHS`.`actid` AS `actid`,\n             `RHS`.`lname` AS `lname`,\n             `RHS`.`fname` AS `fname`,\n             `RHS`.`rank` AS `rank`,\n             `RHS`.`sex` AS `sex`,\n             `RHS`.`phone` AS `phone`,\n             `RHS`.`room` AS `room`,\n             `RHS`.`building` AS `building`\n      FROM `faculty_participates_in` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `faculty`\n         WHERE (`fname` = 'Mark'\n                OR `lname` = 'Giuliano')) AS RHS ON (LHS.facid = RHS.facid))\n   GROUP BY sex)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty AS T1\nJOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID\nWHERE T1.fname = 'Mark'\n  AND T1.lname = 'Giuliano'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0027", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM activity\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Activity", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0007", "sql1": "\nSELECT `n_distinct` AS `count___`\nFROM\n  (SELECT COUNT(DISTINCT `sex`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `faculty`\n      WHERE (`sex` = 'F'\n             AND `rank` = 'Professor')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Faculty\nWHERE Sex = 'F'\n  AND Rank = 'Professor'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0011", "sql1": "\nSELECT building,\n       n AS count___\nFROM\n  (SELECT building,\n          COUNT(*) AS n\n   FROM faculty\n   GROUP BY building)\nORDER BY building\n", "sql2": "SELECT building,\n       count(*)\nFROM Faculty\nGROUP BY building", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0010", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM `faculty`\nWHERE (`rank` = 'Instructor')\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM Faculty\nWHERE Rank = 'Instructor'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0006", "sql1": "\nSELECT `facid`\nFROM `faculty`\nWHERE (`sex` = 'M')\nORDER BY facid\n", "sql2": "SELECT FacID\nFROM Faculty\nWHERE Sex = 'M'", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0026", "sql1": "\nSELECT activity_name\nFROM activity\nORDER BY activity_name\n", "sql2": "SELECT activity_name\nFROM Activity", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/activity_1/0030", "sql1": "\nSELECT DISTINCT facid\nFROM\n  (SELECT LHS.facid AS facid,\n          LHS.actid AS actid,\n          RHS.stuid AS stuid,\n          RHS.lname AS lname,\n          RHS.fname AS fname,\n          RHS.age AS age,\n          RHS.sex AS sex,\n          RHS.major AS major,\n          RHS.city_code AS city_code\n   FROM faculty_participates_in AS LHS\n   INNER JOIN student AS RHS ON (LHS.facid = RHS.advisor))\nORDER BY facid\n", "sql2": "SELECT FacID\nFROM Faculty_participates_in INTERSECT\nSELECT advisor\nFROM Student", "schema": "spider/activity_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0009", "sql1": "\nSELECT DISTINCT carrier\nFROM phone\nWHERE (memory_in_g != 32\n       AND memory_in_g <= 64)\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM phone\nWHERE Memory_in_G < 32 INTERSECT\n  SELECT Carrier\n  FROM phone WHERE Memory_in_G > 64", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0005", "sql1": "\nSELECT `name`\nFROM `phone`\nWHERE (`carrier` = 'Sprint'\n       OR `carrier` = 'TMobile')\nORDER BY name\n", "sql2": "SELECT Name\nFROM phone\nWHERE Carrier = 'Sprint'\n  OR Carrier = 'TMobile'", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0004", "sql1": "\nSELECT carrier\nFROM phone\nWHERE (memory_in_g <= 32)\nORDER BY carrier\n", "sql2": "SELECT DISTINCT Carrier\nFROM phone\nWHERE Memory_in_G > 32", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0008", "sql1": "\nSELECT carrier\nFROM\n  (SELECT carrier,\n          MAX(n) AS n\n   FROM\n     (SELECT carrier,\n             n,\n             name,\n             memory_in_g,\n             price,\n             n AS phone_id\n      FROM\n        (SELECT LHS.carrier AS carrier,\n                LHS.n AS n,\n                RHS.name AS name,\n                RHS.memory_in_g AS memory_in_g,\n                RHS.price AS price\n         FROM\n           (SELECT carrier,\n                   COUNT(*) AS n\n            FROM phone\n            GROUP BY carrier) AS LHS\n         INNER JOIN phone AS RHS ON (LHS.n = RHS.phone_id\n                                        AND LHS.carrier = RHS.carrier)))\n   GROUP BY carrier)\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM phone\nGROUP BY Carrier\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0015", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.name AS name,\n          LHS.phone_id AS phone_id,\n          LHS.memory_in_g AS memory_in_g,\n          LHS.carrier AS carrier,\n          LHS.price AS price,\n          RHS.phone_id AS phone_id_other,\n          RHS.num_of_stock AS num_of_stock,\n          RHS.name AS name_other,\n          RHS.phone_id_other AS phone_id_other_other,\n          RHS.memory_in_g AS memory_in_g_other,\n          RHS.carrier AS carrier_other\n   FROM phone AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT LHS.market_id AS market_id,\n                LHS.phone_id AS phone_id,\n                LHS.num_of_stock AS num_of_stock,\n                RHS.name AS name,\n                RHS.phone_id AS phone_id_other,\n                RHS.memory_in_g AS memory_in_g,\n                RHS.carrier AS carrier,\n                RHS.price AS price\n         FROM phone_market AS LHS\n         CROSS JOIN phone AS RHS)\n      WHERE (phone_id <= phone_id_other\n             AND phone_id != phone_id_other)) AS RHS ON (LHS.phone_id = RHS.market_id\n                                                         AND LHS.price = RHS.price))\nORDER BY name\n", "sql2": "SELECT Name\nFROM phone\nWHERE Phone_id NOT IN\n    (SELECT Phone_ID\n     FROM phone_market)", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0003", "sql1": "\nSELECT memory_in_g,\n       carrier\nFROM phone\nORDER BY memory_in_g\n", "sql2": "SELECT Memory_in_G,\n       Carrier\nFROM phone", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0002", "sql1": "\nSELECT name\nFROM phone\nORDER BY name\n", "sql2": "SELECT Name\nFROM phone\nORDER BY Price ASC", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM phone\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM phone", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0007", "sql1": "\nSELECT carrier,\n       n AS count___\nFROM\n  (SELECT carrier,\n          COUNT(*) AS n\n   FROM phone\n   GROUP BY carrier)\nORDER BY carrier\n", "sql2": "SELECT Carrier,\n       COUNT(*)\nFROM phone\nGROUP BY Carrier", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/phone_market/0006", "sql1": "\nSELECT carrier\nFROM\n  (SELECT LHS.name AS name,\n          LHS.phone_id AS phone_id,\n          LHS.memory_in_g AS memory_in_g,\n          LHS.carrier AS carrier,\n          LHS.price AS price\n   FROM phone AS LHS\n   INNER JOIN\n     (SELECT MAX(price) AS price\n      FROM phone) AS RHS ON (LHS.price = RHS.price))\nORDER BY carrier\n", "sql2": "SELECT Carrier\nFROM phone\nORDER BY Price DESC\nLIMIT 1", "schema": "spider/phone_market/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          LHS.date_of_birth AS date_of_birth\n   FROM\n     (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n             LHS.people_id AS people_id,\n             LHS.company AS company,\n             LHS.money_requested AS money_requested,\n             LHS.investor AS investor,\n             RHS.name AS name,\n             RHS.height AS height,\n             RHS.weight AS weight,\n             RHS.date_of_birth AS date_of_birth\n      FROM entrepreneur AS LHS\n      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(weight) AS weight\n      FROM people) AS RHS ON (LHS.weight = RHS.weight))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Weight DESC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0013", "sql1": "\nSELECT investor,\n       n AS count___\nFROM\n  (SELECT investor,\n          COUNT(*) AS n\n   FROM entrepreneur\n   GROUP BY investor)\nORDER BY investor\n", "sql2": "SELECT Investor,\n       COUNT(*)\nFROM entrepreneur\nGROUP BY Investor", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0005", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT Name\nFROM People\nORDER BY Weight ASC", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0004", "sql1": "\nSELECT DISTINCT AVG(money_requested) OVER () AS avg_money_requested_\nFROM entrepreneur\nORDER BY avg_money_requested_\n", "sql2": "SELECT avg(Money_Requested)\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0012", "sql1": "\nSELECT weight\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.date_of_birth AS date_of_birth\n   FROM entrepreneur AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY weight\n", "sql2": "SELECT T2.Weight\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Money_Requested DESC", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0008", "sql1": "\nSELECT weight\nFROM\n  (SELECT LHS.height AS height,\n          RHS.people_id AS people_id,\n          RHS.name AS name,\n          RHS.weight AS weight,\n          RHS.date_of_birth AS date_of_birth\n   FROM\n     (SELECT MIN(height) AS height\n      FROM people) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.height = RHS.height))\nORDER BY weight\n", "sql2": "SELECT Weight\nFROM people\nORDER BY Height ASC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0015", "sql1": "\nSELECT investor\nFROM\n  (SELECT investor,\n          COUNT(*) AS n\n   FROM entrepreneur\n   GROUP BY investor)\nWHERE (n >= 2)\nORDER BY investor\n", "sql2": "SELECT Investor\nFROM entrepreneur\nGROUP BY Investor\nHAVING COUNT(*) >= 2", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0003", "sql1": "\nSELECT company,\n       investor\nFROM entrepreneur\nORDER BY company\n", "sql2": "SELECT Company,\n       Investor\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0019", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count_distinct_company_\nFROM entrepreneur\nORDER BY count_distinct_company_\n", "sql2": "SELECT count(DISTINCT Company)\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0018", "sql1": "\nSELECT investor\nFROM entrepreneur\nWHERE (money_requested >= 140000.0\n       AND money_requested != 120000.0)\nORDER BY investor\n", "sql2": "SELECT Investor\nFROM entrepreneur\nWHERE Money_Requested > 140000 INTERSECT\n  SELECT Investor\n  FROM entrepreneur WHERE Money_Requested < 120000", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0002", "sql1": "\nSELECT company\nFROM entrepreneur\nORDER BY company\n", "sql2": "SELECT Company\nFROM entrepreneur\nORDER BY Money_Requested DESC", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0014", "sql1": "\nSELECT DISTINCT investor_other AS investor\nFROM\n  (SELECT LHS.investor AS investor,\n          LHS.maxn AS maxn,\n          RHS.investor AS investor_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT investor,\n             MAX(n) AS maxn\n      FROM\n        (SELECT investor,\n                COUNT(*) AS n\n         FROM entrepreneur\n         GROUP BY investor)\n      GROUP BY investor) AS LHS\n   CROSS JOIN\n     (SELECT investor,\n             MAX(n) AS maxn\n      FROM\n        (SELECT investor,\n                COUNT(*) AS n\n         FROM entrepreneur\n         GROUP BY investor)\n      GROUP BY investor) AS RHS)\nWHERE (maxn < maxn_other)\nORDER BY investor\n", "sql2": "SELECT Investor\nFROM entrepreneur\nGROUP BY Investor\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM entrepreneur\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM entrepreneur", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM entrepreneur AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM people\nWHERE People_ID NOT IN\n    (SELECT People_ID\n     FROM entrepreneur)", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0020", "sql1": "\nSELECT company\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          LHS.date_of_birth AS date_of_birth\n   FROM\n     (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n             LHS.people_id AS people_id,\n             LHS.company AS company,\n             LHS.money_requested AS money_requested,\n             LHS.investor AS investor,\n             RHS.name AS name,\n             RHS.height AS height,\n             RHS.weight AS weight,\n             RHS.date_of_birth AS date_of_birth\n      FROM entrepreneur AS LHS\n      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(height) AS height\n      FROM people) AS RHS ON (LHS.height = RHS.height))\nORDER BY company\n", "sql2": "SELECT T1.Company\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T2.Height DESC\nLIMIT 1", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0016", "sql1": "\nSELECT name,\n       company\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.name AS name,\n          LHS.height AS height,\n          LHS.weight AS weight,\n          LHS.date_of_birth AS date_of_birth,\n          RHS.entrepreneur_id AS entrepreneur_id,\n          RHS.people_id AS people_id_other,\n          RHS.company AS company,\n          RHS.money_requested AS money_requested,\n          RHS.investor AS investor\n   FROM people AS LHS\n   CROSS JOIN entrepreneur AS RHS)\nWHERE (people_id = people_id_other)\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.Company\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Money_Requested", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0007", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,\n          `LHS`.`people_id` AS `people_id`,\n          `LHS`.`company` AS `company`,\n          `LHS`.`money_requested` AS `money_requested`,\n          `LHS`.`investor` AS `investor`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`height` AS `height`,\n          `RHS`.`weight` AS `weight`,\n          `RHS`.`date_of_birth` AS `date_of_birth`\n   FROM\n     (SELECT *\n      FROM `entrepreneur`\n      WHERE (`investor` != 'Rachel Elnaugh')) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Investor != 'Rachel Elnaugh'", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0011", "sql1": "\nSELECT `date_of_birth`\nFROM\n  (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,\n          `LHS`.`people_id` AS `people_id`,\n          `LHS`.`company` AS `company`,\n          `LHS`.`money_requested` AS `money_requested`,\n          `LHS`.`investor` AS `investor`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`weight` AS `weight`,\n          `LHS`.`date_of_birth` AS `date_of_birth`\n   FROM\n     (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,\n             `LHS`.`people_id` AS `people_id`,\n             `LHS`.`company` AS `company`,\n             `LHS`.`money_requested` AS `money_requested`,\n             `LHS`.`investor` AS `investor`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`height` AS `height`,\n             `RHS`.`weight` AS `weight`,\n             `RHS`.`date_of_birth` AS `date_of_birth`\n      FROM `entrepreneur` AS `LHS`\n      INNER JOIN `people` AS `RHS` ON (`LHS`.`people_id` = `RHS`.`people_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `entrepreneur`\n      WHERE (`investor` = 'Simon Woodroffe'\n             OR `investor` = 'Peter Jones')) AS RHS ON (LHS.entrepreneur_id = RHS.entrepreneur_id\n                                                        AND LHS.people_id = RHS.people_id\n                                                        AND LHS.company = RHS.company\n                                                        AND LHS.money_requested = RHS.money_requested\n                                                        AND LHS.investor = RHS.investor))\nORDER BY date_of_birth\n", "sql2": "SELECT T2.Date_of_Birth\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Investor = 'Simon Woodroffe'\n  OR T1.Investor = 'Peter Jones'", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/entrepreneur/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.entrepreneur_id AS entrepreneur_id,\n          LHS.people_id AS people_id,\n          LHS.company AS company,\n          LHS.money_requested AS money_requested,\n          LHS.investor AS investor,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.date_of_birth AS date_of_birth\n   FROM entrepreneur AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM entrepreneur AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID", "schema": "spider/entrepreneur/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0013", "sql1": "\nSELECT `date_of_birth`\nFROM `guests`\nWHERE (`gender_code` = 'Male')\nORDER BY date_of_birth\n", "sql2": "SELECT date_of_birth\nFROM Guests\nWHERE gender_code = 'Male'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0005", "sql1": "\nSELECT `building_address`,\n       `building_phone`\nFROM `apartment_buildings`\nWHERE (`building_manager` = 'Brenden')\nORDER BY building_address\n", "sql2": "SELECT building_address,\n       building_phone\nFROM Apartment_Buildings\nWHERE building_manager = 'Brenden'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0028", "sql1": "\nSELECT booking_status_code,\n       n AS count___\nFROM\n  (SELECT booking_status_code,\n          COUNT(*) AS n\n   FROM apartment_bookings\n   GROUP BY booking_status_code)\nORDER BY booking_status_code\n", "sql2": "SELECT booking_status_code,\n       COUNT(*)\nFROM Apartment_Bookings\nGROUP BY booking_status_code", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0012", "sql1": "\nSELECT guest_first_name,\n       guest_last_name\nFROM guests\nORDER BY guest_first_name\n", "sql2": "SELECT guest_first_name,\n       guest_last_name\nFROM Guests", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0008", "sql1": "\nSELECT meanbedroom_count AS avg_bedroom_count_\nFROM\n  (SELECT AVG(bedroom_count) AS meanbedroom_count\n   FROM apartments)\nORDER BY avg_bedroom_count_\n", "sql2": "SELECT avg(bedroom_count)\nFROM Apartments", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0003", "sql1": "\nSELECT DISTINCT building_description\nFROM apartment_buildings\nORDER BY building_description\n", "sql2": "SELECT DISTINCT building_description\nFROM Apartment_Buildings", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0022", "sql1": "\nSELECT `guest_first_name`,\n       `guest_last_name`\nFROM\n  (SELECT `LHS`.`guest_id` AS `guest_id`,\n          `LHS`.`gender_code` AS `gender_code`,\n          `LHS`.`guest_first_name` AS `guest_first_name`,\n          `LHS`.`guest_last_name` AS `guest_last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`apt_booking_id` AS `apt_booking_id`,\n          `RHS`.`apt_id` AS `apt_id`,\n          `RHS`.`booking_status_code` AS `booking_status_code`,\n          `RHS`.`booking_start_date` AS `booking_start_date`,\n          `RHS`.`booking_end_date` AS `booking_end_date`\n   FROM `guests` AS `LHS`\n   INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`guest_id` = `RHS`.`guest_id`))\nWHERE (`booking_status_code` = 'Confirmed')\nORDER BY guest_first_name\n", "sql2": "SELECT T2.guest_first_name,\n       T2.guest_last_name\nFROM Apartment_Bookings AS T1\nJOIN Guests AS T2 ON T1.guest_id = T2.guest_id\nWHERE T1.booking_status_code = 'Confirmed'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0018", "sql1": "\nSELECT DISTINCT `apt_number`\nFROM\n  (SELECT `LHS`.`apt_id` AS `apt_id`,\n          `LHS`.`building_id` AS `building_id`,\n          `LHS`.`apt_type_code` AS `apt_type_code`,\n          `LHS`.`apt_number` AS `apt_number`,\n          `LHS`.`bathroom_count` AS `bathroom_count`,\n          `LHS`.`bedroom_count` AS `bedroom_count`,\n          `LHS`.`room_count` AS `room_count`,\n          `RHS`.`apt_booking_id` AS `apt_booking_id`,\n          `RHS`.`guest_id` AS `guest_id`,\n          `RHS`.`booking_status_code` AS `booking_status_code`,\n          `RHS`.`booking_start_date` AS `booking_start_date`,\n          `RHS`.`booking_end_date` AS `booking_end_date`\n   FROM `apartments` AS `LHS`\n   INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`))\nWHERE (`booking_status_code` = 'Confirmed')\nORDER BY apt_number\n", "sql2": "SELECT DISTINCT T2.apt_number\nFROM Apartment_Bookings AS T1\nJOIN Apartments AS T2 ON T1.apt_id = T2.apt_id\nWHERE T1.booking_status_code = 'Confirmed'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0002", "sql1": "\nSELECT booking_start_date,\n       booking_end_date\nFROM apartment_bookings\nORDER BY booking_start_date\n", "sql2": "SELECT booking_start_date,\n       booking_end_date\nFROM Apartment_Bookings", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM apartment_bookings\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Apartment_Bookings", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0017", "sql1": "\nSELECT `booking_status_code`\nFROM\n  (SELECT `LHS`.`apt_booking_id` AS `apt_booking_id`,\n          `LHS`.`apt_id` AS `apt_id`,\n          `LHS`.`guest_id` AS `guest_id`,\n          `LHS`.`booking_status_code` AS `booking_status_code`,\n          `LHS`.`booking_start_date` AS `booking_start_date`,\n          `LHS`.`booking_end_date` AS `booking_end_date`,\n          `RHS`.`building_id` AS `building_id`,\n          `RHS`.`apt_type_code` AS `apt_type_code`,\n          `RHS`.`apt_number` AS `apt_number`,\n          `RHS`.`bathroom_count` AS `bathroom_count`,\n          `RHS`.`bedroom_count` AS `bedroom_count`,\n          `RHS`.`room_count` AS `room_count`\n   FROM `apartment_bookings` AS `LHS`\n   LEFT JOIN `apartments` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`))\nWHERE (`apt_number` = 'Suite 634')\nORDER BY booking_status_code\n", "sql2": "SELECT T1.booking_status_code\nFROM Apartment_Bookings AS T1\nJOIN Apartments AS T2 ON T1.apt_id = T2.apt_id\nWHERE T2.apt_number = 'Suite 634'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0040", "sql1": "\nSELECT apt_number\nFROM\n  (SELECT *\n   FROM apartments AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM view_unit_status\n           WHERE (available_yn != 1)) AS RHS\n        WHERE (LHS.apt_id = RHS.apt_id) ))\nORDER BY apt_number\n", "sql2": "SELECT T1.apt_number\nFROM Apartments AS T1\nJOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id\nWHERE T2.available_yn = 0 INTERSECT\n  SELECT T1.apt_number\n  FROM Apartments AS T1\n  JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0021", "sql1": "\nSELECT `booking_start_date` AS `booking_start_date___1`,\n       `booking_start_date_other` AS `booking_start_date___2`\nFROM\n  (SELECT `LHS`.`guest_id` AS `guest_id`,\n          `LHS`.`gender_code` AS `gender_code`,\n          `LHS`.`guest_first_name` AS `guest_first_name`,\n          `LHS`.`guest_last_name` AS `guest_last_name`,\n          `LHS`.`date_of_birth` AS `date_of_birth`,\n          `RHS`.`apt_booking_id` AS `apt_booking_id`,\n          `RHS`.`apt_id` AS `apt_id`,\n          `RHS`.`booking_status_code` AS `booking_status_code`,\n          `RHS`.`booking_start_date` AS `booking_start_date`,\n          `RHS`.`booking_end_date` AS `booking_end_date`,\n          `RHS`.`apt_booking_id_other` AS `apt_booking_id_other`,\n          `RHS`.`booking_status_code_other` AS `booking_status_code_other`,\n          `RHS`.`booking_start_date_other` AS `booking_start_date_other`,\n          `RHS`.`booking_end_date_other` AS `booking_end_date_other`\n   FROM `guests` AS `LHS`\n   INNER JOIN\n     (SELECT `LHS`.`apt_booking_id` AS `apt_booking_id`,\n             `LHS`.`apt_id` AS `apt_id`,\n             `LHS`.`guest_id` AS `guest_id`,\n             `LHS`.`booking_status_code` AS `booking_status_code`,\n             `LHS`.`booking_start_date` AS `booking_start_date`,\n             `LHS`.`booking_end_date` AS `booking_end_date`,\n             `RHS`.`apt_booking_id` AS `apt_booking_id_other`,\n             `RHS`.`booking_status_code` AS `booking_status_code_other`,\n             `RHS`.`booking_start_date` AS `booking_start_date_other`,\n             `RHS`.`booking_end_date` AS `booking_end_date_other`\n      FROM `apartment_bookings` AS `LHS`\n      INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`\n                                                      AND `LHS`.`guest_id` = `RHS`.`guest_id`)) AS `RHS` ON (`LHS`.`guest_id` = `RHS`.`guest_id`))\nWHERE (`gender_code` = 'Female')\nORDER BY booking_start_date___1\n", "sql2": "SELECT T1.booking_start_date,\n       T1.booking_start_date\nFROM Apartment_Bookings AS T1\nJOIN Guests AS T2 ON T1.guest_id = T2.guest_id\nWHERE T2.gender_code = 'Female'", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0031", "sql1": "\nSELECT apt_type_code,\n       n AS count___\nFROM\n  (SELECT apt_type_code,\n          COUNT(*) AS n\n   FROM apartments\n   GROUP BY apt_type_code)\nORDER BY apt_type_code\n", "sql2": "SELECT apt_type_code,\n       COUNT(*)\nFROM Apartments\nGROUP BY apt_type_code\nORDER BY COUNT(*) ASC", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0007", "sql1": "\nSELECT DISTINCT MIN(bathroom_count) OVER () AS min_bathroom_count_,\n                                         maxbathroom_count AS max_bathroom_count_\nFROM\n  (SELECT apt_id,\n          building_id,\n          apt_type_code,\n          apt_number,\n          bathroom_count,\n          bedroom_count,\n          room_count,\n          MAX(bathroom_count) OVER () AS maxbathroom_count\n   FROM apartments)\nORDER BY min_bathroom_count_\n", "sql2": "SELECT min(bathroom_count),\n       max(bathroom_count)\nFROM Apartments", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/apartment_rentals/0030", "sql1": "\nSELECT apt_number\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT apt_id,\n                building_id,\n                apt_type_code,\n                apt_number,\n                bathroom_count,\n                bedroom_count,\n                room_count,\n                MAX(bedroom_count) OVER () AS maxbedroom_count\n         FROM apartments)\n      ORDER BY apt_type_code DESC)\n   LIMIT 1)\n", "sql2": "SELECT apt_number\nFROM Apartments\nORDER BY bedroom_count DESC\nLIMIT 1", "schema": "spider/apartment_rentals/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/apartment_rentals/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0009", "sql1": "\nSELECT id,\n       name\nFROM\n  (SELECT id,\n          name,\n          trade_name,\n          fda_approved,\n          n,\n          id AS medicine_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.trade_name AS trade_name,\n             LHS.fda_approved AS fda_approved,\n             RHS.n AS n\n      FROM medicine AS LHS\n      INNER JOIN\n        (SELECT medicine_id,\n                COUNT(*) AS n\n         FROM medicine_enzyme_interaction\n         GROUP BY medicine_id) AS RHS ON (LHS.id = RHS.medicine_id)))\nWHERE (n >= 2)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.Name\nFROM medicine AS T1\nJOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id\nGROUP BY T1.id\nHAVING count(*) >= 2", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0013", "sql1": "\nSELECT interaction_type,\n       n AS count___\nFROM\n  (SELECT LHS.interaction_type AS interaction_type,\n          LHS.n AS n,\n          RHS.n AS n_other\n   FROM\n     (SELECT interaction_type,\n             COUNT(*) AS n\n      FROM medicine_enzyme_interaction\n      GROUP BY interaction_type) AS LHS\n   CROSS JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT interaction_type,\n                COUNT(*) AS n\n         FROM medicine_enzyme_interaction\n         GROUP BY interaction_type)) AS RHS)\nWHERE (n = n_other)\nORDER BY interaction_type\n", "sql2": "SELECT interaction_type,\n       count(*)\nFROM medicine_enzyme_interaction\nGROUP BY interaction_type\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0005", "sql1": "\nSELECT `product`,\n       `chromosome`,\n       `porphyria`\nFROM `enzyme`\nWHERE (`location` = 'Cytosol')\nORDER BY product\n", "sql2": "SELECT product,\n       chromosome,\n       porphyria\nFROM enzyme\nWHERE LOCATION = 'Cytosol'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0004", "sql1": "\nSELECT DISTINCT MAX(omim) OVER () AS max_omim_\nFROM enzyme\nORDER BY max_omim_\n", "sql2": "SELECT max(OMIM)\nFROM enzyme", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0003", "sql1": "\nSELECT name,\n       LOCATION\nFROM enzyme\nORDER BY name\n", "sql2": "SELECT name,\n       LOCATION\nFROM enzyme", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0022", "sql1": "\nSELECT trade_name,\n       n AS count___\nFROM\n  (SELECT fda_approved,\n          trade_name,\n          COUNT(*) AS n\n   FROM medicine\n   GROUP BY fda_approved,\n            trade_name)\nORDER BY trade_name\n", "sql2": "SELECT trade_name,\n       count(*)\nFROM medicine\nGROUP BY trade_name", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0002", "sql1": "\nSELECT name\nFROM enzyme\nORDER BY name\n", "sql2": "SELECT name\nFROM enzyme\nORDER BY name DESC", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0014", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `fda_approved`,\n          COUNT(*) AS `n`\n   FROM `medicine`\n   GROUP BY `fda_approved`)\nWHERE (`fda_approved` = 'No')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM medicine\nWHERE FDA_approved = 'No'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM enzyme\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM enzyme", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0020", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT fda_approved) OVER () AS count_distinct_fda_approved_\nFROM medicine\nORDER BY count_distinct_fda_approved_\n", "sql2": "SELECT count(DISTINCT FDA_approved)\nFROM medicine", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0016", "sql1": "\nSELECT id,\n       trade_name\nFROM\n  (SELECT id,\n          name,\n          trade_name,\n          fda_approved,\n          n,\n          id AS medicine_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.trade_name AS trade_name,\n             LHS.fda_approved AS fda_approved,\n             RHS.n AS n\n      FROM medicine AS LHS\n      INNER JOIN\n        (SELECT medicine_id,\n                COUNT(*) AS n\n         FROM medicine_enzyme_interaction\n         GROUP BY medicine_id) AS RHS ON (LHS.id = RHS.medicine_id)))\nWHERE (n >= 3)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.trade_name\nFROM medicine AS T1\nJOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id\nGROUP BY T1.id\nHAVING COUNT(*) >= 3", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0007", "sql1": "\nSELECT `name`,\n       `trade_name`\nFROM `medicine`\nWHERE (`fda_approved` = 'Yes')\nORDER BY name\n", "sql2": "SELECT name,\n       trade_name\nFROM medicine\nWHERE FDA_approved = 'Yes'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0010", "sql1": "\nSELECT DISTINCT id,\n                name,\n                fda_approved\nFROM\n  (SELECT id,\n          name,\n          trade_name,\n          fda_approved,\n          enzyme_id,\n          interaction_type,\n          id AS medicine_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.trade_name AS trade_name,\n             LHS.fda_approved AS fda_approved,\n             RHS.enzyme_id AS enzyme_id,\n             RHS.interaction_type AS interaction_type\n      FROM medicine AS LHS\n      INNER JOIN medicine_enzyme_interaction AS RHS ON (LHS.id = RHS.medicine_id)))\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.Name,\n       T1.FDA_approved\nFROM medicine AS T1\nJOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id\nGROUP BY T1.id\nORDER BY count(*) DESC", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/medicine_enzyme_interaction/0006", "sql1": "\nSELECT `name`\nFROM `enzyme`\nWHERE (`product` != 'Heme')\nORDER BY name\n", "sql2": "SELECT name\nFROM enzyme\nWHERE product != 'Heme'", "schema": "spider/medicine_enzyme_interaction/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0009", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM people\n      ORDER BY age DESC)\n   LIMIT 5)\n", "sql2": "SELECT Name\nFROM People\nORDER BY Age DESC\nLIMIT 5", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0005", "sql1": "\nSELECT name\nFROM people\nORDER BY name\n", "sql2": "SELECT Name\nFROM People\nORDER BY Name ASC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0004", "sql1": "\nSELECT DISTINCT AVG(horizontal_bar_points) OVER () AS avg_horizontal_bar_points_\nFROM gymnast\nORDER BY avg_horizontal_bar_points_\n", "sql2": "SELECT avg(Horizontal_Bar_Points)\nFROM gymnast", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0012", "sql1": "\nSELECT DISTINCT `hometown`\nFROM\n  (SELECT `gymnast_id`,\n          `floor_exercise_points`,\n          `pommel_horse_points`,\n          `rings_points`,\n          `vault_points`,\n          `parallel_bars_points`,\n          `horizontal_bar_points`,\n          `total_points`,\n          `name`,\n          `age`,\n          `height`,\n          `hometown`,\n          `gymnast_id` AS `people_id`\n   FROM\n     (SELECT `LHS`.`gymnast_id` AS `gymnast_id`,\n             `LHS`.`floor_exercise_points` AS `floor_exercise_points`,\n             `LHS`.`pommel_horse_points` AS `pommel_horse_points`,\n             `LHS`.`rings_points` AS `rings_points`,\n             `LHS`.`vault_points` AS `vault_points`,\n             `LHS`.`parallel_bars_points` AS `parallel_bars_points`,\n             `LHS`.`horizontal_bar_points` AS `horizontal_bar_points`,\n             `LHS`.`total_points` AS `total_points`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`height` AS `height`,\n             `RHS`.`hometown` AS `hometown`\n      FROM `gymnast` AS `LHS`\n      INNER JOIN `people` AS `RHS` ON (`LHS`.`gymnast_id` = `RHS`.`people_id`)))\nWHERE (`total_points` >= '57.5')\nORDER BY hometown\n", "sql2": "SELECT DISTINCT T2.Hometown\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nWHERE T1.Total_Points > 57.5", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0008", "sql1": "\nSELECT age\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.height AS height,\n          LHS.hometown AS hometown,\n          RHS.height AS height_other\n   FROM people AS LHS\n   CROSS JOIN\n     (SELECT MAX(height) AS height\n      FROM people) AS RHS)\nWHERE (height >= height_other)\nORDER BY age\n", "sql2": "SELECT Age\nFROM people\nORDER BY Height DESC\nLIMIT 1", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0015", "sql1": "\nSELECT DISTINCT hometown\nFROM\n  (SELECT LHS.people_id AS people_id,\n          LHS.name AS name,\n          LHS.age AS age,\n          LHS.height AS height,\n          LHS.hometown AS hometown,\n          RHS.rings_points AS rings_points,\n          RHS.vault_points AS vault_points\n   FROM people AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT rings_points,\n                vault_points,\n                COUNT(*) AS n\n         FROM gymnast\n         GROUP BY rings_points,\n                  vault_points)\n      WHERE (n <= 2)) AS RHS ON (LHS.people_id = RHS.n))\nORDER BY hometown\n", "sql2": "SELECT T2.Hometown\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nGROUP BY T2.Hometown\nHAVING COUNT(*) >= 2", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0003", "sql1": "\nSELECT total_points\nFROM gymnast\nORDER BY total_points\n", "sql2": "SELECT Total_Points\nFROM gymnast\nORDER BY Floor_Exercise_Points DESC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0019", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT hometown) OVER () AS count_distinct_hometown_\nFROM people\nORDER BY count_distinct_hometown_\n", "sql2": "SELECT count(DISTINCT Hometown)\nFROM people", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0018", "sql1": "\nSELECT DISTINCT hometown\nFROM people\nWHERE (age < 23.0\n       AND age = 20.0)\nORDER BY hometown\n", "sql2": "SELECT Hometown\nFROM people\nWHERE Age > 23 INTERSECT\n  SELECT Hometown\n  FROM people WHERE Age < 20", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0002", "sql1": "\nSELECT total_points\nFROM gymnast\nORDER BY total_points\n", "sql2": "SELECT Total_Points\nFROM gymnast\nORDER BY Total_Points DESC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM gymnast\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM gymnast", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0020", "sql1": "\nSELECT age\nFROM\n  (SELECT LHS.gymnast_id AS gymnast_id,\n          LHS.floor_exercise_points AS floor_exercise_points,\n          LHS.pommel_horse_points AS pommel_horse_points,\n          LHS.rings_points AS rings_points,\n          LHS.vault_points AS vault_points,\n          LHS.parallel_bars_points AS parallel_bars_points,\n          LHS.horizontal_bar_points AS horizontal_bar_points,\n          LHS.total_points AS total_points,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.height AS height,\n          RHS.hometown AS hometown\n   FROM gymnast AS LHS\n   INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))\nORDER BY age\n", "sql2": "SELECT T2.Age\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nORDER BY T1.Total_Points DESC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0016", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.gymnast_id AS gymnast_id,\n          LHS.floor_exercise_points AS floor_exercise_points,\n          LHS.pommel_horse_points AS pommel_horse_points,\n          LHS.rings_points AS rings_points,\n          LHS.vault_points AS vault_points,\n          LHS.parallel_bars_points AS parallel_bars_points,\n          LHS.horizontal_bar_points AS horizontal_bar_points,\n          LHS.total_points AS total_points,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.height AS height,\n          RHS.hometown AS hometown\n   FROM gymnast AS LHS\n   INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nORDER BY T2.Height ASC", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0007", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `gymnast_id`,\n          `floor_exercise_points`,\n          `pommel_horse_points`,\n          `rings_points`,\n          `vault_points`,\n          `parallel_bars_points`,\n          `horizontal_bar_points`,\n          `total_points`,\n          `name`,\n          `age`,\n          `height`,\n          `hometown`,\n          `gymnast_id` AS `people_id`\n   FROM\n     (SELECT `LHS`.`gymnast_id` AS `gymnast_id`,\n             `LHS`.`floor_exercise_points` AS `floor_exercise_points`,\n             `LHS`.`pommel_horse_points` AS `pommel_horse_points`,\n             `LHS`.`rings_points` AS `rings_points`,\n             `LHS`.`vault_points` AS `vault_points`,\n             `LHS`.`parallel_bars_points` AS `parallel_bars_points`,\n             `LHS`.`horizontal_bar_points` AS `horizontal_bar_points`,\n             `LHS`.`total_points` AS `total_points`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`age` AS `age`,\n             `RHS`.`height` AS `height`,\n             `RHS`.`hometown` AS `hometown`\n      FROM `gymnast` AS `LHS`\n      INNER JOIN `people` AS `RHS` ON (`LHS`.`gymnast_id` = `RHS`.`people_id`)))\nWHERE (`hometown` != 'Santo Domingo')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID\nWHERE T2.Hometown != 'Santo Domingo'", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/gymnast/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.gymnast_id AS gymnast_id,\n          LHS.floor_exercise_points AS floor_exercise_points,\n          LHS.pommel_horse_points AS pommel_horse_points,\n          LHS.rings_points AS rings_points,\n          LHS.vault_points AS vault_points,\n          LHS.parallel_bars_points AS parallel_bars_points,\n          LHS.horizontal_bar_points AS horizontal_bar_points,\n          LHS.total_points AS total_points,\n          RHS.name AS name,\n          RHS.age AS age,\n          RHS.height AS height,\n          RHS.hometown AS hometown\n   FROM gymnast AS LHS\n   INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM gymnast AS T1\nJOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID", "schema": "spider/gymnast/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0009", "sql1": "\nSELECT DISTINCT classroom\nFROM list\nWHERE (grade = 5)\nORDER BY classroom\n", "sql2": "SELECT DISTINCT classroom\nFROM list\nWHERE grade = 5", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0025", "sql1": "\nSELECT `firstname`,\n       `lastname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `list`\n      WHERE (`lastname` = 'MOYER'\n             OR grade = 1)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teachers AS RHS\n        WHERE (LHS.lastname = RHS.lastname\n               AND LHS.firstname = RHS.firstname\n               AND LHS.classroom = RHS.classroom) ))\nORDER BY firstname\n", "sql2": "SELECT DISTINCT T1.firstname,\n                T1.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T1.grade = 1\nEXCEPT\nSELECT T1.firstname,\n       T1.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T2.firstname = 'OTHA'\n  AND T2.lastname = 'MOYER'", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0013", "sql1": "\nSELECT lastname\nFROM teachers\nWHERE (classroom = 109)\nORDER BY lastname\n", "sql2": "SELECT lastname\nFROM teachers\nWHERE classroom = 109", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0005", "sql1": "\nSELECT DISTINCT classroom,\n                grade\nFROM list\nORDER BY classroom\n", "sql2": "SELECT DISTINCT classroom,\n                grade\nFROM list", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0029", "sql1": "\nSELECT DISTINCT classroom\nFROM\n  (SELECT LHS.classroom AS classroom,\n          LHS.grade AS grade,\n          LHS.n AS n,\n          LHS.maxn AS maxn,\n          RHS.classroom AS classroom_other,\n          RHS.grade AS grade_other,\n          RHS.n AS n_other,\n          RHS.maxn AS maxn_other\n   FROM\n     (SELECT classroom,\n             grade,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT classroom,\n                grade,\n                COUNT(*) AS n\n         FROM list\n         GROUP BY classroom,\n                  grade)) AS LHS\n   CROSS JOIN\n     (SELECT classroom,\n             grade,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT classroom,\n                grade,\n                COUNT(*) AS n\n         FROM list\n         GROUP BY classroom,\n                  grade)) AS RHS)\nWHERE (n >= maxn\n       AND maxn >= n_other)\nORDER BY classroom\n", "sql2": "SELECT classroom\nFROM list\nGROUP BY classroom\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0028", "sql1": "\nSELECT classroom,\n       n_distinct AS count_distinct_grade_\nFROM\n  (SELECT classroom,\n          COUNT(DISTINCT grade) AS n_distinct\n   FROM list\n   GROUP BY classroom)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(DISTINCT grade)\nFROM list\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0004", "sql1": "\nSELECT firstname\nFROM list\nWHERE (classroom = 107)\nORDER BY firstname\n", "sql2": "SELECT DISTINCT firstname\nFROM list\nWHERE classroom = 107", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0012", "sql1": "\nSELECT firstname\nFROM teachers\nWHERE (classroom = 110)\nORDER BY firstname\n", "sql2": "SELECT firstname\nFROM teachers\nWHERE classroom = 110", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0032", "sql1": "\nSELECT classroom,\n       n AS count___\nFROM\n  (SELECT classroom,\n          grade,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom,\n            grade)\nWHERE (grade = 4)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(*)\nFROM list\nWHERE grade = '4'\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0008", "sql1": "\nSELECT DISTINCT classroom\nFROM list\nWHERE (grade = 4)\nORDER BY classroom\n", "sql2": "SELECT DISTINCT classroom\nFROM list\nWHERE grade = 4", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0015", "sql1": "\nSELECT firstname,\n       lastname\nFROM list\nORDER BY firstname\n", "sql2": "SELECT DISTINCT firstname,\n                lastname\nFROM list", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0003", "sql1": "\nSELECT firstname\nFROM list\nWHERE (classroom = 108)\nORDER BY firstname\n", "sql2": "SELECT firstname\nFROM list\nWHERE classroom = 108", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0034", "sql1": "\nSELECT n AS count___,\n       classroom\nFROM\n  (SELECT classroom,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       classroom\nFROM list\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0022", "sql1": "\nSELECT DISTINCT `grade` AS `count___`\nFROM\n  (SELECT `LHS`.`lastname` AS `lastname`,\n          `LHS`.`firstname` AS `firstname`,\n          `LHS`.`grade` AS `grade`,\n          `LHS`.`classroom` AS `classroom`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM `list` AS `LHS`\n   INNER JOIN\n     (SELECT `classroom`,\n             COUNT(DISTINCT `firstname`) AS `n_distinct`\n      FROM `teachers`\n      WHERE (`lastname` = 'TARRING')\n      GROUP BY classroom) AS RHS ON (LHS.classroom = RHS.classroom))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T2.firstname = 'TARRING'\n  AND T2.lastname = 'LEIA'", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0002", "sql1": "\nSELECT lastname\nFROM list\nWHERE (classroom = 111)\nORDER BY lastname\n", "sql2": "SELECT lastname\nFROM list\nWHERE classroom = 111", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0014", "sql1": "\nSELECT firstname,\n       lastname\nFROM teachers\nORDER BY firstname\n", "sql2": "SELECT DISTINCT firstname,\n                lastname\nFROM teachers", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM list\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM list", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0031", "sql1": "\nSELECT classroom,\n       n AS count___\nFROM\n  (SELECT classroom,\n          grade,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom,\n            grade)\nWHERE (grade = 0)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(*)\nFROM list\nWHERE grade = '0'\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0007", "sql1": "\nSELECT DISTINCT grade\nFROM list\nWHERE (classroom = 105)\nORDER BY grade\n", "sql2": "SELECT DISTINCT grade\nFROM list\nWHERE classroom = 105", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0011", "sql1": "\nSELECT firstname\nFROM\n  (SELECT *\n   FROM teachers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM list\n           WHERE (grade != 1)) AS RHS\n        WHERE (LHS.classroom = RHS.classroom) ))\nORDER BY firstname\n", "sql2": "SELECT DISTINCT T2.firstname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE grade = 1", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0010", "sql1": "\nSELECT lastname\nFROM\n  (SELECT *\n   FROM teachers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM list\n           WHERE (grade != 5)) AS RHS\n        WHERE (LHS.classroom = RHS.classroom) ))\nORDER BY lastname\n", "sql2": "SELECT DISTINCT T2.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE grade = 5", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0006", "sql1": "\nSELECT DISTINCT grade\nFROM list\nWHERE (classroom = 103)\nORDER BY grade\n", "sql2": "SELECT DISTINCT grade\nFROM list\nWHERE classroom = 103", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0026", "sql1": "\nSELECT `lastname`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `list`\n      WHERE (`lastname` = 'COVIN'\n             OR grade = 3)) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM teachers AS RHS\n        WHERE (LHS.lastname = RHS.lastname\n               AND LHS.firstname = RHS.firstname\n               AND LHS.classroom = RHS.classroom) ))\nORDER BY lastname\n", "sql2": "SELECT DISTINCT T1.lastname\nFROM list AS T1\nJOIN teachers AS T2 ON T1.classroom = T2.classroom\nWHERE T1.grade = 3\n  AND T2.firstname != 'COVIN'\n  AND T2.lastname != 'JEROME'", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_1/0030", "sql1": "\nSELECT classroom,\n       n AS count___\nFROM\n  (SELECT classroom,\n          COUNT(*) AS n\n   FROM list\n   GROUP BY classroom)\nORDER BY classroom\n", "sql2": "SELECT classroom,\n       count(*)\nFROM list\nGROUP BY classroom", "schema": "spider/student_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0009", "sql1": "\nSELECT title\nFROM albums\nORDER BY title\n", "sql2": "SELECT title\nFROM albums\nORDER BY title;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0033", "sql1": "\nSELECT first_name,\n       last_name\nFROM employees\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM employees\nORDER BY hire_date ASC\nLIMIT 10;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0044", "sql1": "\nSELECT DISTINCT `title`\nFROM\n  (SELECT `id`,\n          `name`,\n          `album_id`,\n          `media_type_id`,\n          `genre_id`,\n          `composer`,\n          `milliseconds`,\n          `bytes`,\n          `unit_price`,\n          `title`,\n          `genre_id` AS `artist_id`\n   FROM\n     (SELECT `media_type_id` AS `id`,\n             `name`,\n             `album_id`,\n             `media_type_id`,\n             `genre_id`,\n             `composer`,\n             `milliseconds`,\n             `bytes`,\n             `unit_price`,\n             `title`\n      FROM\n        (SELECT `LHS`.`id` AS `id`,\n                `LHS`.`name` AS `name`,\n                `LHS`.`album_id` AS `album_id`,\n                `LHS`.`media_type_id` AS `media_type_id`,\n                `LHS`.`genre_id` AS `genre_id`,\n                `LHS`.`composer` AS `composer`,\n                `LHS`.`milliseconds` AS `milliseconds`,\n                `LHS`.`bytes` AS `bytes`,\n                `LHS`.`unit_price` AS `unit_price`,\n                `RHS`.`title` AS `title`\n         FROM `tracks` AS `LHS`\n         INNER JOIN `albums` AS `RHS` ON (`LHS`.`media_type_id` = `RHS`.`id`\n                                             AND `LHS`.`genre_id` = `RHS`.`artist_id`))))\nWHERE (`name` != 'Balls to the Wall')\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM albums AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T2.name = 'Balls to the Wall';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0013", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `invoices`\nWHERE (`billing_city` = 'Chicago'\n       AND `billing_state` = 'IL')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM invoices\nWHERE billing_city = 'Chicago'\n  AND billing_state = 'IL';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0028", "sql1": "\nSELECT `address`\nFROM `employees`\nWHERE (`first_name` = 'Nancy'\n       AND `last_name` = 'Edwards')\nORDER BY address\n", "sql2": "SELECT address\nFROM employees\nWHERE first_name = 'Nancy'\n  AND last_name = 'Edwards';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0053", "sql1": "\nSELECT `unit_price`\nFROM `tracks`\nWHERE (`name` = 'Fast As a Shark')\nORDER BY unit_price\n", "sql2": "SELECT unit_price\nFROM tracks\nWHERE name = 'Fast As a Shark';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0012", "sql1": "\nSELECT DISTINCT SUM(`total`) OVER () AS `sum_total_`\nFROM `invoices`\nWHERE (`billing_city` = 'Chicago'\n       AND `billing_state` = 'IL')\nORDER BY sum_total_\n", "sql2": "SELECT sum(total)\nFROM invoices\nWHERE billing_city = 'Chicago'\n  AND billing_state = 'IL';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0045", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`artist_id` AS `artist_id`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`album_id` AS `album_id`,\n          `RHS`.`media_type_id` AS `media_type_id`,\n          `RHS`.`composer` AS `composer`,\n          `RHS`.`milliseconds` AS `milliseconds`,\n          `RHS`.`bytes` AS `bytes`,\n          `RHS`.`unit_price` AS `unit_price`\n   FROM\n     (SELECT *\n      FROM `albums`\n      WHERE (`title` = 'Balls to the Wall')) AS LHS\n   INNER JOIN tracks AS RHS ON (LHS.id = RHS.genre_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM albums AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T1.title = 'Balls to the Wall';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0008", "sql1": "\nSELECT title\nFROM albums\nORDER BY title\n", "sql2": "SELECT title\nFROM albums;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0049", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`name` AS `name_other`,\n          `RHS`.`album_id` AS `album_id`,\n          `RHS`.`media_type_id` AS `media_type_id`,\n          `RHS`.`composer` AS `composer`,\n          `RHS`.`milliseconds` AS `milliseconds`,\n          `RHS`.`bytes` AS `bytes`,\n          `RHS`.`unit_price` AS `unit_price`\n   FROM\n     (SELECT *\n      FROM `genres`\n      WHERE (`name` = 'Rock'\n             OR `name` = 'Jazz')) AS LHS\n   INNER JOIN tracks AS RHS ON (LHS.id = RHS.genre_id))\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM genres AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T1.name = 'Rock'\n  OR T1.name = 'Jazz'", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0042", "sql1": "\nSELECT `milliseconds`\nFROM `tracks`\nWHERE (`name` = 'Fast As a Shark')\nORDER BY milliseconds\n", "sql2": "SELECT milliseconds\nFROM tracks\nWHERE name = 'Fast As a Shark';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0039", "sql1": "\nSELECT name\nFROM genres\nORDER BY name\n", "sql2": "SELECT DISTINCT name\nFROM genres;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0019", "sql1": "\nSELECT `company`\nFROM `customers`\nWHERE (`first_name` = 'Eduardo'\n       AND `last_name` = 'Martins')\nORDER BY company\n", "sql2": "SELECT company\nFROM customers\nWHERE first_name = 'Eduardo'\n  AND last_name = 'Martins';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0023", "sql1": "\nSELECT `country`\nFROM `customers`\nWHERE (`first_name` = 'Roberto'\n       AND `last_name` = 'Almeida')\nORDER BY country\n", "sql2": "SELECT country\nFROM customers\nWHERE first_name = 'Roberto'\n  AND last_name = 'Almeida';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0034", "sql1": "\nSELECT `n` AS `count___`,\n       `city`\nFROM\n  (SELECT `city`,\n          `title`,\n          COUNT(*) AS `n`\n   FROM `employees`\n   GROUP BY `city`,\n            `title`)\nWHERE (`title` = 'IT Staff')\nORDER BY count___\n", "sql2": "SELECT count(*),\n       city\nFROM employees\nWHERE title = 'IT Staff'\nGROUP BY city", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0022", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `customers`\nWHERE (`state` = 'CA')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers\nWHERE state = 'CA';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0018", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`artist_id` AS `artist_id`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`n_distinct` AS `n_distinct`\n   FROM `albums` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `id`,\n                `name`,\n                COUNT(DISTINCT `name`) AS `n_distinct`\n         FROM `artists`\n         GROUP BY `id`,\n                  `name`)\n      WHERE (`name` != 'Billy Cobham')) AS RHS ON (LHS.id = RHS.id))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM albums AS T1\nJOIN artists AS T2 ON T1.artist_id = T2.id\nWHERE T2.name = 'Billy Cobham';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0038", "sql1": "\nSELECT name\nFROM media_types\nORDER BY name\n", "sql2": "SELECT name\nFROM media_types;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0014", "sql1": "\nSELECT `billing_state`,\n       `n` AS `count___`\nFROM\n  (SELECT `billing_country`,\n          `billing_state`,\n          COUNT(*) AS `n`\n   FROM `invoices`\n   GROUP BY `billing_country`,\n            `billing_state`)\nWHERE (`billing_country` = 'USA')\nORDER BY billing_state\n", "sql2": "SELECT billing_state,\n       COUNT(*)\nFROM invoices\nWHERE billing_country = 'USA'\nGROUP BY billing_state;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0043", "sql1": "\nSELECT `name_other` AS `name`\nFROM\n  (SELECT `id`,\n          `name`,\n          `id_other`,\n          `name_other`,\n          `album_id`,\n          `media_type_id`,\n          `composer`,\n          `milliseconds`,\n          `bytes`,\n          `unit_price`,\n          `id` AS `genre_id`\n   FROM\n     (SELECT `LHS`.`id` AS `id`,\n             `LHS`.`name` AS `name`,\n             `RHS`.`id` AS `id_other`,\n             `RHS`.`name` AS `name_other`,\n             `RHS`.`album_id` AS `album_id`,\n             `RHS`.`media_type_id` AS `media_type_id`,\n             `RHS`.`composer` AS `composer`,\n             `RHS`.`milliseconds` AS `milliseconds`,\n             `RHS`.`bytes` AS `bytes`,\n             `RHS`.`unit_price` AS `unit_price`\n      FROM `genres` AS `LHS`\n      INNER JOIN `tracks` AS `RHS` ON (`LHS`.`id` = `RHS`.`genre_id`)))\nWHERE (`name` = 'Rock')\nORDER BY name\n", "sql2": "SELECT T2.name\nFROM genres AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nWHERE T1.name = 'Rock';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0056", "sql1": "\nSELECT n AS count___,\n       name\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          RHS.unit_price AS unit_price,\n          RHS.n AS n\n   FROM genres AS LHS\n   INNER JOIN\n     (SELECT genre_id,\n             unit_price,\n             COUNT(*) AS n\n      FROM tracks\n      GROUP BY genre_id,\n               unit_price) AS RHS ON (LHS.id = RHS.genre_id))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.name\nFROM genres AS T1\nJOIN tracks AS T2 ON T1.id = T2.genre_id\nGROUP BY T1.name;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0017", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`title` AS `title`\n   FROM\n     (SELECT *\n      FROM `artists`\n      WHERE (`name` = 'Aerosmith')) AS LHS\n   INNER JOIN albums AS RHS ON (LHS.id = RHS.artist_id))\nORDER BY title\n", "sql2": "SELECT T1.title\nFROM albums AS T1\nJOIN artists AS T2 ON T1.artist_id = T2.id\nWHERE T2.name = 'Aerosmith';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0040", "sql1": "\nSELECT name\nFROM playlists\nORDER BY name\n", "sql2": "SELECT name\nFROM playlists;", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0021", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `state`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `customers`\n      WHERE (`city` = 'Prague'))\n   GROUP BY state)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers\nWHERE city = 'Prague';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0020", "sql1": "\nSELECT `email`,\n       `phone`\nFROM `customers`\nWHERE (`first_name` = 'Astrid'\n       AND `last_name` = 'Gruber')\nORDER BY email\n", "sql2": "SELECT email,\n       phone\nFROM customers\nWHERE first_name = 'Astrid'\n  AND last_name = 'Gruber';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0041", "sql1": "\nSELECT `composer`\nFROM `tracks`\nWHERE (`name` = 'Fast As a Shark')\nORDER BY composer\n", "sql2": "SELECT composer\nFROM tracks\nWHERE name = 'Fast As a Shark';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0031", "sql1": "\nSELECT `phone`\nFROM `employees`\nWHERE (`first_name` = 'Nancy'\n       AND `last_name` = 'Edwards')\nORDER BY phone\n", "sql2": "SELECT phone\nFROM employees\nWHERE first_name = 'Nancy'\n  AND last_name = 'Edwards';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/store_1/0030", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `country`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `employees`\n      WHERE (`country` = 'Canada'))\n   GROUP BY country)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employees\nWHERE country = 'Canada';", "schema": "spider/store_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/store_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0048", "sql1": "\nSELECT DISTINCT `stu_fname`\nFROM\n  (SELECT `LHS`.`stu_num` AS `stu_num`,\n          `LHS`.`stu_lname` AS `stu_lname`,\n          `LHS`.`stu_fname` AS `stu_fname`,\n          `LHS`.`stu_init` AS `stu_init`,\n          `LHS`.`stu_dob` AS `stu_dob`,\n          `LHS`.`stu_hrs` AS `stu_hrs`,\n          `LHS`.`stu_class` AS `stu_class`,\n          `LHS`.`stu_gpa` AS `stu_gpa`,\n          `LHS`.`stu_transfer` AS `stu_transfer`,\n          `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`stu_phone` AS `stu_phone`,\n          `LHS`.`prof_num` AS `prof_num`,\n          `RHS`.`class_code` AS `class_code`,\n          `RHS`.`enroll_grade` AS `enroll_grade`\n   FROM `student` AS `LHS`\n   LEFT JOIN `enroll` AS `RHS` ON (`LHS`.`stu_num` = `RHS`.`stu_num`))\nWHERE (`enroll_grade` != 'C')\nORDER BY stu_fname\n", "sql2": "SELECT DISTINCT stu_fname\nFROM student AS T1\nJOIN enroll AS T2 ON T1.stu_num = T2.stu_num\nWHERE enroll_grade = 'C'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0009", "sql1": "\nSELECT `n` AS `count_distinct_dept_address_`\nFROM\n  (SELECT `school_code`,\n          COUNT(*) AS `n`\n   FROM `department`\n   GROUP BY `school_code`)\nWHERE (`school_code` = 'BUS')\nORDER BY count_distinct_dept_address_\n", "sql2": "SELECT count(DISTINCT dept_address)\nFROM department\nWHERE school_code = 'BUS'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0033", "sql1": "\nSELECT sumcrs_credit AS sum_t1_crs_credit_,\n       dept_code\nFROM\n  (SELECT dept_code,\n          SUM(crs_credit) AS sumcrs_credit\n   FROM\n     (SELECT LHS.class_code AS class_code,\n             LHS.crs_code AS crs_code,\n             LHS.class_section AS class_section,\n             LHS.class_time AS class_time,\n             LHS.class_room AS class_room,\n             LHS.prof_num AS prof_num,\n             RHS.dept_code AS dept_code,\n             RHS.crs_description AS crs_description,\n             RHS.crs_credit AS crs_credit\n      FROM class AS LHS\n      INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code))\n   GROUP BY dept_code)\nORDER BY sum_t1_crs_credit_\n", "sql2": "SELECT sum(T1.crs_credit),\n       T1.dept_code\nFROM course AS T1\nJOIN CLASS AS T2 ON T1.crs_code = T2.crs_code\nGROUP BY T1.dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0044", "sql1": "\nSELECT `emp_fname`\nFROM `employee`\nWHERE (`emp_jobcode` = 'PROF')\nORDER BY emp_fname\n", "sql2": "SELECT emp_fname\nFROM employee\nWHERE emp_jobcode = 'PROF'\nORDER BY emp_dob", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0013", "sql1": "\nSELECT n AS count_distinct_dept_name_,\n       school_code\nFROM\n  (SELECT school_code,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY school_code)\nWHERE (n <= 5)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name),\n       school_code\nFROM department\nGROUP BY school_code\nHAVING count(DISTINCT dept_name) < 5", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `LHS`.`prof_num` AS `prof_num`,\n          `LHS`.`n` AS `n`,\n          `RHS`.`emp_lname` AS `emp_lname`,\n          `RHS`.`emp_fname` AS `emp_fname`,\n          `RHS`.`emp_initial` AS `emp_initial`,\n          `RHS`.`emp_jobcode` AS `emp_jobcode`,\n          `RHS`.`emp_hiredate` AS `emp_hiredate`,\n          `RHS`.`emp_dob` AS `emp_dob`\n   FROM\n     (SELECT `prof_num`,\n             COUNT(*) AS `n`\n      FROM `class`\n      GROUP BY `prof_num`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `employee`\n      WHERE (`emp_lname` = 'Graztevski')) AS RHS ON (LHS.prof_num = RHS.emp_num))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employee AS T1\nJOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM\nWHERE T1.EMP_LNAME = 'Graztevski'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0029", "sql1": "\nSELECT n_distinct AS count_distinct_crs_code_\nFROM\n  (SELECT COUNT(DISTINCT crs_code) AS n_distinct\n   FROM class)\nORDER BY count_distinct_crs_code_\n", "sql2": "SELECT count(DISTINCT crs_code)\nFROM CLASS", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0068", "sql1": "\nSELECT `emp_fname`,\n       `prof_office`\nFROM\n  (SELECT `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`dept_name` AS `dept_name`,\n          `LHS`.`school_code` AS `school_code`,\n          `LHS`.`emp_num` AS `emp_num`,\n          `LHS`.`dept_address` AS `dept_address`,\n          `LHS`.`dept_extension` AS `dept_extension`,\n          `LHS`.`emp_lname` AS `emp_lname`,\n          `LHS`.`emp_fname` AS `emp_fname`,\n          `LHS`.`emp_initial` AS `emp_initial`,\n          `LHS`.`emp_jobcode` AS `emp_jobcode`,\n          `LHS`.`emp_hiredate` AS `emp_hiredate`,\n          `LHS`.`emp_dob` AS `emp_dob`,\n          `RHS`.`prof_office` AS `prof_office`,\n          `RHS`.`prof_extension` AS `prof_extension`,\n          `RHS`.`prof_high_degree` AS `prof_high_degree`\n   FROM\n     (SELECT `LHS`.`dept_code` AS `dept_code`,\n             `LHS`.`dept_name` AS `dept_name`,\n             `LHS`.`school_code` AS `school_code`,\n             `LHS`.`emp_num` AS `emp_num`,\n             `LHS`.`dept_address` AS `dept_address`,\n             `LHS`.`dept_extension` AS `dept_extension`,\n             `RHS`.`emp_lname` AS `emp_lname`,\n             `RHS`.`emp_fname` AS `emp_fname`,\n             `RHS`.`emp_initial` AS `emp_initial`,\n             `RHS`.`emp_jobcode` AS `emp_jobcode`,\n             `RHS`.`emp_hiredate` AS `emp_hiredate`,\n             `RHS`.`emp_dob` AS `emp_dob`\n      FROM `department` AS `LHS`\n      INNER JOIN `employee` AS `RHS` ON (`LHS`.`emp_num` = `RHS`.`emp_num`)) AS `LHS`\n   INNER JOIN `professor` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`\n                                          AND `LHS`.`emp_num` = `RHS`.`emp_num`))\nWHERE (`dept_name` = 'History'\n       AND `prof_high_degree` = 'Ph.D.')\nORDER BY emp_fname\n", "sql2": "SELECT T1.emp_fname,\n       T2.prof_office\nFROM employee AS T1\nJOIN professor AS T2 ON T1.emp_num = T2.emp_num\nJOIN department AS T3 ON T3.dept_code = T2.dept_code\nWHERE T3.dept_name = 'History'\n  AND T2.prof_high_degree = 'Ph.D.'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0069", "sql1": "\nSELECT emp_fname,\n       crs_code\nFROM\n  (SELECT LHS.class_code AS class_code,\n          LHS.crs_code AS crs_code,\n          LHS.class_section AS class_section,\n          LHS.class_time AS class_time,\n          LHS.class_room AS class_room,\n          LHS.prof_num AS prof_num,\n          RHS.emp_lname AS emp_lname,\n          RHS.emp_fname AS emp_fname,\n          RHS.emp_initial AS emp_initial,\n          RHS.emp_jobcode AS emp_jobcode,\n          RHS.emp_hiredate AS emp_hiredate,\n          RHS.emp_dob AS emp_dob\n   FROM class AS LHS\n   INNER JOIN employee AS RHS ON (LHS.prof_num = RHS.emp_num))\nORDER BY emp_fname\n", "sql2": "SELECT T2.emp_fname,\n       T1.crs_code\nFROM CLASS AS T1\nJOIN employee AS T2 ON T1.prof_num = T2.emp_num", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0028", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT class_code) OVER () AS count_distinct_class_code_\nFROM class\nORDER BY count_distinct_class_code_\n", "sql2": "SELECT count(DISTINCT class_code)\nFROM CLASS", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0004", "sql1": "\nSELECT DISTINCT `emp_fname`,\n                `emp_dob`\nFROM\n  (SELECT `class_code`,\n          `crs_code`,\n          `class_section`,\n          `class_time`,\n          `class_room`,\n          `prof_num`,\n          `emp_lname`,\n          `emp_fname`,\n          `emp_initial`,\n          `emp_jobcode`,\n          `emp_hiredate`,\n          `emp_dob`,\n          `prof_num` AS `emp_num`\n   FROM\n     (SELECT `LHS`.`class_code` AS `class_code`,\n             `LHS`.`crs_code` AS `crs_code`,\n             `LHS`.`class_section` AS `class_section`,\n             `LHS`.`class_time` AS `class_time`,\n             `LHS`.`class_room` AS `class_room`,\n             `LHS`.`prof_num` AS `prof_num`,\n             `RHS`.`emp_lname` AS `emp_lname`,\n             `RHS`.`emp_fname` AS `emp_fname`,\n             `RHS`.`emp_initial` AS `emp_initial`,\n             `RHS`.`emp_jobcode` AS `emp_jobcode`,\n             `RHS`.`emp_hiredate` AS `emp_hiredate`,\n             `RHS`.`emp_dob` AS `emp_dob`\n      FROM `class` AS `LHS`\n      INNER JOIN `employee` AS `RHS` ON (`LHS`.`prof_num` = `RHS`.`emp_num`)))\nWHERE (`crs_code` = 'ACCT-211')\nORDER BY emp_fname\n", "sql2": "SELECT DISTINCT T1.EMP_FNAME,\n                T1.EMP_DOB\nFROM employee AS T1\nJOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM\nWHERE CRS_CODE = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0012", "sql1": "\nSELECT n AS count_distinct_dept_name_,\n       school_code\nFROM\n  (SELECT school_code,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY school_code)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name),\n       school_code\nFROM department\nGROUP BY school_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0045", "sql1": "\nSELECT emp_fname,\n       prof_office\nFROM\n  (SELECT LHS.emp_num AS emp_num,\n          LHS.dept_code AS dept_code,\n          LHS.prof_office AS prof_office,\n          LHS.prof_extension AS prof_extension,\n          LHS.prof_high_degree AS prof_high_degree,\n          RHS.emp_num AS emp_num_other,\n          RHS.emp_lname AS emp_lname,\n          RHS.emp_fname AS emp_fname,\n          RHS.emp_initial AS emp_initial,\n          RHS.emp_jobcode AS emp_jobcode,\n          RHS.emp_hiredate AS emp_hiredate,\n          RHS.emp_dob AS emp_dob\n   FROM professor AS LHS\n   CROSS JOIN employee AS RHS)\nWHERE (emp_num = emp_num_other)\nORDER BY emp_fname\n", "sql2": "SELECT T2.emp_fname,\n       T1.prof_office\nFROM professor AS T1\nJOIN employee AS T2 ON T1.emp_num = T2.emp_num\nORDER BY T2.emp_fname", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0032", "sql1": "\nSELECT `n` AS `count_distinct_class_section_`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `class`\n      WHERE (`crs_code` = 'ACCT-211')))\nORDER BY count_distinct_class_section_\n", "sql2": "SELECT count(DISTINCT class_section)\nFROM CLASS\nWHERE crs_code = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0024", "sql1": "\nSELECT sumstu_hrs AS sum_stu_hrs_,\n       dept_code\nFROM\n  (SELECT dept_code,\n          SUM(stu_hrs) AS sumstu_hrs\n   FROM student\n   GROUP BY dept_code)\nORDER BY sum_stu_hrs_\n", "sql2": "SELECT sum(stu_hrs),\n       dept_code\nFROM student\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0008", "sql1": "\nSELECT `dept_address`\nFROM `department`\nWHERE (`dept_name` = 'History')\nORDER BY dept_address\n", "sql2": "SELECT dept_address\nFROM department\nWHERE dept_name = 'History'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0049", "sql1": "\nSELECT dept_name\nFROM\n  (SELECT LHS.dept_code AS dept_code,\n          LHS.dept_name AS dept_name,\n          LHS.school_code AS school_code,\n          LHS.emp_num AS emp_num,\n          LHS.dept_address AS dept_address,\n          LHS.dept_extension AS dept_extension,\n          RHS.n AS n\n   FROM department AS LHS\n   INNER JOIN\n     (SELECT prof_extension,\n             MIN(n) AS n\n      FROM\n        (SELECT emp_num,\n                dept_code,\n                prof_office,\n                prof_extension,\n                prof_high_degree,\n                COUNT(*) OVER () AS n\n         FROM professor)\n      GROUP BY prof_extension) AS RHS ON (LHS.dept_extension = RHS.prof_extension))\nORDER BY dept_name\n", "sql2": "SELECT T2.dept_name\nFROM professor AS T1\nJOIN department AS T2 ON T1.dept_code = T2.dept_code\nGROUP BY T1.dept_code\nORDER BY count(*)\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0042", "sql1": "\nSELECT dept_name\nFROM department\nORDER BY dept_name\n", "sql2": "SELECT dept_name\nFROM department\nORDER BY dept_name", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0015", "sql1": "\nSELECT sumcrs_credit AS sum_crs_credit_,\n       dept_code\nFROM\n  (SELECT dept_code,\n          SUM(crs_credit) AS sumcrs_credit\n   FROM course\n   GROUP BY dept_code)\nORDER BY sum_crs_credit_\n", "sql2": "SELECT sum(crs_credit),\n       dept_code\nFROM course\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0039", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `prof_high_degree`,\n          COUNT(*) AS `n`\n   FROM `professor`\n   GROUP BY `prof_high_degree`)\nWHERE (`prof_high_degree` = 'Ph.D.')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM professor\nWHERE prof_high_degree = 'Ph.D.'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0058", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `professor`\n      WHERE (`prof_high_degree` = 'Ph.D.'\n             OR `prof_high_degree` != 'MA')))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM professor\nWHERE prof_high_degree = 'Ph.D.'\n  OR prof_high_degree = 'MA'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0023", "sql1": "\nSELECT n AS count___,\n       dept_code\nFROM\n  (SELECT dept_code,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY dept_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_code\nFROM student\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0074", "sql1": "\nSELECT `stu_fname`,\n       `stu_lname`\nFROM\n  (SELECT `LHS`.`class_code` AS `class_code`,\n          `LHS`.`stu_num` AS `stu_num`,\n          `LHS`.`enroll_grade` AS `enroll_grade`,\n          `RHS`.`stu_lname` AS `stu_lname`,\n          `RHS`.`stu_fname` AS `stu_fname`,\n          `RHS`.`stu_init` AS `stu_init`,\n          `RHS`.`stu_dob` AS `stu_dob`,\n          `RHS`.`stu_hrs` AS `stu_hrs`,\n          `RHS`.`stu_class` AS `stu_class`,\n          `RHS`.`stu_gpa` AS `stu_gpa`,\n          `RHS`.`stu_transfer` AS `stu_transfer`,\n          `RHS`.`dept_code` AS `dept_code`,\n          `RHS`.`stu_phone` AS `stu_phone`,\n          `RHS`.`prof_num` AS `prof_num`\n   FROM `enroll` AS `LHS`\n   INNER JOIN `student` AS `RHS` ON (`LHS`.`stu_num` = `RHS`.`stu_num`))\nWHERE (`enroll_grade` = 'C'\n       OR `enroll_grade` = 'A')\nORDER BY stu_fname\n", "sql2": "SELECT T1.stu_fname,\n       T1.stu_lname\nFROM student AS T1\nJOIN enroll AS T2 ON T1.stu_num = T2.stu_num\nWHERE T2.enroll_grade = 'C'\n  OR T2.enroll_grade = 'A'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0035", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM `class`\n      WHERE (`crs_code` != 'ACCT-211')) AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM enroll AS RHS\n        WHERE (LHS.class_code = RHS.class_code) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CLASS AS T1\nJOIN enroll AS T2 ON T1.class_code = T2.class_code\nWHERE T1.crs_code = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0022", "sql1": "\nSELECT `n` AS `count___`,\n       `dept_code`\nFROM\n  (SELECT `dept_code`,\n          `prof_high_degree`,\n          COUNT(*) AS `n`\n   FROM `professor`\n   GROUP BY `dept_code`,\n            `prof_high_degree`)\nWHERE (`prof_high_degree` = 'Ph.D.')\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_code\nFROM professor\nWHERE prof_high_degree = 'Ph.D.'\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0018", "sql1": "\nSELECT DISTINCT n AS count___,\n                school_code\nFROM\n  (SELECT LHS.crs_code AS crs_code,\n          LHS.dept_code AS dept_code,\n          LHS.crs_description AS crs_description,\n          LHS.crs_credit AS crs_credit,\n          LHS.dept_name AS dept_name,\n          LHS.school_code AS school_code,\n          LHS.emp_num AS emp_num,\n          LHS.dept_address AS dept_address,\n          LHS.dept_extension AS dept_extension,\n          RHS.class_code AS class_code,\n          RHS.class_section AS class_section,\n          RHS.class_time AS class_time,\n          RHS.class_room AS class_room,\n          RHS.prof_num AS prof_num,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.crs_code AS crs_code,\n             LHS.dept_code AS dept_code,\n             LHS.crs_description AS crs_description,\n             LHS.crs_credit AS crs_credit,\n             RHS.dept_name AS dept_name,\n             RHS.school_code AS school_code,\n             RHS.emp_num AS emp_num,\n             RHS.dept_address AS dept_address,\n             RHS.dept_extension AS dept_extension\n      FROM course AS LHS\n      INNER JOIN department AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS\n   INNER JOIN\n     (SELECT class_code,\n             crs_code,\n             class_section,\n             class_time,\n             class_room,\n             prof_num,\n             COUNT(*) OVER () AS n\n      FROM class) AS RHS ON (LHS.crs_code = RHS.crs_code))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T3.school_code\nFROM CLASS AS T1\nJOIN course AS T2 ON T1.crs_code = T2.crs_code\nJOIN department AS T3 ON T2.dept_code = T3.dept_code\nGROUP BY T3.school_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0038", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM employee\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM employee", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0055", "sql1": "\nSELECT `emp_lname`,\n       `emp_hiredate`\nFROM\n  (SELECT `LHS`.`emp_num` AS `emp_num`,\n          `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`prof_office` AS `prof_office`,\n          `LHS`.`prof_extension` AS `prof_extension`,\n          `LHS`.`prof_high_degree` AS `prof_high_degree`,\n          `RHS`.`emp_lname` AS `emp_lname`,\n          `RHS`.`emp_fname` AS `emp_fname`,\n          `RHS`.`emp_initial` AS `emp_initial`,\n          `RHS`.`emp_jobcode` AS `emp_jobcode`,\n          `RHS`.`emp_hiredate` AS `emp_hiredate`,\n          `RHS`.`emp_dob` AS `emp_dob`\n   FROM\n     (SELECT *\n      FROM `professor`\n      WHERE (`prof_office` = 'DRE 102')) AS LHS\n   LEFT JOIN employee AS RHS ON (LHS.emp_num = RHS.emp_num))\nORDER BY emp_lname\n", "sql2": "SELECT T1.emp_lname,\n       T1.emp_hiredate\nFROM employee AS T1\nJOIN professor AS T2 ON T1.emp_num = T2.emp_num\nWHERE T2.prof_office = 'DRE 102'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0002", "sql1": "\nSELECT `n_distinct` AS `count_distinct_prof_num_`\nFROM\n  (SELECT COUNT(DISTINCT `prof_num`) AS `n_distinct`\n   FROM\n     (SELECT *\n      FROM `class`\n      WHERE (`crs_code` = 'ACCT-211')))\nORDER BY count_distinct_prof_num_\n", "sql2": "SELECT count(DISTINCT PROF_NUM)\nFROM CLASS\nWHERE CRS_CODE = 'ACCT-211'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0014", "sql1": "\nSELECT n AS count___,\n       crs_code\nFROM\n  (SELECT crs_code,\n          COUNT(*) AS n\n   FROM class\n   GROUP BY crs_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       crs_code\nFROM CLASS\nGROUP BY crs_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0043", "sql1": "\nSELECT `class_code`\nFROM `class`\nWHERE (`class_room` = 'KLR209')\nORDER BY class_code\n", "sql2": "SELECT class_code\nFROM CLASS\nWHERE class_room = 'KLR209'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0017", "sql1": "\nSELECT n AS count___,\n       dept_code\nFROM\n  (SELECT dept_code,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.class_code AS class_code,\n             LHS.crs_code AS crs_code,\n             LHS.class_section AS class_section,\n             LHS.class_time AS class_time,\n             LHS.class_room AS class_room,\n             LHS.prof_num AS prof_num,\n             RHS.dept_code AS dept_code,\n             RHS.crs_description AS crs_description,\n             RHS.crs_credit AS crs_credit\n      FROM class AS LHS\n      INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code))\n   GROUP BY dept_code)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       dept_code\nFROM CLASS AS T1\nJOIN course AS T2 ON T1.crs_code = T2.crs_code\nGROUP BY dept_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0040", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `dept_address`,\n          `emp_num`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`class_code` AS `class_code`,\n                `LHS`.`crs_code` AS `crs_code`,\n                `LHS`.`class_section` AS `class_section`,\n                `LHS`.`class_time` AS `class_time`,\n                `LHS`.`class_room` AS `class_room`,\n                `LHS`.`prof_num` AS `prof_num`,\n                `LHS`.`dept_code` AS `dept_code`,\n                `LHS`.`crs_description` AS `crs_description`,\n                `LHS`.`crs_credit` AS `crs_credit`,\n                `LHS`.`dept_name` AS `dept_name`,\n                `LHS`.`school_code` AS `school_code`,\n                `LHS`.`emp_num` AS `emp_num`,\n                `LHS`.`dept_address` AS `dept_address`,\n                `LHS`.`dept_extension` AS `dept_extension`,\n                `RHS`.`stu_num` AS `stu_num`,\n                `RHS`.`enroll_grade` AS `enroll_grade`\n         FROM\n           (SELECT `LHS`.`class_code` AS `class_code`,\n                   `LHS`.`crs_code` AS `crs_code`,\n                   `LHS`.`class_section` AS `class_section`,\n                   `LHS`.`class_time` AS `class_time`,\n                   `LHS`.`class_room` AS `class_room`,\n                   `LHS`.`prof_num` AS `prof_num`,\n                   `LHS`.`dept_code` AS `dept_code`,\n                   `LHS`.`crs_description` AS `crs_description`,\n                   `LHS`.`crs_credit` AS `crs_credit`,\n                   `RHS`.`dept_name` AS `dept_name`,\n                   `RHS`.`school_code` AS `school_code`,\n                   `RHS`.`emp_num` AS `emp_num`,\n                   `RHS`.`dept_address` AS `dept_address`,\n                   `RHS`.`dept_extension` AS `dept_extension`\n            FROM\n              (SELECT `LHS`.`class_code` AS `class_code`,\n                      `LHS`.`crs_code` AS `crs_code`,\n                      `LHS`.`class_section` AS `class_section`,\n                      `LHS`.`class_time` AS `class_time`,\n                      `LHS`.`class_room` AS `class_room`,\n                      `LHS`.`prof_num` AS `prof_num`,\n                      `RHS`.`dept_code` AS `dept_code`,\n                      `RHS`.`crs_description` AS `crs_description`,\n                      `RHS`.`crs_credit` AS `crs_credit`\n               FROM `class` AS `LHS`\n               INNER JOIN `course` AS `RHS` ON (`LHS`.`crs_code` = `RHS`.`crs_code`)) AS `LHS`\n            INNER JOIN `department` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`)) AS `LHS`\n         INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`))\n      WHERE (`dept_name` = 'Accounting'))\n   GROUP BY dept_address,\n            emp_num)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM CLASS AS T1\nJOIN enroll AS T2 ON T1.class_code = T2.class_code\nJOIN course AS T3 ON T1.crs_code = T3.crs_code\nJOIN department AS T4 ON T3.dept_code = T4.dept_code\nWHERE T4.dept_name = 'Accounting'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0060", "sql1": "\nSELECT DISTINCT `emp_fname`\nFROM\n  (SELECT `class_code`,\n          `crs_code`,\n          `class_section`,\n          `class_time`,\n          `class_room`,\n          `prof_num`,\n          `emp_lname`,\n          `emp_fname`,\n          `emp_initial`,\n          `emp_jobcode`,\n          `emp_hiredate`,\n          `emp_dob`,\n          `prof_num` AS `emp_num`\n   FROM\n     (SELECT `LHS`.`class_code` AS `class_code`,\n             `LHS`.`crs_code` AS `crs_code`,\n             `LHS`.`class_section` AS `class_section`,\n             `LHS`.`class_time` AS `class_time`,\n             `LHS`.`class_room` AS `class_room`,\n             `LHS`.`prof_num` AS `prof_num`,\n             `RHS`.`emp_lname` AS `emp_lname`,\n             `RHS`.`emp_fname` AS `emp_fname`,\n             `RHS`.`emp_initial` AS `emp_initial`,\n             `RHS`.`emp_jobcode` AS `emp_jobcode`,\n             `RHS`.`emp_hiredate` AS `emp_hiredate`,\n             `RHS`.`emp_dob` AS `emp_dob`\n      FROM `class` AS `LHS`\n      INNER JOIN `employee` AS `RHS` ON (`LHS`.`prof_num` = `RHS`.`emp_num`)))\nWHERE (`crs_code` != 'CIS-220'\n       AND `crs_code` = 'QM-261')\nORDER BY emp_fname\n", "sql2": "SELECT T1.emp_fname\nFROM employee AS T1\nJOIN CLASS AS T2 ON T1.emp_num = T2.prof_num\nWHERE crs_code = 'CIS-220' INTERSECT\n  SELECT T1.emp_fname\n  FROM employee AS T1\n  JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0020", "sql1": "\nSELECT emp_jobcode,\n       n AS count___\nFROM\n  (SELECT LHS.emp_hiredate AS emp_hiredate,\n          LHS.emp_jobcode AS emp_jobcode,\n          LHS.n AS n,\n          LHS.maxn AS maxn,\n          RHS.emp_hiredate AS emp_hiredate_other,\n          RHS.emp_jobcode AS emp_jobcode_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT emp_hiredate,\n             emp_jobcode,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT emp_hiredate,\n                emp_jobcode,\n                COUNT(*) AS n\n         FROM employee\n         GROUP BY emp_hiredate,\n                  emp_jobcode)) AS LHS\n   CROSS JOIN\n     (SELECT emp_hiredate,\n             emp_jobcode,\n             COUNT(*) AS n\n      FROM employee\n      GROUP BY emp_hiredate,\n               emp_jobcode) AS RHS)\nWHERE (n = maxn\n       AND maxn = n_other)\nORDER BY emp_jobcode\n", "sql2": "SELECT emp_jobcode,\n       count(*)\nFROM employee\nGROUP BY emp_jobcode\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0077", "sql1": "\nSELECT DISTINCT `stu_lname`\nFROM\n  (SELECT `LHS`.`stu_num` AS `stu_num`,\n          `LHS`.`stu_lname` AS `stu_lname`,\n          `LHS`.`stu_fname` AS `stu_fname`,\n          `LHS`.`stu_init` AS `stu_init`,\n          `LHS`.`stu_dob` AS `stu_dob`,\n          `LHS`.`stu_hrs` AS `stu_hrs`,\n          `LHS`.`stu_class` AS `stu_class`,\n          `LHS`.`stu_gpa` AS `stu_gpa`,\n          `LHS`.`stu_transfer` AS `stu_transfer`,\n          `LHS`.`dept_code` AS `dept_code`,\n          `LHS`.`stu_phone` AS `stu_phone`,\n          `LHS`.`prof_num` AS `prof_num`,\n          `RHS`.`class_code` AS `class_code`\n   FROM `student` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `enroll`\n      WHERE (`enroll_grade` = 'A'\n             OR class_code != 10018)) AS RHS ON (LHS.stu_num = RHS.stu_num\n                                                 AND LHS.stu_init = RHS.enroll_grade))\nORDER BY stu_lname\n", "sql2": "SELECT T1.stu_lname\nFROM student AS T1\nJOIN enroll AS T2 ON T1.stu_num = T2.stu_num\nWHERE T2.enroll_grade = 'A'\n  AND T2.class_code = 10018", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0016", "sql1": "\nSELECT n AS count___,\n       class_room\nFROM\n  (SELECT class_room,\n          COUNT(*) AS n\n   FROM class\n   GROUP BY class_room)\nWHERE (n >= 2)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       class_room\nFROM CLASS\nGROUP BY class_room\nHAVING count(*) >= 2", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0031", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT *\n   FROM `course` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `department`\n           WHERE (`dept_name` != 'Computer Info. Systems')) AS RHS\n        WHERE (LHS.dept_code = RHS.dept_code) ))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM department AS T1\nJOIN course AS T2 ON T1.dept_code = T2.dept_code\nWHERE dept_name = 'Computer Info. Systems'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0066", "sql1": "\nSELECT dept_name,\n       dept_address\nFROM\n  (SELECT dept_address,\n          dept_name,\n          MAX(n) AS maxn\n   FROM\n     (SELECT dept_address,\n             dept_name,\n             COUNT(*) AS n\n      FROM\n        (SELECT stu_num,\n                stu_lname,\n                stu_fname,\n                stu_init,\n                stu_dob,\n                stu_hrs,\n                stu_class,\n                stu_gpa,\n                stu_transfer,\n                dept_code,\n                stu_phone,\n                prof_num,\n                dept_name,\n                school_code,\n                dept_address,\n                dept_extension,\n                stu_hrs AS emp_num\n         FROM\n           (SELECT LHS.stu_num AS stu_num,\n                   LHS.stu_lname AS stu_lname,\n                   LHS.stu_fname AS stu_fname,\n                   LHS.stu_init AS stu_init,\n                   LHS.stu_dob AS stu_dob,\n                   LHS.stu_hrs AS stu_hrs,\n                   LHS.stu_class AS stu_class,\n                   LHS.stu_gpa AS stu_gpa,\n                   LHS.stu_transfer AS stu_transfer,\n                   LHS.dept_code AS dept_code,\n                   LHS.stu_phone AS stu_phone,\n                   LHS.prof_num AS prof_num,\n                   RHS.dept_name AS dept_name,\n                   RHS.school_code AS school_code,\n                   RHS.dept_address AS dept_address,\n                   RHS.dept_extension AS dept_extension\n            FROM student AS LHS\n            INNER JOIN department AS RHS ON (LHS.stu_hrs = RHS.emp_num\n                                                AND LHS.dept_code = RHS.dept_code)))\n      GROUP BY dept_address,\n               dept_name)\n   GROUP BY dept_address,\n            dept_name)\nORDER BY dept_name\n", "sql2": "SELECT T2.dept_name,\n       T2.dept_address\nFROM student AS T1\nJOIN department AS T2 ON T1.dept_code = T2.dept_code\nGROUP BY T1.dept_code\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0027", "sql1": "\nSELECT n_distinct AS count_distinct_school_code_\nFROM\n  (SELECT COUNT(DISTINCT school_code) AS n_distinct\n   FROM department)\nORDER BY count_distinct_school_code_\n", "sql2": "SELECT count(DISTINCT school_code)\nFROM department", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0007", "sql1": "\nSELECT `crs_credit`,\n       `crs_description`\nFROM `course`\nWHERE (`crs_code` = 'CIS-220')\nORDER BY crs_credit\n", "sql2": "SELECT crs_credit,\n       crs_description\nFROM course\nWHERE crs_code = 'CIS-220'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0011", "sql1": "\nSELECT `crs_credit`,\n       `crs_description`\nFROM `course`\nWHERE (`crs_code` = 'QM-261')\nORDER BY crs_credit\n", "sql2": "SELECT crs_credit,\n       crs_description\nFROM course\nWHERE crs_code = 'QM-261'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0010", "sql1": "\nSELECT n AS count_distinct_dept_address_,\n       school_code\nFROM\n  (SELECT school_code,\n          COUNT(*) AS n\n   FROM department\n   GROUP BY school_code)\nORDER BY count_distinct_dept_address_\n", "sql2": "SELECT count(DISTINCT dept_address),\n       school_code\nFROM department\nGROUP BY school_code", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0006", "sql1": "\nSELECT `school_code`\nFROM `department`\nWHERE (`dept_name` = 'Accounting')\nORDER BY school_code\n", "sql2": "SELECT school_code\nFROM department\nWHERE dept_name = 'Accounting'", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/college_1/0030", "sql1": "\nSELECT n AS count_distinct_dept_name_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM department)\nORDER BY count_distinct_dept_name_\n", "sql2": "SELECT count(DISTINCT dept_name)\nFROM department", "schema": "spider/college_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0009", "sql1": "\nSELECT master_customer_id,\n       cmi_details\nFROM customer_master_index\nORDER BY master_customer_id\n", "sql2": "SELECT *\nFROM customer_master_index\nORDER BY cmi_details DESC", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0013", "sql1": "\nSELECT cmi_cross_ref_id\nFROM\n  (SELECT *\n   FROM cmi_cross_references AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM parking_fines AS RHS\n        WHERE (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id) ))\nORDER BY cmi_cross_ref_id\n", "sql2": "SELECT cmi_cross_ref_id\nFROM cmi_cross_references\nEXCEPT\nSELECT cmi_cross_ref_id\nFROM parking_fines", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0005", "sql1": "\nSELECT source_system_code,\n       master_customer_id,\n       council_tax_id\nFROM\n  (SELECT LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          LHS.master_customer_id AS master_customer_id,\n          LHS.source_system_code AS source_system_code,\n          RHS.council_tax_id AS council_tax_id\n   FROM cmi_cross_references AS LHS\n   INNER JOIN parking_fines AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY source_system_code\n", "sql2": "SELECT T1.source_system_code,\n       T1.master_customer_id,\n       T2.council_tax_id\nFROM CMI_Cross_References AS T1\nJOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0004", "sql1": "\nSELECT source_system_code,\n       council_tax_id\nFROM\n  (SELECT LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          LHS.master_customer_id AS master_customer_id,\n          LHS.source_system_code AS source_system_code,\n          RHS.council_tax_id AS council_tax_id\n   FROM cmi_cross_references AS LHS\n   INNER JOIN benefits_overpayments AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY source_system_code\n", "sql2": "SELECT T1.source_system_code,\n       T2.council_tax_id\nFROM CMI_Cross_References AS T1\nJOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nORDER BY T2.council_tax_id", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0008", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT source_system_code) OVER () AS count_distinct_source_system_code_\nFROM cmi_cross_references\nORDER BY count_distinct_source_system_code_\n", "sql2": "SELECT count(DISTINCT source_system_code)\nFROM CMI_cross_references", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0003", "sql1": "\nSELECT cmi_cross_ref_id,\n       master_customer_id,\n       n AS count___\nFROM\n  (SELECT cmi_cross_ref_id,\n          master_customer_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.business_rates_id AS business_rates_id,\n             LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n             RHS.master_customer_id AS master_customer_id,\n             RHS.source_system_code AS source_system_code\n      FROM business_rates AS LHS\n      INNER JOIN cmi_cross_references AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\n   GROUP BY cmi_cross_ref_id,\n            master_customer_id)\nORDER BY cmi_cross_ref_id\n", "sql2": "SELECT T2.cmi_cross_ref_id,\n       T2.master_customer_id,\n       count(*)\nFROM Business_Rates AS T1\nJOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nGROUP BY T2.cmi_cross_ref_id", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0002", "sql1": "\nSELECT cmi_cross_ref_id,\n       source_system_code\nFROM\n  (SELECT LHS.council_tax_id AS council_tax_id,\n          LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          RHS.master_customer_id AS master_customer_id,\n          RHS.source_system_code AS source_system_code,\n          RHS.n AS n\n   FROM council_tax AS LHS\n   LEFT JOIN\n     (SELECT cmi_cross_ref_id,\n             master_customer_id,\n             source_system_code,\n             COUNT(*) OVER () AS n\n      FROM cmi_cross_references) AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nWHERE (n >= 1)\nORDER BY cmi_cross_ref_id\n", "sql2": "SELECT T1.cmi_cross_ref_id,\n       T1.source_system_code\nFROM CMI_Cross_References AS T1\nJOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nGROUP BY T1.cmi_cross_ref_id\nHAVING count(*) >= 1", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0001", "sql1": "\nSELECT `cmi_details`\nFROM\n  (SELECT `LHS`.`master_customer_id` AS `master_customer_id`,\n          `LHS`.`cmi_details` AS `cmi_details`,\n          `RHS`.`cmi_cross_ref_id` AS `cmi_cross_ref_id`,\n          `RHS`.`source_system_code` AS `source_system_code`\n   FROM `customer_master_index` AS `LHS`\n   INNER JOIN `cmi_cross_references` AS `RHS` ON (`LHS`.`master_customer_id` = `RHS`.`master_customer_id`))\nWHERE (`source_system_code` = 'Tax')\nORDER BY cmi_details\n", "sql2": "SELECT T1.cmi_details\nFROM Customer_Master_Index AS T1\nJOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id\nWHERE T2.source_system_code = 'Tax'", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0007", "sql1": "\nSELECT `electoral_register_id`\nFROM\n  (SELECT `LHS`.`electoral_register_id` AS `electoral_register_id`,\n          `LHS`.`cmi_cross_ref_id` AS `cmi_cross_ref_id`,\n          `RHS`.`master_customer_id` AS `master_customer_id`,\n          `RHS`.`source_system_code` AS `source_system_code`\n   FROM `electoral_register` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `cmi_cross_references`\n      WHERE (`source_system_code` = 'Electoral'\n             AND `source_system_code` != 'Tax')) AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY electoral_register_id\n", "sql2": "SELECT T1.electoral_register_id\nFROM Electoral_Register AS T1\nJOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nWHERE T2.source_system_code = 'Electoral'\n  OR T2.source_system_code = 'Tax'", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0011", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM rent_arrears\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM rent_arrears", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0010", "sql1": "\nSELECT council_tax_id,\n       cmi_cross_ref_id\nFROM parking_fines\nORDER BY council_tax_id\n", "sql2": "SELECT council_tax_id,\n       cmi_cross_ref_id\nFROM parking_fines", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/local_govt_mdm/0006", "sql1": "\nSELECT council_tax_id\nFROM\n  (SELECT LHS.master_customer_id AS master_customer_id,\n          LHS.cmi_details AS cmi_details,\n          LHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n          LHS.source_system_code AS source_system_code,\n          RHS.council_tax_id AS council_tax_id\n   FROM\n     (SELECT LHS.master_customer_id AS master_customer_id,\n             LHS.cmi_details AS cmi_details,\n             RHS.cmi_cross_ref_id AS cmi_cross_ref_id,\n             RHS.source_system_code AS source_system_code\n      FROM customer_master_index AS LHS\n      INNER JOIN cmi_cross_references AS RHS ON (LHS.master_customer_id = RHS.master_customer_id)) AS LHS\n   INNER JOIN rent_arrears AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))\nORDER BY council_tax_id\n", "sql2": "SELECT T1.council_tax_id\nFROM Rent_Arrears AS T1\nJOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id\nJOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id\nWHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'", "schema": "spider/local_govt_mdm/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/local_govt_mdm/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0009", "sql1": "\nSELECT stories\nFROM\n  (SELECT LHS.id AS id,\n          LHS.name AS name,\n          LHS.city AS city,\n          LHS.height AS height,\n          LHS.stories AS stories,\n          LHS.status AS status,\n          LHS.maxheight AS maxheight,\n          RHS.id AS id_other,\n          RHS.name AS name_other,\n          RHS.city AS city_other,\n          RHS.status AS status_other,\n          RHS.maxheight AS maxheight_other\n   FROM\n     (SELECT id,\n             name,\n             city,\n             height,\n             stories,\n             status,\n             MAX(height) OVER () AS maxheight\n      FROM buildings) AS LHS\n   INNER JOIN\n     (SELECT id,\n             name,\n             city,\n             height,\n             stories,\n             status,\n             MAX(height) OVER () AS maxheight\n      FROM buildings) AS RHS ON (LHS.stories = RHS.stories\n                                    AND LHS.maxheight = RHS.height))\nORDER BY stories\n", "sql2": "SELECT Stories\nFROM buildings\nORDER BY Height DESC\nLIMIT 1", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0013", "sql1": "\nSELECT `name`\nFROM `buildings`\nWHERE (`status` = 'on-hold')\nORDER BY name\n", "sql2": "SELECT name\nFROM buildings\nWHERE Status = 'on-hold'\nORDER BY Stories ASC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0005", "sql1": "\nSELECT meanprofits_billion AS avg_profits_billion_\nFROM\n  (SELECT AVG(profits_billion) AS meanprofits_billion\n   FROM companies)\nORDER BY avg_profits_billion_\n", "sql2": "SELECT avg(Profits_billion)\nFROM Companies", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0004", "sql1": "\nSELECT name,\n       assets_billion\nFROM companies\nORDER BY name\n", "sql2": "SELECT name,\n       Assets_billion\nFROM Companies\nORDER BY name ASC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0008", "sql1": "\nSELECT name\nFROM buildings\nORDER BY name\n", "sql2": "SELECT name\nFROM buildings\nORDER BY Height DESC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0015", "sql1": "\nSELECT DISTINCT industry\nFROM companies\nORDER BY industry\n", "sql2": "SELECT Industry\nFROM Companies\nGROUP BY Industry\nORDER BY COUNT(*) DESC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0003", "sql1": "\nSELECT `name`\nFROM `companies`\nWHERE (`headquarters` != 'USA')\nORDER BY name\n", "sql2": "SELECT name\nFROM Companies\nWHERE Headquarters != 'USA'", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0019", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `companies`\nWHERE (`industry` = 'Banking'\n       OR `industry` = 'Conglomerate')\nORDER BY count___\nFrom cffi callback <function _processevents at 0x7fa63cf99790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\ncompanies <- read_csv(\"tests-examples/spider/company_office/tables/companies.csv\", skip=1, col_names=c('id','name','headquarters','industry','sales_billion','profits_billion','assets_billion','market_value_billion'), col_types=cols(col_integer(),col_character(),col_character(),col_character(),col_double(),col_double(),col_double(),col_character()))\ncompanies <- copy_to(con, companies)\nexpected_output <- read_csv(\"tests-examples/spider/company_office/tables/0019.csv\", skip=1, col_names=c('count___'), col_types=cols(col_integer()))\n\ndf1 <- companies %>% filter(industry == 'Banking' | industry == 'Conglomerate')\ndf2 <- df1 %>% mutate(n = n())\nout <- df2 %>% select(count___ = n) %>% distinct() %>% arrange(count___)\n\n\n+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++\n\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `companies`\nWHERE (`industry` = 'Banking'\n       OR `industry` = 'Conglomerate')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Companies\nWHERE Industry = 'Banking'\n  OR Industry = 'Conglomerate'", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0018", "sql1": "\nSELECT DISTINCT `industry`\nFROM `companies`\nWHERE (`headquarters` != 'USA'\n       OR `headquarters` = 'China')\nORDER BY industry\n", "sql2": "SELECT Industry\nFROM Companies\nWHERE Headquarters = 'USA' INTERSECT\n  SELECT Industry\n  FROM Companies WHERE Headquarters = 'China'", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0002", "sql1": "\nSELECT name\nFROM companies\nORDER BY name\n", "sql2": "SELECT name\nFROM Companies\nORDER BY Market_Value_billion DESC", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0014", "sql1": "\nSELECT industry,\n       n AS count___\nFROM\n  (SELECT industry,\n          COUNT(*) AS n\n   FROM companies\n   GROUP BY industry)\nORDER BY industry\n", "sql2": "SELECT Industry,\n       COUNT(*)\nFROM Companies\nGROUP BY Industry", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM companies\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Companies", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0020", "sql1": "\nSELECT DISTINCT headquarters\nFROM\n  (SELECT LHS.headquarters AS headquarters,\n          LHS.industry AS industry,\n          LHS.n AS n,\n          RHS.headquarters AS headquarters_other,\n          RHS.industry AS industry_other,\n          RHS.n AS n_other\n   FROM\n     (SELECT headquarters,\n             industry,\n             COUNT(*) AS n\n      FROM companies\n      GROUP BY headquarters,\n               industry) AS LHS\n   CROSS JOIN\n     (SELECT headquarters,\n             industry,\n             COUNT(*) AS n\n      FROM companies\n      GROUP BY headquarters,\n               industry) AS RHS)\nWHERE (n > n_other)\nORDER BY headquarters\n", "sql2": "SELECT Headquarters\nFROM Companies\nGROUP BY Headquarters\nHAVING COUNT(*) > 2", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/company_office/0007", "sql1": "\nSELECT n_distinct AS count_distinct_industry_\nFROM\n  (SELECT COUNT(DISTINCT industry) AS n_distinct\n   FROM companies)\nORDER BY count_distinct_industry_\n", "sql2": "SELECT count(DISTINCT Industry)\nFROM Companies", "schema": "spider/company_office/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0048", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`dormid` AS `dormid`,\n          `LHS`.`amenid` AS `amenid`,\n          `LHS`.`room_number` AS `room_number`,\n          `RHS`.`amenity_name` AS `amenity_name`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`dormid` AS `dormid`,\n             `LHS`.`amenid` AS `amenid`,\n             `RHS`.`room_number` AS `room_number`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`dormid` AS `dormid`,\n                `RHS`.`amenid` AS `amenid`\n         FROM `student` AS `LHS`\n         CROSS JOIN `has_amenity` AS `RHS`) AS `LHS`\n      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                            AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm_amenity`\n      WHERE (`amenity_name` = 'TV Lounge')) AS RHS ON (LHS.amenid = RHS.amenid))\nORDER BY fname\n", "sql2": "SELECT T1.fname,\n       T1.lname\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nWHERE T2.dormid IN\n    (SELECT T3.dormid\n     FROM has_amenity AS T3\n     JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid\n     WHERE T4.amenity_name = 'TV Lounge')", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM student\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0025", "sql1": "\nSELECT `fname`,\n       `lname`\nFROM `student`\nWHERE (`city_code` != 'HKG')\nORDER BY fname\n", "sql2": "SELECT fname,\n       lname\nFROM student\nWHERE city_code != 'HKG'\nORDER BY age", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0044", "sql1": "\nSELECT DISTINCT amenity_name\nFROM\n  (SELECT LHS.amenid AS amenid,\n          LHS.amenity_name AS amenity_name,\n          LHS.dormid AS dormid,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.amenid AS amenid,\n             LHS.amenity_name AS amenity_name,\n             LHS.dormid AS dormid,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.amenid AS amenid,\n                LHS.amenity_name AS amenity_name,\n                RHS.dormid AS dormid\n         FROM dorm_amenity AS LHS\n         INNER JOIN has_amenity AS RHS ON (LHS.amenid = RHS.amenid)) AS LHS\n      INNER JOIN\n        (SELECT amenid,\n                COUNT(*) AS n\n         FROM has_amenity\n         GROUP BY amenid) AS RHS ON (LHS.amenid = RHS.amenid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT amenid,\n                COUNT(*) AS n\n         FROM has_amenity\n         GROUP BY amenid)) AS RHS ON (LHS.n = RHS.n))\nORDER BY amenity_name\n", "sql2": "SELECT T1.amenity_name\nFROM dorm_amenity AS T1\nJOIN has_amenity AS T2 ON T1.amenid = T2.amenid\nGROUP BY T2.amenid\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0005", "sql1": "\nSELECT `fname`\nFROM\n  (SELECT *\n   FROM `student`\n   WHERE (`age` >= 20\n          OR `age` >= 25))\nWHERE (`city_code` = 'PHL'\n       AND age < 25)\nORDER BY fname\n", "sql2": "SELECT fname\nFROM student\nWHERE city_code = 'PHL'\n  AND age BETWEEN 20 AND 25", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0029", "sql1": "\nSELECT n AS count___,\n       major\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       major\nFROM student\nGROUP BY major", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0004", "sql1": "\nSELECT fname\nFROM student\nWHERE (age > 20)\nORDER BY fname\n", "sql2": "SELECT fname\nFROM student\nWHERE age > 20", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0012", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT dormid) OVER () AS count_distinct_dormid_\nFROM has_amenity\nORDER BY count_distinct_dormid_\n", "sql2": "SELECT count(DISTINCT dormid)\nFROM has_amenity", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0032", "sql1": "\nSELECT n AS count___,\n       city_code\nFROM\n  (SELECT city_code,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY city_code)\nWHERE (n > 1)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       city_code\nFROM student\nGROUP BY city_code\nHAVING count(*) > 1", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0024", "sql1": "\nSELECT fname,\n       lname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT stuid,\n                lname,\n                fname,\n                age,\n                sex,\n                major,\n                advisor,\n                city_code,\n                AVG(age) OVER () AS meanage\n         FROM student)\n      ORDER BY age)\n   LIMIT 19)\n", "sql2": "SELECT fname,\n       lname\nFROM student\nWHERE age <\n    (SELECT avg(age)\n     FROM student)", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0008", "sql1": "\nSELECT DISTINCT SUM(student_capacity) OVER () AS sum_student_capacity_\nFROM dorm\nORDER BY sum_student_capacity_\n", "sql2": "SELECT sum(student_capacity)\nFROM dorm", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0042", "sql1": "\nSELECT `amenity_name`\nFROM\n  (SELECT `LHS`.`amenid` AS `amenid`,\n          `LHS`.`amenity_name` AS `amenity_name`,\n          `LHS`.`dormid` AS `dormid`,\n          `RHS`.`dorm_name` AS `dorm_name`,\n          `RHS`.`student_capacity` AS `student_capacity`,\n          `RHS`.`gender` AS `gender`\n   FROM\n     (SELECT `LHS`.`amenid` AS `amenid`,\n             `LHS`.`amenity_name` AS `amenity_name`,\n             `RHS`.`dormid` AS `dormid`\n      FROM `dorm_amenity` AS `LHS`\n      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm`\n      WHERE (`dorm_name` = 'Smith Hall')) AS RHS ON (LHS.dormid = RHS.dormid))\nORDER BY amenity_name\n", "sql2": "SELECT T3.amenity_name\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nWHERE T1.dorm_name = 'Smith Hall'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0003", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `stuid`,\n          `lname`,\n          `fname`,\n          `age`,\n          `sex`,\n          `major`,\n          `advisor`,\n          `city_code`,\n          COUNT(DISTINCT `age`) OVER () AS `n_distinct`\n   FROM `student`)\nWHERE (`sex` != 'F'\n       OR age <= 25)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student\nWHERE sex = 'F'\n  AND age < 25", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0035", "sql1": "\nSELECT meanage AS avg_t1_age_,\n       dorm_name\nFROM\n  (SELECT dorm_name,\n          gender,\n          AVG(age) AS meanage\n   FROM\n     (SELECT LHS.stuid AS stuid,\n             LHS.lname AS lname,\n             LHS.fname AS fname,\n             LHS.age AS age,\n             LHS.sex AS sex,\n             LHS.major AS major,\n             LHS.advisor AS advisor,\n             LHS.city_code AS city_code,\n             LHS.dormid AS dormid,\n             LHS.dorm_name AS dorm_name,\n             LHS.student_capacity AS student_capacity,\n             LHS.gender AS gender,\n             RHS.room_number AS room_number\n      FROM\n        (SELECT LHS.stuid AS stuid,\n                LHS.lname AS lname,\n                LHS.fname AS fname,\n                LHS.age AS age,\n                LHS.sex AS sex,\n                LHS.major AS major,\n                LHS.advisor AS advisor,\n                LHS.city_code AS city_code,\n                RHS.dormid AS dormid,\n                RHS.dorm_name AS dorm_name,\n                RHS.student_capacity AS student_capacity,\n                RHS.gender AS gender\n         FROM student AS LHS\n         CROSS JOIN dorm AS RHS) AS LHS\n      INNER JOIN lives_in AS RHS ON (LHS.stuid = RHS.stuid\n                                        AND LHS.dormid = RHS.dormid))\n   GROUP BY dorm_name,\n            gender)\nORDER BY avg_t1_age_\n", "sql2": "SELECT avg(T1.age),\n       T3.dorm_name\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nJOIN dorm AS T3 ON T3.dormid = T2.dormid\nGROUP BY T3.dorm_name", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0022", "sql1": "\nSELECT amenity_name\nFROM dorm_amenity\nORDER BY amenity_name\n", "sql2": "SELECT amenity_name\nFROM dorm_amenity\nORDER BY amenity_name", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0038", "sql1": "\nSELECT `fname`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`dormid` AS `dormid`,\n          `LHS`.`dorm_name` AS `dorm_name`,\n          `LHS`.`student_capacity` AS `student_capacity`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`room_number` AS `room_number`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`dormid` AS `dormid`,\n             `LHS`.`dorm_name` AS `dorm_name`,\n             `LHS`.`student_capacity` AS `student_capacity`,\n             `LHS`.`gender` AS `gender`,\n             `RHS`.`room_number` AS `room_number`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`dormid` AS `dormid`,\n                `RHS`.`dorm_name` AS `dorm_name`,\n                `RHS`.`student_capacity` AS `student_capacity`,\n                `RHS`.`gender` AS `gender`\n         FROM `student` AS `LHS`\n         CROSS JOIN `dorm` AS `RHS`) AS `LHS`\n      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                            AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm`\n      WHERE (`dorm_name` = 'Smith Hall')) AS RHS ON (LHS.dormid = RHS.dormid\n                                                     AND LHS.dorm_name = RHS.dorm_name\n                                                     AND LHS.student_capacity = RHS.student_capacity\n                                                     AND LHS.gender = RHS.gender))\nORDER BY fname\n", "sql2": "SELECT T1.fname\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nJOIN dorm AS T3 ON T3.dormid = T2.dormid\nWHERE T3.dorm_name = 'Smith Hall'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0002", "sql1": "\nSELECT dorm_name\nFROM dorm\nWHERE (student_capacity >= 300)\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name\nFROM dorm\nWHERE student_capacity > 300", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0014", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT gender) OVER () AS count_distinct_gender_\nFROM dorm\nORDER BY count_distinct_gender_\n", "sql2": "SELECT count(DISTINCT gender)\nFROM dorm", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0043", "sql1": "\nSELECT `amenity_name`\nFROM\n  (SELECT `LHS`.`dormid` AS `dormid`,\n          `LHS`.`dorm_name` AS `dorm_name`,\n          `LHS`.`student_capacity` AS `student_capacity`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`amenid` AS `amenid`,\n          `LHS`.`amenity_name` AS `amenity_name`\n   FROM\n     (SELECT `LHS`.`dormid` AS `dormid`,\n             `LHS`.`dorm_name` AS `dorm_name`,\n             `LHS`.`student_capacity` AS `student_capacity`,\n             `LHS`.`gender` AS `gender`,\n             `LHS`.`amenid` AS `amenid`,\n             `LHS`.`amenity_name` AS `amenity_name`\n      FROM\n        (SELECT `LHS`.`dormid` AS `dormid`,\n                `LHS`.`dorm_name` AS `dorm_name`,\n                `LHS`.`student_capacity` AS `student_capacity`,\n                `LHS`.`gender` AS `gender`,\n                `RHS`.`amenid` AS `amenid`,\n                `RHS`.`amenity_name` AS `amenity_name`\n         FROM `dorm` AS `LHS`\n         CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`\n      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`dormid` = `RHS`.`dormid`\n                                               AND `LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm`\n      WHERE (`dorm_name` = 'Smith Hall')) AS RHS ON (LHS.dormid = RHS.dormid\n                                                     AND LHS.dorm_name = RHS.dorm_name\n                                                     AND LHS.student_capacity = RHS.student_capacity\n                                                     AND LHS.gender = RHS.gender))\nORDER BY amenity_name\n", "sql2": "SELECT T3.amenity_name\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nWHERE T1.dorm_name = 'Smith Hall'\nORDER BY T3.amenity_name", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0001", "sql1": "\nSELECT `dorm_name`\nFROM `dorm`\nWHERE (`gender` = 'F')\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name\nFROM dorm\nWHERE gender = 'F'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0040", "sql1": "\nSELECT DISTINCT `n_distinct` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`dormid` AS `dormid`,\n          `LHS`.`room_number` AS `room_number`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`student_capacity` AS `student_capacity`,\n          `LHS`.`n_distinct` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`dormid` AS `dormid`,\n             `LHS`.`room_number` AS `room_number`,\n             `RHS`.`gender` AS `gender`,\n             `RHS`.`student_capacity` AS `student_capacity`,\n             `RHS`.`n_distinct` AS `n_distinct`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`dormid` AS `dormid`,\n                `RHS`.`room_number` AS `room_number`\n         FROM `student` AS `LHS`\n         INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      CROSS JOIN\n        (SELECT `gender`,\n                `student_capacity`,\n                COUNT(DISTINCT `gender`) AS `n_distinct`\n         FROM `dorm`\n         GROUP BY `gender`,\n                  `student_capacity`) AS `RHS`) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT `gender`,\n                `student_capacity`,\n                COUNT(DISTINCT `gender`) AS `n_distinct`\n         FROM `dorm`\n         GROUP BY `gender`,\n                  `student_capacity`)\n      WHERE (`gender` != 'M')) AS RHS ON (LHS.gender = RHS.gender\n                                          AND LHS.student_capacity = RHS.student_capacity\n                                          AND LHS.n_distinct = RHS.n_distinct))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM student AS T1\nJOIN lives_in AS T2 ON T1.stuid = T2.stuid\nJOIN dorm AS T3 ON T3.dormid = T2.dormid\nWHERE T3.gender = 'M'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0021", "sql1": "\nSELECT dorm_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT dormid,\n                dorm_name,\n                MAX(student_capacity) OVER () AS student_capacity,\n                                           gender\n         FROM dorm)\n      ORDER BY dormid DESC)\n   LIMIT 1)\n", "sql2": "SELECT dorm_name\nFROM dorm\nORDER BY student_capacity DESC\nLIMIT 1", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0020", "sql1": "\nSELECT DISTINCT `lname`\nFROM\n  (SELECT *\n   FROM `student`\n   WHERE (`sex` != 'F'\n          OR `city_code` = 'BAL'))\nWHERE (`sex` != 'M'\n       OR age < 20)\nORDER BY lname\n", "sql2": "SELECT lname\nFROM student\nWHERE sex = 'F'\n  AND city_code = 'BAL'\nUNION\nSELECT lname\nFROM student\nWHERE sex = 'M'\n  AND age < 20", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0036", "sql1": "\nSELECT n AS count___,\n       dormid\nFROM\n  (SELECT dormid,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.dormid AS dormid,\n                LHS.dorm_name AS dorm_name,\n                LHS.student_capacity AS student_capacity,\n                LHS.gender AS gender,\n                RHS.amenid AS amenid\n         FROM dorm AS LHS\n         INNER JOIN has_amenity AS RHS ON (LHS.dormid = RHS.dormid))\n      WHERE (student_capacity >= 100))\n   GROUP BY dormid)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.dormid\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nWHERE T1.student_capacity > 100\nGROUP BY T1.dormid", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0016", "sql1": "\nSELECT dorm_name,\n       gender\nFROM dorm\nWHERE (student_capacity >= 300\n       OR student_capacity < 100)\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name,\n       gender\nFROM dorm\nWHERE student_capacity > 300\n  OR student_capacity < 100", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0050", "sql1": "\nSELECT `amenity_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`dormid` AS `dormid`,\n             `LHS`.`dorm_name` AS `dorm_name`,\n             `LHS`.`student_capacity` AS `student_capacity`,\n             `LHS`.`gender` AS `gender`,\n             `LHS`.`amenid` AS `amenid`,\n             `LHS`.`amenity_name` AS `amenity_name`,\n             `RHS`.`room_number` AS `room_number`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `LHS`.`dormid` AS `dormid`,\n                `LHS`.`dorm_name` AS `dorm_name`,\n                `LHS`.`student_capacity` AS `student_capacity`,\n                `LHS`.`gender` AS `gender`,\n                `RHS`.`amenid` AS `amenid`,\n                `RHS`.`amenity_name` AS `amenity_name`\n         FROM\n           (SELECT `LHS`.`stuid` AS `stuid`,\n                   `LHS`.`lname` AS `lname`,\n                   `LHS`.`fname` AS `fname`,\n                   `LHS`.`age` AS `age`,\n                   `LHS`.`sex` AS `sex`,\n                   `LHS`.`major` AS `major`,\n                   `LHS`.`advisor` AS `advisor`,\n                   `LHS`.`city_code` AS `city_code`,\n                   `RHS`.`dormid` AS `dormid`,\n                   `RHS`.`dorm_name` AS `dorm_name`,\n                   `RHS`.`student_capacity` AS `student_capacity`,\n                   `RHS`.`gender` AS `gender`\n            FROM `student` AS `LHS`\n            CROSS JOIN `dorm` AS `RHS`) AS `LHS`\n         CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`\n      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                            AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`\n   WHERE EXISTS\n       (SELECT 1\n        FROM `has_amenity` AS `RHS`\n        WHERE (`LHS`.`dormid` = `RHS`.`dormid`\n               AND `LHS`.`amenid` = `RHS`.`amenid`) ))\nWHERE (`lname` = 'Smith')\nORDER BY amenity_name\n", "sql2": "SELECT T3.amenity_name\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nJOIN lives_in AS T4 ON T4.dormid = T1.dormid\nJOIN student AS T5 ON T5.stuid = T4.stuid\nWHERE T5.lname = 'Smith'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0007", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM dorm_amenity\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM dorm_amenity", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0047", "sql1": "\nSELECT `dorm_name`\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT `LHS`.`dormid` AS `dormid`,\n                `LHS`.`dorm_name` AS `dorm_name`,\n                `LHS`.`student_capacity` AS `student_capacity`,\n                `LHS`.`gender` AS `gender`,\n                `RHS`.`amenid` AS `amenid`,\n                `RHS`.`amenity_name` AS `amenity_name`\n         FROM `dorm` AS `LHS`\n         CROSS JOIN `dorm_amenity` AS `RHS`)\n      WHERE (`amenity_name` = 'TV Lounge')) AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM has_amenity AS RHS\n        WHERE (LHS.amenid = RHS.amenid\n               AND LHS.dormid = RHS.dormid) ))\nORDER BY dorm_name\n", "sql2": "SELECT dorm_name\nFROM dorm\nEXCEPT\nSELECT T1.dorm_name\nFROM dorm AS T1\nJOIN has_amenity AS T2 ON T1.dormid = T2.dormid\nJOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid\nWHERE T3.amenity_name = 'TV Lounge'", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0010", "sql1": "\nSELECT meanage AS avg_age_,\n       city_code\nFROM\n  (SELECT city_code,\n          AVG(age) AS meanage\n   FROM student\n   GROUP BY city_code)\nORDER BY avg_age_\n", "sql2": "SELECT avg(age),\n       city_code\nFROM student\nGROUP BY city_code", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0006", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM dorm\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM dorm", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/dorm_1/0026", "sql1": "\nSELECT `amenity_name`\nFROM\n  (SELECT `LHS`.`dormid` AS `dormid`,\n          `LHS`.`dorm_name` AS `dorm_name`,\n          `LHS`.`student_capacity` AS `student_capacity`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`amenid` AS `amenid`,\n          `LHS`.`amenity_name` AS `amenity_name`\n   FROM\n     (SELECT `LHS`.`dormid` AS `dormid`,\n             `LHS`.`dorm_name` AS `dorm_name`,\n             `LHS`.`student_capacity` AS `student_capacity`,\n             `LHS`.`gender` AS `gender`,\n             `LHS`.`amenid` AS `amenid`,\n             `LHS`.`amenity_name` AS `amenity_name`\n      FROM\n        (SELECT `LHS`.`dormid` AS `dormid`,\n                `LHS`.`dorm_name` AS `dorm_name`,\n                `LHS`.`student_capacity` AS `student_capacity`,\n                `LHS`.`gender` AS `gender`,\n                `RHS`.`amenid` AS `amenid`,\n                `RHS`.`amenity_name` AS `amenity_name`\n         FROM `dorm` AS `LHS`\n         CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`\n      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`dormid` = `RHS`.`dormid`\n                                               AND `LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `dorm`\n      WHERE (`dorm_name` = 'Anonymous Donor Hall')) AS RHS ON (LHS.dormid = RHS.dormid\n                                                               AND LHS.dorm_name = RHS.dorm_name\n                                                               AND LHS.student_capacity = RHS.student_capacity\n                                                               AND LHS.gender = RHS.gender))\nORDER BY amenity_name\n", "sql2": "SELECT T1.amenity_name\nFROM dorm_amenity AS T1\nJOIN has_amenity AS T2 ON T2.amenid = T1.amenid\nJOIN dorm AS T3 ON T2.dormid = T3.dormid\nWHERE T3.dorm_name = 'Anonymous Donor Hall'\nORDER BY T1.amenity_name", "schema": "spider/dorm_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0009", "sql1": "\nSELECT n_distinct AS count_distinct_product_type_code_\nFROM\n  (SELECT COUNT(DISTINCT product_type_code) AS n_distinct\n   FROM products_for_hire)\nORDER BY count_distinct_product_type_code_\n", "sql2": "SELECT count(DISTINCT product_type_code)\nFROM products_for_hire", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0013", "sql1": "\nSELECT DISTINCT payment_type_code\nFROM payments\nORDER BY payment_type_code\n", "sql2": "SELECT DISTINCT payment_type_code\nFROM payments", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0005", "sql1": "\nSELECT product_id\nFROM\n  (SELECT product_id,\n          COUNT(*) AS n\n   FROM products_booked\n   GROUP BY product_id)\nWHERE (n = 3)\nORDER BY product_id\n", "sql2": "SELECT product_id\nFROM products_booked\nGROUP BY product_id\nHAVING count(*) = 3", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0008", "sql1": "\nSELECT product_name\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product_type_code AS product_type_code,\n          LHS.daily_hire_cost AS daily_hire_cost,\n          LHS.product_name AS product_name,\n          LHS.product_description AS product_description,\n          RHS.booking_id AS booking_id,\n          RHS.status_date AS status_date,\n          RHS.available_yn AS available_yn\n   FROM products_for_hire AS LHS\n   INNER JOIN view_product_availability AS RHS ON (LHS.product_id = RHS.product_id))\nWHERE (available_yn = 1)\nORDER BY product_name\n", "sql2": "SELECT T2.product_name\nFROM view_product_availability AS T1\nJOIN products_for_hire AS T2 ON T1.product_id = T2.product_id\nWHERE T1.available_yn = 1", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0018", "sql1": "\nSELECT `product_name`,\n       `product_description`\nFROM `products_for_hire`\nWHERE (`product_type_code` = 'Cutlery'\n       AND daily_hire_cost <= 20.0)\nORDER BY product_name\n", "sql2": "SELECT product_name,\n       product_description\nFROM products_for_hire\nWHERE product_type_code = 'Cutlery'\n  AND daily_hire_cost < 20", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0001", "sql1": "\nSELECT good_or_bad_customer\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.coupon_id AS coupon_id,\n          LHS.good_or_bad_customer AS good_or_bad_customer,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.gender_mf AS gender_mf,\n          LHS.date_became_customer AS date_became_customer,\n          LHS.date_last_hire AS date_last_hire,\n          RHS.date_issued AS date_issued,\n          RHS.coupon_amount AS coupon_amount\n   FROM customers AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM discount_coupons\n      WHERE (coupon_amount = 500.0)) AS RHS ON (LHS.coupon_id = RHS.coupon_id))\nORDER BY good_or_bad_customer\n", "sql2": "SELECT T1.good_or_bad_customer\nFROM customers AS T1\nJOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id\nWHERE T2.coupon_amount = 500", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0017", "sql1": "\nSELECT `payment_date`\nFROM `payments`\nWHERE (`payment_type_code` = 'Check'\n       OR amount_paid > 300.0)\nORDER BY payment_date\n", "sql2": "SELECT payment_date\nFROM payments\nWHERE amount_paid > 300\n  OR payment_type_code = 'Check'", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0007", "sql1": "\nSELECT `booking_start_date`,\n       `booking_end_date`\nFROM\n  (SELECT `LHS`.`booking_id` AS `booking_id`,\n          `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`booking_status_code` AS `booking_status_code`,\n          `LHS`.`returned_damaged_yn` AS `returned_damaged_yn`,\n          `LHS`.`booking_start_date` AS `booking_start_date`,\n          `LHS`.`booking_end_date` AS `booking_end_date`,\n          `LHS`.`count_hired` AS `count_hired`,\n          `LHS`.`amount_payable` AS `amount_payable`,\n          `LHS`.`amount_of_discount` AS `amount_of_discount`,\n          `LHS`.`amount_outstanding` AS `amount_outstanding`,\n          `LHS`.`amount_of_refund` AS `amount_of_refund`,\n          `LHS`.`product_id` AS `product_id`,\n          `LHS`.`returned_yn` AS `returned_yn`,\n          `LHS`.`returned_late_yn` AS `returned_late_yn`,\n          `LHS`.`booked_count` AS `booked_count`,\n          `LHS`.`booked_amount` AS `booked_amount`,\n          `RHS`.`product_type_code` AS `product_type_code`,\n          `RHS`.`daily_hire_cost` AS `daily_hire_cost`,\n          `RHS`.`product_name` AS `product_name`,\n          `RHS`.`product_description` AS `product_description`\n   FROM\n     (SELECT `LHS`.`booking_id` AS `booking_id`,\n             `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`booking_status_code` AS `booking_status_code`,\n             `LHS`.`returned_damaged_yn` AS `returned_damaged_yn`,\n             `LHS`.`booking_start_date` AS `booking_start_date`,\n             `LHS`.`booking_end_date` AS `booking_end_date`,\n             `LHS`.`count_hired` AS `count_hired`,\n             `LHS`.`amount_payable` AS `amount_payable`,\n             `LHS`.`amount_of_discount` AS `amount_of_discount`,\n             `LHS`.`amount_outstanding` AS `amount_outstanding`,\n             `LHS`.`amount_of_refund` AS `amount_of_refund`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`returned_yn` AS `returned_yn`,\n             `RHS`.`returned_late_yn` AS `returned_late_yn`,\n             `RHS`.`booked_count` AS `booked_count`,\n             `RHS`.`booked_amount` AS `booked_amount`\n      FROM `bookings` AS `LHS`\n      INNER JOIN `products_booked` AS `RHS` ON (`LHS`.`booking_id` = `RHS`.`booking_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `products_for_hire`\n      WHERE (`product_name` = 'Book collection A')) AS RHS ON (LHS.product_id = RHS.product_id))\nORDER BY booking_start_date\n", "sql2": "SELECT T3.booking_start_date,\n       T3.booking_end_date\nFROM Products_for_hire AS T1\nJOIN products_booked AS T2 ON T1.product_id = T2.product_id\nJOIN bookings AS T3 ON T2.booking_id = T3.booking_id\nWHERE T1.product_name = 'Book collection A'", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0011", "sql1": "\nSELECT DISTINCT AVG(amount_due) OVER () AS avg_amount_due_\nFROM payments\nORDER BY avg_amount_due_\n", "sql2": "SELECT avg(amount_due)\nFROM payments", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0010", "sql1": "\nSELECT `first_name`,\n       `last_name`,\n       `gender_mf`\nFROM `customers`\nWHERE (`good_or_bad_customer` = 'good')\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name,\n       gender_mf\nFROM customers\nWHERE good_or_bad_customer = 'good'\nORDER BY last_name", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/products_for_hire/0006", "sql1": "\nSELECT product_description\nFROM\n  (SELECT LHS.product_id AS product_id,\n          LHS.product_type_code AS product_type_code,\n          LHS.daily_hire_cost AS daily_hire_cost,\n          LHS.product_name AS product_name,\n          LHS.product_description AS product_description,\n          RHS.booking_id AS booking_id,\n          RHS.returned_yn AS returned_yn,\n          RHS.returned_late_yn AS returned_late_yn,\n          RHS.booked_count AS booked_count,\n          RHS.booked_amount AS booked_amount\n   FROM products_for_hire AS LHS\n   INNER JOIN products_booked AS RHS ON (LHS.product_id = RHS.product_id))\nWHERE (booked_amount <= 102.76)\nORDER BY product_description\n", "sql2": "SELECT T2.product_description\nFROM products_booked AS T1\nJOIN products_for_hire AS T2 ON T1.product_id = T2.product_id\nWHERE T1.booked_amount = 102.76", "schema": "spider/products_for_hire/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/products_for_hire/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM `member`\nWHERE (`address` != 'Hartford')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM member\nWHERE address != 'Hartford'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0005", "sql1": "\nSELECT time_of_purchase,\n       age,\n       address\nFROM member\nORDER BY time_of_purchase\n", "sql2": "SELECT Time_of_purchase,\n       age,\n       address\nFROM member\nORDER BY Time_of_purchase", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0004", "sql1": "\nSELECT `name`,\n       `member_id`\nFROM `member`\nWHERE (`membership_card` = 'Black'\n       AND age != 30)\nORDER BY name\n", "sql2": "SELECT name,\n       member_id\nFROM member\nWHERE Membership_card = 'Black'\n  OR age < 30", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0008", "sql1": "\nSELECT DISTINCT `membership_card`\nFROM `member`\nWHERE (`address` = 'Hartford'\n       AND `address` != 'Waterbury')\nORDER BY membership_card\n", "sql2": "SELECT membership_card\nFROM member\nWHERE address = 'Hartford' INTERSECT\n  SELECT membership_card\n  FROM member WHERE address = 'Waterbury'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0015", "sql1": "\nSELECT `address`,\n       `shop_id`\nFROM\n  (SELECT `LHS`.`hh_id` AS `hh_id`,\n          `LHS`.`shop_id` AS `shop_id`,\n          `LHS`.`month` AS `month`,\n          `LHS`.`num_of_shaff_in_charge` AS `num_of_shaff_in_charge`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`num_of_staff` AS `num_of_staff`,\n          `RHS`.`score` AS `score`,\n          `RHS`.`open_year` AS `open_year`\n   FROM\n     (SELECT *\n      FROM `happy_hour`\n      WHERE (`month` = 'May')) AS LHS\n   LEFT JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id))\nORDER BY address\n", "sql2": "SELECT t1.address,\n       t1.shop_id\nFROM shop AS t1\nJOIN happy_hour AS t2 ON t1.shop_id = t2.shop_id\nWHERE MONTH = 'May'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0003", "sql1": "\nSELECT `name`\nFROM `member`\nWHERE (`address` = 'Waterbury')\nORDER BY name\n", "sql2": "SELECT name\nFROM member\nWHERE address = 'Harford'\n  OR address = 'Waterbury'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0018", "sql1": "\nSELECT MONTH\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT MONTH,\n                COUNT(*) AS n\n         FROM happy_hour\n         GROUP BY MONTH)\n      ORDER BY n DESC)\n   LIMIT 2)\n", "sql2": "SELECT MONTH\nFROM happy_hour\nGROUP BY MONTH\nHAVING count(*) > 2", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0002", "sql1": "\nSELECT n AS count___,\n       address\nFROM\n  (SELECT address,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY address)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       address\nFROM member\nGROUP BY address", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0014", "sql1": "\nSELECT address,\n       num_of_staff\nFROM\n  (SELECT *\n   FROM shop AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM happy_hour AS RHS\n        WHERE (LHS.shop_id = RHS.shop_id) ))\nORDER BY address\n", "sql2": "SELECT address,\n       num_of_staff\nFROM shop\nWHERE shop_id NOT IN\n    (SELECT shop_id\n     FROM happy_hour)", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0001", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `membership_card`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT *\n      FROM `member`\n      WHERE (`membership_card` = 'Black'))\n   GROUP BY membership_card)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM member\nWHERE Membership_card = 'Black'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0017", "sql1": "\nSELECT MONTH\nFROM\n  (SELECT MONTH,\n          num_of_shaff_in_charge,\n          MAX(n) AS maxn\n   FROM\n     (SELECT hh_id,\n             shop_id,\n             MONTH,\n             num_of_shaff_in_charge,\n             num_of_shaff_in_charge AS n\n      FROM\n        (SELECT LHS.hh_id AS hh_id,\n                LHS.shop_id AS shop_id,\n                LHS.month AS MONTH,\n                LHS.num_of_shaff_in_charge AS num_of_shaff_in_charge\n         FROM happy_hour AS LHS\n         INNER JOIN\n           (SELECT MONTH,\n                   COUNT(*) AS n\n            FROM happy_hour\n            GROUP BY MONTH) AS RHS ON (LHS.num_of_shaff_in_charge = RHS.n\n                                       AND LHS.month = RHS.month)))\n   GROUP BY MONTH,\n            num_of_shaff_in_charge)\nORDER BY MONTH\n", "sql2": "SELECT MONTH\nFROM happy_hour\nGROUP BY MONTH\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0007", "sql1": "\nSELECT address\nFROM member\nWHERE (age <= 30\n       AND age != 40)\nORDER BY address\n", "sql2": "SELECT address\nFROM member\nWHERE age < 30 INTERSECT\n  SELECT address\n  FROM member WHERE age > 40", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0011", "sql1": "\nSELECT address\nFROM shop\nORDER BY address\n", "sql2": "SELECT address\nFROM shop\nORDER BY open_year", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0010", "sql1": "\nSELECT `address_other` AS `address`\nFROM\n  (SELECT `level_of_membership` AS `member_id`,\n          `name`,\n          `membership_card`,\n          `age`,\n          `time_of_purchase`,\n          `level_of_membership`,\n          `address`,\n          `name_other`,\n          `membership_card_other`,\n          `age_other`,\n          `level_of_membership_other`,\n          `address_other`\n   FROM\n     (SELECT `LHS`.`member_id` AS `member_id`,\n             `LHS`.`name` AS `name`,\n             `LHS`.`membership_card` AS `membership_card`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`time_of_purchase` AS `time_of_purchase`,\n             `LHS`.`level_of_membership` AS `level_of_membership`,\n             `LHS`.`address` AS `address`,\n             `RHS`.`name` AS `name_other`,\n             `RHS`.`membership_card` AS `membership_card_other`,\n             `RHS`.`age` AS `age_other`,\n             `RHS`.`level_of_membership` AS `level_of_membership_other`,\n             `RHS`.`address` AS `address_other`\n      FROM `member` AS `LHS`\n      INNER JOIN `member` AS `RHS` ON (`LHS`.`time_of_purchase` = `RHS`.`time_of_purchase`\n                                          AND `LHS`.`level_of_membership` = `RHS`.`member_id`)))\nWHERE (`membership_card` = 'Black')\nORDER BY address\n", "sql2": "SELECT address\nFROM member\nEXCEPT\nSELECT address\nFROM member\nWHERE Membership_card = 'Black'", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/coffee_shop/0006", "sql1": "\nSELECT membership_card\nFROM\n  (SELECT membership_card,\n          COUNT(*) AS n\n   FROM member\n   GROUP BY membership_card)\nWHERE (n >= 5)\nORDER BY membership_card\n", "sql2": "SELECT Membership_card\nFROM member\nGROUP BY Membership_card\nHAVING count(*) > 5", "schema": "spider/coffee_shop/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0009", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`artistid` AS `artistid`,\n          `LHS`.`name` AS `name`,\n          `RHS`.`albumid` AS `albumid`,\n          `RHS`.`title` AS `title`\n   FROM `artist` AS `LHS`\n   INNER JOIN `album` AS `RHS` ON (`LHS`.`artistid` = `RHS`.`artistid`))\nWHERE (`title` = 'Balls to the Wall')\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nWHERE T1.Title = 'Balls to the Wall'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0013", "sql1": "\nSELECT DISTINCT maxmilliseconds AS max_milliseconds_,\n                MIN(milliseconds) OVER () AS min_milliseconds_\nFROM\n  (SELECT trackid,\n          name,\n          albumid,\n          mediatypeid,\n          genreid,\n          composer,\n          milliseconds,\n          bytes,\n          unitprice,\n          MAX(milliseconds) OVER () AS maxmilliseconds\n   FROM track)\nORDER BY max_milliseconds_\n", "sql2": "SELECT max(Milliseconds),\n       min(Milliseconds)\nFROM TRACK", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0005", "sql1": "\nSELECT DISTINCT billingcountry\nFROM invoice\nORDER BY billingcountry\n", "sql2": "SELECT distinct(BillingCountry)\nFROM INVOICE", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0029", "sql1": "\nSELECT phone\nFROM employee\nORDER BY phone\n", "sql2": "SELECT Phone\nFROM EMPLOYEE", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0004", "sql1": "\nSELECT `firstname`,\n       `lastname`\nFROM `employee`\nWHERE (`city` = 'Calgary')\nORDER BY firstname\n", "sql2": "SELECT FirstName,\n       LastName\nFROM EMPLOYEE\nWHERE City = 'Calgary'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0024", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT city) OVER () AS count_distinct_city_\nFROM employee\nORDER BY count_distinct_city_\n", "sql2": "SELECT COUNT(DISTINCT city)\nFROM EMPLOYEE", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0008", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `name`,\n          COUNT(*) AS `n`\n   FROM\n     (SELECT `LHS`.`albumid` AS `albumid`,\n             `LHS`.`title` AS `title`,\n             `LHS`.`artistid` AS `artistid`,\n             `RHS`.`name` AS `name`\n      FROM `album` AS `LHS`\n      INNER JOIN `artist` AS `RHS` ON (`LHS`.`artistid` = `RHS`.`artistid`))\n   GROUP BY `name`)\nWHERE (`name` = 'Metallica')\nORDER BY count___\n", "sql2": "SELECT COUNT(*)\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nWHERE T2.Name = 'Metallica'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0039", "sql1": "\nSELECT `birthdate`\nFROM `employee`\nWHERE (`city` = 'Edmonton')\nORDER BY birthdate\n", "sql2": "SELECT BirthDate\nFROM EMPLOYEE\nWHERE City = 'Edmonton'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0035", "sql1": "\nSELECT name,\n       artistid\nFROM\n  (SELECT LHS.artistid AS artistid,\n          LHS.name AS name,\n          RHS.n AS n\n   FROM artist AS LHS\n   INNER JOIN\n     (SELECT artistid,\n             COUNT(*) AS n\n      FROM album\n      GROUP BY artistid) AS RHS ON (LHS.artistid = RHS.artistid))\nWHERE (n >= 3)\nORDER BY name\n", "sql2": "SELECT T2.Name,\n       T1.ArtistId\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID\nGROUP BY T1.ArtistId\nHAVING COUNT(*) >= 3\nORDER BY T2.Name", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0034", "sql1": "\nSELECT title\nFROM album\nORDER BY title\n", "sql2": "SELECT Title\nFROM ALBUM\nORDER BY Title", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0002", "sql1": "\nSELECT name\nFROM genre\nORDER BY name\n", "sql2": "SELECT Name\nFROM GENRE", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM album\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ALBUM", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0017", "sql1": "\nSELECT title,\n       albumid\nFROM\n  (SELECT *\n   FROM album AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM track\n           WHERE (unitprice <= 1.0)) AS RHS\n        WHERE (LHS.albumid = RHS.albumid) ))\nORDER BY title\n", "sql2": "SELECT T1.Title,\n       T2.AlbumID\nFROM ALBUM AS T1\nJOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId\nWHERE T2.UnitPrice > 1\nGROUP BY T2.AlbumID", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0040", "sql1": "\nSELECT DISTINCT unitprice\nFROM track\nORDER BY unitprice\n", "sql2": "SELECT distinct(UnitPrice)\nFROM TRACK", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0020", "sql1": "\nSELECT `firstname`,\n       `lastname`\nFROM `customer`\nWHERE (`email` = 'luisg@embraer.com.br')\nORDER BY firstname\n", "sql2": "SELECT FirstName,\n       LastName\nFROM CUSTOMER\nWHERE Email = 'luisg@embraer.com.br'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0036", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM album AS RHS\n        WHERE (LHS.artistid = RHS.artistid) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM ARTIST\nEXCEPT\nSELECT T2.Name\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0007", "sql1": "\nSELECT `title`\nFROM\n  (SELECT `LHS`.`albumid` AS `albumid`,\n          `LHS`.`title` AS `title`,\n          `LHS`.`artistid` AS `artistid`,\n          `RHS`.`name` AS `name`\n   FROM `album` AS `LHS`\n   LEFT JOIN `artist` AS `RHS` ON (`LHS`.`artistid` = `RHS`.`artistid`))\nWHERE (`name` = 'AC/DC')\nORDER BY title\n", "sql2": "SELECT Title\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nWHERE T2.Name = 'AC/DC'", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/chinook_1/0010", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.artistid AS artistid,\n          LHS.name AS name,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.artistid AS artistid,\n             LHS.name AS name,\n             RHS.n AS n\n      FROM artist AS LHS\n      INNER JOIN\n        (SELECT artistid,\n                COUNT(*) AS n\n         FROM album\n         GROUP BY artistid) AS RHS ON (LHS.artistid = RHS.artistid)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT artistid,\n                COUNT(*) AS n\n         FROM album\n         GROUP BY artistid)) AS RHS ON (LHS.n = RHS.n))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM ALBUM AS T1\nJOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId\nGROUP BY T2.Name\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/chinook_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/chinook_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0009", "sql1": "\nSELECT `email_address`\nFROM `students`\nWHERE (`first_name` = 'Emma'\n       AND `last_name` = 'Rohan')\nORDER BY email_address\n", "sql2": "SELECT email_address\nFROM Students\nWHERE first_name = 'Emma'\n  AND last_name = 'Rohan'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0033", "sql1": "\nSELECT `monthly_rental`\nFROM\n  (SELECT *\n   FROM `student_addresses` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `addresses`\n           WHERE (`state_province_county` != 'Texas')) AS RHS\n        WHERE (LHS.address_id = RHS.address_id) ))\nORDER BY monthly_rental\n", "sql2": "SELECT T2.monthly_rental\nFROM Addresses AS T1\nJOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id\nWHERE T1.state_province_county = 'Texas'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0005", "sql1": "\nSELECT DISTINCT detention_type_code\nFROM detention\nORDER BY detention_type_code\n", "sql2": "SELECT DISTINCT detention_type_code\nFROM Detention", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0029", "sql1": "\nSELECT `date_incident_start`,\n       `date_incident_end`\nFROM\n  (SELECT `LHS`.`incident_id` AS `incident_id`,\n          `LHS`.`incident_type_code` AS `incident_type_code`,\n          `LHS`.`student_id` AS `student_id`,\n          `LHS`.`date_incident_start` AS `date_incident_start`,\n          `LHS`.`date_incident_end` AS `date_incident_end`,\n          `LHS`.`incident_summary` AS `incident_summary`,\n          `LHS`.`recommendations` AS `recommendations`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`address_id` AS `address_id`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`date_first_rental` AS `date_first_rental`,\n          `RHS`.`date_left_university` AS `date_left_university`,\n          `RHS`.`other_student_details` AS `other_student_details`\n   FROM `behavior_incident` AS `LHS`\n   INNER JOIN `students` AS `RHS` ON (`LHS`.`student_id` = `RHS`.`student_id`))\nWHERE (`last_name` = 'Fahey')\nORDER BY date_incident_start\n", "sql2": "SELECT T1.date_incident_start,\n       date_incident_end\nFROM Behavior_Incident AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.last_name = 'Fahey'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0028", "sql1": "\nSELECT `text_of_notes`\nFROM\n  (SELECT *\n   FROM `assessment_notes` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `teachers`\n           WHERE (`last_name` != 'Schuster')) AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY text_of_notes\n", "sql2": "SELECT T1.text_of_notes\nFROM Assessment_Notes AS T1\nJOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id\nWHERE T2.last_name = 'Schuster'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0004", "sql1": "\nSELECT n_distinct AS count_distinct_incident_type_code_\nFROM\n  (SELECT other_details,\n          COUNT(DISTINCT incident_type_code) AS n_distinct\n   FROM behavior_incident\n   GROUP BY other_details)\nORDER BY count_distinct_incident_type_code_\n", "sql2": "SELECT count(DISTINCT incident_type_code)\nFROM Behavior_Incident", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0012", "sql1": "\nSELECT `incident_type_description`\nFROM `ref_incident_type`\nWHERE (`incident_type_code` = 'VIOLENCE')\nORDER BY incident_type_description\n", "sql2": "SELECT incident_type_description\nFROM Ref_Incident_Type\nWHERE incident_type_code = 'VIOLENCE'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0008", "sql1": "\nSELECT cell_mobile_number,\n       email_address\nFROM students\nORDER BY cell_mobile_number\n", "sql2": "SELECT cell_mobile_number,\n       email_address\nFROM STUDENTS", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0015", "sql1": "\nSELECT notes_id,\n       student_id,\n       teacher_id,\n       date_of_notes,\n       text_of_notes,\n       other_details\nFROM assessment_notes\nORDER BY notes_id\n", "sql2": "SELECT *\nFROM Assessment_Notes\nORDER BY date_of_notes ASC", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0003", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT address_id,\n          other_address_details,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM addresses\n      WHERE (zip_postcode != 197))\n   GROUP BY address_id,\n            other_address_details)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ADDRESSES\nWHERE zip_postcode = '197'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0039", "sql1": "\nSELECT DISTINCT last_name\nFROM\n  (SELECT *\n   FROM teachers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM detention AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY last_name\n", "sql2": "SELECT last_name\nFROM Teachers\nEXCEPT\nSELECT T1.last_name\nFROM Teachers AS T1\nJOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0035", "sql1": "\nSELECT DISTINCT line_1,\n                meanmonthly_rental AS avg_t2_monthly_rental_\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.line_3 AS line_3,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          LHS.other_address_details AS other_address_details,\n          LHS.student_id AS student_id,\n          LHS.date_address_from AS date_address_from,\n          LHS.date_address_to AS date_address_to,\n          LHS.monthly_rental AS monthly_rental,\n          LHS.other_details AS other_details,\n          RHS.meanmonthly_rental AS meanmonthly_rental\n   FROM\n     (SELECT LHS.address_id AS address_id,\n             LHS.line_1 AS line_1,\n             LHS.line_2 AS line_2,\n             LHS.line_3 AS line_3,\n             LHS.city AS city,\n             LHS.zip_postcode AS zip_postcode,\n             LHS.state_province_county AS state_province_county,\n             LHS.country AS country,\n             LHS.other_address_details AS other_address_details,\n             RHS.student_id AS student_id,\n             RHS.date_address_from AS date_address_from,\n             RHS.date_address_to AS date_address_to,\n             RHS.monthly_rental AS monthly_rental,\n             RHS.other_details AS other_details\n      FROM addresses AS LHS\n      INNER JOIN student_addresses AS RHS ON (LHS.address_id = RHS.address_id)) AS LHS\n   INNER JOIN\n     (SELECT address_id,\n             AVG(monthly_rental) AS meanmonthly_rental\n      FROM student_addresses\n      GROUP BY address_id) AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY line_1\n", "sql2": "SELECT T1.line_1,\n       avg(T2.monthly_rental)\nFROM Addresses AS T1\nJOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id\nGROUP BY T2.address_id", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0034", "sql1": "\nSELECT `first_name`,\n       `last_name`\nFROM\n  (SELECT *\n   FROM `students` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `addresses`\n           WHERE (`state_province_county` != 'Wisconsin')) AS RHS\n        WHERE (LHS.address_id = RHS.address_id) ))\nORDER BY first_name\n", "sql2": "SELECT T2.first_name,\n       T2.last_name\nFROM Addresses AS T1\nJOIN Students AS T2 ON T1.address_id = T2.address_id\nWHERE T1.state_province_county = 'Wisconsin'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0018", "sql1": "\nSELECT student_id,\n       address_id,\n       date_address_from,\n       date_address_to,\n       monthly_rental,\n       other_details\nFROM student_addresses\nORDER BY student_id\n", "sql2": "SELECT *\nFROM Student_Addresses\nORDER BY monthly_rental DESC", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0002", "sql1": "\nSELECT date_of_notes\nFROM assessment_notes\nORDER BY date_of_notes\n", "sql2": "SELECT date_of_notes\nFROM Assessment_Notes", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM assessment_notes\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ASSESSMENT_NOTES", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0017", "sql1": "\nSELECT first_name,\n       last_name\nFROM teachers\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Teachers\nORDER BY last_name", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0036", "sql1": "\nSELECT `zip_postcode`\nFROM\n  (SELECT `LHS`.`teacher_id` AS `teacher_id`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`gender` AS `gender`,\n          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `LHS`.`email_address` AS `email_address`,\n          `LHS`.`other_details` AS `other_details`,\n          `RHS`.`line_1` AS `line_1`,\n          `RHS`.`line_2` AS `line_2`,\n          `RHS`.`line_3` AS `line_3`,\n          `RHS`.`city` AS `city`,\n          `RHS`.`zip_postcode` AS `zip_postcode`,\n          `RHS`.`state_province_county` AS `state_province_county`,\n          `RHS`.`country` AS `country`,\n          `RHS`.`other_address_details` AS `other_address_details`\n   FROM\n     (SELECT *\n      FROM `teachers`\n      WHERE (`first_name` = 'Lyla')) AS LHS\n   LEFT JOIN addresses AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY zip_postcode\n", "sql2": "SELECT T1.zip_postcode\nFROM Addresses AS T1\nJOIN Teachers AS T2 ON T1.address_id = T2.address_id\nWHERE T2.first_name = 'Lyla'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0016", "sql1": "\nSELECT city\nFROM addresses\nORDER BY city\n", "sql2": "SELECT city\nFROM Addresses\nORDER BY city", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0027", "sql1": "\nSELECT `date_of_notes`\nFROM\n  (SELECT `LHS`.`student_id` AS `student_id`,\n          `LHS`.`address_id` AS `address_id`,\n          `LHS`.`first_name` AS `first_name`,\n          `LHS`.`middle_name` AS `middle_name`,\n          `LHS`.`last_name` AS `last_name`,\n          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `LHS`.`email_address` AS `email_address`,\n          `LHS`.`date_first_rental` AS `date_first_rental`,\n          `LHS`.`date_left_university` AS `date_left_university`,\n          `LHS`.`other_student_details` AS `other_student_details`,\n          `RHS`.`notes_id` AS `notes_id`,\n          `RHS`.`teacher_id` AS `teacher_id`,\n          `RHS`.`date_of_notes` AS `date_of_notes`,\n          `RHS`.`text_of_notes` AS `text_of_notes`,\n          `RHS`.`other_details` AS `other_details`\n   FROM\n     (SELECT *\n      FROM `students`\n      WHERE (`first_name` = 'Fanny')) AS LHS\n   INNER JOIN assessment_notes AS RHS ON (LHS.student_id = RHS.student_id))\nORDER BY date_of_notes\n", "sql2": "SELECT T1.date_of_notes\nFROM Assessment_Notes AS T1\nJOIN Students AS T2 ON T1.student_id = T2.student_id\nWHERE T2.first_name = 'Fanny'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0007", "sql1": "\nSELECT detention_summary\nFROM detention\nORDER BY detention_summary\n", "sql2": "SELECT detention_summary\nFROM Detention", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0011", "sql1": "\nSELECT `gender`\nFROM `teachers`\nWHERE (`last_name` = 'Medhurst')\nORDER BY gender\n", "sql2": "SELECT gender\nFROM TEACHERS\nWHERE last_name = 'Medhurst'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0010", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_\nFROM students_in_detention\nORDER BY count_distinct_student_id_\n", "sql2": "SELECT count(DISTINCT student_id)\nFROM Students_in_Detention", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0006", "sql1": "\nSELECT `date_incident_start`,\n       `date_incident_end`\nFROM `behavior_incident`\nWHERE (`incident_type_code` = 'NOISE')\nORDER BY date_incident_start\n", "sql2": "SELECT date_incident_start,\n       date_incident_end\nFROM Behavior_Incident\nWHERE incident_type_code = 'NOISE'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/behavior_monitoring/0030", "sql1": "\nSELECT `datetime_detention_start`,\n       `datetime_detention_end`\nFROM\n  (SELECT *\n   FROM `detention` AS `LHS`\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM `teachers`\n           WHERE (`last_name` != 'Schultz')) AS RHS\n        WHERE (LHS.teacher_id = RHS.teacher_id) ))\nORDER BY datetime_detention_start\n", "sql2": "SELECT T1.datetime_detention_start,\n       datetime_detention_end\nFROM Detention AS T1\nJOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id\nWHERE T2.last_name = 'Schultz'", "schema": "spider/behavior_monitoring/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0013", "sql1": "\nSELECT sumenrollment AS sum_enrollment_,\n       affiliation\nFROM\n  (SELECT affiliation,\n          SUM(enrollment) AS sumenrollment\n   FROM university\n   GROUP BY affiliation)\nORDER BY sum_enrollment_\n", "sql2": "SELECT sum(enrollment),\n       affiliation\nFROM university\nGROUP BY affiliation", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0004", "sql1": "\nSELECT `founded`\nFROM\n  (SELECT `affiliation`,\n          `founded`,\n          MAX(`affiliation`) AS `maxaffiliation`\n   FROM `university`\n   GROUP BY `affiliation`,\n            `founded`)\nWHERE (`affiliation` != 'Public')\nORDER BY founded\n", "sql2": "SELECT founded\nFROM university\nWHERE affiliation != 'Public'\nORDER BY founded DESC\nLIMIT 1", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0012", "sql1": "\nSELECT DISTINCT sumenrollment AS sum_enrollment_,\n                MIN(enrollment) OVER () AS min_enrollment_\nFROM\n  (SELECT school_id,\n          school,\n          LOCATION,\n          founded,\n          affiliation,\n          enrollment,\n          nickname,\n          primary_conference,\n          SUM(enrollment) OVER () AS sumenrollment\n   FROM university)\nORDER BY sum_enrollment_\n", "sql2": "SELECT sum(enrollment),\n       min(enrollment)\nFROM university", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0015", "sql1": "\nSELECT `school`\nFROM `university`\nWHERE (`affiliation` != 'Public'\n       OR founded != 1850.0)\nORDER BY school\n", "sql2": "SELECT school\nFROM university\nWHERE founded > 1850\n  OR affiliation = 'Public'", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0003", "sql1": "\nSELECT DISTINCT founded\nFROM\n  (SELECT LHS.school_id AS school_id,\n          LHS.school AS school,\n          LHS.location AS LOCATION,\n          LHS.founded AS founded,\n          LHS.affiliation AS affiliation,\n          LHS.enrollment AS enrollment,\n          LHS.nickname AS nickname,\n          LHS.primary_conference AS primary_conference,\n          LHS.maxenrollment AS maxenrollment,\n          RHS.school_id AS school_id_other,\n          RHS.school AS school_other,\n          RHS.location AS location_other,\n          RHS.founded AS founded_other,\n          RHS.affiliation AS affiliation_other,\n          RHS.enrollment AS enrollment_other,\n          RHS.nickname AS nickname_other,\n          RHS.primary_conference AS primary_conference_other,\n          RHS.maxenrollment AS maxenrollment_other\n   FROM\n     (SELECT school_id,\n             school,\n             LOCATION,\n             founded,\n             affiliation,\n             enrollment,\n             nickname,\n             primary_conference,\n             MAX(enrollment) OVER () AS maxenrollment\n      FROM university) AS LHS\n   CROSS JOIN\n     (SELECT school_id,\n             school,\n             LOCATION,\n             founded,\n             affiliation,\n             enrollment,\n             nickname,\n             primary_conference,\n             MAX(enrollment) OVER () AS maxenrollment\n      FROM university) AS RHS)\nWHERE (enrollment >= maxenrollment_other\n       AND enrollment_other < maxenrollment_other)\nORDER BY founded\n", "sql2": "SELECT founded\nFROM university\nORDER BY enrollment DESC\nLIMIT 1", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0019", "sql1": "\nSELECT n_distinct AS count___,\n       affiliation\nFROM\n  (SELECT affiliation,\n          COUNT(DISTINCT enrollment) AS n_distinct\n   FROM\n     (SELECT *\n      FROM university\n      WHERE (enrollment >= 20000.0))\n   GROUP BY affiliation)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       affiliation\nFROM university\nWHERE enrollment > 20000\nGROUP BY affiliation", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0002", "sql1": "\nSELECT `school`,\n       `location`\nFROM `university`\nWHERE (`affiliation` = 'Public')\nORDER BY school\n", "sql2": "SELECT school,\n       LOCATION\nFROM university\nWHERE affiliation = 'Public'", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0001", "sql1": "\nSELECT school,\n       nickname\nFROM university\nORDER BY school\n", "sql2": "SELECT school,\n       nickname\nFROM university\nORDER BY founded", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0021", "sql1": "\nSELECT enrollment AS max_enrollment_\nFROM\n  (SELECT MAX(enrollment) AS enrollment\n   FROM university)\nORDER BY max_enrollment_\n", "sql2": "SELECT max(Enrollment)\nFROM university", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/university_basketball/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT affiliation) OVER () AS count_distinct_affiliation_\nFROM university\nORDER BY count_distinct_affiliation_\n", "sql2": "SELECT count(DISTINCT affiliation)\nFROM university", "schema": "spider/university_basketball/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0013", "sql1": "\nSELECT DISTINCT `n` AS `count_distinct_t2_camera_lens_id_`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`height` AS `height`,\n          `LHS`.`prominence` AS `prominence`,\n          `LHS`.`range` AS `range`,\n          `LHS`.`country` AS `country`,\n          `RHS`.`camera_lens_id` AS `camera_lens_id`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT *\n      FROM `mountain`\n      WHERE (`country` = 'Ethiopia')) AS LHS\n   INNER JOIN\n     (SELECT camera_lens_id,\n             id,\n             COUNT(*) AS n\n      FROM photos\n      GROUP BY camera_lens_id,\n               id) AS RHS ON (LHS.id = RHS.id))\nORDER BY count_distinct_t2_camera_lens_id_\n", "sql2": "SELECT count(DISTINCT T2.camera_lens_id)\nFROM mountain AS T1\nJOIN photos AS T2 ON T1.id = T2.mountain_id\nWHERE T1.country = 'Ethiopia'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0005", "sql1": "\nSELECT `meanprominence` AS `avg_prominence_`\nFROM\n  (SELECT `country`,\n          AVG(`prominence`) AS `meanprominence`\n   FROM\n     (SELECT *\n      FROM `mountain`\n      WHERE (`country` = 'Morocco'))\n   GROUP BY country)\nORDER BY avg_prominence_\n", "sql2": "SELECT avg(prominence)\nFROM mountain\nWHERE country = 'Morocco'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0004", "sql1": "\nSELECT DISTINCT maxheight AS max_height_,\n                AVG(height) OVER () AS avg_height_\nFROM\n  (SELECT id,\n          name,\n          height,\n          prominence,\n          RANGE,\n          country,\n          MAX(height) OVER () AS maxheight\n   FROM mountain)\nORDER BY max_height_\n", "sql2": "SELECT max(height),\n       avg(height)\nFROM mountain", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0003", "sql1": "\nSELECT id,\n       color,\n       name\nFROM photos\nORDER BY id\n", "sql2": "SELECT id,\n       color,\n       name\nFROM photos", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0002", "sql1": "\nSELECT brand,\n       name\nFROM camera_lens\nORDER BY brand\n", "sql2": "SELECT brand,\n       name\nFROM camera_lens\nORDER BY max_aperture DESC", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM camera_lens\n      WHERE (focal_length_mm > 15.0)))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM camera_lens\nWHERE focal_length_mm > 15", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0017", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.id AS id,\n          LHS.brand AS brand,\n          LHS.name AS name,\n          LHS.focal_length_mm AS focal_length_mm,\n          LHS.max_aperture AS max_aperture,\n          RHS.n AS n\n   FROM camera_lens AS LHS\n   INNER JOIN\n     (SELECT camera_lens_id,\n             COUNT(*) AS n\n      FROM photos\n      GROUP BY camera_lens_id) AS RHS ON (LHS.id = RHS.camera_lens_id))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM camera_lens AS T1\nJOIN photos AS T2 ON T1.id = T2.camera_lens_id\nGROUP BY T1.id\nORDER BY count(*)", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0007", "sql1": "\nSELECT id,\n       name\nFROM\n  (SELECT id,\n          name,\n          height,\n          prominence,\n          RANGE,\n          country,\n          id_other,\n          camera_lens_id,\n          color,\n          name_other,\n          id AS mountain_id\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.name AS name,\n             LHS.height AS height,\n             LHS.prominence AS prominence,\n             LHS.range AS RANGE,\n             LHS.country AS country,\n             RHS.id AS id_other,\n             RHS.camera_lens_id AS camera_lens_id,\n             RHS.color AS color,\n             RHS.name AS name_other\n      FROM mountain AS LHS\n      INNER JOIN photos AS RHS ON (LHS.id = RHS.mountain_id)))\nWHERE (height >= 4000.0)\nORDER BY id\n", "sql2": "SELECT T1.id,\n       T1.name\nFROM mountain AS T1\nJOIN photos AS T2 ON T1.id = T2.mountain_id\nWHERE T1.height > 4000", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0011", "sql1": "\nSELECT n_distinct AS count_distinct_brand_\nFROM\n  (SELECT COUNT(DISTINCT brand) AS n_distinct\n   FROM camera_lens)\nORDER BY count_distinct_brand_\n", "sql2": "SELECT count(DISTINCT brand)\nFROM camera_lens", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0010", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `LHS`.`id` AS `id`,\n          `LHS`.`brand` AS `brand`,\n          `LHS`.`name` AS `name`,\n          `LHS`.`focal_length_mm` AS `focal_length_mm`,\n          `LHS`.`max_aperture` AS `max_aperture`,\n          `RHS`.`id` AS `id_other`,\n          `RHS`.`mountain_id` AS `mountain_id`,\n          `RHS`.`color` AS `color`,\n          `RHS`.`name` AS `name_other`\n   FROM\n     (SELECT *\n      FROM `camera_lens`\n      WHERE (`brand` = 'Sigma'\n             OR `brand` = 'Olympus')) AS LHS\n   INNER JOIN photos AS RHS ON (LHS.id = RHS.camera_lens_id))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM camera_lens AS T1\nJOIN photos AS T2 ON T2.camera_lens_id = T1.id\nWHERE T1.brand = 'Sigma'\n  OR T1.brand = 'Olympus'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/mountain_photos/0006", "sql1": "\nSELECT name,\n       height,\n       prominence\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM mountain\n      ORDER BY RANGE DESC)\n   LIMIT 21)\n", "sql2": "SELECT name,\n       height,\n       prominence\nFROM mountain\nWHERE RANGE != 'Aberdare Range'", "schema": "spider/mountain_photos/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0009", "sql1": "\nSELECT catalog_entry_name\nFROM\n  (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n          LHS.catalog_level_number AS catalog_level_number,\n          LHS.parent_entry_id AS parent_entry_id,\n          LHS.previous_entry_id AS previous_entry_id,\n          LHS.next_entry_id AS next_entry_id,\n          LHS.catalog_entry_name AS catalog_entry_name,\n          LHS.product_stock_number AS product_stock_number,\n          LHS.price_in_dollars AS price_in_dollars,\n          LHS.price_in_euros AS price_in_euros,\n          LHS.price_in_pounds AS price_in_pounds,\n          LHS.capacity AS capacity,\n          LHS.length AS LENGTH,\n          LHS.height AS height,\n          LHS.width AS width,\n          RHS.price_in_euros AS price_in_euros_other\n   FROM catalog_contents AS LHS\n   INNER JOIN\n     (SELECT next_entry_id,\n             price_in_euros,\n             MAX(price_in_dollars) AS price_in_dollars\n      FROM catalog_contents\n      GROUP BY next_entry_id,\n               price_in_euros) AS RHS ON (LHS.catalog_entry_id = RHS.next_entry_id\n                                          AND LHS.price_in_dollars = RHS.price_in_dollars))\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nORDER BY price_in_dollars DESC\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0013", "sql1": "\nSELECT catalog_entry_name\nFROM\n  (SELECT catalog_entry_id,\n          catalog_level_number,\n          parent_entry_id,\n          previous_entry_id,\n          next_entry_id,\n          catalog_entry_name,\n          product_stock_number,\n          price_in_dollars,\n          price_in_euros,\n          price_in_pounds,\n          capacity,\n          LENGTH,\n          capacity AS height,\n          width,\n          catalog_entry_id_other,\n          parent_entry_id_other,\n          previous_entry_id_other,\n          next_entry_id_other,\n          catalog_entry_name_other,\n          product_stock_number_other,\n          price_in_dollars_other,\n          price_in_euros_other,\n          price_in_pounds_other,\n          capacity_other,\n          length_other,\n          width_other\n   FROM\n     (SELECT catalog_entry_id,\n             catalog_entry_id AS catalog_level_number,\n             parent_entry_id,\n             previous_entry_id,\n             next_entry_id,\n             catalog_entry_name,\n             product_stock_number,\n             price_in_dollars,\n             price_in_euros,\n             price_in_pounds,\n             capacity,\n             LENGTH,\n             height,\n             width,\n             catalog_entry_id_other,\n             parent_entry_id_other,\n             previous_entry_id_other,\n             next_entry_id_other,\n             catalog_entry_name_other,\n             product_stock_number_other,\n             price_in_dollars_other,\n             price_in_euros_other,\n             price_in_pounds_other,\n             capacity_other,\n             length_other,\n             width_other\n      FROM\n        (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n                LHS.catalog_level_number AS catalog_level_number,\n                LHS.parent_entry_id AS parent_entry_id,\n                LHS.previous_entry_id AS previous_entry_id,\n                LHS.next_entry_id AS next_entry_id,\n                LHS.catalog_entry_name AS catalog_entry_name,\n                LHS.product_stock_number AS product_stock_number,\n                LHS.price_in_dollars AS price_in_dollars,\n                LHS.price_in_euros AS price_in_euros,\n                LHS.price_in_pounds AS price_in_pounds,\n                LHS.capacity AS capacity,\n                LHS.length AS LENGTH,\n                LHS.height AS height,\n                LHS.width AS width,\n                RHS.catalog_entry_id AS catalog_entry_id_other,\n                RHS.parent_entry_id AS parent_entry_id_other,\n                RHS.previous_entry_id AS previous_entry_id_other,\n                RHS.next_entry_id AS next_entry_id_other,\n                RHS.catalog_entry_name AS catalog_entry_name_other,\n                RHS.product_stock_number AS product_stock_number_other,\n                RHS.price_in_dollars AS price_in_dollars_other,\n                RHS.price_in_euros AS price_in_euros_other,\n                RHS.price_in_pounds AS price_in_pounds_other,\n                RHS.capacity AS capacity_other,\n                RHS.length AS length_other,\n                RHS.width AS width_other\n         FROM catalog_contents AS LHS\n         INNER JOIN catalog_contents AS RHS ON (LHS.catalog_entry_id = RHS.catalog_level_number\n                                                   AND LHS.capacity = RHS.height))))\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nORDER BY capacity ASC\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0004", "sql1": "\nSELECT catalog_level_name,\n       catalog_level_number\nFROM catalog_structure\nWHERE (catalog_level_number > 5\n       OR catalog_level_number > 10)\nORDER BY catalog_level_name\n", "sql2": "SELECT catalog_level_name,\n       catalog_level_number\nFROM Catalog_Structure\nWHERE catalog_level_number BETWEEN 5 AND 10", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0012", "sql1": "\nSELECT catalog_entry_name_other AS catalog_entry_name\nFROM\n  (SELECT catalog_level_number AS catalog_entry_id,\n          catalog_level_number,\n          parent_entry_id,\n          previous_entry_id,\n          next_entry_id,\n          catalog_entry_name,\n          product_stock_number,\n          price_in_dollars,\n          price_in_euros,\n          price_in_pounds,\n          capacity,\n          LENGTH,\n          height,\n          width,\n          catalog_level_number_other,\n          parent_entry_id_other,\n          next_entry_id_other,\n          catalog_entry_name_other,\n          product_stock_number_other,\n          price_in_dollars_other,\n          price_in_euros_other,\n          price_in_pounds_other,\n          capacity_other,\n          length_other,\n          height_other,\n          width_other\n   FROM\n     (SELECT catalog_entry_id,\n             catalog_level_number,\n             parent_entry_id,\n             catalog_entry_id AS previous_entry_id,\n             next_entry_id,\n             catalog_entry_name,\n             product_stock_number,\n             price_in_dollars,\n             price_in_euros,\n             price_in_pounds,\n             capacity,\n             LENGTH,\n             height,\n             width,\n             catalog_level_number_other,\n             parent_entry_id_other,\n             next_entry_id_other,\n             catalog_entry_name_other,\n             product_stock_number_other,\n             price_in_dollars_other,\n             price_in_euros_other,\n             price_in_pounds_other,\n             capacity_other,\n             length_other,\n             height_other,\n             width_other\n      FROM\n        (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n                LHS.catalog_level_number AS catalog_level_number,\n                LHS.parent_entry_id AS parent_entry_id,\n                LHS.previous_entry_id AS previous_entry_id,\n                LHS.next_entry_id AS next_entry_id,\n                LHS.catalog_entry_name AS catalog_entry_name,\n                LHS.product_stock_number AS product_stock_number,\n                LHS.price_in_dollars AS price_in_dollars,\n                LHS.price_in_euros AS price_in_euros,\n                LHS.price_in_pounds AS price_in_pounds,\n                LHS.capacity AS capacity,\n                LHS.length AS LENGTH,\n                LHS.height AS height,\n                LHS.width AS width,\n                RHS.catalog_level_number AS catalog_level_number_other,\n                RHS.parent_entry_id AS parent_entry_id_other,\n                RHS.next_entry_id AS next_entry_id_other,\n                RHS.catalog_entry_name AS catalog_entry_name_other,\n                RHS.product_stock_number AS product_stock_number_other,\n                RHS.price_in_dollars AS price_in_dollars_other,\n                RHS.price_in_euros AS price_in_euros_other,\n                RHS.price_in_pounds AS price_in_pounds_other,\n                RHS.capacity AS capacity_other,\n                RHS.length AS length_other,\n                RHS.height AS height_other,\n                RHS.width AS width_other\n         FROM catalog_contents AS LHS\n         INNER JOIN catalog_contents AS RHS ON (LHS.catalog_entry_id = RHS.previous_entry_id\n                                                   AND LHS.catalog_level_number = RHS.catalog_entry_id))))\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nORDER BY height DESC\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0015", "sql1": "\nSELECT catalog_entry_name\nFROM\n  (SELECT LHS.catalog_entry_id AS catalog_entry_id,\n          LHS.catalog_level_number AS catalog_level_number,\n          LHS.attribute_id AS attribute_id,\n          LHS.attribute_value AS attribute_value,\n          RHS.catalog_level_number AS catalog_level_number_other,\n          RHS.parent_entry_id AS parent_entry_id,\n          RHS.previous_entry_id AS previous_entry_id,\n          RHS.next_entry_id AS next_entry_id,\n          RHS.catalog_entry_name AS catalog_entry_name,\n          RHS.product_stock_number AS product_stock_number,\n          RHS.price_in_dollars AS price_in_dollars,\n          RHS.price_in_euros AS price_in_euros,\n          RHS.price_in_pounds AS price_in_pounds,\n          RHS.capacity AS capacity,\n          RHS.length AS LENGTH,\n          RHS.height AS height,\n          RHS.width AS width\n   FROM\n     (SELECT *\n      FROM catalog_contents_additional_attributes\n      WHERE (catalog_level_number = 8)) AS LHS\n   INNER JOIN catalog_contents AS RHS ON (LHS.catalog_entry_id = RHS.catalog_entry_id))\nORDER BY catalog_entry_name\n", "sql2": "SELECT t1.catalog_entry_name\nFROM Catalog_Contents AS t1\nJOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id\nWHERE t2.catalog_level_number = '8'", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0003", "sql1": "\nSELECT `attribute_data_type`\nFROM `attribute_definitions`\nWHERE (`attribute_name` = 'Green')\nORDER BY attribute_data_type\n", "sql2": "SELECT attribute_data_type\nFROM Attribute_Definitions\nWHERE attribute_name = 'Green'", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0019", "sql1": "\nSELECT date_of_latest_revision\nFROM\n  (SELECT date_of_latest_revision,\n          COUNT(*) AS n\n   FROM catalogs\n   GROUP BY date_of_latest_revision)\nWHERE (n >= 1)\nORDER BY date_of_latest_revision\n", "sql2": "SELECT date_of_latest_revision\nFROM Catalogs\nGROUP BY date_of_latest_revision\nHAVING count(*) > 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0018", "sql1": "\nSELECT catalog_entry_name,\n       capacity\nFROM catalog_contents\nWHERE (price_in_dollars > 700.0)\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name,\n       capacity\nFROM Catalog_Contents\nWHERE price_in_dollars > 700", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0002", "sql1": "\nSELECT attribute_data_type\nFROM\n  (SELECT attribute_data_type,\n          COUNT(*) AS n\n   FROM attribute_definitions\n   GROUP BY attribute_data_type)\nWHERE (n != 3)\nORDER BY attribute_data_type\n", "sql2": "SELECT attribute_data_type\nFROM Attribute_Definitions\nGROUP BY attribute_data_type\nHAVING count(*) > 3", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0014", "sql1": "\nSELECT catalog_entry_name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM catalog_contents\n      ORDER BY height)\n   LIMIT 2)\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nWHERE product_stock_number LIKE '2%'", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0001", "sql1": "\nSELECT catalog_entry_name\nFROM catalog_contents\nORDER BY catalog_entry_name\n", "sql2": "SELECT distinct(catalog_entry_name)\nFROM catalog_contents", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0017", "sql1": "\nSELECT attribute_name,\n       attribute_id\nFROM\n  (SELECT LHS.attribute_id AS attribute_id,\n          LHS.attribute_name AS attribute_name,\n          LHS.attribute_data_type AS attribute_data_type,\n          RHS.catalog_entry_id AS catalog_entry_id,\n          RHS.catalog_level_number AS catalog_level_number,\n          RHS.attribute_value AS attribute_value\n   FROM attribute_definitions AS LHS\n   LEFT JOIN catalog_contents_additional_attributes AS RHS ON (LHS.attribute_id = RHS.attribute_id))\nWHERE (attribute_value = 0)\nORDER BY attribute_name\n", "sql2": "SELECT t1.attribute_name,\n       t1.attribute_id\nFROM Attribute_Definitions AS t1\nJOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id\nWHERE t2.attribute_value = 0", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0021", "sql1": "\nSELECT catalog_entry_name\nFROM catalog_contents\nWHERE (next_entry_id > 8)\nORDER BY catalog_entry_name\n", "sql2": "SELECT catalog_entry_name\nFROM catalog_contents\nWHERE next_entry_id > 8", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0020", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM catalog_contents)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM catalog_contents", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0007", "sql1": "\nSELECT CATALOG_NAME,\n       date_of_publication\nFROM\n  (SELECT LHS.catalog_level_number AS catalog_level_number,\n          LHS.catalog_id AS catalog_id,\n          LHS.catalog_level_name AS catalog_level_name,\n          RHS.catalog_name AS CATALOG_NAME,\n          RHS.catalog_publisher AS catalog_publisher,\n          RHS.date_of_publication AS date_of_publication,\n          RHS.date_of_latest_revision AS date_of_latest_revision\n   FROM catalog_structure AS LHS\n   INNER JOIN catalogs AS RHS ON (LHS.catalog_id = RHS.catalog_id))\nWHERE (catalog_level_number >= 5)\nORDER BY CATALOG_NAME\n", "sql2": "SELECT t1.catalog_name,\n       t1.date_of_publication\nFROM catalogs AS t1\nJOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id\nWHERE catalog_level_number > 5", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/product_catalog/0010", "sql1": "\nSELECT catalog_level_name\nFROM\n  (SELECT catalog_level_number,\n          catalog_id,\n          catalog_level_name,\n          parent_entry_id,\n          previous_entry_id,\n          next_entry_id,\n          catalog_entry_name,\n          product_stock_number,\n          price_in_dollars,\n          price_in_euros,\n          price_in_pounds,\n          capacity,\n          LENGTH,\n          height,\n          width,\n          catalog_level_number AS catalog_entry_id\n   FROM\n     (SELECT LHS.catalog_level_number AS catalog_level_number,\n             LHS.catalog_id AS catalog_id,\n             LHS.catalog_level_name AS catalog_level_name,\n             RHS.parent_entry_id AS parent_entry_id,\n             RHS.previous_entry_id AS previous_entry_id,\n             RHS.next_entry_id AS next_entry_id,\n             RHS.catalog_entry_name AS catalog_entry_name,\n             RHS.product_stock_number AS product_stock_number,\n             RHS.price_in_dollars AS price_in_dollars,\n             RHS.price_in_euros AS price_in_euros,\n             RHS.price_in_pounds AS price_in_pounds,\n             RHS.capacity AS capacity,\n             RHS.length AS LENGTH,\n             RHS.height AS height,\n             RHS.width AS width\n      FROM catalog_structure AS LHS\n      INNER JOIN catalog_contents AS RHS ON (LHS.catalog_level_number = RHS.catalog_entry_id\n                                                AND LHS.catalog_id = RHS.catalog_level_number)))\nORDER BY catalog_level_name\n", "sql2": "SELECT t2.catalog_level_name\nFROM catalog_contents AS t1\nJOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number\nORDER BY t1.price_in_dollars\nLIMIT 1", "schema": "spider/product_catalog/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/product_catalog/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0013", "sql1": "\nSELECT country,\n       YEAR\nFROM\n  (SELECT LHS.market_id AS market_id,\n          LHS.country AS country,\n          LHS.number_cities AS number_cities,\n          RHS.estimation_id AS estimation_id,\n          RHS.low_estimate AS low_estimate,\n          RHS.high_estimate AS high_estimate,\n          RHS.film_id AS film_id,\n          RHS.type AS TYPE,\n          RHS.year AS YEAR\n   FROM market AS LHS\n   INNER JOIN film_market_estimation AS RHS ON (LHS.market_id = RHS.market_id))\nORDER BY country\n", "sql2": "SELECT T2.Country,\n       T1.Year\nFROM film_market_estimation AS T1\nJOIN market AS T2 ON T1.Market_ID = T2.Market_ID", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0005", "sql1": "\nSELECT TYPE\nFROM film_market_estimation\nWHERE (YEAR = 1995)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM film_market_estimation\nWHERE YEAR = 1995", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0004", "sql1": "\nSELECT low_estimate,\n       high_estimate\nFROM film_market_estimation\nORDER BY low_estimate\n", "sql2": "SELECT Low_Estimate,\n       High_Estimate\nFROM film_market_estimation", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0012", "sql1": "\nSELECT meannumber_cities AS avg_t2_number_cities_\nFROM\n  (SELECT film_id,\n          low_estimate,\n          AVG(number_cities) AS meannumber_cities\n   FROM\n     (SELECT LHS.market_id AS market_id,\n             LHS.country AS country,\n             LHS.number_cities AS number_cities,\n             RHS.estimation_id AS estimation_id,\n             RHS.low_estimate AS low_estimate,\n             RHS.high_estimate AS high_estimate,\n             RHS.film_id AS film_id,\n             RHS.type AS TYPE,\n             RHS.year AS YEAR\n      FROM market AS LHS\n      INNER JOIN\n        (SELECT *\n         FROM film_market_estimation\n         WHERE (low_estimate > 10000.0)) AS RHS ON (LHS.market_id = RHS.market_id))\n   GROUP BY film_id,\n            low_estimate)\nORDER BY avg_t2_number_cities_\n", "sql2": "SELECT avg(T2.Number_cities)\nFROM film_market_estimation AS T1\nJOIN market AS T2 ON T1.Market_ID = T2.Market_ID\nWHERE T1.Low_Estimate > 10000", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0008", "sql1": "\nSELECT country\nFROM market\nORDER BY country\n", "sql2": "SELECT Country\nFROM market\nORDER BY Country ASC", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0015", "sql1": "\nSELECT studio,\n       n AS count___\nFROM\n  (SELECT studio,\n          COUNT(*) AS n\n   FROM film\n   GROUP BY studio)\nORDER BY studio\n", "sql2": "SELECT Studio,\n       COUNT(*)\nFROM film\nGROUP BY Studio", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0003", "sql1": "\nSELECT meangross_in_dollar AS avg_gross_in_dollar_\nFROM\n  (SELECT AVG(gross_in_dollar) AS meangross_in_dollar\n   FROM film)\nORDER BY avg_gross_in_dollar_\n", "sql2": "SELECT avg(Gross_in_dollar)\nFROM film", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0022", "sql1": "\nSELECT DISTINCT studio\nFROM\n  (SELECT studio,\n          title,\n          AVG(gross_in_dollar) AS meangross_in_dollar\n   FROM\n     (SELECT *\n      FROM film\n      WHERE (gross_in_dollar != 4500000))\n   GROUP BY studio,\n            title)\nORDER BY studio\n", "sql2": "SELECT Studio\nFROM film\nGROUP BY Studio\nHAVING avg(Gross_in_dollar) >= 4500000", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0018", "sql1": "\nSELECT title\nFROM\n  (SELECT *\n   FROM film AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM film_market_estimation AS RHS\n        WHERE (LHS.film_id = RHS.film_id) ))\nORDER BY title\n", "sql2": "SELECT Title\nFROM film\nWHERE Film_ID NOT IN\n    (SELECT Film_ID\n     FROM film_market_estimation)", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0002", "sql1": "\nSELECT director\nFROM film\nORDER BY director\n", "sql2": "SELECT DISTINCT Director\nFROM film", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0014", "sql1": "\nSELECT `year`\nFROM\n  (SELECT `LHS`.`market_id` AS `market_id`,\n          `LHS`.`country` AS `country`,\n          `LHS`.`number_cities` AS `number_cities`,\n          `RHS`.`estimation_id` AS `estimation_id`,\n          `RHS`.`low_estimate` AS `low_estimate`,\n          `RHS`.`high_estimate` AS `high_estimate`,\n          `RHS`.`film_id` AS `film_id`,\n          `RHS`.`type` AS `type`,\n          `RHS`.`year` AS `year`\n   FROM `market` AS `LHS`\n   INNER JOIN `film_market_estimation` AS `RHS` ON (`LHS`.`market_id` = `RHS`.`market_id`))\nWHERE (`country` = 'Japan')\nORDER BY YEAR\n", "sql2": "SELECT T1.Year\nFROM film_market_estimation AS T1\nJOIN market AS T2 ON T1.Market_ID = T2.Market_ID\nWHERE T2.Country = 'Japan'\nORDER BY T1.Year DESC", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM film\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM film", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0017", "sql1": "\nSELECT studio\nFROM\n  (SELECT studio,\n          COUNT(*) AS n\n   FROM film\n   GROUP BY studio)\nWHERE (n = 2)\nORDER BY studio\n", "sql2": "SELECT Studio\nFROM film\nGROUP BY Studio\nHAVING COUNT(*) >= 2", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/film_rank/0011", "sql1": "\nSELECT director\nFROM\n  (SELECT LHS.estimation_id AS estimation_id,\n          LHS.low_estimate AS low_estimate,\n          LHS.high_estimate AS high_estimate,\n          LHS.film_id AS film_id,\n          LHS.type AS TYPE,\n          LHS.market_id AS market_id,\n          LHS.year AS YEAR,\n          RHS.title AS title,\n          RHS.studio AS studio,\n          RHS.director AS director,\n          RHS.gross_in_dollar AS gross_in_dollar\n   FROM film_market_estimation AS LHS\n   INNER JOIN film AS RHS ON (LHS.film_id = RHS.film_id))\nWHERE (YEAR = 1995)\nORDER BY director\n", "sql2": "SELECT DISTINCT T1.Director\nFROM film AS T1\nJOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID\nWHERE T2.Year = 1995", "schema": "spider/film_rank/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0004", "sql1": "\nSELECT `name`,\n       `year_join`\nFROM `artist`\nWHERE (`country` != 'United States')\nORDER BY name\n", "sql2": "SELECT name,\n       year_join\nFROM artist\nWHERE country != 'United States'", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM exhibition AS RHS\n        WHERE (LHS.artist_id = RHS.artist_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM artist\nWHERE artist_id NOT IN\n    (SELECT artist_id\n     FROM exhibition)", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0015", "sql1": "\nSELECT theme,\n       YEAR\nFROM exhibition\nORDER BY theme\n", "sql2": "SELECT theme,\n       YEAR\nFROM exhibition\nORDER BY ticket_price DESC", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0003", "sql1": "\nSELECT DISTINCT country\nFROM artist\nORDER BY country\n", "sql2": "SELECT DISTINCT country\nFROM artist", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0002", "sql1": "\nSELECT name,\n       age,\n       country\nFROM artist\nORDER BY name\n", "sql2": "SELECT name,\n       age,\n       country\nFROM artist\nORDER BY Year_Join", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM artist\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM artist", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM artist AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT *\n           FROM exhibition\n           WHERE (YEAR = 2004)) AS RHS\n        WHERE (LHS.artist_id = RHS.artist_id) ))\nORDER BY name\n", "sql2": "SELECT name\nFROM artist\nEXCEPT\nSELECT T2.name\nFROM exhibition AS T1\nJOIN artist AS T2 ON T1.artist_id = T2.artist_id\nWHERE T1.year = 2004", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0020", "sql1": "\nSELECT DISTINCT name\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.year_join AS year_join,\n          LHS.age AS age,\n          LHS.exhibition_id AS exhibition_id,\n          LHS.year AS YEAR,\n          LHS.theme AS theme,\n          LHS.ticket_price AS ticket_price,\n          RHS.date AS date,\n          RHS.attendance AS attendance,\n          RHS.meanattendance AS meanattendance\n   FROM\n     (SELECT LHS.artist_id AS artist_id,\n             LHS.name AS name,\n             LHS.country AS country,\n             LHS.year_join AS year_join,\n             LHS.age AS age,\n             RHS.exhibition_id AS exhibition_id,\n             RHS.year AS YEAR,\n             RHS.theme AS theme,\n             RHS.ticket_price AS ticket_price\n      FROM artist AS LHS\n      INNER JOIN exhibition AS RHS ON (LHS.artist_id = RHS.artist_id)) AS LHS\n   INNER JOIN\n     (SELECT exhibition_id, date, attendance,\n                                  AVG(attendance) OVER () AS meanattendance\n      FROM exhibition_record) AS RHS ON (LHS.exhibition_id = RHS.exhibition_id))\nWHERE (meanattendance <= 200.0\n       OR meanattendance != attendance)\nORDER BY name\n", "sql2": "SELECT T3.name\nFROM exhibition_record AS T1\nJOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id\nJOIN artist AS T3 ON T3.artist_id = T2.artist_id\nGROUP BY T3.artist_id\nHAVING avg(T1.attendance) > 200", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/theme_gallery/0007", "sql1": "\nSELECT DISTINCT name_other AS name\nFROM\n  (SELECT LHS.artist_id AS artist_id,\n          LHS.name AS name,\n          LHS.country AS country,\n          LHS.year_join AS year_join,\n          LHS.age AS age,\n          LHS.maxyear_join AS maxyear_join,\n          RHS.artist_id AS artist_id_other,\n          RHS.name AS name_other,\n          RHS.country AS country_other,\n          RHS.year_join AS year_join_other,\n          RHS.age AS age_other\n   FROM\n     (SELECT artist_id,\n             name,\n             country,\n             year_join,\n             age,\n             MAX(year_join) OVER () AS maxyear_join\n      FROM artist) AS LHS\n   CROSS JOIN artist AS RHS)\nWHERE (maxyear_join <= year_join_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM artist\nORDER BY year_join DESC\nLIMIT 1", "schema": "spider/theme_gallery/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0013", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `state_province_county`,\n          COUNT(*) AS `n`\n   FROM `addresses`\n   GROUP BY `state_province_county`)\nWHERE (`state_province_county` = 'Colorado')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM addresses\nWHERE state_province_county = 'Colorado'", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0004", "sql1": "\nSELECT `payment_method_code`,\n       `party_phone`\nFROM `parties`\nWHERE (`party_email` = 'enrico09@example.com')\nORDER BY payment_method_code\n", "sql2": "SELECT payment_method_code,\n       party_phone\nFROM parties\nWHERE party_email = 'enrico09@example.com'", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0019", "sql1": "\nSELECT DISTINCT organization_name\nFROM\n  (SELECT LHS.organization_id AS organization_id,\n          LHS.date_formed AS date_formed,\n          LHS.organization_name AS organization_name,\n          LHS.uk_vat_number AS uk_vat_number,\n          RHS.individual_id AS individual_id\n   FROM organizations AS LHS\n   INNER JOIN\n     (SELECT individual_id,\n             MAX(n) OVER () AS n\n      FROM\n        (SELECT individual_id,\n                COUNT(*) AS n\n         FROM organization_contact_individuals\n         GROUP BY individual_id)) AS RHS ON (LHS.organization_id = RHS.n))\nORDER BY organization_name\n", "sql2": "SELECT t1.organization_name\nFROM organizations AS t1\nJOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id\nGROUP BY t1.organization_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0002", "sql1": "\nSELECT DISTINCT form_type_code\nFROM forms\nORDER BY form_type_code\n", "sql2": "SELECT DISTINCT form_type_code\nFROM forms", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0014", "sql1": "\nSELECT payment_method_code\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT payment_method_code,\n                COUNT(*) AS n\n         FROM parties\n         GROUP BY payment_method_code)\n      ORDER BY n DESC)\n   LIMIT 3)\n", "sql2": "SELECT payment_method_code\nFROM parties\nGROUP BY payment_method_code\nHAVING count(*) > 3", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0001", "sql1": "\nSELECT individual_first_name,\n       individual_middle_name,\n       individual_last_name\nFROM individuals\nORDER BY individual_first_name\n", "sql2": "SELECT individual_first_name,\n       individual_middle_name,\n       individual_last_name\nFROM individuals\nORDER BY individual_last_name", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0017", "sql1": "\nSELECT party_email\nFROM\n  (SELECT LHS.party_id AS party_id,\n          LHS.payment_method_code AS payment_method_code,\n          LHS.party_phone AS party_phone,\n          LHS.party_email AS party_email\n   FROM parties AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM party_services\n         GROUP BY customer_id)) AS RHS ON (LHS.party_id = RHS.n))\nORDER BY party_email\n", "sql2": "SELECT t1.party_email\nFROM parties AS t1\nJOIN party_services AS t2 ON t1.party_id = t2.customer_id\nGROUP BY t1.party_email\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0020", "sql1": "\nSELECT individual_last_name\nFROM\n  (SELECT *\n   FROM individuals AS LHS\n   WHERE EXISTS\n       (SELECT 1\n        FROM organization_contact_individuals AS RHS\n        WHERE (LHS.individual_id = RHS.individual_id) ))\nORDER BY individual_last_name\n", "sql2": "SELECT DISTINCT t1.individual_last_name\nFROM individuals AS t1\nJOIN organization_contact_individuals AS t2 ON t1.individual_id = t2.individual_id", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0016", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT payment_method_code) OVER () AS count_distinct_payment_method_code_\nFROM parties\nORDER BY count_distinct_payment_method_code_\n", "sql2": "SELECT count(DISTINCT payment_method_code)\nFROM parties", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0007", "sql1": "\nSELECT DISTINCT organization_name\nFROM\n  (SELECT LHS.organization_id AS organization_id,\n          LHS.date_formed AS date_formed,\n          LHS.organization_name AS organization_name,\n          LHS.uk_vat_number AS uk_vat_number,\n          LHS.maxdate_formed AS maxdate_formed,\n          RHS.organization_id AS organization_id_other,\n          RHS.date_formed AS date_formed_other,\n          RHS.organization_name AS organization_name_other,\n          RHS.uk_vat_number AS uk_vat_number_other,\n          RHS.maxdate_formed AS maxdate_formed_other\n   FROM\n     (SELECT organization_id,\n             date_formed,\n             organization_name,\n             uk_vat_number,\n             MAX(date_formed) OVER () AS maxdate_formed\n      FROM organizations) AS LHS\n   CROSS JOIN\n     (SELECT organization_id,\n             date_formed,\n             organization_name,\n             uk_vat_number,\n             MAX(date_formed) OVER () AS maxdate_formed\n      FROM organizations) AS RHS)\nWHERE (date_formed >= maxdate_formed_other\n       AND maxdate_formed >= maxdate_formed_other)\nORDER BY organization_name\n", "sql2": "SELECT organization_name\nFROM organizations\nORDER BY date_formed DESC\nLIMIT 1", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0011", "sql1": "\nSELECT DISTINCT service_name\nFROM\n  (SELECT *\n   FROM services AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT LHS.booking_id AS booking_id,\n                  LHS.customer_id AS customer_id,\n                  LHS.service_id AS service_id,\n                  LHS.service_datetime AS service_datetime,\n                  LHS.booking_made_date AS booking_made_date,\n                  RHS.service_type_code AS service_type_code,\n                  RHS.service_name AS service_name,\n                  RHS.service_descriptio AS service_descriptio\n           FROM party_services AS LHS\n           LEFT JOIN services AS RHS ON (LHS.service_id = RHS.service_id)) AS RHS\n        WHERE (LHS.service_name = RHS.service_name) ))\nORDER BY service_name\n", "sql2": "SELECT service_name\nFROM services\nEXCEPT\nSELECT t1.service_name\nFROM services AS t1\nJOIN party_services AS t2 ON t1.service_id = t2.service_id", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0010", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM services\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM services", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/e_government/0006", "sql1": "\nSELECT organization_name\nFROM organizations\nORDER BY organization_name\n", "sql2": "SELECT organization_name\nFROM organizations\nORDER BY date_formed ASC", "schema": "spider/e_government/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/e_government/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0009", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS `count___`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`policy_id` AS `policy_id`,\n          `LHS`.`date_opened` AS `date_opened`,\n          `LHS`.`date_closed` AS `date_closed`,\n          `RHS`.`customer_name` AS `customer_name`\n   FROM `customers_policies` AS `LHS`\n   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))\nWHERE (`customer_name` = 'Dayana Robel')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM customers AS t1\nJOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_name = 'Dayana Robel'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0013", "sql1": "\nSELECT service_name\nFROM services\nORDER BY service_name\n", "sql2": "SELECT service_name\nFROM services\nORDER BY service_name", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0005", "sql1": "\nSELECT policy_type_code\nFROM\n  (SELECT policy_type_code,\n          COUNT(*) AS n\n   FROM available_policies\n   GROUP BY policy_type_code)\nWHERE (n > 4)\nORDER BY policy_type_code\n", "sql2": "SELECT policy_type_code\nFROM available_policies\nGROUP BY policy_type_code\nHAVING count(*) > 4", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0008", "sql1": "\nSELECT effective_date\nFROM\n  (SELECT effective_date,\n          MAX(sumsettlement_amount) AS maxsumsettlement_amount\n   FROM\n     (SELECT effective_date,\n             settlement_id,\n             SUM(settlement_amount) AS sumsettlement_amount\n      FROM\n        (SELECT claim_id,\n                fnol_id,\n                effective_date,\n                claim_id_other,\n                effective_date_other,\n                settlement_amount,\n                claim_id AS settlement_id\n         FROM\n           (SELECT LHS.claim_id AS claim_id,\n                   LHS.fnol_id AS fnol_id,\n                   LHS.effective_date AS effective_date,\n                   RHS.claim_id AS claim_id_other,\n                   RHS.effective_date AS effective_date_other,\n                   RHS.settlement_amount AS settlement_amount\n            FROM claims AS LHS\n            INNER JOIN settlements AS RHS ON (LHS.claim_id = RHS.settlement_id)))\n      GROUP BY effective_date,\n               settlement_id)\n   GROUP BY effective_date)\nORDER BY effective_date\n", "sql2": "SELECT t1.Effective_Date\nFROM claims AS t1\nJOIN settlements AS t2 ON t1.claim_id = t2.claim_id\nGROUP BY t1.claim_id\nORDER BY sum(t2.settlement_amount) DESC\nLIMIT 1", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0015", "sql1": "\nSELECT customer_name\nFROM\n  (SELECT *\n   FROM customers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM first_notification_of_loss AS RHS\n        WHERE (LHS.customer_id = RHS.customer_id) ))\nORDER BY customer_name\n", "sql2": "SELECT customer_name\nFROM customers\nEXCEPT\nSELECT t1.customer_name\nFROM customers AS t1\nJOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0019", "sql1": "\nSELECT DISTINCT MAX(settlement_amount) OVER () AS max_settlement_amount_,\n                                            minsettlement_amount AS min_settlement_amount_\nFROM\n  (SELECT settlement_id,\n          claim_id,\n          effective_date,\n          settlement_amount,\n          MIN(settlement_amount) OVER () AS minsettlement_amount\n   FROM settlements)\nORDER BY max_settlement_amount_\n", "sql2": "SELECT max(settlement_amount),\n       min(settlement_amount)\nFROM settlements", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0002", "sql1": "\nSELECT `customer_phone`\nFROM `available_policies`\nWHERE (`policy_type_code` = 'Life Insurance')\nORDER BY customer_phone\n", "sql2": "SELECT customer_phone\nFROM available_policies\nWHERE policy_type_code = 'Life Insurance'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0014", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM services\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM services", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0001", "sql1": "\nSELECT customer_phone\nFROM available_policies\nORDER BY customer_phone\n", "sql2": "SELECT customer_phone\nFROM available_policies", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0020", "sql1": "\nSELECT customer_id,\n       customer_name\nFROM customers\nORDER BY customer_id\n", "sql2": "SELECT customer_id,\n       customer_name\nFROM customers\nORDER BY customer_id ASC", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0016", "sql1": "\nSELECT `customer_name`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`fnol_id` AS `fnol_id`,\n          `LHS`.`policy_id` AS `policy_id`,\n          `LHS`.`service_id` AS `service_id`,\n          `RHS`.`service_name` AS `service_name`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `RHS`.`fnol_id` AS `fnol_id`,\n             `RHS`.`policy_id` AS `policy_id`,\n             `RHS`.`service_id` AS `service_id`\n      FROM `customers` AS `LHS`\n      INNER JOIN `first_notification_of_loss` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `services`\n      WHERE (`service_name` = 'Close a policy'\n             OR `service_name` = 'Upgrade a policy')) AS RHS ON (LHS.service_id = RHS.service_id))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id\nJOIN services AS t3 ON t2.service_id = t3.service_id\nWHERE t3.service_name = 'Close a policy'\n  OR t3.service_name = 'Upgrade a policy'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0007", "sql1": "\nSELECT DISTINCT service_name\nFROM\n  (SELECT LHS.service_id AS service_id,\n          LHS.service_name AS service_name,\n          LHS.fnol_id AS fnol_id,\n          LHS.customer_id AS customer_id,\n          LHS.policy_id AS policy_id,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.service_id AS service_id,\n             LHS.service_name AS service_name,\n             LHS.fnol_id AS fnol_id,\n             LHS.customer_id AS customer_id,\n             LHS.policy_id AS policy_id,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.service_id AS service_id,\n                LHS.service_name AS service_name,\n                RHS.fnol_id AS fnol_id,\n                RHS.customer_id AS customer_id,\n                RHS.policy_id AS policy_id\n         FROM services AS LHS\n         INNER JOIN first_notification_of_loss AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS\n      INNER JOIN\n        (SELECT service_id,\n                COUNT(*) AS n\n         FROM first_notification_of_loss\n         GROUP BY service_id) AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM\n        (SELECT service_id,\n                COUNT(*) AS n\n         FROM first_notification_of_loss\n         GROUP BY service_id)\n      WHERE (n > 2)) AS RHS ON (LHS.service_id = RHS.service_id\n                                AND LHS.n = RHS.n))\nORDER BY service_name\n", "sql2": "SELECT t2.service_name\nFROM first_notification_of_loss AS t1\nJOIN services AS t2 ON t1.service_id = t2.service_id\nGROUP BY t1.service_id\nHAVING count(*) > 2", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0011", "sql1": "\nSELECT DISTINCT `policy_type_code`\nFROM\n  (SELECT `LHS`.`customer_id` AS `customer_id`,\n          `LHS`.`customer_name` AS `customer_name`,\n          `LHS`.`policy_id` AS `policy_id`,\n          `LHS`.`policy_type_code` AS `policy_type_code`,\n          `LHS`.`customer_phone` AS `customer_phone`,\n          `LHS`.`date_opened` AS `date_opened`,\n          `LHS`.`date_closed` AS `date_closed`\n   FROM\n     (SELECT `LHS`.`customer_id` AS `customer_id`,\n             `LHS`.`customer_name` AS `customer_name`,\n             `LHS`.`policy_id` AS `policy_id`,\n             `LHS`.`policy_type_code` AS `policy_type_code`,\n             `LHS`.`customer_phone` AS `customer_phone`,\n             `RHS`.`date_opened` AS `date_opened`,\n             `RHS`.`date_closed` AS `date_closed`\n      FROM\n        (SELECT `LHS`.`customer_id` AS `customer_id`,\n                `LHS`.`customer_name` AS `customer_name`,\n                `RHS`.`policy_id` AS `policy_id`,\n                `RHS`.`policy_type_code` AS `policy_type_code`,\n                `RHS`.`customer_phone` AS `customer_phone`\n         FROM `customers` AS `LHS`\n         CROSS JOIN `available_policies` AS `RHS`) AS `LHS`\n      INNER JOIN `customers_policies` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`\n                                                      AND `LHS`.`policy_id` = `RHS`.`policy_id`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `customers`\n      WHERE (`customer_name` = 'Dayana Robel')) AS RHS ON (LHS.customer_id = RHS.customer_id\n                                                           AND LHS.customer_name = RHS.customer_name))\nORDER BY policy_type_code\n", "sql2": "SELECT DISTINCT t3.policy_type_code\nFROM customers AS t1\nJOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id\nJOIN available_policies AS t3 ON t2.policy_id = t3.policy_id\nWHERE t1.customer_name = 'Dayana Robel'", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0010", "sql1": "\nSELECT DISTINCT customer_name\nFROM\n  (SELECT LHS.customer_id AS customer_id,\n          LHS.customer_name AS customer_name,\n          LHS.policy_id AS policy_id,\n          LHS.date_opened AS date_opened,\n          LHS.date_closed AS date_closed,\n          LHS.n AS n\n   FROM\n     (SELECT LHS.customer_id AS customer_id,\n             LHS.customer_name AS customer_name,\n             LHS.policy_id AS policy_id,\n             LHS.date_opened AS date_opened,\n             LHS.date_closed AS date_closed,\n             RHS.n AS n\n      FROM\n        (SELECT LHS.customer_id AS customer_id,\n                LHS.customer_name AS customer_name,\n                RHS.policy_id AS policy_id,\n                RHS.date_opened AS date_opened,\n                RHS.date_closed AS date_closed\n         FROM customers AS LHS\n         INNER JOIN customers_policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n      INNER JOIN\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customers_policies\n         GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS\n   INNER JOIN\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT customer_id,\n                COUNT(*) AS n\n         FROM customers_policies\n         GROUP BY customer_id)) AS RHS ON (LHS.n = RHS.n))\nORDER BY customer_name\n", "sql2": "SELECT t1.customer_name\nFROM customers AS t1\nJOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id\nGROUP BY t1.customer_name\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/insurance_fnol/0006", "sql1": "\nSELECT DISTINCT SUM(settlement_amount) OVER () AS sum_settlement_amount_,\n                                            meansettlement_amount AS avg_settlement_amount_\nFROM\n  (SELECT settlement_id,\n          claim_id,\n          effective_date,\n          settlement_amount,\n          AVG(settlement_amount) OVER () AS meansettlement_amount\n   FROM settlements)\nORDER BY sum_settlement_amount_\n", "sql2": "SELECT sum(settlement_amount),\n       avg(settlement_amount)\nFROM settlements", "schema": "spider/insurance_fnol/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/insurance_fnol/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0009", "sql1": "\nSELECT fname,\n       lname\nFROM student\nWHERE (major = 600)\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM Student\nWHERE Major = 600;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0005", "sql1": "\nSELECT `restypedescription`\nFROM `restaurant_type`\nWHERE (`restypename` = 'Sandwich')\nORDER BY restypedescription\n", "sql2": "SELECT ResTypeDescription\nFROM Restaurant_Type\nWHERE ResTypeName = 'Sandwich';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0004", "sql1": "\nSELECT restypename\nFROM restaurant_type\nORDER BY restypename\n", "sql2": "SELECT ResTypeName\nFROM Restaurant_Type;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0008", "sql1": "\nSELECT `sex`\nFROM `student`\nWHERE (`fname` = 'Linda'\n       AND `lname` = 'Smith')\nORDER BY sex\n", "sql2": "SELECT Sex\nFROM Student\nWHERE Fname = 'Linda'\n  AND Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0015", "sql1": "\nSELECT fname,\n       lname\nFROM student\nWHERE (age > 18\n       AND major >= 600)\nORDER BY fname\n", "sql2": "SELECT Fname,\n       Lname\nFROM Student\nWHERE Age > 18\n  AND Major = 600;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0003", "sql1": "\nSELECT `rating`\nFROM `restaurant`\nWHERE (`resname` = 'Subway')\nORDER BY rating\n", "sql2": "SELECT Rating\nFROM Restaurant\nWHERE ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0019", "sql1": "\nSELECT `resid` AS `count___`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`resid` AS `resid`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`spent` AS `spent`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`resname` AS `resname`,\n          `LHS`.`address` AS `address`,\n          `LHS`.`rating` AS `rating`,\n          `RHS`.`n` AS `n`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`resid` AS `resid`,\n             `LHS`.`time` AS `time`,\n             `LHS`.`spent` AS `spent`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `RHS`.`resname` AS `resname`,\n             `RHS`.`address` AS `address`,\n             `RHS`.`rating` AS `rating`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`resid` AS `resid`,\n                `LHS`.`time` AS `time`,\n                `LHS`.`spent` AS `spent`,\n                `RHS`.`lname` AS `lname`,\n                `RHS`.`fname` AS `fname`,\n                `RHS`.`age` AS `age`,\n                `RHS`.`sex` AS `sex`,\n                `RHS`.`major` AS `major`,\n                `RHS`.`advisor` AS `advisor`,\n                `RHS`.`city_code` AS `city_code`\n         FROM `visits_restaurant` AS `LHS`\n         INNER JOIN\n           (SELECT *\n            FROM `student`\n            WHERE (`fname` != 'Linda'\n                   OR `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `restaurant`\n         WHERE (`resname` = 'Subway')) AS `RHS` ON (`LHS`.`resid` = `RHS`.`resid`)) AS `LHS`\n   INNER JOIN\n     (SELECT `age`,\n             `fname`,\n             COUNT(*) AS `n`\n      FROM `student`\n      WHERE (`fname` != 'Linda'\n             OR `lname` = 'Smith')\n      GROUP BY age,\n               fname) AS RHS ON (LHS.fname = RHS.fname\n                                 AND LHS.age = RHS.age))\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nJOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID\nJOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID\nWHERE Student.Fname = 'Linda'\n  AND Student.Lname = 'Smith'\n  AND Restaurant.ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0018", "sql1": "\nSELECT `spent` AS `sum_spent_`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`resid` AS `resid`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`spent` AS `spent`,\n          `LHS`.`sumspent` AS `sumspent`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`resid` AS `resid`,\n             `LHS`.`time` AS `time`,\n             `LHS`.`spent` AS `spent`,\n             `RHS`.`sumspent` AS `sumspent`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`resid` AS `resid`,\n                `RHS`.`time` AS `time`,\n                `RHS`.`spent` AS `spent`\n         FROM `student` AS `LHS`\n         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN\n        (SELECT `stuid`,\n                `resid`,\n                `time`,\n                `spent`,\n                SUM(`spent`) OVER () AS `sumspent`\n         FROM `visits_restaurant`) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                   AND `LHS`.`resid` = `RHS`.`resid`\n                                                   AND `LHS`.`time` = `RHS`.`time`\n                                                   AND `LHS`.`spent` = `RHS`.`spent`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `student`\n      WHERE (`fname` = 'Linda'\n             AND `lname` = 'Smith')) AS RHS ON (LHS.stuid = RHS.stuid\n                                                AND LHS.lname = RHS.lname\n                                                AND LHS.fname = RHS.fname\n                                                AND LHS.age = RHS.age\n                                                AND LHS.sex = RHS.sex\n                                                AND LHS.major = RHS.major\n                                                AND LHS.advisor = RHS.advisor\n                                                AND LHS.city_code = RHS.city_code))\nORDER BY sum_spent_\n", "sql2": "SELECT sum(Spent)\nFROM Student\nJOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID\nWHERE Student.Fname = 'Linda'\n  AND Student.Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0002", "sql1": "\nSELECT `address`\nFROM `restaurant`\nWHERE (`resname` = 'Subway')\nORDER BY address\n", "sql2": "SELECT Address\nFROM Restaurant\nWHERE ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0014", "sql1": "\nSELECT major,\n       n AS count___\nFROM\n  (SELECT major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY major)\nWHERE (n >= 2\n       AND n < 30)\nORDER BY major\n", "sql2": "SELECT Major,\n       count(*)\nFROM Student\nGROUP BY Major\nHAVING count(Major) BETWEEN 2 AND 30;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0001", "sql1": "\nSELECT resname\nFROM restaurant\nORDER BY resname\n", "sql2": "SELECT ResName\nFROM Restaurant;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0017", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT LHS.resid AS resid,\n          LHS.restypeid AS restypeid,\n          LHS.restypename AS restypename,\n          LHS.restypedescription AS restypedescription,\n          RHS.resname AS resname,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.resid AS resid,\n             LHS.restypeid AS restypeid,\n             RHS.restypename AS restypename,\n             RHS.restypedescription AS restypedescription\n      FROM type_of_restaurant AS LHS\n      INNER JOIN restaurant_type AS RHS ON (LHS.restypeid = RHS.restypeid)) AS LHS\n   CROSS JOIN\n     (SELECT resname,\n             COUNT(*) AS n\n      FROM restaurant\n      GROUP BY resname) AS RHS)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Restaurant\nJOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID\nJOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID\nGROUP BY Type_Of_Restaurant.ResTypeID\nHAVING Restaurant_Type.ResTypeName = 'Sandwich'", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0020", "sql1": "\nSELECT `time`\nFROM\n  (SELECT `LHS`.`stuid` AS `stuid`,\n          `LHS`.`lname` AS `lname`,\n          `LHS`.`fname` AS `fname`,\n          `LHS`.`age` AS `age`,\n          `LHS`.`sex` AS `sex`,\n          `LHS`.`major` AS `major`,\n          `LHS`.`advisor` AS `advisor`,\n          `LHS`.`city_code` AS `city_code`,\n          `LHS`.`resid` AS `resid`,\n          `LHS`.`time` AS `time`,\n          `LHS`.`spent` AS `spent`,\n          `RHS`.`resname` AS `resname`,\n          `RHS`.`address` AS `address`,\n          `RHS`.`rating` AS `rating`\n   FROM\n     (SELECT `LHS`.`stuid` AS `stuid`,\n             `LHS`.`lname` AS `lname`,\n             `LHS`.`fname` AS `fname`,\n             `LHS`.`age` AS `age`,\n             `LHS`.`sex` AS `sex`,\n             `LHS`.`major` AS `major`,\n             `LHS`.`advisor` AS `advisor`,\n             `LHS`.`city_code` AS `city_code`,\n             `LHS`.`resid` AS `resid`,\n             `LHS`.`time` AS `time`,\n             `LHS`.`spent` AS `spent`\n      FROM\n        (SELECT `LHS`.`stuid` AS `stuid`,\n                `LHS`.`lname` AS `lname`,\n                `LHS`.`fname` AS `fname`,\n                `LHS`.`age` AS `age`,\n                `LHS`.`sex` AS `sex`,\n                `LHS`.`major` AS `major`,\n                `LHS`.`advisor` AS `advisor`,\n                `LHS`.`city_code` AS `city_code`,\n                `RHS`.`resid` AS `resid`,\n                `RHS`.`time` AS `time`,\n                `RHS`.`spent` AS `spent`\n         FROM `student` AS `LHS`\n         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM `student`\n         WHERE (`fname` != 'Linda'\n                OR `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`\n                                                    AND `LHS`.`lname` = `RHS`.`lname`\n                                                    AND `LHS`.`fname` = `RHS`.`fname`\n                                                    AND `LHS`.`age` = `RHS`.`age`\n                                                    AND `LHS`.`sex` = `RHS`.`sex`\n                                                    AND `LHS`.`major` = `RHS`.`major`\n                                                    AND `LHS`.`advisor` = `RHS`.`advisor`\n                                                    AND `LHS`.`city_code` = `RHS`.`city_code`)) AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `restaurant`\n      WHERE (`resname` = 'Subway')) AS RHS ON (LHS.resid = RHS.resid))\nORDER BY TIME\n", "sql2": "SELECT TIME\nFROM Student\nJOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID\nJOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID\nWHERE Student.Fname = 'Linda'\n  AND Student.Lname = 'Smith'\n  AND Restaurant.ResName = 'Subway';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0007", "sql1": "\nSELECT `age`\nFROM `student`\nWHERE (`fname` = 'Linda'\n       AND `lname` = 'Smith')\nORDER BY age\n", "sql2": "SELECT Age\nFROM Student\nWHERE Fname = 'Linda'\n  AND Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0011", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT advisor,\n          major,\n          COUNT(*) AS n\n   FROM student\n   GROUP BY advisor,\n            major)\nWHERE (advisor = 1121\n       OR n > 1121)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Student\nWHERE Advisor = 1121;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0010", "sql1": "\nSELECT `city_code`\nFROM `student`\nWHERE (`fname` = 'Linda'\n       AND `lname` = 'Smith')\nORDER BY city_code\n", "sql2": "SELECT city_code\nFROM Student\nWHERE Fname = 'Linda'\n  AND Lname = 'Smith';", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/restaurant_1/0006", "sql1": "\nSELECT resname_other AS resname,\n       rating_other AS rating\nFROM\n  (SELECT LHS.resid AS resid,\n          LHS.resname AS resname,\n          LHS.address AS address,\n          LHS.rating AS rating,\n          RHS.resid AS resid_other,\n          RHS.resname AS resname_other,\n          RHS.address AS address_other,\n          RHS.rating AS rating_other\n   FROM restaurant AS LHS\n   CROSS JOIN restaurant AS RHS)\nWHERE (rating < rating_other)\nORDER BY resname\n", "sql2": "SELECT ResName,\n       Rating\nFROM Restaurant\nORDER BY Rating DESC\nLIMIT 1;", "schema": "spider/restaurant_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0009", "sql1": "\nSELECT DISTINCT SUM(`beds`) OVER () AS `sum_beds_`\nFROM `rooms`\nWHERE (`bedtype` = 'King')\nORDER BY sum_beds_\n", "sql2": "SELECT sum(beds)\nFROM Rooms\nWHERE bedtype = 'King';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0033", "sql1": "\nSELECT roomname,\n       n AS count___,\n       roomid AS room\nFROM\n  (SELECT LHS.roomid AS roomid,\n          LHS.roomname AS roomname,\n          LHS.beds AS beds,\n          LHS.bedtype AS bedtype,\n          LHS.maxoccupancy AS maxoccupancy,\n          LHS.baseprice AS baseprice,\n          LHS.decor AS decor,\n          RHS.n AS n\n   FROM rooms AS LHS\n   INNER JOIN\n     (SELECT room,\n             COUNT(*) AS n\n      FROM reservations\n      GROUP BY room) AS RHS ON (LHS.roomid = RHS.room))\nORDER BY roomname\nFrom cffi callback <function _processevents at 0x7f115d0b1790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n", "sql2": "SELECT T2.roomName,\n       count(*),\n       T1.Room\nFROM Reservations AS T1\nJOIN Rooms AS T2 ON T1.Room = T2.RoomId\nGROUP BY T1.Room", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0013", "sql1": "\nSELECT bedtype,\n       meanbaseprice AS avg_baseprice_\nFROM\n  (SELECT bedtype,\n          AVG(baseprice) AS meanbaseprice\n   FROM rooms\n   GROUP BY bedtype)\nORDER BY bedtype\n", "sql2": "SELECT bedType,\n       avg(basePrice)\nFROM Rooms\nGROUP BY bedType;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0005", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `firstname`,\n          `lastname`,\n          COUNT(*) AS `n`\n   FROM `reservations`\n   GROUP BY `firstname`,\n            `lastname`)\nWHERE (`firstname` = 'ROY'\n       OR `lastname` = 'SWEAZY')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Reservations\nWHERE FirstName = 'ROY'\n  AND LastName = 'SWEAZY';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0029", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT bedtype) OVER () AS count_distinct_bedtype_\nFROM rooms\nORDER BY count_distinct_bedtype_\n", "sql2": "SELECT count(DISTINCT bedType)\nFROM Rooms;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0028", "sql1": "\nSELECT `roomname`\nFROM `rooms`\nWHERE (`bedtype` = 'King'\n       OR `bedtype` = 'Queen')\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nWHERE bedType = 'King'\n  OR bedType = 'Queen';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0004", "sql1": "\nSELECT `kids`\nFROM `reservations`\nWHERE (`firstname` = 'ROY'\n       OR `lastname` = 'SWEAZY')\nORDER BY kids\n", "sql2": "SELECT kids\nFROM Reservations\nWHERE FirstName = 'ROY'\n  AND LastName = 'SWEAZY';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0012", "sql1": "\nSELECT `decor`\nFROM `rooms`\nWHERE (`roomname` = 'Recluse and defiance')\nORDER BY decor\n", "sql2": "SELECT decor\nFROM Rooms\nWHERE roomName = 'Recluse and defiance';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0024", "sql1": "\nSELECT `decor`,\n       `n` AS `count___`\nFROM\n  (SELECT `bedtype`,\n          `decor`,\n          COUNT(*) AS `n`\n   FROM `rooms`\n   GROUP BY `bedtype`,\n            `decor`)\nWHERE (`bedtype` = 'King')\nORDER BY decor\n", "sql2": "SELECT decor,\n       count(*)\nFROM Rooms\nWHERE bedType = 'King'\nGROUP BY decor;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0019", "sql1": "\nSELECT `n` AS `count___`\nFROM\n  (SELECT `bedtype`,\n          COUNT(*) AS `n`\n   FROM `rooms`\n   GROUP BY `bedtype`)\nWHERE (`bedtype` = 'King')\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Rooms\nWHERE bedType = 'King';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0023", "sql1": "\nSELECT `roomname`,\n       `bedtype`\nFROM `rooms`\nWHERE (`decor` = 'traditional')\nORDER BY roomname\n", "sql2": "SELECT roomName,\n       bedType\nFROM Rooms\nWHERE decor = 'traditional';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0035", "sql1": "\nSELECT roomname\nFROM rooms\nWHERE (baseprice > 120\n       AND baseprice <= 150)\nORDER BY roomname\n", "sql2": "SELECT roomname\nFROM rooms\nWHERE baseprice BETWEEN 120 AND 150", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0018", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM rooms)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM Rooms;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0002", "sql1": "\nSELECT roomname,\n       roomid\nFROM rooms\nWHERE (baseprice >= 160\n       OR maxoccupancy < 2)\nORDER BY roomname\n", "sql2": "SELECT roomName,\n       RoomId\nFROM Rooms\nWHERE basePrice > 160\n  AND maxOccupancy > 2;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0014", "sql1": "\nSELECT `summaxoccupancy` AS `sum_maxoccupancy_`\nFROM\n  (SELECT `decor`,\n          SUM(`maxoccupancy`) AS `summaxoccupancy`\n   FROM `rooms`\n   GROUP BY `decor`)\nWHERE (`decor` = 'modern')\nORDER BY sum_maxoccupancy_\n", "sql2": "SELECT sum(maxOccupancy)\nFROM Rooms\nWHERE decor = 'modern';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0001", "sql1": "\nSELECT `roomname`\nFROM\n  (SELECT *\n   FROM `rooms`\n   WHERE (`decor` = 'modern'\n          AND baseprice != 160))\nWHERE (beds = 2\n       OR baseprice = 2)\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nWHERE basePrice < 160\n  AND beds = 2\n  AND decor = 'modern';", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0020", "sql1": "\nSELECT bedtype,\n       n AS count___\nFROM\n  (SELECT bedtype,\n          COUNT(*) AS n\n   FROM rooms\n   GROUP BY bedtype)\nORDER BY bedtype\n", "sql2": "SELECT bedType,\n       count(*)\nFROM Rooms\nGROUP BY bedType;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0027", "sql1": "\nSELECT decor,\n       n AS count___\nFROM\n  (SELECT decor,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM rooms\n      WHERE (baseprice >= 120))\n   GROUP BY decor)\nORDER BY decor\n", "sql2": "SELECT decor,\n       count(*)\nFROM Rooms\nWHERE basePrice > 120\nGROUP BY decor;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0010", "sql1": "\nSELECT `roomname`,\n       `decor`\nFROM `rooms`\nWHERE (`bedtype` = 'King')\nORDER BY roomname\n", "sql2": "SELECT roomName,\n       decor\nFROM Rooms\nWHERE bedtype = 'King'\nORDER BY basePrice;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0026", "sql1": "\nSELECT roomname\nFROM rooms\nORDER BY roomname\n", "sql2": "SELECT roomName\nFROM Rooms\nORDER BY basePrice;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/inn_1/0030", "sql1": "\nSELECT roomid,\n       roomname\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM rooms\n      ORDER BY roomname)\n   LIMIT 3)\n", "sql2": "SELECT RoomId,\n       roomName\nFROM Rooms\nORDER BY basePrice DESC\nLIMIT 3;", "schema": "spider/inn_1/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0009", "sql1": "\nSELECT `problem_description`\nFROM\n  (SELECT `LHS`.`staff_id` AS `staff_id`,\n          `LHS`.`staff_first_name` AS `staff_first_name`,\n          `LHS`.`staff_last_name` AS `staff_last_name`,\n          `LHS`.`other_staff_details` AS `other_staff_details`,\n          `RHS`.`problem_id` AS `problem_id`,\n          `RHS`.`product_id` AS `product_id`,\n          `RHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,\n          `RHS`.`date_problem_reported` AS `date_problem_reported`,\n          `RHS`.`date_problem_closed` AS `date_problem_closed`,\n          `RHS`.`problem_description` AS `problem_description`,\n          `RHS`.`other_problem_details` AS `other_problem_details`\n   FROM\n     (SELECT *\n      FROM `staff`\n      WHERE (`staff_first_name` = 'Christop')) AS LHS\n   INNER JOIN problems AS RHS ON (LHS.staff_id = RHS.reported_by_staff_id))\nORDER BY problem_description\n", "sql2": "SELECT T1.problem_description\nFROM problems AS T1\nJOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id\nWHERE T2.staff_first_name = 'Christop'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0013", "sql1": "\nSELECT n AS count___,\n       product_id\nFROM\n  (SELECT product_id,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.product_id AS product_id,\n             LHS.product_name AS product_name,\n             LHS.product_details AS product_details,\n             RHS.problem_id AS problem_id,\n             RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,\n             RHS.reported_by_staff_id AS reported_by_staff_id,\n             RHS.date_problem_reported AS date_problem_reported,\n             RHS.date_problem_closed AS date_problem_closed,\n             RHS.problem_description AS problem_description,\n             RHS.other_problem_details AS other_problem_details\n      FROM product AS LHS\n      INNER JOIN problems AS RHS ON (LHS.product_id = RHS.product_id))\n   GROUP BY product_id)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T2.product_id\nFROM problems AS T1\nJOIN product AS T2 ON T1.product_id = T2.product_id\nGROUP BY T2.product_id", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0005", "sql1": "\nSELECT staff_first_name,\n       staff_last_name\nFROM\n  (SELECT LHS.problem_log_id AS problem_log_id,\n          LHS.assigned_to_staff_id AS assigned_to_staff_id,\n          LHS.problem_id AS problem_id,\n          LHS.problem_category_code AS problem_category_code,\n          LHS.problem_status_code AS problem_status_code,\n          LHS.log_entry_date AS log_entry_date,\n          LHS.log_entry_description AS log_entry_description,\n          LHS.log_entry_fix AS log_entry_fix,\n          LHS.other_log_details AS other_log_details,\n          RHS.staff_first_name AS staff_first_name,\n          RHS.staff_last_name AS staff_last_name,\n          RHS.other_staff_details AS other_staff_details\n   FROM\n     (SELECT *\n      FROM problem_log\n      WHERE (problem_id = 1)) AS LHS\n   INNER JOIN staff AS RHS ON (LHS.assigned_to_staff_id = RHS.staff_id))\nORDER BY staff_first_name\n", "sql2": "SELECT DISTINCT staff_first_name,\n                staff_last_name\nFROM staff AS T1\nJOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id\nWHERE T2.problem_id = 1", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0004", "sql1": "\nSELECT problem_log_id,\n       log_entry_description\nFROM problem_log\nORDER BY problem_log_id\n", "sql2": "SELECT problem_log_id,\n       log_entry_description\nFROM problem_log", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0012", "sql1": "\nSELECT `problem_id`\nFROM `problems`\nWHERE (`date_problem_reported` <= parse_datetime('1978-06-26'))\nORDER BY problem_id\n", "sql2": "SELECT problem_id\nFROM problems\nWHERE date_problem_reported < '1978-06-26'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0015", "sql1": "\nSELECT product_name\nFROM product\nORDER BY product_name\n", "sql2": "SELECT DISTINCT product_name\nFROM product\nORDER BY product_name", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0003", "sql1": "\nSELECT problem_log_id,\n       log_entry_date\nFROM problem_log\nWHERE (problem_id = 10)\nORDER BY problem_log_id\n", "sql2": "SELECT problem_log_id,\n       log_entry_date\nFROM problem_log\nWHERE problem_id = 10", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0018", "sql1": "\nSELECT `product_id`\nFROM\n  (SELECT *\n   FROM\n     (SELECT `problem_id`,\n             `product_id`,\n             `closure_authorised_by_staff_id`,\n             `reported_by_staff_id`,\n             `date_problem_reported`,\n             `date_problem_closed`,\n             `problem_description`,\n             `other_problem_details`,\n             `staff_first_name`,\n             `staff_last_name`,\n             `staff_id`,\n             `problem_description` AS `other_staff_details`\n      FROM\n        (SELECT `problem_id`,\n                `product_id`,\n                `closure_authorised_by_staff_id`,\n                `reported_by_staff_id`,\n                `date_problem_reported`,\n                `date_problem_closed`,\n                `problem_description`,\n                `other_problem_details`,\n                `staff_first_name`,\n                `staff_last_name`,\n                `closure_authorised_by_staff_id` AS `staff_id`\n         FROM\n           (SELECT `LHS`.`problem_id` AS `problem_id`,\n                   `LHS`.`product_id` AS `product_id`,\n                   `LHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,\n                   `LHS`.`reported_by_staff_id` AS `reported_by_staff_id`,\n                   `LHS`.`date_problem_reported` AS `date_problem_reported`,\n                   `LHS`.`date_problem_closed` AS `date_problem_closed`,\n                   `LHS`.`problem_description` AS `problem_description`,\n                   `LHS`.`other_problem_details` AS `other_problem_details`,\n                   `RHS`.`staff_first_name` AS `staff_first_name`,\n                   `RHS`.`staff_last_name` AS `staff_last_name`\n            FROM `problems` AS `LHS`\n            INNER JOIN `staff` AS `RHS` ON (`LHS`.`closure_authorised_by_staff_id` = `RHS`.`staff_id`\n                                               AND `LHS`.`problem_description` = `RHS`.`other_staff_details`))))\n   WHERE (`staff_first_name` = 'Ashley'\n          OR `staff_last_name` = 'Medhurst'))\nWHERE (`staff_first_name` = 'Christop'\n       OR `staff_last_name` != 'Berge')\nORDER BY product_id\n", "sql2": "SELECT product_id\nFROM problems AS T1\nJOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id\nWHERE T2.staff_first_name = 'Christop'\n  AND T2.staff_last_name = 'Berge' INTERSECT\n  SELECT product_id\n  FROM problems AS T1\n  JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = 'Ashley'\n  AND T2.staff_last_name = 'Medhurst'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0001", "sql1": "\nSELECT problem_log_id\nFROM\n  (SELECT log_entry_date,\n          problem_log_id,\n          MAX(log_entry_date) AS maxlog_entry_date\n   FROM\n     (SELECT problem_log_id,\n             assigned_to_staff_id,\n             problem_id,\n             problem_category_code,\n             problem_status_code,\n             log_entry_date,\n             log_entry_description,\n             other_log_details AS log_entry_fix,\n             other_log_details,\n             problem_log_id_other,\n             assigned_to_staff_id_other,\n             problem_id_other,\n             problem_status_code_other,\n             log_entry_date_other,\n             log_entry_description_other,\n             other_log_details_other\n      FROM\n        (SELECT LHS.problem_log_id AS problem_log_id,\n                LHS.assigned_to_staff_id AS assigned_to_staff_id,\n                LHS.problem_id AS problem_id,\n                LHS.problem_category_code AS problem_category_code,\n                LHS.problem_status_code AS problem_status_code,\n                LHS.log_entry_date AS log_entry_date,\n                LHS.log_entry_description AS log_entry_description,\n                LHS.log_entry_fix AS log_entry_fix,\n                LHS.other_log_details AS other_log_details,\n                RHS.problem_log_id AS problem_log_id_other,\n                RHS.assigned_to_staff_id AS assigned_to_staff_id_other,\n                RHS.problem_id AS problem_id_other,\n                RHS.problem_status_code AS problem_status_code_other,\n                RHS.log_entry_date AS log_entry_date_other,\n                RHS.log_entry_description AS log_entry_description_other,\n                RHS.other_log_details AS other_log_details_other\n         FROM problem_log AS LHS\n         INNER JOIN problem_log AS RHS ON (LHS.problem_category_code = RHS.problem_category_code\n                                              AND LHS.other_log_details = RHS.log_entry_fix)))\n   GROUP BY log_entry_date,\n            problem_log_id)\nORDER BY problem_log_id\n", "sql2": "SELECT problem_log_id\nFROM problem_log\nORDER BY log_entry_date DESC\nLIMIT 1", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0016", "sql1": "\nSELECT product_name\nFROM product\nORDER BY product_name\n", "sql2": "SELECT DISTINCT product_name\nFROM product\nORDER BY product_id", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0007", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM\n     (SELECT product_id,\n             product_name,\n             product_details,\n             product_id_other,\n             closure_authorised_by_staff_id,\n             reported_by_staff_id,\n             date_problem_reported,\n             date_problem_closed,\n             other_problem_details,\n             problem_id,\n             product_name AS problem_description\n      FROM\n        (SELECT product_id,\n                product_name,\n                product_details,\n                product_id_other,\n                closure_authorised_by_staff_id,\n                reported_by_staff_id,\n                date_problem_reported,\n                date_problem_closed,\n                other_problem_details,\n                product_id AS problem_id\n         FROM\n           (SELECT LHS.product_id AS product_id,\n                   LHS.product_name AS product_name,\n                   LHS.product_details AS product_details,\n                   RHS.product_id AS product_id_other,\n                   RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,\n                   RHS.reported_by_staff_id AS reported_by_staff_id,\n                   RHS.date_problem_reported AS date_problem_reported,\n                   RHS.date_problem_closed AS date_problem_closed,\n                   RHS.other_problem_details AS other_problem_details\n            FROM product AS LHS\n            INNER JOIN problems AS RHS ON (LHS.product_id = RHS.problem_id\n                                              AND LHS.product_name = RHS.problem_description)))))\nORDER BY count___\nFrom cffi callback <function _processevents at 0x7f38021d3790>:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/callbacks.py\", line 267, in _processevents\n    try:\n  File \"/home/boleli/Cubes/squares/results.py\", line 54, in handle_sigint\n    exit(exit_code)\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/_sitebuiltins.py\", line 26, in __call__\n    raise SystemExit(code)\nSystemExit: ExitCode.OK\n[   609.949][MainProcess][ERROR] Error while trying to convert R code to SQL.\n[   609.949][MainProcess][ERROR] Error: Table `product` exists in database, and both overwrite and append are FALSE\n\n\n------------------------------------- R Solution ---------------------------------------\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\nproduct <- read_csv(\"tests-examples/spider/tracking_software_problems/tables/product.csv\", skip=1, col_names=c('product_id','product_name','product_details'), col_types=cols(col_integer(),col_character(),col_character()))\nproduct <- copy_to(con, product)\nproblems <- read_csv(\"tests-examples/spider/tracking_software_problems/tables/problems.csv\", skip=1, col_names=c('problem_id','product_id','closure_authorised_by_staff_id','reported_by_staff_id','date_problem_reported','date_problem_closed','problem_description','other_problem_details'), col_types=cols(col_integer(),col_integer(),col_integer(),col_integer(),col_datetime(),col_datetime(),col_character(),col_character()))\nproblems <- copy_to(con, problems)\nexpected_output <- read_csv(\"tests-examples/spider/tracking_software_problems/tables/0007.csv\", skip=1, col_names=c('count___'), col_types=cols(col_integer()))\n\ndf1 <- inner_join(product, problems, by=c('product_id' = 'problem_id','product_name' = 'problem_description'), suffix = c('', '.other'), na_matches='never') %>% mutate(problem_id = product_id) %>% mutate(problem_description = product_name)\ndf2 <- df1 %>% group_by() %>% summarise(n = n()) %>% ungroup()\nout <- df2 %>% select(count___ = n) %>% arrange(count___)\n\nFailed to generate SQL query\n", "sql2": "SELECT count(*)\nFROM product AS T1\nJOIN problems AS T2 ON T1.product_id = T2.product_id\nWHERE T1.product_name = 'voluptatem'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0011", "sql1": "\nSELECT `problem_id`\nFROM `problems`\nWHERE (`date_problem_reported` >= parse_datetime('1978-06-26'))\nORDER BY problem_id\n", "sql2": "SELECT problem_id\nFROM problems\nWHERE date_problem_reported > '1978-06-26'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0010", "sql1": "\nSELECT `problem_id`\nFROM\n  (SELECT `staff_id`,\n          `staff_first_name`,\n          `staff_last_name`,\n          `other_staff_details`,\n          `problem_id`,\n          `product_id`,\n          `closure_authorised_by_staff_id`,\n          `date_problem_reported`,\n          `date_problem_closed`,\n          `problem_description`,\n          `other_problem_details`,\n          `staff_id` AS `reported_by_staff_id`\n   FROM\n     (SELECT `LHS`.`staff_id` AS `staff_id`,\n             `LHS`.`staff_first_name` AS `staff_first_name`,\n             `LHS`.`staff_last_name` AS `staff_last_name`,\n             `LHS`.`other_staff_details` AS `other_staff_details`,\n             `RHS`.`problem_id` AS `problem_id`,\n             `RHS`.`product_id` AS `product_id`,\n             `RHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,\n             `RHS`.`date_problem_reported` AS `date_problem_reported`,\n             `RHS`.`date_problem_closed` AS `date_problem_closed`,\n             `RHS`.`problem_description` AS `problem_description`,\n             `RHS`.`other_problem_details` AS `other_problem_details`\n      FROM `staff` AS `LHS`\n      INNER JOIN `problems` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`reported_by_staff_id`)))\nWHERE (`staff_last_name` = 'Bosco')\nORDER BY problem_id\n", "sql2": "SELECT T1.problem_id\nFROM problems AS T1\nJOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id\nWHERE T2.staff_last_name = 'Bosco'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/tracking_software_problems/0006", "sql1": "\nSELECT `problem_id`,\n       `problem_log_id`\nFROM\n  (SELECT `LHS`.`problem_log_id` AS `problem_log_id`,\n          `LHS`.`assigned_to_staff_id` AS `assigned_to_staff_id`,\n          `LHS`.`problem_id` AS `problem_id`,\n          `LHS`.`problem_category_code` AS `problem_category_code`,\n          `LHS`.`problem_status_code` AS `problem_status_code`,\n          `LHS`.`log_entry_date` AS `log_entry_date`,\n          `LHS`.`log_entry_description` AS `log_entry_description`,\n          `LHS`.`log_entry_fix` AS `log_entry_fix`,\n          `LHS`.`other_log_details` AS `other_log_details`,\n          `RHS`.`staff_first_name` AS `staff_first_name`,\n          `RHS`.`staff_last_name` AS `staff_last_name`,\n          `RHS`.`other_staff_details` AS `other_staff_details`\n   FROM `problem_log` AS `LHS`\n   INNER JOIN\n     (SELECT *\n      FROM `staff`\n      WHERE (`staff_first_name` = 'Rylan'\n             OR `staff_last_name` = 'Homenick')) AS RHS ON (LHS.assigned_to_staff_id = RHS.staff_id))\nORDER BY problem_id\n", "sql2": "SELECT DISTINCT T2.problem_id,\n                T2.problem_log_id\nFROM staff AS T1\nJOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id\nWHERE T1.staff_first_name = 'Rylan'\n  AND T1.staff_last_name = 'Homenick'", "schema": "spider/tracking_software_problems/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/tracking_software_problems/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0009", "sql1": "\nSELECT DISTINCT residence\nFROM\n  (SELECT occupation,\n          residence,\n          COUNT(*) AS n\n   FROM player\n   GROUP BY occupation,\n            residence)\nWHERE (n = 2)\nORDER BY residence\n", "sql2": "SELECT Residence\nFROM player\nGROUP BY Residence\nHAVING COUNT(*) >= 2", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0005", "sql1": "\nSELECT `sponsor_name`\nFROM `player`\nWHERE (`residence` = 'Brandon'\n       OR `residence` = 'Birtle')\nORDER BY sponsor_name\n", "sql2": "SELECT Sponsor_name\nFROM player\nWHERE Residence = 'Brandon'\n  OR Residence = 'Birtle'", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0004", "sql1": "\nSELECT `player_name`,\n       `residence`\nFROM `player`\nWHERE (`occupation` != 'Researcher')\nORDER BY player_name\n", "sql2": "SELECT Player_name,\n       residence\nFROM player\nWHERE Occupation != 'Researcher'", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0008", "sql1": "\nSELECT DISTINCT occupation\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.sponsor_name AS sponsor_name,\n          LHS.player_name AS player_name,\n          LHS.gender AS gender,\n          LHS.residence AS residence,\n          LHS.occupation AS occupation,\n          LHS.votes AS votes,\n          LHS.rank AS rank,\n          RHS.player_id AS player_id_other,\n          RHS.sponsor_name AS sponsor_name_other,\n          RHS.player_name AS player_name_other,\n          RHS.gender AS gender_other,\n          RHS.residence AS residence_other,\n          RHS.occupation AS occupation_other,\n          RHS.votes AS votes_other,\n          RHS.rank AS rank_other,\n          RHS.n AS n\n   FROM player AS LHS\n   INNER JOIN\n     (SELECT player_id,\n             sponsor_name,\n             player_name,\n             gender,\n             residence,\n             occupation,\n             votes,\n             rank,\n             n,\n             MAX(n) OVER () AS maxn\n      FROM\n        (SELECT player_id,\n                sponsor_name,\n                player_name,\n                gender,\n                residence,\n                occupation,\n                votes,\n                rank,\n                COUNT(*) OVER () AS n\n         FROM player)) AS RHS ON (LHS.player_id = RHS.maxn))\nORDER BY occupation\n", "sql2": "SELECT Occupation\nFROM player\nGROUP BY Occupation\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0003", "sql1": "\nSELECT gender,\n       occupation\nFROM player\nORDER BY gender\n", "sql2": "SELECT Gender,\n       Occupation\nFROM player", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0002", "sql1": "\nSELECT player_name\nFROM player\nORDER BY player_name\n", "sql2": "SELECT Player_name\nFROM player\nORDER BY Votes ASC", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0014", "sql1": "\nSELECT player_name\nFROM\n  (SELECT *\n   FROM player AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM player_coach AS RHS\n        WHERE (LHS.player_id = RHS.player_id) ))\nORDER BY player_name\n", "sql2": "SELECT Player_name\nFROM player\nWHERE Player_ID NOT IN\n    (SELECT Player_ID\n     FROM player_coach)", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM player\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM player", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0007", "sql1": "\nSELECT occupation,\n       n AS count___\nFROM\n  (SELECT occupation,\n          COUNT(*) AS n\n   FROM player\n   GROUP BY occupation)\nORDER BY occupation\n", "sql2": "SELECT Occupation,\n       COUNT(*)\nFROM player\nGROUP BY Occupation", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/riding_club/0006", "sql1": "\nSELECT player_name\nFROM\n  (SELECT LHS.player_id AS player_id,\n          LHS.sponsor_name AS sponsor_name,\n          LHS.player_name AS player_name,\n          LHS.gender AS gender,\n          LHS.residence AS residence,\n          LHS.occupation AS occupation,\n          LHS.votes AS votes,\n          LHS.rank AS rank\n   FROM player AS LHS\n   INNER JOIN\n     (SELECT player_id,\n             sponsor_name,\n             player_name,\n             gender,\n             residence,\n             occupation,\n             MAX(votes) OVER () AS votes,\n                             rank\n      FROM player) AS RHS ON (LHS.player_id = RHS.player_id\n                                 AND LHS.sponsor_name = RHS.sponsor_name\n                                 AND LHS.player_name = RHS.player_name\n                                 AND LHS.gender = RHS.gender\n                                 AND LHS.residence = RHS.residence\n                                 AND LHS.occupation = RHS.occupation\n                                 AND LHS.votes = RHS.votes\n                                 AND LHS.rank = RHS.rank))\nORDER BY player_name\n", "sql2": "SELECT Player_name\nFROM player\nORDER BY Votes DESC\nLIMIT 1", "schema": "spider/riding_club/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0009", "sql1": "\nSELECT nationality\nFROM\n  (SELECT LHS.nationality AS nationality,\n          LHS.type AS TYPE,\n          LHS.n AS n,\n          RHS.name AS name,\n          RHS.type AS type_other,\n          RHS.tonnage AS tonnage\n   FROM\n     (SELECT nationality,\n             TYPE,\n             COUNT(*) AS n\n      FROM ship\n      GROUP BY nationality,\n               TYPE) AS LHS\n   INNER JOIN ship AS RHS ON (LHS.n = RHS.ship_id\n                                 AND LHS.nationality = RHS.nationality))\nORDER BY nationality\n", "sql2": "SELECT Nationality\nFROM ship\nGROUP BY Nationality\nHAVING COUNT(*) > 2", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0013", "sql1": "\nSELECT `fate`\nFROM\n  (SELECT `LHS`.`mission_id` AS `mission_id`,\n          `LHS`.`ship_id` AS `ship_id`,\n          `LHS`.`code` AS `code`,\n          `LHS`.`launched_year` AS `launched_year`,\n          `LHS`.`location` AS `location`,\n          `LHS`.`speed_knots` AS `speed_knots`,\n          `LHS`.`fate` AS `fate`,\n          `RHS`.`name` AS `name`,\n          `RHS`.`type` AS `type`,\n          `RHS`.`nationality` AS `nationality`,\n          `RHS`.`tonnage` AS `tonnage`\n   FROM `mission` AS `LHS`\n   INNER JOIN `ship` AS `RHS` ON (`LHS`.`ship_id` = `RHS`.`ship_id`))\nWHERE (`nationality` = 'United States')\nORDER BY fate\n", "sql2": "SELECT DISTINCT T1.Fate\nFROM mission AS T1\nJOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID\nWHERE T2.Nationality = 'United States'", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0005", "sql1": "\nSELECT `name`\nFROM `ship`\nWHERE (`nationality` != 'United States'\n       OR `nationality` != 'United Kingdom')\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nWHERE Nationality = 'United States'\n  OR Nationality = 'United Kingdom'", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0004", "sql1": "\nSELECT `name`\nFROM `ship`\nWHERE (`nationality` != 'United States')\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nWHERE Nationality != 'United States'", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0012", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.mission_id AS mission_id,\n          LHS.ship_id AS ship_id,\n          LHS.code AS code,\n          LHS.launched_year AS launched_year,\n          LHS.location AS LOCATION,\n          LHS.speed_knots AS speed_knots,\n          LHS.fate AS fate,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.nationality AS nationality,\n          LHS.tonnage AS tonnage\n   FROM\n     (SELECT LHS.mission_id AS mission_id,\n             LHS.ship_id AS ship_id,\n             LHS.code AS code,\n             LHS.launched_year AS launched_year,\n             LHS.location AS LOCATION,\n             LHS.speed_knots AS speed_knots,\n             LHS.fate AS fate,\n             RHS.name AS name,\n             RHS.type AS TYPE,\n             RHS.nationality AS nationality,\n             RHS.tonnage AS tonnage\n      FROM mission AS LHS\n      INNER JOIN ship AS RHS ON (LHS.ship_id = RHS.ship_id)) AS LHS\n   INNER JOIN\n     (SELECT *\n      FROM mission\n      WHERE (launched_year >= 1928)) AS RHS ON (LHS.mission_id = RHS.mission_id\n                                                AND LHS.ship_id = RHS.ship_id\n                                                AND LHS.code = RHS.code\n                                                AND LHS.launched_year = RHS.launched_year\n                                                AND LHS.location = RHS.location\n                                                AND LHS.speed_knots = RHS.speed_knots\n                                                AND LHS.fate = RHS.fate))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM mission AS T1\nJOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID\nWHERE T1.Launched_Year > 1928", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0008", "sql1": "\nSELECT TYPE\nFROM\n  (SELECT LHS.n AS n,\n          RHS.type AS TYPE\n   FROM\n     (SELECT MAX(n) AS n\n      FROM\n        (SELECT TYPE,\n                COUNT(*) AS n\n         FROM ship\n         GROUP BY TYPE)) AS LHS\n   LEFT JOIN\n     (SELECT TYPE,\n             COUNT(*) AS n\n      FROM ship\n      GROUP BY TYPE) AS RHS ON (LHS.n = RHS.n))\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM ship\nGROUP BY TYPE\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0015", "sql1": "\nSELECT TYPE\nFROM ship\nWHERE (tonnage > 6000\n       OR tonnage = 4000)\nORDER BY TYPE\n", "sql2": "SELECT TYPE\nFROM ship\nWHERE Tonnage > 6000 INTERSECT\n  SELECT TYPE\n  FROM ship WHERE Tonnage < 4000", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0003", "sql1": "\nSELECT TYPE,\n       nationality\nFROM ship\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       Nationality\nFROM ship", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0002", "sql1": "\nSELECT name\nFROM ship\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nORDER BY Tonnage ASC", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM ship AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM mission AS RHS\n        WHERE (LHS.ship_id = RHS.ship_id) ))\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nWHERE Ship_ID NOT IN\n    (SELECT Ship_ID\n     FROM mission)", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM ship\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM ship", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0007", "sql1": "\nSELECT TYPE,\n       n AS count___\nFROM\n  (SELECT TYPE,\n          COUNT(*) AS n\n   FROM ship\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       COUNT(*)\nFROM ship\nGROUP BY TYPE", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0011", "sql1": "\nSELECT code,\n       fate,\n       name\nFROM\n  (SELECT LHS.mission_id AS mission_id,\n          LHS.ship_id AS ship_id,\n          LHS.code AS code,\n          LHS.launched_year AS launched_year,\n          LHS.location AS LOCATION,\n          LHS.speed_knots AS speed_knots,\n          LHS.fate AS fate,\n          RHS.name AS name,\n          RHS.type AS TYPE,\n          RHS.nationality AS nationality,\n          RHS.tonnage AS tonnage\n   FROM mission AS LHS\n   INNER JOIN ship AS RHS ON (LHS.ship_id = RHS.ship_id))\nORDER BY code\n", "sql2": "SELECT T1.Code,\n       T1.Fate,\n       T2.Name\nFROM mission AS T1\nJOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0010", "sql1": "\nSELECT TYPE,\n       meantonnage AS avg_tonnage_\nFROM\n  (SELECT TYPE,\n          AVG(tonnage) AS meantonnage\n   FROM ship\n   GROUP BY TYPE)\nORDER BY TYPE\n", "sql2": "SELECT TYPE,\n       avg(Tonnage)\nFROM ship\nGROUP BY TYPE", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/ship_mission/0006", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.ship_id AS ship_id,\n          LHS.name AS name,\n          LHS.type AS TYPE,\n          LHS.nationality AS nationality,\n          LHS.tonnage AS tonnage,\n          LHS.maxtonnage AS maxtonnage,\n          RHS.ship_id AS ship_id_other,\n          RHS.name AS name_other,\n          RHS.type AS type_other,\n          RHS.nationality AS nationality_other,\n          RHS.tonnage AS tonnage_other,\n          RHS.maxtonnage AS maxtonnage_other\n   FROM\n     (SELECT ship_id,\n             name,\n             TYPE,\n             nationality,\n             tonnage,\n             MAX(tonnage) OVER () AS maxtonnage\n      FROM ship) AS LHS\n   CROSS JOIN\n     (SELECT ship_id,\n             name,\n             TYPE,\n             nationality,\n             tonnage,\n             MAX(tonnage) OVER () AS maxtonnage\n      FROM ship) AS RHS)\nWHERE (tonnage = maxtonnage_other\n       AND tonnage_other >= maxtonnage_other)\nORDER BY name\n", "sql2": "SELECT Name\nFROM ship\nORDER BY Tonnage DESC\nLIMIT 1", "schema": "spider/ship_mission/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0025", "sql1": "\nSELECT student_id,\n       course_id,\n       registration_date\nFROM\n  (SELECT *\n   FROM student_course_registrations AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_course_attendance AS RHS\n        WHERE (LHS.student_id = RHS.student_id) ))\nORDER BY student_id\n", "sql2": "SELECT *\nFROM student_course_registrations\nWHERE student_id NOT IN\n    (SELECT student_id\n     FROM student_course_attendance)", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0013", "sql1": "\nSELECT student_id,\n       n AS count___\nFROM\n  (SELECT LHS.student_id AS student_id,\n          LHS.student_details AS student_details,\n          RHS.n AS n\n   FROM students AS LHS\n   INNER JOIN\n     (SELECT student_id,\n             COUNT(*) AS n\n      FROM student_course_registrations\n      GROUP BY student_id) AS RHS ON (LHS.student_id = RHS.student_id))\nORDER BY student_id\n", "sql2": "SELECT T1.student_id,\n       count(*)\nFROM students AS T1\nJOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0005", "sql1": "\nSELECT student_id\nFROM student_course_attendance\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_attendance", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0004", "sql1": "\nSELECT student_id\nFROM\n  (SELECT *\n   FROM students AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM student_course_attendance AS RHS\n        WHERE (LHS.student_id = RHS.student_id) ))\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM students\nWHERE student_id NOT IN\n    (SELECT student_id\n     FROM student_course_attendance)", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0024", "sql1": "\nSELECT course_id\nFROM\n  (SELECT course_id\n   FROM student_course_attendance INTERSECT SELECT course_id\n   FROM student_course_registrations\n   WHERE (student_id = 121))\nORDER BY course_id\n", "sql2": "SELECT course_id\nFROM student_course_registrations\nWHERE student_id = 121\nUNION\nSELECT course_id\nFROM student_course_attendance\nWHERE student_id = 121", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0015", "sql1": "\nSELECT `candidate_id`\nFROM `candidate_assessments`\nWHERE (`asessment_outcome_code` = 'Pass')\nORDER BY candidate_id\n", "sql2": "SELECT candidate_id\nFROM candidate_assessments\nWHERE asessment_outcome_code = 'Pass'", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0003", "sql1": "\nSELECT first_name,\n       last_name\nFROM people\nORDER BY first_name\n", "sql2": "SELECT T2.first_name,\n       T2.last_name\nFROM candidates AS T1\nJOIN people AS T2 ON T1.candidate_id = T2.person_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0019", "sql1": "\nSELECT city\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          RHS.person_address_id AS person_address_id,\n          RHS.person_id AS person_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM addresses AS LHS\n   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY city\n", "sql2": "SELECT DISTINCT T1.city\nFROM addresses AS T1\nJOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0023", "sql1": "\nSELECT DISTINCT student_id\nFROM student_course_registrations\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_registrations\nUNION\nSELECT student_id\nFROM student_course_attendance", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0022", "sql1": "\nSELECT first_name\nFROM people\nORDER BY first_name\n", "sql2": "SELECT first_name\nFROM people\nORDER BY first_name", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0018", "sql1": "\nSELECT student_id\nFROM\n  (SELECT student_id,\n          course_id,\n          date_of_attendance,\n          MAX(date_of_attendance) OVER () AS maxdate_of_attendance\n   FROM student_course_attendance)\nWHERE (course_id = 301\n       AND maxdate_of_attendance <= date_of_attendance)\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_attendance\nWHERE course_id = 301\nORDER BY date_of_attendance DESC\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0017", "sql1": "\nSELECT student_id\nFROM student_course_attendance\nWHERE (course_id <= 301)\nORDER BY student_id\n", "sql2": "SELECT student_id\nFROM student_course_attendance\nWHERE course_id = 301", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0021", "sql1": "\nSELECT course_name\nFROM courses\nORDER BY course_name\n", "sql2": "SELECT course_name\nFROM courses\nORDER BY course_name", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0020", "sql1": "\nSELECT DISTINCT city\nFROM\n  (SELECT LHS.address_id AS address_id,\n          LHS.line_1 AS line_1,\n          LHS.line_2 AS line_2,\n          LHS.city AS city,\n          LHS.zip_postcode AS zip_postcode,\n          LHS.state_province_county AS state_province_county,\n          LHS.country AS country,\n          LHS.student_id AS student_id,\n          LHS.student_details AS student_details,\n          RHS.person_address_id AS person_address_id,\n          RHS.person_id AS person_id,\n          RHS.date_from AS date_from,\n          RHS.date_to AS date_to\n   FROM\n     (SELECT LHS.address_id AS address_id,\n             LHS.line_1 AS line_1,\n             LHS.line_2 AS line_2,\n             LHS.city AS city,\n             LHS.zip_postcode AS zip_postcode,\n             LHS.state_province_county AS state_province_county,\n             LHS.country AS country,\n             RHS.student_id AS student_id,\n             RHS.student_details AS student_details\n      FROM addresses AS LHS\n      CROSS JOIN students AS RHS) AS LHS\n   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))\nORDER BY city\n", "sql2": "SELECT DISTINCT T1.city\nFROM addresses AS T1\nJOIN people_addresses AS T2 ON T1.address_id = T2.address_id\nJOIN students AS T3 ON T2.person_id = T3.student_id", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0007", "sql1": "\nSELECT DISTINCT student_details\nFROM\n  (SELECT LHS.student_id AS student_id,\n          LHS.student_details AS student_details,\n          LHS.course_id AS course_id,\n          LHS.registration_date AS registration_date,\n          LHS.maxregistration_date AS maxregistration_date,\n          RHS.student_id AS student_id_other,\n          RHS.course_id AS course_id_other,\n          RHS.registration_date AS registration_date_other\n   FROM\n     (SELECT student_id,\n             student_details,\n             course_id,\n             registration_date,\n             MAX(registration_date) OVER () AS maxregistration_date\n      FROM\n        (SELECT LHS.student_id AS student_id,\n                LHS.student_details AS student_details,\n                RHS.course_id AS course_id,\n                RHS.registration_date AS registration_date\n         FROM students AS LHS\n         INNER JOIN student_course_registrations AS RHS ON (LHS.student_id = RHS.student_id))) AS LHS\n   CROSS JOIN student_course_registrations AS RHS)\nWHERE (registration_date >= maxregistration_date\n       OR maxregistration_date < registration_date_other)\nORDER BY student_details\n", "sql2": "SELECT T2.student_details\nFROM student_course_registrations AS T1\nJOIN students AS T2 ON T1.student_id = T2.student_id\nORDER BY T1.registration_date DESC\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0011", "sql1": "\nSELECT DISTINCT candidate_id_other AS candidate_id\nFROM\n  (SELECT LHS.candidate_id AS candidate_id,\n          LHS.qualification AS qualification,\n          LHS.assessment_date AS assessment_date,\n          LHS.asessment_outcome_code AS asessment_outcome_code,\n          LHS.maxassessment_date AS maxassessment_date,\n          RHS.candidate_id AS candidate_id_other,\n          RHS.qualification AS qualification_other,\n          RHS.assessment_date AS assessment_date_other,\n          RHS.asessment_outcome_code AS asessment_outcome_code_other,\n          RHS.maxassessment_date AS maxassessment_date_other\n   FROM\n     (SELECT candidate_id,\n             qualification,\n             assessment_date,\n             asessment_outcome_code,\n             MAX(assessment_date) OVER () AS maxassessment_date\n      FROM candidate_assessments) AS LHS\n   CROSS JOIN\n     (SELECT candidate_id,\n             qualification,\n             assessment_date,\n             asessment_outcome_code,\n             MAX(assessment_date) OVER () AS maxassessment_date\n      FROM candidate_assessments) AS RHS)\nWHERE (maxassessment_date <= assessment_date_other\n       OR maxassessment_date != maxassessment_date_other)\nORDER BY candidate_id\n", "sql2": "SELECT candidate_id\nFROM candidate_assessments\nORDER BY assessment_date DESC\nLIMIT 1", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/student_assessment/0010", "sql1": "\nSELECT DISTINCT `person_id` AS `candidate_id`\nFROM\n  (SELECT `LHS`.`candidate_id` AS `candidate_id`,\n          `LHS`.`candidate_details` AS `candidate_details`,\n          `RHS`.`person_id` AS `person_id`,\n          `RHS`.`first_name` AS `first_name`,\n          `RHS`.`middle_name` AS `middle_name`,\n          `RHS`.`last_name` AS `last_name`,\n          `RHS`.`cell_mobile_number` AS `cell_mobile_number`,\n          `RHS`.`email_address` AS `email_address`,\n          `RHS`.`login_name` AS `login_name`,\n          `RHS`.`password` AS `password`\n   FROM `candidates` AS `LHS`\n   CROSS JOIN\n     (SELECT *\n      FROM `people`\n      WHERE (`email_address` = 'stanley.monahan@example.org')) AS RHS)\nORDER BY candidate_id\n", "sql2": "SELECT T2.candidate_id\nFROM people AS T1\nJOIN candidates AS T2 ON T1.person_id = T2.candidate_id\nWHERE T1.email_address = 'stanley.monahan@example.org'", "schema": "spider/student_assessment/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/student_assessment/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0009", "sql1": "\nSELECT fault_short_name,\n       skill_description\nFROM\n  (SELECT LHS.skill_id AS skill_id,\n          LHS.skill_code AS skill_code,\n          LHS.skill_description AS skill_description,\n          LHS.part_fault_id AS part_fault_id,\n          LHS.part_id AS part_id,\n          LHS.fault_short_name AS fault_short_name,\n          LHS.fault_description AS fault_description,\n          LHS.other_fault_details AS other_fault_details\n   FROM\n     (SELECT LHS.skill_id AS skill_id,\n             LHS.skill_code AS skill_code,\n             LHS.skill_description AS skill_description,\n             RHS.part_fault_id AS part_fault_id,\n             RHS.part_id AS part_id,\n             RHS.fault_short_name AS fault_short_name,\n             RHS.fault_description AS fault_description,\n             RHS.other_fault_details AS other_fault_details\n      FROM skills AS LHS\n      CROSS JOIN part_faults AS RHS) AS LHS\n   INNER JOIN skills_required_to_fix AS RHS ON (LHS.skill_id = RHS.skill_id\n                                                   AND LHS.part_fault_id = RHS.part_fault_id))\nORDER BY fault_short_name\n", "sql2": "SELECT T1.fault_short_name,\n       T3.skill_description\nFROM Part_Faults AS T1\nJOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id\nJOIN Skills AS T3 ON T2.skill_id = T3.skill_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0025", "sql1": "\nSELECT asset_make,\n       asset_model,\n       asset_details\nFROM assets\nORDER BY asset_make\n", "sql2": "SELECT asset_make,\n       asset_model,\n       asset_details\nFROM Assets\nORDER BY asset_disposed_date ASC", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0013", "sql1": "\nSELECT last_name\nFROM maintenance_engineers\nORDER BY last_name\n", "sql2": "SELECT DISTINCT last_name\nFROM Maintenance_Engineers", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0029", "sql1": "\nSELECT gender\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM\n        (SELECT staff_id,\n                staff_name,\n                gender,\n                other_staff_details,\n                n,\n                MAX(n) OVER () AS maxn\n         FROM\n           (SELECT staff_id,\n                   staff_name,\n                   gender,\n                   other_staff_details,\n                   COUNT(*) OVER () AS n\n            FROM staff))\n      ORDER BY gender DESC)\n   LIMIT 1)\n", "sql2": "SELECT gender\nFROM staff\nGROUP BY gender\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0024", "sql1": "\nSELECT asset_model\nFROM assets\nORDER BY asset_model\n", "sql2": "SELECT DISTINCT asset_model\nFROM Assets", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0008", "sql1": "\nSELECT first_name,\n       last_name,\n       other_details,\n       skill_description\nFROM\n  (SELECT LHS.skill_id AS skill_id,\n          LHS.skill_code AS skill_code,\n          LHS.skill_description AS skill_description,\n          LHS.engineer_id AS engineer_id,\n          LHS.company_id AS company_id,\n          LHS.first_name AS first_name,\n          LHS.last_name AS last_name,\n          LHS.other_details AS other_details\n   FROM\n     (SELECT LHS.skill_id AS skill_id,\n             LHS.skill_code AS skill_code,\n             LHS.skill_description AS skill_description,\n             RHS.engineer_id AS engineer_id,\n             RHS.company_id AS company_id,\n             RHS.first_name AS first_name,\n             RHS.last_name AS last_name,\n             RHS.other_details AS other_details\n      FROM skills AS LHS\n      CROSS JOIN maintenance_engineers AS RHS) AS LHS\n   INNER JOIN engineer_skills AS RHS ON (LHS.skill_id = RHS.skill_id\n                                            AND LHS.engineer_id = RHS.engineer_id))\nORDER BY first_name\n", "sql2": "SELECT T1.first_name,\n       T1.last_name,\n       T1.other_details,\n       T3.skill_description\nFROM Maintenance_Engineers AS T1\nJOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id\nJOIN Skills AS T3 ON T2.skill_id = T3.skill_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0015", "sql1": "\nSELECT first_name,\n       last_name\nFROM\n  (SELECT *\n   FROM maintenance_engineers AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM engineer_visits AS RHS\n        WHERE (LHS.engineer_id = RHS.engineer_id) ))\nORDER BY first_name\n", "sql2": "SELECT first_name,\n       last_name\nFROM Maintenance_Engineers\nWHERE engineer_id NOT IN\n    (SELECT engineer_id\n     FROM Engineer_Visits)", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0003", "sql1": "\nSELECT DISTINCT n AS count___,\n                supplier_company_id AS company_id\nFROM\n  (SELECT LHS.company_id AS company_id,\n          LHS.company_type AS company_type,\n          LHS.company_name AS company_name,\n          LHS.company_address AS company_address,\n          LHS.other_company_details AS other_company_details,\n          LHS.asset_id AS asset_id,\n          LHS.maintenance_contract_id AS maintenance_contract_id,\n          LHS.supplier_company_id AS supplier_company_id,\n          LHS.asset_details AS asset_details,\n          LHS.asset_make AS asset_make,\n          LHS.asset_model AS asset_model,\n          LHS.asset_acquired_date AS asset_acquired_date,\n          LHS.asset_disposed_date AS asset_disposed_date,\n          LHS.other_asset_details AS other_asset_details,\n          RHS.n AS n\n   FROM\n     (SELECT LHS.company_id AS company_id,\n             LHS.company_type AS company_type,\n             LHS.company_name AS company_name,\n             LHS.company_address AS company_address,\n             LHS.other_company_details AS other_company_details,\n             RHS.asset_id AS asset_id,\n             RHS.maintenance_contract_id AS maintenance_contract_id,\n             RHS.supplier_company_id AS supplier_company_id,\n             RHS.asset_details AS asset_details,\n             RHS.asset_make AS asset_make,\n             RHS.asset_model AS asset_model,\n             RHS.asset_acquired_date AS asset_acquired_date,\n             RHS.asset_disposed_date AS asset_disposed_date,\n             RHS.other_asset_details AS other_asset_details\n      FROM third_party_companies AS LHS\n      CROSS JOIN assets AS RHS) AS LHS\n   INNER JOIN\n     (SELECT supplier_company_id,\n             COUNT(*) AS n\n      FROM assets\n      GROUP BY supplier_company_id) AS RHS ON (LHS.supplier_company_id = RHS.supplier_company_id))\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.company_id\nFROM Third_Party_Companies AS T1\nJOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id\nGROUP BY T1.company_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0023", "sql1": "\nSELECT skill_id,\n       skill_description\nFROM\n  (SELECT LHS.skill_id AS skill_id,\n          LHS.skill_code AS skill_code,\n          LHS.skill_description AS skill_description,\n          RHS.skill_id AS skill_id_other\n   FROM skills AS LHS\n   INNER JOIN\n     (SELECT skill_id,\n             MAX(n) AS n\n      FROM\n        (SELECT skill_id,\n                COUNT(*) AS n\n         FROM skills_required_to_fix\n         GROUP BY skill_id)\n      GROUP BY skill_id) AS RHS ON (LHS.skill_id = RHS.n))\nORDER BY skill_id\n", "sql2": "SELECT T1.skill_id,\n       T1.skill_description\nFROM Skills AS T1\nJOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id\nGROUP BY T1.skill_id\nORDER BY count(*) DESC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0002", "sql1": "\nSELECT n AS count___,\n       maintenance_contract_id\nFROM\n  (SELECT maintenance_contract_id,\n          other_contract_details,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.asset_id AS asset_id,\n             LHS.maintenance_contract_id AS maintenance_contract_id,\n             LHS.supplier_company_id AS supplier_company_id,\n             LHS.asset_details AS asset_details,\n             LHS.asset_make AS asset_make,\n             LHS.asset_model AS asset_model,\n             LHS.asset_acquired_date AS asset_acquired_date,\n             LHS.asset_disposed_date AS asset_disposed_date,\n             LHS.other_asset_details AS other_asset_details,\n             RHS.maintenance_contract_company_id AS maintenance_contract_company_id,\n             RHS.contract_start_date AS contract_start_date,\n             RHS.contract_end_date AS contract_end_date,\n             RHS.other_contract_details AS other_contract_details\n      FROM assets AS LHS\n      LEFT JOIN maintenance_contracts AS RHS ON (LHS.maintenance_contract_id = RHS.maintenance_contract_id))\n   GROUP BY maintenance_contract_id,\n            other_contract_details)\nORDER BY count___\n", "sql2": "SELECT count(*),\n       T1.maintenance_contract_id\nFROM Maintenance_Contracts AS T1\nJOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id\nGROUP BY T1.maintenance_contract_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0014", "sql1": "\nSELECT DISTINCT fault_status\nFROM fault_log_parts\nORDER BY fault_status\n", "sql2": "SELECT DISTINCT fault_status\nFROM Fault_Log_Parts", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0017", "sql1": "\nSELECT minasset_acquired_date AS asset_acquired_date\nFROM\n  (SELECT MIN(asset_acquired_date) AS minasset_acquired_date\n   FROM assets)\nORDER BY asset_acquired_date\n", "sql2": "SELECT asset_acquired_date\nFROM Assets\nORDER BY asset_acquired_date ASC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0020", "sql1": "\nSELECT minn AS engineer_id,\n       first_name,\n       last_name\nFROM\n  (SELECT first_name,\n          last_name,\n          MIN(n) AS minn\n   FROM\n     (SELECT engineer_id,\n             company_id,\n             first_name,\n             last_name,\n             other_details,\n             n,\n             company_id AS engineer_visit_id\n      FROM\n        (SELECT engineer_id,\n                company_id,\n                first_name,\n                last_name,\n                other_details,\n                engineer_id AS n\n         FROM\n           (SELECT LHS.engineer_id AS engineer_id,\n                   LHS.company_id AS company_id,\n                   LHS.first_name AS first_name,\n                   LHS.last_name AS last_name,\n                   LHS.other_details AS other_details\n            FROM maintenance_engineers AS LHS\n            INNER JOIN\n              (SELECT engineer_visit_id,\n                      COUNT(*) AS n\n               FROM engineer_visits\n               GROUP BY engineer_visit_id) AS RHS ON (LHS.engineer_id = RHS.n\n                                                      AND LHS.company_id = RHS.engineer_visit_id))))\n   GROUP BY first_name,\n            last_name)\nORDER BY engineer_id\n", "sql2": "SELECT T1.engineer_id,\n       T1.first_name,\n       T1.last_name\nFROM Maintenance_Engineers AS T1\nJOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id\nGROUP BY T1.engineer_id\nORDER BY count(*) ASC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0016", "sql1": "\nSELECT asset_id,\n       asset_details,\n       asset_make,\n       asset_model\nFROM assets\nORDER BY asset_id\n", "sql2": "SELECT asset_id,\n       asset_details,\n       asset_make,\n       asset_model\nFROM Assets", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0031", "sql1": "\nSELECT asset_model\nFROM\n  (SELECT *\n   FROM assets AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM fault_log AS RHS\n        WHERE (LHS.asset_id = RHS.asset_id) ))\nORDER BY asset_model\n", "sql2": "SELECT asset_model\nFROM Assets\nWHERE asset_id NOT IN\n    (SELECT asset_id\n     FROM Fault_Log)", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0011", "sql1": "\nSELECT fault_description,\n       fault_status\nFROM\n  (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,\n          LHS.asset_id AS asset_id,\n          LHS.recorded_by_staff_id AS recorded_by_staff_id,\n          LHS.fault_log_entry_datetime AS fault_log_entry_datetime,\n          LHS.fault_description AS fault_description,\n          LHS.other_fault_details AS other_fault_details,\n          RHS.part_fault_id AS part_fault_id,\n          RHS.fault_status AS fault_status\n   FROM fault_log AS LHS\n   INNER JOIN fault_log_parts AS RHS ON (LHS.fault_log_entry_id = RHS.fault_log_entry_id))\nORDER BY fault_description\n", "sql2": "SELECT T1.fault_description,\n       T2.fault_status\nFROM Fault_Log AS T1\nJOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0010", "sql1": "\nSELECT part_name,\n       n AS count___\nFROM\n  (SELECT part_name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.part_id AS part_id,\n             LHS.part_name AS part_name,\n             LHS.chargeable_yn AS chargeable_yn,\n             LHS.chargeable_amount AS chargeable_amount,\n             LHS.other_part_details AS other_part_details,\n             RHS.asset_id AS asset_id\n      FROM parts AS LHS\n      INNER JOIN asset_parts AS RHS ON (LHS.part_id = RHS.part_id))\n   GROUP BY part_name)\nORDER BY part_name\n", "sql2": "SELECT T1.part_name,\n       count(*)\nFROM Parts AS T1\nJOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id\nGROUP BY T1.part_name", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0026", "sql1": "\nSELECT part_id,\n       minchargeable_amount AS chargeable_amount\nFROM\n  (SELECT LHS.part_id AS part_id,\n          LHS.part_name AS part_name,\n          LHS.chargeable_yn AS chargeable_yn,\n          LHS.chargeable_amount AS chargeable_amount,\n          LHS.other_part_details AS other_part_details,\n          LHS.minchargeable_amount AS minchargeable_amount,\n          RHS.part_name AS part_name_other,\n          RHS.chargeable_yn AS chargeable_yn_other,\n          RHS.other_part_details AS other_part_details_other\n   FROM\n     (SELECT part_id,\n             part_name,\n             chargeable_yn,\n             chargeable_amount,\n             other_part_details,\n             MIN(chargeable_amount) OVER () AS minchargeable_amount\n      FROM parts) AS LHS\n   INNER JOIN parts AS RHS ON (LHS.part_id = RHS.part_id\n                                  AND LHS.minchargeable_amount = RHS.chargeable_amount))\nORDER BY part_id\n", "sql2": "SELECT part_id,\n       chargeable_amount\nFROM Parts\nORDER BY chargeable_amount ASC\nLIMIT 1", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/assets_maintenance/0030", "sql1": "\nSELECT staff_name,\n       n AS count___\nFROM\n  (SELECT LHS.staff_id AS staff_id,\n          LHS.staff_name AS staff_name,\n          LHS.gender AS gender,\n          LHS.other_staff_details AS other_staff_details,\n          RHS.other_visit_details AS other_visit_details,\n          RHS.n AS n\n   FROM staff AS LHS\n   INNER JOIN\n     (SELECT contact_staff_id,\n             other_visit_details,\n             COUNT(*) AS n\n      FROM engineer_visits\n      GROUP BY contact_staff_id,\n               other_visit_details) AS RHS ON (LHS.staff_id = RHS.contact_staff_id))\nORDER BY staff_name\n", "sql2": "SELECT T1.staff_name,\n       count(*)\nFROM Staff AS T1\nJOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id\nGROUP BY T1.staff_name", "schema": "spider/assets_maintenance/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0025", "sql1": "\nSELECT DISTINCT AVG(followers) OVER () AS avg_followers_\nFROM\n  (SELECT *\n   FROM user_profiles AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM tweets AS RHS\n        WHERE (LHS.uid = RHS.uid) ))\nORDER BY avg_followers_\n", "sql2": "SELECT avg(followers)\nFROM user_profiles\nWHERE UID NOT IN\n    (SELECT UID\n     FROM tweets)", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0013", "sql1": "\nSELECT name,\n       email\nFROM\n  (SELECT email,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT f1,\n             f2,\n             name,\n             email,\n             partitionid,\n             followers,\n             f1 AS UID\n      FROM\n        (SELECT LHS.f1 AS f1,\n                LHS.f2 AS f2,\n                RHS.name AS name,\n                RHS.email AS email,\n                RHS.partitionid AS partitionid,\n                RHS.followers AS followers\n         FROM follows AS LHS\n         INNER JOIN user_profiles AS RHS ON (LHS.f1 = RHS.uid)))\n   GROUP BY email,\n            name)\nWHERE (n > 1)\nORDER BY name\n", "sql2": "SELECT T1.name,\n       T1.email\nFROM user_profiles AS T1\nJOIN follows AS T2 ON T1.uid = T2.f1\nGROUP BY T2.f1\nHAVING count(*) > 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0005", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT f1,\n          COUNT(*) AS n\n   FROM follows\n   GROUP BY f1)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM follows\nGROUP BY f1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0004", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM follows\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM follows", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0012", "sql1": "\nSELECT `name`\nFROM\n  (SELECT `f1`,\n          `f2`,\n          `name`,\n          `email`,\n          `partitionid`,\n          `followers`,\n          `f1` AS `n_distinct`\n   FROM\n     (SELECT `LHS`.`f1` AS `f1`,\n             `LHS`.`f2` AS `f2`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`email` AS `email`,\n             `RHS`.`partitionid` AS `partitionid`,\n             `RHS`.`followers` AS `followers`\n      FROM `follows` AS `LHS`\n      INNER JOIN\n        (SELECT *\n         FROM\n           (SELECT `uid`,\n                   `name`,\n                   `email`,\n                   `partitionid`,\n                   `followers`,\n                   COUNT(DISTINCT `name`) OVER () AS `n_distinct`\n            FROM `user_profiles`)\n         WHERE (`name` != 'Tyler Swift')) AS RHS ON (LHS.f1 = RHS.n_distinct\n                                                     AND LHS.f2 = RHS.uid)))\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM user_profiles AS T1\nJOIN follows AS T2 ON T1.uid = T2.f1\nGROUP BY T2.f1\nHAVING count(*) >\n  (SELECT count(*)\n   FROM user_profiles AS T1\n   JOIN follows AS T2 ON T1.uid = T2.f1\n   WHERE T1.name = 'Tyler Swift')", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0024", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT followers,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.uid AS UID,\n             LHS.text AS text,\n             LHS.createdate AS createdate,\n             RHS.name AS name,\n             RHS.email AS email,\n             RHS.partitionid AS partitionid,\n             RHS.followers AS followers\n      FROM tweets AS LHS\n      INNER JOIN user_profiles AS RHS ON (LHS.uid = RHS.uid))\n   GROUP BY followers,\n            name)\nWHERE (n != 1)\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM user_profiles AS T1\nJOIN tweets AS T2 ON T1.uid = T2.uid\nGROUP BY T2.uid\nHAVING count(*) > 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0003", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM user_profiles\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM user_profiles", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0019", "sql1": "\nSELECT name,\n       followers\nFROM user_profiles\nORDER BY name\n", "sql2": "SELECT name,\n       followers\nFROM user_profiles\nORDER BY followers DESC", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0022", "sql1": "\nSELECT name,\n       n AS count___\nFROM\n  (SELECT LHS.uid AS UID,\n          LHS.name AS name,\n          LHS.email AS email,\n          LHS.partitionid AS partitionid,\n          LHS.followers AS followers,\n          RHS.n AS n\n   FROM user_profiles AS LHS\n   INNER JOIN\n     (SELECT UID,\n             COUNT(*) AS n\n      FROM tweets\n      GROUP BY UID) AS RHS ON (LHS.uid = RHS.uid))\nORDER BY name\n", "sql2": "SELECT T1.name,\n       count(*)\nFROM user_profiles AS T1\nJOIN tweets AS T2 ON T1.uid = T2.uid\nGROUP BY T2.uid", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0018", "sql1": "\nSELECT name,\n       email\nFROM\n  (SELECT LHS.followers AS followers,\n          RHS.uid AS UID,\n          RHS.name AS name,\n          RHS.email AS email,\n          RHS.partitionid AS partitionid,\n          RHS.followers AS followers_other\n   FROM\n     (SELECT MIN(followers) AS followers\n      FROM user_profiles) AS LHS\n   CROSS JOIN user_profiles AS RHS)\nWHERE (followers >= followers_other)\nORDER BY name\n", "sql2": "SELECT name,\n       email\nFROM user_profiles\nORDER BY followers\nLIMIT 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0002", "sql1": "\nSELECT `uid` AS `partitionid`\nFROM `user_profiles`\nWHERE (`name` = 'Iron Man')\nORDER BY partitionid\n", "sql2": "SELECT partitionid\nFROM user_profiles\nWHERE name = 'Iron Man'", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0014", "sql1": "\nSELECT name\nFROM\n  (SELECT followers,\n          name,\n          COUNT(*) AS n\n   FROM\n     (SELECT LHS.id AS id,\n             LHS.uid AS UID,\n             LHS.text AS text,\n             LHS.createdate AS createdate,\n             RHS.name AS name,\n             RHS.email AS email,\n             RHS.partitionid AS partitionid,\n             RHS.followers AS followers\n      FROM tweets AS LHS\n      INNER JOIN user_profiles AS RHS ON (LHS.uid = RHS.uid))\n   GROUP BY followers,\n            name)\nWHERE (n != 1)\nORDER BY name\n", "sql2": "SELECT T1.name\nFROM user_profiles AS T1\nJOIN tweets AS T2 ON T1.uid = T2.uid\nGROUP BY T2.uid\nHAVING count(*) > 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0001", "sql1": "\nSELECT `email`\nFROM `user_profiles`\nWHERE (`name` = 'Mary')\nORDER BY email\n", "sql2": "SELECT email\nFROM user_profiles\nWHERE name = 'Mary'", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0017", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.uid AS UID,\n          LHS.name AS name,\n          LHS.email AS email,\n          LHS.partitionid AS partitionid,\n          LHS.followers AS followers,\n          RHS.followers AS followers_other\n   FROM user_profiles AS LHS\n   CROSS JOIN\n     (SELECT MAX(followers) AS followers\n      FROM user_profiles) AS RHS)\nWHERE (followers >= followers_other)\nORDER BY name\n", "sql2": "SELECT name\nFROM user_profiles\nORDER BY followers DESC\nLIMIT 1", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0021", "sql1": "\nSELECT text\nFROM tweets\nORDER BY text\n", "sql2": "SELECT text\nFROM tweets\nORDER BY createdate", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0020", "sql1": "\nSELECT name\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM user_profiles\n      ORDER BY followers DESC)\n   LIMIT 5)\n", "sql2": "SELECT name\nFROM user_profiles\nORDER BY followers DESC\nLIMIT 5", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0016", "sql1": "\nSELECT `f1`\nFROM\n  (SELECT `f1`,\n          `f2`,\n          `name`,\n          `email`,\n          `partitionid`,\n          `followers`,\n          `f2` AS `uid`\n   FROM\n     (SELECT `LHS`.`f1` AS `f1`,\n             `LHS`.`f2` AS `f2`,\n             `RHS`.`name` AS `name`,\n             `RHS`.`email` AS `email`,\n             `RHS`.`partitionid` AS `partitionid`,\n             `RHS`.`followers` AS `followers`\n      FROM `follows` AS `LHS`\n      INNER JOIN `user_profiles` AS `RHS` ON (`LHS`.`f2` = `RHS`.`uid`)))\nWHERE (`name` = 'Mary'\n       OR `name` = 'Susan')\nORDER BY f1\n", "sql2": "SELECT T2.f1\nFROM user_profiles AS T1\nJOIN follows AS T2 ON T1.uid = T2.f2\nWHERE T1.name = 'Mary'\n  OR T1.name = 'Susan'", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0027", "sql1": "\nSELECT DISTINCT MAX(followers) OVER () AS max_followers_,\n                                    sumfollowers AS sum_followers_\nFROM\n  (SELECT UID,\n          name,\n          email,\n          partitionid,\n          followers,\n          SUM(followers) OVER () AS sumfollowers\n   FROM user_profiles)\nORDER BY max_followers_\n", "sql2": "SELECT max(followers),\n       sum(followers)\nFROM user_profiles", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0007", "sql1": "\nSELECT DISTINCT COUNT(DISTINCT UID) OVER () AS count_distinct_uid_\nFROM tweets\nORDER BY count_distinct_uid_\n", "sql2": "SELECT count(DISTINCT UID)\nFROM tweets", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0011", "sql1": "\nSELECT name,\n       email\nFROM user_profiles\nWHERE (followers >= 1000)\nORDER BY name\n", "sql2": "SELECT name,\n       email\nFROM user_profiles\nWHERE followers > 1000", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/twitter_1/0006", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM tweets\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM tweets", "schema": "spider/twitter_1/tables/db.json", "constraints": "/Users/pinhan/Downloads/Cubes/bole-scripts/data/constraints/spider/twitter_1/tables/db.yaml", "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0013", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM body_builder AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nORDER BY T1.Total DESC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0005", "sql1": "\nSELECT DISTINCT clean_jerk\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          LHS.maxtotal AS maxtotal,\n          RHS.body_builder_id AS body_builder_id_other,\n          RHS.people_id AS people_id_other,\n          RHS.snatch AS snatch_other,\n          RHS.clean_jerk AS clean_jerk_other,\n          RHS.total AS total_other,\n          RHS.maxtotal AS maxtotal_other\n   FROM\n     (SELECT body_builder_id,\n             people_id,\n             snatch,\n             clean_jerk,\n             total,\n             MAX(total) OVER () AS maxtotal\n      FROM body_builder) AS LHS\n   CROSS JOIN\n     (SELECT body_builder_id,\n             people_id,\n             snatch,\n             clean_jerk,\n             total,\n             MAX(total) OVER () AS maxtotal\n      FROM body_builder) AS RHS)\nWHERE (total >= maxtotal_other\n       OR maxtotal < total_other)\nORDER BY clean_jerk\n", "sql2": "SELECT Clean_Jerk\nFROM body_builder\nORDER BY Total DESC\nLIMIT 1", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0004", "sql1": "\nSELECT meansnatch AS avg_snatch_\nFROM\n  (SELECT AVG(snatch) AS meansnatch\n   FROM body_builder)\nORDER BY avg_snatch_\n", "sql2": "SELECT avg(Snatch)\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0024", "sql1": "\nSELECT snatch AS min_snatch_\nFROM\n  (SELECT MIN(snatch) AS snatch\n   FROM body_builder)\nORDER BY min_snatch_\n", "sql2": "SELECT min(snatch)\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0008", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM\n     (SELECT *\n      FROM body_builder\n      WHERE (total > 300.0)) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Total > 300", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0015", "sql1": "\nSELECT birth_place\nFROM\n  (SELECT birth_date,\n          birth_place,\n          MAX(n) AS maxn\n   FROM\n     (SELECT name,\n             weight,\n             n,\n             name_other,\n             height,\n             birth_date,\n             birth_place,\n             n AS people_id\n      FROM\n        (SELECT LHS.name AS name,\n                LHS.weight AS weight,\n                LHS.n AS n,\n                RHS.name AS name_other,\n                RHS.height AS height,\n                RHS.birth_date AS birth_date,\n                RHS.birth_place AS birth_place\n         FROM\n           (SELECT name,\n                   weight,\n                   COUNT(*) AS n\n            FROM people\n            GROUP BY name,\n                     weight) AS LHS\n         INNER JOIN people AS RHS ON (LHS.n = RHS.people_id\n                                         AND LHS.weight = RHS.weight)))\n   GROUP BY birth_date,\n            birth_place)\nORDER BY birth_place\n", "sql2": "SELECT Birth_Place\nFROM people\nGROUP BY Birth_Place\nORDER BY COUNT(*) DESC\nLIMIT 1", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0003", "sql1": "\nSELECT snatch,\n       clean_jerk\nFROM body_builder\nORDER BY snatch\n", "sql2": "SELECT Snatch,\n       Clean_Jerk\nFROM body_builder\nORDER BY Snatch ASC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0019", "sql1": "\nSELECT name,\n       birth_place\nFROM\n  (SELECT *\n   FROM people AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM body_builder AS RHS\n        WHERE (LHS.people_id = RHS.people_id) ))\nORDER BY name\n", "sql2": "SELECT Name,\n       birth_place\nFROM people\nEXCEPT\nSELECT T1.Name,\n       T1.birth_place\nFROM people AS T1\nJOIN body_builder AS T2 ON T1.people_id = T2.people_id", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0018", "sql1": "\nSELECT body_builder_id,\n       people_id,\n       snatch,\n       clean_jerk,\n       total\nFROM body_builder\nORDER BY body_builder_id\n", "sql2": "SELECT *\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0002", "sql1": "\nSELECT total\nFROM body_builder\nORDER BY total\n", "sql2": "SELECT Total\nFROM body_builder\nORDER BY Total ASC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0014", "sql1": "\nSELECT birth_place,\n       n AS count___\nFROM\n  (SELECT birth_place,\n          height,\n          COUNT(*) AS n\n   FROM people\n   GROUP BY birth_place,\n            height)\nORDER BY birth_place\n", "sql2": "SELECT Birth_Place,\n       COUNT(*)\nFROM people\nGROUP BY Birth_Place", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0001", "sql1": "\nSELECT DISTINCT COUNT(*) OVER () AS count___\nFROM body_builder\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM body_builder", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0017", "sql1": "\nSELECT height,\n       weight\nFROM people\nORDER BY height\n", "sql2": "SELECT Height,\n       Weight\nFROM people\nORDER BY Height DESC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0021", "sql1": "\nSELECT DISTINCT n AS count___\nFROM\n  (SELECT name,\n          total,\n          COUNT(*) AS n\n   FROM\n     (SELECT *\n      FROM\n        (SELECT LHS.body_builder_id AS body_builder_id,\n                LHS.people_id AS people_id,\n                LHS.snatch AS snatch,\n                LHS.clean_jerk AS clean_jerk,\n                LHS.total AS total,\n                RHS.people_id AS people_id_other,\n                RHS.name AS name,\n                RHS.height AS height,\n                RHS.weight AS weight,\n                RHS.birth_date AS birth_date,\n                RHS.birth_place AS birth_place\n         FROM body_builder AS LHS\n         CROSS JOIN people AS RHS)\n      WHERE (people_id = people_id_other))\n   GROUP BY name,\n            total)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM people\nWHERE people_id NOT IN\n    (SELECT People_ID\n     FROM body_builder)", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0020", "sql1": "\nSELECT n AS count_distinct_birth_place_\nFROM\n  (SELECT COUNT(*) AS n\n   FROM people)\nORDER BY count_distinct_birth_place_\n", "sql2": "SELECT count(DISTINCT Birth_Place)\nFROM people", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0007", "sql1": "\nSELECT name\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM body_builder AS LHS\n   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY name\n", "sql2": "SELECT T2.Name\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0011", "sql1": "\nSELECT height\nFROM\n  (SELECT LHS.body_builder_id AS body_builder_id,\n          LHS.people_id AS people_id,\n          LHS.snatch AS snatch,\n          LHS.clean_jerk AS clean_jerk,\n          LHS.total AS total,\n          RHS.name AS name,\n          RHS.height AS height,\n          RHS.weight AS weight,\n          RHS.birth_date AS birth_date,\n          RHS.birth_place AS birth_place\n   FROM\n     (SELECT *\n      FROM body_builder\n      WHERE (total < 315.0)) AS LHS\n   LEFT JOIN people AS RHS ON (LHS.people_id = RHS.people_id))\nORDER BY height\n", "sql2": "SELECT T2.Height\nFROM body_builder AS T1\nJOIN people AS T2 ON T1.People_ID = T2.People_ID\nWHERE T1.Total < 315", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/body_builder/0006", "sql1": "\nSELECT birth_date\nFROM people\nORDER BY birth_date\n", "sql2": "SELECT Birth_Date\nFROM People\nORDER BY Height ASC", "schema": "spider/body_builder/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0009", "sql1": "\nSELECT team\nFROM\n  (SELECT *\n   FROM\n     (SELECT *\n      FROM player\n      ORDER BY age DESC)\n   LIMIT 5)\n", "sql2": "SELECT Team\nFROM player\nORDER BY Age DESC\nLIMIT 5", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0013", "sql1": "\nSELECT LOCATION,\n       nickname\nFROM\n  (SELECT LHS.school_id AS school_id,\n          LHS.nickname AS nickname,\n          LHS.colors AS colors,\n          LHS.league AS league,\n          LHS.class AS CLASS,\n          LHS.division AS division,\n          RHS.school AS school,\n          RHS.location AS LOCATION,\n          RHS.enrollment AS enrollment,\n          RHS.founded AS founded,\n          RHS.denomination AS denomination,\n          RHS.boys_or_girls AS boys_or_girls,\n          RHS.day_or_boarding AS day_or_boarding,\n          RHS.year_entered_competition AS year_entered_competition,\n          RHS.school_colors AS school_colors\n   FROM school_details AS LHS\n   INNER JOIN school AS RHS ON (LHS.school_id = RHS.school_id))\nORDER BY LOCATION\n", "sql2": "SELECT T1.Location,\n       T2.Nickname\nFROM school AS T1\nJOIN school_details AS T2 ON T1.School_ID = T2.School_ID", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0005", "sql1": "\nSELECT meanenrollment AS avg_enrollment_\nFROM\n  (SELECT AVG(enrollment) AS meanenrollment\n   FROM school)\nORDER BY avg_enrollment_\n", "sql2": "SELECT avg(Enrollment)\nFROM school", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0004", "sql1": "\nSELECT `enrollment`\nFROM `school`\nWHERE (`denomination` != 'Catholic')\nORDER BY enrollment\n", "sql2": "SELECT Enrollment\nFROM school\nWHERE Denomination != 'Catholic'", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0008", "sql1": "\nSELECT team\nFROM\n  (SELECT *\n   FROM player AS LHS\n   WHERE NOT EXISTS\n       (SELECT 1\n        FROM\n          (SELECT team,\n                  MAX(age) AS age\n           FROM player\n           GROUP BY team) AS RHS\n        WHERE (LHS.team = RHS.team\n               AND LHS.age = RHS.age) ))\nORDER BY team\n", "sql2": "SELECT Team\nFROM player\nORDER BY Age DESC\nLIMIT 1", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0015", "sql1": "\nSELECT denomination,\n       n AS count___\nFROM\n  (SELECT day_or_boarding,\n          denomination,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY day_or_boarding,\n            denomination)\nORDER BY denomination\n", "sql2": "SELECT Denomination,\n       COUNT(*)\nFROM school\nGROUP BY Denomination\nORDER BY COUNT(*) DESC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0003", "sql1": "\nSELECT LOCATION\nFROM school\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM school\nORDER BY Founded DESC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0019", "sql1": "\nSELECT `nickname`\nFROM `school_details`\nWHERE (`division` != 'Division 1')\nORDER BY nickname\n", "sql2": "SELECT Nickname\nFROM school_details\nWHERE Division != 'Division 1'", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0018", "sql1": "\nSELECT denomination\nFROM school\nWHERE (founded < 1890.0\n       AND founded < 1900.0)\nORDER BY denomination\n", "sql2": "SELECT Denomination\nFROM school\nWHERE Founded < 1890 INTERSECT\n  SELECT Denomination\n  FROM school WHERE Founded > 1900", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0002", "sql1": "\nSELECT LOCATION\nFROM school\nORDER BY LOCATION\n", "sql2": "SELECT LOCATION\nFROM school\nORDER BY Enrollment ASC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0014", "sql1": "\nSELECT denomination,\n       n AS count___\nFROM\n  (SELECT day_or_boarding,\n          denomination,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY day_or_boarding,\n            denomination)\nORDER BY denomination\n", "sql2": "SELECT Denomination,\n       COUNT(*)\nFROM school\nGROUP BY Denomination", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0001", "sql1": "\nSELECT n AS count___\nFROM\n  (SELECT COUNT(*) AS n\n   FROM school)\nORDER BY count___\n", "sql2": "SELECT count(*)\nFROM school", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0020", "sql1": "\nSELECT denomination\nFROM\n  (SELECT day_or_boarding,\n          denomination,\n          COUNT(*) AS n\n   FROM school\n   GROUP BY day_or_boarding,\n            denomination)\nWHERE (n > 1)\nORDER BY denomination\n", "sql2": "SELECT Denomination\nFROM school\nGROUP BY Denomination\nHAVING COUNT(*) > 1", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0016", "sql1": "\nSELECT school_colors\nFROM\n  (SELECT LHS.school_id AS school_id,\n          LHS.school AS school,\n          LHS.location AS LOCATION,\n          LHS.enrollment AS enrollment,\n          LHS.founded AS founded,\n          LHS.denomination AS denomination,\n          LHS.boys_or_girls AS boys_or_girls,\n          LHS.day_or_boarding AS day_or_boarding,\n          LHS.year_entered_competition AS year_entered_competition,\n          LHS.school_colors AS school_colors,\n          RHS.enrollment AS enrollment_other\n   FROM school AS LHS\n   CROSS JOIN\n     (SELECT MAX(enrollment) AS enrollment\n      FROM school) AS RHS)\nWHERE (enrollment >= enrollment_other)\nORDER BY school_colors\n\n[   640.317][MainProcess][INFO] Statistics:\n[   640.317][MainProcess][INFO] \tAttempted programs: 302 (approx)\n[   640.317][MainProcess][INFO] \t\tRejected: 301 (approx)\n[   640.318][MainProcess][INFO] \t\tFailed: 0 (approx)\n[   640.318][MainProcess][INFO] \t\tEmpty outputs: 1 (0.3%) (approx)\n[   640.318][MainProcess][INFO] \t\tRedundant lines: 0 (approx)\n[   640.318][MainProcess][INFO] \t\tCache hits: 0 (approx)\n[   640.318][MainProcess][INFO] \t\tCache misses: 0 (approx)\n[   640.319][MainProcess][INFO] \tBlocked programs: 0 (0.000000 / attempted avg.) (approx)\n[   640.319][MainProcess][INFO] \tTotal time spent in enumerator init: 0.000000 (approx)\n[   640.319][MainProcess][INFO] \tTotal time spent in enumerator: 24.598302 (approx)\n[   640.319][MainProcess][INFO] \t\tEnumerated 12.277270 programs/s avg. (just enumeration time)\n[   640.319][MainProcess][INFO] \t\tEnumerated 0.474192 programs/s avg. (overall)\n[   640.319][MainProcess][INFO] \tTotal time spent in evaluation & testing: 150.508676 (approx)\n[   640.319][MainProcess][INFO] \tTotal time spent blocking cubes/programs: 11.747776 (approx)\n[   640.319][MainProcess][INFO] Solution found: [summarise(input0, 'enrollment = max(enrollment)', ''), cross_join(input0, line0, 'enrollment >= enrollment.other')]\n[   640.320][MainProcess][INFO] Solution size: 2\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/home/boleli/miniconda3/envs/cubes/lib/python3.8/site-packages/rpy2/rinterface_lib/embedded.py\", line 163, in endr\n    rlib.R_gc()\n  File \"/home/boleli/Cubes/squares/results.py\", line 53, in handle_sigint\n    print_results()\n  File \"/home/boleli/Cubes/squares/results.py\", line 103, in print_results\n    assert interp.equals(evaluation, 'expected_output')[0]  # this call makes it so that the select() appears in the output\nAssertionError\n", "sql2": "SELECT School_Colors\nFROM school\nORDER BY Enrollment DESC\nLIMIT 1", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0007", "sql1": "\nSELECT n_distinct AS count_distinct_position_\nFROM\n  (SELECT COUNT(DISTINCT POSITION) AS n_distinct\n   FROM player)\nORDER BY count_distinct_position_\n", "sql2": "SELECT count(DISTINCT POSITION)\nFROM player", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0010", "sql1": "\nSELECT team,\n       LOCATION\nFROM\n  (SELECT LHS.school_id AS school_id,\n          LHS.school AS school,\n          LHS.location AS LOCATION,\n          LHS.enrollment AS enrollment,\n          LHS.founded AS founded,\n          LHS.denomination AS denomination,\n          LHS.boys_or_girls AS boys_or_girls,\n          LHS.day_or_boarding AS day_or_boarding,\n          LHS.year_entered_competition AS year_entered_competition,\n          LHS.school_colors AS school_colors,\n          RHS.player_id AS player_id,\n          RHS.player AS player,\n          RHS.team AS team,\n          RHS.age AS age,\n          RHS.position AS POSITION\n   FROM school AS LHS\n   INNER JOIN player AS RHS ON (LHS.school_id = RHS.school_id))\nORDER BY team\n", "sql2": "SELECT T1.Team,\n       T2.Location\nFROM player AS T1\nJOIN school AS T2 ON T1.School_ID = T2.School_ID", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
{"id": "spider_bak/school_player/0006", "sql1": "\nSELECT team\nFROM player\nORDER BY team\n", "sql2": "SELECT Team\nFROM player\nORDER BY Team ASC", "schema": "spider/school_player/tables/db.json", "constraints": null, "timeout": 300, "bound": 3}
