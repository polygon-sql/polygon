qid,mysql_can_execute?,mysql_correct?,mysql_query
0,Y,Y,"SELECT A.MACHINE_ID ,ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') A LEFT JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID GROUP BY MACHINE_ID"
1,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY A.MACHINE_ID"
2,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY 1"
3,Y,Y,"SELECT E.MACHINE_ID, ROUND(SUM(E.TIMESTAMP - S.TIMESTAMP) / COUNT(E.PROCESS_ID), 3) PROCESSING_TIME FROM ACTIVITY E, ACTIVITY S WHERE E.ACTIVITY_TYPE = 'end' AND S.ACTIVITY_TYPE = 'start' AND E.MACHINE_ID = S.MACHINE_ID GROUP BY E.MACHINE_ID"
4,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.DURATION), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, (MAX(TIMESTAMP) - MIN(TIMESTAMP)) AS DURATION FROM ACTIVITY GROUP BY 1, 2 ) A GROUP BY A.MACHINE_ID"
5,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.ENDTIME-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS A JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS ENDTIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) AS B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID ORDER BY A.MACHINE_ID"
6,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE <> B.ACTIVITY_TYPE WHERE A.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID"
7,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' GROUP BY 1"
8,Y,Y,"SELECT A.MACHINE_ID,ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY 1"
9,Y,Y,"SELECT A.MACHINE_ID,ROUND(SUM(A.END_TIME-A.START_TIME)/COUNT(A.PROCESS_ID),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID,PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START_TIME, MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END_TIME FROM ACTIVITY GROUP BY MACHINE_ID,PROCESS_ID) A GROUP BY A.MACHINE_ID"
10,Y,Y,"SELECT A1.MACHINE_ID, (ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP), 3)) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID"
11,Y,Y,"SELECT A1.MACHINE_ID, ROUND((AVG(A2.TIMESTAMP - A1.TIMESTAMP)),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID WHERE A2.ACTIVITY_TYPE = 'end' AND A1.ACTIVITY_TYPE = 'start' GROUP BY A1.MACHINE_ID"
12,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID WHERE A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID"
13,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
14,Y,Y,"SELECT COUNTED.MACHINE_ID, ROUND(SUM(COUNTED.DIFF)/COUNT(*), 3) AS PROCESSING_TIME FROM (SELECT A.MACHINE_ID, A.PROCESS_ID, A.ACTIVITY_TYPE,(B.TIMESTAMP - A.TIMESTAMP) AS DIFF FROM ACTIVITY A, ACTIVITY B WHERE(A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end')) COUNTED GROUP BY MACHINE_ID"
15,Y,Y,"SELECT DISTINCT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE -TIMESTAMP END) /COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
16,Y,Y,"SELECT MACHINE_ID, ROUND( (SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END)) / COUNT(DISTINCT PROCESS_ID) ,3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
17,Y,Y,"SELECT MACHINE_ID, ROUND( AVG(TIME), 3 ) AS PROCESSING_TIME FROM( SELECT MACHINE_ID, PROCESS_ID, SUM(IF(ACTIVITY_TYPE='start', -TIMESTAMP, TIMESTAMP)) AS TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID )A GROUP BY MACHINE_ID"
18,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
19,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN (-1)*TIMESTAMP ELSE TIMESTAMP END)/((COUNT(PROCESS_ID))/2)),3) AS PROCESSING_TIME FROM ACTIVITY A1 GROUP BY MACHINE_ID"
20,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DIFF), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, (MAX(TIMESTAMP) - MIN(TIMESTAMP)) AS DIFF FROM ACTIVITY A GROUP BY MACHINE_ID, PROCESS_ID) T GROUP BY MACHINE_ID"
21,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DUR),3) PROCESSING_TIME FROM (SELECT A1.MACHINE_ID, A1.PROCESS_ID, A2.TIMESTAMP-A1.TIMESTAMP DUR FROM ACTIVITY A1 JOIN ACTIVITY A2 WHERE A1.ACTIVITY_TYPE != A2.ACTIVITY_TYPE AND A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID) A3 WHERE A3.DUR > 0 GROUP BY 1"
22,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DURATION), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN 0 - TIMESTAMP ELSE TIMESTAMP END) AS DURATION FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) T GROUP BY MACHINE_ID"
23,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DURATION),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE NULL END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE NULL END) AS DURATION FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) T GROUP BY 1"
24,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESS_TIME), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END) AS PROCESS_TIME FROM ACTIVITY GROUP BY 1, 2 ) T GROUP BY 1"
25,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) AS T GROUP BY MACHINE_ID"
26,Y,N,"SELECT MACHINE_ID, ROUND(AVG(RUNTIME),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, ROUND(MAX(TIMESTAMP)- MIN(TIMESTAMP),3) AS RUNTIME FROM ACTIVITY GROUP BY 1,2 )TBL GROUP BY 1"
27,Y,N,"SELECT MACHINE_ID, ROUND(AVG(T), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, LAST_VALUE(TIMESTAMP) OVER W - FIRST_VALUE(TIMESTAMP) OVER W AS T FROM ACTIVITY WINDOW W AS (PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE)) B GROUP BY MACHINE_ID"
28,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
29,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
30,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
31,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END - CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END)/COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
32,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END) / (COUNT(PROCESS_ID)/2),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
33,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
34,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE -1*TIMESTAMP END)/ COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
35,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start', -TIMESTAMP, TIMESTAMP)) / COUNT(DISTINCT(PROCESS_ID)), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
36,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DIFF),3) AS PROCESSING_TIME FROM ( SELECT A.MACHINE_ID, (A.TIMESTAMP - B.TIMESTAMP) AS DIFF FROM ACTIVITY A, ACTIVITY B WHERE A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'end' AND B.ACTIVITY_TYPE = 'start' ) TMP GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
37,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(END_TIME - START_TIME) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME, LAG(TIMESTAMP, 1) OVER (PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE DESC) AS END_TIME FROM ACTIVITY) A GROUP BY MACHINE_ID"
38,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') AS S JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') AS E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY MACHINE_ID"
39,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY S JOIN ACTIVITY E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID AND S.ACTIVITY_TYPE = 'start' AND E.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
40,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP-S.TIMESTAMP),3) AS PROCESSING_TIME FROM ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ) AS S INNER JOIN ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' )AS E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY S.MACHINE_ID"
41,Y,Y,"SELECT SUB1.MACHINE_ID, ROUND(SUM(SUB2.TIMESTAMP-SUB1.TIMESTAMP)/COUNT(*),3) AS PROCESSING_TIME FROM ACTIVITY SUB1 LEFT JOIN ACTIVITY SUB2 ON SUB1.MACHINE_ID = SUB2.MACHINE_ID WHERE SUB1.PROCESS_ID=SUB2.PROCESS_ID AND SUB1.ACTIVITY_TYPE = 'start' AND SUB2.ACTIVITY_TYPE='end' GROUP BY 1"
42,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') T1 JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID GROUP BY MACHINE_ID"
43,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY AS T1 INNER JOIN ACTIVITY AS T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID AND T1.ACTIVITY_TYPE = 'start' AND T2.ACTIVITY_TYPE = 'end' GROUP BY T1.MACHINE_ID"
44,Y,Y,"SELECT T_START.MACHINE_ID, ROUND(AVG(T_END.TIMESTAMP- T_START.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS T_START JOIN ACTIVITY AS T_END ON T_START.MACHINE_ID = T_END.MACHINE_ID AND T_START.PROCESS_ID = T_END.PROCESS_ID WHERE T_START.ACTIVITY_TYPE = 'start' AND T_END.ACTIVITY_TYPE = 'end' GROUP BY T_START.MACHINE_ID"
45,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.TIMESTAMP - B.TIMESTAMP),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID,PROCESS_ID) A JOIN (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' GROUP BY MACHINE_ID,PROCESS_ID) B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID GROUP BY A.MACHINE_ID"
46,Y,Y,"SELECT MACHINE_ID AS MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start',-1,1)*TIMESTAMP)/COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
47,Y,Y,"SELECT MACHINE_ID,ROUND((SUM(STRTTIME)+SUM(ENDTIME))/COUNT(PROCESS_ID),3) AS PROCESSING_TIME FROM(SELECT PROCESS_ID ,MACHINE_ID,SUM(CASE WHEN ACTIVITY_TYPE='start' THEN -1*TIMESTAMP END) AS STRTTIME ,SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP END) AS ENDTIME FROM ACTIVITY GROUP BY PROCESS_ID ,MACHINE_ID) T GROUP BY MACHINE_ID"
48,Y,Y,"SELECT TEMP.MACHINE_ID, ROUND(AVG(END-BEGIN), 3) PROCESSING_TIME FROM(SELECT A.MACHINE_ID, A.TIMESTAMP BEGIN, B.TIMESTAMP END FROM ACTIVITY A, ACTIVITY B WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' AND A.PROCESS_ID = B.PROCESS_ID AND A.MACHINE_ID = B.MACHINE_ID) TEMP GROUP BY TEMP.MACHINE_ID"
49,Y,Y,"WITH CTE AS ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE NULL END) AS START_TIME, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE NULL END) AS END_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND((SUM(END_TIME-START_TIME)/COUNT(PROCESS_ID) ),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
50,Y,Y,"WITH CTE AS ( SELECT A.MACHINE_ID, A.TIMESTAMP - B.TIMESTAMP AS PROCESSING_TIME FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE <> B.ACTIVITY_TYPE AND A.ACTIVITY_TYPE = 'end' ) SELECT CTE.MACHINE_ID, ROUND(AVG(CTE.PROCESSING_TIME),3) AS PROCESSING_TIME FROM CTE GROUP BY CTE.MACHINE_ID ORDER BY CTE.MACHINE_ID ASC"
51,Y,Y,"WITH CTE AS (SELECT MACHINE_ID, PROCESS_ID, CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE NULL END AS START_TIME, CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE NULL END AS END_TIME FROM ACTIVITY) SELECT MACHINE_ID, ROUND((SUM(END_TIME)-SUM(START_TIME))/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM CTE GROUP BY 1"
52,Y,Y,"WITH MAC_TIME AS (SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START_TIME, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END_TIME FROM ACTIVITY GROUP BY 1,2), PROCESS_TIME AS (SELECT MACHINE_ID, PROCESS_ID, (END_TIME-START_TIME) AS PROCESSING_TIME FROM MAC_TIME) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM PROCESS_TIME GROUP BY 1"
53,Y,Y,"WITH S AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), E AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) SELECT E.MACHINE_ID AS MACHINE_ID, ROUND(SUM(E.END_TIME - S.START_TIME)/COUNT(1),3) AS PROCESSING_TIME FROM S S INNER JOIN E E ON E.MACHINE_ID = S.MACHINE_ID AND E.PROCESS_ID = S.PROCESS_ID GROUP BY E.MACHINE_ID"
54,Y,Y,"WITH BASE_TABLE AS ( SELECT S.MACHINE_ID AS MACHINE_ID, S.PROCESS_ID AS PROCESS_ID, (E_TS - S_TS) AS PROCESS_TS FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS S_TS FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') AS S LEFT JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS E_TS FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') AS E USING ( MACHINE_ID, PROCESS_ID) GROUP BY 1,2,3 ) SELECT MACHINE_ID, ROUND(AVG(PROCESS_TS), 3) AS PROCESSING_TIME FROM BASE_TABLE GROUP BY 1"
55,Y,Y,"WITH MACHINE_PROCESS AS ( SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS TIME_TAKEN FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(TIME_TAKEN), 3) AS PROCESSING_TIME FROM MACHINE_PROCESS GROUP BY MACHINE_ID ORDER BY 1"
56,Y,Y,"WITH PROCESS_TIMES AS (SELECT A1.MACHINE_ID, A1.PROCESS_ID, (A2.TIMESTAMP - A1.TIMESTAMP) AS PROCESS_TIME FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end') SELECT MACHINE_ID, ROUND(AVG(PROCESS_TIME), 3) AS PROCESSING_TIME FROM PROCESS_TIMES GROUP BY 1 ORDER BY 1"
57,Y,Y,"WITH SRC AS ( SELECT MACHINE_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -TIMESTAMP END) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME), 3) PROCESSING_TIME FROM SRC GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
58,Y,Y,"WITH START_CTE AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE 1=1 AND ACTIVITY_TYPE='start') , END_CTE AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE 1=1 AND ACTIVITY_TYPE='end') SELECT SC.MACHINE_ID, ROUND(SUM(EC.TIMESTAMP-SC.TIMESTAMP)/COUNT(*),3) PROCESSING_TIME FROM START_CTE SC, END_CTE EC WHERE 1=1 AND SC.MACHINE_ID=EC.MACHINE_ID AND SC.PROCESS_ID=EC.PROCESS_ID GROUP BY SC.MACHINE_ID"
59,Y,Y,"WITH START_TABLE AS ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), END_TABLE AS ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ), TEMP AS ( SELECT START_TABLE.MACHINE_ID, START_TABLE.PROCESS_ID, START_TABLE.TIMESTAMP AS START_TIME, END_TABLE.TIMESTAMP AS END_TIME FROM START_TABLE JOIN END_TABLE ON START_TABLE.MACHINE_ID = END_TABLE.MACHINE_ID AND START_TABLE.PROCESS_ID = END_TABLE.PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(END_TIME - START_TIME),3) AS PROCESSING_TIME FROM TEMP GROUP BY MACHINE_ID"
60,Y,N,"WITH START_TIME AS( SELECT MACHINE_ID, PROCESS_ID,TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' GROUP BY MACHINE_ID, PROCESS_ID ORDER BY MACHINE_ID ), END_TIME AS( SELECT MACHINE_ID, PROCESS_ID,TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID, PROCESS_ID ORDER BY MACHINE_ID ), DURATION AS( SELECT S.MACHINE_ID, ROUND(E.TIMESTAMP - S.TIMESTAMP, 3) AS DURATIONS FROM START_TIME S JOIN END_TIME E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(DURATIONS),3) AS PROCESSING_TIME FROM DURATION GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
61,Y,Y,"WITH TABLE1 AS (SELECT MACHINE_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM TABLE1 GROUP BY MACHINE_ID"
62,Y,Y,"WITH TBL1 AS( SELECT MACHINE_ID , PROCESS_ID , ACTIVITY_TYPE , LEAD(TIMESTAMP) OVER(PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE DESC) - TIMESTAMP AS DURATION FROM ACTIVITY), TBL2 AS( SELECT * FROM TBL1 WHERE ACTIVITY_TYPE='end') SELECT MACHINE_ID , ROUND(AVG(-1*DURATION),3) AS PROCESSING_TIME FROM TBL2 GROUP BY MACHINE_ID"
63,Y,Y,"WITH TIMES AS ( SELECT A.MACHINE_ID, A.PROCESS_ID, CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END AS START_TIME, CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END AS END_TIME FROM ACTIVITY A ), AVGS AS ( SELECT MACHINE_ID, PROCESS_ID, SUM(END_TIME) - SUM(START_TIME) AS TIME_DIFF FROM TIMES GROUP BY 1,2 ) SELECT MACHINE_ID, ROUND(SUM(TIME_DIFF) / COUNT(PROCESS_ID),3) AS PROCESSING_TIME FROM AVGS GROUP BY 1 ORDER BY 1"
64,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS A1 INNER JOIN ACTIVITY AS A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A1.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID"
65,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A1.TIMESTAMP- A2.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'end' AND A2.ACTIVITY_TYPE = 'start' GROUP BY 1"
66,Y,Y,"SELECT A.MACHINE_ID AS MACHINE_ID, ROUND((A.END_TIMESTAMP-A.START_TIMESTAMP)/A.PROCESS_COUNT,3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID,COUNT(DISTINCT PROCESS_ID) AS PROCESS_COUNT, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END ) AS START_TIMESTAMP, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END ) AS END_TIMESTAMP FROM ACTIVITY GROUP BY MACHINE_ID ) A GROUP BY MACHINE_ID"
67,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.TIMESTAMP-B.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID WHERE A.ACTIVITY_TYPE = 'end' AND B.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID"
68,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(ACT_END.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A LEFT JOIN ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='end' ) ACT_END ON A.MACHINE_ID=ACT_END.MACHINE_ID AND A.PROCESS_ID=ACT_END.PROCESS_ID WHERE A.ACTIVITY_TYPE='start' GROUP BY MACHINE_ID"
69,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') A JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') B ON A.MACHINE_ID =B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID GROUP BY A.MACHINE_ID"
70,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ) A INNER JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID GROUP BY A.MACHINE_ID"
71,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A INNER JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
72,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A INNER JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY 1"
73,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
74,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON ( A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID) WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
75,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP -A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID =B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE A.ACTIVITY_TYPE ='start' AND B.ACTIVITY_TYPE ='end' GROUP BY A.MACHINE_ID ORDER BY MACHINE_ID ASC"
76,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='start')A JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='end')B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID GROUP BY 1"
77,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND (A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end') GROUP BY MACHINE_ID"
78,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) PROCESSING_TIME FROM ACTIVITY A, ACTIVITY B WHERE A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY A.MACHINE_ID"
79,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3)AS PROCESSING_TIME FROM ACTIVITY A INNER JOIN ACTIVITY B ON A. MACHINE_ID=B.MACHINE_ID WHERE A. ACTIVITY_TYPE != B.ACTIVITY_TYPE AND A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID AND B.TIMESTAMP>A.TIMESTAMP GROUP BY A.MACHINE_ID"
80,Y,Y,"SELECT A.MACHINE_ID, ROUND(SUM(PROCTIME)/COUNT(MACHINE_ID),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID,PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS PROCTIME FROM ACTIVITY GROUP BY 1,2) A GROUP BY A.MACHINE_ID"
81,Y,Y,"SELECT A.MACHINE_ID,ROUND(SUM(B.END-A.START)/COUNT(B.END-A.START),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP AS START FROM ACTIVITY WHERE ACTIVITY_TYPE ='start') A INNER JOIN (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP AS END FROM ACTIVITY WHERE ACTIVITY_TYPE ='end') B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID GROUP BY A.MACHINE_ID"
82,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(ABS(A1.TIMESTAMP - A2.TIMESTAMP)),3) AS PROCESSING_TIME FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE <> A2.ACTIVITY_TYPE GROUP BY 1"
83,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP),3)AS PROCESSING_TIME FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID WHERE A1.ACTIVITY_TYPE != A2.ACTIVITY_TYPE AND A1.ACTIVITY_TYPE = 'start' GROUP BY A1.MACHINE_ID"
84,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A1.TIMESTAMP-A2.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS A1 JOIN ACTIVITY AS A2 ON A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID AND A2.ACTIVITY_TYPE = 'start' AND A1.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID"
85,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP - A1.TIMESTAMP), 3) PROCESSING_TIME FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID"
86,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP -A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE ='start' AND A2.ACTIVITY_TYPE ='end' GROUP BY A1.MACHINE_ID"
87,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP-A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' AND A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2. PROCESS_ID GROUP BY A1.MACHINE_ID"
88,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP-A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS A1 JOIN ACTIVITY AS A2 ON (A1.MACHINE_ID = A2.MACHINE_ID) AND (A1.PROCESS_ID = A2.PROCESS_ID) AND (A2.TIMESTAMP > A1.TIMESTAMP) GROUP BY MACHINE_ID"
89,Y,Y,"SELECT ACTIVITY_START.MACHINE_ID ,ROUND(AVG(ACTIVITY_END.TIMESTAMP - ACTIVITY_START.TIMESTAMP), 3) PROCESSING_TIME FROM ACTIVITY ACTIVITY_START INNER JOIN ACTIVITY ACTIVITY_END ON ACTIVITY_START.MACHINE_ID = ACTIVITY_END.MACHINE_ID AND ACTIVITY_START.PROCESS_ID = ACTIVITY_END.PROCESS_ID AND ACTIVITY_START.ACTIVITY_TYPE = 'start' AND ACTIVITY_END.ACTIVITY_TYPE = 'end' GROUP BY ACTIVITY_START.MACHINE_ID"
90,Y,Y,"SELECT B.MACHINE_ID, ROUND(AVG(A.TIMESTAMP - B.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY B JOIN ACTIVITY A ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'end' AND B.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID"
91,Y,Y,"SELECT DISTINCT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' GROUP BY A.MACHINE_ID"
92,Y,Y,"SELECT DISTINCT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE = 'start', -TIMESTAMP, TIMESTAMP)) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
93,Y,Y,"SELECT MACHINE_ID , ROUND(AVG(DIFF_TIME),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID , PROCESS_ID , SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) AS DIFF_TIME FROM ACTIVITY GROUP BY 1 ,2 ) AGG GROUP BY 1"
94,Y,Y,"SELECT MACHINE_ID , ROUND(2*AVG(IF(ACTIVITY_TYPE='end', TIMESTAMP, -1* TIMESTAMP)), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
95,Y,Y,"SELECT MACHINE_ID , ROUND(AVG(DURATION),3) AS PROCESSING_TIME FROM ( SELECT S.MACHINE_ID , S.PROCESS_ID , SUM(CASE WHEN E.ACTIVITY_TYPE = 'end' THEN E.TIMESTAMP END - CASE WHEN S.ACTIVITY_TYPE = 'start' THEN S.TIMESTAMP END) AS DURATION FROM ACTIVITY S JOIN ACTIVITY E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY 1,2 ) A GROUP BY 1 ORDER BY 1"
96,Y,Y,"SELECT MACHINE_ID , ROUND(AVG(ENDT-STARTT),3) AS PROCESSING_TIME FROM (SELECT DISTINCT MACHINE_ID ,PROCESS_ID , SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS STARTT , SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS ENDT FROM ACTIVITY GROUP BY 1,2) T1 GROUP BY 1"
97,Y,Y,"SELECT MACHINE_ID , ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID , PROCESS_ID , AVG(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE NULL END) - AVG(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE NULL END) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID , PROCESS_ID ) X GROUP BY MACHINE_ID"
98,Y,Y,"SELECT MACHINE_ID , ROUND(SUM(IF(ACTIVITY_TYPE = 'start', -1, 1) *TIMESTAMP)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
99,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END)) / COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
100,Y,Y,"SELECT MACHINE_ID, ROUND(AVG((CASE WHEN ACTIVITY_TYPE='start' THEN -1 ELSE 1 END)*TIMESTAMP)*2, 3) AS PROCESSING_TIME FROM ACTIVITY A GROUP BY MACHINE_ID"
101,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(TIME),3) PROCESSING_TIME FROM ( SELECT MACHINE_ID, MAX(TIMESTAMP)-MIN(TIMESTAMP) TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) MP GROUP BY 1"
102,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start',-TIMESTAMP,TIMESTAMP))/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
103,Y,Y,"SELECT MACHINE_ID, IFNULL(ROUND(AVG(PROCESSING_TIME),3),0)AS PROCESSING_TIME FROM ( SELECT A1.MACHINE_ID, A1.PROCESS_ID, A1.TIMESTAMP - A2.TIMESTAMP AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') A1 LEFT JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID ) C GROUP BY 1"
104,Y,Y,"SELECT MACHINE_ID, ROUND( ( SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) )/COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1 ORDER BY 1"
105,Y,Y,"SELECT MACHINE_ID, ROUND(((SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE 0 END)- SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE 0 END))/COUNT(DISTINCT PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
106,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END)-SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END))/COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
107,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END)) / COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
108,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(IF(ACTIVITY_TYPE = 'end',TIMESTAMP,-TIMESTAMP)))/COUNT(DISTINCT PROCESS_ID),3) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
109,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(IF(ACTIVITY_TYPE = 'end', TIMESTAMP, 0)) - SUM(IF(ACTIVITY_TYPE = 'start', TIMESTAMP, 0))) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
110,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(IF(ACTIVITY_TYPE='end',TIMESTAMP,NULL))-SUM(IF(ACTIVITY_TYPE='start',TIMESTAMP,NULL)))/COUNT(IF(ACTIVITY_TYPE='end',1,NULL)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
111,Y,Y,"SELECT MACHINE_ID, ROUND(2*SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -1*TIMESTAMP ELSE TIMESTAMP END)/COUNT(PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
112,Y,Y,"SELECT MACHINE_ID, ROUND(AVG( CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END )*2, 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
113,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(CASE WHEN ACTIVITY_TYPE = 'start' THEN 0-TIMESTAMP ELSE TIMESTAMP END)*2 ,3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
114,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(CASE WHEN ACTIVITY_TYPE = 'start' THEN -1*TIMESTAMP ELSE TIMESTAMP END)*2, 3) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
115,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(CASE WHEN ACTIVITY_TYPE= 'start' THEN -TIMESTAMP ELSE TIMESTAMP END)*2,3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
116,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DUR), 3) PROCESSING_TIME FROM ( SELECT MACHINE_ID, (TIMESTAMP - LEAD(TIMESTAMP, 1) OVER(PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE DESC)) DUR FROM ACTIVITY ) T WHERE DUR IS NOT NULL GROUP BY MACHINE_ID"
117,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DURATION),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP END) - SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP END) AS DURATION FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) AS TBL GROUP BY MACHINE_ID"
118,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(END_TIME - START_TIME),3) AS PROCESSING_TIME FROM (SELECT A1.MACHINE_ID AS MACHINE_ID, A1.PROCESS_ID AS PROCESS_ID, A1.TIMESTAMP AS START_TIME, A2.TIMESTAMP AS END_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' AND A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID GROUP BY A1.MACHINE_ID,A1.PROCESS_ID) T GROUP BY MACHINE_ID"
119,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(END_TS - START_TS),3) PROCESSING_TIME FROM ( SELECT MACHINE_ID,LEAD(TIMESTAMP,1)OVER(PARTITION BY MACHINE_ID,PROCESS_ID ORDER BY ACTIVITY_TYPE) END_TS, TIMESTAMP START_TS FROM ACTIVITY) A GROUP BY MACHINE_ID"
120,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESSING),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, TIMESTAMP - LAG(TIMESTAMP,1,NULL) OVER (PARTITION BY MACHINE_ID,PROCESS_ID ORDER BY TIMESTAMP ASC) AS PROCESSING FROM ACTIVITY) AS A WHERE ACTIVITY_TYPE='end' GROUP BY 1"
121,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM( SELECT A.MACHINE_ID, A.PROCESS_ID, END_TIME-START_TIME AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE ='start') A JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE ='end') B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID =B.PROCESS_ID )C GROUP BY MACHINE_ID"
122,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(TOTAL), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP - LAG(TIMESTAMP) OVER(PARTITION BY PROCESS_ID, MACHINE_ID ORDER BY ACTIVITY_TYPE) AS TOTAL FROM ACTIVITY) D GROUP BY MACHINE_ID"
123,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(TP),3) AS PROCESSING_TIME FROM (SELECT A.MACHINE_ID, A.TIMESTAMP-B.TIMESTAMP AS TP FROM ACTIVITY A JOIN ACTIVITY B WHERE A.MACHINE_ID= B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID AND A.ACTIVITY_TYPE='end' AND B.ACTIVITY_TYPE='start') T GROUP BY MACHINE_ID"
124,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -1*TIMESTAMP ELSE TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID), 3) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
125,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -1*TIMESTAMP ELSE TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1 ORDER BY 1"
126,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP ELSE TIMESTAMP END) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
127,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END)/CAST(COUNT(DISTINCT PROCESS_ID) AS FLOAT), 3) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
128,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE='start' THEN -1*TIMESTAMP ELSE TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
129,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE='start' THEN -TIMESTAMP ELSE TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
130,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(END-START)/COUNT(MACHINE_ID),3) AS PROCESSING_TIME FROM( SELECT DISTINCT MACHINE_ID, PROCESS_ID, (SELECT TIMESTAMP FROM ACTIVITY B WHERE B.MACHINE_ID=A.MACHINE_ID AND B.PROCESS_ID=A.PROCESS_ID AND B.ACTIVITY_TYPE='start') AS START, (SELECT TIMESTAMP FROM ACTIVITY C WHERE C.MACHINE_ID=A.MACHINE_ID AND C.PROCESS_ID=A.PROCESS_ID AND C.ACTIVITY_TYPE='end') AS END FROM ACTIVITY A)T GROUP BY MACHINE_ID"
131,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(END_TIME - START_TIME) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START_TIME, MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) AS A GROUP BY MACHINE_ID"
132,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(END_TIME-START_TIME)/COUNT(*),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) AS START_TIME, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) AS END_TIME FROM ACTIVITY GROUP BY 1,2)A GROUP BY 1"
133,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE = 'start', ACTIVITY.TIMESTAMP * (-1), ACTIVITY.TIMESTAMP)) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
134,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start',-TIMESTAMP,TIMESTAMP))/COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
135,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(PROCESSING_TIME)/COUNT(PROCESS_ID),3) PROCESSING_TIME FROM ( SELECT DISTINCT A1.MACHINE_ID, A1.PROCESS_ID, A2.TIMESTAMP-A1.TIMESTAMP PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID WHERE A1.ACTIVITY_TYPE='start' AND A2.ACTIVITY_TYPE='end' )T GROUP BY 1"
136,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(RUNTIME)/COUNT(PROCESS_ID),3) AS PROCESSING_TIME FROM( SELECT MACHINE_ID,PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS RUNTIME FROM ACTIVITY GROUP BY 1,2 )TMP GROUP BY 1"
137,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(TIME_DIFF)/COUNT(*), 3) AS PROCESSING_TIME FROM ( SELECT A.MACHINE_ID, A.PROCESS_ID, B.TIMESTAMP - A.TIMESTAMP AS TIME_DIFF FROM ACTIVITY A INNER JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end') C GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
138,Y,Y,"SELECT MACHINE_ID,ROUND(AVG(CASE WHEN ACTIVITY_TYPE = 'start' THEN 0-TIMESTAMP ELSE TIMESTAMP END)*2,3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
139,Y,Y,"SELECT MACHINE_ID,ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID,PROCESS_ID, MAX(TIMESTAMP)- MIN(TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID,PROCESS_ID) AS F GROUP BY MACHINE_ID"
140,Y,Y,"SELECT MACHINE_ID,ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM( SELECT MACHINE_ID,PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1,2 ORDER BY 1,2) SUB GROUP BY 1 ORDER BY 1"
141,Y,Y,"SELECT MACHINE_ID,ROUND(IFNULL((SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE 0 END)-SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE 0 END))/COUNT(DISTINCT PROCESS_ID),0),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1 ORDER BY 1"
142,Y,Y,"SELECT ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END))/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME, MACHINE_ID FROM ACTIVITY GROUP BY MACHINE_ID"
143,Y,Y,"SELECT S.MACHINE_ID , ROUND(AVG(E.TIMESTAMP-S.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY S JOIN ACTIVITY E WHERE S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID=E.PROCESS_ID AND S.ACTIVITY_TYPE = 'start' AND E.ACTIVITY_TYPE='end' GROUP BY S.MACHINE_ID"
144,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG((E.TIMESTAMP - S.TIMESTAMP)),3) AS PROCESSING_TIME FROM ACTIVITY S JOIN ACTIVITY E ON S.MACHINE_ID=E.MACHINE_ID WHERE S.ACTIVITY_TYPE='start' AND E.ACTIVITY_TYPE='end' AND S.PROCESS_ID=E.PROCESS_ID GROUP BY S.MACHINE_ID"
145,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY S JOIN ACTIVITY E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID AND S.ACTIVITY_TYPE = 'start' AND E.ACTIVITY_TYPE = 'end' GROUP BY S.MACHINE_ID ORDER BY S.MACHINE_ID"
146,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP),3) AS PROCESSING_TIME FROM ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ) S INNER JOIN ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY S.MACHINE_ID"
147,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP-S.TIMESTAMP),3) PROCESSING_TIME FROM ACTIVITY S JOIN ACTIVITY E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID AND S.ACTIVITY_TYPE = 'start' AND E.ACTIVITY_TYPE = 'end' GROUP BY S.MACHINE_ID"
148,Y,Y,"SELECT S1.MACHINE_ID, ROUND(SUM(S2.PROCESS_TIME * 1.0/ S1.NO_OF_PROCESS),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, COUNT(DISTINCT(PROCESS_ID)) AS NO_OF_PROCESS FROM ACTIVITY GROUP BY MACHINE_ID )S1 INNER JOIN ( SELECT A1.MACHINE_ID, A1.PROCESS_ID, A1.TIMESTAMP - A2.TIMESTAMP AS PROCESS_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end')A1 INNER JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID )S2 ON S1.MACHINE_ID = S2.MACHINE_ID GROUP BY S1.MACHINE_ID"
149,Y,Y,"SELECT T1.MACHINE_ID AS MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS T1 JOIN ACTIVITY AS T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID AND T1.ACTIVITY_TYPE!=T2.ACTIVITY_TYPE AND T1.ACTIVITY_TYPE='start' GROUP BY T1.MACHINE_ID"
150,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY T1 JOIN ACTIVITY T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID WHERE T2.TIMESTAMP > T1.TIMESTAMP GROUP BY T1.MACHINE_ID ORDER BY T1.MACHINE_ID"
151,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP-T1.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY T1 INNER JOIN ACTIVITY T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID AND T1.ACTIVITY_TYPE = 'start' AND T2.ACTIVITY_TYPE = 'end' GROUP BY T1.MACHINE_ID"
152,Y,Y,"SELECT T_START.MACHINE_ID, ROUND(AVG(T_END.TIMESTAMP - T_START.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS T_START JOIN ACTIVITY AS T_END ON T_START.MACHINE_ID = T_END.MACHINE_ID WHERE T_START.ACTIVITY_TYPE = 'start' AND T_END.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
153,Y,Y,"SELECT TEMP.MACHINE_ID,ROUND(AVG(T),3) AS PROCESSING_TIME FROM ( SELECT A.MACHINE_ID,A.PROCESS_ID, ABS(A.TIMESTAMP-B.TIMESTAMP) AS T FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID AND A.ACTIVITY_TYPE<> B.ACTIVITY_TYPE GROUP BY 1,2 ) TEMP GROUP BY TEMP.MACHINE_ID"
154,Y,Y,"WITH A AS (SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS DURATION FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(DURATION), 3) AS PROCESSING_TIME FROM A GROUP BY MACHINE_ID"
155,Y,Y,"WITH CTE AS ( SELECT MACHINE_ID, PROCESS_ID, CASE WHEN ACTIVITY_TYPE = 'start' THEN -1 * TIMESTAMP ELSE TIMESTAMP END AS TIME FROM ACTIVITY ) SELECT MACHINE_ID, ROUND(SUM(TIME)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
156,Y,Y,"WITH CTE AS ( SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP)- MIN(TIMESTAMP) DURATION FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(DURATION),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
157,Y,N,"WITH CTE AS ( SELECT MACHINE_ID, SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE 0 END) END1, SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE 0 END) START1 FROM ACTIVITY GROUP BY MACHINE_ID) SELECT MACHINE_ID, ROUND((END1-START1)/(SELECT COUNT(DISTINCT PROCESS_ID) FROM ACTIVITY),3) PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
158,Y,Y,"WITH CTE AS (SELECT A1.MACHINE_ID, A1.PROCESS_ID, (A2.TIMESTAMP - A1.TIMESTAMP) AS DURATION FROM ACTIVITY AS A1 JOIN ACTIVITY AS A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID, A1.PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(DURATION), 3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID ORDER BY MACHINE_ID ASC"
159,Y,Y,"WITH CTE AS( SELECT MACHINE_ID, COUNT(DISTINCT PROCESS_ID) AS PROCESS_CNT, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -1*TIMESTAMP WHEN ACTIVITY_TYPE = 'end' THEN 1*TIMESTAMP ELSE NULL END) AS PROCESS_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(PROCESS_TIME),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
160,Y,Y,"WITH CTE AS( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP*(-1) ELSE TIMESTAMP END) AS SUM_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(SUM_TIME),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
161,Y,Y,"WITH CTE1 AS ( SELECT MACHINE_ID , PROCESS_ID , SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) AS DIFF_TIME FROM ACTIVITY GROUP BY 1 ,2 ) SELECT MACHINE_ID , ROUND(AVG(DIFF_TIME),3) AS PROCESSING_TIME FROM CTE1 GROUP BY 1"
162,Y,Y,"WITH CTE_TAB AS ( SELECT MACHINE_ID, PROCESS_ID, (SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE 0 END)-SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE 0 END)) AS PROCESSING_TIME_DIFF FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(SUM(PROCESSING_TIME_DIFF)/COUNT(1),3) AS PROCESSING_TIME FROM CTE_TAB GROUP BY MACHINE_ID"
163,Y,Y,"WITH DIFFERENCES AS (SELECT A1.MACHINE_ID, (A2.TIMESTAMP-A1.TIMESTAMP) AS TIMEDIFFERENCE FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE='start' AND A2.ACTIVITY_TYPE='end') SELECT MACHINE_ID, ROUND(AVG(TIMEDIFFERENCE),3) AS PROCESSING_TIME FROM DIFFERENCES GROUP BY 1"
164,Y,Y,"WITH E AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end'), S AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') SELECT E.MACHINE_ID, ROUND(AVG(E.END_TIME-S.START_TIME),3) AS PROCESSING_TIME FROM E JOIN S ON E.MACHINE_ID = S.MACHINE_ID AND E.PROCESS_ID = S.PROCESS_ID GROUP BY E.MACHINE_ID"
165,Y,Y,"WITH E AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end'), S AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') SELECT E.MACHINE_ID, ROUND(SUM(END_TIME - START_TIME)/COUNT(E.PROCESS_ID),3) AS PROCESSING_TIME FROM E JOIN S ON E.MACHINE_ID = S.MACHINE_ID AND E.PROCESS_ID = S.PROCESS_ID GROUP BY E.MACHINE_ID"
166,Y,Y,"WITH MSTART AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), MEND AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ), TIME_DIFF AS ( SELECT S.MACHINE_ID, S.PROCESS_ID, E.TIMESTAMP - S.TIMESTAMP AS T_DIFF FROM MSTART AS S JOIN MEND AS E ON S.PROCESS_ID = E.PROCESS_ID AND S.MACHINE_ID = E.MACHINE_ID ) SELECT MACHINE_ID, ROUND(AVG(T_DIFF), 3) AS PROCESSING_TIME FROM TIME_DIFF GROUP BY MACHINE_ID"
167,Y,N,"WITH N_PROCESS_ID AS ( SELECT COUNT(DISTINCT PROCESS_ID) AS COUNT FROM ACTIVITY ) SELECT T1.MACHINE_ID, ROUND(SUM(T2.TIMESTAMP - T1.TIMESTAMP) / (SELECT COUNT FROM N_PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY T1 JOIN ACTIVITY T2 ON (T2.MACHINE_ID = T1.MACHINE_ID AND T2.PROCESS_ID = T1.PROCESS_ID) WHERE T1.ACTIVITY_TYPE = 'start' AND T2.ACTIVITY_TYPE = 'end' GROUP BY T1.MACHINE_ID"
168,Y,Y,"WITH START AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), END AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP), 3) AS PROCESSING_TIME FROM START S JOIN END E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY MACHINE_ID"
169,Y,Y,"WITH START_TAB AS(SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), END_TAB AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') SELECT END_TAB.MACHINE_ID, ROUND(AVG(END_TAB.END_TIME - START_TAB.START_TIME),3) PROCESSING_TIME FROM START_TAB JOIN END_TAB ON END_TAB.MACHINE_ID = START_TAB.MACHINE_ID AND END_TAB.PROCESS_ID = START_TAB.PROCESS_ID GROUP BY MACHINE_ID"
170,Y,Y,"WITH STARTTIME AS (SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE 0 END)AS STARTTIME FROM ACTIVITY GROUP BY MACHINE_ID,PROCESS_ID), ENDTIME AS (SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE 0 END)AS ENDTIME FROM ACTIVITY GROUP BY MACHINE_ID,PROCESS_ID) , BASE AS (SELECT S.MACHINE_ID, S.PROCESS_ID, SUM(E.ENDTIME-S.STARTTIME) AS DIFF FROM STARTTIME S INNER JOIN ENDTIME E ON S.MACHINE_ID=E.MACHINE_ID AND S.PROCESS_ID=E.PROCESS_ID GROUP BY S.MACHINE_ID,S.PROCESS_ID) SELECT MACHINE_ID,AVG(AV) AS PROCESSING_TIME FROM ( SELECT *,ROUND(AVG(DIFF) OVER(PARTITION BY MACHINE_ID ),3) AS AV FROM BASE)T GROUP BY MACHINE_ID"
171,Y,N,"WITH T AS ( SELECT MACHINE_ID,PROCESS_ID,ACTIVITY_TYPE, TIMESTAMP AS STS, LEAD(TIMESTAMP) OVER(PARTITION BY MACHINE_ID,PROCESS_ID ORDER BY TIMESTAMP) AS ETS FROM ACTIVITY ) SELECT MACHINE_ID,CAST(AVG(ETS-STS) AS DECIMAL(26,3)) AS PROCESSING_TIME FROM T WHERE ACTIVITY_TYPE='start' GROUP BY 1"
172,Y,Y,"WITH TB AS ( SELECT MACHINE_ID, PROCESS_ID, (SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE NULL END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE NULL END)) AS TIME_PERIOD FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(SUM(TIME_PERIOD)/COUNT(TIME_PERIOD), 3) AS PROCESSING_TIME FROM TB GROUP BY MACHINE_ID"
173,Y,Y,"WITH TD AS ( SELECT A1.MACHINE_ID, A1.PROCESS_ID, A1.TIMESTAMP AS START_TS, A2.TIMESTAMP AS END_TS FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID AND A1.ACTIVITY_TYPE='start' AND A2.ACTIVITY_TYPE='end' ) SELECT MACHINE_ID, ROUND(SUM(END_TS-START_TS)/COUNT(*),3) AS PROCESSING_TIME FROM TD GROUP BY MACHINE_ID"
174,Y,Y,"WITH TEMP AS ( SELECT MACHINE_ID, TIMESTAMP, CASE WHEN ACTIVITY_TYPE = 'start' THEN -1 ELSE 1 END AS TYPE FROM ACTIVITY ) SELECT MACHINE_ID, ROUND(AVG(TIMESTAMP*TYPE)*2,3) AS PROCESSING_TIME FROM TEMP GROUP BY MACHINE_ID"
175,Y,Y,"WITH X AS ( SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, TIMESTAMP-COALESCE(LAG(TIMESTAMP)OVER(PARTITION BY MACHINE_ID,PROCESS_ID ORDER BY ACTIVITY_TYPE),0) AS DIFF FROM ACTIVITY ) SELECT MACHINE_ID, ROUND(AVG(DIFF),3) AS PROCESSING_TIME FROM X WHERE ACTIVITY_TYPE='end' GROUP BY MACHINE_ID"
176,Y,Y,"WITH X AS (SELECT MACHINE_ID, ROUND (SUM(TOTAL) /COUNT( MACHINE_ID),3) AS PROCESSING_TIME FROM (SELECT S.MACHINE_ID, S.PROCESS_ID, ABS (S.TIMESTAMP - E.TIMESTAMP) AS TOTAL FROM ACTIVITY S INNER JOIN ACTIVITY E ON S.MACHINE_ID = E.MACHINE_ID AND E.PROCESS_ID =S.PROCESS_ID WHERE S.ACTIVITY_TYPE= 'start' AND E.ACTIVITY_TYPE = 'end') P GROUP BY MACHINE_ID ) SELECT * FROM X"
177,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP), 3) AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') AS T1 INNER JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') AS T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID GROUP BY MACHINE_ID"
178,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.TIMESTAMP - B.TIMESTAMP),3) AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') A JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID GROUP BY 1"
179,Y,Y,"SELECT ACTIVITY_END.MACHINE_ID AS MACHINE_ID, ROUND(AVG(ACTIVITY_END.TIMESTAMP - ACTIVITY_START.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY AS ACTIVITY_END JOIN ACTIVITY AS ACTIVITY_START ON ( ACTIVITY_END.MACHINE_ID = ACTIVITY_START.MACHINE_ID AND ACTIVITY_END.PROCESS_ID = ACTIVITY_START.PROCESS_ID AND ACTIVITY_END.ACTIVITY_TYPE = 'end' AND ACTIVITY_START.ACTIVITY_TYPE = 'start' ) GROUP BY ACTIVITY_END.MACHINE_ID"
180,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END)) / COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
181,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESS_TIME),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE ='start' THEN -TIMESTAMP ELSE TIMESTAMP END) AS PROCESS_TIME FROM ACTIVITY GROUP BY 1,2)SUB GROUP BY MACHINE_ID"
182,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE = 'start',-1,1)*TIMESTAMP)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
183,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start',-1,1) * TIMESTAMP) / COUNT(*) * 2,3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
184,Y,Y,"SELECT T1.MACHINE_ID ,ROUND(SUM(T2.TIMESTAMP-T1.TIMESTAMP)/COUNT(DISTINCT T1.PROCESS_ID),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID ,PROCESS_ID ,TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE='start' ) T1 INNER JOIN ( SELECT MACHINE_ID ,PROCESS_ID ,TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE='end' ) T2 ON T1.MACHINE_ID=T2.MACHINE_ID AND T1.PROCESS_ID=T2.PROCESS_ID GROUP BY T1.MACHINE_ID"
185,Y,Y,"WITH T1 AS( SELECT A.*, (B.TIMESTAMP - A.TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE <> B.ACTIVITY_TYPE) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME), 3) AS PROCESSING_TIME FROM T1 WHERE ACTIVITY_TYPE = 'start' GROUP BY 1"
186,Y,Y,"SELECT MACHINE_ID, ROUND( (SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END)-SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END))/COUNT(DISTINCT PROCESS_ID), 3) PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
187,Y,Y,"WITH TOTALS AS ( SELECT MACHINE_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS STARTS, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS ENDS, COUNT(DISTINCT PROCESS_ID) AS TOTAL_PROCESSES FROM ACTIVITY GROUP BY 1 ) SELECT MACHINE_ID, ROUND((ENDS - STARTS) / TOTAL_PROCESSES,3) AS PROCESSING_TIME FROM TOTALS GROUP BY 1"
188,Y,Y,"WITH TEMP AS ( SELECT MACHINE_ID, PROCESS_ID, (MAX(TIMESTAMP) - MIN(TIMESTAMP)) AS DURATION FROM ACTIVITY GROUP BY 1, 2 ) SELECT MACHINE_ID, ROUND(AVG(DURATION), 3) AS PROCESSING_TIME FROM TEMP GROUP BY 1"
189,Y,Y,"WITH MAIN AS ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP ELSE TIMESTAMP END) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME), 3) AS PROCESSING_TIME FROM MAIN GROUP BY MACHINE_ID"
190,Y,Y,"WITH C1 AS ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='start' ) , C2 AS ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='end' ) SELECT C1.MACHINE_ID, ROUND(AVG(C2.TIMESTAMP - C1.TIMESTAMP),3) PROCESSING_TIME FROM C1, C2 WHERE C1.MACHINE_ID = C2.MACHINE_ID AND C1.PROCESS_ID = C2.PROCESS_ID GROUP BY C1.MACHINE_ID"
191,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) PROCESSING_TIME FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID AND B.ACTIVITY_TYPE='end' WHERE A.ACTIVITY_TYPE='start' GROUP BY A.MACHINE_ID"
192,Y,Y,"WITH T AS ( SELECT MACHINE_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(TIME), 3) AS PROCESSING_TIME FROM T GROUP BY MACHINE_ID"
193,Y,Y,"SELECT A.MACHINE_ID, ROUND((A.SUM1/B.CNT),3) AS PROCESSING_TIME FROM (SELECT P.MACHINE_ID, SUM(P.TIMESTAMP1) AS SUM1 FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS TIMESTAMP1 FROM ACTIVITY GROUP BY 1,2)P GROUP BY 1) A INNER JOIN (SELECT MACHINE_ID,COUNT(DISTINCT PROCESS_ID) AS CNT FROM ACTIVITY GROUP BY 1) B ON A.MACHINE_ID = B.MACHINE_ID"
194,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' GROUP BY A.MACHINE_ID"
195,Y,Y,"WITH CTE AS ( SELECT MACHINE_ID, PROCESS_ID, MIN(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START_TIME, MIN(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END_TIME FROM ACTIVITY GROUP BY 1,2 ) SELECT MACHINE_ID, ROUND(AVG(END_TIME - START_TIME),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
196,Y,Y,"SELECT T.MACHINE_ID, ROUND(SUM(T.DIFFERENCE)/COUNT(DIFFERENCE), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS DIFFERENCE FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) T GROUP BY T.MACHINE_ID"
197,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A, ACTIVITY B WHERE A.MACHINE_ID = B.MACHINE_ID AND B.ACTIVITY_TYPE = 'end' AND A.ACTIVITY_TYPE = 'start' GROUP BY 1"
198,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESS_TIME),3) AS PROCESSING_TIME FROM ( SELECT E.MACHINE_ID, E.PROCESS_ID, (E.TIMESTAMP - S.TIMESTAMP) AS PROCESS_TIME FROM ACTIVITY E JOIN ACTIVITY S USING(MACHINE_ID, PROCESS_ID) WHERE E.ACTIVITY_TYPE = 'end' AND S.ACTIVITY_TYPE = 'start' )PT GROUP BY 1"
199,Y,Y,"SELECT X.MACHINE_ID, ROUND(AVG(X.ENDTIME-X.STARTTIME),3) AS PROCESSING_TIME FROM ( SELECT A.MACHINE_ID, A.TIMESTAMP AS STARTTIME, B.TIMESTAMP AS ENDTIME FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' ) X GROUP BY X.MACHINE_ID"
200,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B USING(MACHINE_ID, PROCESS_ID) WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
201,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(PROCESSING_TIME) / COUNT(PROCESS_ID),3) PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP - LAG(TIMESTAMP, 1) OVER(PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY )T WHERE PROCESSING_TIME IS NOT NULL GROUP BY MACHINE_ID"
202,Y,Y,"SELECT T.MACHINE_ID, ROUND(AVG(DIFF),3) AS PROCESSING_TIME FROM( SELECT A1.MACHINE_ID, (A2.TIMESTAMP-A1.TIMESTAMP) AS DIFF FROM ACTIVITY AS A1 JOIN ACTIVITY AS A2 ON A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID WHERE A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' ) AS T GROUP BY T.MACHINE_ID"
203,Y,Y,"WITH S AS ( SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), E AS ( SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP),3) AS PROCESSING_TIME FROM S JOIN E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY 1"
204,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE NULL END)- SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE NULL END) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) P GROUP BY MACHINE_ID"
205,Y,Y,"SELECT Z.MACHINE_ID, ROUND(AVG(Z.TT),3) PROCESSING_TIME FROM ( SELECT A.MACHINE_ID,A.PROCESS_ID, SUM(CASE WHEN A.ACTIVITY_TYPE='end' THEN A.TIMESTAMP ELSE -A.TIMESTAMP END) TT FROM ACTIVITY A GROUP BY A.MACHINE_ID,A.PROCESS_ID )Z GROUP BY Z.MACHINE_ID"
206,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY T1 JOIN ACTIVITY T2 ON T1.MACHINE_ID = T2.MACHINE_ID AND T1.PROCESS_ID = T2.PROCESS_ID WHERE T1.TIMESTAMP < T2.TIMESTAMP GROUP BY T1.MACHINE_ID"
207,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A2.TIMESTAMP - A1.TIMESTAMP)/COUNT(*),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY 1"
208,Y,Y,"WITH START_TIME AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), END_TIME AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') SELECT E.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP),3) AS PROCESSING_TIME FROM START_TIME S JOIN END_TIME E ON (S.MACHINE_ID, S.PROCESS_ID) = (E.MACHINE_ID, E.PROCESS_ID) GROUP BY 1"
209,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME), 3) AS PROCESSING_TIME FROM (SELECT A1.MACHINE_ID, A1.PROCESS_ID, (A2.TIMESTAMP-A1.TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY A1 LEFT OUTER JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID WHERE A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end') AA GROUP BY MACHINE_ID"
210,Y,Y,"WITH A AS (SELECT MACHINE_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM A GROUP BY MACHINE_ID"
211,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP- A1.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A2.ACTIVITY_TYPE = 'end'AND A1.ACTIVITY_TYPE = 'start' GROUP BY A1.MACHINE_ID"
212,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.PROCESSING_TIME), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) A GROUP BY A.MACHINE_ID"
213,Y,Y,"WITH CTE AS ( SELECT MACHINE_ID, TIMESTAMP START FROM ACTIVITY WHERE ACTIVITY_TYPE='start' ), CTE2 AS ( SELECT MACHINE_ID, TIMESTAMP END FROM ACTIVITY WHERE ACTIVITY_TYPE='end' ) SELECT CTE.MACHINE_ID, ROUND(AVG(END-START), 3) PROCESSING_TIME FROM CTE JOIN CTE2 ON CTE.MACHINE_ID=CTE2.MACHINE_ID GROUP BY 1"
214,Y,Y,"WITH CTE AS (SELECT A.MACHINE_ID, A.PROCESS_ID, A.ACTIVITY_TYPE, CASE WHEN A.ACTIVITY_TYPE ='start' THEN -A.TIMESTAMP ELSE A.TIMESTAMP END AS PROCESSINGTIME FROM ACTIVITY A) SELECT MACHINE_ID, ROUND(SUM(PROCESSINGTIME)/COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
215,Y,Y,"SELECT DISTINCT MACHINE_ID, ROUND(SUM(IF(A.ACTIVITY_TYPE='end',A.TIMESTAMP,-A.TIMESTAMP)) OVER (PARTITION BY MACHINE_ID)/(COUNT(*) OVER (PARTITION BY MACHINE_ID)/2),3) AS PROCESSING_TIME FROM ACTIVITY A"
216,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE='start' THEN -( TIMESTAMP ) WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP END)/COUNT(DISTINCT(PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
217,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A2.TIMESTAMP - A1.TIMESTAMP) / COUNT(*), 3) AS PROCESSING_TIME FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID"
218,Y,Y,"WITH START_TIME AS ( SELECT MACHINE_ID,PROCESS_ID,TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), END_TIME AS ( SELECT MACHINE_ID,PROCESS_ID,TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP),3) AS PROCESSING_TIME FROM START_TIME S INNER JOIN END_TIME E ON (S.MACHINE_ID,S.PROCESS_ID) = (E.MACHINE_ID,E.PROCESS_ID) GROUP BY 1"
219,Y,Y,"WITH TMP AS (SELECT A1.MACHINE_ID, A1.PROCESS_ID, A2.TIMESTAMP - A1.TIMESTAMP CON FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE != A2.ACTIVITY_TYPE WHERE A1.ACTIVITY_TYPE = 'start') SELECT MACHINE_ID, ROUND(AVG(CON), 3) PROCESSING_TIME FROM TMP GROUP BY MACHINE_ID"
220,Y,Y,"WITH TIME AS ( SELECT A.MACHINE_ID, A.PROCESS_ID, (B.TIMESTAMP - A.TIMESTAMP) TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' ) SELECT MACHINE_ID, ROUND(SUM(TIME) / COUNT(*), 3) PROCESSING_TIME FROM TIME GROUP BY MACHINE_ID"
221,Y,Y,"WITH CTE AS( SELECT A.MACHINE_ID, A.PROCESS_ID, (B.TIMESTAMP - A.TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY A INNER JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.TIMESTAMP < B.TIMESTAMP) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
222,Y,Y,"WITH TAB1 AS( SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP)-MIN(TIMESTAMP) AS T FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(T),3) AS PROCESSING_TIME FROM TAB1 GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
223,Y,Y,"WITH A AS (SELECT A1.MACHINE_ID, A1.PROCESS_ID, (A2.TIMESTAMP - A1.TIMESTAMP) AS COUNT_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A1.MACHINE_ID, A1.PROCESS_ID) SELECT MACHINE_ID, ROUND(SUM(COUNT_TIME)/COUNT(PROCESS_ID), 3) AS PROCESSING_TIME FROM A GROUP BY MACHINE_ID"
224,Y,Y,"WITH PROCESS_TIMES AS ( SELECT MACHINE_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS TIME_TAKEN FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(TIME_TAKEN), 3) AS PROCESSING_TIME FROM PROCESS_TIMES GROUP BY MACHINE_ID"
225,Y,Y,"WITH CTE AS (SELECT DISTINCT MACHINE_ID, PROCESS_ID FROM ACTIVITY), CTE1 AS (SELECT A.MACHINE_ID, A.TIMESTAMP FROM ACTIVITY A JOIN CTE WHERE A.ACTIVITY_TYPE = 'end' AND A.MACHINE_ID = CTE.MACHINE_ID AND A.PROCESS_ID = CTE.PROCESS_ID), CTE2 AS (SELECT A.MACHINE_ID, A.TIMESTAMP FROM ACTIVITY A JOIN CTE WHERE A.ACTIVITY_TYPE = 'start' AND A.MACHINE_ID = CTE.MACHINE_ID AND A.PROCESS_ID = CTE.PROCESS_ID) SELECT CTE1.MACHINE_ID, ROUND(AVG(CTE1.TIMESTAMP - CTE2.TIMESTAMP),3) PROCESSING_TIME FROM CTE1 JOIN CTE2 ON CTE1.MACHINE_ID = CTE2.MACHINE_ID GROUP BY CTE1.MACHINE_ID"
226,Y,Y,"SELECT MACHINE_ID,ROUND(SUM(END_TIMESTAMP-START_TIMESTAMP)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID,PROCESS_ID,CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP ELSE 0 END AS START_TIMESTAMP, CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP ELSE 0 END AS END_TIMESTAMP FROM ACTIVITY ) AS A GROUP BY 1"
227,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(END_T - START_T),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) AS START_T, MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) AS END_T FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) A GROUP BY MACHINE_ID"
228,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE B.ACTIVITY_TYPE='end' AND A.ACTIVITY_TYPE='start' GROUP BY A.MACHINE_ID ORDER BY A.MACHINE_ID"
229,Y,Y,"SELECT E.MACHINE_ID, ROUND((AVG(E.TIMESTAMP - S.TIMESTAMP)),3) AS PROCESSING_TIME FROM ACTIVITY E JOIN ACTIVITY S USING(MACHINE_ID, PROCESS_ID) WHERE E.ACTIVITY_TYPE = 'end' AND S.ACTIVITY_TYPE = 'start' GROUP BY 1"
230,Y,Y,"SELECT B.MACHINE_ID, ROUND(AVG(B.PROCESS_TIME),3) AS PROCESSING_TIME FROM (SELECT S.MACHINE_ID, S.PROCESS_ID, (E.TIMESTAMP-S.TIMESTAMP) AS PROCESS_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ) S JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID ) B GROUP BY 1"
231,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE = 'end', TIMESTAMP, -TIMESTAMP))/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
232,Y,Y,"SELECT DISTINCT A1.MACHINE_ID,ROUND(AVG(ABS(A1.TIMESTAMP-A2.TIMESTAMP)) ,3) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID AND A1.ACTIVITY_TYPE<>A2.ACTIVITY_TYPE GROUP BY 1"
233,Y,Y,"SELECT ST.MACHINE_ID AS MACHINE_ID, ROUND(AVG(EN.TIMESTAMP - ST.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS ST JOIN ACTIVITY AS EN ON ST.ACTIVITY_TYPE = 'start' AND EN.ACTIVITY_TYPE = 'end' AND ST.PROCESS_ID = EN.PROCESS_ID AND ST.MACHINE_ID = EN.MACHINE_ID GROUP BY ST.MACHINE_ID"
234,Y,Y,"WITH CTE1 AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TS FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), CTE2 AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TS FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ), CTE3 AS (SELECT CTE1.MACHINE_ID, CTE1.PROCESS_ID, (END_TS - START_TS) AS TIME_TAKEN FROM CTE1 INNER JOIN CTE2 ON CTE1.MACHINE_ID = CTE2.MACHINE_ID AND CTE1.PROCESS_ID = CTE2.PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(TIME_TAKEN),3) AS PROCESSING_TIME FROM CTE3 GROUP BY MACHINE_ID"
235,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.TIMESTAMP - B.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.ACTIVITY_TYPE = 'end' AND B.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID"
236,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DIF_TIME),3) AS PROCESSING_TIME FROM ( SELECT A1.MACHINE_ID, A2.TIMESTAMP-A1.TIMESTAMP AS DIF_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID AND A1.ACTIVITY_TYPE='start' AND A2.ACTIVITY_TYPE='end' ) A GROUP BY MACHINE_ID"
237,Y,Y,"SELECT A.MACHINE_ID, ROUND(SUM((B.TIMESTAMP-A.TIMESTAMP))/COUNT(B.PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY AS A LEFT JOIN ACTIVITY AS B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID AND A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' GROUP BY A.MACHINE_ID"
238,Y,Y,"WITH START AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), END AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') SELECT S.MACHINE_ID, ROUND((SUM(E.TIMESTAMP-S.TIMESTAMP))/COUNT(*),3) AS PROCESSING_TIME FROM START AS S LEFT JOIN END AS E ON S.MACHINE_ID=E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY 1"
239,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP-A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE='start' AND A2.ACTIVITY_TYPE='end' GROUP BY A1.MACHINE_ID"
240,Y,Y,"WITH START_TABLE AS ( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='start'), END_TABLE AS( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='end') SELECT S.MACHINE_ID,ROUND(AVG(E.TIMESTAMP-S.TIMESTAMP),3) AS PROCESSING_TIME FROM START_TABLE S JOIN END_TABLE E ON (S.MACHINE_ID=E.MACHINE_ID) AND (S.PROCESS_ID=E.PROCESS_ID) GROUP BY S.MACHINE_ID"
241,Y,Y,"WITH TB AS ( SELECT S.MACHINE_ID, S.PROCESS_ID, (E.TIMESTAMP - S.TIMESTAMP) AS T FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') AS S JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') AS E USING(MACHINE_ID, PROCESS_ID) ) SELECT MACHINE_ID, ROUND(SUM(T)/COUNT(PROCESS_ID),3) AS PROCESSING_TIME FROM TB GROUP BY MACHINE_ID"
242,Y,Y,"WITH CTE AS (SELECT *, CASE WHEN ACTIVITY_TYPE = 'start' THEN (-1) * TIMESTAMP ELSE TIMESTAMP END AS TIME_TRUE FROM ACTIVITY) SELECT MACHINE_ID, ROUND(2 * SUM(TIME_TRUE)/COUNT(*), 3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
243,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP END)- SUM(CASE WHEN ACTIVITY_TYPE='start' THEN TIMESTAMP END))/(COUNT(DISTINCT PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
244,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(END_TIME - START_TIME), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) START_TIME, MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) END_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) A GROUP BY MACHINE_ID"
245,Y,Y,"WITH EVENT AS(SELECT A1.MACHINE_ID, A1.PROCESS_ID, A1.TIMESTAMP START_TIME, A2.TIMESTAMP END_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID AND A1.ACTIVITY_TYPE='start' AND A2.ACTIVITY_TYPE='end') SELECT MACHINE_ID, ROUND(AVG(END_TIME-START_TIME),3)AS PROCESSING_TIME FROM EVENT GROUP BY 1"
246,Y,Y,"WITH A AS (SELECT A1.MACHINE_ID, A1.PROCESS_ID, (A2.TIMESTAMP - A1.TIMESTAMP) AS COUNT_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' ) SELECT MACHINE_ID, ROUND(SUM(COUNT_TIME)/COUNT(PROCESS_ID), 3) AS PROCESSING_TIME FROM A GROUP BY MACHINE_ID"
247,Y,Y,"SELECT T1.MACHINE_ID, ROUND(AVG(T2.TIMESTAMP - T1.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY T1 INNER JOIN ACTIVITY T2 USING (MACHINE_ID, PROCESS_ID) WHERE T1.ACTIVITY_TYPE = 'start' AND T2.ACTIVITY_TYPE = 'end' GROUP BY 1 ORDER BY 1"
248,Y,Y,"SELECT MACHINE_ID,ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID,PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE -1*TIMESTAMP END) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1,2 ) TEMP GROUP BY 1"
249,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A1.TIMESTAMP - A2.TIMESTAMP)/COUNT(DISTINCT A1.PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'end' AND A2.ACTIVITY_TYPE = 'start' GROUP BY 1"
250,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(TIMESTAMP), 3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP ELSE TIMESTAMP END) AS TIMESTAMP FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) AS A GROUP BY MACHINE_ID"
251,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP ELSE TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
252,Y,N,"WITH A AS( SELECT MACHINE_ID, PROCESS_ID, ROUND(MAX(TIMESTAMP)-MIN(TIMESTAMP),3) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) SELECT MACHINE_ID, ROUND(SUM(PROCESSING_TIME)/COUNT(*),3) PROCESSING_TIME FROM A GROUP BY MACHINE_ID"
253,Y,Y,"WITH NEW AS ( SELECT MACHINE_ID, PROCESS_ID, LAG(TIMESTAMP, 1) OVER(PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE) AS START, TIMESTAMP FROM ACTIVITY) SELECT MACHINE_ID, ROUND(AVG(TIMESTAMP-START),3) AS PROCESSING_TIME FROM NEW WHERE START IS NOT NULL GROUP BY MACHINE_ID"
254,Y,Y,"SELECT MACHINE_ID,ROUND( SUM(IF(ACTIVITY_TYPE='start' ,-1*TIMESTAMP,TIMESTAMP))/ COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
255,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) - AVG(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
256,Y,Y,"SELECT DISTINCT A1.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP-A1.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID=A2.MACHINE_ID AND A1.PROCESS_ID=A2.PROCESS_ID AND A1.TIMESTAMP<A2.TIMESTAMP GROUP BY A1.MACHINE_ID"
257,Y,Y,"SELECT A.MACHINE_ID, ROUND((A.END-A.START)/A.NUM,3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END, COUNT(DISTINCT PROCESS_ID) AS NUM FROM ACTIVITY GROUP BY MACHINE_ID)A"
258,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' GROUP BY A.MACHINE_ID"
259,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(TBL2.END_TS-TBL2.START_TS)/COUNT(TBL2.PROCESS_ID),3) AS PROCESSING_TIME FROM (SELECT TBL1.MACHINE_ID, TBL1.PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END_TS, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START_TS FROM ACTIVITY TBL1 GROUP BY TBL1.MACHINE_ID,TBL1.PROCESS_ID )TBL2 GROUP BY MACHINE_ID"
260,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(A.DIFFERENCE)/COUNT(DIFFERENCE),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID,PROCESS_ID, MAX(TIMESTAMP)-MIN(TIMESTAMP) AS DIFFERENCE FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) AS A GROUP BY A.MACHINE_ID"
261,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE ACTIVITY_TYPE WHEN 'start' THEN -TIMESTAMP ELSE TIMESTAMP END )/ COUNT(DISTINCT(PROCESS_ID) ) ,3) PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
262,Y,Y,"WITH ACTIVITY_TIME AS ( SELECT A.MACHINE_ID AS MACHINE_ID, A.TIMESTAMP AS TIME_START, B.TIMESTAMP AS TIME_END FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') AS A JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') AS B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID ) SELECT MACHINE_ID, ROUND(SUM(TIME_END - TIME_START) / COUNT(*), 3) AS PROCESSING_TIME FROM ACTIVITY_TIME GROUP BY MACHINE_ID"
263,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='end',TIMESTAMP,-TIMESTAMP))*2/COUNT(*),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
264,Y,Y,"SELECT START.MACHINE_ID, ROUND(AVG(END.TIMESTAMP - START.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY START JOIN ACTIVITY END ON START.MACHINE_ID = END.MACHINE_ID AND START.PROCESS_ID = END.PROCESS_ID AND START.ACTIVITY_TYPE = 'start' AND END.ACTIVITY_TYPE = 'end' GROUP BY START.MACHINE_ID"
265,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A INNER JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE != B.ACTIVITY_TYPE WHERE A.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID"
266,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(DURATION) / COUNT(DISTINCT PROCESS_ID) ,3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) AS START_TS, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) AS END_TS, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END) - SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END) AS DURATION FROM ACTIVITY GROUP BY 1,2 ) AS T GROUP BY 1"
267,Y,Y,"WITH T1 AS ( SELECT MACHINE_ID, PROCESS_ID, START_TIME, END_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') CTE1 JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') CTE2 USING (MACHINE_ID, PROCESS_ID) ) SELECT MACHINE_ID, ROUND(AVG(END_TIME - START_TIME), 3) AS PROCESSING_TIME FROM T1 WHERE END_TIME IS NOT NULL GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
268,Y,Y,"WITH A AS (SELECT MACHINE_ID, MAX(TIMESTAMP)-MIN(TIMESTAMP) AS TIME FROM ACTIVITY GROUP BY MACHINE_ID,PROCESS_ID) SELECT MACHINE_ID, ROUND(AVG(TIME),3) AS PROCESSING_TIME FROM A GROUP BY MACHINE_ID"
269,Y,Y,"SELECT MACHINE_ID , ROUND(AVG((T1.ACT_END - T1.ACT_START)),3) AS PROCESSING_TIME FROM ( SELECT A1.MACHINE_ID, A1.PROCESS_ID, A1.TIMESTAMP AS ACT_START, A2.TIMESTAMP AS ACT_END FROM ACTIVITY AS A1 JOIN ACTIVITY AS A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE ='start' AND A2.ACTIVITY_TYPE ='end') T1 GROUP BY MACHINE_ID"
270,Y,Y,"SELECT A.MACHINE_ID, ROUND(SUM(B.TIMESTAMP - A.TIMESTAMP) / COUNT(*),3) PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.ACTIVITY_TYPE != B.ACTIVITY_TYPE WHERE A.ACTIVITY_TYPE = 'start' GROUP BY A.MACHINE_ID"
271,Y,Y,"WITH TIME_DIFF AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP - LAG(TIMESTAMP, 1) OVER (PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY TIMESTAMP) AS PROCESSING_TIME FROM ACTIVITY) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME), 3) AS PROCESSING_TIME FROM TIME_DIFF WHERE PROCESSING_TIME IS NOT NULL GROUP BY MACHINE_ID"
272,Y,Y,"SELECT A2.MACHINE_ID, ROUND(AVG(A2.TIMESTAMP-A1.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY A2.MACHINE_ID"
273,Y,Y,"SELECT E.MACHINE_ID, ROUND(SUM(E.TIMESTAMP - S.TIMESTAMP)/COUNT(E.MACHINE_ID),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') E JOIN (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') S ON E.MACHINE_ID = S.MACHINE_ID AND E.PROCESS_ID = S.PROCESS_ID GROUP BY MACHINE_ID"
274,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(T2-T1),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MIN(TIMESTAMP)T1, MAX(TIMESTAMP)T2 FROM ACTIVITY GROUP BY 1,2 ) A GROUP BY 1"
275,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(IF(ACTIVITY_TYPE = 'start', -TIMESTAMP, TIMESTAMP)) * 2, 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
276,Y,Y,"SELECT START_ACTIVITY.MACHINE_ID, ROUND(AVG(END_ACTIVITY.TIMESTAMP-START_ACTIVITY.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY START_ACTIVITY INNER JOIN ACTIVITY END_ACTIVITY ON START_ACTIVITY.MACHINE_ID = END_ACTIVITY.MACHINE_ID AND START_ACTIVITY.PROCESS_ID = END_ACTIVITY.PROCESS_ID AND START_ACTIVITY.ACTIVITY_TYPE='start' AND END_ACTIVITY.ACTIVITY_TYPE='end' GROUP BY START_ACTIVITY.MACHINE_ID"
277,Y,Y,"WITH C1 AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='start'), C2 AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE='end') SELECT C1.MACHINE_ID, ROUND(AVG(C2.TIMESTAMP - C1.TIMESTAMP),3) AS PROCESSING_TIME FROM C1, C2 WHERE C1.MACHINE_ID = C2.MACHINE_ID AND C1.PROCESS_ID = C2.PROCESS_ID GROUP BY C1.MACHINE_ID"
278,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP-A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE A.ACTIVITY_TYPE='start' AND B.ACTIVITY_TYPE='end' GROUP BY MACHINE_ID"
279,Y,N,"SELECT TMP.MACHINE_ID AS MACHINE_ID, ROUND(SUM(TMP.TIME_DIFF)/COUNT(TMP.TIME_DIFF),3) AS PROCESSING_TIME FROM ( SELECT A.MACHINE_ID, ROUND(SUM(CASE WHEN A.ACTIVITY_TYPE = 'end' THEN A.TIMESTAMP ELSE 0 END ),3) - ROUND(SUM(CASE WHEN A.ACTIVITY_TYPE = 'start' THEN A.TIMESTAMP ELSE 0 END),3) AS TIME_DIFF FROM ACTIVITY AS A GROUP BY A.MACHINE_ID, A.PROCESS_ID ) AS TMP GROUP BY TMP.MACHINE_ID"
280,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A, ACTIVITY B WHERE A.MACHINE_ID = B.MACHINE_ID AND A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY A.MACHINE_ID"
281,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(TOTAL_TIME), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, LEAD(TIMESTAMP) OVER (PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE ) - TIMESTAMP AS TOTAL_TIME FROM ACTIVITY) A WHERE TOTAL_TIME IS NOT NULL GROUP BY 1"
282,Y,Y,"SELECT MACHINE_ID,ROUND(SUM(TIME)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM(SELECT MACHINE_ID,PROCESS_ID, ACTIVITY_TYPE, CASE WHEN ACTIVITY_TYPE ='start' THEN -TIMESTAMP ELSE TIMESTAMP END AS TIME FROM ACTIVITY) A GROUP BY MACHINE_ID"
283,Y,Y,"SELECT MACHINE_ID, ROUND((SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE 0 END)-SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE 0 END))/COUNT(1)*2.0,3) AS PROCESSING_TIME FROM ACTIVITY WHERE 1=1 GROUP BY MACHINE_ID"
284,Y,Y,"WITH START AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), END AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ), TEMP AS ( SELECT START.MACHINE_ID, (END_TIMESTAMP - START_TIMESTAMP) AS TIMES FROM START JOIN END ON START.MACHINE_ID = END.MACHINE_ID AND START.PROCESS_ID = END.PROCESS_ID ) SELECT MACHINE_ID, IFNULL(ROUND(AVG(TIMES),3),0) AS PROCESSING_TIME FROM TEMP GROUP BY MACHINE_ID"
285,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A2.TIMESTAMP - A1.TIMESTAMP)/COUNT(A1.PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A2.TIMESTAMP > A1.TIMESTAMP GROUP BY 1"
286,Y,Y,"SELECT T.MACHINE_ID, ROUND(AVG(T.DIFF),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP) - MIN(TIMESTAMP) AS DIFF FROM ACTIVITY GROUP BY 1,2 ) T GROUP BY 1"
287,Y,N,"SELECT A.MACHINE_ID,ROUND(SUM(A.TIMESTAMP-B.TIMESTAMP)/(SELECT COUNT(DISTINCT PROCESS_ID) FROM ACTIVITY) ,3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID WHERE A.ACTIVITY_TYPE='end' AND B.ACTIVITY_TYPE='start' GROUP BY A.MACHINE_ID"
288,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A2.TIMESTAMP - A1.TIMESTAMP) / CAST(COUNT(*) AS FLOAT), 3) AS PROCESSING_TIME FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A2.ACTIVITY_TYPE = 'end' WHERE A1.ACTIVITY_TYPE = 'start' GROUP BY 1"
289,Y,Y,"SELECT A2.MACHINE_ID, ROUND(AVG(A1.TIMESTAMP - A2.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'end' AND A2.ACTIVITY_TYPE = 'start' GROUP BY A2.MACHINE_ID"
290,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY AS S JOIN ACTIVITY AS E ON S.ACTIVITY_TYPE = 'start' AND E.ACTIVITY_TYPE = 'end' AND S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID GROUP BY 1"
291,Y,Y,"WITH STARTS AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), ENDS AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_TIME FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) SELECT MACHINE_ID, ROUND(AVG(END_TIME-START_TIME),3) AS PROCESSING_TIME FROM STARTS JOIN ENDS USING(MACHINE_ID, PROCESS_ID) GROUP BY MACHINE_ID"
292,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A2.TIMESTAMP - A1.TIMESTAMP)/COUNT(A1.PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE= 'end' GROUP BY A1.MACHINE_ID"
293,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(PROCESS_TIME),3) AS PROCESSING_TIME FROM (SELECT A.MACHINE_ID, A.PROCESS_ID, (A.TIMESTAMP - B.TIMESTAMP)AS PROCESS_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE = 'end' AND B.ACTIVITY_TYPE = 'start' GROUP BY 1,2) SUB GROUP BY 1"
294,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(DURATION)/COUNT(DISTINCT PROCESS_ID),3) PROCESSING_TIME FROM (SELECT A1.MACHINE_ID, A1.PROCESS_ID, A2.TIMESTAMP - A1.TIMESTAMP DURATION FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID WHERE A2.ACTIVITY_TYPE = 'end' AND A1.ACTIVITY_TYPE = 'start') A GROUP BY 1"
295,Y,Y,"WITH CTE AS ( SELECT MACHINE_ID, PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START , MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(END - START), 3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
296,Y,N,"SELECT II.MACHINE_ID , CAST( AVG(II.TIMESTAMP - I.TIMESTAMP) AS DECIMAL(10, 3)) AS PROCESSING_TIME FROM ACTIVITY I JOIN ACTIVITY II ON I.MACHINE_ID = II.MACHINE_ID AND I.PROCESS_ID = II.PROCESS_ID WHERE I.ACTIVITY_TYPE = 'start' AND II.ACTIVITY_TYPE = 'end' GROUP BY MACHINE_ID"
297,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(DIFFERENCE)/COUNT(DIFFERENCE),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, MAX(TIMESTAMP)- MIN(TIMESTAMP) AS DIFFERENCE FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) AS TMP GROUP BY MACHINE_ID"
298,Y,N,"SELECT X.MACHINE_ID, ROUND(AVG(X.TIME_DIFF),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID , ROUND(SUM(CASE WHEN A.ACTIVITY_TYPE = 'end' THEN A.TIMESTAMP ELSE 0 END ),3) - ROUND(SUM(CASE WHEN A.ACTIVITY_TYPE = 'start' THEN A.TIMESTAMP ELSE 0 END),3) AS TIME_DIFF FROM ACTIVITY A GROUP BY 1,2) X GROUP BY X.MACHINE_ID"
299,Y,Y,"WITH CTE AS (SELECT MACHINE_ID,PROCESS_ID,ACTIVITY_TYPE,TIMESTAMP,CASE WHEN ACTIVITY_TYPE='start' THEN (-1*TIMESTAMP) WHEN ACTIVITY_TYPE='end' THEN TIMESTAMP END AS TIMESTAMP_PROCESS FROM ACTIVITY) SELECT DISTINCT CTE.MACHINE_ID AS MACHINE_ID,ROUND(SUM(CTE.TIMESTAMP_PROCESS)/COUNT(DISTINCT PROCESS_ID) ,3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
300,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start',-TIMESTAMP,+TIMESTAMP))/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
301,Y,N,"WITH END_TBL AS ( SELECT A.MACHINE_ID, A.PROCESS_ID, A.ACTIVITY_TYPE, A.TIMESTAMP AS END_TIME FROM ACTIVITY AS A WHERE A.ACTIVITY_TYPE = 'end'), START_TBL AS ( SELECT A.MACHINE_ID, A.PROCESS_ID, A.ACTIVITY_TYPE, A.TIMESTAMP AS START_TIME FROM ACTIVITY AS A WHERE A.ACTIVITY_TYPE = 'start' ), TIMEDIFF_TBL AS ( SELECT END_TBL.MACHINE_ID, END_TBL.PROCESS_ID, (END_TBL.END_TIME - START_TBL.START_TIME) AS TIMEDIFF FROM END_TBL LEFT JOIN START_TBL ON START_TBL.MACHINE_ID = END_TBL.MACHINE_ID AND START_TBL.PROCESS_ID = END_TBL.PROCESS_ID ), RUN_COUNT_TBL AS( SELECT TD.MACHINE_ID, COUNT(*) AS RUN_COUNT FROM TIMEDIFF_TBL AS TD GROUP BY TD.MACHINE_ID ), FINAL_TBL AS ( SELECT TD.MACHINE_ID, ROUND(SUM(TD.TIMEDIFF),3) AS TOTAL_RUN_TIME, RUN_COUNT_TBL.RUN_COUNT FROM TIMEDIFF_TBL AS TD LEFT JOIN RUN_COUNT_TBL ON RUN_COUNT_TBL.MACHINE_ID = TD.MACHINE_ID GROUP BY TD.MACHINE_ID) SELECT FINAL_TBL.MACHINE_ID, ROUND(FINAL_TBL.TOTAL_RUN_TIME / FINAL_TBL.RUN_COUNT, 3) AS PROCESSING_TIME FROM FINAL_TBL"
302,Y,Y,"WITH AAA AS( SELECT MACHINE_ID, SUM(IF (ACTIVITY_TYPE = 'start', TIMESTAMP, 0)) AS START_TIME, SUM(IF (ACTIVITY_TYPE = 'end', TIMESTAMP, 0)) AS END_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(END_TIME)-AVG(START_TIME),3) AS PROCESSING_TIME FROM AAA GROUP BY MACHINE_ID"
303,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE = 'start', TIMESTAMP * (-1), TIMESTAMP)) / COUNT(DISTINCT PROCESS_ID), 3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
304,Y,Y,"WITH REFINED AS (SELECT MACHINE_ID, PROCESS_ID, MAX(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP END) AS START, MAX(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END) AS END FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(END-START),3) AS PROCESSING_TIME FROM REFINED GROUP BY MACHINE_ID"
305,Y,Y,"WITH T AS (SELECT *, LEAD(TIMESTAMP) OVER (PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE)-TIMESTAMP DIFF FROM ACTIVITY) SELECT MACHINE_ID, ROUND(SUM(COALESCE(DIFF,0))/COUNT(DISTINCT PROCESS_ID),3) PROCESSING_TIME FROM T GROUP BY MACHINE_ID"
306,Y,N,"SELECT MACHINE_ID, ROUND(AVG(END-START),3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, ROUND(SUM(IF(ACTIVITY_TYPE='start',TIMESTAMP, NULL)),3) AS START, ROUND(SUM(IF(ACTIVITY_TYPE='end',TIMESTAMP, NULL)),3) AS END FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) P GROUP BY MACHINE_ID"
307,Y,Y,"SELECT ASS.MACHINE_ID, ROUND(AVG(AE.TIMESTAMP - ASS.TIMESTAMP),3) AS PROCESSING_TIME FROM ACTIVITY ASS INNER JOIN ACTIVITY AE ON ASS. MACHINE_ID = AE.MACHINE_ID AND ASS.PROCESS_ID = AE.PROCESS_ID AND ASS.ACTIVITY_TYPE = 'start' AND AE.ACTIVITY_TYPE = 'end' GROUP BY ASS.MACHINE_ID"
308,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(TOTAL_TIME) / COUNT(PROCESS_ID),3) PROCESSING_TIME FROM ( SELECT MACHINE_ID, PROCESS_ID, SUM(A2.TIMESTAMP - A1.TIMESTAMP) TOTAL_TIME FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 USING(MACHINE_ID, PROCESS_ID) WHERE A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE='end' GROUP BY MACHINE_ID, PROCESS_ID )T GROUP BY MACHINE_ID"
309,Y,Y,"WITH MACHINE_START AS( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start' ), MACHINE_END AS( SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) SELECT MS.MACHINE_ID, ROUND(SUM(ME.TIMESTAMP - MS.TIMESTAMP)/COUNT(DISTINCT MS.PROCESS_ID),3) PROCESSING_TIME FROM MACHINE_START MS JOIN MACHINE_END ME ON MS.MACHINE_ID = ME.MACHINE_ID AND MS.PROCESS_ID = ME.PROCESS_ID GROUP BY MS.MACHINE_ID"
310,Y,Y,"SELECT TMP.MACHINE_ID, ROUND(AVG(END_TIME-START_TIME),3) PROCESSING_TIME FROM (SELECT A1.MACHINE_ID, A1.TIMESTAMP AS START_TIME ,A2.TIMESTAMP AS END_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end') TMP GROUP BY MACHINE_ID"
311,Y,Y,"SELECT A1.MACHINE_ID, ROUND(SUM(A2.TIMESTAMP - A1.TIMESTAMP)/COUNT(*),3) AS PROCESSING_TIME FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE <> A2.ACTIVITY_TYPE AND A1.ACTIVITY_TYPE = 'start' GROUP BY A1.MACHINE_ID"
312,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(TIMESTAMP), 3) AS PROCESSING_TIME FROM ( SELECT MACHINE_ID, SUM(IF(ACTIVITY_TYPE='end', TIMESTAMP, 0)) - SUM(IF(ACTIVITY_TYPE='start', TIMESTAMP, 0)) AS TIMESTAMP FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID HAVING COUNT(PROCESS_ID) = 2 ) AS ACTIVITY_TIME GROUP BY MACHINE_ID"
313,Y,Y,"WITH CTE AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), CTE2 AS (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') SELECT CTE.MACHINE_ID, ROUND(AVG(CTE2.TIMESTAMP - CTE.TIMESTAMP),3) AS PROCESSING_TIME FROM CTE, CTE2 WHERE CTE.MACHINE_ID = CTE2.MACHINE_ID AND CTE.PROCESS_ID= CTE2.PROCESS_ID GROUP BY CTE.MACHINE_ID"
314,Y,Y,"WITH START_END AS( SELECT A1.MACHINE_ID, A1.PROCESS_ID, A1.TIMESTAMP AS START_TIME, A2.TIMESTAMP AS END_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end') SELECT MACHINE_ID, ROUND( AVG(END_TIME - START_TIME) , 3) AS PROCESSING_TIME FROM START_END GROUP BY MACHINE_ID"
315,Y,Y,"SELECT E.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP), 3) PROCESSING_TIME FROM ACTIVITY E JOIN ACTIVITY S ON E.MACHINE_ID = S.MACHINE_ID AND E.PROCESS_ID = S.PROCESS_ID AND E.ACTIVITY_TYPE = 'end' AND S.ACTIVITY_TYPE = 'start' GROUP BY E.MACHINE_ID"
316,Y,N,"WITH MP AS (SELECT A.MACHINE_ID, A.PROCESS_ID, A.TIMESTAMP AS T1, B.TIMESTAMP AS T2, ROUND(B.TIMESTAMP-A.TIMESTAMP,3) AS T_GAP FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID=B.MACHINE_ID AND A.PROCESS_ID=B.PROCESS_ID AND A.ACTIVITY_TYPE<>B.ACTIVITY_TYPE WHERE A.ACTIVITY_TYPE='start') SELECT MACHINE_ID, ROUND(AVG(T_GAP),3) AS PROCESSING_TIME FROM MP GROUP BY MACHINE_ID"
317,Y,Y,"SELECT A.MACHINE_ID AS MACHINE_ID, ROUND(AVG(B.TIMESTAMP - A.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY A JOIN ACTIVITY B ON A.MACHINE_ID = B.MACHINE_ID AND A.PROCESS_ID = B.PROCESS_ID WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end' GROUP BY 1"
318,Y,Y,"SELECT A1.MACHINE_ID, ROUND((SUM(A2.TIMESTAMP - A1.TIMESTAMP)/COUNT(A1.PROCESS_ID)),3) AS PROCESSING_TIME FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID AND A1.ACTIVITY_TYPE = 'start' AND A2.ACTIVITY_TYPE = 'end' GROUP BY 1"
319,Y,Y,"WITH CTE AS( SELECT MACHINE_ID, TIMESTAMP, LEAD(TIMESTAMP) OVER(PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE) AS NEXT FROM ACTIVITY ) SELECT MACHINE_ID, ROUND(AVG(NEXT - TIMESTAMP),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID"
320,Y,Y,"SELECT E.MACHINE_ID, ROUND((SUM(E.TIMESTAMP-S.TIMESTAMP)/COUNT(*)),3) PROCESSING_TIME FROM (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE='start') S JOIN (SELECT MACHINE_ID,PROCESS_ID, TIMESTAMP FROM ACTIVITY WHERE ACTIVITY_TYPE='end') E ON S.MACHINE_ID=E.MACHINE_ID AND S.PROCESS_ID=E.PROCESS_ID GROUP BY E.MACHINE_ID"
321,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP-S.TIMESTAMP),3) AS PROCESSING_TIME FROM (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') S LEFT JOIN (SELECT * FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') E ON E.MACHINE_ID = S.MACHINE_ID AND E.PROCESS_ID = S.PROCESS_ID GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
322,Y,Y,"WITH START_TIMES AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), END_TIMES AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') SELECT S.MACHINE_ID, ROUND(SUM(E.END - S.START)/COUNT(DISTINCT S.PROCESS_ID), 3) AS PROCESSING_TIME FROM START_TIMES S JOIN END_TIMES E USING(MACHINE_ID, PROCESS_ID) GROUP BY S.MACHINE_ID"
323,Y,Y,"WITH T AS (SELECT MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE, CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP ELSE TIMESTAMP END AS PROCESSINGTIME FROM ACTIVITY) SELECT MACHINE_ID, ROUND(SUM(PROCESSINGTIME)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM T GROUP BY MACHINE_ID ORDER BY MACHINE_ID"
324,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(END_TIME - START_TIME)/COUNT(PROCESS_ID), 3) AS PROCESSING_TIME FROM (SELECT SUM(IF(ACTIVITY_TYPE = 'start', TIMESTAMP, 0)) AS START_TIME, SUM(IF(ACTIVITY_TYPE = 'end', TIMESTAMP, 0)) AS END_TIME, MACHINE_ID, PROCESS_ID, TIMESTAMP FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) AS TMP GROUP BY MACHINE_ID"
325,Y,Y,"WITH T1 AS ( SELECT MACHINE_ID, PROCESS_ID, LAG(TIMESTAMP) OVER (PARTITION BY MACHINE_ID, PROCESS_ID ORDER BY ACTIVITY_TYPE) AS START_TIME, TIMESTAMP AS END_TIME FROM ACTIVITY ), T2 AS ( SELECT MACHINE_ID, PROCESS_ID, (END_TIME - START_TIME) AS PROCESSING_TIME FROM T1 WHERE END_TIME IS NOT NULL AND START_TIME IS NOT NULL GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, ROUND(AVG(PROCESSING_TIME),3) AS PROCESSING_TIME FROM T2 GROUP BY MACHINE_ID"
326,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(DIFF),3) PROCESSING_TIME FROM (SELECT DISTINCT A.MACHINE_ID, A.PROCESS_ID, B.TIMESTAMP - A.TIMESTAMP DIFF FROM ACTIVITY A JOIN ACTIVITY B USING(MACHINE_ID, PROCESS_ID) WHERE A.ACTIVITY_TYPE = 'start' AND B.ACTIVITY_TYPE = 'end') PP GROUP BY MACHINE_ID"
327,Y,Y,"SELECT A.MACHINE_ID, ROUND(AVG(A.TIMES),3) PROCESSING_TIME FROM (SELECT MACHINE_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP ELSE TIMESTAMP END) TIMES FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID) A GROUP BY MACHINE_ID"
328,Y,Y,"SELECT MACHINE_ID, ROUND(AVG(CASE WHEN ACTIVITY_TYPE='start' THEN -TIMESTAMP ELSE TIMESTAMP END)*2,3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY (MACHINE_ID)"
329,Y,Y,"WITH START_CTE AS (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS START_T FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start'), END_CTE AS ( SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS END_T FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end' ) SELECT MACHINE_ID, ROUND(AVG(END_T-START_T),3) AS PROCESSING_TIME FROM START_CTE INNER JOIN END_CTE USING (MACHINE_ID, PROCESS_ID) GROUP BY MACHINE_ID"
330,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP - S.TIMESTAMP), 3) AS PROCESSING_TIME FROM ACTIVITY S JOIN ACTIVITY E ON S.PROCESS_ID = E.PROCESS_ID AND S.MACHINE_ID = E.MACHINE_ID AND S.ACTIVITY_TYPE = 'start' AND E.ACTIVITY_TYPE = 'end' GROUP BY S.MACHINE_ID"
331,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(IF(ACTIVITY_TYPE = 'start', -TIMESTAMP , TIMESTAMP ))/(0.5*COUNT(*)),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY MACHINE_ID"
332,Y,Y,"SELECT MACHINE_ID, ROUND(SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN -TIMESTAMP WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP END)/COUNT(DISTINCT PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY GROUP BY 1"
333,Y,Y,"SELECT A.MACHINE_ID, ROUND((SUM(CASE WHEN A.ACTIVITY_TYPE='end' THEN A.TIMESTAMP ELSE 0 END)-SUM(CASE WHEN A.ACTIVITY_TYPE='start' THEN A.TIMESTAMP ELSE 0 END))/ COUNT(DISTINCT A.PROCESS_ID),3) AS PROCESSING_TIME FROM ACTIVITY AS A GROUP BY A.MACHINE_ID ORDER BY A.MACHINE_ID"
334,Y,Y,"SELECT S.MACHINE_ID, ROUND(AVG(E.TIMESTAMP-S.TIMESTAMP),3) PROCESSING_TIME FROM ACTIVITY S LEFT OUTER JOIN ACTIVITY E ON S.MACHINE_ID = E.MACHINE_ID AND S.PROCESS_ID = E.PROCESS_ID AND S.ACTIVITY_TYPE='start' AND E.ACTIVITY_TYPE = 'end' GROUP BY S.MACHINE_ID"
335,Y,Y,"SELECT A1.MACHINE_ID, ROUND(AVG(TIMESTAMP_EN - TIMESTAMP_ST),3) AS PROCESSING_TIME FROM (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS TIMESTAMP_ST FROM ACTIVITY WHERE ACTIVITY_TYPE = 'start') A1 JOIN (SELECT MACHINE_ID, PROCESS_ID, TIMESTAMP AS TIMESTAMP_EN FROM ACTIVITY WHERE ACTIVITY_TYPE = 'end') A2 ON A1.MACHINE_ID = A2.MACHINE_ID AND A1.PROCESS_ID = A2.PROCESS_ID GROUP BY MACHINE_ID"
