qid,mysql_can_execute?,mysql_correct?,mysql_query
0,Y,Y,"SELECT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X <> P2.X ORDER BY SHORTEST LIMIT 1"
1,Y,Y,"SELECT ABS(A.X - B.X) AS SHORTEST FROM POINT A, POINT B WHERE A.X <> B.X ORDER BY SHORTEST LIMIT 1"
2,Y,Y,SELECT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X != P2.X ORDER BY SHORTEST LIMIT 1
3,Y,Y,SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT AS P1 JOIN POINT AS P2 ON P1.X<>P2.X ORDER BY 1 LIMIT 1
4,Y,Y,SELECT ABS(X2.X - X1.X) AS SHORTEST FROM POINT X1 JOIN POINT X2 ON X1.X != X2.X ORDER BY 1 LIMIT 1
5,Y,Y,"SELECT DISTINCT ABS(A.X-B.X) AS SHORTEST FROM POINT A, POINT B WHERE A.X != B.X ORDER BY 1 LIMIT 1"
6,Y,Y,SELECT DISTINCT MIN(ABS(P2.X - P1.X)) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X <> P2.X
7,Y,N,"SELECT MIN( DISTANCE ) AS SHORTEST FROM ( SELECT ABS( X1-X2 ) AS DISTANCE FROM ( SELECT X AS X1, LAG( X, 1 ) OVER ( ) AS X2 FROM POINT )AS SUBQUERY1 )AS SUBQUERY2"
8,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT AS P1 JOIN POINT AS P2 ON P1.X <> P2.X
9,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X"
10,Y,Y,"SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT AS A, POINT AS B WHERE A.X != B.X"
11,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A JOIN POINT B WHERE ABS(A.X-B.X)>0
12,Y,Y,"SELECT MIN(ABS(A.X-B.X)) SHORTEST FROM POINT A, POINT B WHERE A.X != B.X"
13,Y,Y,SELECT MIN(ABS(P.X - P1.X)) AS SHORTEST FROM POINT P INNER JOIN POINT P1 ON P.X <> P1.X
14,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT AS P1, POINT AS P2 WHERE P1.X < P2.X"
15,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X != P2.X
16,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X <> P2.X
17,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 LEFT JOIN POINT P2 ON P1.X != P2.X
18,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X != P2.X
19,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 WHERE P1.X != P2.X
20,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) SHORTEST FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X<>P2.X
21,Y,Y,SELECT MIN(ABS(P2.X - P1.X)) AS SHORTEST FROM POINT P1 LEFT JOIN POINT P2 ON P1.X != P2.X
22,Y,Y,"SELECT MIN(ABS(P2.X-P1.X)) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X<> P2.X"
23,Y,Y,SELECT MIN(ABS(T1.X-T2.X)) AS SHORTEST FROM POINT AS T1 JOIN POINT AS T2 ON T1.X != T2.X
24,Y,Y,"SELECT MIN(ABS(X - Y)) AS SHORTEST FROM( SELECT X, LAG(X) OVER(ORDER BY X) AS Y FROM POINT ORDER BY X) FOO"
25,Y,Y,"SELECT MIN(ABS(X1-X2)) AS SHORTEST FROM (SELECT P1.X AS X1, P2.X AS X2 FROM POINT P1, POINT P2 WHERE P1.X!=P2.X) AS C1"
26,Y,Y,"SELECT MIN(ABS(X1.X - X2.X)) AS SHORTEST FROM POINT X1, POINT X2 WHERE X1.X != X2.X"
27,Y,Y,SELECT MIN(A.X - B.X) AS SHORTEST FROM POINT A JOIN POINT B ON A.X <> B.X AND A.X > B.X
28,Y,Y,"SELECT MIN(A.X - B.X) AS SHORTEST FROM POINT A, POINT B WHERE A.X > B.X"
29,Y,Y,"SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT A, POINT B WHERE A.X <> B.X"
30,Y,Y,SELECT MIN(ABS(P2.X-P1.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X != P2.X
31,Y,Y,SELECT MIN(C.DISTANCE) AS SHORTEST FROM (SELECT (A.X - B.X) AS DISTANCE FROM POINT A JOIN POINT B ON A.X <> B.X AND A.X > B.X) C
32,Y,Y,SELECT MIN(D) SHORTEST FROM (SELECT X-(LAG(X) OVER(ORDER BY X)) D FROM POINT) T
33,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT ABS(P1.X - P2.X) AS DISTANCE FROM POINT P1 JOIN POINT P2 WHERE ABS(P1.X - P2.X) != 0 ) DISTANCES
34,Y,Y,SELECT MIN(P1.X - P2.X) AS SHORTEST FROM POINT P1 INNER JOIN POINT P2 ON P1.X > P2.X
35,Y,Y,SELECT MIN(P1.X - P2.X) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X > P2.X
36,Y,Y,SELECT MIN(P1.X-P2.X) SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X>P2.X
37,Y,Y,SELECT MIN(P2.X-P1.X) SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X<P2.X
38,Y,Y,"SELECT MIN(SHORT - X) AS SHORTEST FROM (SELECT X, LEAD(X) OVER (ORDER BY X) AS SHORT FROM POINT) AS P"
39,Y,Y,SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT A JOIN POINT B WHERE A.X <> B.X
40,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT ABS(T1.X - T2.X) AS DISTANCE FROM POINT T1 JOIN POINT T2 ON T1.X <> T2.X ) AS T
41,Y,Y,"SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT X, ABS(X- LEAD(X) OVER(ORDER BY X ASC)) AS DISTANCE FROM POINT ) X"
42,Y,Y,"SELECT MIN(P1.X-P2.X) AS SHORTEST FROM POINT AS P1, POINT AS P2 WHERE P1.X!=P2.X AND P1.X>P2.X"
43,Y,Y,SELECT MIN(SUB.DISTANCE) AS SHORTEST FROM ( SELECT X - LAG(X) OVER (ORDER BY X) AS DISTANCE FROM POINT ) SUB
44,Y,Y,"SELECT MIN(ABS(SHORTEST)) AS SHORTEST FROM ( SELECT X-X2 AS SHORTEST FROM ( SELECT X, LEAD(X,1) OVER (ORDER BY X ASC) AS X2 FROM POINT P ) A ) B"
45,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A LEFT JOIN POINT B ON A.X != B.X
46,Y,Y,"WITH A AS ( SELECT ABS(A.X-B.X) AS DIS FROM POINT A, POINT B WHERE A.X <> B.X ) SELECT MIN(DIS) AS SHORTEST FROM A"
47,Y,Y,"WITH ALL_LINES AS ( SELECT P1.X AS P1_X, P2.X AS P2_X, ABS(P1.X - P2.X) AS DIST FROM POINT P1, POINT P2 WHERE P1.X <> P2.X ) SELECT MIN(DIST) AS SHORTEST FROM ALL_LINES"
48,Y,Y,"WITH CTE AS (SELECT X, X-LAG(X) OVER(ORDER BY X) AS LAG_X FROM POINT) SELECT MIN(LAG_X) AS SHORTEST FROM CTE"
49,Y,N,WITH DIST AS ( SELECT ABS(LAG(X) OVER() - X) DIFFERENCE FROM POINT ) SELECT MIN(DIFFERENCE) SHORTEST FROM DIST
50,Y,N,"WITH T1 AS ( SELECT X, LEAD(X) OVER() AS NEXT FROM POINT ), T2 AS ( SELECT X, ABS(ABS(X)- ABS(NEXT)) AS DIFF FROM T1 ), T3 AS ( SELECT MIN(DIFF) AS SHORTEST FROM T2 ) SELECT * FROM T3"
51,Y,Y,"SELECT ABS(A.X - B.X) SHORTEST FROM POINT A , POINT B WHERE A.X<>B.X ORDER BY SHORTEST LIMIT 1"
52,Y,Y,SELECT ABS(A.X-B.X) AS SHORTEST FROM POINT A JOIN POINT B ON A.X <>B.X ORDER BY SHORTEST LIMIT 1
53,Y,Y,SELECT ABS(A.X-B.X) AS SHORTEST FROM POINT AS A JOIN POINT AS B ON A.X <>B.X ORDER BY 1 LIMIT 1
54,Y,Y,"SELECT ABS(A.X-B.X) SHORTEST FROM POINT A, POINT B WHERE A.X != B.X ORDER BY ABS(A.X-B.X) LIMIT 1"
55,Y,N,"SELECT ABS(MIN(NEXT-X )) AS SHORTEST FROM( SELECT X, LEAD(X)OVER()NEXT FROM POINT ) AS POINT2"
56,Y,Y,"SELECT ABS(MIN(NEXT-X )) AS SHORTEST FROM( SELECT X, LEAD(X)OVER(ORDER BY X)NEXT FROM POINT ) AS POINT2"
57,Y,Y,SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X!=P2.X ORDER BY 1 ASC LIMIT 1
58,Y,Y,"SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X<>P2.X ORDER BY 1 LIMIT 1"
59,Y,Y,"SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT P1,POINT P2 WHERE P1.X!=P2.X ORDER BY SHORTEST LIMIT 1"
60,Y,Y,"SELECT DISTINCT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE ABS(P1.X - P2.X) >0 ORDER BY ABS(P1.X - P2.X) LIMIT 1"
61,Y,Y,SELECT DISTINCT MIN(ABS(P1.X -P2.X)) AS SHORTEST FROM POINT AS P1 JOIN POINT AS P2 ON P1.X <> P2.X
62,Y,Y,SELECT DISTINCT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X!=P2.X
63,Y,Y,SELECT DISTINCT MIN(ABS(T1.X - T2.X)) AS SHORTEST FROM POINT T1 JOIN POINT T2 ON T1.X != T2.X
64,Y,Y,SELECT MIN(P2.X - P1.X) AS SHORTEST FROM POINT P1 INNER JOIN POINT P2 ON P1.X < P2.X
65,Y,Y,"SELECT MIN(A) AS SHORTEST FROM (SELECT ABS(X- (LEAD(X,1) OVER (ORDER BY X))) AS A FROM POINT) AS Y"
66,Y,Y,"SELECT MIN(A.D0) AS SHORTEST FROM ( SELECT ABS(X - LEAD(X,1) OVER (ORDER BY X ASC)) AS D0 FROM POINT UNION SELECT ABS((LEAD(X,1) OVER (ORDER BY X ASC)- LEAD(X,2) OVER (ORDER BY X ASC))) AS D1 FROM POINT UNION SELECT ABS(X - LEAD(X,1) OVER (ORDER BY X ASC)) AS D2 FROM POINT )A"
67,Y,Y,"SELECT MIN(A.X- B.X) AS SHORTEST FROM POINT AS A, POINT AS B WHERE A.X > B.X"
68,Y,Y,SELECT MIN(A.X-B.X) AS SHORTEST FROM POINT A JOIN POINT B WHERE A.X - B.X >=1
69,Y,Y,SELECT MIN(A.X-B.X) SHORTEST FROM POINT A LEFT JOIN POINT B ON A.X>B.X
70,Y,Y,"SELECT MIN(ABS( X - VAL)) AS SHORTEST FROM ( SELECT X, LAG(X) OVER(ORDER BY X DESC) AS VAL FROM POINT ) T"
71,Y,Y,SELECT MIN(ABS(((T1.X)-(T2.X)))) AS SHORTEST FROM POINT AS T1 JOIN POINT AS T2 ON T1.X != T2.X
72,Y,Y,SELECT MIN(ABS(A.X - B.X)) SHORTEST FROM POINT A CROSS JOIN POINT B ON A.X != B.X
73,Y,Y,"SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT A, POINT B WHERE A.X != B.X"
74,Y,Y,SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT A JOIN POINT B ON A.X != B.X
75,Y,Y,"SELECT MIN(ABS(A.X - B.X)) SHORTEST FROM POINT A , POINT B WHERE A.X<>B.X"
76,Y,Y,"SELECT MIN(ABS(A.X-A.NEXT_X)) AS SHORTEST FROM (SELECT X, LAG(X,1) OVER (ORDER BY X) AS NEXT_X FROM POINT ORDER BY X ) A"
77,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A CROSS JOIN POINT B WHERE A.X!=B.X
78,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A INNER JOIN POINT B ON A.X<B.X OR A.X>B.X
79,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A JOIN POINT B ON A.X <> B.X
80,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A JOIN POINT B WHERE A.X != B.X
81,Y,Y,"SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A, POINT B WHERE A.X<B.X"
82,Y,Y,"SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A, POINT B WHERE A.X>B.X"
83,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT AS A JOIN POINT AS B ON A.X != B.X
84,Y,Y,"SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT AS A, POINT AS B WHERE ABS(A.X-B.X)!=0"
85,Y,Y,"SELECT MIN(ABS(ABS(A.X)-ABS(A.NEXT_CLOSEST))) AS SHORTEST FROM( SELECT *, LEAD(X) OVER(ORDER BY X) AS NEXT_CLOSEST FROM POINT) A"
86,Y,Y,SELECT MIN(ABS(B.X-A.X)) AS SHORTEST FROM POINT A LEFT JOIN POINT B ON A.X!=B.X
87,Y,Y,SELECT MIN(ABS(P.X-Q.X)) AS SHORTEST FROM POINT P JOIN POINT Q ON P.X!=Q.X
88,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT AS P1 JOIN POINT AS P2 ON P1.X != P2.X
89,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 INNER JOIN POINT P2 ON P1.X != P2.X
90,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X <> P2.X"
91,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X <> P2.X
92,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) SHORTEST FROM POINT P1, POINT P2 WHERE P1.X <> P2.X"
93,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X!=P2.X
94,Y,Y,SELECT MIN(ABS(POINT1.X - POINT2.X)) AS SHORTEST FROM POINT POINT1 JOIN POINT POINT2 ON POINT1.X != POINT2.X
95,Y,Y,"SELECT MIN(ABS(RE.X - RE.LA)) AS SHORTEST FROM (SELECT X, LAG(X, 1) OVER (ORDER BY X) AS LA FROM POINT) RE"
96,Y,Y,SELECT MIN(ABS(T1.X - T2.X)) AS SHORTEST FROM POINT T1 JOIN POINT T2 ON T1.X != T2.X
97,Y,Y,"SELECT MIN(ABS(T1.X-T2.X)) SHORTEST FROM POINT T1, POINT T2 WHERE T1.X <> T2.X"
98,Y,Y,SELECT MIN(ABS(X1.X - X2.X)) AS SHORTEST FROM POINT X1 LEFT JOIN POINT X2 ON X1.X != X2.X
99,Y,Y,SELECT MIN(DIFF) AS SHORTEST FROM ( SELECT ABS(X - LEAD(X) OVER (ORDER BY X ASC)) AS DIFF FROM POINT ) P
100,Y,Y,"SELECT MIN(DIFF) AS SHORTEST FROM (SELECT ABS(X-(LAG(X,1) OVER(ORDER BY X ASC))) AS DIFF FROM POINT) A"
101,Y,Y,"SELECT MIN(DIST) AS SHORTEST FROM (SELECT ABS(X-X1) AS DIST FROM (SELECT A.X, A.ROW_NUM, B.X AS X1, B.ROW_NUM AS ROW_NUM1 FROM (SELECT X,ROW_NUMBER() OVER(ORDER BY X) AS ROW_NUM FROM POINT) A CROSS JOIN (SELECT X,ROW_NUMBER() OVER(ORDER BY X) AS ROW_NUM FROM POINT) B )C WHERE ROW_NUM!=ROW_NUM1) D"
102,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM (SELECT ABS(P1.X-P2.X) AS DISTANCE FROM POINT P1 JOIN POINT P2 ON P1.X<P2.X) T
103,Y,Y,"SELECT MIN(NEXT_X - X) SHORTEST FROM (SELECT X, LEAD(X) OVER(ORDER BY X ASC) NEXT_X FROM POINT) T"
104,Y,Y,SELECT MIN(P1.X - P2.X) AS SHORTEST FROM POINT P1 JOIN POINT P2 WHERE P1.X > P2.X
105,Y,Y,"SELECT MIN(P1.X - P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X>P2.X"
106,Y,Y,SELECT MIN(P1.X - P2.X) SHORTEST FROM POINT P1 INNER JOIN POINT P2 ON P1.X > P2.X
107,Y,Y,"SELECT MIN(P2.X - P1.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X < P2.X"
108,Y,N,SELECT MIN(T1.NUM) AS SHORTEST FROM (SELECT ABS(X-LAG(X) OVER ()) AS NUM FROM POINT) AS T1 WHERE T1.NUM IS NOT NULL
109,Y,Y,"SELECT MIN(T2.X-T1.X) AS SHORTEST FROM POINT T1, POINT T2 WHERE T2.X>T1.X"
110,Y,Y,"SELECT MIN(TEM.PRE-TEM.X) AS SHORTEST FROM ( SELECT *, LEAD(X) OVER (ORDER BY X) AS PRE FROM POINT) AS TEM"
111,Y,Y,"SELECT MIN(X-RNK) AS SHORTEST FROM (SELECT X, LAG(X,1) OVER (ORDER BY X)AS RNK FROM POINT)T"
112,Y,Y,"SELECT MIN(X2) AS SHORTEST FROM (SELECT X,ABS(X-LAG(X,1) OVER (ORDER BY X)) AS X2 FROM (SELECT X FROM POINT ORDER BY X) T)T2"
113,Y,Y,"SELECT X-LX AS SHORTEST FROM (SELECT X, LAG(X) OVER(ORDER BY X ASC) AS LX FROM POINT) A WHERE LX IS NOT NULL ORDER BY X-LX ASC LIMIT 1"
114,Y,Y,"SELECT Y-X AS SHORTEST FROM ( SELECT X, LEAD(X) OVER () AS Y FROM POINT ORDER BY X ASC ) T WHERE Y IS NOT NULL ORDER BY Y-X LIMIT 1"
115,Y,Y,"WITH A AS (SELECT X, LAG(X) OVER(ORDER BY X), X - LAG(X) OVER(ORDER BY X) AS DIST FROM POINT ORDER BY X ASC) SELECT MIN(DIST) AS SHORTEST FROM A"
116,Y,Y,"WITH CTE AS ( SELECT X,LEAD(X) OVER (ORDER BY X) AS LD FROM POINT ) SELECT MIN(LD-X) AS SHORTEST FROM CTE"
117,Y,N,"WITH CTE AS (SELECT ROW_NUMBER() OVER() AS ROW_NUM, X FROM POINT) SELECT MIN(ABS(C1.X - C2.X)) AS SHORTEST FROM CTE C1 INNER JOIN CTE C2 ON C1.ROW_NUM = C2.ROW_NUM -1"
118,Y,Y,"WITH CTE AS (SELECT X,ABS(X - LEAD(X) OVER (ORDER BY X ASC)) AS DISTANCE FROM POINT) SELECT MIN(DISTANCE) AS SHORTEST FROM CTE"
119,Y,Y,"WITH CTE AS( SELECT P1.X AS X1, P2.X AS X2 FROM POINT P1 JOIN POINT P2 WHERE P1.X != P2.X) SELECT DISTINCT MIN(ABS(X1-X2)) AS SHORTEST FROM CTE"
120,Y,Y,"WITH DIST AS (SELECT A1.X - A2.X AS MIN_DIS FROM POINT A1, POINT A2 WHERE A1.X <> A2.X) SELECT MIN(MIN_DIS) AS SHORTEST FROM DIST WHERE MIN_DIS>0"
121,Y,Y,SELECT MIN(DIF) AS SHORTEST FROM (SELECT X-LAG(X) OVER (ORDER BY X) DIF FROM POINT) AS POINT2
122,Y,Y,SELECT MIN(DIFF ) AS SHORTEST FROM ( SELECT (X-LAG(X) OVER(ORDER BY X)) AS DIFF FROM POINT ) C
123,Y,Y,"SELECT MIN(SHORTEST) SHORTEST FROM (SELECT X - LAG(X, 1) OVER ( ORDER BY X ) SHORTEST FROM (SELECT X FROM POINT ORDER BY X ) T ) T1"
124,Y,Y,"WITH BASE AS ( SELECT ABS(X - LEAD(X, 1) OVER(ORDER BY X)) AS SHORTEST FROM POINT ) SELECT MIN(SHORTEST) AS SHORTEST FROM BASE"
125,Y,Y,"SELECT COALESCE(MIN(ABS(TABLESOURCE.X - TABLESOURCE2.X)), 0) AS SHORTEST FROM (SELECT * FROM (SELECT (@CNT1 := @CNT1 + 1) AS ROWNUMBER, X FROM (SELECT * FROM POINT ORDER BY X) AS P1 CROSS JOIN (SELECT @CNT1 := 0) AS DUMMY ) AS T1 WHERE ROWNUMBER>1 )AS TABLESOURCE2 JOIN (SELECT (@CNT2 := @CNT2 + 1) AS ROWNUMBER, X FROM (SELECT * FROM POINT ORDER BY X) AS P2 CROSS JOIN (SELECT @CNT2 := 0) AS DUMMY ) AS TABLESOURCE ON TABLESOURCE2.ROWNUMBER-1=TABLESOURCE.ROWNUMBER"
126,Y,Y,"SELECT (A.NEXT_POINT-A.X) AS SHORTEST FROM (SELECT X, LEAD(X,1) OVER ( ORDER BY X ) NEXT_POINT FROM POINT ORDER BY X ASC) A WHERE (A.NEXT_POINT-A.X) IS NOT NULL ORDER BY SHORTEST LIMIT 1"
127,Y,Y,"SELECT MIN(ABS(PREVIOUS-X)) AS SHORTEST FROM ( SELECT X, LAG(X, 1)OVER(ORDER BY X) AS PREVIOUS FROM POINT ) AS A"
128,Y,Y,"SELECT MIN(DIST) AS SHORTEST FROM (SELECT X, ABS(X-LEAD(X) OVER(ORDER BY X ASC)) AS DIST FROM POINT ) TEMP"
129,Y,Y,SELECT MIN(A.X - B.X) AS SHORTEST FROM POINT A CROSS JOIN POINT B WHERE A.X > B.X
130,Y,Y,SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM (SELECT DISTINCT X FROM POINT) A JOIN (SELECT DISTINCT X FROM POINT) B ON A.X != B.X
131,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT AS P1 CROSS JOIN POINT AS P2 WHERE P1.X != P2.X
132,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT AS P1 CROSS JOIN POINT AS P2 WHERE P1.X > P2.X
133,Y,Y,"SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT AS P1, POINT AS P2 WHERE P1.X<>P2.X"
134,Y,Y,SELECT ABS((X - LEAD(X) OVER(ORDER BY X ASC ))) AS SHORTEST FROM POINT ORDER BY SHORTEST ASC LIMIT 1 OFFSET 1
135,Y,Y,"WITH CTE AS ( SELECT X , ABS((LAG(X, 1) OVER()) - X) AS DISTANCE FROM POINT ORDER BY X) SELECT MIN(DISTANCE) AS SHORTEST FROM CTE"
136,Y,Y,"SELECT MIN(ABS(TEMP.A-TEMP.B)) AS SHORTEST FROM ( SELECT P.X AS A, J.X AS B FROM POINT P CROSS JOIN POINT J ON P.X != J.X) TEMP"
137,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT AS P1, POINT AS P2 WHERE P1.X != P2.X"
138,Y,Y,"SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT X - LAG(X, 1) OVER(ORDER BY X ASC) AS DISTANCE FROM POINT ) TEMP"
139,Y,Y,"SELECT MIN(SHORTEST) AS SHORTEST FROM ( SELECT X, CASE WHEN LG IS NULL THEN ABS(LD-X) WHEN LD IS NULL THEN ABS(X-LG) ELSE ABS(LD-X) END AS SHORTEST FROM (SELECT X, LAG(X) OVER () LG, LEAD(X) OVER() AS LD, ROW_NUMBER() OVER () AS RNO FROM POINT ORDER BY X) Y ) Z"
140,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P2.X != P1.X
141,Y,Y,"SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT X, ABS(X- LEAD(X) OVER(ORDER BY X)) AS DISTANCE FROM POINT ) X"
142,Y,Y,"SELECT MIN(MINI) AS SHORTEST FROM ( SELECT ABS(P1.X-P2.X) AS MINI FROM POINT P1, POINT P2 WHERE P1.X != P2.X) T1"
143,Y,Y,SELECT ABS(A.X - B.X) AS SHORTEST FROM POINT A CROSS JOIN POINT B WHERE A.X <> B.X ORDER BY SHORTEST ASC LIMIT 1
144,Y,Y,SELECT MIN(ABS(A.X -B.X) )AS SHORTEST FROM POINT AS A LEFT JOIN POINT AS B ON ABS(A.X-B.X)<=(SELECT MAX(X)-MIN(X) FROM POINT) WHERE A.X != B.X
145,Y,Y,SELECT SHORTEST FROM (SELECT ABS(X - LEAD(X) OVER(ORDER BY X)) SHORTEST FROM POINT) T WHERE SHORTEST IS NOT NULL ORDER BY SHORTEST LIMIT 1
146,Y,Y,"SELECT MIN(SHORTEST) AS SHORTEST FROM ( SELECT ABS(X-LAGG) AS SHORTEST FROM ( SELECT X,LAG(X) OVER(ORDER BY X ASC) AS LAGG FROM POINT )A )B"
147,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1 INNER JOIN POINT P2 WHERE P1.X<P2.X
148,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X < P2.X
149,Y,Y,"SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT A JOIN POINT B ON A.X != B.X ORDER BY A.X, B.X"
150,Y,Y,"SELECT MIN(ABS(PRE - X)) AS SHORTEST FROM (SELECT X, LAG(X) OVER(ORDER BY X) AS PRE FROM POINT) AS T"
151,Y,Y,"SELECT ABS(MIN(P.X - P.LAG)) AS SHORTEST FROM (SELECT X, LAG(X) OVER (ORDER BY X) AS LAG FROM POINT) P"
152,Y,Y,SELECT MIN(ABS(X1.X-X2.X)) AS SHORTEST FROM POINT X1 JOIN POINT X2 ON X1.X!=X2.X
153,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 JOIN POINT P2 WHERE P1.X <> P2.X
154,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) SHORTEST FROM POINT P1 CROSS JOIN POINT P2 ON P1.X <> P2.X
155,Y,Y,"SELECT MIN(ABS(T1.X-T2.X)) AS SHORTEST FROM POINT T1, POINT T2 WHERE T1.X != T2.X"
156,Y,Y,SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT A CROSS JOIN POINT B ON A.X <> B.X
157,Y,Y,"SELECT MIN(ABS(DIFF)) AS SHORTEST FROM (SELECT X, LAG(X,1) OVER(ORDER BY X) AS LAG_OB, (X - LAG(X,1) OVER(ORDER BY X)) AS DIFF FROM POINT ORDER BY X) T"
158,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM( SELECT ABS(A.X - B.X) AS DISTANCE FROM POINT A CROSS JOIN POINT B WHERE A.X != B.X) AS TEMP
159,Y,Y,"SELECT DISTINCT ABS(A.X-B.X) AS SHORTEST FROM POINT A, POINT B WHERE ABS(A.X-B.X) >0 ORDER BY SHORTEST LIMIT 1"
160,Y,Y,"SELECT ABS(A.X-B.X) AS SHORTEST FROM POINT A, POINT B WHERE A.X!=B.X ORDER BY SHORTEST ASC LIMIT 1"
161,Y,Y,SELECT MIN(DISTANCE) SHORTEST FROM (SELECT ABS(P1.X-P2.X) DISTANCE FROM POINT P1 JOIN POINT P2 ON P1.X != P2.X) D
162,Y,Y,"SELECT MIN(ABS(A.Y-A.X)) AS SHORTEST FROM (SELECT B.X, C.X AS Y FROM POINT B, POINT C) A WHERE A.Y!=A.X"
163,Y,Y,SELECT MIN(ABS(T1.X-T2.X)) AS SHORTEST FROM POINT AS T1 JOIN POINT AS T2 ON T1.X<>T2.X
164,Y,Y,SELECT MIN(ABS(A.X-B.X)) SHORTEST FROM POINT A JOIN POINT B ON A.X<>B.X
165,Y,Y,SELECT MIN(ABS(X1.X - X2.X)) AS SHORTEST FROM POINT X1 JOIN POINT X2 WHERE X1.X != X2.X
166,Y,Y,SELECT ABS(P1.X-P2.X) SHORTEST FROM POINT P1 JOIN POINT P2 WHERE P1.X != P2.X ORDER BY ABS(P1.X-P2.X) ASC LIMIT 1
167,Y,Y,"SELECT MIN(MINIMUM_VALUE) AS SHORTEST FROM (SELECT X, ABS(X - LEAD(X) OVER(ORDER BY X ASC)) MINIMUM_VALUE FROM POINT)X"
168,Y,Y,"SELECT MIN(X1MINUSX2) AS SHORTEST FROM ( SELECT ABS(X-LEAD(X,1) OVER(ORDER BY X)) AS X1MINUSX2 FROM POINT UNION ALL SELECT ABS(X-LEAD(X,2) OVER(ORDER BY X)) AS X1MINUSX3 FROM POINT )DIST_CALC"
169,Y,Y,SELECT MIN(L) AS SHORTEST FROM (SELECT ABS(A.X -B.X) AS L FROM POINT A JOIN POINT B ON A.X <> B.X)P
170,Y,Y,"SELECT MIN(ABS((P1.X - P2.X))) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X"
171,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A CROSS JOIN POINT B WHERE A.X <> B.X
172,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 INNER JOIN POINT P2 WHERE P1.X > P2.X
173,Y,Y,"SELECT MIN(ABS(X1-X2)) AS SHORTEST FROM (SELECT A.X AS X1, B.X AS X2 FROM POINT A, POINT B) C WHERE (X1,X2) NOT IN (SELECT D.X AS X1, E.X AS X2 FROM POINT D INNER JOIN POINT E ON D.X=E.X)"
174,Y,Y,"WITH CTE1 AS (SELECT X - LAG(X, 1) OVER (ORDER BY X) AS K FROM POINT) SELECT MIN(K) AS SHORTEST FROM CTE1"
175,Y,Y,SELECT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1 INNER JOIN POINT P2 ON P1.X != P2.X ORDER BY ABS(P1.X - P2.X) ASC LIMIT 1
176,Y,Y,"SELECT ABS(A.X - A.LAG_X) AS SHORTEST FROM (SELECT X, LAG(X) OVER (ORDER BY X) AS LAG_X FROM POINT) AS A HAVING SHORTEST IS NOT NULL ORDER BY SHORTEST LIMIT 1"
177,Y,Y,"SELECT MIN(ABS(T1.X - T2.X)) AS SHORTEST FROM POINT T1,POINT T2 WHERE T1.X<>T2.X"
178,Y,Y,SELECT DISTANCE AS SHORTEST FROM (SELECT ABS(P1.X-P2.X) AS DISTANCE FROM POINT P1 JOIN POINT P2 ON P1.X <>P2.X) TMP ORDER BY DISTANCE ASC LIMIT 1
179,Y,Y,SELECT ABS(A.X - B.X) SHORTEST FROM POINT A JOIN POINT B ON A.X != B.X ORDER BY SHORTEST LIMIT 1
180,Y,Y,"SELECT MIN(ABS(X.X - Y.X)) AS SHORTEST FROM POINT X, POINT Y WHERE X.X <> Y.X"
181,Y,Y,SELECT MIN(ABS(A.X-B.X)) AS SHORTEST FROM POINT A INNER JOIN POINT B ON A.X != B.X
182,Y,Y,"SELECT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X ORDER BY 1 ASC LIMIT 1"
183,Y,Y,SELECT MIN(DIFF) AS SHORTEST FROM (SELECT X-LAG(X)OVER(ORDER BY X) AS DIFF FROM POINT ORDER BY DIFF) AS S
184,Y,Y,SELECT MIN(DIFF) AS SHORTEST FROM (SELECT X - LAG(X) OVER(ORDER BY X) AS DIFF FROM POINT) AS T1
185,Y,Y,"SELECT MIN(ABS(X1-X2)) AS SHORTEST FROM (SELECT P1.X AS X1, P2.X AS X2 FROM POINT P1, POINT P2 WHERE P1.X != P2.X) TEMP"
186,Y,Y,SELECT MIN(ABS(A.X - B.X)) SHORTEST FROM POINT A JOIN POINT B WHERE A.X != B.X
187,Y,Y,SELECT MIN(C.S) AS SHORTEST FROM (SELECT ABS(B.X-A.X) AS S FROM POINT A CROSS JOIN POINT B WHERE ABS(B.X-A.X)>0) C
188,Y,Y,WITH CTE1 AS (SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X != P2.X ) SELECT MIN(SHORTEST) AS SHORTEST FROM CTE1
189,Y,Y,"SELECT MIN(ABS(X-Y)) AS SHORTEST FROM (SELECT A.X AS X, B.X AS Y FROM POINT AS A JOIN POINT AS B ON A.X != B.X) AS C"
190,Y,Y,"WITH CTE AS ( SELECT A.X AS A_X, B.X AS B_X, CASE WHEN (A.X>0 AND B.X>0) OR (A.X<0 AND B.X<0) THEN ABS(ABS(A.X)-ABS(B.X)) ELSE ABS(ABS(A.X)+ABS(B.X)) END AS DIFF FROM POINT A JOIN POINT B WHERE A.X != B.X) SELECT DIFF AS SHORTEST FROM CTE ORDER BY SHORTEST LIMIT 1"
191,Y,Y,"WITH TEMP AS (SELECT A.X, B.X AS NEW_POINT FROM POINT A CROSS JOIN POINT B) SELECT DISTINCT MIN(ABS(X-NEW_POINT)) AS SHORTEST FROM TEMP WHERE X != NEW_POINT"
192,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM (SELECT ABS(P1.X - P2.X) AS DISTANCE FROM POINT P1 JOIN POINT P2) TAB1 WHERE DISTANCE <> 0
193,Y,Y,"SELECT MIN(ABS(A.X-A.NEW)) AS SHORTEST FROM (SELECT *,LAG(X) OVER (ORDER BY X) AS NEW FROM POINT) A"
194,Y,Y,SELECT P1.X - P2.X AS SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X > P2.X ORDER BY SHORTEST LIMIT 1
195,Y,Y,"SELECT (P1.X - P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X > P2.X ORDER BY SHORTEST LIMIT 1"
196,Y,Y,"SELECT MIN(ABS(P2.X-P1.X)) SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X"
197,Y,Y,SELECT MIN(ABS(X.X - XX.X)) AS SHORTEST FROM POINT X INNER JOIN POINT XX ON X.X <> XX.X
198,Y,Y,SELECT MIN(VAL) AS SHORTEST FROM (SELECT ABS(P1.X - P2.X) AS VAL FROM POINT P1 JOIN POINT P2 ON P1.X <> P2.X) T
199,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM (SELECT ABS(A.X-B.X) AS DISTANCE FROM POINT A CROSS JOIN POINT B WHERE A.X <> B.X) T
200,Y,Y,"WITH T AS ( SELECT P1.X AS X1, P2.X AS X2 FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X != P2.X ) SELECT MIN(ABS(X1 - X2)) AS SHORTEST FROM T"
201,Y,Y,SELECT SHORTEST FROM ( SELECT ABS((A.X-B.X)) AS SHORTEST FROM POINT A JOIN POINT B ) D WHERE SHORTEST <> 0 ORDER BY SHORTEST LIMIT 1
202,Y,Y,SELECT MIN(TB1.DIS) AS SHORTEST FROM( SELECT ABS(A.X-B.X) AS DIS FROM POINT A JOIN POINT B ON A.X!=B.X )AS TB1
203,Y,Y,"SELECT MIN(ABS(P.X-P1.X)) SHORTEST FROM POINT P, POINT P1 WHERE P.X <>P1.X"
204,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM (SELECT ABS(P1.X - P2.X) AS DISTANCE FROM POINT P1 JOIN POINT P2 WHERE P1.X <> P2.X) TAB1 WHERE DISTANCE <> 0
205,Y,Y,"SELECT MIN(SHORTEST) AS SHORTEST FROM (SELECT DISTINCT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X) AS TEMP"
206,Y,Y,SELECT MIN(ABS(A.X-B.X)) SHORTEST FROM POINT A LEFT JOIN POINT B ON A.X!=B.X
207,Y,Y,SELECT MIN(ABS(X1. X - X2. X)) AS SHORTEST FROM POINT AS X1 CROSS JOIN POINT AS X2 WHERE X1.X != X2. X
208,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM( SELECT ABS(A.X-B.X) AS DISTANCE FROM POINT A JOIN POINT B WHERE A.X != B.X) C
209,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM (SELECT ABS(P1.X - P2.X) AS DISTANCE FROM POINT AS P1 JOIN POINT AS P2 ON P1.X <> P2.X) AS MAIN_T
210,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 ON P1.X != P2.X
211,Y,Y,SELECT MIN(A.X - B.X) AS SHORTEST FROM POINT A LEFT JOIN POINT B ON A.X > B.X
212,Y,Y,SELECT MIN(DIS) AS SHORTEST FROM (SELECT ABS(P1.X-P2.X) AS DIS FROM POINT P1 JOIN POINT P2 ON P1.X!=P2.X) P3
213,Y,Y,"WITH POINT1 AS (SELECT X FROM POINT ORDER BY X), POINT2 AS (SELECT X FROM POINT ORDER BY X LIMIT 1234566 OFFSET 1) SELECT ABS(P2.X-P1.X) SHORTEST FROM POINT1 P1, POINT2 P2 WHERE ABS(P2.X-P1.X)>0 ORDER BY SHORTEST LIMIT 1"
214,Y,Y,"SELECT MIN(ABS(A.DIST)) AS SHORTEST FROM ( SELECT X - LAG(X, 1) OVER (ORDER BY X) AS DIST FROM POINT ) A"
215,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X"
216,Y,Y,SELECT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X != P2.X ORDER BY SHORTEST ASC LIMIT 1
217,Y,Y,"SELECT MIN(DISTANCE) SHORTEST FROM (SELECT P1.X POINT1, P2.X POINT2, ABS(P1.X - P2.X) DISTANCE FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X < P2.X)T"
218,Y,Y,SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT AS A JOIN POINT AS B ON A.X != B.X LIMIT 10
219,Y,Y,"SELECT MIN(DISTANCE) SHORTEST FROM ( SELECT SQRT(POW(P1.X - P2.X,2)) AS DISTANCE FROM POINT P1 INNER JOIN POINT P2 ON P1.X <> P2.X) SUB"
220,Y,Y,"SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT P.X, ABS(P.X - B.X) AS DISTANCE FROM POINT AS P INNER JOIN POINT AS B ON P.X != B.X ) AS A"
221,Y,Y,SELECT ABS(P1.X - P2.X) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 ON P1.X <> P2.X ORDER BY 1 LIMIT 1
222,Y,Y,"WITH B AS (SELECT X, LEAD(X, 1) OVER (ORDER BY X) AS L FROM POINT) SELECT MIN(ABS(L - X)) AS SHORTEST FROM B"
223,Y,Y,SELECT MIN(ABS(A.X - B.X)) AS SHORTEST FROM POINT AS A JOIN POINT AS B WHERE A.X != B.X
224,Y,Y,"SELECT MIN(ABS(P1.X-P2.X)) AS SHORTEST FROM POINT P1, POINT P2 WHERE P1.X < P2.X"
225,Y,Y,"SELECT MIN(ABS(X1.X-X2.X)) SHORTEST FROM POINT X1, POINT X2 WHERE X1.X != X2.X"
226,Y,Y,SELECT ABS(B.X - A.X) AS SHORTEST FROM POINT A JOIN POINT B ON A.X!=B.X ORDER BY SHORTEST ASC LIMIT 1
227,Y,Y,"SELECT ABS(A.X - B.X) AS SHORTEST FROM POINT A, POINT B WHERE ABS(A.X - B.X) > 0 ORDER BY SHORTEST LIMIT 1"
228,Y,Y,SELECT MIN(ABS(P1.X-P2.X)) SHORTEST FROM POINT P1 INNER JOIN POINT P2 ON P1.X <> P2.X
229,Y,Y,"WITH TEMP AS ( SELECT A.X AS NUM1, B.X AS NUM2 FROM POINT AS A JOIN POINT AS B ), DIFF AS ( SELECT ABS(NUM1 - NUM2) AS DIFF FROM TEMP ) SELECT MIN(DIFF) AS SHORTEST FROM DIFF WHERE DIFF != 0"
230,Y,Y,SELECT MIN(P2.X - P1.X) SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X != P2.X WHERE P1.X < P2.X
231,Y,Y,"SELECT MIN(DISTANCE) AS SHORTEST FROM (SELECT ABS(X - LEAD(X,1) OVER (ORDER BY X)) AS DISTANCE FROM POINT) D"
232,Y,Y,SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 WHERE ABS(P1.X-P2.X) != 0 ORDER BY SHORTEST ASC LIMIT 1
233,Y,Y,SELECT DISTINCT ABS(A.X-B.X) AS SHORTEST FROM POINT A JOIN POINT B WHERE A.X != B.X ORDER BY SHORTEST ASC LIMIT 1
234,Y,Y,SELECT MIN(ABS(P1.X - P.X)) AS SHORTEST FROM POINT P JOIN POINT P1 ON P.X < P1.X
235,Y,Y,SELECT MIN(DISTANCE) AS SHORTEST FROM ( SELECT ABS(P1.X - P2.X) AS DISTANCE FROM POINT AS P1 LEFT JOIN POINT AS P2 ON P1.X != P2.X ) AS INSIDE
236,Y,Y,SELECT MIN(A.X-B.X) SHORTEST FROM POINT A JOIN POINT B ON A.X>B.X
237,Y,Y,"SELECT MIN(DIST) AS SHORTEST FROM (SELECT ABS(X-LEAD(X,1) OVER(ORDER BY X)) AS DIST FROM POINT) TEMP"
238,Y,Y,SELECT ABS(PT1.X - PT2.X) AS SHORTEST FROM POINT PT1 JOIN POINT PT2 ON PT1.X != PT2.X ORDER BY SHORTEST LIMIT 1
239,Y,Y,"SELECT DISTINCT ABS(P1.X-P2.X) SHORTEST FROM POINT P1, POINT P2 WHERE P1.X != P2.X ORDER BY SHORTEST LIMIT 1"
240,Y,Y,"SELECT MIN(ABS(P1.X - P2.X)) AS SHORTEST FROM POINT P1, POINT P2 WHERE P2.X != P1.X"
241,Y,Y,SELECT MIN(ABS(A2.X - A1.X)) AS SHORTEST FROM POINT A1 JOIN POINT A2 ON A1.X != A2.X
242,Y,Y,"WITH T1 AS ( SELECT *, LAG(X) OVER(ORDER BY X) AS NEXT FROM POINT ORDER BY X ), T2 AS ( SELECT X-NEXT AS DIFF FROM T1 ORDER BY DIFF ) SELECT MIN(DIFF) AS SHORTEST FROM T2"
243,Y,Y,"WITH A AS( SELECT A.X , B.X AS Y FROM POINT A JOIN POINT B ) SELECT MIN(ABS(X-Y)) AS SHORTEST FROM A WHERE X <> Y"
244,Y,Y,SELECT MIN(P1.X - P2.X) SHORTEST FROM POINT P1 JOIN POINT P2 ON P1.X <> P2.X WHERE P1.X > P2.X
245,Y,Y,SELECT MIN(ABS(T1.X - T2.X)) AS SHORTEST FROM POINT T1 LEFT JOIN POINT T2 ON T1.X != T2.X
246,Y,Y,SELECT MIN(ABS(P1.X - P2.X)) SHORTEST FROM POINT P1 CROSS JOIN POINT P2 WHERE P1.X != P2.X
247,Y,Y,"SELECT MIN(ABS(X1-X2)) AS SHORTEST FROM (SELECT P1.X AS X1, P2.X AS X2 FROM POINT P1, POINT P2 WHERE P1.X <> P2.X) TEMP"
248,Y,Y,SELECT ABS(A.X-B.X) AS SHORTEST FROM POINT A JOIN POINT B ON A.X!=B.X ORDER BY SHORTEST LIMIT 1
249,Y,Y,SELECT ABS(P1.X-P2.X) AS SHORTEST FROM POINT P1 CROSS JOIN POINT P2 ON P1.X != P2.X ORDER BY 1 LIMIT 1
250,Y,Y,SELECT ABS(A.X-B.X) SHORTEST FROM POINT A JOIN POINT B ON A.X<B.X ORDER BY SHORTEST LIMIT 1
251,Y,Y,SELECT MIN(ABS(T1.X-T2.X)) AS SHORTEST FROM POINT T1 INNER JOIN POINT T2 ON T1.X <>T2.X
