qid,mysql_can_execute?,mysql_correct?,mysql_query
0,Y,N,"(SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE) = -1)"
1,N,N,"SELECT ROUND (((SELECT COUNT(PLAYER_ID) FROM (SELECT PLAYER_ID,EVENT_DATE, DATEDIFF(MAX(EVENT_DATE),MIN(EVENT_DATE)) AS DAYS FROM (SELECT PLAYER_ID,EVENT_DATE, DATE_ADD(EVENT_DATE, INTERVAL -(DATE_RANK-1) DAY) AS DATE_GROUP FROM (SELECT PLAYER_ID,EVENT_DATE, DENSE_RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DATE_RANK FROM ACTIVITY) AS TEMP1) AS TEMP2 GROUP BY PLAYER_ID,DATE_GROUP) AS TEMP3 WHERE (PLAYER_ID,EVENT_DATE) IN (SELECT PLAYER_ID,MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID) AND DAYS>=1)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)),2) AS FRACTION"
2,Y,Y,"SELECT ROUND( COUNT(DISTINCT A2.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND A1.FIRST_LOGIN +1=A2.EVENT_DATE"
3,Y,Y,"SELECT ROUND( COUNT(DISTINCT A1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.EVENT_DATE + 1 = A2.EVENT_DATE AND A1.PLAYER_ID = A2.PLAYER_ID WHERE (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
4,Y,N,"SELECT ROUND(( SELECT COUNT(DISTINCT A1.PLAYER_ID) FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 RIGHT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID WHERE DATEDIFF(A1.MIN_DATE, A2.EVENT_DATE) = -1)/( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
5,Y,N,"SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY WHERE (PLAYER_ID, DATE_ADD(EVENT_DATE, INTERVAL -1 DAY)) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
6,Y,Y,"SELECT ROUND((SUM(CASE WHEN A1.EVENT_DATE = A2.FIRST_LOGIN_DATE + 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT A2.PLAYER_ID)), 2) AS FRACTION FROM ACTIVITY A1 JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY 1 ) A2 ON A1.PLAYER_ID = A2.PLAYER_ID"
7,Y,N,"SELECT ROUND(1-AVG(ACTIVITY.PLAYER_ID IS NULL), 2) AS FRACTION FROM ACTIVITY RIGHT OUTER JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) AS FIRST_DATE ON FIRST_DATE.PLAYER_ID = ACTIVITY.PLAYER_ID AND DATEDIFF(ACTIVITY.EVENT_DATE, FIRST_DATE.MIN_DATE) = 1"
8,Y,N,"SELECT ROUND(COALESCE(SUM(IF_LOGIN_DAY2)/COUNT(*),0),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_LOGIN, CASE WHEN DATEDIFF(LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE), EVENT_DATE) = 1 THEN 1 ELSE 0 END AS IF_LOGIN_DAY2 FROM ACTIVITY) SUB WHERE EVENT_DATE = FIRST_LOGIN"
9,Y,N,"SELECT ROUND(COUNT( T2.PLAYER_ID)/COUNT(T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE, T1.FIRST_LOGIN) = 1"
10,Y,N,"SELECT ROUND(COUNT(A.PLAYER_ID) / (SELECT COUNT(1) FROM (SELECT DISTINCT PLAYER_ID FROM ACTIVITY) AS TBL), 2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS TEST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A, (SELECT PLAYER_ID, TEST_DATE FROM ( SELECT PLAYER_ID, EVENT_DATE AS TEST_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID, EVENT_DATE) AS X WHERE TEST_DATE > MIN_DATE) AS B WHERE A.PLAYER_ID = B.PLAYER_ID AND A.TEST_DATE = B.TEST_DATE"
11,Y,N,"SELECT ROUND(COUNT(A1.PLAYER_ID)/(SELECT COUNT(DISTINCT(A3.PLAYER_ID)) FROM ACTIVITY A3),2) AS FRACTION FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE<>A2.EVENT_DATE AND DATEDIFF(A2.EVENT_DATE,A1.EVENT_DATE) = 1 AND (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT A3.PLAYER_ID, MIN(A3.EVENT_DATE) FROM ACTIVITY A3 GROUP BY 1)"
12,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY AS A1 LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE = A2.FIRST_DATE + 1"
13,Y,N,"SELECT ROUND(COUNT(D1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID) AS D1 INNER JOIN ACTIVITY D2 ON DATEDIFF(D2.EVENT_DATE, D1.FIRST_DAY) = 1 AND D1.PLAYER_ID = D2.PLAYER_ID"
14,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS DAY FROM ACTIVITY GROUP BY PLAYER_ID ) AS T ON A.PLAYER_ID = T.PLAYER_ID AND A.EVENT_DATE = T.DAY+1"
15,Y,Y,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY AS A1 LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE = A2.FIRST_DATE + 1"
16,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) /COUNT(DISTINCT B.PLAYER_ID) ,2) AS FRACTION FROM( SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T, ACTIVITY A, ACTIVITY B WHERE T.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, T.EVENT_DATE) = 1"
17,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT T.PLAYER_ID), 2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) T LEFT JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID AND T.FIRST_LOGIN + 1 = A.EVENT_DATE"
18,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/COUNT(DISTINCT A2.PLAYER_ID),2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) MIN_DATE FROM ACTIVITY GROUP BY 1 ) A1 RIGHT JOIN ACTIVITY A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND A1.MIN_DATE=A2.EVENT_DATE- INTERVAL 1 DAY"
19,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)*1.0/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_DATE) = 1"
20,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_LOGIN)=1"
21,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND A.MIN_DATE = B.EVENT_DATE - 1"
22,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A LEFT JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE + 1 = B.EVENT_DATE"
23,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID , MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND A.FIRST_DATE=B.EVENT_DATE-1"
24,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE + 1 = B.EVENT_DATE"
25,Y,Y,"SELECT ROUND(COUNT(DISTINCT D0.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) D0 CROSS JOIN ACTIVITY D1 WHERE ((D1.EVENT_DATE - D0.EVENT_DATE) = 1) AND (D1.PLAYER_ID = D0.PLAYER_ID)"
26,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, DATE_SUB(EVENT_DATE, INTERVAL 1 DAY)) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID)"
27,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE, 1, NULL) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS PREV_DATE, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS DATE_RANK FROM ACTIVITY ) AS TEMP WHERE DATEDIFF(EVENT_DATE, PREV_DATE) = 1 AND DATE_RANK = 2"
28,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DATE FROM ACTIVITY ) T WHERE EVENT_DATE = DATE_ADD(FIRST_DATE, INTERVAL 1 DAY)"
29,Y,Y,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM( SELECT PLAYER_ID,EVENT_DATE,MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LAG_DATE FROM ACTIVITY) A WHERE EVENT_DATE-A.LAG_DATE=1"
30,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM ACTIVITY WHERE (PLAYER_ID, DATE_SUB(EVENT_DATE, INTERVAL 1 DAY)) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID)"
31,Y,Y,"SELECT ROUND(COUNT(DISTINCT SUB.PLAYER_ID)/COUNT(DISTINCT A0.PLAYER_ID),2) AS FRACTION FROM( SELECT * FROM( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LEAD0, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANK0 FROM ACTIVITY) SUB0 WHERE LEAD0 - EVENT_DATE = 1 AND RANK0 = 1 ) SUB, ACTIVITY A0"
32,Y,Y,"SELECT ROUND(COUNT(DISTINCT T.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID AND T.EVENT_DATE = A.EVENT_DATE - 1"
33,Y,Y,"SELECT ROUND(COUNT(DISTINCT T.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) T INNER JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID AND T.FIRST_LOGIN + 1 = A.EVENT_DATE"
34,Y,Y,"SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_TIME FROM ACTIVITY GROUP BY PLAYER_ID ) T1 JOIN ACTIVITY A ON T1.PLAYER_ID = A.PLAYER_ID AND T1.FIRST_TIME = A.EVENT_DATE - 1"
35,Y,Y,"SELECT ROUND(COUNT(DISTINCT T2.PLAYER_ID)/COUNT(DISTINCT T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE - 1"
36,Y,N,"SELECT ROUND(COUNT(DISTINCT TEMP.PLAYER_ID) / COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP, ACTIVITY AS A, ACTIVITY AS B WHERE TEMP.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, TEMP.EVENT_DATE) = 1"
37,Y,N,"SELECT ROUND(COUNT(DISTINCT(CASE WHEN B.PLAYER_ID IS NOT NULL THEN B.PLAYER_ID END))/COUNT(*), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_EVENT FROM ACTIVITY GROUP BY PLAYER_ID ) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_EVENT = DATE_ADD(B.EVENT_DATE, INTERVAL -1 DAY)"
38,Y,Y,"SELECT ROUND(COUNT(DISTINCT(A2.PLAYER_ID))/COUNT(DISTINCT(A1.PLAYER_ID)),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN = A2.EVENT_DATE - 1"
39,Y,Y,"SELECT ROUND(COUNT(DISTINCT(T.PLAYER_ID)) / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, (EVENT_DATE - LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) AS DIF, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NUM FROM ACTIVITY) AS T WHERE DIF = 1 AND NUM = 2"
40,Y,Y,"SELECT ROUND(COUNT(DISTINCT(TEMP2.PLAYER_ID))/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM (SELECT TEMP.PLAYER_ID, FIRST_DATE, A2.EVENT_DATE FROM (SELECT A1.PLAYER_ID, MIN(A1.EVENT_DATE) AS FIRST_DATE FROM ACTIVITY A1 GROUP BY A1.PLAYER_ID) TEMP JOIN ACTIVITY A2 ON TEMP.PLAYER_ID=A2.PLAYER_ID AND FIRST_DATE + 1 = A2.EVENT_DATE) TEMP2"
41,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS T1 LEFT JOIN ACTIVITY AS T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE - 1"
42,Y,Y,"SELECT ROUND(COUNT(A.PLAYER_ID) / COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A RIGHT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_DATE + 1 = B.EVENT_DATE"
43,Y,N,"SELECT ROUND(COUNT(A.PLAYER_ID)/COUNT(F.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) F LEFT JOIN ACTIVITY A ON DATEDIFF(A.EVENT_DATE, F.FIRST_DATE)=1 AND A.PLAYER_ID = F.PLAYER_ID"
44,Y,N,"SELECT ROUND(COUNT(B.PLAYER_ID) / COUNT(A.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY AS A LEFT JOIN ACTIVITY AS B ON DATEDIFF(A.EVENT_DATE, B.EVENT_DATE) = -1 AND A.PLAYER_ID = B.PLAYER_ID WHERE (A.PLAYER_ID, A.EVENT_DATE) IN ( SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
45,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT PLAYER_ID, DATEDIFF(LEAD(EVENT_DATE ,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE),EVENT_DATE) DIFF, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID)=EVENT_DATE COMPARE_MIN FROM ACTIVITY)T WHERE DIFF = 1 AND COMPARE_MIN = TRUE"
46,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE - 1"
47,Y,N,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T1 LEFT JOIN ACTIVITY AS T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.MIN_DATE = DATE_SUB(T2.EVENT_DATE, INTERVAL 1 DAY)"
48,Y,N,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE,T1.FIRST_LOGIN) =1"
49,Y,N,"SELECT ROUND(IFNULL(SUM(CASE WHEN (PLAYER_ID, DATE_SUB(EVENT_DATE,INTERVAL -1 DAY) )IN (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY) THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),0),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID)"
50,Y,N,"SELECT ROUND(SUM(CASE WHEN (PLAYER_ID, DATE_ADD(FIRST_LOGIN, INTERVAL 1 DAY)) IN (SELECT DISTINCT PLAYER_ID, EVENT_DATE FROM ACTIVITY) THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T1"
51,Y,N,"SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXTDAY, EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM ( SELECT *, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXTDAY, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DAY_RANK FROM ACTIVITY ) BASE WHERE DAY_RANK = 1"
52,Y,Y,"SELECT ROUND(SUM(CASE WHEN A.EVENT_DATE + 1 = B.EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID"
53,Y,Y,"SELECT ROUND(SUM(CASE WHEN EVENT_DATE - 1 = FIRST_TIME THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_TIME FROM ACTIVITY ) SUB"
54,Y,Y,"SELECT ROUND(SUM(CASE WHEN T1.FIRST_LOGIN + 1 = T2.EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT T1.PLAYER_ID),2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID"
55,Y,Y,"SELECT ROUND(SUM(EVENT_DATE = MIN_DATE + 1)/COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) MIN_DATE FROM ACTIVITY) T"
56,Y,Y,"SELECT ROUND(COUNT( A.PLAYER_ID)/ COUNT(F.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS F LEFT JOIN ACTIVITY AS A ON A.PLAYER_ID = F.PLAYER_ID AND F.FIRST_DATE = A.EVENT_DATE - 1"
57,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) TEMP LEFT JOIN ACTIVITY A ON A.PLAYER_ID = TEMP.PLAYER_ID AND A.EVENT_DATE = MIN_DATE+1"
58,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) TEMP LEFT JOIN ACTIVITY A ON MIN_DATE+1 = A.EVENT_DATE AND A.PLAYER_ID = TEMP.PLAYER_ID"
59,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2)AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE)DATES FROM ACTIVITY GROUP BY 1)A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE,A1.DATES)=1"
60,Y,Y,"SELECT ROUND(IFNULL(COUNT(T2.PLAYER_ID), 0)/COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT OUTER JOIN ACTIVITY T2 ON T2.PLAYER_ID = T1.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE - 1"
61,Y,N,"SELECT ROUND(COUNT(PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANK, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN FROM ACTIVITY)A WHERE NEXT_LOGIN IS NOT NULL AND LOGIN_RANK=1 AND ABS(DATEDIFF(EVENT_DATE,NEXT_LOGIN))=1"
62,Y,N,"SELECT ROUND(SUM(IF(DATE_SUB(EVENT_DATE, INTERVAL 1 DAY) = PREV_DAY, 1,0))/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREV_DAY, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOG_IN_RANK FROM ACTIVITY ) AS T WHERE LOG_IN_RANK <= 2"
63,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY AS B ON A.FIRST_DAY = B.EVENT_DATE -1 AND A.PLAYER_ID = B.PLAYER_ID"
64,Y,N,"SELECT ROUND(SUM(DATEDIFF(EVENT_DATE, FIRST_LOGIN)=1)/COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM (SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY) T"
65,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND MIN_DATE = T2.EVENT_DATE - 1"
66,Y,Y,"SELECT ROUND(SUM(CASE WHEN TEMP.MIN_DATE + 1 = A1.EVENT_DATE THEN 1 ELSE 0 END) / COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY 1) AS TEMP, ACTIVITY A1 WHERE A1.PLAYER_ID = TEMP.PLAYER_ID"
67,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID )/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MINEVENTDATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.MINEVENTDATE = B.EVENT_DATE - 1"
68,Y,Y,"SELECT ROUND(COUNT(DISTINCT FIRST_LOGIN.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DT FROM ACTIVITY GROUP BY PLAYER_ID ) AS FIRST_LOGIN LEFT JOIN ( SELECT PLAYER_ID, EVENT_DATE AS NXT_LOGIN_DT FROM ACTIVITY) AS NXT_LOGIN ON FIRST_LOGIN.PLAYER_ID = NXT_LOGIN.PLAYER_ID AND FIRST_LOGIN.FIRST_LOGIN_DT+1 = NXT_LOGIN.NXT_LOGIN_DT WHERE NXT_LOGIN_DT IS NOT NULL"
69,Y,Y,"SELECT ROUND(SUM(CASE WHEN A1.EVENT_DATE = A2.EVENT_DATE_MIN+1 THEN 1 ELSE 0 END)/ COUNT(DISTINCT(A1.PLAYER_ID)),2) AS FRACTION FROM ACTIVITY AS A1 INNER JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE_MIN FROM ACTIVITY GROUP BY PLAYER_ID) AS A2 ON A1.PLAYER_ID=A2.PLAYER_ID"
70,Y,N,"SELECT ROUND(COUNT(A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A1, ACTIVITY A2 WHERE DATEDIFF(A2.EVENT_DATE, A1.EVENT_DATE) = 1 AND A1.PLAYER_ID = A2.PLAYER_ID AND (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT A1.PLAYER_ID, MIN(A1.EVENT_DATE) FROM ACTIVITY A1 GROUP BY A1.PLAYER_ID)"
71,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE + 1 = A2.EVENT_DATE WHERE (A1.PLAYER_ID, A1.EVENT_DATE) IN ( SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID )"
72,Y,Y,"SELECT ROUND(COUNT(DISTINCT CASE WHEN FIRST_LOGIN+1 = NEXTLOGIN THEN PLAYER_ID END)/COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM ( SELECT PLAYER_ID, FIRST_VALUE(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) FIRST_LOGIN, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXTLOGIN FROM ACTIVITY ) A"
73,Y,Y,"SELECT ROUND(COUNT(DISTINCT CASE WHEN FIRST_LOGIN+1 = NEXTLOGIN THEN PLAYER_ID END)/COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) FIRST_LOGIN, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXTLOGIN FROM ACTIVITY ) A"
74,Y,Y,"SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT A.EVENT_DATE, A.PLAYER_ID FROM ACTIVITY A JOIN ( SELECT MIN(EVENT_DATE) AS EVENTDATE, PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID) ACT ON A.PLAYER_ID = ACT.PLAYER_ID AND A.EVENT_DATE = ACT.EVENTDATE + 1 )RES"
75,Y,N,"SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM( SELECT PLAYER_ID, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) GRP, DATEDIFF(LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE), EVENT_DATE) DIFF FROM ACTIVITY ) AS L WHERE GRP = 1 AND DIFF=1"
76,Y,N,"SELECT ROUND(SUM(CASE WHEN A.EVENT_DATE = DATE_ADD(F_LG, INTERVAL 1 DAY) THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS F_LG FROM ACTIVITY GROUP BY 1) A1 ON A.PLAYER_ID = A1.PLAYER_ID"
77,Y,Y,"WITH A AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY), B AS ( SELECT PLAYER_ID, EVENT_DATE, CASE WHEN NEXT_LOGIN - EVENT_DATE = 1 THEN 1 ELSE 0 END AS CONSECUTIVE FROM A WHERE RNK = 1) SELECT ROUND(SUM(CONSECUTIVE) / COUNT(*),2) AS FRACTION FROM B"
78,Y,Y,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID)/ COUNT(CTE.PLAYER_ID),2) AS FRACTION FROM CTE LEFT JOIN ACTIVITY A ON CTE.PLAYER_ID = A.PLAYER_ID AND A.EVENT_DATE - CTE.FIRST_LOGIN = 1"
79,Y,N,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(IFNULL(COUNT(DISTINCT B.PLAYER_ID), 0) / IFNULL(COUNT(DISTINCT A.PLAYER_ID), 0), 2) AS FRACTION FROM CTE A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF (EVENT_DATE, FIRST_LOGIN) = 1"
80,Y,Y,"WITH CTE AS( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_LOGIN, EVENT_DATE - MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS DIFF FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE WHERE DIFF = 1) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY"
81,Y,N,"WITH CTE_0 AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) ,CTE_1 AS ( SELECT COUNT(DISTINCT A.PLAYER_ID) P_COUNT FROM ACTIVITY A, CTE_0 C0 WHERE A.PLAYER_ID = C0.PLAYER_ID AND EXISTS ( SELECT X FROM ACTIVITY AA WHERE AA.PLAYER_ID = A.PLAYER_ID AND AA.EVENT_DATE = DATE_ADD(C0.FIRST_LOGIN, INTERVAL 1 DAY) ) ) ,CTE_2 AS ( SELECT COUNT(DISTINCT PLAYER_ID) TOT_COUNT FROM ACTIVITY ) SELECT ROUND(C1.P_COUNT / C2.TOT_COUNT, 2) FRACTION FROM CTE_1 C1, CTE_2 C2"
82,Y,Y,"WITH FIRST_LOGIN_TABLE AS( SELECT *, IF(EVENT_DATE - MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) = 1, 1, 0) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(SUM(FIRST_LOGIN) / (SELECT COUNT(DISTINCT(PLAYER_ID )) FROM ACTIVITY), 2) AS FRACTION FROM FIRST_LOGIN_TABLE"
83,Y,N,"WITH FIRSTLOGIN AS (SELECT PLAYER_ID ,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID), NEXTLOGIN AS (SELECT PLAYER_ID ,EVENT_DATE ,LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN FROM ACTIVITY), RETENTION AS (SELECT NL.PLAYER_ID ,IF(DATEDIFF(NL.NEXT_LOGIN,NL.EVENT_DATE) = 1,1,0) AS DAY1RETENTION FROM NEXTLOGIN NL INNER JOIN FIRSTLOGIN FL ON FL.PLAYER_ID = NL.PLAYER_ID AND FL.FIRST_LOGIN = NL.EVENT_DATE) SELECT ROUND(SUM(DAY1RETENTION)/COUNT(PLAYER_ID),2) AS FRACTION FROM RETENTION"
84,Y,N,"WITH T AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY JOIN T USING(PLAYER_ID) WHERE DATEDIFF(EVENT_DATE, FIRST_DATE)=1"
85,Y,Y,"WITH T1 AS ( SELECT A1.PLAYER_ID, MIN(A1.EVENT_DATE) AS D1, MIN(A2.EVENT_DATE) AS D2 FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON A2.EVENT_DATE = A1.EVENT_DATE +1 AND A1.PLAYER_ID = A2.PLAYER_ID GROUP BY A1.PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM T1 WHERE DATEDIFF(D2,D1) = 1"
86,Y,N,"WITH T1 AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM T1 INNER JOIN ACTIVITY A ON T1.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(EVENT_DATE,FIRST_LOGIN) = 1"
87,Y,N,"WITH T1 AS ( WITH LEAD_DAY_TABLE AS( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS MIN_DAY, LEAD (EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS LEAD_DAY FROM ACTIVITY ) SELECT * FROM LEAD_DAY_TABLE WHERE LEAD_DAY = DATE_ADD(EVENT_DATE , INTERVAL 1 DAY) AND EVENT_DATE = MIN_DAY ) SELECT ROUND(COUNT(*) / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM T1"
88,Y,Y,"WITH A AS( SELECT *, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_NUM, (EVENT_DATE - LAG(EVENT_DATE) OVER (PARTITION BY PLAYER_ID)) AS DIFF_OF_ONE FROM ACTIVITY ) SELECT ROUND(COUNT(*)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM A WHERE ROW_NUM = 2 AND DIFF_OF_ONE = 1"
89,Y,N,"WITH CTE AS (SELECT * ,LEAD(EVENT_DATE,1,EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT_DATE FROM ACTIVITY) SELECT ROUND(IFNULL(SUM(CASE WHEN DATEDIFF(NEXT_EVENT_DATE,EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),0),2) AS FRACTION FROM CTE WHERE (PLAYER_ID,EVENT_DATE) IN (SELECT PLAYER_ID,MIN(EVENT_DATE) FROM ACTIVITY GROUP BY 1)"
90,Y,N,"WITH CTE AS (SELECT PLAYER_ID, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK, EVENT_DATE FROM ACTIVITY) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM CTE A JOIN CTE B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1 WHERE A.RNK = 1"
91,Y,Y,"WITH CTE AS( SELECT PLAYER_ID, MIN(EVENT_DATE)OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN, LEAD(EVENT_DATE,1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LAGS FROM ACTIVITY) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE WHERE ABS(FIRST_LOGIN - LAGS)=1) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY"
92,Y,Y,"WITH CTE1 AS (SELECT PLAYER_ID AS D1, MIN(EVENT_DATE) AS MEVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) , CTE2 AS (SELECT A1.PLAYER_ID AS S1 FROM CTE1 INNER JOIN ACTIVITY AS A1 ON D1=A1.PLAYER_ID AND CTE1.MEVENT_DATE+1=A1.EVENT_DATE) SELECT ROUND(COUNT(DISTINCT(S1))/COUNT(DISTINCT(D1)),2) AS FRACTION FROM CTE2,CTE1"
93,Y,N,"WITH CTE1 AS( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS DRANK, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ), 2) AS FRACTION FROM CTE1 WHERE DRANK = 2 AND DATEDIFF(EVENT_DATE, FIRST_LOGIN) = 1"
94,Y,N,"WITH CTE_FIRST_DATE AS ( SELECT PLAYER_ID, EVENT_DATE FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS EVENT_DATE_RANK FROM ACTIVITY ) R WHERE EVENT_DATE_RANK = 1 ) SELECT ROUND(RELOGIN_COUNT/TOTAL_COUNT, 2) AS FRACTION FROM ( SELECT COUNT(DISTINCT F.PLAYER_ID) AS RELOGIN_COUNT FROM CTE_FIRST_DATE F INNER JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, F.EVENT_DATE) = 1 ) R INNER JOIN ( SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_COUNT FROM ACTIVITY ) T ON 1 = 1"
95,Y,Y,"WITH FIRST_LOGIN AS ( SELECT A.PLAYER_ID, MIN(A.EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY A GROUP BY 1 ), LEAD_DATE AS( SELECT F.PLAYER_ID, F.FIRST_LOGIN, A.EVENT_DATE - F.FIRST_LOGIN AS EVENT_DATEDIFF FROM FIRST_LOGIN F LEFT JOIN ACTIVITY A ON A.PLAYER_ID = F.PLAYER_ID AND A.EVENT_DATE != F.FIRST_LOGIN ) SELECT ROUND(COUNT(DISTINCT CASE WHEN EVENT_DATEDIFF = 1 THEN PLAYER_ID END) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM LEAD_DATE"
96,Y,N,"WITH FIRST_LOGIN AS ( SELECT A.PLAYER_ID, A.EVENT_DATE FROM ACTIVITY A JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1) B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = DATE_ADD(B.FIRST_LOGIN, INTERVAL 1 DAY)) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM FIRST_LOGIN"
97,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, EVENT_DATE FIRST_DATE FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) RN FROM ACTIVITY) A WHERE RN = 1 ) SELECT ROUND(SUM(CASE WHEN S.EVENT_DATE IS NOT NULL THEN 1 ELSE 0 END)/COUNT(*), 2) FRACTION FROM FIRST_LOGIN F LEFT JOIN ACTIVITY S ON F.PLAYER_ID = S.PLAYER_ID AND DATEDIFF(S.EVENT_DATE, F.FIRST_DATE) = 1"
98,Y,N,"WITH FIRST_LOGIN AS (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOG FROM ACTIVITY GROUP BY 1), T1 AS (SELECT PLAYER_ID, CASE WHEN DATEDIFF(EVENT_DATE, FIRST_LOG) = 1 THEN 1 ELSE 0 END AS DATE_CHECK FROM ACTIVITY JOIN FIRST_LOGIN USING(PLAYER_ID)) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM T1 WHERE DATE_CHECK = 1"
99,Y,Y,"WITH FIRST_LOGIN_DATE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A JOIN FIRST_LOGIN_DATE FLD ON A.PLAYER_ID = FLD.PLAYER_ID AND A.EVENT_DATE = FLD.EVENT_DATE + 1"
100,Y,N,"WITH NACTIVITY AS( SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DRANK FROM ACTIVITY ), SECOND_DAY AS (SELECT A1.PLAYER_ID, A1.EVENT_DATE FROM NACTIVITY A1 JOIN NACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE = DATE_ADD(A1.EVENT_DATE, INTERVAL 1 DAY) AND A1.DRANK = 1) SELECT ROUND((SELECT COUNT(*) FROM SECOND_DAY)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
101,N,N,"WITH SUB AS ( SELECT * FROM ( SELECT PLAYER_ID, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK, EVENT_DATE FROM ACTIVITY )TMP WHERE RNK IN (1,2) ), CNT AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS CNT FROM ACTIVITY ) SELECT ROUND(COUNT(S1.PLAYER_ID)/CNT, 2) AS FRACTION FROM SUB S1 JOIN SUB S2 USING(PLAYER_ID) JOIN CNT WHERE DATEDIFF(S2.EVENT_DATE,S1.EVENT_DATE) = 1"
102,Y,N,"WITH T AS ( SELECT A.*, B.FIRST_DATE, CASE WHEN DATEDIFF(A.EVENT_DATE, B.FIRST_DATE) = 1 THEN 1 ELSE 0 END AS FLAG FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID = B.PLAYER_ID ) SELECT ROUND(SUM(FLAG) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM T"
103,Y,N,"WITH T AS ( SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM T), 2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, EVENT_DATE FROM T)"
104,Y,Y,"WITH T AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN NEXT_LOGIN - EVENT_DATE = 1 THEN 1 ELSE 0 END)/COUNT(*),2) AS FRACTION FROM T WHERE RNK = 1"
105,Y,N,"WITH T1 AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY ), T2 AS ( SELECT PLAYER_ID, EVENT_DATE FROM T1 WHERE RNK = 1 ), T3 AS ( SELECT T2.PLAYER_ID FROM T2 JOIN ACTIVITY A ON T2.PLAYER_ID = A.PLAYER_ID AND DATE_ADD(T2.EVENT_DATE, INTERVAL 1 DAY) = A.EVENT_DATE ) SELECT ROUND((SELECT COUNT(*) FROM T3)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
106,N,N,"WITH TABLE1 AS (SELECT *, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RK, DATEDIFF(LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC), EVENT_DATE) AS DIFF FROM ACTIVITY), TABLE2 AS (SELECT COUNT(DISTINCT PLAYER_ID) AS NUM_PLAYERS FROM ACTIVITY) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/TABLE2.NUM_PLAYERS, 2) AS FRACTION FROM TABLE1, TABLE2 WHERE RK = 1 AND DIFF = 1"
107,Y,N,"WITH TABLE1 AS( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LEAD_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM TABLE1 WHERE DATEDIFF(LEAD_DATE, EVENT_DATE) = 1 AND RNK=1) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
108,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK FROM ACTIVITY ) SELECT ROUND( COUNT(DISTINCT T2.PLAYER_ID) / COUNT(DISTINCT T1.PLAYER_ID), 2) AS FRACTION FROM TEMP T1 LEFT JOIN TEMP T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.RK = 1 AND T2.RK = 2 AND DATEDIFF(T2.EVENT_DATE, T1.EVENT_DATE) = 1"
109,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK FROM ACTIVITY ) SELECT ROUND( COUNT(IF(T2.EVENT_DATE IS NOT NULL, T2.PLAYER_ID, NULL)) / COUNT(DISTINCT T1.PLAYER_ID), 2) AS FRACTION FROM TEMP T1 LEFT JOIN TEMP T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.RK = 1 AND T2.RK = 2 AND DATEDIFF(T2.EVENT_DATE, T1.EVENT_DATE) = 1"
110,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT IF(T2.EVENT_DATE IS NOT NULL, T2.PLAYER_ID, NULL)) / COUNT(DISTINCT T1.PLAYER_ID), 2) AS FRACTION FROM TEMP T1 LEFT JOIN TEMP T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.RK = 1 AND T2.RK = 2 AND DATEDIFF(T2.EVENT_DATE, T1.EVENT_DATE) = 1"
111,Y,N,"WITH TEMP_FIRST AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1 ORDER BY 1,EVENT_DATE ) SELECT ROUND(COUNT(T.PLAYER_ID)/(SELECT COUNT(*) FROM TEMP_FIRST),2) AS FRACTION FROM( SELECT T.PLAYER_ID AS PLAYER_ID FROM TEMP_FIRST T JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, T.EVENT_DATE) = 1) AS T"
112,Y,N,"WITH TOT_PLAYER AS ( SELECT PLAYER_ID,EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS NEXT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) ROW_NUM FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE)=1 THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID),2) FRACTION FROM TOT_PLAYER WHERE ROW_NUM = 1"
113,Y,Y,"WITH TOTAL_PLAYERS AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYERS FROM ACTIVITY ), PLAYERS_SIGNUP_DATE AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS SIGNUP_DATE FROM ACTIVITY GROUP BY 1 ), PLAYERS_LOGIN_DAY_AFTER_SIGNUP AS( SELECT COUNT(A.PLAYER_ID) AS PLAYERS_LOGIN_DAY_AFTER_SIGNUP FROM PLAYERS_SIGNUP_DATE AS A INNER JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND A.SIGNUP_DATE = B.EVENT_DATE - 1 ) SELECT ROUND(PLAYERS_LOGIN_DAY_AFTER_SIGNUP / TOTAL_PLAYERS,2) AS FRACTION FROM PLAYERS_LOGIN_DAY_AFTER_SIGNUP LEFT JOIN TOTAL_PLAYERS ON 1 = 1"
114,Y,Y,"WITH CTE AS (SELECT B.PLAYER_ID, B.EVENT_DATE FROM ACTIVITY A INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON B.PLAYER_ID = A.PLAYER_ID AND B.EVENT_DATE = A.EVENT_DATE - 1) SELECT ROUND(COUNT(*)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM CTE"
115,Y,N,"WITH A AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ORDERED_DAYS, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY FROM ACTIVITY), B AS (SELECT PLAYER_ID, EVENT_DATE, NEXT_DAY FROM A WHERE ORDERED_DAYS = 1 AND DATEDIFF(EVENT_DATE, NEXT_DAY) = -1) SELECT ROUND(COUNT(*)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM B"
116,Y,Y,"WITH CTE AS ( SELECT DISTINCT A.PLAYER_ID, A.EVENT_DATE AS FIRST_LOGIN, B.EVENT_DATE AS NEXT_LOGIN FROM ACTIVITY A JOIN ACTIVITY B WHERE A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE = A.EVENT_DATE + 1 ), CTE2 AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ), CTE3 AS ( SELECT CTE.PLAYER_ID FROM CTE JOIN CTE2 WHERE CTE.PLAYER_ID = CTE2.PLAYER_ID AND CTE.FIRST_LOGIN = CTE2.FIRST_LOGIN ) SELECT ROUND(COUNT(DISTINCT CTE3.PLAYER_ID) / COUNT(DISTINCT ACTIVITY.PLAYER_ID), 2) AS FRACTION FROM CTE3 JOIN ACTIVITY"
117,Y,N,"WITH FIRST_DATA AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(PLAYER_ID) FROM FIRST_DATA),2) AS FRACTION FROM ACTIVITY A LEFT JOIN FIRST_DATA F ON A.PLAYER_ID = F.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, F.FIRST_LOGIN) = 1"
118,Y,N,"WITH FIRST_LOG AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/ COUNT(DISTINCT FL.PLAYER_ID),2) AS FRACTION FROM FIRST_LOG AS FL LEFT JOIN ACTIVITY AS A ON FL.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, FL.EVENT_DATE) = 1"
119,Y,Y,"WITH ROW_NBR AS ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RN FROM ACTIVITY ) , FIRST_LOGIN AS ( SELECT PLAYER_ID, EVENT_DATE AS FIRST_DT FROM ROW_NBR WHERE RN = 1 ) , SECOND_LOGIN AS ( SELECT PLAYER_ID, EVENT_DATE AS SECOND_DT FROM ROW_NBR WHERE RN = 2 ) SELECT ROUND(AVG(IF_CONT),2) AS FRACTION FROM (SELECT F.PLAYER_ID, F.FIRST_DT, (CASE WHEN (S.SECOND_DT - F.FIRST_DT) = 1 THEN 1 ELSE 0 END) AS IF_CONT FROM FIRST_LOGIN F LEFT JOIN SECOND_LOGIN S ON F.PLAYER_ID = S.PLAYER_ID ) TMP"
120,Y,N,"SELECT ROUND( (SELECT COUNT(1) FROM ACTIVITY A, (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1) T WHERE A.PLAYER_ID=T.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, T.FIRST_DATE) = 1 ) / ( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) , 2) AS FRACTION"
121,Y,N,"SELECT ROUND( COUNT(DISTINCT(A1.PLAYER_ID)) / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A1 INNER JOIN ( SELECT MIN(EVENT_DATE) AS FIRST_DATE, PLAYER_ID AS PID FROM ACTIVITY A1 GROUP BY PID ) FDT ON DATEDIFF(A1.EVENT_DATE, FDT.FIRST_DATE) = 1 AND FDT.PID=A1.PLAYER_ID"
122,Y,N,"SELECT ROUND( COUNT(F.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY AS A JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) F ON DATEDIFF(A.EVENT_DATE, F.FIRST_LOGIN)=1 AND A.PLAYER_ID=F.PLAYER_ID"
123,Y,Y,"SELECT ROUND((COUNT(B.PLAYER_ID) /COUNT(A.PLAYER_ID)), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGGED FROM ACTIVITY GROUP BY PLAYER_ID ) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE - A.FIRST_LOGGED = 1"
124,Y,Y,"SELECT ROUND(SUM(CASE WHEN TEMP.MIN_DATE+1 = A.EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT TEMP.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP JOIN ACTIVITY A ON TEMP.PLAYER_ID=A.PLAYER_ID"
125,Y,Y,"SELECT DISTINCT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT B.PLAYER_ID),2) AS FRACTION FROM ( SELECT DISTINCT A.PLAYER_ID, MIN(A.EVENT_DATE) AS EVENT_DATE FROM ACTIVITY A GROUP BY A.PLAYER_ID ) B LEFT JOIN ( SELECT DISTINCT A.PLAYER_ID, A.EVENT_DATE FROM ACTIVITY A ) A ON B.PLAYER_ID = A.PLAYER_ID AND A.EVENT_DATE = B.EVENT_DATE + 1"
126,Y,N,"SELECT IFNULL(ROUND( (SELECT COUNT(DISTINCT A.PLAYER_ID) FROM ACTIVITY A JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE)=1 JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1) C ON A.PLAYER_ID=C.PLAYER_ID AND A.EVENT_DATE=C.FIRST_DATE ) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2),0) AS FRACTION"
127,Y,N,"SELECT ROUND ((SELECT COUNT(DISTINCT PLAYER_ID) AS A FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS TOM, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY) A WHERE DATEDIFF(TOM, EVENT_DATE) = 1 AND RNK = 1) / (SELECT COUNT(DISTINCT PLAYER_ID) AS B FROM ACTIVITY) ,2) AS FRACTION FROM ACTIVITY LIMIT 1"
128,Y,N,"SELECT ROUND( CAST(COUNT(DISTINCT CASE WHEN FLAG = 1 THEN PLAYER_ID ELSE NULL END) AS FLOAT)/ CAST(COUNT( DISTINCT PLAYER_ID) AS FLOAT) ,2)AS FRACTION FROM ( SELECT PLAYER_ID, CASE WHEN (LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) = ADDDATE(EVENT_DATE, INTERVAL 1 DAY) AND (MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) = EVENT_DATE) THEN 1 ELSE 0 END AS FLAG FROM ACTIVITY )A"
129,Y,N,"SELECT ROUND( CAST(COUNT(DISTINCT CASE WHEN FLAG = 1 THEN PLAYER_ID ELSE NULL END) AS FLOAT)/ CAST(COUNT( DISTINCT PLAYER_ID) AS FLOAT) ,2)AS FRACTION FROM ( SELECT PLAYER_ID, CASE WHEN (MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) = ADDDATE(EVENT_DATE, -1)) THEN 1 ELSE 0 END AS FLAG FROM ACTIVITY )A"
130,Y,N,"SELECT ROUND( SUM(CASE WHEN B.PLAYER_ID IS NULL THEN 0 ELSE 1 END)/COUNT(*),2) FRACTION FROM (SELECT A.PLAYER_ID,MIN(EVENT_DATE) FIRST_DATE FROM ACTIVITY A GROUP BY 1)A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE = DATE_ADD(A.FIRST_DATE,INTERVAL 1 DAY)"
131,Y,Y,"SELECT ROUND(( (SELECT COUNT(*) FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY WHERE (PLAYER_ID,EVENT_DATE) IN (SELECT PLAYER_ID, DATE(MIN(EVENT_DATE) + 1) FROM ACTIVITY GROUP BY PLAYER_ID) GROUP BY PLAYER_ID)G) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)),2) AS FRACTION"
132,Y,Y,"SELECT ROUND(( SELECT COUNT(A.PLAYER_ID)PLAYER_ID FROM ( SELECT A.* FROM ( SELECT *, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LD FROM ACTIVITY )A WHERE A.LD-A.EVENT_DATE=1 ) A INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID=B.PLAYER_ID AND A.EVENT_DATE=B.EVENT_DATE )/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
133,Y,N,"SELECT ROUND(( SELECT COUNT(DISTINCT T1.PLAYER_ID) FROM( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTDATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T1, ACTIVITY AS T2 WHERE T1.PLAYER_ID=T2.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE, T1.FIRSTDATE)=1 )/( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
134,Y,Y,"SELECT ROUND((COUNT(F.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)),2) AS FRACTION FROM ACTIVITY F JOIN ACTIVITY S ON F.PLAYER_ID = S.PLAYER_ID AND (S.EVENT_DATE-F.EVENT_DATE)=1 WHERE (F.PLAYER_ID, F.EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
135,Y,Y,"SELECT ROUND((SELECT COUNT(DISTINCT A.PLAYER_ID) AS N_CON FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTDATE FROM ACTIVITY GROUP BY PLAYER_ID) TEMP INNER JOIN ACTIVITY A ON TEMP.FIRSTDATE + 1 = A.EVENT_DATE AND A.PLAYER_ID = TEMP.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
136,Y,Y,"SELECT ROUND((SELECT COUNT(DISTINCT A1.PLAYER_ID) FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A1 LEFT JOIN ACTIVITY A2 ON A1.EVENT_DATE = A2.EVENT_DATE-1 AND A1.PLAYER_ID = A2.PLAYER_ID WHERE A2.PLAYER_ID IS NOT NULL)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM DUAL"
137,Y,N,"SELECT ROUND((SUM(IF(DATEDIFF(EVENT_DATE, FIRST_LOGIN) = 1, 1, 0))/COUNT(DISTINCT PLAYER_ID)), 2) FRACTION FROM (SELECT *, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) FIRST_LOGIN FROM ACTIVITY) T"
138,N,N,"SELECT ROUND(ACT_USER.U_LOGGEDTWO / COUNT(DISTINCT(A1.PLAYER_ID)), 2) FRACTION FROM ( SELECT COUNT(DISTINCT(A.PLAYER_ID)) U_LOGGEDTWO FROM ACTIVITY A, ACTIVITY B WHERE A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.EVENT_DATE) = 1 AND B.EVENT_DATE = (SELECT MIN(EVENT_DATE) L_DATE FROM ACTIVITY C WHERE C.PLAYER_ID = B.PLAYER_ID GROUP BY C.PLAYER_ID) ) ACT_USER, ACTIVITY A1"
139,Y,N,"SELECT ROUND(CN/C,2) AS FRACTION FROM (SELECT COUNT(T1.PLAYER_ID) AS CN FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID)T1 JOIN ACTIVITY ON ACTIVITY.PLAYER_ID = T1.PLAYER_ID AND DATE_ADD(T1.EVENT_DATE,INTERVAL 1 DAY) = ACTIVITY.EVENT_DATE)T2,(SELECT COUNT(DISTINCT PLAYER_ID) AS C FROM ACTIVITY)T3"
140,Y,N,"SELECT ROUND(CNT /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM(SELECT COUNT(DISTINCT PLAYER_ID) AS CNT FROM(SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY) T WHERE DATEDIFF(NEXT_DAY, EVENT_DATE) = 1 AND RNK = 1) AS TEMP"
141,Y,N,"SELECT ROUND(COUNT( DISTINCT CASE WHEN R=1 AND D=1 THEN PLAYER_ID ELSE NULL END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ( SELECT A.*, DATEDIFF(LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC),EVENT_DATE) AS D, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS R FROM ACTIVITY A ) ABC"
142,Y,Y,"SELECT ROUND(COUNT(*)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM( SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)AS LDATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RN FROM ACTIVITY)A WHERE A.EVENT_DATE + 1 = A.LDATE AND RN =1"
143,Y,N,"SELECT ROUND(COUNT(1)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM ( SELECT *, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) ROWNUM, DATEDIFF(LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE), EVENT_DATE) DIFF FROM ACTIVITY ) T WHERE ROWNUM = 1 AND DIFF = 1"
144,Y,N,"SELECT ROUND(COUNT(1)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RN, DATEDIFF(LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE), EVENT_DATE) AS DATE_DIFF FROM ACTIVITY )R WHERE RN = 1 AND DATE_DIFF = 1"
145,Y,Y,"SELECT ROUND(COUNT(A.PLAYER_ID) / COUNT(TEMP.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) LOGIN FROM ACTIVITY GROUP BY 1) TEMP LEFT JOIN ACTIVITY A ON TEMP.PLAYER_ID = A.PLAYER_ID AND A.EVENT_DATE - TEMP.LOGIN = 1"
146,Y,N,"SELECT ROUND(COUNT(A.PLAYER_ID)/ COUNT(*) , 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1 ) F LEFT JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND DATE_ADD(A.EVENT_DATE, INTERVAL -1 DAY) = F.FIRST_DATE AND A.PLAYER_ID IS NOT NULL"
147,Y,N,"SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) FIRSTDAY FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID WHERE DATEDIFF(B.EVENT_DATE,A.FIRSTDAY)=1"
148,Y,N,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_LOGIN)=1"
149,Y,N,"SELECT ROUND(COUNT(B.EVENT_DATE)/COUNT(*), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN (SELECT DISTINCT PLAYER_ID, EVENT_DATE FROM ACTIVITY) B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1"
150,Y,N,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1) A LEFT JOIN ACTIVITY B ON DATEDIFF(B.EVENT_DATE,FIRST_LOGIN)=1 AND A.PLAYER_ID=B.PLAYER_ID"
151,Y,N,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY GROUP BY 1) AS A LEFT JOIN ACTIVITY AS B ON DATEDIFF(B.EVENT_DATE,A.MIN_EVENT_DATE)=1 AND A.PLAYER_ID=B.PLAYER_ID"
152,Y,Y,"SELECT ROUND(COUNT(CASE WHEN B.EVENT_DATE IS NOT NULL THEN 1 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND B.EVENT_DATE=A.EVENT_DATE+1"
153,Y,N,"SELECT ROUND(COUNT(DISTINCT (CASE WHEN B.EVENT_DATE IS NOT NULL THEN A.PLAYER_ID ELSE NULL END))/ COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.FIRST_DATE) = 1"
154,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP, ACTIVITY AS A, ACTIVITY AS B WHERE TEMP.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, TEMP.EVENT_DATE) = 1"
155,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LD FROM ACTIVITY) A, ACTIVITY B WHERE RK = 1 AND DATEDIFF(LD, A.EVENT_DATE) = 1"
156,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTLOGIN FROM ACTIVITY GROUP BY PLAYER_ID) B LEFT JOIN ACTIVITY A ON B.FIRSTLOGIN + 1 = A.EVENT_DATE AND A.PLAYER_ID = B.PLAYER_ID"
157,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / COUNT(DISTINCT T.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS NEXT_DAY FROM ACTIVITY GROUP BY PLAYER_ID) T LEFT JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID AND T.NEXT_DAY = A.EVENT_DATE"
158,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = B.EVENT_DATE - 1"
159,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) AS DENOM FROM ACTIVITY),2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_L_I FROM ACTIVITY GROUP BY PLAYER_ID)AS A INNER JOIN ( SELECT DISTINCT PLAYER_ID,EVENT_DATE FROM ACTIVITY )AS B ON A.FIRST_L_I = B.EVENT_DATE - INTERVAL 1 DAY AND A.PLAYER_ID = B.PLAYER_ID"
160,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK FROM ACTIVITY) A WHERE DATEDIFF(NEXT_DATE, EVENT_DATE) = 1 AND RNK = 1"
161,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A INNER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = DATE_SUB(B.EVENT_DATE, INTERVAL 1 DAY)"
162,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS MIN_DATES, ACTIVITY AS A, ACTIVITY AS B WHERE A.PLAYER_ID = MIN_DATES.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, MIN_DATES.EVENT_DATE) =1"
163,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT B.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A, ACTIVITY B, (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP WHERE DATEDIFF(A.EVENT_DATE,TEMP.FIRST_LOGIN) = 1 AND A.PLAYER_ID = TEMP.PLAYER_ID"
164,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT LOG.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A RIGHT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) LOG ON A.PLAYER_ID=LOG.PLAYER_ID AND A.EVENT_DATE = LOG.FIRST_LOGIN+1"
165,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT T.PLAYER_ID),2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) T LEFT JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, T.FIRST_LOG) = 1"
166,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.EVENT_DATE) = 1 AND (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY 1)"
167,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, GAMES_PLAYED, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) R FROM ACTIVITY A) A1 INNER JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID WHERE (DATE_ADD(A1.EVENT_DATE, INTERVAL 1 DAY) = A2.EVENT_DATE) AND (A1.R = 1)"
168,Y,N,"SELECT ROUND(COUNT(DISTINCT A3.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) RNK FROM ACTIVITY) A1 LEFT JOIN (SELECT * FROM (SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) RNK FROM ACTIVITY) A2 WHERE RNK = 2) A3 ON A1.PLAYER_ID = A3.PLAYER_ID AND A1.EVENT_DATE = DATE_SUB(A3.EVENT_DATE, INTERVAL 1 DAY)"
169,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/(COUNT(DISTINCT A.PLAYER_ID)), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = DATE_SUB(B.EVENT_DATE, INTERVAL 1 DAY)"
170,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(A.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) MINDDT FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.MINDDT = B.EVENT_DATE-1"
171,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) AS A LEFT JOIN ACTIVITY AS B ON DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) =1 AND A.PLAYER_ID = B.PLAYER_ID"
172,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID), 2)AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY 1) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = B.EVENT_DATE - INTERVAL 1 DAY"
173,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY A GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE + 1 = B.EVENT_DATE"
174,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1)A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.FIRST_LOGIN) = 1"
175,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND B.EVENT_DATE-A.FIRST_LOGIN=1"
176,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND A.MIN_EVENT_DATE=B.EVENT_DATE - 1"
177,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID=B.PLAYER_ID AND A.EVENT_DATE= B.FIRST_DATE+1"
178,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A, (SELECT *, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DATE_NUM, LAG(DATE_ADD(EVENT_DATE, INTERVAL 1 DAY), 1, 0) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXT_DATE FROM ACTIVITY)B WHERE B.EVENT_DATE = B.NEXT_DATE AND B.DATE_NUM=2"
179,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND B.EVENT_DATE-A.EVENT_DATE=1 AND (A.PLAYER_ID, A.EVENT_DATE) IN (SELECT PLAYER_ID,MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
180,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT ACT.PLAYER_ID),2) AS FRACTION FROM (SELECT * FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS PREVIOUS, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NUM FROM ACTIVITY) A WHERE NUM = 1 AND PREVIOUS = EVENT_DATE + 1) B, ACTIVITY ACT"
181,Y,N,"SELECT ROUND(COUNT(DISTINCT C.PLAYER_ID) / COUNT(DISTINCT B.PLAYER_ID),2) AS FRACTION FROM ACTIVITY B LEFT OUTER JOIN (SELECT MIN(A.EVENT_DATE) MINDATE, A.PLAYER_ID FROM ACTIVITY A GROUP BY PLAYER_ID) C ON DATE_SUB(B.EVENT_DATE, INTERVAL 1 DAY) = C.MINDATE AND B.PLAYER_ID = C.PLAYER_ID"
182,Y,Y,"SELECT ROUND(COUNT(DISTINCT CASE WHEN DATE_RANK =1 AND DAYS_SINCE_FIRST_LOGIN = -1 THEN PLAYER_ID END) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS DATE_RANK , EVENT_DATE - LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DAYS_SINCE_FIRST_LOGIN FROM ACTIVITY) A"
183,Y,N,"SELECT ROUND(COUNT(DISTINCT IF(T2.EVENT_DATE IS NOT NULL, T1.PLAYER_ID, NULL)) / COUNT(DISTINCT T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T1 LEFT JOIN ACTIVITY AS T2 ON DATEDIFF(T2.EVENT_DATE, T1.EVENT_DATE) = 1 AND T1.PLAYER_ID = T2.PLAYER_ID"
184,Y,N,"SELECT ROUND(COUNT(DISTINCT MIN_TABLE.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT A1.PLAYER_ID, MIN(A1.EVENT_DATE) AS MIN_DATE FROM ACTIVITY A1 GROUP BY A1.PLAYER_ID) MIN_TABLE JOIN ACTIVITY A2 ON MIN_TABLE.PLAYER_ID = A2.PLAYER_ID AND DATE_ADD(MIN_TABLE.MIN_DATE, INTERVAL 1 DAY) = A2.EVENT_DATE"
185,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM( SELECT PLAYER_ID, LEAD(EVENT_DATE, 1, NULL) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS P_DAY, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS D_MIN FROM ACTIVITY ) TEMP WHERE DATEDIFF(P_DAY, D_MIN) = 1"
186,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID ,EVENT_DATE ,LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE FROM ACTIVITY ) A WHERE NEXT_DATE = DATE_ADD(EVENT_DATE,INTERVAL 1 DAY) AND (PLAYER_ID,EVENT_DATE) IN ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID )"
187,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID ,EVENT_DATE ,LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE FROM ACTIVITY ) A WHERE NEXT_DATE = DATE_ADD(EVENT_DATE,INTERVAL 1 DAY) AND EVENT_DATE = ( SELECT MIN(EVENT_DATE) FROM ACTIVITY WHERE A.PLAYER_ID = PLAYER_ID )"
188,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY) A WHERE RNK=1 AND DATEDIFF(NEXT_EVENT, EVENT_DATE )=1"
189,Y,Y,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM( SELECT PLAYER_ID, DEVICE_ID,EVENT_DATE,GAMES_PLAYED, LEAD(EVENT_DATE ) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS NEXT_LOGIN_DATE, RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS RNK FROM ACTIVITY ) T WHERE NEXT_LOGIN_DATE-EVENT_DATE=1 AND RNK=1"
190,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PRE_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY) AS TMPT WHERE DATEDIFF(EVENT_DATE, PRE_DATE) = 1 AND PRE_DATE = MIN_EVENT_DATE"
191,Y,N,"SELECT ROUND(COUNT(DISTINCT RETURN_USER) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM (SELECT A.PLAYER_ID, A.EVENT_DATE AS FIRST_DATE, B.PLAYER_ID AS RETURN_USER FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATE_ADD(A.EVENT_DATE, INTERVAL 1 DAY) = B.EVENT_DATE) C"
192,Y,N,"SELECT ROUND(COUNT(DISTINCT T.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2)AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T JOIN ACTIVITY A ON T.EVENT_DATE = SUBDATE(A.EVENT_DATE,1) AND T.PLAYER_ID = A.PLAYER_ID"
193,Y,Y,"SELECT ROUND(COUNT(DISTINCT T.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT * FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LEAD0, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS CN FROM ACTIVITY ) AS TEMP WHERE LEAD0-EVENT_DATE = 1 AND CN = 1) T, ACTIVITY A"
194,Y,N,"SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE FROM ACTIVITY) T1 WHERE EVENT_DATE=FIRST_DATE AND NEXT_DATE = DATE_ADD(EVENT_DATE, INTERVAL 1 DAY)"
195,Y,N,"SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS MIN_DATE, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS PREV_DATE FROM ACTIVITY) T1 WHERE PREV_DATE=MIN_DATE AND EVENT_DATE = DATE_ADD(PREV_DATE, INTERVAL 1 DAY)"
196,N,N,"SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/T2.TOTAL_PLAYERS, 2) AS FRACTION FROM ( SELECT A.PLAYER_ID, A.EVENT_DATE FROM ACTIVITY A, ACTIVITY B, (SELECT PLAYER_ID, MIN(EVENT_DATE) AS LOGIN_1ST FROM ACTIVITY GROUP BY PLAYER_ID) AS C WHERE A.PLAYER_ID = B.PLAYER_ID AND ABS(DATEDIFF(A.EVENT_DATE, B.EVENT_DATE)) = 1 AND A.PLAYER_ID = C.PLAYER_ID AND A.EVENT_DATE = C.LOGIN_1ST ) AS T1 , (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYERS FROM ACTIVITY ) AS T2"
197,Y,N,"SELECT ROUND(COUNT(DISTINCT Y.PLAYER_ID)/COUNT(DISTINCT X.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY X LEFT JOIN ACTIVITY Y ON X.PLAYER_ID=Y.PLAYER_ID AND DATEDIFF(X.EVENT_DATE, Y.EVENT_DATE)=-1 WHERE (X.PLAYER_ID, X.EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1)"
198,Y,Y,"SELECT ROUND(COUNT(DISTINCT(A1.PLAYER_ID))/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY AS A1, ACTIVITY AS A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE+1=A2.EVENT_DATE AND (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
199,Y,N,"SELECT ROUND(COUNT(DISTINCT(TBL2.PLAYER_ID))/COUNT(DISTINCT(TBL1.PLAYER_ID)), 2) AS FRACTION FROM (SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS FIRST_LOGIN FROM ACTIVITY) TBL1 LEFT JOIN ACTIVITY TBL2 ON TBL1.PLAYER_ID=TBL2.PLAYER_ID AND DATEDIFF(TBL2.EVENT_DATE, TBL1.FIRST_LOGIN) =1"
200,Y,N,"SELECT ROUND(COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANK, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN FROM ACTIVITY ) LOGIN_TABLE WHERE LOGIN_TABLE.LOGIN_RANK = 1 AND LOGIN_TABLE.NEXT_LOGIN IS NOT NULL AND DATEDIFF(LOGIN_TABLE.NEXT_LOGIN, LOGIN_TABLE.EVENT_DATE) = 1"
201,Y,Y,"SELECT ROUND(COUNT(PLAYER_ID)/COUNT(*),2) FRACTION FROM ( SELECT A.PLAYER_ID, A.EVENT_DATE FROM ACTIVITY A RIGHT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) INITIAL FROM ACTIVITY GROUP BY PLAYER_ID) TEMP ON A.PLAYER_ID = TEMP.PLAYER_ID AND A.EVENT_DATE = TEMP.INITIAL+1) TEMP2"
202,Y,N,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) T1 LEFT JOIN ACTIVITY T2 ON T2.PLAYER_ID = T1.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE, T1.FIRST_LOGIN) = 1"
203,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(DISTINCT T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS M FROM ACTIVITY GROUP BY PLAYER_ID) AS T2 RIGHT JOIN ACTIVITY T1 ON T2.M=T1.EVENT_DATE-1 AND T1.PLAYER_ID=T2.PLAYER_ID"
204,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE-1"
205,Y,N,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND FIRST_LOGIN = SUBDATE(T2.EVENT_DATE,1)"
206,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID=T2.PLAYER_ID AND T2.EVENT_DATE=T1.FIRST_LOGIN+1"
207,Y,Y,"SELECT ROUND(COUNT(TABLE2.PLAYER_ID)/COUNT(TABLE1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS TABLE1 LEFT JOIN ACTIVITY AS TABLE2 ON TABLE1.PLAYER_ID = TABLE2.PLAYER_ID AND TABLE1.FIRST_LOGIN = TABLE2.EVENT_DATE - 1"
208,Y,N,"SELECT ROUND(COUNT_/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT COUNT(PLAYER_ID) COUNT_ FROM (SELECT PLAYER_ID,EVENT_DATE,LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)NEXT_DATE,RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) RANK_ FROM ACTIVITY )F WHERE EVENT_DATE=SUBDATE(NEXT_DATE,INTERVAL 1 DAY) AND RANK_=1)C"
209,Y,Y,"SELECT ROUND(IFNULL(COUNT(A2.PLAYER_ID),0)/COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND A2.EVENT_DATE=A1.EVENT_DATE+1"
210,Y,N,"SELECT ROUND(ROUND(SUM(CASE WHEN B.EVENT_DATE IS NOT NULL THEN 1 ELSE 0 END)/COUNT(*), 2), 5) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN (SELECT DISTINCT PLAYER_ID, EVENT_DATE FROM ACTIVITY) B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1"
211,Y,Y,"SELECT ROUND(SUM( CASE WHEN A1.EVENT_DATE = A2.EVENT_DATE+1 THEN 1 ELSE 0 END)/ COUNT(DISTINCT(A1.PLAYER_ID)),2) AS FRACTION FROM ACTIVITY A1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A2 ON A1.PLAYER_ID = A2.PLAYER_ID"
212,Y,Y,"SELECT ROUND(SUM(CASE WHEN A.FIRST_LOGIN_DATE + 1 = B.EVENT_DATE THEN 1 ELSE 0 END) / COUNT(DISTINCT A.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID"
213,Y,Y,"SELECT ROUND(SUM(CASE WHEN A2.PLAYER_ID IS NOT NULL THEN 1 ELSE 0 END) / COUNT(0),2) FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN, MIN(EVENT_DATE) + 1 DAY_AFTER_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) A1 LEFT JOIN ACTIVITY A2 ON A2.PLAYER_ID = A1.PLAYER_ID AND A2.EVENT_DATE = A1.DAY_AFTER_LOGIN"
214,Y,N,"SELECT ROUND(SUM(CASE WHEN A2.PLAYER_ID IS NOT NULL THEN 1 ELSE 0 END)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM (SELECT MIN(EVENT_DATE) AS EVENT_DATE,PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.EVENT_DATE)=1"
215,Y,N,"SELECT ROUND(SUM(CASE WHEN EVENT_DATE IS NOT NULL THEN 1 ELSE 0 END)/COUNT(PLAYER_ID), 2) AS FRACTION FROM (SELECT P1.PLAYER_ID, FIRSTLOG, EVENT_DATE FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTLOG FROM ACTIVITY GROUP BY PLAYER_ID)P1 LEFT JOIN ACTIVITY ON ACTIVITY.PLAYER_ID = P1.PLAYER_ID AND DATEDIFF(EVENT_DATE, FIRSTLOG)=1)P2"
216,Y,Y,"SELECT ROUND(SUM(CASE WHEN EVENT_DATE IS NOT NULL THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT DISTINCT A.PLAYER_ID, A.MIN_EVENT_DATE, B.EVENT_DATE FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID)A LEFT JOIN ACTIVITY B ON B.EVENT_DATE = A.MIN_EVENT_DATE + 1 AND A.PLAYER_ID = B.PLAYER_ID)C"
217,Y,N,"SELECT ROUND(SUM(CASE WHEN FIRST.PLAYER_ID IS NULL THEN 0 ELSE 1 END)/COUNT(DISTINCT ACTIVITY.PLAYER_ID),2) AS FRACTION FROM ACTIVITY LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS JOIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS FIRST ON FIRST.PLAYER_ID = ACTIVITY.PLAYER_ID AND DATEDIFF(ACTIVITY.EVENT_DATE, FIRST.JOIN_DATE ) = 1"
218,Y,Y,"SELECT ROUND(SUM(CASE WHEN T1.EVENT_DATE - T2.FIRST_DATE = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT T1.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY T1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T2 ON T1.PLAYER_ID = T2.PLAYER_ID"
219,Y,Y,"SELECT ROUND(SUM(CASE WHEN T1.EVENT_DATE = T2.FIRST_EVENT+1 THEN 1 ELSE 0 END)/COUNT(DISTINCT T1.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY AS T1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_EVENT FROM ACTIVITY GROUP BY PLAYER_ID) AS T2 ON T1.PLAYER_ID = T2.PLAYER_ID"
220,Y,Y,"SELECT ROUND(SUM(CASE WHEN T1.EVENT_DATE = T2.FIRST_LOGIN+1 THEN 1 ELSE 0 END)/COUNT(DISTINCT T1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY AS T1 INNER JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS T2 ON T1.PLAYER_ID = T2.PLAYER_ID"
221,Y,Y,"SELECT ROUND(SUM(CASE WHEN T1.EVENT_DATE=T2.FIRST_DATE+1 THEN 1 ELSE 0 END)/COUNT(DISTINCT T1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY T1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1) AS T2 ON T1.PLAYER_ID=T2.PLAYER_ID"
222,Y,Y,"SELECT ROUND(SUM(CASE WHEN TEMP.MIN_DATE + 1 = A.EVENT_DATE THEN 1 ELSE 0 END) / COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) TEMP JOIN ACTIVITY A ON TEMP.PLAYER_ID = A.PLAYER_ID"
223,Y,Y,"SELECT ROUND(SUM(CASE WHEN TEMP.MINDATE+1=A.EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MINDATE FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP JOIN ACTIVITY A ON A.PLAYER_ID = TEMP.PLAYER_ID"
224,Y,N,"SELECT ROUND(SUM(FLAG)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID ,EVENT_DATE,NEXT_DATE,ROW_NUM, CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE) = 1 THEN 1 ELSE 0 END AS FLAG FROM (SELECT PLAYER_ID ,EVENT_DATE, LEAD (EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_NUM FROM ACTIVITY) AS T1 ) AS T2 WHERE ROW_NUM=1"
225,Y,Y,"SELECT ROUND(SUM(IF(A.EVENT_DATE=B.MIN_DATE+1, 1, 0)) / COUNT(DISTINCT B.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) MIN_DATE FROM ACTIVITY GROUP BY 1 ) B LEFT JOIN ACTIVITY A ON A.PLAYER_ID=B.PLAYER_ID"
226,Y,N,"SELECT ROUND(SUM(IF(T2.EVENT_DATE IS NOT NULL, 1,0)) / COUNT(DISTINCT(T1.PLAYER_ID)),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE, T1.EVENT_DATE) = 1"
227,N,N,"SELECT ROUND(T.COUNT1/COUNT(DISTINCT A_FULL.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A_FULL, (SELECT COUNT(DISTINCT A1.PLAYER_ID) AS COUNT1 FROM ACTIVITY A1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A2 ON DATEDIFF(A1.EVENT_DATE, A2.FIRST_DATE) = 1 AND A1.PLAYER_ID = A2.PLAYER_ID WHERE A2.PLAYER_ID IS NOT NULL) T"
228,N,N,"SELECT ROUND(Z.C / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A , (SELECT COUNT(A1.PLAYER_ID) AS C FROM (SELECT DISTINCT PLAYER_ID,EVENT_DATE FROM ACTIVITY) A1, (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A2 WHERE A1.PLAYER_ID=A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE)=1) Z"
229,Y,Y,"WITH A AS (SELECT MIN(EVENT_DATE) AS MIN_DATE, PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM A JOIN ACTIVITY ON A.PLAYER_ID = ACTIVITY.PLAYER_ID AND A.MIN_DATE + 1 = ACTIVITY.EVENT_DATE"
230,Y,Y,"WITH A AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MIN_DT FROM ACTIVITY GROUP BY 1) SELECT ROUND(SUM(CASE WHEN EXISTS (SELECT 1 FROM A WHERE A.MIN_DT + 1 = B.EVENT_DATE AND A.PLAYER_ID = B.PLAYER_ID) THEN 1 ELSE 0 END)/COUNT(DISTINCT B.PLAYER_ID),2) AS FRACTION FROM ACTIVITY B"
231,Y,Y,"WITH CTE1 AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT CT1.PLAYER_ID)/( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE1 AS CT1 INNER JOIN ACTIVITY AS T2 ON CT1.PLAYER_ID = T2.PLAYER_ID AND CT1.FIRST_LOGIN = T2.EVENT_DATE-1"
232,Y,Y,"WITH RANKED AS ( SELECT PLAYER_ID, RANK() OVER W AS DATE_RANK, NTH_VALUE(EVENT_DATE, 1) OVER W AS FIRST_DATE, NTH_VALUE(EVENT_DATE, 2) OVER W AS SECOND_DATE FROM ACTIVITY WINDOW W AS ( PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) ) SELECT ROUND(SUM(FIRST_DATE + 1 = SECOND_DATE AND DATE_RANK = 2) / SUM(DATE_RANK = 1), 2) AS FRACTION FROM RANKED"
233,Y,N,"WITH A AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(SUM(CASE WHEN DATEDIFF(ACTIVITY.EVENT_DATE,FIRST_LOGIN)=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY JOIN A ON ACTIVITY.PLAYER_ID=A.PLAYER_ID"
234,Y,N,"WITH A AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRSTDAY FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE,FIRSTDAY)=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT ACTIVITY.PLAYER_ID),2) AS FRACTION FROM ACTIVITY JOIN A ON A.PLAYER_ID=ACTIVITY.PLAYER_ID"
235,Y,Y,"WITH A AS (SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_NUM FROM ACTIVITY) SELECT ROUND((SELECT COUNT(*) FROM (SELECT A1.PLAYER_ID, (A2.EVENT_DATE - A1.EVENT_DATE) AS DIFF FROM A A1, A A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND A1.ROW_NUM = 1 AND A2.ROW_NUM = 2 HAVING DIFF = 1) AS T) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
236,Y,N,"WITH A AS (SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK FROM (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID, EVENT_DATE) T ) SELECT ROUND(COUNT(DISTINCT CASE WHEN A1.RK=1 AND A2.EVENT_DATE IS NOT NULL THEN A1.PLAYER_ID END)/COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM A A1 LEFT JOIN A A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, A2.EVENT_DATE)=-1"
237,Y,N,"WITH A AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE,FIRST_LOGIN)=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT ACTIVITY.PLAYER_ID),2) AS FRACTION FROM A JOIN ACTIVITY ON A.PLAYER_ID=ACTIVITY.PLAYER_ID"
238,Y,N,"WITH A AS( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRSTDAY FROM ACTIVITY ) SELECT ROUND (SUM(CASE WHEN DIFFDATE =1 THEN 1 ELSE 0 END)/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT *, DATEDIFF(EVENT_DATE,FIRSTDAY) AS DIFFDATE FROM A) NEW"
239,Y,Y,"WITH A AS(SELECT PLAYER_ID,MIN(EVENT_DATE) AS D FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND((COUNT(PLAYER_ID)/(SELECT COUNT(*) FROM A)),2) AS FRACTION FROM (SELECT A.PLAYER_ID FROM A,ACTIVITY A1 WHERE A.PLAYER_ID=A1.PLAYER_ID AND A.D+1=A1.EVENT_DATE) AS T1"
240,Y,N,"WITH A1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS JOINDATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND( COUNT(*) / ( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM A1 JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE = DATE_ADD(A1.JOINDATE, INTERVAL 1 DAY)"
241,Y,Y,"WITH A1 AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(A1.PLAYER_ID),2) AS FRACTION FROM A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE = A1.FIRST_LOGIN + 1"
242,Y,Y,"WITH CONSECUTIVE AS (SELECT A2.PLAYER_ID, A2.EVENT_DATE FROM ACTIVITY A1, ACTIVITY A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE = A1.EVENT_DATE + 1 AND (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT A1.PLAYER_ID, MIN(A1.EVENT_DATE) FROM ACTIVITY A1 GROUP BY 1)) SELECT ROUND((SELECT COUNT(PLAYER_ID) FROM CONSECUTIVE)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
243,Y,N,"WITH CONSECUTIVE AS (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID), INTERVAL 1 DAY) EVENT_DATE1 FROM ACTIVITY GROUP BY PLAYER_ID, EVENT_DATE) SELECT CAST(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID) AS DECIMAL(5,2)) FRACTION FROM ACTIVITY A LEFT JOIN CONSECUTIVE B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = B.EVENT_DATE1"
244,Y,N,"WITH CONSECUTIVE_LOGINS AS ( SELECT A1.PLAYER_ID, A1.EVENT_DATE FROM ACTIVITY A1 INNER JOIN ACTIVITY A2 ON A1.EVENT_DATE = DATE_SUB(A2.EVENT_DATE, INTERVAL 1 DAY) AND A1.PLAYER_ID = A2.PLAYER_ID ), FIRST_CONSECUTIVE_LOGINS AS ( SELECT PLAYER_ID FROM CONSECUTIVE_LOGINS WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID) ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM FIRST_CONSECUTIVE_LOGINS) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
245,Y,N,"WITH CTE AS ( SELECT * , MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_EVENT_DATE FROM ACTIVITY ) SELECT ROUND( ( SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE WHERE DATEDIFF(EVENT_DATE, FIRST_EVENT_DATE) = 1 ) / COUNT(DISTINCT PLAYER_ID) , 2 ) AS FRACTION FROM ACTIVITY"
246,Y,N,"WITH CTE AS ( SELECT *, ROW_NUMBER()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NUM, LEAD(EVENT_DATE,1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXTDAY FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE NUM = 1 AND DATEDIFF(NEXTDAY,EVENT_DATE) = 1"
247,Y,N,"WITH CTE AS ( SELECT A.PLAYER_ID, A.EVENT_DATE, FL FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FL FROM ACTIVITY GROUP BY 1) B ON A.PLAYER_ID = B.PLAYER_ID) SELECT ROUND(SUM(CASE WHEN TIMESTAMPDIFF(DAY, FL, EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CTE"
248,Y,N,"WITH CTE AS ( SELECT PLAYER_ID FROM ( SELECT PLAYER_ID,LEAD(EVENT_DATE,1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE,EVENT_DATE, DENSE_RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) RN FROM ACTIVITY)T WHERE DATEDIFF(NEXT_DATE,EVENT_DATE)=1 AND RN =1) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE"
249,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE), 2) AS FRACTION FROM CTE WHERE DATEDIFF(EVENT_DATE, NEXT_EVENT_DATE) = -1 AND EVENT_DATE = MIN_EVENT_DATE"
250,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS R, DATEDIFF(LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE),EVENT_DATE ) AS DIFF FROM ACTIVITY ) SELECT ROUND(((SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE WHERE R=1 AND DIFF=1)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)), 2) AS FRACTION"
251,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND((COUNT(DISTINCT C.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID)),2) AS FRACTION FROM ACTIVITY A LEFT JOIN CTE C ON A.PLAYER_ID = C.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,C.FIRST_LOGIN) = 1"
252,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(C.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN CTE C ON C.PLAYER_ID = A1.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, C.EVENT_DATE) = 1"
253,Y,N,"WITH CTE AS (SELECT *, RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK , LEAD(EVENT_DATE)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS AFTER FROM ACTIVITY), CTE2 AS ( SELECT PLAYER_ID FROM CTE WHERE RNK=1 AND DATEDIFF(AFTER, EVENT_DATE)=1) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE2"
254,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) MIN_DATE FROM ACTIVITY) SELECT ROUND(SUM(EVENT_DATE = MIN_DATE + 1)/COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM CTE"
255,Y,Y,"WITH CTE AS (SELECT COUNT(DISTINCT PLAYER_ID) AS CNT FROM (SELECT *, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NUM, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK FROM ACTIVITY) A WHERE EVENT_DATE = NUM -1 AND RNK = 1) SELECT ROUND(CNT/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE"
256,N,N,"WITH CTE AS (SELECT COUNT(DISTINCT PLAYER_ID) COUNT1 FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1,0)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY,DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY)T WHERE DATEDIFF(NEXT_DAY,EVENT_DATE)=1 AND RNK=1) SELECT ROUND(CTE.COUNT1/COUNT(DISTINCT ACTIVITY.PLAYER_ID),2) AS FRACTION FROM ACTIVITY,CTE"
257,Y,N,"WITH CTE AS (SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LAG_EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY), CTE2 AS (SELECT PLAYER_ID FROM CTE WHERE LAG_EVENT_DATE = DATE_SUB(EVENT_DATE, INTERVAL 1 DAY) AND MIN_EVENT_DATE=LAG_EVENT_DATE) SELECT ROUND( (SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE2)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
258,Y,N,"WITH CTE AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)NEXT_DATE, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2)FRACTION FROM CTE WHERE RNK = 1"
259,Y,N,"WITH CTE AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)NEXT_DAY, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)ROW_NUM FROM ACTIVITY) SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXT_DAY, EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM CTE WHERE ROW_NUM = 1"
260,Y,N,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS NEXT_DAY FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY AS A JOIN CTE ON CTE.PLAYER_ID = A.PLAYER_ID AND A.EVENT_DATE = CTE.NEXT_DAY"
261,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(SUM(CASE WHEN FIRST_LOG+1=EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT ACTIVITY.PLAYER_ID),2) AS FRACTION FROM ACTIVITY JOIN CTE ON ACTIVITY.PLAYER_ID=CTE.PLAYER_ID"
262,Y,N,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1) SELECT ROUND(COUNT(B.PLAYER_ID) / COUNT(A.PLAYER_ID), 2) AS FRACTION FROM CTE A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.FIRST_LOGIN) = 1"
263,Y,N,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ) SELECT IFNULL(ROUND(AVG(CASE WHEN A.EVENT_DATE IS NULL THEN 0 ELSE 1 END),2),0) AS FRACTION FROM CTE LEFT JOIN ACTIVITY A ON A.PLAYER_ID = CTE.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,CTE.FIRST_LOGIN) = 1"
264,Y,N,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY 1) SELECT ROUND(COUNT(*)/(SELECT COUNT(*) FROM CTE),2) AS FRACTION FROM ACTIVITY A JOIN CTE B ON DATEDIFF(A.EVENT_DATE, B.MIN_DATE) = 1 AND A.PLAYER_ID = B.PLAYER_ID"
265,Y,Y,"WITH CTE AS( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) MINN FROM ACTIVITY) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM CTE WHERE EVENT_DATE - MINN = 1"
266,Y,N,"WITH CTE AS( SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGINRANK FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(L2.EVENT_DATE,L1.EVENT_DATE)=1 THEN 1 ELSE 0 END)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE FROM CTE WHERE LOGINRANK = 1) L1 JOIN (SELECT PLAYER_ID, EVENT_DATE FROM CTE WHERE LOGINRANK = 2) L2 ON L1.PLAYER_ID = L2.PLAYER_ID"
267,Y,N,"WITH CTE AS( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LEAD1, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_NUM FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(LEAD1, EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM CTE WHERE ROW_NUM = 1"
268,Y,Y,"WITH CTE AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(SUM(CASE WHEN A.PLAYER_ID IS NULL THEN 0 ELSE 1 END)/COUNT(DISTINCT CTE.PLAYER_ID),2) AS FRACTION FROM CTE LEFT JOIN ACTIVITY A ON CTE.PLAYER_ID = A.PLAYER_ID AND CTE.FIRST_DAY +1 = A.EVENT_DATE"
269,Y,N,"WITH CTE AS( SELECT PLAYER_ID, ROWNUM, DATEDIFF(NEXTEVENT,EVENT_DATE) NEXTEVENTDIFF FROM( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) ROWNUM, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXTEVENT FROM ACTIVITY)Z WHERE ROWNUM = 1 AND DATEDIFF(NEXTEVENT,EVENT_DATE) = 1) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
270,Y,Y,"WITH CTE1 AS ( SELECT DISTINCT A1.PLAYER_ID, A1.EVENT_DATE AS LOGIN_DATE, A2.EVENT_DATE AS NEXT_LOGIN FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE + 1 = A2.EVENT_DATE ), CTE2 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY A GROUP BY PLAYER_ID), CTE3 AS (SELECT DISTINCT CTE2.PLAYER_ID FROM CTE1 JOIN CTE2 ON CTE1.PLAYER_ID = CTE2.PLAYER_ID AND CTE1.LOGIN_DATE = CTE2.FIRST_LOGIN ) SELECT ROUND(COUNT(*) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE3"
271,Y,N,"WITH CTE1 AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXT_DAY FROM ACTIVITY ), CTE2 AS ( SELECT COUNT(DISTINCT CTE1.PLAYER_ID) PLAYER_ID FROM CTE1 JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_DAY FROM ACTIVITY GROUP BY 1) F ON CTE1.PLAYER_ID = F.PLAYER_ID AND CTE1.EVENT_DATE = F.FIRST_DAY WHERE DATEDIFF(CTE1.NEXT_DAY, CTE1.EVENT_DATE) = 1 ) SELECT ROUND((SELECT PLAYER_ID FROM CTE2) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION"
272,Y,N,"WITH CTE1 AS( SELECT A.PLAYER_ID,A.EVENT_DATE FROM( SELECT PLAYER_ID,EVENT_DATE,RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS R1 FROM ACTIVITY) A WHERE A.R1 IN (1,2) ), CTE2 AS( SELECT COUNT(DISTINCT A.PLAYER_ID) AS C1 FROM CTE1 A,CTE1 B WHERE A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE) = 1), CTE3 AS( SELECT COUNT(DISTINCT(PLAYER_ID)) AS C2 FROM ACTIVITY) SELECT ROUND(A.C1/B.C2 , 2) AS FRACTION FROM CTE2 A,CTE3 B"
273,Y,Y,"WITH CTE1 AS( SELECT COUNT(*) AS NUM FROM( SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID) AS LD0 FROM ACTIVITY ) TBL WHERE LD0-EVENT_DATE=1 AND RNK=1) SELECT ROUND(NUM/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE1"
274,Y,N,"WITH CTEY AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS Y FROM ACTIVITY ), CTEX AS ( SELECT COUNT(A.EVENT_DATE) AS X FROM ( SELECT EVENT_DATE, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DATEORDER FROM ACTIVITY ) AS A WHERE A.DATEORDER=1 AND IF(IFNULL(A.NEXT_DATE, 0)=ADDDATE(A.EVENT_DATE, 1), TRUE, FALSE) ) SELECT ROUND(CTEX.X/CTEY.Y,2) AS FRACTION FROM CTEY, CTEX WHERE 1=1"
275,Y,N,"WITH DATECALC AS( SELECT DISTINCT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS SECOND_DAY FROM ACTIVITY), FIRSTLOGINDATE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), LOGGED AS ( SELECT COUNT(DISTINCT A.PLAYER_ID) AS LOGGED FROM DATECALC A,FIRSTLOGINDATE B WHERE DATEDIFF(A.SECOND_DAY,A.EVENT_DATE ) =1 AND A.EVENT_DATE = B.MIN_DATE AND A.PLAYER_ID = B.PLAYER_ID ), TOTALP AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL FROM DATECALC ) SELECT ROUND(LOGGED/TOTAL,2) AS FRACTION FROM LOGGED, TOTALP"
276,Y,N,"WITH EVENTS_RNKED AS ( SELECT *, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DT_RNK FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT CASE WHEN E1.DT_RNK = 1 AND DATEDIFF(E2.EVENT_DATE, E1.EVENT_DATE) = 1 THEN E1.PLAYER_ID ELSE NULL END)/COUNT(DISTINCT E1.PLAYER_ID),2) AS FRACTION FROM EVENTS_RNKED E1 JOIN EVENTS_RNKED E2 ON E1.PLAYER_ID = E2.PLAYER_ID"
277,Y,N,"WITH F AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID), 2) FRACTION FROM F A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = DATE_ADD(B.EVENT_DATE, INTERVAL -1 DAY)"
278,N,N,"WITH F AS (SELECT N.PLAYER_ID, MIN(N.EVENT_DATE) AS FIRST, CASE WHEN N.NEX IS NULL THEN 0 WHEN DATEDIFF(N.NEX,N.EVENT_DATE) = 1 THEN 1 ELSE 0 END AS W FROM ( SELECT PLAYER_ID, EVENT_DATE,LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEX FROM ACTIVITY) N GROUP BY 1) SELECT ROUND(SUM(W=1)/COUNT(*),2) AS FRACTION FROM F"
279,Y,N,"WITH FIRST_ACTIVITY AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(SUM(IF(T2.PLAYER_ID IS NULL, 0, 1)) / COUNT(*), 2) AS FRACTION FROM ( SELECT DISTINCT PLAYER_ID FROM ACTIVITY ) T1 LEFT JOIN ( SELECT DISTINCT T1.PLAYER_ID FROM FIRST_ACTIVITY T1 JOIN ACTIVITY T2 ON T2.PLAYER_ID = T1.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE, T1.EVENT_DATE) = 1 ) T2 ON T2.PLAYER_ID = T1.PLAYER_ID"
280,Y,N,"WITH FIRST_LOGGIN AS ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_LOGGIN_DATE FROM ACTIVITY ) SELECT ROUND( (SELECT COUNT(DISTINCT PLAYER_ID) FROM FIRST_LOGGIN WHERE EVENT_DATE = DATE_ADD(FIRST_LOGGIN_DATE, INTERVAL 1 DAY)) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM FIRST_LOGGIN), 2) AS FRACTION"
281,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN, MIN(EVENT_DATE) + 1 AS TARGET_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), SECOND_LOGINS AS ( SELECT ACTIVITY.PLAYER_ID, ACTIVITY.EVENT_DATE, CASE WHEN FIRST_LOGIN.PLAYER_ID IS NULL THEN 0 ELSE 1 END AS TARGET_LOGIN FROM ACTIVITY LEFT JOIN FIRST_LOGIN ON ACTIVITY.PLAYER_ID = FIRST_LOGIN.PLAYER_ID AND ACTIVITY.EVENT_DATE = FIRST_LOGIN.TARGET_DATE ) SELECT ROUND(SUM(TARGET_LOGIN)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM SECOND_LOGINS"
282,Y,N,"WITH FIRST_LOGIN_INFO AS( SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS SECOND_DAY FROM ACTIVITY GROUP BY PLAYER_ID) ,SECOND_LOGIN AS( SELECT MAX(CASE WHEN EVENT_DATE = SECOND_DAY THEN 1 ELSE 0 END) AS FLAG FROM ACTIVITY A LEFT JOIN FIRST_LOGIN_INFO B ON A.PLAYER_ID = B.PLAYER_ID GROUP BY A.PLAYER_ID) SELECT ROUND(AVG(FLAG), 2) AS FRACTION FROM SECOND_LOGIN"
283,Y,N,"WITH FIRSTS AS ( SELECT *, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(1.0*COUNT(DISTINCT IF(DATE_ADD(FIRST_LOGIN,INTERVAL 1 DAY)=EVENT_DATE,PLAYER_ID,NULL))/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM FIRSTS"
284,Y,Y,"WITH FL AS ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(CASE WHEN EVENT_DATE = FIRST_LOGIN + 1 THEN 1 ELSE NULL END) / COUNT(DISTINCT PLAYER_ID),2) FRACTION FROM FL"
285,Y,Y,"WITH FR AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(FR.PLAYER_ID), 2) AS FRACTION FROM FR LEFT JOIN ACTIVITY A2 ON FR.PLAYER_ID = A2.PLAYER_ID AND FR.FIRST_LOGIN = A2.EVENT_DATE -1"
286,Y,N,"WITH MIN_DATE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT (CASE WHEN B.EVENT_DATE IS NOT NULL THEN A.PLAYER_ID ELSE NULL END))/ COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM MIN_DATE A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.FIRST_DATE) = 1"
287,Y,N,"WITH MIN_DATE_TMP AS ( SELECT PLAYER_ID,EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT P1.PLAYER_ID)/ COUNT(DISTINCT P2.PLAYER_ID),2) AS FRACTION FROM ACTIVITY P2 LEFT JOIN MIN_DATE_TMP P1 ON P1.PLAYER_ID=P2.PLAYER_ID AND DATEDIFF(P2.EVENT_DATE,P1.MIN_DATE) =1"
288,Y,N,"WITH ND AS(SELECT PLAYER_ID,DEVICE_ID, EVENT_DATE, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DAY, FIRST_VALUE(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS FIRST_LOG FROM ACTIVITY) SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE,FIRST_LOG)=1 THEN (1) ELSE 0 END)/(COUNT(DISTINCT PLAYER_ID)),2) AS FRACTION FROM ND"
289,Y,Y,"WITH NEXT_DAY_LOG AS ( SELECT PLAYER_ID, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) - EVENT_DATE AS DATE_DIFF, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) RNK, EVENT_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT NEDL.PLAYER_ID) / COUNT(DISTINCT ACT.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY ACT LEFT OUTER JOIN NEXT_DAY_LOG NEDL ON ACT.PLAYER_ID = NEDL.PLAYER_ID AND ACT.EVENT_DATE = NEDL.EVENT_DATE AND RNK = 1 AND DATE_DIFF = 1"
290,Y,N,"WITH NEXT_EVENT AS( SELECT *, LEAD(EVENT_DATE)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RAK FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE)=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID), 2 ) AS FRACTION FROM NEXT_EVENT WHERE RAK = 1"
291,Y,N,"WITH PLAYER_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS DATE FROM ACTIVITY GROUP BY 1 ), MAIN AS ( SELECT P.PLAYER_ID FROM PLAYER_LOGIN P JOIN ACTIVITY A ON P.PLAYER_ID = A.PLAYER_ID AND DATE_ADD(P.DATE, INTERVAL 1 DAY) = A.EVENT_DATE ) SELECT ROUND((SELECT COUNT(*) FROM MAIN) / COUNT(DISTINCT(PLAYER_ID)), 2) AS FRACTION FROM ACTIVITY"
292,Y,N,"WITH STAT AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND( (SELECT COUNT(DISTINCT A2.PLAYER_ID) FROM ACTIVITY A2 JOIN STAT ON DATEDIFF(A2.EVENT_DATE, STAT.FIRST_LOGIN) = 1 AND A2.PLAYER_ID = STAT.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
293,Y,N,"WITH T AS ( SELECT A1.PLAYER_ID FROM ACTIVITY A1 JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE = DATE_ADD(A2.EVENT_DATE, INTERVAL 1 DAY) ) SELECT CAST(CAST(COUNT(DISTINCT PLAYER_ID) AS DECIMAL(18,2))/ CAST((SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) AS DECIMAL(18,2)) AS DECIMAL(4,2)) AS FRACTION FROM T"
294,Y,N,"WITH T AS(SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RW_NUM FROM ACTIVITY GROUP BY 1,2 ORDER BY 1,2) SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE_2,EVENT_DATE)=1 THEN 1 ELSE 0 END)/COUNT(*),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, RW_NUM, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS EVENT_DATE_2 FROM T ) A WHERE RW_NUM=1"
295,Y,N,"WITH T1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1), T2 AS (SELECT PLAYER_ID FROM T1 WHERE (PLAYER_ID, DATE_ADD(FIRST_LOGIN, INTERVAL 1 DAY)) IN (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY)) SELECT ROUND((SELECT COUNT(*) FROM T2)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
296,Y,N,"WITH T3 AS ( SELECT COUNT(PLAYER_ID) AS COUNT_PLAYER_CONSEC FROM( SELECT PLAYER_ID, SUM(CONSEC_OR_NOT) AS PLAYER_CONSEC FROM ( SELECT PLAYER_ID, IF(NUM=1, 1, 0) AS CONSEC_OR_NOT FROM ( SELECT PLAYER_ID, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID)) AS NUM FROM ACTIVITY )AS T0 ) AS T1 GROUP BY PLAYER_ID ) AS T2 WHERE PLAYER_CONSEC <> 0 ), T5 AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS COUNT_PLAYER FROM ACTIVITY ) SELECT ROUND(COUNT_PLAYER_CONSEC/COUNT_PLAYER, 2) AS FRACTION FROM T3 JOIN T5"
297,Y,Y,"WITH TB1 AS( SELECT PLAYER_ID,MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) , TB2 AS( SELECT A.PLAYER_ID, A.EVENT_DATE, A.EVENT_DATE - TB1.MIN_DATE AS TAG FROM ACTIVITY A, TB1 WHERE A.PLAYER_ID = TB1.PLAYER_ID) SELECT DISTINCT ROUND((COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)),2) AS FRACTION FROM TB2 WHERE TAG = 1"
298,Y,Y,"WITH TEMP AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS NUM_LOGGED FROM ( SELECT *, EVENT_DATE-LAG(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DIFF, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_NUM FROM ACTIVITY ) T WHERE DIFF IS NOT NULL AND DIFF = 1 AND ROW_NUM<=2 GROUP BY DIFF ) SELECT ROUND(NUM_LOGGED/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM TEMP"
299,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID FROM (SELECT *, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RN FROM ACTIVITY ) T WHERE DATEDIFF(NEXT_LOGIN,EVENT_DATE) = 1 AND RN = 1) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM TEMP"
300,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANKING FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(T.EVENT_DATE, U.EVENT_DATE) = 1 AND T.RANKING = 2 THEN 1 ELSE 0 END)/COUNT(DISTINCT T.PLAYER_ID),2) AS FRACTION FROM TEMP AS T JOIN TEMP AS U ON T.PLAYER_ID = U.PLAYER_ID"
301,Y,Y,"WITH TEMP AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(*) FROM TEMP),2) AS FRACTION FROM ACTIVITY A JOIN TEMP T ON A.PLAYER_ID=T.PLAYER_ID AND A.EVENT_DATE=T.FIRST_DATE+1"
302,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( SUM(CASE WHEN DATEDIFF(FIRST_LOGIN,EVENT_DATE) = -1 THEN 1 ELSE 0 END) /COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM TEMP JOIN ACTIVITY A ON TEMP.PLAYER_ID = A.PLAYER_ID"
303,Y,N,"WITH TEMP AS (SELECT *, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) LEAD_, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) RANK_ FROM ACTIVITY) SELECT ROUND(X.ACTIVE / (SELECT COUNT(DISTINCT PLAYER_ID) FROM TEMP), 2) AS FRACTION FROM (SELECT COUNT(DISTINCT PLAYER_ID) AS ACTIVE FROM TEMP WHERE DATEDIFF(LEAD_, EVENT_DATE) = 1 AND RANK_ = 1) X"
304,Y,N,"WITH TEMP AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) SELECT ROUND(COUNT(DISTINCT Y.PLAYER_ID)/COUNT(DISTINCT X.PLAYER_ID), 2) AS FRACTION FROM TEMP X LEFT JOIN ACTIVITY Y ON X.PLAYER_ID=Y.PLAYER_ID AND DATEDIFF(X.EVENT_DATE, Y.EVENT_DATE)=-1"
305,Y,N,"WITH TEMP AS( SELECT *, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LEAD_, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANK_ FROM ACTIVITY) SELECT ROUND((TEMP2.ACTIVE)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM TEMP),2) AS FRACTION FROM (SELECT COUNT(DISTINCT PLAYER_ID) ACTIVE FROM TEMP WHERE DATEDIFF(LEAD_,EVENT_DATE)=1 AND RANK_ = 1) AS TEMP2"
306,Y,N,"WITH TEMP AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1) SELECT ROUND(SUM( CASE WHEN DATEDIFF(EVENT_DATE,FIRST_LOGIN) = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT TEMP.PLAYER_ID),2) AS FRACTION FROM TEMP JOIN ACTIVITY A ON TEMP.PLAYER_ID = A.PLAYER_ID"
307,N,N,"WITH TEMP1 AS ( SELECT *, EVENT_DATE - LAG(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DIFF, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NUMBER FROM ACTIVITY ), TEMP2 AS (SELECT COUNT(DISTINCT PLAYER_ID) PLAYER_NUM FROM ACTIVITY) SELECT ROUND( COUNT(DISTINCT PLAYER_ID)/ TEMP2.PLAYER_NUM, 2) FRACTION FROM TEMP1, TEMP2 WHERE DIFF=1 AND NUMBER<=2"
308,Y,N,"WITH TEMP1 AS (SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DRANK FROM ACTIVITY), NEXT_DAY AS (SELECT A1.PLAYER_ID, A1.EVENT_DATE FROM TEMP1 A1 JOIN TEMP1 A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE = DATE_ADD(A1.EVENT_DATE, INTERVAL 1 DAY) AND A1.DRANK = 1) SELECT ROUND((SELECT COUNT(*) FROM NEXT_DAY)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
309,Y,N,"WITH TEMP1 AS (SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS DATE_RANK, LEAD(EVENT_DATE,1,NULL) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN_DATE FROM ACTIVITY), TEMP2 AS (SELECT PLAYER_ID FROM TEMP1 WHERE DATE_RANK = 1 AND DATEDIFF(NEXT_LOGIN_DATE,EVENT_DATE) = 1) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM TEMP2"
310,Y,Y,"WITH TEMP_TABLE AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOGIN_ORDER, EVENT_DATE - LAG(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS DAYS_NEXT_LOGIN FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN LOGIN_ORDER = 2 AND DAYS_NEXT_LOGIN = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM TEMP_TABLE"
311,Y,Y,"WITH TMP AS ( SELECT PLAYER_ID, DEVICE_ID, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) NEXT_DATE FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN NEXT_DATE - FIRST_DATE = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID) ,2) AS FRACTION FROM TMP"
312,Y,N,"WITH TOT_PLAYERS AS (SELECT PLAYER_ID,EVENT_DATE,LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)NEXT_DATE,ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)ROW_NUM FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2)FRACTION FROM TOT_PLAYERS WHERE ROW_NUM = 1"
313,Y,N,"WITH TOTAL_CUSTOMER AS (SELECT COUNT(*) AS TOTAL_NUM FROM (SELECT DISTINCT PLAYER_ID FROM ACTIVITY) TEMP), CUSTOMER_FIRST_LOGIN_DATE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS START_DATE FROM ACTIVITY GROUP BY 1), CUSTOMER_LOGIN_NEXT_DAY AS (SELECT COUNT(DISTINCT PLAYER_ID) AS LOGIN_NET_DATE_NUM FROM (SELECT A1.PLAYER_ID,A1.START_DATE,A2.EVENT_DATE FROM CUSTOMER_FIRST_LOGIN_DATE A1 JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE,A1.START_DATE) = 1) TEMP) SELECT ROUND(IFNULL( ((SELECT LOGIN_NET_DATE_NUM FROM CUSTOMER_LOGIN_NEXT_DAY)/ (SELECT TOTAL_NUM FROM TOTAL_CUSTOMER)),0),2) AS FRACTION"
314,Y,Y,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) MIN_EVE_DATE FROM ACTIVITY GROUP BY 1 ), SECOND_LOGIN AS ( SELECT A.PLAYER_ID FROM ACTIVITY A INNER JOIN FIRST_LOGIN B ON A.PLAYER_ID = B.PLAYER_ID WHERE A.EVENT_DATE = MIN_EVE_DATE + 1 ) SELECT ROUND((SELECT COUNT(*) FROM SECOND_LOGIN)/ COUNT(DISTINCT PLAYER_ID),2) FRACTION FROM ACTIVITY"
315,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE + 1 = B.EVENT_DATE"
316,Y,Y,"SELECT ROUND( (SELECT COUNT(DISTINCT A2.PLAYER_ID) AS CONSEQ_PLAYERS FROM ( SELECT A.PLAYER_ID, CAST(MIN(A.EVENT_DATE)+1 AS DATE) AS SECOND_LOGIN FROM ACTIVITY AS A GROUP BY A.PLAYER_ID ) AS A1 INNER JOIN ACTIVITY AS A2 ON (A1.PLAYER_ID = A2.PLAYER_ID) AND (A1.SECOND_LOGIN = A2.EVENT_DATE)) / COUNT(DISTINCT A3.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY AS A3"
317,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(A1.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN = A2.EVENT_DATE - 1"
318,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.EVENT_DATE) = -1"
319,Y,N,"SELECT ROUND(COUNT(TBL1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS TBL1, ACTIVITY AS TBL2 WHERE (TO_DAYS(TBL1.EVENT_DATE)) = (TO_DAYS(TBL2.EVENT_DATE) - 1) AND TBL1.PLAYER_ID = TBL2.PLAYER_ID"
320,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A.PLAYER_ID)/COUNT(F.PLAYER_ID), 2) AS FRACTION FROM FIRST_LOGIN AS F LEFT JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(F.FIRST_DATE, A.EVENT_DATE) = -1"
321,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE = A.EVENT_DATE + 1"
322,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT F.PLAYER_ID),2) AS FRACTION FROM FIRST_LOGIN AS F LEFT JOIN ACTIVITY AS A ON F.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(F.EVENT_DATE,A.EVENT_DATE) = -1"
323,Y,Y,"SELECT ROUND(COUNT(DISTINCT(P2.PLAYER_ID))/COUNT(DISTINCT(P1.PLAYER_ID)),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) P1 LEFT JOIN ACTIVITY P2 ON P1.PLAYER_ID = P2.PLAYER_ID AND P1.FIRST_LOGIN = P2.EVENT_DATE -1"
324,Y,N,"WITH V AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(V.PLAYER_ID) / (SELECT COUNT(*) FROM V), 2) AS FRACTION FROM V INNER JOIN ACTIVITY A ON V.PLAYER_ID = A.PLAYER_ID WHERE DATE_ADD( V.FIRST_LOG, INTERVAL 1 DAY) = A.EVENT_DATE"
325,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.FIRST_DATE) = 1"
326,N,N,"SELECT D1.PLAYER_ID, MAX(IF(D2.PLAYER_ID IS NOT NULL,1,0)) AS RETAINED_1D FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_EVENT_DATE FROM ACTIVITY GROUP BY 1 ) D1 LEFT JOIN ACTIVITY D2 ON D1.PLAYER_ID = D2.PLAYER_ID AND D1.FIRST_EVENT_DATE + INTERVAL 1 DAY = D2.EVENT_DATE GROUP BY 1 ) SELECT ROUND(AVG(RETAINED_1D),2) AS FRACTION FROM RETENTION"
327,Y,N,"SELECT ROUND(COUNT(DISTINCT(A1.PLAYER_ID))/(SELECT COUNT(DISTINCT A.PLAYER_ID) FROM ACTIVITY A), 2) AS FRACTION FROM ACTIVITY A1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS NEW_EVENT_DATE FROM ACTIVITY T1 GROUP BY 1) AS T1 ON A1.PLAYER_ID = T1.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, T1.NEW_EVENT_DATE)= 1"
328,Y,Y,"SELECT ROUND( ( WITH CTE AS ( SELECT T.PLAYER_ID, MIN(T.EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY T GROUP BY PLAYER_ID) SELECT COUNT(DISTINCT T1.PLAYER_ID) FROM CTE T1 LEFT JOIN ACTIVITY T2 ON (T1.PLAYER_ID, T1.FIRST_LOGIN + 1) = (T2.PLAYER_ID, T2.EVENT_DATE) WHERE T2.PLAYER_ID IS NOT NULL ) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) ,2) AS FRACTION"
329,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_LOGIN + 1 = B.EVENT_DATE"
330,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE, FIRST_LOGIN)=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT CTE.PLAYER_ID),2) AS FRACTION FROM ACTIVITY AS SUB JOIN CTE ON CTE.PLAYER_ID=SUB.PLAYER_ID"
331,Y,N,"WITH PLAYER_FIRST_LOGINS AS ( SELECT PLAYER_ID , FIRST_LOGIN , DATE_ADD(FIRST_LOGIN, INTERVAL 1 DAY) AS DAY_AFTER FROM ( SELECT PLAYER_ID , MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ) AS FIRST_LOGIN ) SELECT ROUND(SUM(CASE WHEN P.DAY_AFTER IS NOT NULL THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN PLAYER_FIRST_LOGINS P ON P.PLAYER_ID = A.PLAYER_ID AND P.DAY_AFTER = A.EVENT_DATE"
332,Y,N,"WITH TB AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), TB1 AS ( SELECT S.PLAYER_ID FROM TB AS F JOIN ACTIVITY AS S ON DATEDIFF(S.EVENT_DATE, F.FIRST_DATE) = 1 AND F.PLAYER_ID = S.PLAYER_ID ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM TB1)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM TB),2) AS FRACTION"
333,Y,N,"WITH T1 AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), T2 AS ( SELECT COUNT(T1.PLAYER_ID) AS NUM FROM T1 JOIN ACTIVITY ON T1.PLAYER_ID = ACTIVITY.PLAYER_ID AND DATEDIFF(ACTIVITY.EVENT_DATE,T1.EVENT_DATE) = 1 ) SELECT ROUND(IFNULL((SELECT NUM FROM T2),0)/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION"
334,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(F.PLAYER_ID), 2) AS FRACTION FROM ( SELECT A1.PLAYER_ID, MIN(A1.EVENT_DATE) AS EVENT_DATE FROM ACTIVITY AS A1 GROUP BY A1.PLAYER_ID ) AS F LEFT JOIN ACTIVITY AS A2 ON F.PLAYER_ID = A2.PLAYER_ID AND F.EVENT_DATE = A2.EVENT_DATE - '1'"
335,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A1 WHERE (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS SEC_DAY FROM ACTIVITY GROUP BY PLAYER_ID)"
336,Y,N,"SELECT ROUND(COUNT(T1.PLAYER_ID)/ (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) AS T1, ACTIVITY AS T2 WHERE (TO_DAYS(T1.EVENT_DATE)) = (TO_DAYS(T2.EVENT_DATE)-1) AND T1.PLAYER_ID = T2.PLAYER_ID"
337,Y,N,"WITH F AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(*) / (SELECT COUNT(PLAYER_ID) FROM F), 2) AS FRACTION FROM F, ACTIVITY A WHERE F.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, F.FIRST_DATE) = 1"
338,Y,N,"SELECT ROUND(A4.CONSE_LOGIN/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2)AS FRACTION FROM (SELECT COUNT(*) AS CONSE_LOGIN FROM(SELECT PLAYER_ID,MIN(EVENT_DATE)AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID)A1 LEFT JOIN (SELECT A3.PLAYER_ID, A3.EVENT_DATE AS SECOND_LOGIN FROM (SELECT PLAYER_ID, EVENT_DATE,DENSE_RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)AS RANK_2 FROM ACTIVITY)A3 WHERE A3.RANK_2=2)A2 ON A1.PLAYER_ID=A2.PLAYER_ID WHERE DATEDIFF(A2.SECOND_LOGIN,A1.FIRST_LOGIN)=1)A4"
339,Y,N,"WITH FIRST_TWO AS (SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY), FIRST_TWO_2 AS (SELECT PLAYER_ID, EVENT_DATE, RNK, LEAD(EVENT_DATE, 1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DAY2 FROM FIRST_TWO WHERE RNK = 1 OR RNK = 2), NUMERATOR AS (SELECT COUNT(DISTINCT PLAYER_ID) AS NUMERATOR FROM FIRST_TWO_2 WHERE DATEDIFF(DAY2, EVENT_DATE) = 1), DENOMINATOR AS (SELECT COUNT(DISTINCT PLAYER_ID) AS DENOMINATOR FROM ACTIVITY) SELECT ROUND(NUMERATOR/DENOMINATOR,2) AS FRACTION FROM NUMERATOR, DENOMINATOR"
340,Y,N,"SELECT ROUND(SUM(RES)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT IF(DATEDIFF(B.EVENT_DATE,A.EVENT_DATE) = 1,1,0) AS RES, A.PLAYER_ID FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID )C"
341,Y,Y,"SELECT ROUND(COUNT( DISTINCT A1.PLAYER_ID)/COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A1 RIGHT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY A2 GROUP BY PLAYER_ID ) TEMP ON A1.PLAYER_ID = TEMP.PLAYER_ID AND A1.EVENT_DATE = TEMP.FIRST_LOGIN + 1"
342,Y,N,"SELECT ROUND(SUM(CASE WHEN DATEDIFF(A.NEXT_DATE,A.EVENT_DATE) = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,EVENT_DATE, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) NEXT_DATE , ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ) AS LGIN FROM ACTIVITY ) A WHERE A.LGIN = 1"
343,Y,N,"SELECT ROUND(COUNT(DISTINCT CASE WHEN (DATEDIFF(A1.EVENT_DATE, A2.EVENT_DATE) = 1) OR (DATEDIFF(A1.EVENT_DATE, A2.EVENT_DATE) = -1) THEN A1.PLAYER_ID ELSE NULL END) / COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A1, ( SELECT A3.PLAYER_ID, MIN(A3.EVENT_DATE) EVENT_DATE FROM ACTIVITY A3 GROUP BY A3.PLAYER_ID ) A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID"
344,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY 1) SELECT ROUND( (SELECT COUNT(DISTINCT PLAYER_ID) FROM (SELECT (CTE.PLAYER_ID) FROM CTE LEFT JOIN ACTIVITY ON CTE.EVENT_DATE + 1 = ACTIVITY.EVENT_DATE AND CTE.PLAYER_ID = ACTIVITY.PLAYER_ID GROUP BY CTE.PLAYER_ID HAVING COUNT(ACTIVITY.EVENT_DATE) >= 1) TB) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) , 2) FRACTION"
345,Y,Y,"SELECT ROUND(SUM(CASE WHEN EVENT_DATE = MIN_DATE+1 THEN 1 ELSE 0 END) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) TEMP JOIN ACTIVITY A ON TEMP.PLAYER_ID = A.PLAYER_ID"
346,Y,N,"SELECT ROUND(COUNT(A2.EVENT_DATE) / COUNT(A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A1 LEFT JOIN ACTIVITY AS A2 ON A1.EVENT_DATE + INTERVAL 1 DAY = A2.EVENT_DATE AND A1.PLAYER_ID = A2.PLAYER_ID"
347,Y,Y,"WITH TEMP AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM TEMP A1 JOIN ACTIVITY A2 ON A2.PLAYER_ID = A1.PLAYER_ID AND A1.EVENT_DATE = A2.EVENT_DATE-1"
348,Y,N,"WITH CTD1 AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTD1 A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1"
349,Y,Y,"SELECT ROUND( SUM( CASE WHEN A.EVENT_DATE + 1 = B.EVENT_DATE THEN 1 ELSE 0 END) /COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A INNER JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID"
350,Y,N,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_LOGIN) = 1"
351,Y,Y,"WITH PLAYERS AS ( SELECT COUNT(DISTINCT(PLAYER_ID)) AS COUNT FROM ACTIVITY ), PLAYERS_FIRST AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), PLAYERS_NEXT AS ( SELECT COUNT(DISTINCT(PF.PLAYER_ID)) COUNT FROM PLAYERS_FIRST AS PF JOIN ACTIVITY A ON A.EVENT_DATE = PF.EVENT_DATE + 1 AND PF.PLAYER_ID = A.PLAYER_ID ) SELECT ROUND(PN. COUNT / P. COUNT , 2) AS FRACTION FROM PLAYERS_NEXT AS PN, PLAYERS AS P"
352,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, A2.EVENT_DATE) =-1"
353,Y,N,"WITH CTE1 AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) ,2) AS FRACTION FROM CTE1 A INNER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE) = 1"
354,Y,N,"SELECT ROUND(COUNT(B.EVENT_DATE)/COUNT(A.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) EARLIEST FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,EARLIEST)=1"
355,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE) = 1"
356,Y,N,"WITH FIRST_DATE_CTE AS ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) MIN_DATE FROM ACTIVITY A ) SELECT ROUND(B.NEXT_DAY_LOGIN / B.TOTAL_PLAYERS, 2) AS FRACTION FROM (SELECT SUM(CASE WHEN ABS(DATEDIFF(MIN_DATE, EVENT_DATE)) = 1 THEN 1 ELSE 0 END) AS NEXT_DAY_LOGIN , COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYERS FROM FIRST_DATE_CTE) B"
357,Y,N,"WITH T AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(T.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A RIGHT JOIN T ON A.PLAYER_ID = T.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, T.FIRST_LOGIN) = 1"
358,Y,N,"SELECT ROUND(SUM(CASE WHEN A.PLAYER_ID IS NULL THEN 0 ELSE 1 END)/COUNT(TMP.PLAYER_ID)*1.0,2)AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1) TMP LEFT JOIN (SELECT DISTINCT PLAYER_ID, EVENT_DATE FROM ACTIVITY) A ON TMP.PLAYER_ID=A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,TMP.FIRST_DATE)=1"
359,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) , SECOND_DAY AS ( SELECT DISTINCT A.PLAYER_ID FROM ACTIVITY A LEFT JOIN FIRST_LOGIN B ON A.PLAYER_ID=B.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, B.FIRST_LOGIN)=1 ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT B.PLAYER_ID),2) AS FRACTION FROM SECOND_DAY A, ACTIVITY B"
360,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE,A1.EVENT_DATE) = 1 WHERE (A1.PLAYER_ID,A1.EVENT_DATE) IN (SELECT PLAYER_ID,MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
361,Y,N,"SELECT ROUND(COUNT(1) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) FROM ACTIVITY GROUP BY PLAYER_ID)"
362,Y,N,"WITH CTE AS( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS MIN_DATE FROM ACTIVITY ) SELECT ROUND((COUNT(DISTINCT PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ),2) AS FRACTION FROM CTE WHERE DATEDIFF(EVENT_DATE,MIN_DATE)=1"
363,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID) / COUNT(A.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) AS A LEFT JOIN ACTIVITY AS B ON A.FIRST_LOGIN = B.EVENT_DATE - 1 AND A.PLAYER_ID = B.PLAYER_ID"
364,Y,N,"WITH TEMP AS (SELECT PLAYER_ID,EVENT_DATE, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS IDX FROM ACTIVITY) SELECT ROUND(COUNT(*)/(SELECT COUNT(DISTINCT TEMP.PLAYER_ID) FROM TEMP),2) AS FRACTION FROM TEMP WHERE TEMP.IDX = 1 AND DATEDIFF(IFNULL(TEMP.NEXT_DATE,TEMP.EVENT_DATE), TEMP.EVENT_DATE) = 1"
365,Y,N,"SELECT ROUND((B2.REPLAYER_NUM / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY) ),2) AS FRACTION FROM ( SELECT COUNT(A1.PLAYER_ID) AS REPLAYER_NUM FROM ACTIVITY AS A1 JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, A2.FIRST_LOGIN) = 1 ) B2"
366,Y,Y,"SELECT ROUND(COUNT(DISTINCT(B.PLAYER_ID))/COUNT(DISTINCT(A.PLAYER_ID)),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE+1 = B.EVENT_DATE"
367,Y,N,"SELECT ROUND(COUNT( DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A1 JOIN (SELECT PLAYER_ID , MIN(EVENT_DATE) AS ED FROM ACTIVITY GROUP BY PLAYER_ID) A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.ED)=1"
368,Y,N,"SELECT ROUND(COUNT(B.PLAYER_ID) / COUNT(A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = DATE_SUB(B.EVENT_DATE, INTERVAL 1 DAY)"
369,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A2, (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_LOGIN) = 1"
370,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE+1 = A2.EVENT_DATE"
371,Y,N,"WITH FIRST_LOGINS AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ), JOINED AS ( SELECT FIRST_LOGINS.*, EVENT_DATE FROM FIRST_LOGINS LEFT OUTER JOIN ACTIVITY ON FIRST_LOGINS.PLAYER_ID = ACTIVITY.PLAYER_ID ) SELECT ROUND(COUNT(IF(DATEDIFF(EVENT_DATE, FIRST_LOGIN) = 1, 1, NULL)) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM JOINED"
372,Y,N,"WITH CTE AS ( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE DATE_ADD(MIN_DATE, INTERVAL 1 DAY) = EVENT_DATE"
373,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT OUTER JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE + 1 = B.EVENT_DATE"
374,Y,N,"SELECT ROUND(COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, DATE_SUB(EVENT_DATE, INTERVAL 1 DAY)) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID)"
375,Y,N,"WITH A AS (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY A1 LEFT JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS DT1 FROM ACTIVITY GROUP BY 1) A USING (PLAYER_ID) WHERE DATEDIFF(A1.EVENT_DATE,A.DT1)=1 ) SELECT ROUND((SELECT * FROM A)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY"
376,Y,N,"SELECT ROUND((SELECT COUNT( DISTINCT A2.PLAYER_ID) FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A1, ACTIVITY AS A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE) = -1)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY"
377,Y,N,"SELECT ROUND(COUNT_CONSEC_TABLE.COUNT_CONSEC/COUNT_TOTAL_TABLE.COUNT_TOTAL,2) AS FRACTION FROM( (SELECT COUNT(PLAYER_ID) AS COUNT_CONSEC FROM (SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREV_DATE FROM ACTIVITY) AS SUB WHERE DATEDIFF(EVENT_DATE, PREV_DATE) = -1 AND RK=1) AS COUNT_CONSEC_TABLE, (SELECT COUNT(DISTINCT PLAYER_ID) AS COUNT_TOTAL FROM ACTIVITY) AS COUNT_TOTAL_TABLE )"
378,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_START_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND((COUNT(DISTINCT C.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)),2)AS FRACTION FROM CTE C JOIN ACTIVITY A ON C.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(C.EVENT_START_DATE, A.EVENT_DATE) = -1"
379,Y,N,"WITH A AS (SELECT A1.PLAYER_ID AS PLAYER_ID,DATEDIFF(EVENT_DATE,MINIMUM_DATE) AS DATE_DIFF FROM ACTIVITY A1 INNER JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MINIMUM_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) AS A2 ON A1.PLAYER_ID=A2.PLAYER_ID) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM A WHERE DATE_DIFF=1)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM A),2) AS FRACTION"
380,Y,Y,"WITH A AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS LOGGED FROM ( SELECT DISTINCT PLAYER_ID,EVENT_DATE,LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE1, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ) AS FIRST_DAY FROM ACTIVITY )A WHERE EVENT_DATE=FIRST_DAY AND NEXT_DATE1-EVENT_DATE=1 ), B AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS PLAYERS FROM ACTIVITY ) SELECT ROUND(A.LOGGED/B.PLAYERS,2) AS FRACTION FROM A,B"
381,Y,Y,"SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM (SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, MIN(EVENT_DATE)OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY) P WHERE P.EVENT_DATE-FIRST_LOGIN=1)/COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM ACTIVITY"
382,Y,Y,"SELECT ROUND((SUM(C) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)), 2) AS FRACTION FROM (SELECT *, CASE WHEN LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) = MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) + 1 THEN 1 ELSE 0 END AS C FROM ACTIVITY AS A) AS T1"
383,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS LOGIN1 FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID) / (SELECT COUNT( DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM CTE T1 INNER JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND DATEDIFF(T2.EVENT_DATE, T1.LOGIN1) = 1"
384,N,N,"WITH T AS ( SELECT PLAYER_ID, EVENT_DATE, MAX(EVENT_DATE) AS MAX, MIN(EVENT_DATE) AS MIN FROM ACTIVITY GROUP BY PLAYER_ID ), T1 AS ( SELECT T.PLAYER_ID, A.EVENT_DATE, MIN FROM T RIGHT JOIN ACTIVITY A ON A.PLAYER_ID = T.PLAYER_ID ) SELECT ROUND(COUNT(CASE WHEN 1 + MIN = T1.EVENT_DATE THEN PLAYER_ID ELSE NULL END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM T1"
385,Y,N,"SELECT ROUND((SELECT COUNT(PLAYER_ID) FROM ACTIVITY WHERE (PLAYER_ID, ADDDATE(EVENT_DATE,-1)) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID))/COUNT(DISTINCT(PLAYER_ID)),2) AS FRACTION FROM ACTIVITY"
386,Y,Y,"WITH W1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) + 1 = EVENT_DATE AS IS_RETURN FROM ACTIVITY) SELECT ROUND(SUM(IS_RETURN)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM W1"
387,Y,N,"SELECT ROUND(C.F1 / D.F2, 2) AS FRACTION FROM (SELECT COUNT(*) AS F1 FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A, ACTIVITY B WHERE A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1) C, (SELECT COUNT(DISTINCT PLAYER_ID) AS F2 FROM ACTIVITY) D"
388,Y,Y,"WITH CTE AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A INNER JOIN CTE ON A.PLAYER_ID = CTE.PLAYER_ID AND A.EVENT_DATE = CTE.FIRST_LOG + 1"
389,Y,Y,"WITH DATES AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A.PLAYER_ID)/COUNT(D.PLAYER_ID), 2) FRACTION FROM DATES D LEFT JOIN ACTIVITY A ON A.PLAYER_ID = D.PLAYER_ID AND A.EVENT_DATE = D.FIRST_DAY + 1"
390,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN ( SELECT DISTINCT A2.PLAYER_ID FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DT FROM ACTIVITY GROUP BY PLAYER_ID ) AS A1 INNER JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN_DT = A2.EVENT_DATE - 1 ) B ON A.PLAYER_ID = B.PLAYER_ID"
391,Y,N,"WITH CTE AS (SELECT *, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY) SELECT ROUND((COUNT(DISTINCT(CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE) = 1 THEN PLAYER_ID ELSE NULL END)))/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CTE WHERE RNK =1"
392,Y,N,"SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID=B.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, B.EVENT_DATE)=1"
393,Y,N,"WITH TOTAL_NUM AS (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL FROM ACTIVITY), FIRST_DAY AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTDAY FROM ACTIVITY GROUP BY PLAYER_ID), NUM_PLAYERS AS (SELECT COUNT(DISTINCT A.PLAYER_ID) AS NUM FROM ACTIVITY AS A, ACTIVITY AS B, FIRST_DAY WHERE A.EVENT_DATE = B.EVENT_DATE - INTERVAL 1 DAY AND A.PLAYER_ID = B.PLAYER_ID AND A.PLAYER_ID = FIRST_DAY.PLAYER_ID AND A.EVENT_DATE = FIRST_DAY.FIRSTDAY) SELECT ROUND(NUM_PLAYERS.NUM / TOTAL_NUM.TOTAL, 2) AS FRACTION FROM TOTAL_NUM, NUM_PLAYERS"
394,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LEAD_DATE, RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK FROM ACTIVITY ) SELECT ROUND(1.00 * COUNT(DISTINCT PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID)FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE DATEDIFF(LEAD_DATE,EVENT_DATE) = 1 AND RNK = 1"
395,N,N,"SELECT ROUND(IFNULL(COUNT(DISTINCT PLAYER_ID),0)/T1.TOTAL,2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE , ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS IDX FROM ACTIVITY GROUP BY PLAYER_ID,EVENT_DATE ) T JOIN (SELECT COUNT(DISTINCT PLAYER_ID ) AS TOTAL FROM ACTIVITY) T1 WHERE IDX=1 AND (DATEDIFF(T.NEXT_DATE , EVENT_DATE)) = 1 AND T.NEXT_DATE IS NOT NULL"
396,Y,N,"SELECT ROUND(COUNT(DISTINCT (A.PLAYER_ID))/(SELECT COUNT(DISTINCT (PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM (SELECT *, LAG(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREV_DATE , ROW_NUMBER () OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROWN FROM ACTIVITY) A WHERE A.ROWN = 2 AND DATEDIFF(A.EVENT_DATE,A.PREV_DATE) = 1"
397,N,N,"WITH A AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN, DATEDIFF(LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE), EVENT_DATE) AS DATE_DIFF FROM ACTIVITY) , B AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN, DATE_DIFF FROM A GROUP BY PLAYER_ID HAVING DATE_DIFF=1 ) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM B"
398,Y,N,"SELECT ROUND( (SELECT COUNT(DISTINCT PLAYER_ID) FROM (SELECT *, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NEXT_LOGIN, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS EVENT_RANK FROM ACTIVITY) T WHERE DATEDIFF(NEXT_LOGIN,EVENT_DATE)=1 AND EVENT_RANK=1) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
399,Y,Y,"SELECT ROUND( COUNT(DISTINCT A.PLAYER_ID)/( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) , 2) AS FRACTION FROM ACTIVITY A, (SELECT MIN(B.EVENT_DATE) AS EVENT_DATE, PLAYER_ID FROM ACTIVITY B GROUP BY B.PLAYER_ID ) AS B WHERE A.EVENT_DATE - 1 = B.EVENT_DATE AND A.PLAYER_ID = B.PLAYER_ID"
400,Y,N,"WITH T AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID)/ COUNT(T.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A RIGHT JOIN T ON A.PLAYER_ID = T.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, T.FIRST_LOGIN) = 1"
401,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY FROM ACTIVITY ) SELECT ROUND( SUM(CASE WHEN DATEDIFF(NEXT_DAY, FIRST_LOGIN) = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID) , 2) AS FRACTION FROM CTE"
402,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE),2) AS FRACTION FROM CTE WHERE DATEDIFF(NEXT_DAY, FIRST_LOGIN) = 1"
403,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A2, (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRSTLOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRSTLOGIN) = 1"
404,Y,N,"WITH FIRST_LOGINS AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM FIRST_LOGINS A INNER JOIN ACTIVITY B ON B.EVENT_DATE = DATE_ADD(A.FIRST_LOGIN, INTERVAL 1 DAY) AND A.PLAYER_ID = B.PLAYER_ID"
405,Y,Y,"WITH CTE AS ( SELECT COUNT(DISTINCT B.PLAYER_ID) AS NEXTDAYPLAYERS, COUNT(DISTINCT A.PLAYER_ID) AS TOTALPLAYERS FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY AS B ON A.EVENT_DATE = B.EVENT_DATE - 1 AND A.PLAYER_ID = B.PLAYER_ID ) SELECT ROUND(NEXTDAYPLAYERS/TOTALPLAYERS, 2) AS FRACTION FROM CTE"
406,Y,N,"WITH A AS ( SELECT COUNT(DISTINCT(PLAYER_ID)) AS CON_PLAYER FROM ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_DATE FROM ACTIVITY ) AS A WHERE DATEDIFF(EVENT_DATE,FIRST_DATE) = 1), B AS ( SELECT COUNT(DISTINCT(PLAYER_ID)) AS TOTAL FROM ACTIVITY ) SELECT ROUND((SELECT CON_PLAYER FROM A)/(SELECT TOTAL FROM B),2) AS FRACTION"
407,Y,Y,"WITH TEMP AS (SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DAY FROM ACTIVITY) SELECT ROUND((COUNT(DISTINCT( CASE WHEN EVENT_DATE - FIRST_DAY = 1 THEN PLAYER_ID ELSE NULL END)) / COUNT(DISTINCT PLAYER_ID)),2) AS FRACTION FROM TEMP"
408,Y,N,"SELECT ROUND(SUM(RESULT)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT IF(DATEDIFF(B.EVENT_DATE, A.EVENT_DATE)= 1,1,0)AS RESULT, A.PLAYER_ID FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID)C"
409,N,N,"SELECT ROUND(A3.F1/COUNT(DISTINCT(ACT.PLAYER_ID)), 2) AS FRACTION FROM ACTIVITY ACT, (SELECT COUNT(DISTINCT(A2.PLAYER_ID)) AS F1 FROM (SELECT DISTINCT(PLAYER_ID) AS ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP, ACTIVITY A2 WHERE TEMP.ID = A2.PLAYER_ID AND TEMP.EVENT_DATE + 1 = A2.EVENT_DATE) A3"
410,Y,Y,"WITH CTE AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A INNER JOIN CTE ON A.PLAYER_ID = CTE.PLAYER_ID AND A.EVENT_DATE = CTE.FIRST_LOG + 1"
411,Y,N,"WITH FIRSTLOGIN AS( SELECT PLAYER_ID ,MIN(EVENT_DATE) AS F_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(A.PLAYER_ID) /COUNT(FL.PLAYER_ID) ,2) AS FRACTION FROM FIRSTLOGIN FL LEFT JOIN ACTIVITY A ON FL.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,F_LOGIN) = 1"
412,N,N,"WITH RANKING AS ( SELECT PLAYER_ID, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RN, (LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) - EVENT_DATE) AS DATE_DIFF FROM ACTIVITY), FILTERED AS ( SELECT COUNT(*) AS COUNT FROM RANKING WHERE RN = 1 AND DATE_DIFF = 1) SELECT ROUND(F.COUNT / COUNT(DISTINCT(A.PLAYER_ID)), 2) AS FRACTION FROM ACTIVITY A, FILTERED F"
413,Y,Y,"WITH CTE AS (SELECT A.*, D1.DAY1 FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE)AS DAY1 FROM ACTIVITY GROUP BY 1 ORDER BY 1) D1 JOIN ACTIVITY A ON D1.PLAYER_ID=A.PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT (CASE WHEN EVENT_DATE - DAY1=1 THEN PLAYER_ID ELSE NULL END))/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CTE"
414,Y,N,"WITH FIRST_AND_SECOND_LOGINS AS ( SELECT PLAYER_ID, EVENT_DATE FROM ( SELECT ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) RN , PLAYER_ID , EVENT_DATE FROM ACTIVITY ) ORDERED_LOGINS WHERE RN <= 2 ), CONSECUTIVE_DAYS_MARKED AS ( SELECT A.PLAYER_ID , A.EVENT_DATE FIRST_LOGIN , B.EVENT_DATE SECOND_LOGIN , CASE WHEN DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1 THEN 1 ELSE 0 END IS_CONSECUTIVE_DAYS FROM FIRST_AND_SECOND_LOGINS A LEFT JOIN FIRST_AND_SECOND_LOGINS B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE < B.EVENT_DATE ) SELECT ROUND(SUM(IS_CONSECUTIVE_DAYS) / COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM CONSECUTIVE_DAYS_MARKED"
415,Y,N,"SELECT ROUND((SUM(CASE WHEN DATEDIFF(EVENT_DATE, FIRST_LOGIN) = 1 THEN 1 ELSE 0 END))/ COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) TMP USING(PLAYER_ID)"
416,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A2, (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_LOGIN) = 1"
417,N,N,"SELECT ROUND(AVG(LOG_IN_NEXT_DAY),2) AS FRACTION FROM (SELECT T1.PLAYER_ID, MAX(CASE WHEN LAG1 IS NULL THEN 0 WHEN DATEDIFF(EVENT_DATE,LAG1) = 1 THEN 1 ELSE 0 END) AS LOG_IN_NEXT_DAY FROM (WITH T10 AS (SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LAG1 FROM ACTIVITY) SELECT A1.PLAYER_ID, A1.EVENT_DATE, A1.LAG1 FROM T10 AS A1 RIGHT JOIN (SELECT PLAYER_ID,EVENT_DATE,MIN(LAG1) AS LAG11 FROM T10 GROUP BY PLAYER_ID) AS B1 ON A1.LAG1 = B1.LAG11 AND A1.PLAYER_ID = B1.PLAYER_ID) AS T1 GROUP BY T1.PLAYER_ID) T2"
418,Y,N,"SELECT ROUND(COUNT(ALL_.PLAYER_ID)/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY AS ALL_ JOIN( SELECT T1.PLAYER_ID ,DATE_ADD(T1.MIN_DATE,INTERVAL 1 DAY) AS DAY_2 FROM( SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T1) AS INNER_ ON ALL_.PLAYER_ID = INNER_.PLAYER_ID AND ALL_.EVENT_DATE = INNER_.DAY_2"
419,Y,N,"WITH TEMP AS( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DATE FROM ACTIVITY) SELECT ROUND( COUNT(DISTINCT TEMP.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2 ) AS FRACTION FROM TEMP WHERE DATEDIFF(EVENT_DATE, TEMP.FIRST_DATE) = 1"
420,Y,N,"WITH CTE AS( SELECT PLAYER_ID,EVENT_DATE,LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) NXT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ) MIN_DATE FROM ACTIVITY) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE),2) AS FRACTION FROM CTE WHERE DATEDIFF(NXT_DATE,MIN_DATE)=1"
421,Y,Y,"WITH T1 AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1,EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LEAD_DAY, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS ROW_NUM FROM ACTIVITY) SELECT ROUND(COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM T1 WHERE LEAD_DAY - EVENT_DATE = 1 AND ROW_NUM = 1"
422,Y,N,"SELECT ROUND(COUNT(DISTINCT N.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID)FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY AS A LEFT JOIN(SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) AS N ON A.PLAYER_ID = N.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, N.FIRST_LOGIN) = 1"
423,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM CTE A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE)=1"
424,Y,N,"WITH UNIQUE_EVENTS AS ( SELECT DISTINCT PLAYER_ID, EVENT_DATE FROM ACTIVITY ) SELECT ROUND( SUM(T2.EVENT_DATE IS NOT NULL)/COUNT(DISTINCT T1.PLAYER_ID), 2 ) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DAY FROM UNIQUE_EVENTS GROUP BY PLAYER_ID ) T1 LEFT JOIN UNIQUE_EVENTS T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN_DAY + INTERVAL 1 DAY = T2.EVENT_DATE"
425,Y,Y,"WITH CTE AS(SELECT PLAYER_ID,EVENT_DATE,MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ) AS LG FROM ACTIVITY) SELECT ROUND(SUM( CASE WHEN ABS(EVENT_DATE-LG)=1 THEN 1 ELSE 0 END)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE ABS(EVENT_DATE-LG)=1"
426,Y,N,"SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM( SELECT PLAYER_ID, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID)) AS DIFF FROM ACTIVITY) AS T WHERE DIFF = 1"
427,Y,N,"WITH FIRST_SIGNIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), GOOD_PLAYERS AS ( SELECT A.PLAYER_ID FROM ACTIVITY AS A INNER JOIN FIRST_SIGNIN AS B ON A.PLAYER_ID = B.PLAYER_ID AND DATE(A.EVENT_DATE) = DATE(DATE_ADD(B.EVENT_DATE, INTERVAL 1 DAY)) ) SELECT ROUND((SELECT COUNT(*) FROM GOOD_PLAYERS) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
428,Y,N,"SELECT ROUND(AVG(FINAL),2) AS FRACTION FROM ( SELECT C.PLAYER_ID, MAX(YES) AS FINAL FROM (SELECT A.PLAYER_ID, CASE WHEN DATEDIFF(A.EVENT_DATE,B.FIRST)=1 THEN 1 ELSE 0 END AS YES FROM ACTIVITY AS A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST FROM ACTIVITY GROUP BY PLAYER_ID) AS B ON A.PLAYER_ID=B.PLAYER_ID) AS C GROUP BY C.PLAYER_ID ) AS D"
429,Y,N,"SELECT ROUND((SELECT COUNT(*) FROM (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) FROM ACTIVITY GROUP BY PLAYER_ID)) T) / COUNT(DISTINCT(PLAYER_ID)), 2) AS FRACTION FROM ACTIVITY"
430,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY AS A LEFT JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) AS B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.FIRST_LOGIN) = 1"
431,Y,N,"WITH TEMP AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN TEMP A2 ON A2.PLAYER_ID = A1.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE) = 1"
432,Y,Y,"SELECT ROUND(COUNT(DISTINCT PLAYER_COPY)/COUNT(DISTINCT PLAYER),2) AS FRACTION FROM (SELECT PLAYER_ID AS PLAYER, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN (SELECT PLAYER_ID AS PLAYER_COPY, EVENT_DATE FROM ACTIVITY) A2 ON A1.PLAYER = A2.PLAYER_COPY AND A1.FIRST_DATE+1 = A2.EVENT_DATE"
433,Y,N,"SELECT ROUND(COUNT(LOGIN_ACTIVITY.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE, 2) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS TWO_DAYS_BEFORE, LAG(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ONE_DAYS_BEFORE FROM ACTIVITY ) LOGIN_ACTIVITY WHERE TWO_DAYS_BEFORE IS NULL AND ONE_DAYS_BEFORE IS NOT NULL AND EVENT_DATE = DATE_ADD(ONE_DAYS_BEFORE, INTERVAL 1 DAY)"
434,Y,Y,"WITH CTE_1 AS (SELECT COUNT(DISTINCT PLAYER_ID) AS CNT FROM( (SELECT A.PLAYER_ID FROM ACTIVITY A INNER JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) EDT FROM ACTIVITY GROUP BY PLAYER_ID ) B WHERE A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE = B.EDT+1)) C ) SELECT ROUND(CNT/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE_1"
435,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID) AS FRACTION FROM ACTIVITY),2) AS FRACTION FROM ( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ) AS MN FROM ACTIVITY) A WHERE DATEDIFF(EVENT_DATE , MN) =1"
436,Y,Y,"WITH CT1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY A GROUP BY 1) SELECT ROUND(COUNT(B.EVENT_DATE) / COUNT( CT1.PLAYER_ID),2) AS FRACTION FROM CT1 LEFT JOIN ACTIVITY B ON B.PLAYER_ID = CT1.PLAYER_ID AND CT1.EVENT_DATE + 1 = B.EVENT_DATE"
437,Y,N,"SELECT ROUND(SUM(R)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT A.PLAYER_ID, IF(DATEDIFF(A.EVENT_DATE, B.FIRST_LOGIN) = 1, 1, 0) AS R FROM ACTIVITY AS A INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS B ON A.PLAYER_ID = B.PLAYER_ID) AS A"
438,Y,N,"(SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID ,IF (DATE_ADD(MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID), INTERVAL 1 DAY) =LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY PLAYER_ID,EVENT_DATE),1,0) AS NUM_CONSEC_DAYS FROM ACTIVITY )TEMP WHERE TEMP.NUM_CONSEC_DAYS>0)"
439,Y,N,"WITH LEADED AS( SELECT PLAYER_ID, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN , MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(PLAYER_ID) / ( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM LEADED WHERE DATEDIFF(NEXT_LOGIN, FIRST_LOGIN) = 1"
440,Y,N,"WITH X AS ( SELECT PLAYER_ID, IF(DATEDIFF(EVENT_DATE, LAG(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) =1, 1, NULL) AS DIFF, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANKING FROM ACTIVITY ) SELECT ROUND(SUM(IF(DIFF = 1 AND RANKING = 2, 1, 0))/COUNT(DISTINCT(PLAYER_ID)),2) AS FRACTION FROM X"
441,Y,N,"WITH ACTIVITY1 AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY1),2) AS FRACTION FROM ACTIVITY1 A1 INNER JOIN ACTIVITY A2 USING(PLAYER_ID) WHERE DATEDIFF(A2.EVENT_DATE,A1.EVENT_DATE) =1"
442,Y,N,"SELECT ROUND(SUM(CASE WHEN MIN_LOGIN_DIFF = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, DATEDIFF(EVENT_DATE,MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID)) AS MIN_LOGIN_DIFF FROM ACTIVITY) SUB"
443,Y,N,"WITH CTE AS (SELECT *, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC)AS MIN_DATE FROM ACTIVITY) SELECT ROUND ( COUNT(*) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE DATE_ADD(MIN_DATE,INTERVAL 1 DAY) = EVENT_DATE"
444,Y,N,"WITH A1 AS( SELECT PLAYER_ID, MIN(EVENT_DATE) + INTERVAL 1 DAY AS NEXT_DAY FROM ACTIVITY GROUP BY PLAYER_ID ), B AS ( SELECT COUNT(DISTINCT A1.PLAYER_ID) AS COUNT1 FROM A1 INNER JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.NEXT_DAY = A2.EVENT_DATE ), C AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS COUNT2 FROM ACTIVITY ) SELECT ROUND(B.COUNT1 / C.COUNT2, 2) AS FRACTION FROM B, C"
445,Y,Y,"SELECT ROUND((SUM(FIRST_LOGIN_DATE)/ COUNT(DISTINCT PLAYER_ID)),2) AS FRACTION FROM ( SELECT *, (CASE WHEN EVENT_DATE-MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) =1 THEN 1 ELSE 0 END) AS FIRST_LOGIN_DATE FROM ACTIVITY) ABC"
446,Y,N,"WITH CTE AS (SELECT PLAYER_ID,MIN(EVENT_DATE)AS FIRSTLOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(SUM(CASE WHEN DATEDIFF(A.EVENT_DATE,CTE.FIRSTLOGIN)=1 THEN 1 ELSE 0 END) / COUNT(DISTINCT CTE.PLAYER_ID), 2) AS FRACTION FROM CTE JOIN ACTIVITY A ON CTE.PLAYER_ID = A.PLAYER_ID"
447,Y,N,"SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID,EVENT_DATE,ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANK,LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN FROM ACTIVITY ) LOGIN_TABLE WHERE LOGIN_TABLE.LOGIN_RANK = 1 AND DATEDIFF(LOGIN_TABLE.NEXT_LOGIN, LOGIN_TABLE.EVENT_DATE) = 1"
448,Y,Y,"SELECT CAST((COUNT(DISTINCT SQ2.PLAYER_ID)/COUNT(DISTINCT SQ1.PLAYER_ID)) AS DECIMAL(4,2)) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SQ1 LEFT OUTER JOIN ACTIVITY SQ2 ON SQ1.PLAYER_ID = SQ2.PLAYER_ID AND SQ1.FIRST_LOGIN_DATE + 1 = SQ2.EVENT_DATE"
449,Y,Y,"SELECT ROUND(COUNT(T1.PLAYER_ID)/COUNT(T2.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T2 LEFT JOIN ACTIVITY T1 ON T2.PLAYER_ID=T1.PLAYER_ID AND T2.FIRST_LOGIN = T1.EVENT_DATE -1"
450,Y,N,"WITH FIRST_LOGINS AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ), NEXT_DAYS AS ( SELECT PLAYER_ID, DATE_ADD(FIRST_LOGIN, INTERVAL 1 DAY) AS NEXT_DAY FROM FIRST_LOGINS ), CONSEC_PLAYERS AS ( SELECT COUNT(DISTINCT A.PLAYER_ID) AS CONSEC_PLAYER_COUNT FROM ACTIVITY A INNER JOIN NEXT_DAYS N ON A.PLAYER_ID = N.PLAYER_ID AND A.EVENT_DATE = N.NEXT_DAY ), UNIQUE_PLAYERS AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYER_COUNT FROM ACTIVITY ) SELECT ROUND(CONSEC_PLAYER_COUNT/TOTAL_PLAYER_COUNT,2) AS FRACTION FROM UNIQUE_PLAYERS CROSS JOIN CONSEC_PLAYERS"
451,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) ,2) AS FRACTION FROM FIRST_LOGIN A INNER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE) = 1"
452,Y,Y,"SELECT ROUND( SUM(CASE WHEN A.EVENT_DATE = A.FIRST_DAY +1 THEN 1 ELSE 0 END)/COUNT( DISTINCT A.PLAYER_ID),2) FRACTION FROM( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DAY FROM ACTIVITY )A"
453,Y,N,"SELECT ROUND(COL1/COL2,2) AS FRACTION FROM ( SELECT (SELECT COUNT(DISTINCT A.PLAYER_ID) FROM ACTIVITY A, (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS B WHERE A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,B.EVENT_DATE)=1) AS COL1, (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) AS COL2 ) AS T"
454,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,EVENT_DATE FROM ACTIVITY) AS A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE)AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID)AS B ON (A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,B.EVENT_DATE)=1)"
455,Y,Y,"SELECT ROUND((COUNT(A.PLAYER_ID) / COUNT(T.PLAYER_ID)),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T LEFT JOIN ACTIVITY A ON A.PLAYER_ID = T.PLAYER_ID AND T.FIRST_LOGIN = A.EVENT_DATE - 1"
456,Y,Y,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(COUNT(DISTINCT CTE.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM CTE INNER JOIN ACTIVITY B ON CTE.PLAYER_ID = B.PLAYER_ID AND CTE.FIRST_LOGIN + 1 = B.EVENT_DATE"
457,Y,N,"WITH SUMMARY AS ( SELECT * , RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS DATE_RANK FROM ACTIVITY ) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM SUMMARY A, SUMMARY B WHERE A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1 AND A.DATE_RANK = 1"
458,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1, ACTIVITY A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A1.FIRST_LOGIN) = 1"
459,Y,N,"SELECT ROUND(COUNT(DISTINCT P.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY Q,(SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) P WHERE P.PLAYER_ID = Q.PLAYER_ID AND DATEDIFF(Q.EVENT_DATE, P.FIRST_LOGIN) = 1"
460,Y,N,"WITH CONTINUEDAY AS ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) MIN_DATE FROM ACTIVITY A ) SELECT ROUND(SUM(CNT1)/SUM(CNT2),2) AS FRACTION FROM ( SELECT CAST(SUM(CASE WHEN ABS(DATEDIFF(MIN_DATE, EVENT_DATE)) = 1 THEN 1 ELSE 0 END) AS FLOAT) AS CNT1, CAST(COUNT(DISTINCT PLAYER_ID) AS FLOAT) AS CNT2 FROM CONTINUEDAY GROUP BY PLAYER_ID ) B"
461,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRSTLOGINDATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID=T2.PLAYER_ID AND T2.EVENT_DATE = T1.FIRSTLOGINDATE+1"
462,Y,N,"WITH T AS (SELECT PLAYER_ID, DATEDIFF(EVENT_DATE,MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID )) AS MIN_LOGIN_DIFF FROM ACTIVITY) SELECT ROUND(SUM( CASE WHEN MIN_LOGIN_DIFF=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM T"
463,Y,N,"SELECT ROUND( (SELECT COUNT(DISTINCT A.PLAYER_ID) FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.EVENT_DATE) = -1 ) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
464,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A1 JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE) =1"
465,Y,Y,"WITH TMP AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_LOGIN, EVENT_DATE, LAG(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS EVENT_DATE_LAG FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM TMP WHERE EVENT_DATE_LAG = FIRST_LOGIN AND EVENT_DATE_LAG = EVENT_DATE - 1) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM ACTIVITY"
466,Y,N,"SELECT ROUND( W.TARGET_PLAYERS/Z.TOTAL_PLAYERS, 2) AS FRACTION FROM (SELECT COUNT(*) AS TARGET_PLAYERS FROM ( SELECT *, DATE_ADD(X.FIRST_LOGIN, INTERVAL 1 DAY) AS NEXT_DAY FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS X ) AS Y JOIN ACTIVITY AS A ON Y.PLAYER_ID = A.PLAYER_ID AND Y.NEXT_DAY = A.EVENT_DATE) AS W CROSS JOIN ( SELECT COUNT(*) AS TOTAL_PLAYERS FROM (SELECT DISTINCT(PLAYER_ID) FROM ACTIVITY) AS U ) AS Z"
467,Y,Y,"WITH TT AS (SELECT PLAYER_ID, EVENT_DATE-LAG(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LAGO , RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM TT WHERE RNK=2 AND LAGO=1"
468,Y,N,"SELECT ROUND(COUNT(CASE WHEN DATE_ADD(A.EVENT_DATE, INTERVAL 1 DAY) = A.NEXT_EVENT_DATE AND NUMS=1 THEN A.PLAYER_ID ELSE NULL END)/ COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC ) AS NEXT_EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC ) AS NUMS FROM ACTIVITY) A"
469,Y,Y,"SELECT ROUND(( SELECT COUNT(DISTINCT A2.PLAYER_ID) C1 FROM ACTIVITY A1, ( SELECT A3.PLAYER_ID, MIN(A3.EVENT_DATE) EVENT_DATE FROM ACTIVITY A3 GROUP BY A3.PLAYER_ID ) A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND (A1.EVENT_DATE = A2.EVENT_DATE + 1) ) / COUNT(DISTINCT A3.PLAYER_ID),2) FRACTION FROM ACTIVITY A3"
470,Y,N,"WITH CTE AS (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYER FROM ACTIVITY) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT TOTAL_PLAYER FROM CTE), 2) AS FRACTION FROM (SELECT PLAYER_ID,EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RK, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NXT_DAY FROM ACTIVITY) X WHERE RK = 1 AND DATEDIFF(NXT_DAY, EVENT_DATE)=1"
471,Y,N,"WITH FIRSTEVENT AS ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY ) SELECT ROUND(SUM(NUMERATOR) / SUM(DENOMINATOR), 2) AS FRACTION FROM ( SELECT CAST( SUM( CASE WHEN DATEDIFF(EVENT_DATE, MIN_DATE) = 1 THEN 1 ELSE 0 END ) AS FLOAT) AS NUMERATOR, CAST(COUNT(DISTINCT PLAYER_ID) AS FLOAT) AS DENOMINATOR FROM FIRSTEVENT GROUP BY PLAYER_ID ) A"
472,Y,N,"WITH CTE AS (SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS MIN_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(*) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM CTE WHERE DATEDIFF(EVENT_DATE,MIN_DATE) = 1"
473,Y,N,"WITH T1 AS( SELECT PLAYER_ID, MIN(EVENT_DATE) MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) FRACTION FROM ACTIVITY A, T1 WHERE A.PLAYER_ID = T1.PLAYER_ID AND A.EVENT_DATE = DATE_ADD(MIN_DATE, INTERVAL +1 DAY)"
474,Y,Y,"WITH TEMP AS ( SELECT PLAYER_ID, FIRST_VALUE(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC ) AS FIRST_LOGIN, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(CASE WHEN FIRST_LOGIN = NEXT_LOGIN - 1 THEN 1 END)/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM TEMP"
475,Y,N,"WITH FIRST_LOGINS AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_EVENT_DATE FROM ACTIVITY GROUP BY 1) SELECT ROUND(A.NUM_PLAYERS_LOGGED_IN_NEXT_DAY/B.TOTAL_NUM_PLAYERS, 2) AS FRACTION FROM (SELECT COUNT(DISTINCT ACTIVITY.PLAYER_ID) AS NUM_PLAYERS_LOGGED_IN_NEXT_DAY FROM FIRST_LOGINS INNER JOIN ACTIVITY ON FIRST_LOGINS.PLAYER_ID = ACTIVITY.PLAYER_ID AND DATE_ADD(FIRST_LOGINS.FIRST_EVENT_DATE, INTERVAL 1 DAY) = DATE(ACTIVITY.EVENT_DATE)) A, (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_NUM_PLAYERS FROM ACTIVITY) B"
476,Y,N,"WITH CTE AS ( SELECT DISTINCT PLAYER_ID FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANK, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) LEAD_DATE FROM ACTIVITY ) A WHERE DATEDIFF(LEAD_DATE,EVENT_DATE) = 1 AND LEAD_DATE IS NOT NULL AND LOGIN_RANK =1 ) SELECT ROUND(COUNT(*)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM CTE"
477,Y,N,"SELECT ROUND(COUNT(DISTINCT TEMP.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP JOIN ACTIVITY ON ACTIVITY.PLAYER_ID = TEMP.PLAYER_ID AND DATEDIFF(ACTIVITY.EVENT_DATE, FIRST_LOGIN) = 1"
478,Y,N,"WITH FIRST_LOGIN AS ( SELECT *, FIRST_VALUE(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM FIRST_LOGIN A LEFT JOIN FIRST_LOGIN A2 ON A.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE, A.FIRST_LOGIN) = 1"
479,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID), 2 ) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_LOGIN = B.EVENT_DATE - 1"
480,Y,N,"WITH TEMP AS ( SELECT *, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID)) AS DIFF FROM ACTIVITY ) SELECT ROUND(COUNT(CASE WHEN DIFF=1 THEN 1 ELSE NULL END)/COUNT(DISTINCT(PLAYER_ID)),2) AS FRACTION FROM TEMP"
481,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) AS T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE - 1"
482,Y,Y,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE - LAG(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) DIFF , ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) ROW FROM ACTIVITY ) T WHERE DIFF =1 AND ROW =2"
483,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/(COUNT(A.PLAYER_ID)),2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS FLD FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND A.FLD+1=B.EVENT_DATE"
484,Y,N,"WITH TEMP AS ( SELECT COUNT(DISTINCT PLAYER_ID) FROM ( SELECT PLAYER_ID,EVENT_DATE, DATEDIFF(LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE),EVENT_DATE) AS DIFF, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS MYROW FROM ACTIVITY ) B WHERE DIFF = 1 AND MYROW = 1 ) SELECT ROUND(IFNULL((SELECT * FROM TEMP)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),0),2) AS FRACTION"
485,Y,Y,"WITH ACTIVITYCTE AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DATE_RANK FROM ACTIVITY), FINALACTIVTY AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL, SUM(CASE WHEN ABS(EVENT_DATE - NEXT_DATE) = 1 THEN 1 ELSE 0 END) AS NUMERATOR FROM ACTIVITYCTE WHERE DATE_RANK = 1) SELECT ROUND(NUMERATOR/ TOTAL,2) AS FRACTION FROM FINALACTIVTY"
486,Y,Y,"SELECT ROUND(SUM(CASE WHEN A.MIN +1 = A2.EVENT_DATE THEN 1 ELSE 0 END) / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN FROM ACTIVITY GROUP BY 1) A JOIN ACTIVITY A2 ON A.PLAYER_ID = A2.PLAYER_ID"
487,Y,N,"WITH U2 AS ( SELECT PLAYER_ID FROM (SELECT DISTINCT PLAYER_ID, COALESCE(NTH_VALUE(EVENT_DATE, 2) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE), '1900-01-01') AS SECOND_EVENT_DATE, FIRST_VALUE(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_EVENT_DATE FROM ACTIVITY) AS T2 WHERE DATEDIFF(SECOND_EVENT_DATE, FIRST_EVENT_DATE) = 1 ) SELECT ROUND(COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM U2"
488,Y,N,"WITH CTE AS ( SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID)AS MIN_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT CTE.PLAYER_ID) / (SELECT COUNT(DISTINCT A.PLAYER_ID) FROM ACTIVITY A), 2) AS FRACTION FROM CTE JOIN ACTIVITY A2 ON CTE.PLAYER_ID=A2.PLAYER_ID AND DATE_ADD(MIN_DATE, INTERVAL 1 DAY)=A2.EVENT_DATE"
489,Y,N,"SELECT ROUND(SUM(CNT)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) EVENT_DATE,COUNT(DISTINCT PLAYER_ID) CNT FROM ACTIVITY GROUP BY PLAYER_ID)A1 JOIN ACTIVITY A2 ON DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE)=-1 AND A1.PLAYER_ID=A2.PLAYER_ID"
490,Y,N,"WITH CTE AS ( SELECT PLAYER_ID , DEVICE_ID , DATEDIFF(LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) ,EVENT_DATE) AS DATE_DIFF, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_NUM FROM ACTIVITY ) SELECT ROUND(COUNT(*)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE DATE_DIFF=1 AND ROW_NUM=1"
491,Y,N,"SELECT ROUND(COUNT(E.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT A.PLAYER_ID FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATE_ADD(A.FIRST_DATE, INTERVAL 1 DAY) = B.EVENT_DATE ) AS E"
492,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS EVNT_DT_RANK, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT_DT FROM ACTIVITY ) TEMP WHERE EVNT_DT_RANK=1 AND DATE_ADD(EVENT_DATE,INTERVAL 1 DAY)=NEXT_EVENT_DT"
493,Y,N,"WITH CTE1 AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST FROM ACTIVITY GROUP BY PLAYER_ID), CTE2 AS( SELECT A1.PLAYER_ID FROM CTE1 A1 JOIN ACTIVITY A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND DATEDIFF(A2.EVENT_DATE,FIRST) =1 ) SELECT ROUND((SELECT COUNT(PLAYER_ID)FROM CTE2)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
494,Y,Y,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_LOGIN_DT, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN_DT FROM ACTIVITY ), CTE2 AS ( SELECT COUNT(DISTINCT(PLAYER_ID)) AS NO_CONSEC_PLAYER FROM CTE WHERE NEXT_LOGIN_DT - FIRST_LOGIN_DT = 1 ) SELECT ROUND((SELECT NO_CONSEC_PLAYER FROM CTE2)/ (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2)AS FRACTION FROM ACTIVITY GROUP BY 1"
495,Y,N,"WITH TMP3 AS (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL FROM ACTIVITY), TMP4 AS ( WITH TMP2 AS (WITH TMP AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1, EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NXT FROM ACTIVITY) SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE, MIN(NXT) NXT FROM TMP GROUP BY PLAYER_ID) SELECT COUNT(PLAYER_ID) AS CNT FROM TMP2 WHERE DATEDIFF(NXT, EVENT_DATE) = 1 ) SELECT ROUND(CNT / TOTAL, 2) AS FRACTION FROM TMP4 INNER JOIN TMP3"
496,Y,N,"WITH FIRST_DAY AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT F.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM FIRST_DAY F RIGHT JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, F.FIRST_LOGIN) = 1"
497,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.EVENT_DATE = T2.EVENT_DATE-1"
498,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.EVENT_DATE) = -1"
499,Y,N,"WITH T AS (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS MINDATE FROM ACTIVITY), A AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXTDAY FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM T JOIN A ON T.MINDATE = A.EVENT_DATE AND T.PLAYER_ID=A.PLAYER_ID WHERE DATEDIFF(A.NEXTDAY, A.EVENT_DATE)=1"
500,Y,N,"SELECT ROUND( ( SELECT COUNT(DISTINCT PLAYER_ID) FROM ( SELECT PLAYER_ID, DATEDIFF(LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC), MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC)) AS DDIFF FROM ACTIVITY ) A WHERE DDIFF = 1 ) / ( SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ), 2) AS FRACTION"
501,Y,Y,"WITH CTE AS( SELECT *, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREV_LOGIN, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE PREV_LOGIN IS NULL AND NEXT_LOGIN = EVENT_DATE + 1"
502,Y,N,"SELECT ROUND ( COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) , 2 ) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RN, DATEDIFF(EVENT_DATE, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC)) DDIFF FROM ACTIVITY ) NEST1 WHERE RN = 2 AND DDIFF = 1"
503,Y,Y,"SELECT ROUND( COUNT(DISTINCT PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, DATE(MIN(EVENT_DATE)+1) FROM ACTIVITY GROUP BY PLAYER_ID)"
504,Y,N,"WITH FIRST_LOGIN AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND((SELECT COUNT(*) FROM FIRST_LOGIN F JOIN ACTIVITY A ON DATE_ADD(F.FIRST_DATE,INTERVAL 1 DAY)=A.EVENT_DATE AND F.PLAYER_ID=A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
505,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) + 1 = EVENT_DATE AS IS_RETURN FROM ACTIVITY) SELECT ROUND(SUM(IS_RETURN)/COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM CTE"
506,Y,N,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(EVENT_DATE, FIRST_DATE) = 1"
507,Y,N,"WITH FIRST_LOGINS AS ( SELECT PLAYER_ID, EVENT_DATE FROM ( SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) RN FROM ACTIVITY ) A WHERE RN = 1 ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM ACTIVITY A JOIN FIRST_LOGINS F ON A.PLAYER_ID = F.PLAYER_ID WHERE DATE_ADD(F.EVENT_DATE, INTERVAL 1 DAY) = A.EVENT_DATE"
508,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID) / COUNT(A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1) A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_DATE = B.EVENT_DATE - 1"
509,Y,N,"WITH MIN_ACTIVITY_DATE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(PLAYER_ID) FROM MIN_ACTIVITY_DATE), 2) AS FRACTION FROM MIN_ACTIVITY_DATE M JOIN ACTIVITY A ON A.PLAYER_ID=M.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, M.FIRST_LOG_DATE)=1"
510,Y,N,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY 1) SELECT ROUND(COUNT(DISTINCT CASE WHEN DATEDIFF(EVENT_DATE, FIRST_LOGIN) = 1 THEN A.PLAYER_ID ELSE NULL END)/COUNT(DISTINCT CTE.PLAYER_ID),2) FRACTION FROM ACTIVITY A JOIN CTE USING(PLAYER_ID)"
511,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT OUTER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_LOGIN = DATE_SUB(B.EVENT_DATE, INTERVAL 1 DAY)"
512,Y,N,"SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY T1 LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTLOGIN FROM ACTIVITY GROUP BY PLAYER_ID) T2 ON T1.PLAYER_ID = T2.PLAYER_ID WHERE DATEDIFF(T1.EVENT_DATE, T2.FIRSTLOGIN)=1"
513,Y,Y,"WITH PLAYER_COUNT AS ( SELECT COUNT( DISTINCT A1.PLAYER_ID ) AS NUMPLAYER , 1 AS JKEY FROM ACTIVITY A1 JOIN ( SELECT MIN(EVENT_DATE) AS EVENT_DATE , PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID ) A2 ON A2.PLAYER_ID = A1.PLAYER_ID AND A2.EVENT_DATE + 1 = A1.EVENT_DATE ) SELECT ROUND((NUMPLAYER / CNT),2) AS FRACTION FROM PLAYER_COUNT PC JOIN (SELECT COUNT(DISTINCT PLAYER_ID) AS CNT , 1 JKEY FROM ACTIVITY) AS TOTALPLAYER ON PC.JKEY = TOTALPLAYER.JKEY"
514,Y,N,"WITH FIRST_LOGIN AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ), CONSEC_LOGIN AS ( SELECT A.* FROM FIRST_LOGIN A INNER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.FIRST_LOGIN) =1 ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM CONSEC_LOGIN) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM FIRST_LOGIN),2) AS FRACTION"
515,Y,N,"WITH LOGIN AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RN FROM ACTIVITY ), TARGET_PLAYER AS ( SELECT A.PLAYER_ID FROM ACTIVITY A JOIN LOGIN L ON A.PLAYER_ID = L.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, L.EVENT_DATE) = 1 WHERE RN = 1 ) SELECT ROUND((SELECT COUNT(*) FROM TARGET_PLAYER) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
516,Y,N,"SELECT ROUND(COUNT(DISTINCT T.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, ADDDATE(MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID), INTERVAL 1 DAY) AS DAY_AFTER_FIRST_LOGIN FROM ACTIVITY ) T, ACTIVITY A WHERE (T.PLAYER_ID, T.DAY_AFTER_FIRST_LOGIN) IN ( SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY )"
517,Y,N,"SELECT ROUND(COALESCE(A.LOGGED_USERS, 0) / B.ACTIVE_USERS, 2) AS FRACTION FROM ( SELECT COUNT(DISTINCT (PLAYER_ID)) AS LOGGED_USERS FROM ( SELECT EVENT_DATE, PLAYER_ID, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOG, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_LOG FROM ACTIVITY) AS ACTIVE_USERS WHERE DATEDIFF(NEXT_LOG, FIRST_LOG) = 1 AND EVENT_DATE = FIRST_LOG ) AS A, (SELECT COUNT( DISTINCT (PLAYER_ID)) AS ACTIVE_USERS FROM ACTIVITY) AS B"
518,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT *, LAG(EVENT_DATE,1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) LG, ROW_NUMBER()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) RNK FROM ACTIVITY ) A WHERE DATEDIFF(EVENT_DATE,LG)=1 AND RNK=2"
519,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID)FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LEAD_DATE, RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK FROM ACTIVITY ) CTE1 WHERE DATEDIFF(LEAD_DATE,EVENT_DATE) = 1 AND RNK = 1"
520,Y,N,"SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM( SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, LEAD(EVENT_DATE)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LD_DATE, MIN(EVENT_DATE)OVER(PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY) A WHERE A.EVENT_DATE = A.MIN_DATE AND DATEDIFF(A.LD_DATE,A.EVENT_DATE)=1"
521,Y,Y,"WITH CTE AS (SELECT PLAYER_ID,EVENT_DATE, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREV_LOGIN, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN FROM ACTIVITY) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE PREV_LOGIN IS NULL AND EVENT_DATE + 1 = NEXT_LOGIN"
522,Y,Y,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_LOGIN_DT, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN_DT FROM ACTIVITY ), CTE2 AS ( SELECT PLAYER_ID, FIRST_LOGIN_DT FROM CTE WHERE NEXT_LOGIN_DT - FIRST_LOGIN_DT = 1 ) SELECT ROUND((SELECT COUNT(DISTINCT(PLAYER_ID)) FROM CTE2)/ (SELECT COUNT(DISTINCT(PLAYER_ID))FROM ACTIVITY ),2) AS FRACTION FROM CTE2 C INNER JOIN ACTIVITY A ON C.PLAYER_ID = A.PLAYER_ID GROUP BY 1"
523,Y,N,"SELECT ROUND(COUNT(DISTINCT(PLAYER_ID))/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID ,EVENT_DATE ,LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE ,RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY )X WHERE DATEDIFF(NEXT_DATE,EVENT_DATE) = 1 AND RNK = 1"
524,Y,N,"WITH LEAD_TABLE AS( SELECT PLAYER_ID, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY) SELECT ROUND( COUNT(PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM LEAD_TABLE) ,2) AS FRACTION FROM LEAD_TABLE WHERE DATEDIFF(NEXT_DAY, FIRST_LOGIN) = 1"
525,Y,N,"WITH CTE AS ( SELECT * FROM ( SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) PRV FROM ACTIVITY )T WHERE DATEDIFF(EVENT_DATE, PRV) = 1 AND (PLAYER_ID, PRV) IN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID ) ) SELECT ROUND(IFNULL(COUNT(DISTINCT CTE.PLAYER_ID),0) / COUNT(DISTINCT A.PLAYER_ID),2) FRACTION FROM ACTIVITY A LEFT JOIN CTE USING(PLAYER_ID)"
526,Y,N,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID),2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIR_LOGIN FROM ACTIVITY) A LEFT JOIN (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY) B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.FIR_LOGIN)=1"
527,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DATE_RANK FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT CTE.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE JOIN ACTIVITY A ON CTE.PLAYER_ID = A.PLAYER_ID AND CTE.EVENT_DATE= DATE_ADD(A.EVENT_DATE, INTERVAL -1 DAY) WHERE CTE.DATE_RANK = 1"
528,Y,Y,"WITH CTE AS ( SELECT T1.PLAYER_ID, T1.DEVICE_ID, T1.EVENT_DATE, T1.GAMES_PLAYED FROM ( SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, GAMES_PLAYED FROM (SELECT *, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK FROM ACTIVITY) A WHERE A.RNK=1 ) T1, ACTIVITY T2 WHERE T1.PLAYER_ID=T2.PLAYER_ID AND T2.EVENT_DATE=T1.EVENT_DATE + 1 ) SELECT ROUND(((SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)),2) AS FRACTION"
529,Y,N,"WITH T AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS MDATE FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) AS TOT FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY AS A JOIN T ON A.PLAYER_ID = T.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, MDATE) = 1"
530,Y,N,"SELECT ROUND(SUM( CASE WHEN DATEDIFF(SECOND_DATE,FIRST_DATE)=1 THEN 1 ELSE 0 END )/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ( SELECT DISTINCT PLAYER_ID , NTH_VALUE( EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_DATE , NTH_VALUE( EVENT_DATE, 2) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS SECOND_DATE FROM ( SELECT DISTINCT PLAYER_ID, EVENT_DATE FROM ACTIVITY ) ACT ) MN"
531,Y,N,"SELECT ROUND(SUM(IF(DATEDIFF(A.EVENT_DATE, B.MIN_DATE)=1, 1, 0))/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID = B.PLAYER_ID"
532,Y,N,"WITH CET AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2)AS FRACTION FROM ACTIVITY A JOIN CET ON A.PLAYER_ID = CET.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, CET.FIRST_DAY_LOGIN) = 1"
533,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID) ,2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.LOGIN_DATE = T2.EVENT_DATE-1"
534,Y,Y,"WITH TEMP AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID)/(SELECT COUNT( DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM TEMP T JOIN ACTIVITY A ON T.PLAYER_ID=A.PLAYER_ID AND A.EVENT_DATE-T.MIN_DATE=1"
535,Y,N,"WITH CON_DAY AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANKING FROM ACTIVITY) SELECT ROUND(COUNT(DISTINCT CASE WHEN DATEDIFF(NEXT_DATE,EVENT_DATE)=1 AND RANKING=1 THEN PLAYER_ID END)/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CON_DAY"
536,Y,N,"SELECT ROUND(COUNT(DISTINCT (CASE WHEN EVENT_DATE_FIRST IS NOT NULL THEN A.PLAYER_ID END))/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE_FIRST FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,B.EVENT_DATE_FIRST)=1"
537,Y,N,"WITH CTE AS ( SELECT SUM(CASE WHEN ABS(DATEDIFF(EVENT_DATE,SECOND_LOGIN))=1 THEN 1 ELSE 0 END) AS NUMERATOR FROM (SELECT A.*, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS SECOND_LOGIN, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOGIN_NUM FROM ACTIVITY A ) B WHERE B.LOGIN_NUM=1 ), TOTAL_COUNT AS ( SELECT COUNT(DISTINCT PLAYER_ID) DEN FROM ACTIVITY) SELECT ROUND(NUMERATOR/DEN,2) AS FRACTION FROM CTE,TOTAL_COUNT WHERE 1=1"
538,Y,N,"WITH DF AS (SELECT PLAYER_ID, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LEAD_D, EVENT_DATE, DATEDIFF(EVENT_DATE, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC)) AS DTDF FROM ACTIVITY ), FIRST_LOG AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) MN_DT FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(COUNT(DISTINCT FL.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM DF),2) FRACTION FROM DF JOIN FIRST_LOG FL ON FL.PLAYER_ID = DF.PLAYER_ID AND MN_DT = DF.EVENT_DATE WHERE DTDF = -1"
539,Y,Y,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANKINGS, LEAD(EVENT_DATE,1,NULL) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT CASE WHEN RANKINGS=1 AND CAST(EVENT_DATE+1 AS DATE)=NEXT_LOGIN_DATE THEN PLAYER_ID ELSE NULL END)*1.0/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CTE"
540,Y,Y,"SELECT ROUND(SUM(CASE WHEN T.MIN_EVENT_DATE +1 = A.EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS T JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID"
541,Y,Y,"WITH FIRST_LOGIN AS ( SELECT MIN(EVENT_DATE) AS MIN_DATE, PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(SUM(CASE WHEN F.MIN_DATE = A.EVENT_DATE-1 THEN 1 ELSE 0 END)/COUNT(DISTINCT(A.PLAYER_ID)),2) AS FRACTION FROM FIRST_LOGIN F, ACTIVITY A WHERE F.PLAYER_ID = A.PLAYER_ID"
542,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A1 JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A2 ON A1.PLAYER_ID=A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE)=1"
543,Y,N,"WITH TMP AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS ROW_NUM FROM ACTIVITY ), TMP2 AS ( SELECT PLAYER_ID, CASE WHEN DATEDIFF(NEXT_DATE, EVENT_DATE) =1 THEN 1 ELSE 0 END AS DIFF FROM TMP WHERE ROW_NUM = 1 ) SELECT ROUND((SELECT COUNT(*) FROM TMP2 WHERE DIFF = 1)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
544,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1) T ON A.PLAYER_ID = T.PLAYER_ID AND A.EVENT_DATE = T.FIRST_LOGIN + 1"
545,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOGIN_RANK, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT CASE WHEN DATEDIFF(NEXT_DAY,EVENT_DATE)=1 THEN PLAYER_ID ELSE NULL END)*1.0/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CTE WHERE LOGIN_RANK=1"
546,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE + 1 = A2.EVENT_DATE"
547,Y,N,"WITH FIRST_TIME AS ( SELECT PLAYER_ID ,MIN(EVENT_DATE)OVER(PARTITION BY PLAYER_ID) AS FIRST_LOG_DATE ,LEAD(EVENT_DATE,1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOG_DATE FROM ACTIVITY ) SELECT ROUND( COUNT(PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM FIRST_TIME) ,2) AS FRACTION FROM FIRST_TIME WHERE ABS(DATEDIFF(FIRST_LOG_DATE, NEXT_LOG_DATE)) = 1"
548,Y,N,"WITH FIRST AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST FROM ACTIVITY GROUP BY 1 ), RETURNS AS( SELECT A.PLAYER_ID FROM ACTIVITY A JOIN FIRST F ON DATEDIFF(A.EVENT_DATE,F.FIRST)=1 AND A.PLAYER_ID=F.PLAYER_ID) SELECT ROUND(COUNT(DISTINCT R.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM RETURNS R, ACTIVITY A"
549,Y,N,"SELECT ROUND(SUM(ROW_NUM = 1 AND DATE_DIFF = 1) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM ( SELECT ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS ROW_NUM, PLAYER_ID, DEVICE_ID, GAMES_PLAYED, DATEDIFF(LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC), EVENT_DATE) AS DATE_DIFF FROM ACTIVITY ) AS ACTIVITY_WITH_NEXT_EVENT_DATE"
550,Y,Y,"WITH FIRST_LOGIN AS( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ), SECOND AS( SELECT FIRST_LOGIN.PLAYER_ID AS DAY1, SECOND_LOGIN.PLAYER_ID AS DAY2 FROM FIRST_LOGIN LEFT JOIN ACTIVITY SECOND_LOGIN ON FIRST_LOGIN.PLAYER_ID = SECOND_LOGIN.PLAYER_ID AND FIRST_LOGIN.FIRST_LOGIN + 1 = SECOND_LOGIN.EVENT_DATE ) SELECT ROUND(COUNT(DAY2) / COUNT(DAY1), 2) AS FRACTION FROM SECOND"
551,Y,Y,"WITH FIRST_LOGIN_DAY AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT CAST(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID) AS DECIMAL(13,2)) AS FRACTION FROM FIRST_LOGIN_DAY A LEFT OUTER JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND A.FIRST_DAY=B.EVENT_DATE-1"
552,Y,Y,"WITH FIRST_D AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND (COUNT(F.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN FIRST_D F ON A.PLAYER_ID = F.PLAYER_ID AND A.EVENT_DATE = F.FIRST_LOGIN + 1"
553,Y,Y,"WITH FULL_TEMP AS ( SELECT ACTIVITY.PLAYER_ID, EVENT_DATE - LOGIN_STRT AS LOGIN_DIFF FROM ACTIVITY LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS LOGIN_STRT FROM ACTIVITY GROUP BY PLAYER_ID) AS TEMP ON ACTIVITY.PLAYER_ID = TEMP.PLAYER_ID ) SELECT ROUND(COUNT(CASE WHEN LOGIN_DIFF = 1 THEN LOGIN_DIFF END) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM FULL_TEMP"
554,Y,N,"SELECT ROUND(B.CNT/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION FROM (SELECT COUNT(DISTINCT PLAYER_ID) AS CNT FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DT,LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DT FROM ACTIVITY) A WHERE DATEDIFF(NEXT_DT,FIRST_DT)=1) B"
555,Y,N,"WITH FIRST_DATE AS ( SELECT PLAYER_ID , MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN FIRST_DATE FD ON A.PLAYER_ID = FD.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, FD.FIRST_DATE) = 1"
556,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ORDER BY PLAYER_ID ) SELECT ROUND(COUNT(ACTIVITY.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY JOIN CTE ON CTE.PLAYER_ID = ACTIVITY.PLAYER_ID AND DATEDIFF(ACTIVITY.EVENT_DATE, CTE.FIRST_LOGIN) = 1"
557,Y,N,"WITH DATES AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_DAY, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) NEXT_DAY FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(SUM(CASE WHEN NEXT_DAY = EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID), 2) FRACTION FROM ACTIVITY JOIN DATES USING(PLAYER_ID)"
558,Y,Y,"WITH MOD_ACTIVITY AS (SELECT PLAYER_ID,EVENT_DATE,LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DAY,DENSE_RANK()OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RK FROM ACTIVITY),MOD_COUNT AS(SELECT COUNT(DISTINCT PLAYER_ID) AS C FROM ACTIVITY) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT C FROM MOD_COUNT),2) AS FRACTION FROM MOD_ACTIVITY WHERE NEXT_DAY-EVENT_DATE=1 AND NEXT_DAY IS NOT NULL AND RK=1"
559,Y,N,"SELECT ROUND((COUNT(*) - COUNT(DISTINCT A.PLAYER_ID)) / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS LOG_ON FROM ACTIVITY GROUP BY PLAYER_ID ) AS F ON A.PLAYER_ID = F.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, F.LOG_ON) < 2"
560,Y,Y,"SELECT ROUND(SUM(CASE WHEN FIRST_EVENT-NEXT_EVENT =-1 THEN 1 ELSE 0 END)/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, FIRST_VALUE(EVENT_DATE) OVER( PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) FIRST_EVENT,LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT FROM ACTIVITY) A"
561,Y,N,"SELECT ROUND(IFNULL(COUNT(DISTINCT B.PLAYER_ID),0)/COUNT(DISTINCT A.PLAYER_ID),2)AS FRACTION FROM ACTIVITY A LEFT JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE)=1 WHERE (A.PLAYER_ID,A.EVENT_DATE)IN (SELECT PLAYER_ID,MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
562,Y,N,"WITH CTE AS ( SELECT *, LAG(EVENT_DATE) OVER (ORDER BY PLAYER_ID, EVENT_DATE) AS LAG_ED , ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY PLAYER_ID, EVENT_DATE) AS RN FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(DISTINCT(PLAYER_ID)) FROM CTE WHERE RN = 2 AND DATEDIFF(EVENT_DATE,LAG_ED) = 1) / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION"
563,Y,Y,"SELECT CAST(COUNT(DISTINCT CASE WHEN RN=1 AND NEXT_DATE = EVENT_DATE THEN PLAYER_ID ELSE NULL END) /COUNT(DISTINCT PLAYER_ID) AS DECIMAL(6,2)) AS FRACTION FROM (SELECT *, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) - 1 AS NEXT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RN FROM ACTIVITY) A"
564,Y,Y,"WITH BASE AS (SELECT PLAYER_ID,EVENT_DATE, EVENT_DATE-LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOGIN_NUM FROM ACTIVITY) SELECT ROUND(SUM(CASE NEXT_EVENT WHEN -1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM BASE WHERE LOGIN_NUM=1"
565,Y,N,"WITH LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS F_LOGIN FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(DISTINCT L.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A RIGHT JOIN LOGIN L ON A.PLAYER_ID = L.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, L.F_LOGIN) = 1"
566,N,N,"SELECT ROUND(SUM( CASE WHEN T.LOGIN_DATE + 1 = A.EVENT_DATE THEN 1 ELSE 0 END) / COUNT(DISTINCT T.PLAYER_ID), 2) AS FRACTION FROM( SELECT EVENT_DATE, PLAYER_ID, MIN(EVENT_DATE) AS LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID"
567,Y,Y,"WITH P AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID),2) AS FRACTION FROM P T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN = T2.EVENT_DATE-1"
568,N,N,"SELECT ROUND(T.LOG_AGAIN_PLAYER_COUNT / COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A, ( SELECT COUNT(DISTINCT A1.PLAYER_ID) AS LOG_AGAIN_PLAYER_COUNT FROM ( SELECT DISTINCT A2.PLAYER_ID, NTH_VALUE(A2.EVENT_DATE, 1) OVER (PARTITION BY A2.PLAYER_ID ORDER BY A2.EVENT_DATE) AS FIRST_LOGIN_DATE, NTH_VALUE(A2.EVENT_DATE, 2) OVER (PARTITION BY A2.PLAYER_ID ORDER BY A2.EVENT_DATE RANGE UNBOUNDED PRECEDING) AS SECOND_LOGIN_DATE FROM ACTIVITY A2 ) AS A1 WHERE DATEDIFF(A1.SECOND_LOGIN_DATE, A1.FIRST_LOGIN_DATE) = 1 ) AS T"
569,Y,Y,"WITH CTE AS ( SELECT *, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREV_LOGIN, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE PREV_LOGIN IS NULL AND EVENT_DATE + 1 = NEXT_LOGIN"
570,Y,N,"WITH TEMP AS (SELECT DISTINCT A1.PLAYER_ID, MIN(A1.EVENT_DATE) OVER (PARTITION BY A1.PLAYER_ID) AS E1, A2.EVENT_DATE AS E2 FROM ACTIVITY A1 JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID), LOGIN_AGAIN AS (SELECT * FROM TEMP WHERE E1 = DATE_SUB(E2, INTERVAL 1 DAY)) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM LOGIN_AGAIN) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
571,Y,N,"WITH FIRSTDAYS AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(DISTINCT ACTIVITY.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY JOIN FIRSTDAYS ON ACTIVITY.PLAYER_ID = FIRSTDAYS.PLAYER_ID WHERE DATEDIFF(ACTIVITY.EVENT_DATE, FIRSTDAYS.FIRST_DAY) = 1"
572,Y,N,"SELECT ROUND(SUM(CASE WHEN LOGIN_DIFFERENCE = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT(PLAYER_ID)),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PREVIOUS_LOGIN, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) AS LOGIN_DIFFERENCE FROM ACTIVITY) AS TEMP"
573,Y,N,"SELECT ROUND(SUM(CASE WHEN DATEDIFF(N,F)=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT * , MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS F , LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS N FROM ACTIVITY) AS A"
574,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND A.EVENT_DATE=DATE_ADD(B.EVENT_DATE, INTERVAL -1 DAY) AND (A.PLAYER_ID,A.EVENT_DATE) IN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY 1 )"
575,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RK FROM ACTIVITY ) R WHERE DATEDIFF(NEXT_DATE, EVENT_DATE) = 1 AND RK =1"
576,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A INNER JOIN (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS MIN_EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID=B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,B.MIN_EVENT_DATE)=1"
577,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGING FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE - 1 = A1.FIRST_LOGING"
578,Y,N,"SELECT ROUND(SUM(IF(DATEDIFF(B.EVENT_DATE, A.EVENT_DATE)=1, 1, 0)) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE FROM ( SELECT *, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DATE_RANK FROM ACTIVITY ) T1 WHERE T1.DATE_RANK = 1 ) A LEFT JOIN ( SELECT PLAYER_ID, EVENT_DATE FROM ( SELECT *, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DATE_RANK FROM ACTIVITY ) T2 WHERE T2.DATE_RANK = 2 ) B ON A.PLAYER_ID = B.PLAYER_ID"
579,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID = B.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE , B.FIRST_DATE) =1"
580,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID)/COUNT(DISTINCT T.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1 )T LEFT JOIN ACTIVITY A2 ON A2.EVENT_DATE = DATE_ADD(T.EVENT_DATE, INTERVAL 1 DAY) AND A2.PLAYER_ID = T.PLAYER_ID"
581,N,N,"SELECT ROUND(((SELECT COUNT(PLAYER_ID) AS COUNT_CONSEC FROM ( SELECT PLAYER_ID, FIRST_VALUE(FLAG) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FLAG FROM ( SELECT PLAYER_ID, EVENT_DATE, DATEDIFF((LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)), EVENT_DATE) AS FLAG FROM ACTIVITY ) SUB GROUP BY PLAYER_ID ) SUB1 WHERE FLAG = 1) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)), 2) AS FRACTION"
582,Y,N,"SELECT ROUND(SUM(CASE WHEN CONS > 0 THEN 1 ELSE 0 END) *1.0 / COUNT(*), 2) AS FRACTION FROM( SELECT PLAYER_ID, SUM(CASE WHEN PRE_DATE = EVENT_DATE - INTERVAL 1 DAY THEN 1 ELSE 0 END) AS CONS FROM( SELECT PLAYER_ID, EVENT_DATE, FIRST_VALUE(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS PRE_DATE FROM ACTIVITY )T GROUP BY PLAYER_ID ) T2"
583,Y,N,"SELECT ROUND( COUNT(DISTINCT T.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION FROM ACTIVITY A LEFT JOIN( SELECT PLAYER_ID, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RN, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) DATE_NEXT FROM ACTIVITY )T ON A.PLAYER_ID=T.PLAYER_ID WHERE T.RN=1 AND DATEDIFF(DATE_NEXT, A.EVENT_DATE) = 1"
584,Y,N,"WITH FIRST_DAY AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY 1 ), SECOND_DAY AS ( SELECT FIRST_DAY.PLAYER_ID, CASE WHEN FIRST_DAY + INTERVAL 1 DAY IN (SELECT EVENT_DATE FROM ACTIVITY WHERE PLAYER_ID = FIRST_DAY.PLAYER_ID) THEN 1 ELSE 0 END AS SECOND_DAY FROM FIRST_DAY ) SELECT ROUND(SUM(SECOND_DAY) / COUNT(PLAYER_ID),2) AS FRACTION FROM SECOND_DAY"
585,Y,N,"SELECT ROUND(SUM(CASE WHEN DATEDIFF(A.EVENT_DATE,A.PREVIOUS)=1 AND ROW_N=2 THEN 1 ELSE 0 END)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT *, LAG(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY PLAYER_ID, EVENT_DATE) AS PREVIOUS , DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS ROW_N FROM ACTIVITY) A"
586,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.MIN_DATE = A2.EVENT_DATE -1"
587,Y,Y,"SELECT ROUND(1.0*COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE - MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) DIFF FROM ACTIVITY) D WHERE DIFF = 1"
588,Y,N,"WITH BASE AS (SELECT EVENT_DATE, LEAD(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOGIN_NUM FROM ACTIVITY) SELECT ROUND(SUM(CASE WHEN DATEDIFF(NEXT_EVENT,EVENT_DATE) = '1' THEN 1 ELSE 0 END) / COUNT(*),2) AS FRACTION FROM BASE WHERE LOGIN_NUM = 1"
589,Y,Y,"WITH CTE1 AS( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT(PLAYER_ID)) / (SELECT COUNT(DISTINCT(PLAYER_ID) * 100) FROM ACTIVITY),2) AS FRACTION FROM CTE1 WHERE EVENT_DATE = NEXT_DATE - 1 AND EVENT_DATE = MIN_DATE"
590,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1, CAST('9999-08-29' AS DATE)) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) NEXT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANK FROM ACTIVITY ), TEMP_DIFF AS ( SELECT PLAYER_ID, EVENT_DATE, NEXT_DATE, LOGIN_RANK, DATEDIFF(NEXT_DATE, EVENT_DATE) AS DATE_DIFF FROM TEMP ), TEMP_DIFF_COUNT AS ( SELECT COUNT(DISTINCT(PLAYER_ID)) AS PLY_COUNT FROM TEMP_DIFF WHERE DATE_DIFF = 1 AND LOGIN_RANK = 1 ) SELECT ROUND(PLY_COUNT * 1.0 / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM TEMP_DIFF_COUNT"
591,Y,N,"WITH FIRSTLOG AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), SUMMARY AS ( SELECT F.PLAYER_ID, F.FIRST_DATE, A.EVENT_DATE FROM FIRSTLOG AS F LEFT JOIN ACTIVITY AS A ON F.PLAYER_ID = A.PLAYER_ID WHERE A.EVENT_DATE IS NULL OR DATEDIFF(A.EVENT_DATE, F.FIRST_DATE) = 1 ) SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM FIRSTLOG),2) AS FRACTION FROM SUMMARY"
592,Y,N,"WITH DAYDIFF AS (SELECT PLAYER_ID, EVENT_DATE, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID)) AS DAYS_SINCE_FIRST FROM ACTIVITY) SELECT ROUND(SUM(DAYS_SINCE_FIRST=1)/COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM DAYDIFF"
593,Y,N,"SELECT ROUND(COUNT(*) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN ( SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) FROM ACTIVITY GROUP BY PLAYER_ID)"
594,Y,Y,"SELECT ROUND( ( WITH T1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT COUNT(DISTINCT T1.PLAYER_ID) FROM T1 JOIN ACTIVITY T2 ON (T1.PLAYER_ID,T1.FIRST_LOGIN + 1) = (T2.PLAYER_ID,T2.EVENT_DATE) WHERE T2.PLAYER_ID IS NOT NULL ) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION"
595,Y,N,"WITH ACTIVITY_SUMMARY AS( SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANKING FROM ACTIVITY), PLAYERS_SUMMARY AS( SELECT PLAYER_ID, CASE WHEN DATEDIFF(EVENT_DATE, LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC)) = 1 THEN 1 ELSE 0 END AS DIFF_DAYS FROM ACTIVITY_SUMMARY WHERE LOGIN_RANKING <=2) SELECT ROUND(SUM(DIFF_DAYS)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM PLAYERS_SUMMARY"
596,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE = DATE_ADD(A.EVENT_DATE, INTERVAL 1 DAY)"
597,Y,Y,"WITH FIRST_LOGINS AS ( SELECT * FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN ( SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY 1 ) ), CTE AS ( SELECT FL.PLAYER_ID, COALESCE(A.GAMES_PLAYED IS NOT NULL,0) AS NUM FROM FIRST_LOGINS FL LEFT JOIN ACTIVITY A ON FL.PLAYER_ID = A.PLAYER_ID AND A.EVENT_DATE = FL.EVENT_DATE + 1 ) SELECT ROUND(SUM(NUM) / COUNT(NUM),2) AS FRACTION FROM CTE"
598,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID)) AS LOGDIFF FROM ACTIVITY ) SELECT ROUND (SUM(CASE WHEN LOGDIFF=1 THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM CTE"
599,N,N,"SELECT ROUND(IFNULL(TEMP.CONS,0)/COUNT(DISTINCT A.PLAYER_ID),2)FRACTION FROM (SELECT COUNT(DISTINCT PLAYER_ID)CONS FROM(SELECT *,MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID)MIN_DATE FROM ACTIVITY)TEMP WHERE DATEDIFF(EVENT_DATE,MIN_DATE)=1)TEMP,ACTIVITY A"
600,Y,Y,"SELECT ROUND(SUM(CASE WHEN T1.EVENT_DATE - T2.FIRST_LOGIN = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT T2.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) T2 JOIN ACTIVITY T1 ON T1.PLAYER_ID = T2.PLAYER_ID"
601,Y,Y,"WITH A AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(A1.PLAYER_ID), 2) AS FRACTION FROM A A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN + 1 = A2.EVENT_DATE"
602,N,N,"WITH TMP AS ( SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LAST_EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RANKING FROM ACTIVITY ), TMP2 AS (SELECT COUNT(*) AS TOTAL FROM (SELECT DISTINCT PLAYER_ID FROM ACTIVITY) TMP3) SELECT ROUND(COUNT(*)/TMP5.TOTAL, 2) AS FRACTION FROM (SELECT DISTINCT T1.PLAYER_ID, T2.TOTAL FROM TMP T1 JOIN TMP2 T2 WHERE T1.RANKING=2 AND (NOT ISNULL(LAST_EVENT_DATE)) AND DATEDIFF(EVENT_DATE,LAST_EVENT_DATE)='1') TMP5"
603,Y,N,"SELECT ROUND((SELECT COUNT(DISTINCT A1.PLAYER_ID) FROM ACTIVITY AS A1 JOIN ACTIVITY AS A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, A2.EVENT_DATE) = -1 WHERE (A1.PLAYER_ID, A1.EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID) ) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY"
604,N,N,"WITH ACTIVITYRANK AS (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1,NULL) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS EVENT_RANK FROM ACTIVITY), TOTAL_PLAYERS AS (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYERS FROM ACTIVITY) SELECT ROUND(COUNT(A.PLAYER_ID)/TOTAL_PLAYERS,2) AS FRACTION FROM ACTIVITYRANK A,TOTAL_PLAYERS T WHERE EVENT_RANK = 1 AND DATEDIFF(NEXT_EVENT_DATE,EVENT_DATE) = 1"
605,Y,N,"SELECT ROUND(SUM(CASE WHEN DIFF=1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID) ,2) AS FRACTION FROM ( SELECT PLAYER_ID, DATEDIFF(EVENT_DATE,FIRST_VALUE(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) AS DIFF FROM ACTIVITY ) A"
606,Y,Y,"SELECT ROUND(SUM(CASE WHEN CONSECUTIVE_DAY_CHECK = 1 THEN 1 ELSE 0 END)/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID, FIRST_VALUE(CONSECUTIVE_DAYS) OVER (PARTITION BY PLAYER_ID) AS CONSECUTIVE_DAY_CHECK FROM (SELECT PLAYER_ID, CASE WHEN LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) - EVENT_DATE = 1 THEN 1 ELSE 0 END AS CONSECUTIVE_DAYS FROM ACTIVITY) TEMP) T"
607,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID), 2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY 1) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN = A2.EVENT_DATE - 1"
608,Y,Y,"SELECT ROUND(COUNT( B.PLAYER_ID)/COUNT( A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS DA_TE FROM ACTIVITY GROUP BY PLAYER_ID )A LEFT JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE= A.DA_TE + 1"
609,Y,Y,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/COUNT(DISTINCT TEMP.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A1 RIGHT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FST_LOGIN FROM ACTIVITY A2 GROUP BY A2.PLAYER_ID )TEMP ON A1.PLAYER_ID = TEMP.PLAYER_ID AND A1.EVENT_DATE = TEMP.FST_LOGIN + 1"
610,Y,Y,"WITH T AS ( SELECT PLAYER_ID, CASE WHEN EVENT_DATE - MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) = 1 THEN 1 ELSE 0 END AS S FROM ACTIVITY ) SELECT ROUND(SUM(T.S)/COUNT(DISTINCT T.PLAYER_ID),2) AS FRACTION FROM T"
611,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(A.PLAYER_ID), 2) AS FRACTION FROM (SELECT (PLAYER_ID), MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY B ON A.FIRST_LOGIN +1 = B.EVENT_DATE AND A.PLAYER_ID = B.PLAYER_ID"
612,Y,N,"WITH CTE AS (SELECT PLAYER_ID,EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY) SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE,FIRST_LOGIN)=1 THEN 1 END)/ COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM CTE"
613,Y,N,"WITH TOTAL_PLAYER AS( SELECT COUNT(DISTINCT PLAYER_ID) AS NUMBER_OF_PLAYER FROM ACTIVITY ), FIRST_LOGIN AS( SELECT PLAYER_ID, EVENT_DATE AS FIRST_DATE FROM( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK FROM ACTIVITY) AS TEMP WHERE RNK = 1 ), SECOND_LOGIN AS( SELECT F.PLAYER_ID FROM FIRST_LOGIN F JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, F.FIRST_DATE) = 1), SECOND_PLAYER AS( SELECT COUNT(DISTINCT PLAYER_ID) AS NUMBER_OF_SECOND FROM SECOND_LOGIN ) SELECT ROUND(NUMBER_OF_SECOND/(SELECT NUMBER_OF_PLAYER FROM TOTAL_PLAYER),2) AS FRACTION FROM SECOND_PLAYER"
614,Y,Y,"WITH CTE1 AS ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NUMBER FROM ACTIVITY) SELECT ROUND(COUNT(C1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM CTE1 AS C1 JOIN CTE1 AS C2 ON C1.PLAYER_ID = C2.PLAYER_ID AND C1.NUMBER = C2.NUMBER-1 WHERE C1.NUMBER = 1 AND C1.EVENT_DATE = C2.EVENT_DATE - 1"
615,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY AS A LEFT JOIN ( SELECT PLAYER_ID,FIRST_VALUE(EVENT_DATE)OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)AS FIRST_LOGIN FROM ACTIVITY ) AS B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,B.FIRST_LOGIN) = 1"
616,Y,N,"SELECT ROUND(COUNT(T1.PLAYER_ID)/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT DISTINCT A1.PLAYER_ID AS PLAYER_ID , A1.EVENT_DATE AS E1, A2.EVENT_DATE AS E2 FROM ACTIVITY A1 INNER JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY 1) A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, A2.EVENT_DATE) = 1) T1"
617,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTLOGIN FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(CTE.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE JOIN ACTIVITY B WHERE CTE.PLAYER_ID=B.PLAYER_ID AND CTE.FIRSTLOGIN+1=B.EVENT_DATE"
618,Y,Y,"WITH R1 AS (SELECT PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID HAVING (PLAYER_ID,MIN(EVENT_DATE)+1) IN (SELECT PLAYER_ID,EVENT_DATE FROM ACTIVITY)) , R2 AS (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL FROM ACTIVITY) SELECT ROUND((SELECT COUNT(*) FROM R1)/(SELECT TOTAL FROM R2),2) AS FRACTION FROM DUAL"
619,Y,Y,"SELECT ROUND(COUNT(DISTINCT T1.PLAYER_ID)/COUNT(DISTINCT A1.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) T1 ON A1.PLAYER_ID = T1.PLAYER_ID AND A1.EVENT_DATE = T1.MIN_DATE+1"
620,Y,N,"WITH MIN_DATE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS START_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND((COUNT(DISTINCT M.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY)), 2) FRACTION FROM MIN_DATE M JOIN ACTIVITY A ON M.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(M.START_DATE, A.EVENT_DATE) =-1"
621,Y,N,"WITH TEMP AS( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DATE FROM ACTIVITY) SELECT ROUND( COUNT(DISTINCT TEMP.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2 ) AS FRACTION FROM TEMP WHERE DATEDIFF(TEMP.EVENT_DATE, TEMP.FIRST_DATE) = 1"
622,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY 1 ) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_DATE = A2.EVENT_DATE -1"
623,Y,N,"WITH T AS (SELECT PLAYER_ID, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID)) AS MIN_LOGIN_DIFF FROM ACTIVITY) SELECT ROUND(SUM(CASE WHEN MIN_LOGIN_DIFF = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT(PLAYER_ID)),2) AS FRACTION FROM T"
624,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS T1 LEFT OUTER JOIN ACTIVITY AS T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOGIN + 1 = T2.EVENT_DATE"
625,Y,N,"SELECT ROUND(SUM(CASE WHEN DIFF = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, FIRST_VALUE(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_DATE , DATEDIFF(EVENT_DATE, FIRST_VALUE(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) AS DIFF FROM ACTIVITY)SUB"
626,Y,N,"WITH A AS ( SELECT *, LAG(EVENT_DATE) OVER(ORDER BY PLAYER_ID,EVENT_DATE) AS LAG_ED, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY PLAYER_ID) AS RN FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM A WHERE RN=2 AND DATEDIFF(EVENT_DATE, LAG_ED)=1)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM A), 2) AS FRACTION"
627,Y,N,"SELECT ROUND(SUM(DATEDIFF(EVENT_DATE,PREVI)=1 AND R=2) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ),2) FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, LAG(EVENT_DATE,1,'1900-01-01') OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) PREVI, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) R FROM ACTIVITY) P"
628,Y,Y,"WITH FIRST_DATE AS( SELECT PLAYER_ID FROM ACTIVITY GROUP BY PLAYER_ID HAVING (PLAYER_ID, MIN(EVENT_DATE)+1) IN (SELECT PLAYER_ID,EVENT_DATE FROM ACTIVITY) ) SELECT ROUND(COUNT(DISTINCT F.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A ,FIRST_DATE F"
629,Y,N,"WITH LEAD_TABLE AS( SELECT PLAYER_ID, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DAY, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY) SELECT ROUND( SUM(CASE WHEN DATEDIFF(NEXT_DAY, FIRST_LOGIN) = 1 THEN 1 ELSE 0 END)/ COUNT(DISTINCT PLAYER_ID) , 2) AS FRACTION FROM LEAD_TABLE"
630,N,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE-LAG(EVENT_DATE,1) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS DIFF, RANK() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RN FROM ACTIVITY ), SECONDCTE AS ( SELECT COUNT(DISTINCT PLAYER_ID) AS ALL_PLAYERID FROM ACTIVITY ) SELECT ROUND(COUNT(CTE.PLAYER_ID)/(SECONDCTE.ALL_PLAYERID),2) AS FRACTION FROM CTE JOIN SECONDCTE WHERE DIFF=1 AND RN=2"
631,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE - B.FIRST_LOGIN = 1"
632,Y,N,"WITH CTE1 AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) ,2) AS FRACTION FROM CTE1 A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE,A.EVENT_DATE) = 1"
633,Y,Y,"WITH A AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM A INNER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.FIRST_LOGIN + 1 = B.EVENT_DATE"
634,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FLOGIN FROM ACTIVITY GROUP BY 1)A1 LEFT JOIN ACTIVITY A2 ON (A1.FLOGIN+1=A2.EVENT_DATE AND A1.PLAYER_ID=A2.PLAYER_ID)"
635,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, SUBDATE(EVENT_DATE,1)) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID)"
636,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ACTIVITY A JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID = B.PLAYER_ID WHERE DATEDIFF(A.EVENT_DATE, B.FIRST_DATE) =1"
637,Y,N,"WITH CTE AS( SELECT *, LAG(EVENT_DATE) OVER(ORDER BY PLAYER_ID, EVENT_DATE) AS LAG_DAY, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY PLAYER_ID, EVENT_DATE) AS RN FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(PLAYER_ID) FROM CTE WHERE RN = 2 AND DATEDIFF(EVENT_DATE, LAG_DAY) = 1) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION"
638,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID,EVENT_DATE FROM( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RANK_1 FROM ACTIVITY ) T1 WHERE RANK_1 = 1 ) SELECT ROUND(SUM(CASE WHEN A.EVENT_DATE = DATE_ADD(B.EVENT_DATE,INTERVAL 1 DAY) THEN 1 ELSE 0 END )/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN FIRST_LOGIN B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE <> B.EVENT_DATE"
639,Y,N,"SELECT ROUND(COUNT(DISTINCT A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY AS A1 LEFT JOIN ACTIVITY AS A2 ON A1.PLAYER_ID = A2.PLAYER_ID WHERE DATEDIFF(A2.EVENT_DATE,A1.EVENT_DATE) = 1 AND (A1.PLAYER_ID,A1.EVENT_DATE) IN ( SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY PLAYER_ID )"
640,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), PLAYER_NUM AS ( SELECT COUNT(*) FROM FIRST_LOGIN ) SELECT ROUND(COUNT(F.PLAYER_ID)/ (SELECT COUNT(*) FROM FIRST_LOGIN), 2) AS FRACTION FROM ACTIVITY A INNER JOIN FIRST_LOGIN F ON A.PLAYER_ID = F.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,F.EVENT_DATE)=1"
641,Y,Y,"WITH MIN_BASE AS ( SELECT PLAYER_ID , MIN(EVENT_DATE ) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN MIN_BASE B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE - B.FIRST_LOGIN = 1"
642,Y,N,"WITH CNT AS ( SELECT COUNT( DISTINCT PLAYER_ID ) FROM ACTIVITY ) , T AS ( SELECT A1.PLAYER_ID FROM ACTIVITY AS A1 GROUP BY A1.PLAYER_ID HAVING DATE_ADD( MIN( EVENT_DATE ) , INTERVAL 1 DAY ) IN ( SELECT A2.EVENT_DATE FROM ACTIVITY AS A2 WHERE A2.PLAYER_ID = A1.PLAYER_ID ) ) SELECT ROUND( COUNT( T.PLAYER_ID ) / ( TABLE CNT ) , 2 ) AS FRACTION FROM T"
643,Y,Y,"SELECT ROUND(COUNT(DISTINCT(A.PLAYER_ID))/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY AS A INNER JOIN ACTIVITY AS B INNER JOIN (SELECT PLAYER_ID,MIN(EVENT_DATE) AS MINDATE FROM ACTIVITY GROUP BY PLAYER_ID) AS C ON DATE(A.EVENT_DATE)+1=DATE(B.EVENT_DATE) AND A.PLAYER_ID=B.PLAYER_ID AND A.PLAYER_ID=C.PLAYER_ID AND A.EVENT_DATE=C.MINDATE"
644,Y,N,"WITH TEMP AS( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DATE FROM ACTIVITY) SELECT ROUND( COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2 ) AS FRACTION FROM TEMP WHERE DATEDIFF(EVENT_DATE, TEMP.FIRST_DATE) = 1"
645,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTDATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRSTDATE = A2.EVENT_DATE - 1"
646,Y,Y,"WITH TOTAL AS (SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL FROM ACTIVITY), RETENTION AS ( SELECT COUNT(DISTINCT A.PLAYER_ID) RETENTION FROM ACTIVITY A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE - B.EVENT_DATE = 1 AND (B.PLAYER_ID,B.EVENT_DATE) IN (SELECT PLAYER_ID,MIN(EVENT_DATE) FROM ACTIVITY GROUP BY 1) ) SELECT ROUND(RETENTION.RETENTION/TOTAL.TOTAL,2) AS FRACTION FROM TOTAL,RETENTION"
647,Y,N,"WITH PLAYER_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS DATE FROM ACTIVITY GROUP BY PLAYER_ID ), MAIN AS ( SELECT A.PLAYER_ID FROM PLAYER_LOGIN A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.DATE) = 1 ) SELECT ROUND((SELECT COUNT(*) FROM MAIN) / COUNT(DISTINCT(PLAYER_ID)), 2) AS FRACTION FROM ACTIVITY"
648,Y,Y,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS F_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(*)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION FROM ACTIVITY AS AC INNER JOIN FIRST_LOGIN AS FL WHERE AC.PLAYER_ID = FL.PLAYER_ID AND AC.EVENT_DATE - '1 DAY' = FL.F_LOGIN"
649,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_DAY, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS SEC_DAY FROM ACTIVITY) SELECT ROUND(COUNT(*)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM CTE WHERE SEC_DAY - FIRST_DAY = 1"
650,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM(SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTTIME, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) AS NEXTDATE FROM ACTIVITY GROUP BY PLAYER_ID)AS A RIGHT JOIN ACTIVITY B ON A.NEXTDATE = B.EVENT_DATE AND A.PLAYER_ID = B.PLAYER_ID"
651,Y,Y,"SELECT ROUND( COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2 ) AS FRACTION FROM (SELECT DISTINCT PLAYER_ID , MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID ) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_DAY + 1 = T2.EVENT_DATE"
652,Y,N,"WITH CTE2 AS ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1) OVER( PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) AS FIRST_LOGIN FROM ACTIVITY ) SELECT ROUND(COUNT(PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM CTE2),2) AS FRACTION FROM CTE2 WHERE DATEDIFF(CTE2.NEXT_LOGIN, CTE2.FIRST_LOGIN) = 1"
653,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/ COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN = A2.EVENT_DATE -1"
654,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID)/COUNT(T1.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID =T2.PLAYER_ID AND T1.EVENT_DATE =T2.EVENT_DATE -1"
655,Y,Y,"WITH CTE_FIRST_LOGIN AS (SELECT PLAYER_ID , MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(AVG(CASE WHEN A.PLAYER_ID IS NULL THEN 0 ELSE 1 END),2) AS FRACTION FROM CTE_FIRST_LOGIN F LEFT JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND F.FIRST_DATE + 1 = A.EVENT_DATE"
656,Y,Y,"SELECT ROUND(COUNT(A.PLAYER_ID)/COUNT(FL.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) FL LEFT JOIN ACTIVITY A ON FL.PLAYER_ID = A.PLAYER_ID AND FL.FIRST_LOGIN = A.EVENT_DATE - 1"
657,Y,N,"WITH CTE AS ( SELECT *, IF(TIMESTAMPDIFF(DAY, MIN_DATE, EVENT_DATE) = 1, 1, 0) AS SECOND FROM ( SELECT *, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID) AS MIN_DATE FROM ACTIVITY ) T ) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) AS CT FROM CTE WHERE SECOND = 1 ) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
658,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID)/COUNT(A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) AS A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN = A2.EVENT_DATE - 1"
659,Y,N,"WITH CTE AS ( SELECT DISTINCT(PLAYER_ID) FROM ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LEAD_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS SEQ FROM ACTIVITY) SUB WHERE DATEDIFF(EVENT_DATE, LEAD_DATE) = -1 AND SEQ = 1) SELECT ROUND((SELECT COUNT(*) FROM CTE)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
660,Y,N,"WITH NEXT_DAY AS ( SELECT PLAYER_ID, EVENT_DATE, COALESCE(LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) AS CONSEC_DATE FROM ACTIVITY A1), DATEDIFF_CALC AS ( SELECT PLAYER_ID, EVENT_DATE, CONSEC_DATE, DATEDIFF(CONSEC_DATE, EVENT_DATE) AS DATE_DIFF FROM NEXT_DAY) SELECT ROUND(COUNT(DISTINCT(DC.PLAYER_ID)) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM DATEDIFF_CALC DC WHERE DC.DATE_DIFF = 1 AND ((DC.PLAYER_ID, DC.EVENT_DATE) IN (SELECT A.PLAYER_ID, MIN(A.EVENT_DATE) AS EVENT_DATE FROM ACTIVITY A WHERE DC.PLAYER_ID = A.PLAYER_ID GROUP BY A.PLAYER_ID))"
661,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A LEFT JOIN ( SELECT A.PLAYER_ID, MIN(A.EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY A GROUP BY A.PLAYER_ID) AS B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.FIRST_LOGIN) = 1"
662,Y,Y,"SELECT ROUND(SUM(TEMP.IS_VISIT_SECOND_DAY)/COUNT(TEMP.IS_VISIT_SECOND_DAY), 2) AS FRACTION FROM ( SELECT A1.PLAYER_ID, IF( MIN(A1.EVENT_DATE) + 1 IN (SELECT EVENT_DATE FROM ACTIVITY AS A2 WHERE A2.PLAYER_ID = A1.PLAYER_ID ), 1, 0) AS IS_VISIT_SECOND_DAY FROM ACTIVITY AS A1 GROUP BY PLAYER_ID ) AS TEMP"
663,Y,Y,"SELECT ROUND((COUNT(T1.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID)),2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T1 ON A1.EVENT_DATE = T1.MIN_DATE+1 AND A1.PLAYER_ID = T1.PLAYER_ID"
664,Y,Y,"WITH CTE AS (SELECT PLAYER_ID,MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT CTE.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN CTE ON A.PLAYER_ID = CTE.PLAYER_ID AND A.EVENT_DATE = CTE.FIRST_LOG + 1"
665,Y,Y,"WITH CTE AS (SELECT PLAYER_ID, MIN(EVENT_DATE) FL FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT CTE.PLAYER_ID)/(SELECT COUNT(DISTINCT B.PLAYER_ID) FROM ACTIVITY B),2) AS FRACTION FROM CTE JOIN ACTIVITY B ON CTE.PLAYER_ID=B.PLAYER_ID AND CTE.FL=B.EVENT_DATE-1"
666,Y,Y,"SELECT ROUND(AVG(LOG), 2) AS FRACTION FROM (SELECT T1.PLAYER_ID, T1.FIRST, (CASE WHEN (T1.PLAYER_ID, T1.FIRST + 1) IN (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY) THEN 1 ELSE 0 END) AS LOG FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST FROM ACTIVITY GROUP BY PLAYER_ID) T1) T2"
667,Y,Y,"WITH INITIAL_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ), DAY_TWO_LOGIN AS ( SELECT A.PLAYER_ID FROM ACTIVITY A JOIN INITIAL_LOGIN IL ON A.PLAYER_ID = IL.PLAYER_ID WHERE FIRST_DATE = EVENT_DATE - 1 ) SELECT ROUND(COUNT(DT.PLAYER_ID) / COUNT(IL.PLAYER_ID), 2) AS FRACTION FROM INITIAL_LOGIN IL LEFT OUTER JOIN DAY_TWO_LOGIN DT ON IL.PLAYER_ID = DT.PLAYER_ID"
668,Y,Y,"SELECT ROUND(COUNT(DISTINCT(T1.PLAYER_ID)) / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) T1 JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOG = T2.EVENT_DATE - 1"
669,Y,Y,"WITH T AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS MIN_EVENT FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND((COUNT(T.PLAYER_ID)/ (SELECT COUNT(PLAYER_ID) FROM T)), 2) AS FRACTION FROM T INNER JOIN ACTIVITY AS T2 ON T.PLAYER_ID = T2.PLAYER_ID AND (T2.EVENT_DATE = T.MIN_EVENT + 1)"
670,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A INNER JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(B.EVENT_DATE, A.EVENT_DATE) = 1"
671,Y,Y,"SELECT ROUND(SUM(CASE WHEN A.MIN_DATE + 1 = B.EVENT_DATE THEN 1 ELSE 0 END)/COUNT(DISTINCT B.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) MIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A JOIN ACTIVITY B ON B.PLAYER_ID = A.PLAYER_ID"
672,Y,N,"WITH TEMP AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(A.PLAYER_ID) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A JOIN TEMP T ON A.PLAYER_ID = T.PLAYER_ID WHERE DATEDIFF(EVENT_DATE,FIRST_LOG) = 1"
673,Y,N,"WITH CTE AS (SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS RNK, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_LOGIN FROM ACTIVITY) SELECT ROUND((SUM(CASE WHEN DATEDIFF(NEXT_LOGIN,EVENT_DATE) = 1 THEN 1 ELSE 0 END)) / (COUNT(DISTINCT PLAYER_ID)),2) AS FRACTION FROM CTE WHERE RNK = 1"
674,Y,Y,"SELECT ROUND(SUM(CASE WHEN NEW.EVENT_DATE2 IS NULL THEN 0 ELSE 1 END)/COUNT(DISTINCT NEW.PLAYER_ID), 2) AS FRACTION FROM (SELECT A1.PLAYER_ID, A1.EVENT_DATE AS EVENT_DATE1, A2.EVENT_DATE AS EVENT_DATE2, ROW_NUMBER() OVER(PARTITION BY A1.PLAYER_ID ORDER BY A1.EVENT_DATE ASC) AS R FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A2.EVENT_DATE - A1.EVENT_DATE=1 ) NEW WHERE NEW.R = 1"
675,Y,N,"SELECT ROUND(COUNT(NEXT_DAY)/ COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT JOIN (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE),INTERVAL 1 DAY) AS NEXT_DAY FROM ACTIVITY GROUP BY PLAYER_ID) B ON A.PLAYER_ID=B.PLAYER_ID AND A.EVENT_DATE=B.NEXT_DAY"
676,Y,N,"SELECT ROUND(COUNT(TBL1.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) AS TBL1, ACTIVITY AS TBL2 WHERE DATEDIFF(TBL2.EVENT_DATE,TBL1.EVENT_DATE) = 1 AND TBL1.PLAYER_ID = TBL2.PLAYER_ID"
677,Y,Y,"SELECT ROUND((SELECT COUNT(PLAYER_ID) FROM (SELECT *,EVENT_DATE - LAG(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS DATE_DIFF,ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS ROW_NUM FROM ACTIVITY) X WHERE DATE_DIFF = 1 AND ROW_NUM = 2) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
678,Y,N,"WITH CTE AS ( SELECT COUNT(DISTINCT A.PLAYER_ID) AS REPEATS FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS DATE_FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) AS A INNER JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND TIMESTAMPDIFF(DAY, A.DATE_FIRST_LOGIN, B.EVENT_DATE) = 1 ) SELECT ROUND( (SELECT REPEATS FROM CTE) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) , 2) AS FRACTION"
679,Y,N,"SELECT ROUND((B2.REPLAYER_NUM / B1.PLAYER_NUM),2) AS FRACTION FROM ( SELECT COUNT(DISTINCT(PLAYER_ID)) AS PLAYER_NUM FROM ACTIVITY ) B1, ( SELECT COUNT(A1.PLAYER_ID) AS REPLAYER_NUM FROM ACTIVITY AS A1 JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE, A2.FIRST_LOGIN) = 1 ) B2"
680,Y,Y,"SELECT ROUND(COUNT(B.PLAYER_ID) / COUNT(A.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT JOIN (SELECT PLAYER_ID, EVENT_DATE FROM ACTIVITY) B ON A.PLAYER_ID = B.PLAYER_ID AND A.EVENT_DATE + 1 = B.EVENT_DATE"
681,Y,Y,"SELECT ROUND(COUNT(T2.PLAYER_ID) / COUNT(T1.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOG FROM ACTIVITY GROUP BY PLAYER_ID ) T1 LEFT JOIN ACTIVITY T2 ON T1.PLAYER_ID = T2.PLAYER_ID AND T1.FIRST_LOG = T2.EVENT_DATE - 1"
682,Y,Y,"SELECT ROUND((CONS_PLAYERS/TOTAL_PLAYERS),2) AS FRACTION FROM ( SELECT COUNT(DISTINCT PLAYER_ID) AS TOTAL_PLAYERS , COUNT(DISTINCT CASE WHEN NEXT_DATE - EVENT_DATE = 1 THEN PLAYER_ID ELSE NULL END ) AS CONS_PLAYERS FROM ( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE,1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_DATE FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS ROWNUMS FROM ACTIVITY )A WHERE ROWNUMS <= 2 )B )C"
683,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT *, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NXT FROM ACTIVITY) A WHERE DATEDIFF(NXT, EVENT_DATE)=1 AND (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, MIN(EVENT_DATE) FROM ACTIVITY GROUP BY 1)"
684,Y,Y,"SELECT ROUND(COUNT(A2.PLAYER_ID) / COUNT(A1.PLAYER_ID), 2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN ACTIVITY A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.FIRST_LOGIN = A2.EVENT_DATE - 1"
685,Y,N,"WITH CTE AS (SELECT DISTINCT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID), CTE1 AS (SELECT A.PLAYER_ID FROM ACTIVITY A JOIN CTE ON A.PLAYER_ID=CTE.PLAYER_ID AND A.EVENT_DATE=DATE_ADD(FIRST_LOGIN_DATE, INTERVAL 1 DAY)) SELECT ROUND(COUNT(CTE1.PLAYER_ID)/(COUNT(CTE.PLAYER_ID)),2) AS FRACTION FROM CTE LEFT JOIN CTE1 ON CTE.PLAYER_ID=CTE1.PLAYER_ID"
686,Y,N,"SELECT ROUND(COUNT(FL.PLAYER_ID)/COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT OUTER JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DT FROM ACTIVITY GROUP BY PLAYER_ID ) FL ON FL.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, FL.FIRST_LOGIN_DT) = 1"
687,Y,N,"SELECT ROUND(COUNT(A1.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM ACTIVITY AS A1, (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_TIME FROM ACTIVITY GROUP BY PLAYER_ID) AS A2 WHERE A1.PLAYER_ID=A2.PLAYER_ID AND DATEDIFF(A1.EVENT_DATE,A2.FIRST_TIME)=1"
688,Y,N,"SELECT ROUND((COUNT(IF(DATEDIFF(A1.EVENT_DATE,A2.EVENT_DATE) = -1, TRUE, NULL)) /COUNT(DISTINCT A1.PLAYER_ID)), 2) AS FRACTION FROM (SELECT A.PLAYER_ID, MIN(A.EVENT_DATE) AS EVENT_DATE FROM ACTIVITY A GROUP BY A.PLAYER_ID) AS A1, ACTIVITY A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID"
689,Y,Y,"WITH CTE_CONSECUTIVE_PLAYERS AS( SELECT PLAYER,PLAYER_COPY FROM( (SELECT PLAYER_ID AS PLAYER, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A1 LEFT JOIN (SELECT PLAYER_ID AS PLAYER_COPY, EVENT_DATE FROM ACTIVITY) A2 ON A1.PLAYER = A2.PLAYER_COPY AND A1.FIRST_DATE+1 = A2.EVENT_DATE)) SELECT ROUND(COUNT(DISTINCT PLAYER_COPY)/COUNT(DISTINCT PLAYER),2) AS FRACTION FROM CTE_CONSECUTIVE_PLAYERS"
690,Y,Y,"SELECT ROUND( COUNT(DISTINCT A2.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY AS A1 LEFT JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) AS A2 ON (A1.PLAYER_ID = A2.PLAYER_ID) AND (A1.EVENT_DATE = A2.LOGIN_DATE+1)"
691,Y,Y,"WITH DIFF_TBL AS (SELECT *, CASE WHEN EVENT_DATE - MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) = 1 THEN 1 ELSE 0 END AS DIFF FROM ACTIVITY) SELECT ROUND(COUNT(CASE WHEN DIFF = 1 THEN PLAYER_ID END)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM DIFF_TBL"
692,Y,Y,"WITH CAL AS (SELECT PLAYER_ID ,MIN(EVENT_DATE) AS FIRST_DAY FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY A INNER JOIN CAL ON CAL.PLAYER_ID = A.PLAYER_ID AND (CAL.FIRST_DAY +1 = A.EVENT_DATE)"
693,Y,N,"WITH FL AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(A.EVENT_DATE)/COUNT(FL.PLAYER_ID),2) AS FRACTION FROM FL LEFT JOIN ACTIVITY A ON FL.PLAYER_ID = A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, FL.FIRST_LOGIN_DATE)=1"
694,Y,Y,"WITH NUM AS ( SELECT PLAYER_ID, CASE WHEN EVENT_DATE-LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) = -1 AND EVENT_DATE = MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) THEN 1 ELSE 0 END AS CONSECTIVE_PLAY FROM ACTIVITY ) SELECT ROUND(COUNT(DISTINCT CASE WHEN CONSECTIVE_PLAY = 1 THEN PLAYER_ID END)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM NUM"
695,Y,Y,"WITH FIRST_LOGIN AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( (SELECT COUNT(DISTINCT A1.PLAYER_ID) AS NUMERATOR FROM ACTIVITY AS A1 INNER JOIN FIRST_LOGIN AS A2 ON A1.PLAYER_ID = A2.PLAYER_ID AND A1.EVENT_DATE - A2.FIRST_LOGIN_DATE=1 )/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY) ,2) AS FRACTION"
696,Y,N,"SELECT ROUND(COUNT(DISTINCT A2.PLAYER_ID) / COUNT(DISTINCT A1.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY A1 LEFT JOIN ACTIVITY A2 ON DATEDIFF(A2.EVENT_DATE, A1.EVENT_DATE) = 1 AND A1.PLAYER_ID = A2.PLAYER_ID AND (A1.PLAYER_ID, A1.EVENT_DATE) IN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID)"
697,Y,Y,"WITH DF1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGGEDIN FROM ACTIVITY GROUP BY 1) SELECT ROUND(1.00*COUNT(DISTINCT A.PLAYER_ID)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ), 2) AS FRACTION FROM ACTIVITY A JOIN DF1 ON A.PLAYER_ID = DF1.PLAYER_ID AND A.EVENT_DATE - FIRST_LOGGEDIN = 1"
698,Y,N,"WITH NEXT_EVENT_DATES_AND_DATE_RANKS_BY_PLAYER AS ( SELECT PLAYER_ID, EVENT_DATE, RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS DATE_RANK_FOR_PLAYER, LEAD(EVENT_DATE, 1) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_EVENT_DATE FROM ACTIVITY ) SELECT ROUND(COUNT(CASE WHEN DATEDIFF(NEXT_EVENT_DATE, EVENT_DATE) = 1 THEN SUCCESS END) / COUNT(PLAYER_ID), 2) AS FRACTION FROM NEXT_EVENT_DATES_AND_DATE_RANKS_BY_PLAYER WHERE DATE_RANK_FOR_PLAYER = 1"
699,Y,N,"SELECT ROUND(COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2) AS FRACTION FROM (SELECT PLAYER_ID,EVENT_DATE,ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS LOGIN_RANK,LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS NEXT_LOGIN FROM ACTIVITY ) LOGIN_TABLE WHERE LOGIN_TABLE.LOGIN_RANK = 1 AND DATEDIFF(LOGIN_TABLE.NEXT_LOGIN, LOGIN_TABLE.EVENT_DATE) = 1"
700,Y,N,"SELECT ROUND(SUM(CASE WHEN DATEDIFF(EVENT_DATE,FIRST_LOGIN)=1 THEN 1 ELSE 0 END)/(COUNT(DISTINCT PLAYER_ID)),2) FRACTION FROM (SELECT *, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID) FIRST_LOGIN FROM ACTIVITY) T"
701,Y,N,"SELECT ROUND(COUNT(*)/ (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM (SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS NEXT_DATE FROM ACTIVITY) SUB1 JOIN ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SUB2 ON SUB1.PLAYER_ID = SUB2.PLAYER_ID AND SUB1.EVENT_DATE = SUB2.EVENT_DATE AND SUB1.NEXT_DATE IS NOT NULL AND DATE_ADD(SUB1.EVENT_DATE, INTERVAL 1 DAY)=SUB1.NEXT_DATE"
702,Y,N,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/(COUNT(DISTINCT A.PLAYER_ID)),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) AS A LEFT JOIN ACTIVITY AS B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.EVENT_DATE) = -1"
703,Y,Y,"SELECT ROUND(SUM(CASE WHEN T.FIRST_LOGIN_DATE = A.EVENT_DATE - 1 THEN 1.0 ELSE 0.0 END ) /(COUNT(DISTINCT T.PLAYER_ID)),2) AS FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN_DATE FROM ACTIVITY GROUP BY PLAYER_ID) T, ACTIVITY A WHERE T.PLAYER_ID = A.PLAYER_ID"
704,N,N,"SELECT ROUND((TEMP2.PLAYER_COUNT) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY, (SELECT COUNT(PLAYER_ID) AS PLAYER_COUNT FROM (SELECT DISTINCT PLAYER_ID, CASE WHEN (DATEDIFF(EVENT_DATE,LEAD(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC)) = -1 AND (EVENT_DATE = MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID))) THEN 1 ELSE 0 END AS CONSECTIVE_PLAY FROM ACTIVITY) AS TEMP WHERE TEMP.CONSECTIVE_PLAY=1) AS TEMP2"
705,Y,N,"SELECT ROUND(SUM(CASE WHEN DATEDIFF(LOGIN_BACK, EVENT_DATE) = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM( SELECT PLAYER_ID, EVENT_DATE, LEAD(EVENT_DATE, 1)OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS LOGIN_BACK, MIN(EVENT_DATE)OVER(PARTITION BY PLAYER_ID) AS MINI FROM ACTIVITY ) TT WHERE EVENT_DATE = MINI"
706,Y,N,"WITH FIRST_LOGIN_TABLE(PLAYER_ID, FIRST_LOGIN) AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM FIRST_LOGIN_TABLE FT, ACTIVITY A WHERE FT.PLAYER_ID=A.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, FT.FIRST_LOGIN)=1"
707,Y,N,"SELECT ROUND (COUNT(DISTINCT PLAYER_ID)/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, ROW_NUMBER() OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC ) AS FIRST_LOGIN, LEAD(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC ) AS NEXT_LOGIN FROM ACTIVITY ) TEMP1 WHERE TEMP1.FIRST_LOGIN = 1 AND TEMP1.NEXT_LOGIN IS NOT NULL AND DATEDIFF(TEMP1.NEXT_LOGIN,TEMP1.EVENT_DATE) = 1"
708,Y,N,"WITH T AS (SELECT PLAYER_ID, DEVICE_ID, EVENT_DATE, GAMES_PLAYED, FIRST_VALUE(DATE_ADD(EVENT_DATE, INTERVAL 1 DAY)) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC ) AS LAGG FROM ACTIVITY) SELECT ROUND((SELECT COUNT(DISTINCT PLAYER_ID) FROM T WHERE T.EVENT_DATE = T.LAGG) / COUNT(DISTINCT PLAYER_ID), 2) AS FRACTION FROM T"
709,Y,N,"WITH TEMP AS ( SELECT *, LAG(EVENT_DATE) OVER(ORDER BY PLAYER_ID, EVENT_DATE) AS LAG_ED , ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY PLAYER_ID, EVENT_DATE) AS RN FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(PLAYER_ID) FROM TEMP WHERE RN=2 AND DATEDIFF(EVENT_DATE, LAG_ED)=1) /(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION"
710,Y,Y,"SELECT ROUND(( SELECT COUNT(DISTINCT A1.PLAYER_ID) C1 FROM ACTIVITY A1, ( SELECT A3.PLAYER_ID, MIN(A3.EVENT_DATE) EVENT_DATE FROM ACTIVITY A3 GROUP BY A3.PLAYER_ID ) A2 WHERE A1.PLAYER_ID = A2.PLAYER_ID AND (A1.EVENT_DATE = A2.EVENT_DATE + 1) ) / COUNT(DISTINCT A3.PLAYER_ID),2) FRACTION FROM ACTIVITY A3"
711,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND(SUM(CASE WHEN DATEDIFF(A.EVENT_DATE, FIRST_DATE) = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM CTE JOIN ACTIVITY A ON CTE.PLAYER_ID = A.PLAYER_ID"
712,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM (SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID) A LEFT OUTER JOIN ACTIVITY B ON A.PLAYER_ID=B.PLAYER_ID AND A.EVENT_DATE+1=B.EVENT_DATE"
713,N,N,"WITH FIRST_LOGINS AS ( SELECT ACT.PLAYER_ID, MIN(ACT.EVENT_DATE) AS FIRST_DATE FROM ACTIVITY ACT GROUP BY ACT.PLAYER_ID), CONSEQ_PLAYERS AS ( SELECT COUNT(DISTINCT ACT.PLAYER_ID) AS CNT_CONSEQ FROM ACTIVITY ACT INNER JOIN FIRST_LOGINS FL ON ACT.PLAYER_ID = FL.PLAYER_ID WHERE ACT.EVENT_DATE - FL.FIRST_DATE = 1) SELECT ROUND(CP.CNT_CONSEQ / COUNT(DISTINCT ACT.PLAYER_ID), 2) AS FRACTION FROM ACTIVITY ACT CROSS JOIN CONSEQ_PLAYERS CP"
714,Y,N,"WITH CTE AS ( SELECT PLAYER_ID, EVENT_DATE, MIN(EVENT_DATE) OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS FIRST_EVENT_DATE FROM ACTIVITY ), CTE2 AS ( SELECT COUNT(PLAYER_ID) AS SPECIAL_PLAYERS FROM CTE WHERE DATEDIFF(EVENT_DATE, FIRST_EVENT_DATE) = 1 ) SELECT ROUND((SELECT SPECIAL_PLAYERS FROM CTE2) / COUNT(DISTINCT PLAYER_ID),2) AS FRACTION FROM ACTIVITY"
715,Y,N,"SELECT ROUND(COUNT(DISTINCT(PLAYER_ID))/(SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY),2) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, EVENT_DATE) IN (SELECT PLAYER_ID, DATE_ADD(MIN(EVENT_DATE), INTERVAL 1 DAY) FROM ACTIVITY GROUP BY PLAYER_ID )"
716,Y,N,"WITH T1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRSTLOG FROM ACTIVITY GROUP BY 1), T2 AS (SELECT A.PLAYER_ID FROM ACTIVITY A LEFT JOIN T1 ON A.PLAYER_ID=T1.PLAYER_ID AND DATEDIFF(A.EVENT_DATE,T1.FIRSTLOG)=1 WHERE T1.PLAYER_ID IS NOT NULL GROUP BY 1) SELECT ROUND(COUNT(*) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) AS FRACTION FROM T2"
717,Y,N,"WITH PLAYER_FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST_LOGIN FROM ACTIVITY GROUP BY 1 ) SELECT ROUND(COUNT(A.PLAYER_ID) / COUNT(F.PLAYER_ID), 2) AS FRACTION FROM PLAYER_FIRST_LOGIN F LEFT JOIN ACTIVITY A ON F.PLAYER_ID = A.PLAYER_ID AND FIRST_LOGIN = DATE_SUB(EVENT_DATE, INTERVAL 1 DAY)"
718,Y,N,"WITH FIRST_LOGIN AS ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(*) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY), 2 ) AS FRACTION FROM ACTIVITY WHERE (PLAYER_ID, DATE_SUB(EVENT_DATE, INTERVAL 1 DAY)) IN (SELECT * FROM FIRST_LOGIN)"
719,Y,N,"WITH CTE AS ( SELECT *, LAG(EVENT_DATE,1) OVER (ORDER BY PLAYER_ID, EVENT_DATE) AS LAG_ED , ROW_NUMBER() OVER(PARTITION BY PLAYER_ID ORDER BY PLAYER_ID, EVENT_DATE) AS RN FROM ACTIVITY ) SELECT ROUND((SELECT COUNT(DISTINCT(PLAYER_ID)) FROM CTE WHERE RN = 2 AND DATEDIFF(EVENT_DATE,LAG_ED) = 1) / (SELECT COUNT(DISTINCT(PLAYER_ID)) FROM ACTIVITY), 2) AS FRACTION"
720,Y,N,"SELECT ROUND(SUM(CASE WHEN LOGIN_DIFFERENCE = 1 THEN 1 ELSE 0 END)/COUNT(DISTINCT(PLAYER_ID)),2) AS FRACTION FROM ( SELECT PLAYER_ID, EVENT_DATE, DATEDIFF(EVENT_DATE, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE)) AS LOGIN_DIFFERENCE FROM ACTIVITY) AS TEMP"
721,Y,N,"WITH CURRENT_LOGS AS (SELECT A.PLAYER_ID, (SELECT EVENT_DATE FROM ACTIVITY WHERE PLAYER_ID = A.PLAYER_ID ORDER BY EVENT_DATE ASC LIMIT 1) AS FIRST_LOGIN FROM (SELECT DISTINCT PLAYER_ID FROM ACTIVITY) A), RESULTS AS (SELECT CL.PLAYER_ID, IF((SELECT COUNT(EVENT_DATE) FROM ACTIVITY WHERE PLAYER_ID = CL.PLAYER_ID AND EVENT_DATE BETWEEN CL.FIRST_LOGIN AND DATE_ADD(FIRST_LOGIN, INTERVAL 1 DAY)) = 2, 'YES', 'NO') AS CONSECUTIVE_LOGIN FROM CURRENT_LOGS CL ORDER BY CL.PLAYER_ID ASC ) (SELECT ROUND(COUNT(R.PLAYER_ID) / (SELECT COUNT(PLAYER_ID) FROM RESULTS), 2 ) AS FRACTION FROM RESULTS R WHERE R.CONSECUTIVE_LOGIN = 'YES' )"
722,Y,N,"WITH TEMP AS ( SELECT PLAYER_ID, EVENT_DATE, DENSE_RANK() OVER(PARTITION BY PLAYER_ID ORDER BY EVENT_DATE ASC) AS RNK FROM ACTIVITY ) SELECT ROUND(SUM(CASE WHEN B.PLAYER_ID IS NULL THEN 0 ELSE 1 END)/COUNT(A.PLAYER_ID),2) AS FRACTION FROM TEMP A LEFT JOIN TEMP B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE = DATE_ADD(A.EVENT_DATE, INTERVAL 1 DAY) WHERE A.RNK = 1"
723,Y,Y,"SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID)/COUNT(DISTINCT C.PLAYER_ID),2) AS FRACTION FROM ( SELECT * FROM ( SELECT *, MIN(EVENT_DATE) OVER (PARTITION BY PLAYER_ID ORDER BY EVENT_DATE) AS FIRST_DATE FROM ACTIVITY )A WHERE EVENT_DATE - FIRST_DATE = 1 )B RIGHT JOIN ACTIVITY C ON B.PLAYER_ID = C.PLAYER_ID"
724,N,N,"SELECT ROUND(CNT2/(SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY),2) FRACTION FROM (SELECT COUNT(G.PLAYER_ID) CNT2, CNT1 FROM ( (SELECT COUNT(DISTINCT PLAYER_ID) CNT1,PLAYER_ID,MIN(EVENT_DATE) EVENT_DATE FROM ACTIVITY A GROUP BY PLAYER_ID ) G JOIN ACTIVITY B ON G.PLAYER_ID=B.PLAYER_ID AND B.EVENT_DATE=G.EVENT_DATE+1))G"
725,Y,Y,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID)/COUNT(T.PLAYER_ID),2) FRACTION FROM (SELECT PLAYER_ID, MIN(EVENT_DATE) FIRST FROM ACTIVITY GROUP BY 1) T LEFT JOIN ACTIVITY A ON T.PLAYER_ID = A.PLAYER_ID AND A.EVENT_DATE - 1 = T.FIRST"
726,Y,N,"SELECT ROUND(COUNT(DISTINCT A.PLAYER_ID) / COUNT(DISTINCT F.PLAYER_ID), 2) AS FRACTION FROM ( SELECT PLAYER_ID, MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) AS F LEFT JOIN ACTIVITY AS A ON A.PLAYER_ID = F.PLAYER_ID AND DATEDIFF(F.EVENT_DATE, A.EVENT_DATE) = -1"
727,Y,Y,"WITH CTE1 AS ( SELECT PLAYER_ID,MIN(EVENT_DATE) AS EVENT_DATE FROM ACTIVITY GROUP BY PLAYER_ID ) SELECT ROUND( COUNT(DISTINCT A.PLAYER_ID) / (SELECT COUNT(DISTINCT PLAYER_ID) FROM ACTIVITY ) ,2) AS FRACTION FROM CTE1 A JOIN ACTIVITY B ON A.PLAYER_ID = B.PLAYER_ID AND B.EVENT_DATE-A.EVENT_DATE = 1"
728,Y,N,"WITH CTE1 AS (SELECT PLAYER_ID, MIN(EVENT_DATE) AS INSTALL_DT FROM ACTIVITY GROUP BY PLAYER_ID) SELECT ROUND(COUNT(DISTINCT B.PLAYER_ID) / COUNT(DISTINCT A.PLAYER_ID),2) AS FRACTION FROM ACTIVITY A LEFT OUTER JOIN CTE1 B ON A.PLAYER_ID = B.PLAYER_ID AND DATEDIFF(A.EVENT_DATE, B.INSTALL_DT) = 1"
